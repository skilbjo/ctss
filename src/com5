



  MAIL   BCD 05/12/69 2020.2   15359         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   MAIL0   MAD            03/18/69    1011.8
-                 
      MAIL       ...MAIL COMMAND                                                                       LM00001    
                  ... LAST MODIFIED 3/17/69 BY R. ROACH                                                LM00002    
                 ...                                                                                   LM00003    
                 ...                                                                                   LM00004    
                  GCLS.(A,0)                                                                      *001 LM00005    
                                                                                                       LM00006    
                  WHENEVER A(1).E.FENCE.OR.A(2).E.FENCE.OR.A(3).E.FENCE                           *002 LM00007    
                  PRFULL.($'R'1INSTRUCTIONS:$)                                                    *003 LM00008    
                  PRFULL.($ '4MAIL NAME1 NAME2 PROB1 PROG1 PROB2 PROG2 ...$)                      *004 LM00009    
                  PRFULL.($ WHERE '=NAME1 NAME2'= IS THE FILE TO BE MAILED,$)                     *005 LM00010    
                  PRFULL.($ AND '=PROBN PROGN'= ARE DIRECTORIES TO WHICH '8$,                     *006 LM00011    
                1  $IT IS TO BE SENT.'B$)                                                         *006 LM00012    
                  CHNCOM.(0)                                                                      *007 LM00013    
                  END OF CONDITIONAL                                                              *008 LM00014    
                                                                                                       LM00015    
                  DIMENSION ME(2)                                                                 *009 LM00016    
                  ATTNAM.(ME(2)...3)                                                              *010 LM00017    
                  FERRTN.(DSKER.)                                                                 *011 LM00018    
                  USER = GLOC.(COMLOC.($USER$))                                                   *012 LM00019    
                  UFDNAM = BZ57.(GLOC.(COMLOC.($UFDNM$)+USER))                                    *013 LM00020    
                  ATTACH.(ME(2),ME(1))                                                            *014 LM00021    
                  GETBUF.(B1,432)                                                                 *015 LM00022    
                  GETBUF.(B2,432)                                                                 *016 LM00023    
                                                                                                       LM00024    
                  FSTATE.(A(1),A(2),Z(7)...8)                                                     *017 LM00025    
                  LTH = Z(7)                                                                      *018 LM00026    
                                                                                                       LM00027    
                  WHENEVER LTH.G.432                                                              *019 LM00028    
                  PRFULL.(RX,A(1)...2,$ MUST BE LESS THAN 1 RECORD LONG.'B$)                      *020 LM00029    
                       CHNCOM.(0)                                                                 *021 LM00030    
                       VECTOR VALUES RX = $'R'X'8$                                                *022 LM00031    
                  OR WHENEVER Z(6).A.10K.NE.0.OR.Z(6).A.20K.NE.0.AND.Z.A.777777K.NE.ME            *023 LM00032    
                       PRFULL.(RX,A(1)...2,$''S MODE PREVENTS READING.'B$)                        *024 LM00033    
                       CHNCOM.(0)                                                                 *025 LM00034    
                  END OF CONDITIONAL                                                              *026 LM00035    
                                                                                                       LM00036    
                  OPEN.($R$,A(1),A(2))                                                            *027 LM00037    
                  RDFILE.(A(1),A(2),1,BUFF(432)...LTH)                                            *028 LM00038    
                  CLOSE.(A(1),A(2))                                                               *029 LM00039    
                                                                                                       LM00040    
                  WHENEVER BUFF(432).RS.18.NE. 777777K                                            *030 LM00041    
                       PRFULL.(RX,A(1)...2,$ MUST BE LINE MARKED.'B$)                             *031 LM00042    
                       CHNCOM.(0)                                                                 *032 LM00043    
                  END OF CONDITIONAL                                                              *033 LM00044    
                                                                                                       LM00045    
                  WHOAMI.(PROB...2)                                                               *034 LM00046    
                  DIMENSION PROG(1)                                                               *035 LM00047    
                  EQUIVALENCE (PROB,PROG(1))                                                      *036 LM00048    
                  PROB1 = LJUST.(PROB)                                                            *037 LM00049    
                  PROG1 = BZ57.(PROG)                                                             *038 LM00050    
                  PROBN = BZ57.(PROB)                                                             *039 LM00051    
                  GETTM.(DATE,TIME)                                                               *040 LM00052    
                  LTH = LTH+11                                                                    *041 LM00053    
                  CINDEX = 3                                                                      *042 LM00054    
                                                                                                       LM00055    
      CKMETA      WHENEVER A(CINDEX).E.$(LIST)$                                                   *043 LM00056    
                       LIST=1B                                                                    *044 LM00057    
                       N1 = A(CINDEX+1)                                                           *045 LM00058    
                       N2 = A(CINDEX+2)                                                           *046 LM00059    
                       BFOPEN.($R$,N1,N2,B1(B1+432),-0,-0,DSKER.)                                 *047 LM00060    
                       GTWDBX.(N1,N2)                                                             *048 LM00061    
                       CINDEX = CINDEX + 3                                                        *049 LM00062    
                       TRANSFER TO CKMETA                                                         *050 LM00063    
                  OR WHENEVER A(CINDEX).E.$     *$.AND.A(CINDEX+1).E.$     *$                     *051 LM00064    
                       CINDEX = CINDEX+2                                                          *052 LM00065    
                       USRCHK.(PROB,PROG,CKMETA)                                                  *053 LM00066    
                       BB=2                                                                       *054 LM00067    
                       TRANSFER TO SRCH                                                           *055 LM00068    
                  OR WHENEVER A(CINDEX).E.$(URGT)$                                                *056 LM00069    
                       CINDEX = CINDEX+1                                                          *057 LM00070    
                       USRCHK.(PROB,PROG,CKMETA)                                                  *058 LM00071    
                       BOX =   MAIL                                                               *059 LM00072    
                       MAIL = $URGENT$                                                            *060 LM00073    
                       TRANSFER TO CKMETA                                                         *061 LM00074    
                  END OF CONDITIONAL                                                              *062 LM00075    
                                                                                                       LM00076    
      GETARG      ARGS.(ALL)                                                                      *063 LM00077    
                  TRANSFER TO GETARG                                                              *064 LM00078    
                                                                                                       LM00079    
      ALL         CONTINUE                                                                        *065 LM00080    
                                                                                                       LM00081    
                  THROUGH ASEND, FOR I=0,2,I.GE.AA                                                *066 LM00082    
      ASEND       SEND.(APRG(I),APRG(I+1))                                                        *067 LM00083    
                                                                                                       LM00084    
      SRCH        WHENEVER BB.G.0                                                                 *068 LM00085    
                       OPNMF.                                                                     *069 LM00086    
      SLOOP            RDMF.(X,Y)                                                                 *070 LM00087    
                       THROUGH BSEND,FOR C=0,2,C.G.BB                                             *071 LM00088    
                       WHENEVER X.E.BPRG(C).OR.BPRG(C).E.$ALLALL$                                 *072 LM00089    
                       WHENEVER Y.E.BPRG(C+1).OR.BPRG(C+1).E.$ALLALL$,SEND.(X,Y)                  *073 LM00090    
                       END OF CONDITIONAL                                                         *074 LM00091    
      BSEND            CONTINUE                                                                   *075 LM00092    
                       TRANSFER TO SLOOP                                                          *076 LM00093    
      EX               BFCLOS.(MFD,FILE)                                                          *077 LM00094    
                  END OF CONDITIONAL                                                              *078 LM00095    
                                                                                                       LM00096    
                  CHNCOM.(0)                                                                      *079 LM00097    
                                                                                                       LM00098    
                                                                                                       LM00099    
                  NORMAL MODE IS INTEGER                                                          *080 LM00100    
                  DIMENSION A(20),APRG(202),BPRG(22)                                              *081 LM00101    
                  DIMENSION B1(0), B2(0)                                                          *082 LM00102    
                  DIMENSION Z(7)                                                                  *083 LM00103    
                  BOOLEAN LIST                                                                    *084 LM00104    
                  VECTOR VALUES MFD=$M.F.D.$                                                      *085 LM00105    
                  VECTOR VALUES UFD=$U.F.D.$                                                      *086 LM00106    
                  VECTOR VALUES FILE=$(FILE)$                                                     *087 LM00107    
                  VECTOR VALUES MAIL=$  MAIL$                                                     *088 LM00108    
                  VECTOR VALUES BOX=$   BOX$                                                      *089 LM00109    
                  VECTOR VALUES BPRG = $ALLALL$, $ALLALL$                                         *090 LM00110    
                  VECTOR VALUES AA = 0                                                            *091 LM00111    
                  VECTOR VALUES BB = 0                                                            *092 LM00112    
                  VECTOR VALUES FENCE=777777777777K                                               *093 LM00113    
                                                                                                       LM00114    
                  DIMENSION BUFF(443)                                                             *094 LM00115    
                  EQUIVALENCE (BUFF(443),LM)                                                      *095 LM00116    
                  VECTOR VALUES LM = 777777000012K                                                *096 LM00117    
                  VECTOR VALUES BUFF(442) = $ FROM $                                              *097 LM00118    
                  EQUIVALENCE (BUFF(441),PROB1), (BUFF(440),PROG1)                                *098 LM00119    
                  VECTOR VALUES BUFF(439) = 603145605757K                                         *099 LM00120    
                  EQUIVALENCE (BUFF(438),PROBN)                                                   *100 LM00121    
                  VECTOR VALUES BUFF(437) = 605757575757K                                         *101 LM00122    
                  EQUIVALENCE (BUFF(436),UFDNAM)                                                  *102 LM00123    
                  VECTOR VALUES BUFF(435) = 605721636057K                                         *103 LM00124    
                  EQUIVALENCE (BUFF(434),DATE), (BUFF(433),TIME)                                  *104 LM00125    
                                                                                                       LM00126    
                                                                                                       LM00127    
                                                                                                       LM00128    
                  INTERNAL FUNCTION(X,Y)                                                          *105 LM00129    
                  ENTRY TO USRCHK.                                                                *106 LM00130    
                                                                                                       LM00131    
                  WHENEVER X.NE.$ M1416$ .OR. (Y.NE.$   385$ .AND. Y                              *107 LM00132    
                1  .NE. $  4301$ .AND. Y .NE. $  2962$ .AND. Y .NE.                               *107 LM00133    
                2  $  3845$)                                                                      *107 LM00134    
                3  , ERROR RETURN                                                                 *107 LM00135    
                  FUNCTION RETURN                                                                 *108 LM00136    
                  END OF FUNCTION                                                                 *109 LM00137    
                                                                                                       LM00138    
                                                                                                       LM00139    
                  INTERNAL FUNCTION(THRU)                                                         *110 LM00140    
                  ENTRY TO ARGS.                                                                  *111 LM00141    
                  STATEMENT LABEL THRU                                                            *112 LM00142    
                                                                                                       LM00143    
                  WHENEVER LIST                                                                   *113 LM00144    
                       GTWD.(X,THRU)                                                              *114 LM00145    
                       GTWD.(Y,THRU)                                                              *115 LM00146    
                  OTHERWISE                                                                       *116 LM00147    
                       X=A(CINDEX)                                                                *117 LM00148    
                       Y=A(CINDEX+1)                                                              *118 LM00149    
                       WHENEVER X.E.FENCE.OR.Y.E.FENCE,TRANSFER TO THRU                           *119 LM00150    
                       CINDEX=CINDEX+2                                                            *120 LM00151    
                  END OF CONDITIONAL                                                              *121 LM00152    
                                                                                                       LM00153    
                  WHENEVER X.E.$     *$                                                           *122 LM00154    
                       BPRG(BB)=$ALLALL$                                                          *123 LM00155    
                       BPRG(BB+1)=Y.A.777777777717K                                               *124 LM00156    
                       BB=BB+2                                                                    *125 LM00157    
                  OR WHENEVER Y.E.$     *$                                                        *126 LM00158    
                       BPRG(BB)=REPROB.(X)                                                        *127 LM00159    
                       BPRG(BB+1)=$ALLALL$                                                        *128 LM00160    
                       BB=BB+2                                                                    *129 LM00161    
                  OTHERWISE                                                                       *130 LM00162    
                       APRG(AA)=REPROB.(X)                                                        *131 LM00163    
                       APRG(AA+1)=Y.A.777777777717K                                               *132 LM00164    
                       AA=AA+2                                                                    *133 LM00165    
                  END OF CONDITIONAL                                                              *134 LM00166    
                                                                                                       LM00167    
                  WHENEVER AA.G.200.OR.BB.G.20                                                    *135 LM00168    
                       PRINT COMMENT $TOO MANY ADDRESSEES$                                        *136 LM00169    
                       TRANSFER TO THRU                                                           *137 LM00170    
                  END OF CONDITIONAL                                                              *138 LM00171    
                                                                                                       LM00172    
                  FUNCTION RETURN                                                                 *139 LM00173    
                  END OF FUNCTION                                                                 *140 LM00174    
                                                                                                       LM00175    
                                                                                                       LM00176    
                  INTERNAL FUNCTION                                                               *141 LM00177    
                  ENTRY TO OPNMF.                                                                 *142 LM00178    
                                                                                                       LM00179    
                  ATTACH.(MFD,FILE)                                                               *143 LM00180    
                  BFOPEN.($R$,MFD,FILE,B2(B2+432),-0,-0,DSKER.)                                   *144 LM00181    
                  ATTACH.(ME(2),ME(1))                                                            *145 LM00182    
                  BFREAD.(MFD,FILE,Z(3)...3,DSKER.,-0,DSKER.)                                     *146 LM00183    
                  FUNCTION RETURN                                                                 *147 LM00184    
                  END OF FUNCTION                                                                 *148 LM00185    
                                                                                                       LM00186    
                                                                                                       LM00187    
                  INTERNAL FUNCTION(X,Y)                                                          *149 LM00188    
                  ENTRY TO RDMF.                                                                  *150 LM00189    
      RR          BFREAD.(MFD,FILE,Z(7)...7,EX,-0,DSKER.)                                         *151 LM00190    
                  X=Z(7)                                                                          *152 LM00191    
                  Y=Z(6)                                                                          *153 LM00192    
                  WHENEVER X.E.0.OR.Y.E.0.OR.X.E.UFD,TRANSFER TO RR                               *154 LM00193    
                  WHENEVER Y.RS.12.E.$00CMFL$,TRANSFER TO RR                                      *155 LM00194    
                  FUNCTION RETURN                                                                 *156 LM00195    
                  END OF FUNCTION                                                                 *157 LM00196    
                                                                                                       LM00197    
                                                                                                       LM00198    
                  INTERNAL FUNCTION(M,N)                                                          *158 LM00199    
                  ENTRY TO SEND.                                                                  *159 LM00200    
                                                                                                       LM00201    
                  Z=SMAIL.(M,N,LM,LTH,MAIL,BOX)                                                   *160 LM00202    
                  WHENEVER Z.E.0                                                                  *161 LM00203    
                       FUNCTION RETURN                                                            *162 LM00204    
                  OR WHENEVER Z.E.4                                                               *163 LM00205    
                       PRFULL.(RX,M,RX,N,$ NOT FOUND.'B$)                                         *164 LM00206    
                  OR WHENEVER Z.E.3                                                               *165 LM00207    
                       PRFULL.(RX,M,RX,N,$ DOES NOT WANT MAIL.'B$)                                *166 LM00208    
                  OR WHENEVER Z.E.2                                                               *167 LM00209    
                       PRFULL.(RX,M,RX,N,$''S MAIL BOX IS BUSY.'B$)                               *168 LM00210    
                  OTHERWISE                                                                       *169 LM00211    
                       PRFULL.($'R DISK ERROR SENDING TO'8$,M,N,$'B'8$)                           *170 LM00212    
                  END OF CONDITIONAL                                                              *171 LM00213    
                                                                                                       LM00214    
                  FUNCTION RETURN                                                                 *172 LM00215    
                  END OF FUNCTION                                                                 *173 LM00216    
                                                                                                       LM00217    
                  END OF PROGRAM                                                                  *174 LM00218    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   03000 TRANSFER VECTOR LENGTH  00035 PROGRAM BEGINS    01533
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      AA     00750 A 1        BPRG   01343 A 1        FILE   01347 A 1        N1     01360   1        SLOOP  00746   4  
      ALL    00741   4        BSEND  00042   4        GETARG 00744   4        N2     01361   1        SRCH   00747   4  
      APRG   01263 A 1        BUFF   00740 A 1        I      01350   1        PROB1  00047   1        TIME   00057   1  
      A      01310 A 1        CINDEX 01344   1        LIST   01351   2        PROBN  00052   1        UFDNAM 00054   1  
      ASEND  00042   4        CKMETA 00742   4        LM     00045 A 1        PROB   00043   1        UFD    01363 A 1  
      B1     01311 A 1        C      01345   1        LTH    01352   1        PROG1  00050   1        USER   01364   1  
      B2     01312 A 1        DATE   00056   1        MAIL   01353 A 1        PROG   00044 A 1        X      01365   1  
      BB     01313 A 1        EX     00743   4        ME     01356 A 1        RR     00745   4        Y      01366   1  
      BOX    01314 A 1        FENCE  01346 A 1        MFD    01357 A 1        RX     01362 A 1        Z      01376 A 1  
0FUNCTION DICTIONARY    
      ATTACH 00000   1        ATTNAM 00001   1        BFCLOS 00002   1        BFOPEN 00003   1        BFREAD 00004   1  
      BZ57   00005   1        CHNCOM 00006   1        CLOSE  00007   1        COMLOC 00010   1        DSKER  00011   1  
      ERROR  00012   1        EXIT   00013   1        FERRTN 00014   1        FSTATE 00015   1        GCLS   00016   1  
      GETBUF 00017   1        GETTM  00020   1        GLOC   00021   1        GTWDBX 00022   1        GTWD   00023   1  
      .PCOMT 00024   1        .SETUP 00025   1        LJUST  00026   1        OPEN   00027   1        PRFULL 00030   1  
      RDFILE 00031   1        REPROB 00032   1        SMAIL  00033   1        WHOAMI 00034   1        ARGS   00035   1  
      OPNMF  00036   1        RDMF   00037   1        SEND   00040   1        USRCHK 00041   1                          
0ABSOLUTE CONSTANTS     
 01432 +142214106060     01426 +141060606060     01454 +314527606346     01472 -116062254524     01457 -026025515146    
 01434 +145160243162     01521 -227033142260     01501 -203162602264     01453 +314360224667     01430 +141462604421    
 01460 -033314226060     01464 -056360442131     01463 -054663606621     01500 -202446256260     01467 -066445243314    
 01504 -204546636026     01403 +000000000004     01416 +000023442643     01407 +000000000014     01404 +000000000007    
 01413 +000000000310     01412 +000000000024     01532 -377777777717     01502 -204401040106     01511 -206060031005    
 01510 -206004030001     01506 -206002110602     01507 -206003100405     01436 +214343214343     01525 -245127254563    
 01531 -346451276334     01512 -206060606054     01530 -344331626334     01406 +000000000013     01446 +252433142260    
 01447 +256044215142     01440 +222560433145     01411 +000000000022     01471 -116060606060     01451 +273314226060    
 01470 -112521243145     01527 -252545636260     01443 +242560475125     01431 +141462604446     01410 +000000000020    
 01415 +000000777777     01462 -052733142260     01465 -065124604346     01473 -200160512523     01516 -226063302145    
 01437 +222560432562     01503 -204464626360     01401 +000000000002     01405 +000000000010     01414 +000000000660    
 01524 -242624454460     01526 -246225516060     01402 +000000000003     01441 +226060606060     01515 -222545633314    
 01523 -234660222560     01456 +316360316260     01452 +312330601410     01513 -206346606630     01522 -234651312562    
 01477 -202431512523     01427 +141360215125     01505 -204751462745     01425 +134751462245     01476 -202145246014    
 01435 +213143252473     01466 -066022256044     01450 +263143256063     01517 -226063302560     01445 +250214136031    
 01444 +250160452144     01475 -201413452144     01514 -206630255125     01422 +026033333360     01424 +026047514627    
 01420 +016047514622     01421 +016047514627     01423 +026047514622     01417 +016045214425     01461 -036045214425    
 01474 -201404442131     01455 +314645623560     01520 -226351642363     01433 +145114013145     01377 +000000000000    
 01400 +000000000001     01442 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00741 TXL -302135002135       00742 TXL -302020002014       00743 TXL -302242002237       00744 TXL -302134002132      
 00745 TXL -302573002562       00746 TXL -302174002171       00747 TXL -302170002164                                    
0PROGRAM    
                 GCLS.(A,0)                                                         001  LM00005
 01533 TSX +0 07400 4 00025    01534 TSX +0 07400 4 00016    01535 TXH +3 00000 0 01310    01536 TXH +3 00000 0 01377   
                 W'R A(1).E.FENCE.OR.A(2).E.FENCE.OR.A(3).E.FENCE                   002  LM00007
 01537 CLA +0 50000 0 01305    01540 SUB +0 40200 0 01346    01541 TZE +0 10000 0 01550    01542 CLA +0 50000 0 01306   
 01543 SUB +0 40200 0 01346    01544 TZE +0 10000 0 01550    01545 CLA +0 50000 0 01307    01546 SUB +0 40200 0 01346   
 01547 TNZ -0 10000 0 01615                                                                                             
                 PRFULL.($'R'1INSTRUCTIONS:$)                                       003  LM00008
 01550 TSX +0 07400 4 00030    01551 TXH +3 00000 0 01433    01552 TXH +3 00000 0 01520    01553 TXH +3 00000 0 01455   
                 PRFULL.($ '4MAIL NAME1 NAME2 PROB1 PROG1 PROB2 PROG2 ...$)         004  LM00009
 01554 TSX +0 07400 4 00030    01555 TXH +3 00000 0 01474    01556 TXH +3 00000 0 01461    01557 TXH +3 00000 0 01417   
 01560 TXH +3 00000 0 01423    01561 TXH +3 00000 0 01421    01562 TXH +3 00000 0 01420    01563 TXH +3 00000 0 01424   
 01564 TXH +3 00000 0 01422                                                                                             
                 PRFULL.($ WHERE '=NAME1 NAME2'= IS THE FILE TO BE MAILED,$)        005  LM00010
 01565 TSX +0 07400 4 00030    01566 TXH +3 00000 0 01514    01567 TXH +3 00000 0 01475    01570 TXH +3 00000 0 01444   
 01571 TXH +3 00000 0 01445    01572 TXH +3 00000 0 01517    01573 TXH +3 00000 0 01450    01574 TXH +3 00000 0 01466   
 01575 TXH +3 00000 0 01435                                                                                             
                 PRFULL.($ AND '=PROBN PROGN'= ARE DIRECTORIES TO WHICH '8$,        006  LM00011
                1 $IT IS TO BE SENT.'B$)                                            006  LM00012
 01576 TSX +0 07400 4 00030    01577 TXH +3 00000 0 01476    01600 TXH +3 00000 0 01425    01601 TXH +3 00000 0 01505   
 01602 TXH +3 00000 0 01427    01603 TXH +3 00000 0 01477    01604 TXH +3 00000 0 01522    01605 TXH +3 00000 0 01513   
 01606 TXH +3 00000 0 01452    01607 TXH +3 00000 0 01456    01610 TXH +3 00000 0 01523    01611 TXH +3 00000 0 01515   
 01612 TXH +3 00000 0 01441                                                                                             
                 CHNCOM.(0)                                                         007  LM00013
 01613 TSX +0 07400 4 00006    01614 TXH +3 00000 0 01377                                                               
                 E'L                                                                008  LM00014
                 D'N ME(2)                                                          009  LM00016
                 ATTNAM.(ME(2)...3)                                                 010  LM00017
 01615 TSX +0 07400 4 00001    01616 TIX +2 01402 0 01354                                                               
                 FERRTN.(DSKER.)                                                    011  LM00018
 01617 TSX +0 07400 4 00014    01620 TXH +3 00000 0 00011                                                               
                 USER = GLOC.(COMLOC.($USER$))                                      012  LM00019
 01621 TSX +0 07400 4 00010    01622 TXH +3 00000 0 01526    01623 STO +0 60100 0 02774    01624 TSX +0 07400 4 00021   
 01625 TXH +3 00000 0 02774    01626 STO +0 60100 0 01364                                                               
                 UFDNAM = BZ57.(GLOC.(COMLOC.($UFDNM$)+USER))                       013  LM00020
 01627 TSX +0 07400 4 00010    01630 TXH +3 00000 0 01524    01631 ADD +0 40000 0 01364    01632 STO +0 60100 0 02774   
 01633 TSX +0 07400 4 00021    01634 TXH +3 00000 0 02774    01635 STO +0 60100 0 02774    01636 TSX +0 07400 4 00005   
 01637 TXH +3 00000 0 02774    01640 STO +0 60100 0 00054                                                               
                 ATTACH.(ME(2),ME(1))                                               014  LM00021
 01641 TSX +0 07400 4 00000    01642 TXH +3 00000 0 01354    01643 TXH +3 00000 0 01355                                 
                 GETBUF.(B1,432)                                                    015  LM00022
 01644 TSX +0 07400 4 00017    01645 TXH +3 00000 0 01311    01646 TXH +3 00000 0 01414                                 
                 GETBUF.(B2,432)                                                    016  LM00023
 01647 TSX +0 07400 4 00017    01650 TXH +3 00000 0 01312    01651 TXH +3 00000 0 01414                                 
                 FSTATE.(A(1),A(2),Z(7)...8)                                        017  LM00025
 01652 TSX +0 07400 4 00015    01653 TXH +3 00000 0 01307    01654 TXH +3 00000 0 01306    01655 TIX +2 01405 0 01367   
                 LTH = Z(7)                                                         018  LM00026
 01656 CLA +0 50000 0 01367    01657 STO +0 60100 0 01352                                                               
                 W'R LTH.G.432                                                      019  LM00028
 01660 CLA +0 50000 0 01352    01661 SUB +0 40200 0 01414    01662 TZE +0 10000 0 01700    01663 TMI -0 12000 0 01700   
                 PRFULL.(RX,A(1)...2,$ MUST BE LESS THAN 1 RECORD LONG.'B$)         020  LM00029
 01664 TSX +0 07400 4 00030    01665 TXH +3 00000 0 01362    01666 TIX +2 01401 0 01307    01667 TXH +3 00000 0 01503   
 01670 TXH +3 00000 0 01437    01671 TXH +3 00000 0 01516    01672 TXH +3 00000 0 01473    01673 TXH +3 00000 0 01465   
 01674 TXH +3 00000 0 01462                                                                                             
                      CHNCOM.(0)                                                    021  LM00030
 01675 TSX +0 07400 4 00006    01676 TXH +3 00000 0 01377                                                               
                      V'S RX = $'R'X'8$                                             022  LM00031
 01362     +1 45114 6 71410                                                                                             
                 O'R Z(6).A.10K.NE.0.OR.Z(6).A.20K.NE.0.AND.Z.A.777777K.NE.ME       023  LM00032
 01677 TRA +0 02000 0 01734    01700 CAL -0 50000 0 01376    01701 ANA -0 32000 0 01415    01702 SLW +0 60200 0 02774   
 01703 CLA +0 50000 0 02774    01704 SUB +0 40200 0 01356    01705 TZE +0 10000 0 01714    01706 CAL -0 50000 0 01370   
 01707 ANA -0 32000 0 01410    01710 SLW +0 60200 0 02774    01711 CLA +0 50000 0 02774    01712 SUB +0 40200 0 01377   
 01713 TNZ -0 10000 0 01722    01714 CAL -0 50000 0 01370    01715 ANA -0 32000 0 01405    01716 SLW +0 60200 0 02774   
 01717 CLA +0 50000 0 02774    01720 SUB +0 40200 0 01377    01721 TZE +0 10000 0 01734                                 
                      PRFULL.(RX,A(1)...2,$''S MODE PREVENTS READING.'B$)           024  LM00033
 01722 TSX +0 07400 4 00030    01723 TXH +3 00000 0 01362    01724 TIX +2 01401 0 01307    01725 TXH +3 00000 0 01431   
 01726 TXH +3 00000 0 01443    01727 TXH +3 00000 0 01527    01730 TXH +3 00000 0 01470    01731 TXH +3 00000 0 01451   
                      CHNCOM.(0)                                                    025  LM00034
 01732 TSX +0 07400 4 00006    01733 TXH +3 00000 0 01377                                                               
                 E'L                                                                026  LM00035
                 OPEN.($R$,A(1),A(2))                                               027  LM00037
 01734 TSX +0 07400 4 00027    01735 TXH +3 00000 0 01471    01736 TXH +3 00000 0 01307    01737 TXH +3 00000 0 01306   
                 RDFILE.(A(1),A(2),1,BUFF(432)...LTH)                               028  LM00038
 01740 TSX +0 07400 4 00031    01741 TXH +3 00000 0 01307    01742 TXH +3 00000 0 01306    01743 TXH +3 00000 0 01400   
 01744 TIX +2 01352 0 00060                                                                                             
                 CLOSE.(A(1),A(2))                                                  029  LM00039
 01745 TSX +0 07400 4 00007    01746 TXH +3 00000 0 01307    01747 TXH +3 00000 0 01306                                 
                 W'R BUFF(432).RS.18.NE. 777777K                                    030  LM00041
 01750 CAL -0 50000 0 01411    01751 STA +0 62100 0 01753    01752 CAL -0 50000 0 00060    01753 LGR -0 76500 0 00000   
 01754 SLW +0 60200 0 02774    01755 CLA +0 50000 0 02774    01756 SUB +0 40200 0 01415    01757 TZE +0 10000 0 01771   
                      PRFULL.(RX,A(1)...2,$ MUST BE LINE MARKED.'B$)                031  LM00042
 01760 TSX +0 07400 4 00030    01761 TXH +3 00000 0 01362    01762 TIX +2 01401 0 01307    01763 TXH +3 00000 0 01503   
 01764 TXH +3 00000 0 01440    01765 TXH +3 00000 0 01447    01766 TXH +3 00000 0 01446                                 
                      CHNCOM.(0)                                                    032  LM00043
 01767 TSX +0 07400 4 00006    01770 TXH +3 00000 0 01377                                                               
                 E'L                                                                033  LM00044
                 WHOAMI.(PROB...2)                                                  034  LM00046
 01771 TSX +0 07400 4 00034    01772 TIX +2 01401 0 00043                                                               
                 D'N PROG(1)                                                        035  LM00047
                 E'E (PROB,PROG(1))                                                 036  LM00048
                 PROB1 = LJUST.(PROB)                                               037  LM00049
 01773 TSX +0 07400 4 00026    01774 TXH +3 00000 0 00043    01775 STO +0 60100 0 00047                                 
                 PROG1 = BZ57.(PROG)                                                038  LM00050
 01776 TSX +0 07400 4 00005    01777 TXH +3 00000 0 00044    02000 STO +0 60100 0 00050                                 
                 PROBN = BZ57.(PROB)                                                039  LM00051
 02001 TSX +0 07400 4 00005    02002 TXH +3 00000 0 00043    02003 STO +0 60100 0 00052                                 
                 GETTM.(DATE,TIME)                                                  040  LM00052
 02004 TSX +0 07400 4 00020    02005 TXH +3 00000 0 00056    02006 TXH +3 00000 0 00057                                 
                 LTH = LTH+11                                                       041  LM00053
 02007 CLA +0 50000 0 01352    02010 ADD +0 40000 0 01406    02011 STO +0 60100 0 01352                                 
                 CINDEX = 3                                                         042  LM00054
 02012 CLA +0 50000 0 01402    02013 STO +0 60100 0 01344                                                               
      CKMETA     W'R A(CINDEX).E.$(LIST)$                                           043  LM00056
 02014 LXA +0 53400 1 01344    02015 CLA +0 50000 1 01310    02016 SUB +0 40200 0 01530    02017 TNZ -0 10000 0 02065   
                      LIST=1B                                                       044  LM00057
 02020 CLA +0 50000 0 01400    02021 STO +0 60100 0 01351                                                               
                      N1 = A(CINDEX+1)                                              045  LM00058
 02022 CLA +0 50000 0 01344    02023 ADD +0 40000 0 01400    02024 PAX +0 73400 2 00000    02025 CLA +0 50000 2 01310   
 02026 STO +0 60100 0 01360                                                                                             
                      N2 = A(CINDEX+2)                                              046  LM00059
 02027 CLA +0 50000 0 01344    02030 ADD +0 40000 0 01401    02031 PAX +0 73400 2 00000    02032 CLA +0 50000 2 01310   
 02033 STO +0 60100 0 01361                                                                                             
                      BFOPEN.($R$,N1,N2,B1(B1+432),-0,-0,DSKER.)                    047  LM00060
 02034 CLS +0 50200 0 01377    02035 STO +0 60100 0 02774    02036 CLS +0 50200 0 01377    02037 STO +0 60100 0 02775   
 02040 CLA +0 50000 0 01311    02041 ADD +0 40000 0 01414    02042 SUB +0 40200 0 02043    02043 TXH +3 00000 0 01311   
 02044 STA +0 62100 0 02051    02045 TSX +0 07400 4 00003    02046 TXH +3 00000 0 01471    02047 TXH +3 00000 0 01360   
 02050 TXH +3 00000 0 01361    02051 TXH +3 00000 0 00000    02052 TXH +3 00000 0 02775    02053 TXH +3 00000 0 02774   
 02054 TXH +3 00000 0 00011                                                                                             
                      GTWDBX.(N1,N2)                                                048  LM00061
 02055 TSX +0 07400 4 00022    02056 TXH +3 00000 0 01360    02057 TXH +3 00000 0 01361                                 
                      CINDEX = CINDEX + 3                                           049  LM00062
 02060 CLA +0 50000 0 01344    02061 ADD +0 40000 0 01402    02062 STO +0 60100 0 01344                                 
                      T'O CKMETA                                                    050  LM00063
 02063 TRA +0 02000 0 00742                                                                                             
                 O'R A(CINDEX).E.$     *$.AND.A(CINDEX+1).E.$     *$                051  LM00064
 02064 TRA +0 02000 0 02132    02065 CLA +0 50000 0 01344    02066 ADD +0 40000 0 01400    02067 PAX +0 73400 1 00000   
 02070 CLA +0 50000 1 01310    02071 SUB +0 40200 0 01512    02072 TNZ -0 10000 0 02112    02073 LXA +0 53400 1 01344   
 02074 CLA +0 50000 1 01310    02075 SUB +0 40200 0 01512    02076 TNZ -0 10000 0 02112                                 
                      CINDEX = CINDEX+2                                             052  LM00065
 02077 CLA +0 50000 0 01344    02100 ADD +0 40000 0 01401    02101 STO +0 60100 0 01344                                 
                      USRCHK.(PROB,PROG,CKMETA)                                     053  LM00066
 02102 TSX +0 07400 4 00041    02103 TXH +3 00000 0 00043    02104 TXH +3 00000 0 00044    02105 TXH +3 00000 0 00742   
                      BB=2                                                          054  LM00067
 02106 CLA +0 50000 0 01401    02107 STO +0 60100 0 01313                                                               
                      T'O SRCH                                                      055  LM00068
 02110 TRA +0 02000 0 00747                                                                                             
                 O'R A(CINDEX).E.$(URGT)$                                           056  LM00069
 02111 TRA +0 02000 0 02132    02112 LXA +0 53400 1 01344    02113 CLA +0 50000 1 01310    02114 SUB +0 40200 0 01531   
 02115 TNZ -0 10000 0 02132                                                                                             
                      CINDEX = CINDEX+1                                             057  LM00070
 02116 CLA +0 50000 0 01344    02117 ADD +0 40000 0 01400    02120 STO +0 60100 0 01344                                 
                      USRCHK.(PROB,PROG,CKMETA)                                     058  LM00071
 02121 TSX +0 07400 4 00041    02122 TXH +3 00000 0 00043    02123 TXH +3 00000 0 00044    02124 TXH +3 00000 0 00742   
                      BOX =   MAIL                                                  059  LM00072
 02125 CLA +0 50000 0 01353    02126 STO +0 60100 0 01314                                                               
                      MAIL = $URGENT$                                               060  LM00073
 02127 CLA +0 50000 0 01525    02130 STO +0 60100 0 01353                                                               
                      T'O CKMETA                                                    061  LM00074
 02131 TRA +0 02000 0 00742                                                                                             
                 E'L                                                                062  LM00075
      GETARG     ARGS.(ALL)                                                         063  LM00077
 02132 TSX +0 07400 4 00035    02133 TXH +3 00000 0 00741                                                               
                 T'O GETARG                                                         064  LM00078
 02134 TRA +0 02000 0 00744                                                                                             
      ALL        CONTINUE                                                           065  LM00080
                 T'H ASEND, FOR I=0,2,I.GE.AA                                       066  LM00082
 02135 CLA +0 50000 0 01377    02136 STO +0 60100 0 01350    02137 TRA +0 02000 0 02143    02140 CLA +0 50000 0 01350   
 02141 ADD +0 40000 0 01401    02142 STO +0 60100 0 01350    02143 CLA +0 50000 0 01350    02144 SUB +0 40200 0 00750   
 02145 TZE +0 10000 0 02164    02146 TPL +0 12000 0 02164                                                               
      ASEND      SEND.(APRG(I),APRG(I+1))                                           067  LM00083
 02147 CLA +0 50000 0 01350    02150 ADD +0 40000 0 01400    02151 SUB +0 40200 0 02152    02152 TXH +3 00000 0 01263   
 02153 STA +0 62100 0 02162    02154 CLA +0 50000 0 01350    02155 SUB +0 40200 0 02156    02156 TXH +3 00000 0 01263   
 02157 STA +0 62100 0 02161    02160 TSX +0 07400 4 00040    02161 TXH +3 00000 0 00000    02162 TXH +3 00000 0 00000   
 02163 TRA +0 02000 0 02140                                                                                             
      SRCH       W'R BB.G.0                                                         068  LM00085
 02164 CLA +0 50000 0 01313    02165 SUB +0 40200 0 01377    02166 TZE +0 10000 0 02242    02167 TMI -0 12000 0 02242   
                      OPNMF.                                                        069  LM00086
 02170 TSX +0 07400 4 00036                                                                                             
      SLOOP           RDMF.(X,Y)                                                    070  LM00087
 02171 TSX +0 07400 4 00037    02172 TXH +3 00000 0 01365    02173 TXH +3 00000 0 01366                                 
                      T'H BSEND,FOR C=0,2,C.G.BB                                    071  LM00088
 02174 CLA +0 50000 0 01377    02175 STO +0 60100 0 01345    02176 TRA +0 02000 0 02202    02177 CLA +0 50000 0 01345   
 02200 ADD +0 40000 0 01401    02201 STO +0 60100 0 01345    02202 CLA +0 50000 0 01345    02203 SUB +0 40200 0 01313   
 02204 TZE +0 10000 0 02206    02205 TPL +0 12000 0 02236                                                               
                      W'R X.E.BPRG(C).OR.BPRG(C).E.$ALLALL$                         072  LM00089
 02206 LXA +0 53400 1 01345    02207 CLA +0 50000 1 01343    02210 SUB +0 40200 0 01436    02211 TZE +0 10000 0 02216   
 02212 LXA +0 53400 2 01345    02213 CLA +0 50000 0 01365    02214 SUB +0 40200 2 01343    02215 TNZ -0 10000 0 02235   
                      W'R Y.E.BPRG(C+1).OR.BPRG(C+1).E.$ALLALL$,SEND.(X,Y)          073  LM00090
 02216 CLA +0 50000 0 01345    02217 ADD +0 40000 0 01400    02220 PAX +0 73400 1 00000    02221 CLA +0 50000 1 01343   
 02222 SUB +0 40200 0 01436    02223 TZE +0 10000 0 02232    02224 CLA +0 50000 0 01345    02225 ADD +0 40000 0 01400   
 02226 PAX +0 73400 2 00000    02227 CLA +0 50000 0 01366    02230 SUB +0 40200 2 01343    02231 TNZ -0 10000 0 02235   
 02232 TSX +0 07400 4 00040    02233 TXH +3 00000 0 01365    02234 TXH +3 00000 0 01366                                 
                      E'L                                                           074  LM00091
      BSEND           CONTINUE                                                      075  LM00092
 02235 TRA +0 02000 0 02177                                                                                             
                      T'O SLOOP                                                     076  LM00093
 02236 TRA +0 02000 0 00746                                                                                             
      EX              BFCLOS.(MFD,FILE)                                             077  LM00094
 02237 TSX +0 07400 4 00002    02240 TXH +3 00000 0 01357    02241 TXH +3 00000 0 01347                                 
                 E'L                                                                078  LM00095
                 CHNCOM.(0)                                                         079  LM00097
 02242 TSX +0 07400 4 00006    02243 TXH +3 00000 0 01377                                                               
                 N'S INTEGER                                                        080  LM00100
                 D'N A(20),APRG(202),BPRG(22)                                       081  LM00101
                 D'N B1(0), B2(0)                                                   082  LM00102
                 D'N Z(7)                                                           083  LM00103
                 B'N LIST                                                           084  LM00104
                 V'S MFD=$M.F.D.$                                                   085  LM00105
 01357     -0 43326 3 32433                                                                                             
                 V'S UFD=$U.F.D.$                                                   086  LM00106
 01363     -2 43326 3 32433                                                                                             
                 V'S FILE=$(FILE)$                                                  087  LM00107
 01347     -3 42631 4 32534                                                                                             
                 V'S MAIL=$  MAIL$                                                  088  LM00108
 01353     -2 06044 2 13143                                                                                             
                 V'S BOX=$   BOX$                                                   089  LM00109
 01314     -2 06060 2 24667                                                                                             
                 V'S BPRG = $ALLALL$, $ALLALL$                                      090  LM00110
 01342     +2 14343 2 14343    01343     +2 14343 2 14343                                                               
                 V'S AA = 0                                                         091  LM00111
 00750     +0 00000 0 00000                                                                                             
                 V'S BB = 0                                                         092  LM00112
 01313     +0 00000 0 00000                                                                                             
                 V'S FENCE=777777777777K                                            093  LM00113
 01346     -3 77777 7 77777                                                                                             
                 D'N BUFF(443)                                                      094  LM00115
                 E'E (BUFF(443),LM)                                                 095  LM00116
                 V'S LM = 777777000012K                                             096  LM00117
 00045     -3 77777 0 00012                                                                                             
                 V'S BUFF(442) = $ FROM $                                           097  LM00118
 00046     -2 02651 4 64460                                                                                             
                 E'E (BUFF(441),PROB1), (BUFF(440),PROG1)                           098  LM00119
                 V'S BUFF(439) = 603145605757K                                      099  LM00120
 00051     -2 03145 6 05757                                                                                             
                 E'E (BUFF(438),PROBN)                                              100  LM00121
                 V'S BUFF(437) = 605757575757K                                      101  LM00122
 00053     -2 05757 5 75757                                                                                             
                 E'E (BUFF(436),UFDNAM)                                             102  LM00123
                 V'S BUFF(435) = 605721636057K                                      103  LM00124
 00055     -2 05721 6 36057                                                                                             
                 E'E (BUFF(434),DATE), (BUFF(433),TIME)                             104  LM00125
                 INTERNAL FUNCTION(X,Y)                                             105  LM00129
 02244 TRA +0 02000 0 02317                                                                                             
                 E'O USRCHK.                                                        106  LM00130
 02245 TRA +0 02000 0 02250    00041 TTR +0 02100 0 02246    02246 SXA +0 63400 2 02300    02247 TSX +0 07400 2 02300   
                 W'R X.NE.$ M1416$ .OR. (Y.NE.$   385$ .AND. Y                      107  LM00132
                1 .NE. $  4301$ .AND. Y .NE. $  2962$ .AND. Y .NE.                  107  LM00133
                2 $  3845$)                                                         107  LM00134
                3 , ERROR RETURN                                                    107  LM00135
 02250 CLA +0 50000 0 00024    02251 SUB +0 40200 0 01507    02252 TZE +0 10000 0 02264    02253 CLA +0 50000 0 00024   
 02254 SUB +0 40200 0 01506    02255 TZE +0 10000 0 02264    02256 CLA +0 50000 0 00024    02257 SUB +0 40200 0 01510   
 02260 TZE +0 10000 0 02264    02261 CLA +0 50000 0 00024    02262 SUB +0 40200 0 01511    02263 TNZ -0 10000 0 02267   
 02264 CLA +0 50000 0 00024    02265 SUB +0 40200 0 01502    02266 TZE +0 10000 0 02276    02267 LXA +0 53400 4 02313   
 02270 CLA +0 50000 4 00003    02271 STA +0 62100 0 02273    02272 LDQ +0 56000 0 02274    02273 TLQ +0 04000 0 00000   
 02274 TXH +3 00000 0 00000    02275 TSX +0 07400 4 00012                                                               
                 F'N                                                                108  LM00136
 02276 TRA +0 02000 0 02313                                                                                             
                 E'N                                                                109  LM00137
 02277 TSX +0 07400 4 00013    02300 TXH +3 00000 0 00000    02301 SXD -0 63400 1 02300    02302 SXA +0 63400 4 02313   
 02303 CLA +0 50000 4 00001    02304 STA +0 62100 0 02264    02305 CLA +0 50000 4 00002    02306 STA +0 62100 0 02250   
 02307 STA +0 62100 0 02253    02310 STA +0 62100 0 02256    02311 STA +0 62100 0 02261    02312 TRA +0 02000 2 00001   
 02313 AXT +0 77400 4 00000    02314 LXA +0 53400 2 02300    02315 LXD -0 53400 1 02300    02316 TRA +0 02000 4 00001   
                 INTERNAL FUNCTION(THRU)                                            110  LM00140
 02317 TRA +0 02000 0 02476                                                                                             
                 E'O ARGS.                                                          111  LM00141
 02320 TRA +0 02000 0 02323    00035 TTR +0 02100 0 02321    02321 SXA +0 63400 2 02460    02322 TSX +0 07400 2 02460   
                 STATEMENT LABEL THRU                                               112  LM00142
                 W'R LIST                                                           113  LM00144
 02323 NZT -0 52000 0 01351    02324 TRA +0 02000 0 02334                                                               
                      GTWD.(X,THRU)                                                 114  LM00145
 02325 TSX +0 07400 4 00023    02326 TXH +3 00000 0 01365    02327 TXH +3 00000 0 00024                                 
                      GTWD.(Y,THRU)                                                 115  LM00146
 02330 TSX +0 07400 4 00023    02331 TXH +3 00000 0 01366    02332 TXH +3 00000 0 00024                                 
                 O'E                                                                116  LM00147
 02333 TRA +0 02000 0 02356                                                                                             
                      X=A(CINDEX)                                                   117  LM00148
 02334 LXA +0 53400 2 01344    02335 CLA +0 50000 2 01310    02336 STO +0 60100 0 01365                                 
                      Y=A(CINDEX+1)                                                 118  LM00149
 02337 CLA +0 50000 0 01344    02340 ADD +0 40000 0 01400    02341 PAX +0 73400 2 00000    02342 CLA +0 50000 2 01310   
 02343 STO +0 60100 0 01366                                                                                             
                      W'R X.E.FENCE.OR.Y.E.FENCE,T'O THRU                           119  LM00150
 02344 CLA +0 50000 0 01366    02345 SUB +0 40200 0 01346    02346 TZE +0 10000 0 02352    02347 CLA +0 50000 0 01365   
 02350 SUB +0 40200 0 01346    02351 TNZ -0 10000 0 02353    02352 TRA +0 02000 0 00024                                 
                      CINDEX=CINDEX+2                                               120  LM00151
 02353 CLA +0 50000 0 01344    02354 ADD +0 40000 0 01401    02355 STO +0 60100 0 01344                                 
                 E'L                                                                121  LM00152
                 W'R X.E.$     *$                                                   122  LM00154
 02356 CLA +0 50000 0 01365    02357 SUB +0 40200 0 01512    02360 TNZ -0 10000 0 02400                                 
                      BPRG(BB)=$ALLALL$                                             123  LM00155
 02361 LXA +0 53400 1 01313    02362 CLA +0 50000 0 01436    02363 STO +0 60100 1 01343                                 
                      BPRG(BB+1)=Y.A.777777777717K                                  124  LM00156
 02364 CAL -0 50000 0 01366    02365 ANA -0 32000 0 01532    02366 SLW +0 60200 0 02475    02367 CLA +0 50000 0 01313   
 02370 ADD +0 40000 0 01400    02371 PAX +0 73400 1 00000    02372 CLA +0 50000 0 02475    02373 STO +0 60100 1 01343   
                      BB=BB+2                                                       125  LM00157
 02374 CLA +0 50000 0 01313    02375 ADD +0 40000 0 01401    02376 STO +0 60100 0 01313                                 
                 O'R Y.E.$     *$                                                   126  LM00158
 02377 TRA +0 02000 0 02437    02400 CLA +0 50000 0 01366    02401 SUB +0 40200 0 01512    02402 TNZ -0 10000 0 02420   
                      BPRG(BB)=REPROB.(X)                                           127  LM00159
 02403 TSX +0 07400 4 00032    02404 TXH +3 00000 0 01365    02405 LXA +0 53400 1 01313    02406 STO +0 60100 1 01343   
                      BPRG(BB+1)=$ALLALL$                                           128  LM00160
 02407 CLA +0 50000 0 01313    02410 ADD +0 40000 0 01400    02411 PAX +0 73400 1 00000    02412 CLA +0 50000 0 01436   
 02413 STO +0 60100 1 01343                                                                                             
                      BB=BB+2                                                       129  LM00161
 02414 CLA +0 50000 0 01313    02415 ADD +0 40000 0 01401    02416 STO +0 60100 0 01313                                 
                 O'E                                                                130  LM00162
 02417 TRA +0 02000 0 02437                                                                                             
                      APRG(AA)=REPROB.(X)                                           131  LM00163
 02420 TSX +0 07400 4 00032    02421 TXH +3 00000 0 01365    02422 LXA +0 53400 1 00750    02423 STO +0 60100 1 01263   
                      APRG(AA+1)=Y.A.777777777717K                                  132  LM00164
 02424 CAL -0 50000 0 01366    02425 ANA -0 32000 0 01532    02426 SLW +0 60200 0 02475    02427 CLA +0 50000 0 00750   
 02430 ADD +0 40000 0 01400    02431 PAX +0 73400 1 00000    02432 CLA +0 50000 0 02475    02433 STO +0 60100 1 01263   
                      AA=AA+2                                                       133  LM00165
 02434 CLA +0 50000 0 00750    02435 ADD +0 40000 0 01401    02436 STO +0 60100 0 00750                                 
                 E'L                                                                134  LM00166
                 W'R AA.G.200.OR.BB.G.20                                            135  LM00168
 02437 CLA +0 50000 0 01313    02440 SUB +0 40200 0 01412    02441 TZE +0 10000 0 02443    02442 TPL +0 12000 0 02447   
 02443 CLA +0 50000 0 00750    02444 SUB +0 40200 0 01413    02445 TZE +0 10000 0 02456    02446 TMI -0 12000 0 02456   
                      PRINT COMMENT $TOO MANY ADDRESSEES$                           136  LM00169
 02447 TSX +0 07400 4 00024    02450     +0 00000 0 00004    02451     -2 34646 6 04421    02452     -0 57060 2 12424   
 02453     -1 12562 6 22525    02454     -2 26060 6 06060                                                               
                      T'O THRU                                                      137  LM00170
 02455 TRA +0 02000 0 00024                                                                                             
                 E'L                                                                138  LM00171
                 F'N                                                                139  LM00173
 02456 TRA +0 02000 0 02471                                                                                             
                 E'N                                                                140  LM00174
 02457 TSX +0 07400 4 00013    02460 TXH +3 00000 0 00000    02461 SXD -0 63400 1 02460    02462 SXA +0 63400 4 02471   
 02463 CLA +0 50000 4 00001    02464 STO +0 60100 0 02327    02465 STO +0 60100 0 02332    02466 STA +0 62100 0 02352   
 02467 STA +0 62100 0 02455    02470 TRA +0 02000 2 00001    02471 AXT +0 77400 4 00000    02472 LXA +0 53400 2 02460   
 02473 LXD -0 53400 1 02460    02474 TRA +0 02000 4 00001                                                               
                 INTERNAL FUNCTION                                                  141  LM00177
 02476 TRA +0 02000 0 02556                                                                                             
                 E'O OPNMF.                                                         142  LM00178
 02477 TRA +0 02000 0 02502    00036 TTR +0 02100 0 02500    02500 SXA +0 63400 2 02544    02501 TSX +0 07400 2 02544   
                 ATTACH.(MFD,FILE)                                                  143  LM00180
 02502 TSX +0 07400 4 00000    02503 TXH +3 00000 0 01357    02504 TXH +3 00000 0 01347                                 
                 BFOPEN.($R$,MFD,FILE,B2(B2+432),-0,-0,DSKER.)                      144  LM00181
 02505 CLS +0 50200 0 01377    02506 STO +0 60100 0 02554    02507 CLS +0 50200 0 01377    02510 STO +0 60100 0 02555   
 02511 CLA +0 50000 0 01312    02512 ADD +0 40000 0 01414    02513 SUB +0 40200 0 02514    02514 TXH +3 00000 0 01312   
 02515 STA +0 62100 0 02522    02516 TSX +0 07400 4 00003    02517 TXH +3 00000 0 01471    02520 TXH +3 00000 0 01357   
 02521 TXH +3 00000 0 01347    02522 TXH +3 00000 0 00000    02523 TXH +3 00000 0 02555    02524 TXH +3 00000 0 02554   
 02525 TXH +3 00000 0 00011                                                                                             
                 ATTACH.(ME(2),ME(1))                                               145  LM00182
 02526 TSX +0 07400 4 00000    02527 TXH +3 00000 0 01354    02530 TXH +3 00000 0 01355                                 
                 BFREAD.(MFD,FILE,Z(3)...3,DSKER.,-0,DSKER.)                        146  LM00183
 02531 CLS +0 50200 0 01377    02532 STO +0 60100 0 02555    02533 TSX +0 07400 4 00004    02534 TXH +3 00000 0 01357   
 02535 TXH +3 00000 0 01347    02536 TIX +2 01402 0 01373    02537 TXH +3 00000 0 00011    02540 TXH +3 00000 0 02555   
 02541 TXH +3 00000 0 00011                                                                                             
                 F'N                                                                147  LM00184
 02542 TRA +0 02000 0 02550                                                                                             
                 E'N                                                                148  LM00185
 02543 TSX +0 07400 4 00013    02544 TXH +3 00000 0 00000    02545 SXD -0 63400 1 02544    02546 SXA +0 63400 4 02550   
 02547 TRA +0 02000 2 00001    02550 AXT +0 77400 4 00000    02551 LXA +0 53400 2 02544    02552 LXD -0 53400 1 02544   
 02553 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION(X,Y)                                             149  LM00188
 02556 TRA +0 02000 0 02645                                                                                             
                 E'O RDMF.                                                          150  LM00189
 02557 TRA +0 02000 0 02562    00037 TTR +0 02100 0 02560    02560 SXA +0 63400 2 02624    02561 TSX +0 07400 2 02624   
      RR         BFREAD.(MFD,FILE,Z(7)...7,EX,-0,DSKER.)                            151  LM00190
 02562 CLS +0 50200 0 01377    02563 STO +0 60100 0 02644    02564 TSX +0 07400 4 00004    02565 TXH +3 00000 0 01357   
 02566 TXH +3 00000 0 01347    02567 TIX +2 01404 0 01367    02570 TXH +3 00000 0 00743    02571 TXH +3 00000 0 02644   
 02572 TXH +3 00000 0 00011                                                                                             
                 X=Z(7)                                                             152  LM00191
 02573 CLA +0 50000 0 01367    02574 STO +0 60100 0 00024                                                               
                 Y=Z(6)                                                             153  LM00192
 02575 CLA +0 50000 0 01370    02576 STO +0 60100 0 00024                                                               
                 W'R X.E.0.OR.Y.E.0.OR.X.E.UFD,T'O RR                               154  LM00193
 02577 CLA +0 50000 0 00024    02600 SUB +0 40200 0 01363    02601 TZE +0 10000 0 02610    02602 CLA +0 50000 0 00024   
 02603 SUB +0 40200 0 01377    02604 TZE +0 10000 0 02610    02605 CLA +0 50000 0 00024    02606 SUB +0 40200 0 01377   
 02607 TNZ -0 10000 0 02611    02610 TRA +0 02000 0 00745                                                               
                 W'R Y.RS.12.E.$00CMFL$,T'O RR                                      155  LM00194
 02611 CAL -0 50000 0 01407    02612 STA +0 62100 0 02614    02613 CAL -0 50000 0 00024    02614 LGR -0 76500 0 00000   
 02615 SLW +0 60200 0 02644    02616 CLA +0 50000 0 02644    02617 SUB +0 40200 0 01416    02620 TNZ -0 10000 0 02622   
 02621 TRA +0 02000 0 00745                                                                                             
                 F'N                                                                156  LM00195
 02622 TRA +0 02000 0 02640                                                                                             
                 E'N                                                                157  LM00196
 02623 TSX +0 07400 4 00013    02624 TXH +3 00000 0 00000    02625 SXD -0 63400 1 02624    02626 SXA +0 63400 4 02640   
 02627 CLA +0 50000 4 00001    02630 STA +0 62100 0 02574    02631 STA +0 62100 0 02577    02632 STA +0 62100 0 02605   
 02633 CLA +0 50000 4 00002    02634 STA +0 62100 0 02576    02635 STA +0 62100 0 02602    02636 STA +0 62100 0 02613   
 02637 TRA +0 02000 2 00001    02640 AXT +0 77400 4 00000    02641 LXA +0 53400 2 02624    02642 LXD -0 53400 1 02624   
 02643 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION(M,N)                                             158  LM00199
 02645 TRA +0 02000 0 02773                                                                                             
                 E'O SEND.                                                          159  LM00200
 02646 TRA +0 02000 0 02651    00040 TTR +0 02100 0 02647    02647 SXA +0 63400 2 02747    02650 TSX +0 07400 2 02747   
                 Z=SMAIL.(M,N,LM,LTH,MAIL,BOX)                                      160  LM00202
 02651 TSX +0 07400 4 00033    02652 TXH +3 00000 0 00024    02653 TXH +3 00000 0 00024    02654 TXH +3 00000 0 00045   
 02655 TXH +3 00000 0 01352    02656 TXH +3 00000 0 01353    02657 TXH +3 00000 0 01314    02660 STO +0 60100 0 01376   
                 W'R Z.E.0                                                          161  LM00203
 02661 CLA +0 50000 0 01376    02662 SUB +0 40200 0 01377    02663 TNZ -0 10000 0 02666                                 
                      F'N                                                           162  LM00204
 02664 TRA +0 02000 0 02767                                                                                             
                 O'R Z.E.4                                                          163  LM00205
 02665 TRA +0 02000 0 02745    02666 CLA +0 50000 0 01376    02667 SUB +0 40200 0 01403    02670 TNZ -0 10000 0 02702   
                      PRFULL.(RX,M,RX,N,$ NOT FOUND.'B$)                            164  LM00206
 02671 TSX +0 07400 4 00030    02672 TXH +3 00000 0 01362    02673 TXH +3 00000 0 00024    02674 TXH +3 00000 0 01362   
 02675 TXH +3 00000 0 00024    02676 TXH +3 00000 0 01504    02677 TXH +3 00000 0 01467    02700 TXH +3 00000 0 01441   
                 O'R Z.E.3                                                          165  LM00207
 02701 TRA +0 02000 0 02745    02702 CLA +0 50000 0 01376    02703 SUB +0 40200 0 01402    02704 TNZ -0 10000 0 02717   
                      PRFULL.(RX,M,RX,N,$ DOES NOT WANT MAIL.'B$)                   166  LM00208
 02705 TSX +0 07400 4 00030    02706 TXH +3 00000 0 01362    02707 TXH +3 00000 0 00024    02710 TXH +3 00000 0 01362   
 02711 TXH +3 00000 0 00024    02712 TXH +3 00000 0 01500    02713 TXH +3 00000 0 01463    02714 TXH +3 00000 0 01464   
 02715 TXH +3 00000 0 01460                                                                                             
                 O'R Z.E.2                                                          167  LM00209
 02716 TRA +0 02000 0 02745    02717 CLA +0 50000 0 01376    02720 SUB +0 40200 0 01401    02721 TNZ -0 10000 0 02734   
                      PRFULL.(RX,M,RX,N,$''S MAIL BOX IS BUSY.'B$)                  168  LM00210
 02722 TSX +0 07400 4 00030    02723 TXH +3 00000 0 01362    02724 TXH +3 00000 0 00024    02725 TXH +3 00000 0 01362   
 02726 TXH +3 00000 0 00024    02727 TXH +3 00000 0 01430    02730 TXH +3 00000 0 01453    02731 TXH +3 00000 0 01501   
 02732 TXH +3 00000 0 01521                                                                                             
                 O'E                                                                169  LM00211
 02733 TRA +0 02000 0 02745                                                                                             
                      PRFULL.($'R DISK ERROR SENDING TO'8$,M,N,$'B'8$)              170  LM00212
 02734 TSX +0 07400 4 00030    02735 TXH +3 00000 0 01434    02736 TXH +3 00000 0 01457    02737 TXH +3 00000 0 01472   
 02740 TXH +3 00000 0 01454    02741 TXH +3 00000 0 01426    02742 TXH +3 00000 0 00024    02743 TXH +3 00000 0 00024   
 02744 TXH +3 00000 0 01432                                                                                             
                 E'L                                                                171  LM00213
                 F'N                                                                172  LM00215
 02745 TRA +0 02000 0 02767                                                                                             
                 E'N                                                                173  LM00216
 02746 TSX +0 07400 4 00013    02747 TXH +3 00000 0 00000    02750 SXD -0 63400 1 02747    02751 SXA +0 63400 4 02767   
 02752 CLA +0 50000 4 00001    02753 STO +0 60100 0 02652    02754 STO +0 60100 0 02673    02755 STO +0 60100 0 02707   
 02756 STO +0 60100 0 02724    02757 STO +0 60100 0 02742    02760 CLA +0 50000 4 00002    02761 STO +0 60100 0 02653   
 02762 STO +0 60100 0 02675    02763 STO +0 60100 0 02711    02764 STO +0 60100 0 02726    02765 STO +0 60100 0 02743   
 02766 TRA +0 02000 2 00001    02767 AXT +0 77400 4 00000    02770 LXA +0 53400 2 02747    02771 LXD -0 53400 1 02747   
 02772 TRA +0 02000 4 00001                                                                                             
                 E'M                                                                174  LM00218
 02773 TSX +0 07400 4 00013                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE   SMAIL   MAD            03/18/69    1008.6
-                 
                 ...FUCTION SENDS MAIL TO A USER                                                       LM00001    
                                                                                                       LM00002    
                  EXTERNAL FUNCTION(AD1,AD2,BUF,N,N1,N2)                                          *001 LM00003    
                  ENTRY TO SMAIL.                                                                 *002 LM00004    
                                                                                                       LM00005    
                  NORMAL MODE IS INTEGER                                                          *003 LM00006    
                                                                                                       LM00007    
                  A=4                                                                             *004 LM00008    
                  UNLINK.(T1,T2,S1)                                                               *005 LM00009    
      S1          LINK.(T1,T2,AD1,AD2,N1,N2,0,S7)                                                 *006 LM00010    
                  A=A-1                                                                           *007 LM00011    
                  TILOCK.(S5)                                                                     *008 LM00012    
                  FSTATE.(T1,T2,MODE(1)...2,S2)                                                   *009 LM00013    
                  WHENEVER MODE .A. 124K .NE. 0, TRANSFER TO S6                                   *010 LM00014    
                  CHFILE.(T1,T2,1,-0,-0,S2)                                                       *011 LM00015    
      S2          OPEN.($W$,T1,T2,1,2,S6)                                                         *012 LM00016    
                  A=A-1                                                                           *013 LM00017    
                  BUFFER.(T1,T2,B1(432)...432)                                                    *014 LM00018    
                  WRFILE.(T1,T2,0,BUF...N,-0,-0,S3)                                               *015 LM00019    
      S3          CLOSE.(T1,T2,S4)                                                                *016 LM00020    
                  A=A-1                                                                           *017 LM00021    
      S4          CHFILE.(T1,T2,0,-0,-0,S5)                                                       *018 LM00022    
      S5          A=A-1                                                                           *019 LM00023    
      S6          UNLINK.(T1,T2,S7)                                                               *020 LM00024    
      S7          FUNCTION RETURN A                                                               *021 LM00025    
                  VECTOR VALUES T1=$TEM$                                                          *022 LM00026    
                  VECTOR VALUES T2=$BOX$                                                          *023 LM00027    
                  DIMENSION B1(432), MODE(1)                                                      *024 LM00028    
                  END OF FUNCTION                                                                 *025 LM00029    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01115 TRANSFER VECTOR LENGTH  00012 PROGRAM BEGINS    00720
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      SMAIL  00721   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      A      00022   1        S1     00013   4        S4     00016   4        S6     00020   4        T1     00706 A 1  
      B1     00703 A 1        S2     00014   4        S5     00017   4        S7     00021   4        T2     00707 A 1  
      MODE   00705 A 1        S3     00015   4                                                                          
0FUNCTION DICTIONARY    
      BUFFER 00000   1        CHFILE 00001   1        CLOSE  00002   1        EXIT   00003   1        FSTATE 00004   1  
      LINK   00005   1        OPEN   00006   1        TILOCK 00007   1        UNLINK 00010   1        WRFILE 00011   1  
0ABSOLUTE CONSTANTS     
 00715 +000000000660     00717 -266060606060     00714 +000000000124     00712 +000000000002     00710 +000000000000    
 00713 +000000000004     00711 +000000000001     00716 +233000000000                                                    
0STATEMENT DICTIONARY   
 00013 TXL -300742000731       00014 TXL -301005000776       00015 TXL -301034001030       00016 TXL -301052001037      
 00017 TXL -301055001052       00020 TXL -301061001055       00021 TXL -301063001061                                    
0PROGRAM    
                 EXTERNAL FUNCTION(AD1,AD2,BUF,N,N1,N2)                             001  LM00003
                 E'O SMAIL.                                                         002  LM00004
 00720 TRA +0 02000 0 00723    00721 SXA +0 63400 2 01064    00722 TSX +0 07400 2 01064                                 
                 N'R                                                                003  LM00006
                 A=4                                                                004  LM00008
 00723 CLA +0 50000 0 00713    00724 STO +0 60100 0 00022                                                               
                 UNLINK.(T1,T2,S1)                                                  005  LM00009
 00725 TSX +0 07400 4 00010    00726 TXH +3 00000 0 00706    00727 TXH +3 00000 0 00707    00730 TXH +3 00000 0 00013   
      S1         LINK.(T1,T2,AD1,AD2,N1,N2,0,S7)                                    006  LM00010
 00731 TSX +0 07400 4 00005    00732 TXH +3 00000 0 00706    00733 TXH +3 00000 0 00707    00734 TXH +3 00000 0 00024   
 00735 TXH +3 00000 0 00024    00736 TXH +3 00000 0 00024    00737 TXH +3 00000 0 00024    00740 TXH +3 00000 0 00710   
 00741 TXH +3 00000 0 00021                                                                                             
                 A=A-1                                                              007  LM00011
 00742 CLA +0 50000 0 00022    00743 SUB +0 40200 0 00711    00744 STO +0 60100 0 00022                                 
                 TILOCK.(S5)                                                        008  LM00012
 00745 TSX +0 07400 4 00007    00746 TXH +3 00000 0 00017                                                               
                 FSTATE.(T1,T2,MODE(1)...2,S2)                                      009  LM00013
 00747 TSX +0 07400 4 00004    00750 TXH +3 00000 0 00706    00751 TXH +3 00000 0 00707    00752 TIX +2 00712 0 00704   
 00753 TXH +3 00000 0 00014                                                                                             
                 W'R MODE .A. 124K .NE. 0, T'O S6                                   010  LM00014
 00754 CAL -0 50000 0 00705    00755 ANA -0 32000 0 00714    00756 SLW +0 60200 0 01111    00757 CLA +0 50000 0 01111   
 00760 SUB +0 40200 0 00710    00761 TZE +0 10000 0 00763    00762 TRA +0 02000 0 00020                                 
                 CHFILE.(T1,T2,1,-0,-0,S2)                                          011  LM00015
 00763 CLS +0 50200 0 00710    00764 STO +0 60100 0 01111    00765 CLS +0 50200 0 00710    00766 STO +0 60100 0 01112   
 00767 TSX +0 07400 4 00001    00770 TXH +3 00000 0 00706    00771 TXH +3 00000 0 00707    00772 TXH +3 00000 0 00711   
 00773 TXH +3 00000 0 01112    00774 TXH +3 00000 0 01111    00775 TXH +3 00000 0 00014                                 
      S2         OPEN.($W$,T1,T2,1,2,S6)                                            012  LM00016
 00776 TSX +0 07400 4 00006    00777 TXH +3 00000 0 00717    01000 TXH +3 00000 0 00706    01001 TXH +3 00000 0 00707   
 01002 TXH +3 00000 0 00711    01003 TXH +3 00000 0 00712    01004 TXH +3 00000 0 00020                                 
                 A=A-1                                                              013  LM00017
 01005 CLA +0 50000 0 00022    01006 SUB +0 40200 0 00711    01007 STO +0 60100 0 00022                                 
                 BUFFER.(T1,T2,B1(432)...432)                                       014  LM00018
 01010 TSX +0 07400 4 00000    01011 TXH +3 00000 0 00706    01012 TXH +3 00000 0 00707    01013 TIX +2 00715 0 00023   
                 WRFILE.(T1,T2,0,BUF...N,-0,-0,S3)                                  015  LM00019
 01014 CLS +0 50200 0 00710    01015 STO +0 60100 0 01112    01016 CLS +0 50200 0 00710    01017 STO +0 60100 0 01111   
 01020 TSX +0 07400 4 00011    01021 TXH +3 00000 0 00706    01022 TXH +3 00000 0 00707    01023 TXH +3 00000 0 00710   
 01024 TIX +2 00400 0 00024    01025 TXH +3 00000 0 01111    01026 TXH +3 00000 0 01112    01027 TXH +3 00000 0 00015   
      S3         CLOSE.(T1,T2,S4)                                                   016  LM00020
 01030 TSX +0 07400 4 00002    01031 TXH +3 00000 0 00706    01032 TXH +3 00000 0 00707    01033 TXH +3 00000 0 00016   
                 A=A-1                                                              017  LM00021
 01034 CLA +0 50000 0 00022    01035 SUB +0 40200 0 00711    01036 STO +0 60100 0 00022                                 
      S4         CHFILE.(T1,T2,0,-0,-0,S5)                                          018  LM00022
 01037 CLS +0 50200 0 00710    01040 STO +0 60100 0 01112    01041 CLS +0 50200 0 00710    01042 STO +0 60100 0 01111   
 01043 TSX +0 07400 4 00001    01044 TXH +3 00000 0 00706    01045 TXH +3 00000 0 00707    01046 TXH +3 00000 0 00710   
 01047 TXH +3 00000 0 01111    01050 TXH +3 00000 0 01112    01051 TXH +3 00000 0 00017                                 
      S5         A=A-1                                                              019  LM00023
 01052 CLA +0 50000 0 00022    01053 SUB +0 40200 0 00711    01054 STO +0 60100 0 00022                                 
      S6         UNLINK.(T1,T2,S7)                                                  020  LM00024
 01055 TSX +0 07400 4 00010    01056 TXH +3 00000 0 00706    01057 TXH +3 00000 0 00707    01060 TXH +3 00000 0 00021   
      S7         F'N A                                                              021  LM00025
 01061 CLA +0 50000 0 00022    01062 TRA +0 02000 0 01105                                                               
                 V'S T1=$TEM$                                                       022  LM00026
 00706     -2 32544 6 06060                                                                                             
                 V'S T2=$BOX$                                                       023  LM00027
 00707     +2 24667 6 06060                                                                                             
                 D'N B1(432), MODE(1)                                               024  LM00028
                 E'N                                                                025  LM00029
 01063 TSX +0 07400 4 00003    01064 TXH +3 00000 0 00000    01065 SXD -0 63400 1 01064    01066 SXA +0 63400 4 01105   
 01067 CLA +0 50000 4 00001    01070 STO +0 60100 0 00734    01071 CLA +0 50000 4 00002    01072 STO +0 60100 0 00735   
 01073 CLA +0 50000 4 00003    01074 STA +0 62100 0 01024    01075 CLA +0 50000 4 00004    01076 ALS +0 76700 0 00022   
 01077 STD +0 62200 0 01024    01100 CLA +0 50000 4 00005    01101 STO +0 60100 0 00736    01102 CLA +0 50000 4 00006   
 01103 STO +0 60100 0 00737    01104 TRA +0 02000 2 00001    01105 AXT +0 77400 4 00000    01106 LXA +0 53400 2 01064   
 01107 LXD -0 53400 1 01064    01110 TRA +0 02000 4 00001                                                               




  MOVE   BCD 09/18/68 2318.3    5228         00000    
1            MOVE - MOVE A FILE.                                                                 PAGE 1     
                  
                                             1/10/66 - NOEL I. MORRIS   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                  
                  
        TRANSFER VECTOR 
      00000  246242255160     DSKER 
      00001  234647706060     COPY  
                  
                       00660  RCOUNT EQU     432
1            MOVE - MOVE A FILE.                                                                 PAGE 2     
                                                                                    
                  
      00002                          CALL    SETBRK(CHN)    
      00002  0074 00 4 00136         TSX     SETBRK,4                                                         .002
      00003  3 00000 0 00102         PAR     CHN                                                              .004
                  
      00004                          CALL    FERRTN        SET FILE SYSTEM ERROR RETURN   
      00004  0074 00 4 00137         TSX     FERRTN,4                                                         .002
      00005  0 00000 0 00000         PZE     $DSKER         ..    
                  
      00006                          CALL    GETCLS((CBUF,,0)) GET COMMAND BUFFER CONTENTS
      00006  0074 00 4 00140         TSX     GETCLS,4                                                         .002
      00007  3 00000 0 00107         PAR     CBUF,,0                                                          .004
                  
      00010 -0500 00 0 00107         CAL     CBUF          PICK UP NAME OF COMMAND  
      00011  0322 00 0 00172         ERA     =H  APND      CHECK FOR 'APND'   
      00012  0602 00 0 00134         SLW     TRSW.         IF 'APND', DON'T TRFILE  
                  
      00013  0774 00 4 00003         AXT     3,4           CHECK FIRST THREE PARAMETERS   
      00014 -0500 00 4 00113         CAL     CBUF+4,4      ..     
      00015  0322 00 0 00135         ERA     FENCE         FOR FENCE    
      00016  0100 00 0 00104         TZE     ILPAR         ..     
      00017  2 00001 4 00014         TIX     *-3,4,1       ..     
                  
      00020 -0500 00 0 00112         CAL     O1            IF OUTPUT NAME 1   
      00021  0322 00 0 00173         ERA     =H     *      IS AN ASTERISK,    
      00022 -0100 00 0 00025         TNZ     *+3,          ..     
      00023 -0500 00 0 00110         CAL     I1            IT IS SAME AS
      00024  0602 00 0 00112         SLW     O1            INPUT NAME 1 
                  
      00025 -0500 00 0 00113         CAL     O2            IF OUTPUT NAME 2   
      00026  0322 00 0 00135         ERA     FENCE         IS  NOT SPECIFIED, 
      00027 -0100 00 0 00032         TNZ     *+3           ..     
      00030 -0500 00 0 00111         CAL     I2            IT IS SAME AS
      00031  0602 00 0 00113         SLW     O2            INPUT NAME 2 
                  
      00032                          CALL    GETMEM        GET MEM BOUND AND ASSIGN BUFFERS     
      00032  0074 00 4 00141         TSX     GETMEM,4                                                         .002
      00033  0621 00 0 00072         STA     CALL+5        ..     
      00034  0361 00 0 00133         ACL     NWDSPR        ..     
      00035  0621 00 0 00073         STA     CALL+6        ..     
      00036  0361 00 0 00133         ACL     NWDSPR        ..     
      00037  0621 00 0 00074         STA     CALL+7        ..     
      00040  0361 00 0 00133         ACL     NWDSPR        ..     
      00041                          EXTEND  DBUF+3        ..     
      00041  0621 00 0 00064         STA     DBUF+3                                                           .003
      00042  0361 00 0 00157         ACL     =432                                                             .002
      00043  0074 00 4 00142         TSX     SETMEM,4                                                         .003
                  
      00044                          CALL    OPEN(=HW,O1,O2)         OPEN OUTPUT FILE     
      00044  0074 00 4 00143         TSX     OPEN,4                                                           .002
      00045  3 00000 0 00200         PAR     =HW                                                              .004
      00046  3 00000 0 00112         PAR     O1                                                               .004
      00047  3 00000 0 00113         PAR     O2                                                               .004
1            MOVE - MOVE A FILE.                                                                 PAGE 3     
                                                                                    
                  
      00050                          CALL    OPEN(=HR,I1,I2)         OPEN INPUT FILE
      00050  0074 00 4 00143         TSX     OPEN,4                                                           .002
      00051  3 00000 0 00171         PAR     =HR                                                              .004
      00052  3 00000 0 00110         PAR     I1                                                               .004
      00053  3 00000 0 00111         PAR     I2                                                               .004
                  
      00054  0520 00 0 00134         ZET     TRSW.         CHECK FOR TRUNCATION     
      00055                          CALL    TRFILE(O1,O2,=0)   TRUNCATE OUTPUT     
      00055  0074 00 4 00144         TSX     TRFILE,4                                                         .002
      00056  3 00000 0 00112         PAR     O1                                                               .004
      00057  3 00000 0 00113         PAR     O2                                                               .004
      00060  3 00000 0 00156         PAR     =0                                                               .004
                  
      00061                   DBUF   CALL    BUFFER(O1,O2(**,,RCOUNT)) ASSIGN BUFFER
      00061  0074 00 4 00145         TSX     BUFFER,4                                                         .002
      00062  3 00000 0 00112         PAR     O1                                                               .004
      00063  3 00000 0 00113         PAR     O2                                                               .004
      00064  3 00660 0 00000         PAR     **,,RCOUNT                                                       .004
                  
      00065                   CALL   CALL    $COPY(I1,I2,O1,O2,**,**,**,NWDSPR,$DSKER)     COPY THE FI
      00065  0074 00 4 00001         TSX     $COPY,4                                                          .002
      00066  3 00000 0 00110         PAR     I1                                                               .004
      00067  3 00000 0 00111         PAR     I2                                                               .004
      00070  3 00000 0 00112         PAR     O1                                                               .004
      00071  3 00000 0 00113         PAR     O2                                                               .004
      00072  3 00000 0 00000         PAR     **                                                               .004
      00073  3 00000 0 00000         PAR     **                                                               .004
      00074  3 00000 0 00000         PAR     **                                                               .004
      00075  3 00000 0 00133         PAR     NWDSPR                                                           .004
      00076  3 00000 0 00000         PAR     $DSKER                                                           .004
                  
      00077                   CLOS   CALL    CLOSE(=HALL,=-0)   CLOSE ALL FILES     
      00077  0074 00 4 00146         TSX     CLOSE,4                                                          .002
      00100  3 00000 0 00160         PAR     =HALL                                                            .004
      00101  3 00000 0 00167         PAR     =-0                                                              .004
                  
      00102                   CHN    CALL    CHNCOM(0)     EXIT TO CHNCOM     
      00102  0074 00 4 00147         TSX     CHNCOM,4                                                         .002
      00103  3 00000 0 00000         PAR     0                                                                .004
                  
                  
      00104                   ILPAR  COMENT  NOTNUF,5,(INCOMPLETE SET OF PARAMETERS.)     
      00104  0074 00 4 00150         TSX     WRFLX,4                                                          .003
      00105  3 00005 0 00151         PAR     NOTNUF,,5                                                        .005
      00106  0021 00 0 00102         XIT     CHN           ..     
1            MOVE - MOVE A FILE.                                                                 PAGE 4     
                                                                                    
                  
      00107                   CBUF   BSS     20 
                  
                       00110  I1     SYN     CBUF+1   
                       00111  I2     SYN     CBUF+2   
                       00112  O1     SYN     CBUF+3   
                       00113  O2     SYN     CBUF+4   
                  
                  
      00133  0 00000 0 06600  NWDSPR PZE     8*RCOUNT 
      00134  0 00000 0 00000  TRSW.  PZE     0  
      00135  777777777777     FENCE  VFD     O36//    
                  
                  
      00136                          RMT     *             REMOTE SEQUENCES.  
      00136  0101 00 0 00174  SETBRK TIA     =HSETBRK                                                         .002
      00137  0101 00 0 00164  FERRTN TIA     =HFERRTN                                                         .002
      00140  0101 00 0 00165  GETCLS TIA     =HGETCLS                                                         .002
      00141  0101 00 0 00166  GETMEM TIA     =HGETMEM                                                         .002
      00142  0101 00 0 00175  SETMEM TIA     =HSETMEM                                                         .002
      00143  0101 00 0 00170  OPEN   TIA     =HOPEN                                                           .002
      00144  0101 00 0 00176  TRFILE TIA     =HTRFILE                                                         .002
      00145  0101 00 0 00161  BUFFER TIA     =HBUFFER                                                         .002
      00146  0101 00 0 00163  CLOSE  TIA     =HCLOSE                                                          .002
      00147  0101 00 0 00162  CHNCOM TIA     =HCHNCOM                                                         .002
      00150  0101 00 0 00177  WRFLX  TIA     =HWRFLX                                                          .002
      00151  314523464447     NOTNUF BCI     5,INCOMPLETE SET OF PARAMETERS.                                  .002
      00152  432563256062     
      00153  256360462660     
      00154  472151214425     
      00155  632551623360     
                  
                  
                                     END  
                  
        LITERALS  
      00156  000000000000     
      00157  000000000660     
      00160  214343606060     
      00161  226426262551     
      00162  233045234644     
      00163  234346622560     
      00164  262551516345     
      00165  272563234362     
      00166  272563442544     
      00167  400000000000     
      00170  464725456060     
      00171  516060606060     
      00172  606021474524     
      00173  606060606054     
      00174  622563225142     
      00175  622563442544     
      00176  635126314325     
      00177  665126436760     
      00200  666060606060     
1            MOVE - MOVE A FILE.                                                                 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        201 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        110     I1    23,   52,   66,  133
        111     I2    30,   53,   67,  133
        112     O1    20,   24,   46,   56,   62,   70,  133
        113     O2    25,   31,   47,   57,   63,   71,  133
        102    CHN     3,  106
         65   CALL    33,   35,   37
        107   CBUF     7,   10,   14,  133
         77   CLOS      
          1   COPY    65
         61   DBUF    41
        143   OPEN    44,   50
        146  CLOSE    77
          0  DSKER     5,   76
        135  FENCE    15,   26
        104  ILPAR    16
        134  TRSW.    12,   54
        150  WRFLX   104
        145 BUFFER    61
        147 CHNCOM   102
        137 FERRTN     4
        140 GETCLS     6
        141 GETMEM    32
        151 NOTNUF   105
        133 NWDSPR    34,   36,   40,   75
        660 RCOUNT     2,   64,  133
        136 SETBRK     2
        142 SETMEM    43
        144 TRFILE    55
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            COPY - COPY ONE FILE INTO ANOTHER.                                                  PAGE 1     
                  
                                             1/18/66 - NOEL I. MORRIS   
                  
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                              *     
                              *      CALLING SEQUENCE -     
                              *     
                              *      COPY. (IN1, IN2, OUT1, OUT2, BUFF1, BUFF2, BUFF3, NWDSPR, ERRET) 
                              *     
                              *      IN1    = PRIMARY NAME OF INPUT FILE.     
                              *      IN2    = SECONDARY NAME OF INPUT FILE.   
                              *      OUT1   = PRIMARY NAME OF OUTPUT FILE.    
                              *      OUT2   = SECONDARY NAME OF OUTPUT FILE.  
                              *      BUFF1, BUFF2, AND BUFF3 ARE DISK BUFFERS.
                              *      NWDSPR = LENGTH OF THE DISK BUFFERS.     
                              *      ERRET  = FILE SYSTEM ERROR RETURN. 
                              *     
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                  
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00000         ENTRY   COPY     
                  
      00000  0634 00 1 00107  COPY   SXA     X1,1          SAVE XRS     
      00001  0634 00 2 00110         SXA     X2,2          ..     
      00002  0634 00 4 00111         SXA     X4,4          ..     
                  
      00003 -0500 60 4 00001         CAL*    1,4           GET IN1
      00004  0602 00 0 00170         SLW     IN1           ..     
      00005 -0500 60 4 00002         CAL*    2,4           GET IN2
      00006  0602 00 0 00171         SLW     IN2           ..     
      00007 -0500 60 4 00003         CAL*    3,4           GET OUT1     
      00010  0602 00 0 00172         SLW     OUT1          ..     
      00011 -0500 60 4 00004         CAL*    4,4           GET OUT2     
      00012  0602 00 0 00173         SLW     OUT2          ..     
      00013 -0500 00 4 00005         CAL     5,4           GET BUFFER ADDRESSES     
      00014  0621 00 0 00151         STA     BUFF1         ..     
      00015 -0500 00 4 00006         CAL     6,4           ..     
      00016  0621 00 0 00152         STA     BUFF2         ..     
      00017 -0500 00 4 00007         CAL     7,4           ..     
      00020  0621 00 0 00153         STA     BUFF3         ..     
      00021 -0500 60 4 00010         CAL*    8,4           GET RECORD COUNT   
      00022  0602 00 0 00154         SLW     EOFCT         ..     
      00023  0602 00 0 00155         SLW     EOFCT+1       ..     
      00024  0602 00 0 00156         SLW     EOFCT+2       ..     
                  
      00025                          CALL    FERRTN        SET UP FILE SYSTEM ERROR RETURN
      00025  0074 00 4 00174         TSX     FERRTN,4                                                         .002
      00026  0 00000 0 00141         PZE     ERR           ..     
      00027  0621 00 0 00106         STA     RETERR        SAVE OLD ERROR RETURN    
1            COPY - COPY ONE FILE INTO ANOTHER.                                                  PAGE 2     
                  
      00030  0600 00 0 00166         STZ     TEOF          RESET EOF INDIC.   
      00031 -0625 00 0 00165         STL     FIRST         SET FIRST TIME INDIC.    
                  
      00032                          CALL    FSTATE(IN1,IN2(STAT,,5)) PICK UP INPUT FILE STATUS 
      00032  0074 00 4 00175         TSX     FSTATE,4                                                         .002
      00033  3 00000 0 00170         PAR     IN1                                                              .004
      00034  3 00000 0 00171         PAR     IN2                                                              .004
      00035  3 00005 0 00157         PAR     STAT,,5                                                          .004
                  
      00036 -0774 00 1 00000         AXC     0,1           INITIALIZE INPUT BUFFER INDEX  
      00037 -0774 00 2 00000         AXC     0,2           INITIALIZE OUTPUT BUFFER INDEX 
                  
                       00040  LOOP   SYN     *  
                  
      00040  0520 00 0 00166         ZET     TEOF          CHECK FOR PREVIOUS EOF   
      00041  0020 00 0 00065         TRA     CONTIN        SKIP READ IF SO    
                  
      00042 -0500 00 1 00151         CAL     BUFLOC,1      SET BUFFER FOR READ
      00043  0602 00 0 00050         SLW     RD+4          ..     
                  
      00044                   RD     CALL    RDFILE(IN1,IN2,=0(**,...,**)EOF,COUNT) READ  
      00044  0074 00 4 00176         TSX     RDFILE,4                                                         .002
      00045  3 00000 0 00170         PAR     IN1                                                              .004
      00046  3 00000 0 00171         PAR     IN2                                                              .004
      00047  3 00000 0 00201         PAR     =0                                                               .004
      00050  2 00000 0 00000         BLK     **,,**                                                           .004
      00051  3 00000 0 00113         PAR     EOF                                                              .004
      00052  3 00000 0 00164         PAR     COUNT                                                            .004
                  
      00053  0500 00 0 00163         CLA     R.PTR         STEP THE READ POINTER    
      00054  0400 00 0 00154         ADD     EOFCT         BY BUFFER LENGTH   
      00055  0602 00 0 00163         SLW     R.PTR         ..     
                  
      00056  1 77777 1 00057         TXI     *+1,1,-1      STEP READ BUFFER INDEX   
      00057  3 77775 1 00061         TXH     *+2,1,-3      ..     
      00060 -0774 00 1 00000         AXC     0,1           ..     
                  
      00061 -0520 00 0 00165         NZT     FIRST         IF NOT FIRST TIME, 
      00062  0020 00 0 00065         TRA     CONTIN        KEEP GOING   
      00063  0600 00 0 00165         STZ     FIRST         OTHERWISE,   
      00064  0020 00 0 00040         TRA     LOOP          GO READ ANOTHER RECORD   
                  
                  
      00065 -0500 00 2 00151  CONTIN CAL     BUFLOC,2      SET BUFFER FOR WRITE     
      00066  0602 00 0 00073         SLW     WR+4          ..     
                  
      00067                   WR     CALL    WRFILE(OUT1,OUT2,=0(**,...,**)) WRITE  
      00067  0074 00 4 00177         TSX     WRFILE,4                                                         .002
      00070  3 00000 0 00172         PAR     OUT1                                                             .004
      00071  3 00000 0 00173         PAR     OUT2                                                             .004
      00072  3 00000 0 00201         PAR     =0                                                               .004
      00073  2 00000 0 00000         BLK     **,,**                                                           .004
                  
      00074 -0520 00 0 00166         NZT     TEOF          IF EOF,
      00075  0020 00 0 00101         TRA     WINCR         ..     
      00076  0756 00 2 00000         PCA     ,2            CHECK FOR HAVING WRITTEN LAST RECORD 
1            COPY - COPY ONE FILE INTO ANOTHER.                                                  PAGE 3     
                  
      00077  0402 00 0 00167         SUB     EOFX          ..     
      00100  0100 00 0 00105         TZE     FINISH        ..     
                  
      00101  1 77777 2 00102  WINCR  TXI     *+1,2,-1      STEP WRITE BUFFER INDEX  
      00102  3 77775 2 00104         TXH     *+2,2,-3      ..     
      00103 -0774 00 2 00000         AXC     0,2           ..     
      00104  0020 00 0 00040         TRA     LOOP          CONTINUE COPYING   
                  
                  
                       00105  FINISH SYN     *  
      00105                          CALL    FERRTN        RESTORE OLD ERROR RETURN 
      00105  0074 00 4 00174         TSX     FERRTN,4                                                         .002
      00106  0 00000 0 00000  RETERR PZE     **            ..     
                  
      00107  0774 00 1 00000  X1     AXT     **,1          RESTORE XRS  
      00110  0774 00 2 00000  X2     AXT     **,2          ..     
      00111  0774 00 4 00000  X4     AXT     **,4          ..     
      00112  0020 00 4 00012         TRA     10,4          RETURN 
                  
      00113 -0625 00 0 00166  EOF    STL     TEOF          SET EOF INDIC.     
                  
      00114                          CALL    FSTATE(IN1,IN2(STAT,,1)) FIND LENGTH NOW     
      00114  0074 00 4 00175         TSX     FSTATE,4                                                         .002
      00115  3 00000 0 00170         PAR     IN1                                                              .004
      00116  3 00000 0 00171         PAR     IN2                                                              .004
      00117  3 00001 0 00157         PAR     STAT,,1                                                          .004
                  
      00120  0500 00 0 00157         CLA     STAT          LENGTH + 1 - POINTER     
      00121  0400 00 0 00202         ADD     =1            ..     
      00122  0402 00 0 00163         SUB     R.PTR         ..     
      00123  0402 00 0 00164         SUB     COUNT         SHOULD EQUAL EOF COUNT   
      00124  0100 00 0 00132         TZE     EOF.OK        IF SO, NOTHING TO CORRECT
                  
      00125  0400 00 0 00154         ADD     EOFCT         LENGTH + 1 - POINTER + BUFFER LENGTH 
      00126  0601 00 0 00164         STO     COUNT         IS THE CORRECT EOF COUNT 
                  
      00127  3 00000 1 00131         TXH     *+2,1,0       DECREASE THE READ BUFFER INDEX 
      00130 -0774 00 1 00003         AXC     3,1           ..     
      00131  1 00001 1 00132         TXI     *+1,1,1       TO CORRECT FOR MISSED EOF
                  
      00132 -0500 00 0 00164  EOF.OK CAL     COUNT         SET EOF COUNT
      00133  0602 00 1 00154         SLW     EOFCT,1       ..     
      00134  0636 00 1 00167         SCA     EOFX,1        SAVE READ BUFFER INDEX   
                  
      00135                          CALL    FWAIT(IN1,IN2) WAIT FOR I/O
      00135  0074 00 4 00200         TSX     FWAIT,4                                                          .002
      00136  3 00000 0 00170         PAR     IN1                                                              .004
      00137  3 00000 0 00171         PAR     IN2                                                              .004
      00140  0020 00 0 00065         TRA     CONTIN        NOW, FINISH UP     
                  
      00141 -0500 00 0 00106  ERR    CAL     RETERR        RESTORE OLD ERROR RETURN 
      00142  0621 00 0 00144         STA     *+2           ..     
      00143                          CALL    FERRTN        ..     
      00143  0074 00 4 00174         TSX     FERRTN,4                                                         .002
      00144  0 00000 0 00000         PZE     **            ..     
1            COPY - COPY ONE FILE INTO ANOTHER.                                                  PAGE 4     
                  
      00145  0522 00 0 00107         XEC     X1            RESTORE XRS  
      00146  0522 00 0 00110         XEC     X2            ..     
      00147  0522 00 0 00111         XEC     X4            ..     
      00150  0020 60 4 00011         TRA*    9,4           AND TAKE ERROR RETURN    
                  
                  
                       00151  BUFLOC SYN     *  
      00151  2 00154 0 00000  BUFF1  PTW     **,,EOFCT
      00152  2 00155 0 00000  BUFF2  PTW     **,,EOFCT+1    
      00153  2 00156 0 00000  BUFF3  PTW     **,,EOFCT+2    
                  
      00154                   EOFCT  BSS     3  
                  
      00157                   STAT   BSS     5  
                       00163  R.PTR  SYN     STAT+4   
                  
      00164  0 00000 0 00000  COUNT  PZE  
      00165  0 00000 0 00000  FIRST  PZE  
      00166  0 00000 0 00000  TEOF   PZE  
      00167  0 00000 0 00000  EOFX   PZE  
                  
      00170  0 00000 0 00000  IN1    PZE  
      00171  0 00000 0 00000  IN2    PZE  
      00172  0 00000 0 00000  OUT1   PZE  
      00173  0 00000 0 00000  OUT2   PZE  
                  
      00174                          RMT     *             REMOTE SEQUENCES.  
      00174  0101 00 0 00203  FERRTN TIA     =HFERRTN                                                         .002
      00175  0101 00 0 00204  FSTATE TIA     =HFSTATE                                                         .002
      00176  0101 00 0 00206  RDFILE TIA     =HRDFILE                                                         .002
      00177  0101 00 0 00207  WRFILE TIA     =HWRFILE                                                         .002
      00200  0101 00 0 00205  FWAIT  TIA     =HFWAIT                                                          .002
                  
                                     END  
                  
        LITERALS  
      00201  000000000000     
      00202  000000000001     
      00203  262551516345     
      00204  266263216325     
      00205  266621316360     
      00206  512426314325     
      00207  665126314325     
1            COPY - COPY ONE FILE INTO ANOTHER.                                                  PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        210 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         44     RD    43
         67     WR    66
        107     X1     0,  145
        110     X2     1,  146
        111     X4     2,  147
        113    EOF    51
        141    ERR    26
        170    IN1     4,   33,   45,  115,  136
        171    IN2     6,   34,   46,  116,  137
          0   COPY     0
        167   EOFX    77,  134
         40   LOOP    40,   64,  104
        172   OUT1    10,   70
        173   OUT2    12,   71
        157   STAT    35,  117,  120,  164
        166   TEOF    30,   40,   74,  113
        151  BUFF1    14
        152  BUFF2    16
        153  BUFF3    20
        164  COUNT    52,  123,  126,  132
        154  EOFCT    22,   23,   24,   54,  125,  133,  151,  152,  153
        165  FIRST    31,   61,   63
        200  FWAIT   135
        163  R.PTR    53,   55,  122,  164
        101  WINCR    75
        151 BUFLOC    42,   65,  151
         65 CONTIN    41,   62,  140
        132 EOF.OK   124
        174 FERRTN    25,  105,  143
        105 FINISH   100,  105
        175 FSTATE    32,  114
        176 RDFILE    44
        106 RETERR    27,  141
        177 WRFILE    67
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




NOCMMD   BCD 10/04/70 1632.0     283         00000    
1                                                                                                PAGE 1     
                  
                  
        TRANSFER VECTOR 
      00000  272563234644     GETCOM
      00001  665126436760     WRFLX 
                  
      00002  0074 00 4 00000         TSX     $GETCOM,4
      00003  0 00000 0 00000         PZE     0             GET CURRNT COMMAND NAME  
      00004  0602 00 0 00011         SLW     MESS+1   
      00005  0074 00 4 00001         TSX     $WRFLX,4 
      00006  0 00011 0 00010         PZE     MESS,,9  
      00007  0101 00 0 00021         TIA     =HDEAD   
      00010  606063302560     MESS   BCI     9,  THE ****** COMMAND IS NOT CURRENTLY AVAILABLE. 
      00011  545454545454     
      00012  602346444421     
      00013  452460316260     
      00014  454663602364     
      00015  515125456343     
      00016  706021652131     
      00017  432122432533     
      00020  606060606060     
                                     END  
                  
        LITERALS  
      00021  242521246060     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         22 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         10   MESS     4,    6
          1  WRFLX     5
          0 GETCOM     2
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




OPTION   BCD 10/04/70 1632.0    6463         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  OPTION   MAD            03/03/70    1030.8
-                 
      OPT        ...OPTION COMMAND                                                                     LM00001    
                                                                                                       LM00002    
                  NORMAL MODE IS INTEGER                                                          *001 LM00003    
                  GETCLS.(CBF(20))                                                                *002 LM00004    
                                                                                                       LM00005    
                  WHENEVER CBF(19) .E. FNS                                                        *003 LM00006    
                    PR12.($'*'6OPTION'7 ARGS$)                                                    *004 LM00007    
                    PR12.($  ARGS MAY BE$)                                                        *005 LM00008    
                    PR12.($ '6PRINT'7'/'/TO PRINT OPTION STATUS$)                                 *006 LM00009    
                    PR12.($ '6SETSYS'7 SYSNAM MASK'/TO SET UP SUBSYSTEM$)                         *007 LM00010    
                    PR12.($ '6SET'7 BITS'/'/TO TURN ON USER OPTION BITS$)                         *008 LM00011    
                    PR12.($ '6RESET'7 BITS'/TO TURN OFF OPTION BITS$)                             *009 LM00012    
                    PR12.($ '6LOAD'7 BITS'/TO LOAD A NEW SET OF OPTIONS$)                         *010 LM00013    
                    PR12.($ '6HELP'7'/'/FOR A SUMMARY OF OPTIONS '+ MASK$)                        *011 LM00014    
                    PR12.                                                                         *012 LM00015    
                                                                                                       LM00016    
                  OR WHENEVER CBF(19) .E. $SETSYS$                                                *013 LM00017    
                    SYSNAM = CBF(18)                                                              *014 LM00018    
                    WHENEVER SYSNAM .E. FNS                                                       *015 LM00019    
      FOO                   PR12.($ ILLEGAL OPTION COMMAND.$)                                     *016 LM00020    
      XIT                   CHNCOM.(0)                                                            *017 LM00021    
                    END OF CONDITIONAL                                                            *018 LM00022    
                    BITS = ZEL.(CBF(17))                                                          *019 LM00023    
                    WHENEVER BITS .A. $YYYYYY$ .NE. 0                                             *020 LM00024    
      BADBIT                PR12.($ ILLEGAL BITS$)                                                *021 LM00025    
                      TRANSFER TO XIT                                                             *022 LM00026    
                    END OF CONDITIONAL                                                            *023 LM00027    
                    SETSYS.(SYSNAM, BCOCT.(BITS))                                                 *024 LM00028    
                                                                                                       LM00029    
                  OR WHENEVER CBF(19) .E. $   SET$                                                *025 LM00030    
                    BITS = ZEL.(CBF(18))                                                          *026 LM00031    
                    WHENEVER BITS .A. $YYYYYY$ .NE. 0, TRANSFER TO BADBIT                         *027 LM00032    
                    SETOPT.(BCOCT.(BITS))                                                         *028 LM00033    
                                                                                                       LM00034    
                  OR WHENEVER CBF(19) .E. $ RESET$                                                *029 LM00035    
                    BITS = ZEL.(CBF(18))                                                          *030 LM00036    
                    WHENEVER BITS .A. $YYYYYY$ .NE. 0, TRANSFER TO BADBIT                         *031 LM00037    
                    RSOPT.(BCOCT.(BITS))                                                          *032 LM00038    
                                                                                                       LM00039    
                  OR WHENEVER CBF(19) .E. $  LOAD$                                                *033 LM00040    
                    BITS = ZEL.(CBF(18))                                                          *034 LM00041    
                    WHENEVER BITS .A. $YYYYYY$ .NE. 0, TRANSFER TO BADBIT                         *035 LM00042    
                    LDOPT.(BCOCT.(BITS))                                                          *036 LM00043    
                                                                                                       LM00044    
                  OR WHENEVER CBF(19) .E. $  HELP$                                                *037 LM00045    
                    PR12.($'USER OPTIONS:$)                                                       *038 LM00046    
                    PR12.($     1. SEARCH USER 'U'F'D FIRST FOR COMMAND FILE$)                    *039 LM00047    
                    PR12.($     2. SEARCH FOR COMMANDS IN USER OR SYSTEM DIRECT                   *040 LM00048    
                1 ORIES, BUT NOT BOTH$)                                                           *040 LM00049    
                    PR12.($     4. RESET ACTIVE FILES IF NEW COMMAND WHILE DORM                   *041 LM00050    
                1 ANT RESETS CORE IMAGE$)                                                         *041 LM00051    
                    PR12.($    10. ENABLE USER SUBSYSTEM$)                                        *042 LM00052    
                    PR12.($    20. INHIBIT QUIT SIGNALS FROM CONSOLE$)                            *043 LM00053    
                    PR12.($    40. CURRENT PROGRAM IS SUBSYSTEM$)                                 *044 LM00054    
                    PR12.($   100. AUTOMATIC SAVE WHEN GOING TO SUBSYSTEM$)                       *045 LM00055    
                    PR12.($'*'SUBSYSTEM CONDITION CODE MASK:$)                                    *046 LM00056    
                    PR12.($     1. TRAP NEW COMMAND IF '6DEAD$)                                   *047 LM00057    
                    PR12.($     2. TRAP PROGRAM CALL TO '6DEAD$)                                  *048 LM00058    
                    PR12.($     4. TRAP END OF COMMAND CHAIN IF GOING '6DEAD                      *049 LM00059    
                1 $)                                                                              *049 LM00060    
                    PR12.($    10. TRAP ERROR IF GOING '6DEAD$)                                   *050 LM00061    
                    PR12.($  1000. TRAP NEW COMMAND IF '6DORMNT$)                                 *051 LM00062    
                    PR12.($  2000. TRAP CALL TO '6DORMNT$)                                        *052 LM00063    
                    PR12.($  4000. TRAP END OF CHAIN IF '6DORMNT$)                                *053 LM00064    
                    PR12.($ 10000. TRAP ERROR IF GOING '6DORMNT$)                                 *054 LM00065    
                    PR12.                                                                         *055 LM00066    
                                                                                                       LM00067    
                  OR WHENEVER CBF(19) .E. $ PRINT$                                                *056 LM00068    
                    GETSYS.(SYSNAM, BITS)                                                         *057 LM00069    
                    OBITS = GETOPT.(0)                                                            *058 LM00070    
                    PR12.($'*'CURRENT OPTION STATUS:$)                                            *059 LM00071    
                    PR12.($ OPTION BITS:    '8$,OCRBC.(OBITS))                                    *060 LM00072    
                    WHENEVER OBITS .A. 10K .NE. 0                                                 *061 LM00073    
                      PR12.($ SUBSYSTEM:      '6'8$,SYSNAM)                                       *062 LM00074    
                      PR12.($ SUBSYSTEM MASK: '8$,OCRBC.(BITS))                                   *063 LM00075    
                    OTHERWISE                                                                     *064 LM00076    
                      PR12.($ NO SUBSYSTEM$)                                                      *065 LM00077    
                    END OF CONDITIONAL                                                            *066 LM00078    
                    PR12.                                                                         *067 LM00079    
                                                                                                       LM00080    
                  OTHERWISE                                                                       *068 LM00081    
                    TRANSFER TO FOO                                                               *069 LM00082    
                  END OF CONDITIONAL                                                              *070 LM00083    
                  CHNCOM.(0)                                                                      *071 LM00084    
                                                                                                       LM00085    
                  VECTOR VALUES FNS    = 777777777777K                                            *072 LM00086    
                  DIMENSION CBF(20)                                                               *073 LM00087    
                  END OF PROGRAM                                                                  *074 LM00088    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01101 TRANSFER VECTOR LENGTH  00016 PROGRAM BEGINS    00330
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BADBIT 00017   4        CBF    00047 A 1        FOO    00020   4        SYSNAM 00052   1        XIT    00021   4  
      BITS   00022   1        FNS    00050 A 1        OBITS  00051   1                                                  
0FUNCTION DICTIONARY    
      BCOCT  00000   1        CHNCOM 00001   1        EXIT   00002   1        GETCLS 00003   1        GETOPT 00004   1  
      GETSYS 00005   1        .SETUP 00006   1        LDOPT  00007   1        OCRBC  00010   1        PR12   00011   1  
      RSOPT  00012   1        SETOPT 00013   1        SETSYS 00014   1        ZEL    00015   1                          
0ABSOLUTE CONSTANTS     
 00154 -046060606060     00103 +226270626325     00234 -204546606264     00077 +216242356014     00301 -226325446044    
 00056 +061410606060     00260 -206060606014     00300 -226325443560     00055 +000000000010     00061 +106060606060    
 00145 +356060606014     00161 -056022316362     00146 +356060606060     00200 -112545636046     00065 +145414236451    
 00240 -204751314563     00206 -200100000000     00315 -236060606060     00060 +062446514445     00162 -056031266014    
 00123 +266023302131     00245 -206004000000     00172 -065144456360     00312 -234660140624     00217 -202321434360    
 00244 -206002000000     00112 +244651444563     00243 -206001000000     00127 +314527601406     00226 -203126602746    
 00223 -202551514651     00113 +246060606060     00207 -201406242521     00224 -202746314527     00071 +213145603126    
 00075 +214524602330     00124 +266023464444     00222 -202545246046     00057 +062425212460     00150 -036063466014    
 00074 +214460232143     00241 -204751462751     00110 +242521246060     00225 -203126601406     00170 -064444214524    
 00233 -204525666023     00144 +336063512147     00274 -224235606060     00166 -062425604421     00311 -233146456023    
 00221 -202346452431     00066 +145414626422     00302 -226325446060     00262 -206264226270     00130 +314527606346    
 00125 +302545602746     00270 -222165256066     00151 -042163312360     00136 +336021646346     00251 -206060010000    
 00306 -227062632544     00133 +316260626422     00167 -062751214460     00115 +254563604751     00137 +336023645151    
 00254 -206060600400     00163 -056246432560     00202 -114644602346     00155 -052143626026     00134 +316360623127    
 00101 +223163605064     00141 +336031453031     00253 -206060600200     00326 -306263254460     00204 -116062642262    
 00147 -032560646225     00140 +336025452122     00252 -206060600100     00117 +256031442127     00320 -236260234651    
 00314 -236051256225     00111 +244651442145     00325 -263031432560     00153 -044421452460     00160 -052566602346    
 00121 +256260312660     00324 -252560263143     00313 -236021236331     00142 +336051256225     00257 -206060606004    
 00216 -202246633060     00323 -246360454663     00126 +312562736022     00177 -112523634651     00307 -232544602431    
 00173 -065160627062     00264 -206462255160     00157 -052462603145     00105 +233060264651     00256 -206060606002    
 00156 -052460263143     00220 -202346444421     00303 -226360264651     00063 +142460263151     00203 -116014641426    
 00106 +233060646225     00143 +336062252151     00255 -206060606001     00273 -223560606060     00070 +146462255160    
 00247 -206030254347     00250 -206043462124     00242 -205125622563     00261 -206060622563     00276 -226060606060    
 00072 +214360223163     00327 -307070707070     00053 +000000000000     00152 -044421452433     00132 +314645602346    
 00073 +214360464763     00227 -203143432527     00272 -222563627062     00100 +216242606060     00275 -226014206044    
 00171 -064763314645     00205 -117060462660     00263 -206264444421     00265 -212646516021     00175 -071407146114    
 00210 -201406302543     00164 -056260606060     00237 -204647633146     00271 -222563604626     00076 +216045256660    
 00230 -204346212460     00317 -236214616346     00107 +241407602231     00211 -201406434621     00102 +223163626060    
 00235 -204626266046     00135 +316362146163     00122 +256314076022     00213 -201406512562     00321 -236260606060    
 00131 +314645602231     00116 +255160464763     00236 -204645606462     00174 -066063645145     00267 -221461146163    
 00062 +140760223163     00114 +254460606060     00322 -242262706263     00316 -236064476062     00266 -216346606225    
 00231 -204421624214     00305 -227062452144     00304 -227062140760     00214 -201406622563     00277 -226321636462    
 00176 -076331464560     00201 -113145636046     00067 +146163466047     00165 -056314071461     00212 -201406475131    
 00120 +256060606060     00232 -204421706022     00246 -206021512762     00215 -202151276260     00310 -233146451407    
 00064 +145414064647     00054 +000000000001     00104 +233000000000                                                    
0STATEMENT DICTIONARY   
 00017 TXL -300467000463       00020 TXL -300450000443       00021 TXL -300452000450                                    
0PROGRAM    
                 N'R                                                                001  LM00003
                 GETCLS.(CBF(20))                                                   002  LM00004
 00330 TSX +0 07400 4 00006    00331 TSX +0 07400 4 00003    00332 TXH +3 00000 0 00023                                 
                 W'R CBF(19) .E. FNS                                                003  LM00006
 00333 CLA +0 50000 0 00024    00334 SUB +0 40200 0 00050    00335 TNZ -0 10000 0 00433                                 
                   PR12.($'*'6OPTION'7 ARGS$)                                       004  LM00007
 00336 TSX +0 07400 4 00011    00337 TXH +3 00000 0 00064    00340 TXH +3 00000 0 00310    00341 TXH +3 00000 0 00215   
                   PR12.($  ARGS MAY BE$)                                           005  LM00008
 00342 TSX +0 07400 4 00011    00343 TXH +3 00000 0 00246    00344 TXH +3 00000 0 00232    00345 TXH +3 00000 0 00120   
                   PR12.($ '6PRINT'7'/'/TO PRINT OPTION STATUS$)                    006  LM00009
 00346 TSX +0 07400 4 00011    00347 TXH +3 00000 0 00212    00350 TXH +3 00000 0 00165    00351 TXH +3 00000 0 00067   
 00352 TXH +3 00000 0 00201    00353 TXH +3 00000 0 00176    00354 TXH +3 00000 0 00277                                 
                   PR12.($ '6SETSYS'7 SYSNAM MASK'/TO SET UP SUBSYSTEM$)            007  LM00010
 00355 TSX +0 07400 4 00011    00356 TXH +3 00000 0 00214    00357 TXH +3 00000 0 00304    00360 TXH +3 00000 0 00305   
 00361 TXH +3 00000 0 00231    00362 TXH +3 00000 0 00266    00363 TXH +3 00000 0 00316    00364 TXH +3 00000 0 00322   
 00365 TXH +3 00000 0 00114                                                                                             
                   PR12.($ '6SET'7 BITS'/'/TO TURN ON USER OPTION BITS$)            008  LM00011
 00366 TSX +0 07400 4 00011    00367 TXH +3 00000 0 00214    00370 TXH +3 00000 0 00062    00371 TXH +3 00000 0 00267   
 00372 TXH +3 00000 0 00174    00373 TXH +3 00000 0 00236    00374 TXH +3 00000 0 00116    00375 TXH +3 00000 0 00131   
 00376 TXH +3 00000 0 00321                                                                                             
                   PR12.($ '6RESET'7 BITS'/TO TURN OFF OPTION BITS$)                009  LM00012
 00377 TSX +0 07400 4 00011    00400 TXH +3 00000 0 00213    00401 TXH +3 00000 0 00122    00402 TXH +3 00000 0 00135   
 00403 TXH +3 00000 0 00174    00404 TXH +3 00000 0 00235    00405 TXH +3 00000 0 00176    00406 TXH +3 00000 0 00102   
                   PR12.($ '6LOAD'7 BITS'/TO LOAD A NEW SET OF OPTIONS$)            010  LM00013
 00407 TSX +0 07400 4 00011    00410 TXH +3 00000 0 00211    00411 TXH +3 00000 0 00107    00412 TXH +3 00000 0 00317   
 00413 TXH +3 00000 0 00230    00414 TXH +3 00000 0 00076    00415 TXH +3 00000 0 00271    00416 TXH +3 00000 0 00237   
 00417 TXH +3 00000 0 00164                                                                                             
                   PR12.($ '6HELP'7'/'/FOR A SUMMARY OF OPTIONS '+ MASK$)           011  LM00014
 00420 TSX +0 07400 4 00011    00421 TXH +3 00000 0 00210    00422 TXH +3 00000 0 00175    00423 TXH +3 00000 0 00265   
 00424 TXH +3 00000 0 00263    00425 TXH +3 00000 0 00205    00426 TXH +3 00000 0 00171    00427 TXH +3 00000 0 00275   
 00430 TXH +3 00000 0 00100                                                                                             
                   PR12.                                                            012  LM00015
 00431 TSX +0 07400 4 00011                                                                                             
                 O'R CBF(19) .E. $SETSYS$                                           013  LM00017
 00432 TRA +0 02000 0 01073    00433 CLA +0 50000 0 00024    00434 SUB +0 40200 0 00272    00435 TNZ -0 10000 0 00477   
                   SYSNAM = CBF(18)                                                 014  LM00018
 00436 CLA +0 50000 0 00025    00437 STO +0 60100 0 00052                                                               
                   W'R SYSNAM .E. FNS                                               015  LM00019
 00440 CLA +0 50000 0 00052    00441 SUB +0 40200 0 00050    00442 TNZ -0 10000 0 00452                                 
      FOO                  PR12.($ ILLEGAL OPTION COMMAND.$)                        016  LM00020
 00443 TSX +0 07400 4 00011    00444 TXH +3 00000 0 00227    00445 TXH +3 00000 0 00073    00446 TXH +3 00000 0 00132   
 00447 TXH +3 00000 0 00152                                                                                             
      XIT                  CHNCOM.(0)                                               017  LM00021
 00450 TSX +0 07400 4 00001    00451 TXH +3 00000 0 00053                                                               
                   E'L                                                              018  LM00022
                   BITS = ZEL.(CBF(17))                                             019  LM00023
 00452 TSX +0 07400 4 00015    00453 TXH +3 00000 0 00026    00454 STO +0 60100 0 00022                                 
                   W'R BITS .A. $YYYYYY$ .NE. 0                                     020  LM00024
 00455 CAL -0 50000 0 00022    00456 ANA -0 32000 0 00327    00457 SLW +0 60200 0 01076    00460 CLA +0 50000 0 01076   
 00461 SUB +0 40200 0 00053    00462 TZE +0 10000 0 00470                                                               
      BADBIT               PR12.($ ILLEGAL BITS$)                                   021  LM00025
 00463 TSX +0 07400 4 00011    00464 TXH +3 00000 0 00227    00465 TXH +3 00000 0 00072    00466 TXH +3 00000 0 00276   
                     T'O XIT                                                        022  LM00026
 00467 TRA +0 02000 0 00021                                                                                             
                   E'L                                                              023  LM00027
                   SETSYS.(SYSNAM, BCOCT.(BITS))                                    024  LM00028
 00470 TSX +0 07400 4 00000    00471 TXH +3 00000 0 00022    00472 STO +0 60100 0 01076    00473 TSX +0 07400 4 00014   
 00474 TXH +3 00000 0 00052    00475 TXH +3 00000 0 01076                                                               
                 O'R CBF(19) .E. $   SET$                                           025  LM00030
 00476 TRA +0 02000 0 01073    00477 CLA +0 50000 0 00024    00500 SUB +0 40200 0 00261    00501 TNZ -0 10000 0 00522   
                   BITS = ZEL.(CBF(18))                                             026  LM00031
 00502 TSX +0 07400 4 00015    00503 TXH +3 00000 0 00025    00504 STO +0 60100 0 00022                                 
                   W'R BITS .A. $YYYYYY$ .NE. 0, T'O BADBIT                         027  LM00032
 00505 CAL -0 50000 0 00022    00506 ANA -0 32000 0 00327    00507 SLW +0 60200 0 01076    00510 CLA +0 50000 0 01076   
 00511 SUB +0 40200 0 00053    00512 TZE +0 10000 0 00514    00513 TRA +0 02000 0 00017                                 
                   SETOPT.(BCOCT.(BITS))                                            028  LM00033
 00514 TSX +0 07400 4 00000    00515 TXH +3 00000 0 00022    00516 STO +0 60100 0 01076    00517 TSX +0 07400 4 00013   
 00520 TXH +3 00000 0 01076                                                                                             
                 O'R CBF(19) .E. $ RESET$                                           029  LM00035
 00521 TRA +0 02000 0 01073    00522 CLA +0 50000 0 00024    00523 SUB +0 40200 0 00242    00524 TNZ -0 10000 0 00545   
                   BITS = ZEL.(CBF(18))                                             030  LM00036
 00525 TSX +0 07400 4 00015    00526 TXH +3 00000 0 00025    00527 STO +0 60100 0 00022                                 
                   W'R BITS .A. $YYYYYY$ .NE. 0, T'O BADBIT                         031  LM00037
 00530 CAL -0 50000 0 00022    00531 ANA -0 32000 0 00327    00532 SLW +0 60200 0 01076    00533 CLA +0 50000 0 01076   
 00534 SUB +0 40200 0 00053    00535 TZE +0 10000 0 00537    00536 TRA +0 02000 0 00017                                 
                   RSOPT.(BCOCT.(BITS))                                             032  LM00038
 00537 TSX +0 07400 4 00000    00540 TXH +3 00000 0 00022    00541 STO +0 60100 0 01076    00542 TSX +0 07400 4 00012   
 00543 TXH +3 00000 0 01076                                                                                             
                 O'R CBF(19) .E. $  LOAD$                                           033  LM00040
 00544 TRA +0 02000 0 01073    00545 CLA +0 50000 0 00024    00546 SUB +0 40200 0 00250    00547 TNZ -0 10000 0 00570   
                   BITS = ZEL.(CBF(18))                                             034  LM00041
 00550 TSX +0 07400 4 00015    00551 TXH +3 00000 0 00025    00552 STO +0 60100 0 00022                                 
                   W'R BITS .A. $YYYYYY$ .NE. 0, T'O BADBIT                         035  LM00042
 00553 CAL -0 50000 0 00022    00554 ANA -0 32000 0 00327    00555 SLW +0 60200 0 01076    00556 CLA +0 50000 0 01076   
 00557 SUB +0 40200 0 00053    00560 TZE +0 10000 0 00562    00561 TRA +0 02000 0 00017                                 
                   LDOPT.(BCOCT.(BITS))                                             036  LM00043
 00562 TSX +0 07400 4 00000    00563 TXH +3 00000 0 00022    00564 STO +0 60100 0 01076    00565 TSX +0 07400 4 00007   
 00566 TXH +3 00000 0 01076                                                                                             
                 O'R CBF(19) .E. $  HELP$                                           037  LM00045
 00567 TRA +0 02000 0 01073    00570 CLA +0 50000 0 00024    00571 SUB +0 40200 0 00247    00572 TNZ -0 10000 0 01006   
                   PR12.($'USER OPTIONS:$)                                          038  LM00046
 00573 TSX +0 07400 4 00011    00574 TXH +3 00000 0 00070    00575 TXH +3 00000 0 00171    00576 TXH +3 00000 0 00273   
                   PR12.($     1. SEARCH USER 'U'F'D FIRST FOR COMMAND FILE$)       039  LM00047
 00577 TSX +0 07400 4 00011    00600 TXH +3 00000 0 00255    00601 TXH +3 00000 0 00143    00602 TXH +3 00000 0 00106   
 00603 TXH +3 00000 0 00203    00604 TXH +3 00000 0 00063    00605 TXH +3 00000 0 00303    00606 TXH +3 00000 0 00220   
 00607 TXH +3 00000 0 00156    00610 TXH +3 00000 0 00120                                                               
                   PR12.($     2. SEARCH FOR COMMANDS IN USER OR SYSTEM DIRECT      040  LM00048
                1ORIES, BUT NOT BOTH$)                                              040  LM00049
 00611 TSX +0 07400 4 00011    00612 TXH +3 00000 0 00256    00613 TXH +3 00000 0 00143    00614 TXH +3 00000 0 00105   
 00615 TXH +3 00000 0 00220    00616 TXH +3 00000 0 00157    00617 TXH +3 00000 0 00264    00620 TXH +3 00000 0 00173   
 00621 TXH +3 00000 0 00307    00622 TXH +3 00000 0 00177    00623 TXH +3 00000 0 00126    00624 TXH +3 00000 0 00323   
 00625 TXH +3 00000 0 00216                                                                                             
                   PR12.($     4. RESET ACTIVE FILES IF NEW COMMAND WHILE DORM      041  LM00050
                1ANT RESETS CORE IMAGE$)                                            041  LM00051
 00626 TSX +0 07400 4 00011    00627 TXH +3 00000 0 00257    00630 TXH +3 00000 0 00142    00631 TXH +3 00000 0 00313   
 00632 TXH +3 00000 0 00324    00633 TXH +3 00000 0 00121    00634 TXH +3 00000 0 00160    00635 TXH +3 00000 0 00153   
 00636 TXH +3 00000 0 00325    00637 TXH +3 00000 0 00111    00640 TXH +3 00000 0 00314    00641 TXH +3 00000 0 00320   
 00642 TXH +3 00000 0 00117    00643 TXH +3 00000 0 00120                                                               
                   PR12.($    10. ENABLE USER SUBSYSTEM$)                           042  LM00052
 00644 TSX +0 07400 4 00011    00645 TXH +3 00000 0 00252    00646 TXH +3 00000 0 00140    00647 TXH +3 00000 0 00147   
 00650 TXH +3 00000 0 00204    00651 TXH +3 00000 0 00326                                                               
                   PR12.($    20. INHIBIT QUIT SIGNALS FROM CONSOLE$)               043  LM00053
 00652 TSX +0 07400 4 00011    00653 TXH +3 00000 0 00253    00654 TXH +3 00000 0 00141    00655 TXH +3 00000 0 00101   
 00656 TXH +3 00000 0 00134    00657 TXH +3 00000 0 00155    00660 TXH +3 00000 0 00202    00661 TXH +3 00000 0 00163   
                   PR12.($    40. CURRENT PROGRAM IS SUBSYSTEM$)                    044  LM00054
 00662 TSX +0 07400 4 00011    00663 TXH +3 00000 0 00254    00664 TXH +3 00000 0 00137    00665 TXH +3 00000 0 00115   
 00666 TXH +3 00000 0 00167    00667 TXH +3 00000 0 00133    00670 TXH +3 00000 0 00306                                 
                   PR12.($   100. AUTOMATIC SAVE WHEN GOING TO SUBSYSTEM$)          045  LM00055
 00671 TSX +0 07400 4 00011    00672 TXH +3 00000 0 00251    00673 TXH +3 00000 0 00136    00674 TXH +3 00000 0 00151   
 00675 TXH +3 00000 0 00270    00676 TXH +3 00000 0 00125    00677 TXH +3 00000 0 00130    00700 TXH +3 00000 0 00262   
 00701 TXH +3 00000 0 00302                                                                                             
                   PR12.($'*'SUBSYSTEM CONDITION CODE MASK:$)                       046  LM00056
 00702 TSX +0 07400 4 00011    00703 TXH +3 00000 0 00066    00704 TXH +3 00000 0 00306    00705 TXH +3 00000 0 00221   
 00706 TXH +3 00000 0 00311    00707 TXH +3 00000 0 00166    00710 TXH +3 00000 0 00274                                 
                   PR12.($     1. TRAP NEW COMMAND IF '6DEAD$)                      047  LM00057
 00711 TSX +0 07400 4 00011    00712 TXH +3 00000 0 00255    00713 TXH +3 00000 0 00144    00714 TXH +3 00000 0 00233   
 00715 TXH +3 00000 0 00170    00716 TXH +3 00000 0 00225    00717 TXH +3 00000 0 00110                                 
                   PR12.($     2. TRAP PROGRAM CALL TO '6DEAD$)                     048  LM00058
 00720 TSX +0 07400 4 00011    00721 TXH +3 00000 0 00256    00722 TXH +3 00000 0 00144    00723 TXH +3 00000 0 00241   
 00724 TXH +3 00000 0 00074    00725 TXH +3 00000 0 00150    00726 TXH +3 00000 0 00057                                 
                   PR12.($     4. TRAP END OF COMMAND CHAIN IF GOING '6DEAD         049  LM00059
                1$)                                                                 049  LM00060
 00727 TSX +0 07400 4 00011    00730 TXH +3 00000 0 00257    00731 TXH +3 00000 0 00144    00732 TXH +3 00000 0 00222   
 00733 TXH +3 00000 0 00124    00734 TXH +3 00000 0 00075    00735 TXH +3 00000 0 00071    00736 TXH +3 00000 0 00224   
 00737 TXH +3 00000 0 00207    00740 TXH +3 00000 0 00113                                                               
                   PR12.($    10. TRAP ERROR IF GOING '6DEAD$)                      050  LM00061
 00741 TSX +0 07400 4 00011    00742 TXH +3 00000 0 00252    00743 TXH +3 00000 0 00144    00744 TXH +3 00000 0 00223   
 00745 TXH +3 00000 0 00226    00746 TXH +3 00000 0 00127    00747 TXH +3 00000 0 00110                                 
                   PR12.($  1000. TRAP NEW COMMAND IF '6DORMNT$)                    051  LM00062
 00750 TSX +0 07400 4 00011    00751 TXH +3 00000 0 00243    00752 TXH +3 00000 0 00144    00753 TXH +3 00000 0 00233   
 00754 TXH +3 00000 0 00170    00755 TXH +3 00000 0 00225    00756 TXH +3 00000 0 00112                                 
                   PR12.($  2000. TRAP CALL TO '6DORMNT$)                           052  LM00063
 00757 TSX +0 07400 4 00011    00760 TXH +3 00000 0 00244    00761 TXH +3 00000 0 00144    00762 TXH +3 00000 0 00217   
 00763 TXH +3 00000 0 00312    00764 TXH +3 00000 0 00172                                                               
                   PR12.($  4000. TRAP END OF CHAIN IF '6DORMNT$)                   053  LM00064
 00765 TSX +0 07400 4 00011    00766 TXH +3 00000 0 00245    00767 TXH +3 00000 0 00144    00770 TXH +3 00000 0 00222   
 00771 TXH +3 00000 0 00123    00772 TXH +3 00000 0 00162    00773 TXH +3 00000 0 00060    00774 TXH +3 00000 0 00315   
                   PR12.($ 10000. TRAP ERROR IF GOING '6DORMNT$)                    054  LM00065
 00775 TSX +0 07400 4 00011    00776 TXH +3 00000 0 00206    00777 TXH +3 00000 0 00144    01000 TXH +3 00000 0 00223   
 01001 TXH +3 00000 0 00226    01002 TXH +3 00000 0 00127    01003 TXH +3 00000 0 00112                                 
                   PR12.                                                            055  LM00066
 01004 TSX +0 07400 4 00011                                                                                             
                 O'R CBF(19) .E. $ PRINT$                                           056  LM00068
 01005 TRA +0 02000 0 01073    01006 CLA +0 50000 0 00024    01007 SUB +0 40200 0 00240    01010 TNZ -0 10000 0 01072   
                   GETSYS.(SYSNAM, BITS)                                            057  LM00069
 01011 TSX +0 07400 4 00005    01012 TXH +3 00000 0 00052    01013 TXH +3 00000 0 00022                                 
                   OBITS = GETOPT.(0)                                               058  LM00070
 01014 TSX +0 07400 4 00004    01015 TXH +3 00000 0 00053    01016 STO +0 60100 0 00051                                 
                   PR12.($'*'CURRENT OPTION STATUS:$)                               059  LM00071
 01017 TSX +0 07400 4 00011    01020 TXH +3 00000 0 00065    01021 TXH +3 00000 0 00200    01022 TXH +3 00000 0 00176   
 01023 TXH +3 00000 0 00277    01024 TXH +3 00000 0 00146                                                               
                   PR12.($ OPTION BITS:    '8$,OCRBC.(OBITS))                       060  LM00072
 01025 TSX +0 07400 4 00010    01026 TXH +3 00000 0 00051    01027 STO +0 60100 0 01076    01030 TSX +0 07400 4 00011   
 01031 TXH +3 00000 0 00237    01032 TXH +3 00000 0 00161    01033 TXH +3 00000 0 00145    01034 TXH +3 00000 0 00061   
 01035 TXH +3 00000 0 01076                                                                                             
                   W'R OBITS .A. 10K .NE. 0                                         061  LM00073
 01036 CAL -0 50000 0 00051    01037 ANA -0 32000 0 00055    01040 SLW +0 60200 0 01076    01041 CLA +0 50000 0 01076   
 01042 SUB +0 40200 0 00053    01043 TZE +0 10000 0 01064                                                               
                     PR12.($ SUBSYSTEM:      '6'8$,SYSNAM)                          062  LM00074
 01044 TSX +0 07400 4 00011    01045 TXH +3 00000 0 00262    01046 TXH +3 00000 0 00300    01047 TXH +3 00000 0 00260   
 01050 TXH +3 00000 0 00056    01051 TXH +3 00000 0 00052                                                               
                     PR12.($ SUBSYSTEM MASK: '8$,OCRBC.(BITS))                      063  LM00075
 01052 TSX +0 07400 4 00010    01053 TXH +3 00000 0 00022    01054 STO +0 60100 0 01076    01055 TSX +0 07400 4 00011   
 01056 TXH +3 00000 0 00262    01057 TXH +3 00000 0 00301    01060 TXH +3 00000 0 00077    01061 TXH +3 00000 0 00061   
 01062 TXH +3 00000 0 01076                                                                                             
                   O'E                                                              064  LM00076
 01063 TRA +0 02000 0 01070                                                                                             
                     PR12.($ NO SUBSYSTEM$)                                         065  LM00077
 01064 TSX +0 07400 4 00011    01065 TXH +3 00000 0 00234    01066 TXH +3 00000 0 00103    01067 TXH +3 00000 0 00154   
                   E'L                                                              066  LM00078
                   PR12.                                                            067  LM00079
 01070 TSX +0 07400 4 00011                                                                                             
                 O'E                                                                068  LM00081
 01071 TRA +0 02000 0 01073                                                                                             
                   T'O FOO                                                          069  LM00082
 01072 TRA +0 02000 0 00020                                                                                             
                 E'L                                                                070  LM00083
                 CHNCOM.(0)                                                         071  LM00084
 01073 TSX +0 07400 4 00001    01074 TXH +3 00000 0 00053                                                               
                 V'S FNS    = 777777777777K                                         072  LM00086
 00050     -3 77777 7 77777                                                                                             
                 D'N CBF(20)                                                        073  LM00087
                 E'M                                                                074  LM00088
 01075 TSX +0 07400 4 00002                                                                                             




     P   BCD 02/08/69 2403.5   43162         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE       P   MAD            02/05/69    1704.2
-                 
                 'P'  01/19/69                                                                         LM00001    
                                                                                                       LM00002    
                  WHENEVER (COMARG.(2,FN1).E.FENCE).OR.(COMARG.(1,FN).E.FENCE)                    *001 LM00003    
                    WHENEVER FN.E.$  HELP$.OR.FN.E.$(HELP)$, TRANSFER TO HELP                     *002 LM00004    
                    PRFULL.($'1'RINCOMPLETE '1COMMAND.'*'B$)                                      *003 LM00005    
                    CHNCOM.(0)                                                                    *004 LM00006    
                  END OF CONDITIONAL                                                              *005 LM00007    
                  GETBUF.(IN,360)                                                                 *006 LM00008    
                  GETBUF.(OUT,84)                                                                 *007 LM00009    
                  GETBUF.(ITABS,150)                                                              *008 LM00010    
                  GETBUF.(OTABS,150)                                                              *009 LM00011    
                  MODE=0                                                                          *010 LM00012    
                  LMSW=0B                                                                         *011 LM00013    
                  LNSZ=0                                                                          *012 LM00014    
                  HDRSW=0B                                                                        *013 LM00015    
                  DATESW=0B                                                                       *014 LM00016    
                  CC=0B                                                                           *015 LM00017    
                  NCCS=1B                                                                         *016 LM00018    
                  PS=0B                                                                           *017 LM00019    
                  NIT=0                                                                           *018 LM00020    
                  NOT=0                                                                           *019 LM00021    
                  MADSW=0B                                                                        *020 LM00022    
                  THROUGH AL, FOR I=3,1,COMARG.(I,ARG).E.FENCE                                    *021 LM00023    
                  ARGX=ARG                                                                        *022 LM00024    
                  WHENEVER ARG.A.77K.E.34K                                                        *023 LM00025    
                    ARG=LJUST.(ARG.A.7777777777K2.V.60K)                                          *024 LM00026    
                    WHENEVER ARG.A.77K10.NE.74K10, TRANSFER TO BAD                                *025 LM00027    
                    ARG=BZEL.(RJUST.(ARG.A.7777777777K.V.60K10))                                  *026 LM00028    
                  END OF CONDITIONAL                                                              *027 LM00029    
                  WHENEVER ARG.E.$     6$                                                         *028 LM00030    
                    MODE=6                                                                        *029 LM00031    
                  OR WHENEVER ARG.E.$     9$                                                      *030 LM00032    
                    MODE=9                                                                        *031 LM00033    
                    CC=0B                                                                         *032 LM00034    
                    NCCS=0B                                                                       *033 LM00035    
                  OR WHENEVER ARG.E.$    12$                                                      *034 LM00036    
                    MODE=12                                                                       *035 LM00037    
                    CC=0B                                                                         *036 LM00038    
                    NCCS=0B                                                                       *037 LM00039    
                  OR WHENEVER ARG.E.$    CC$                                                      *038 LM00040    
                    CC=1B                                                                         *039 LM00041    
                    NCCS=0B                                                                       *040 LM00042    
                  OR WHENEVER ARG.E.$   NCC$                                                      *041 LM00043    
                    CC=0B                                                                         *042 LM00044    
                    NCCS=0B                                                                       *043 LM00045    
                  OR WHENEVER ARG.E.$    WR$                                                      *044 LM00046    
                    WR=1B                                                                         *045 LM00047    
                  OR WHENEVER ARG.E.$    PS$                                                      *046 LM00048    
                    PS=1B                                                                         *047 LM00049    
                  OR WHENEVER ARG.E.$   HDR$                                                      *048 LM00050    
                    HDRSW=1B                                                                      *049 LM00051    
                    PAGENO=1                                                                      *050 LM00052    
                    PGNO=2                                                                        *051 LM00053    
                    TRANSFER TO PHDR1                                                             *052 LM00054    
                  OR WHENEVER ARG.E.$  DATE$                                                      *053 LM00055    
                    DATESW=1B                                                                     *054 LM00056    
                    PGNO=0                                                                        *055 LM00057    
      PHDR1         FTIME.(GTDYTM.(0),DATE,TIME)                                                  *056 LM00058    
                    DATE(1)=(DATE.A.7777K).LS.18.V.$/00'  $                                       *057 LM00059    
                    DATE=(DATE.A.7777K8).RS.6.V.(DATE.A.7777K4).RS.12                             *058 LM00060    
                1     .V.$ 00/00$                                                                 *058 LM00061    
                      VECTOR VALUES PGN=$ PAGE 1'8$                                               *059 LM00062    
                      DIMENSION DATE(1)                                                           *060 LM00063    
                  OR WHENEVER ARG.E.$ ITABS$                                                      *061 LM00064    
                    GETTAB.(NIT,ITABS(ITABS))                                                     *062 LM00065    
                  OR WHENEVER ARG.E.$ OTABS$                                                      *063 LM00066    
                    GETTAB.(NOT,OTABS(OTABS))                                                     *064 LM00067    
                  OR WHENEVER ARG.E.$  HELP$                                                      *065 LM00068    
      HELP          PRMESS.                                                                       *066 LM00069    
                    PRFULL.($'UP NAME1 NAME2 -MODES-$)                                            *067 LM00070    
                    PRFULL.($'UMODES 'LARE:$)                                                     *068 LM00071    
                    PRFULL.($'U  6 9 12 CC NCC WR PS HDR DATE HELP$)                              *069 LM00072    
                    PRFULL.($'U  ITAB 'N  OTAB 'N  LL 'N  PGL 'N  BLKSIZ 'N'8$,                   *070 LM00073    
                1     $  FILE 'LNAME4$)                                                           *070 LM00074    
                    PRFULL.($'U  ITABS '4LIST  OTABS '4LIST$)                                     *071 LM00075    
                    PRFULL.($    LIST CONTAINS: 'U'N CTSS FAP MAD$)                               *072 LM00076    
                    TRANSFER TO EGRETS                                                            *073 LM00077    
                  OR WHENEVER COMARG.(I+1,ARG1).NE.FENCE                                          *074 LM00078    
                    I=I+1                                                                         *075 LM00079    
                    WHENEVER ARG.E.$  ITAB$                                                       *076 LM00080    
                      ITD=BCDC.(ARG1)                                                             *077 LM00081    
                      WHENEVER ITD.E.0, TRANSFER TO ILL                                           *078 LM00082    
                    OR WHENEVER ARG.E.$  OTAB$                                                    *079 LM00083    
                      OTD=BCDC.(ARG1)                                                             *080 LM00084    
                      WHENEVER OTD.E.0, TRANSFER TO ILL                                           *081 LM00085    
                    OR WHENEVER ARG.E.$    LL$                                                    *082 LM00086    
                      SLL=BCDC.(ARG1)                                                             *083 LM00087    
                      WHENEVER SLL.E.0, TRANSFER TO ILL                                           *084 LM00088    
                    OR WHENEVER ARG.E.$   PGL$                                                    *085 LM00089    
                      SPGL=BCDC.(ARG1)                                                            *086 LM00090    
                      WHENEVER SPGL.E.0, TRANSFER TO ILL                                          *087 LM00091    
                    OR WHENEVER ARG.E.$BLKSIZ$                                                    *088 LM00092    
                      LNSZ=BCDC.(ARG1)                                                            *089 LM00093    
                      WHENEVER LNSZ.E.0, TRANSFER TO ILL                                          *090 LM00094    
                      CC=0B                                                                       *091 LM00095    
                      NCCS=0B                                                                     *092 LM00096    
                    OR WHENEVER ARG.E.$  FILE$                                                    *093 LM00097    
                      FILESW=1B                                                                   *094 LM00098    
                      FNARY=FN                                                                    *095 LM00099    
                      FNARY(1)=ARG1                                                               *096 LM00100    
                      DELETE.(FNARY,FNARY(1),0,EGRETS)                                            *097 LM00101    
                      DIMENSION FNARY(1)                                                          *098 LM00102    
                      OPENW.(FN,ARG1)                                                             *099 LM00103    
                    OTHERWISE                                                                     *100 LM00104    
                      TRANSFER TO BAD                                                             *101 LM00105    
                    END OF CONDITIONAL                                                            *102 LM00106    
                  OTHERWISE                                                                       *103 LM00107    
      BAD           PRFULL.($'R'X'8$,ARGX,$ NOT RECOGNIZED.'B$)                                   *104 LM00108    
                    TRANSFER TO EGRETS                                                            *105 LM00109    
      ILL           PRFULL.($'R'X'8$,ARGX,$'X '8$,ARG1,$ ILLEGAL.'B$)                             *106 LM00110    
                    TRANSFER TO EGRETS                                                            *107 LM00111    
      AL          END OF CONDITIONAL                                                              *108 LM00112    
                  WHENEVER (SPGL.L.5.OR.(SPGL.L.8.AND.HDRSW)).AND.SPGL.NE.0                       *109 LM00113    
                    PRFULL.($'R'3   PGL '8$,BZEL.(DEFBC.(SPGL)),$ ILLEGAL.'B$)                    *110 LM00114    
                    TRANSFER TO EGRETS                                                            *111 LM00115    
                  END OF CONDITIONAL                                                              *112 LM00116    
                  WHENEVER NIT.E.0                                                                *113 LM00117    
                    THROUGH ITDL, FOR I=ITD+1,ITD,I.G.150                                         *114 LM00118    
                    NIT=NIT+1                                                                     *115 LM00119    
                    ITABS(ITABS+NIT)=I                                                            *116 LM00120    
      ITDL          CONTINUE                                                                      *117 LM00121    
                  END OF CONDITIONAL                                                              *118 LM00122    
                  WHENEVER NOT.E.0                                                                *119 LM00123    
                    THROUGH OTDL, FOR I=OTD+1,OTD,I.G.150                                         *120 LM00124    
                    NOT=NOT+1                                                                     *121 LM00125    
                    OTABS(OTABS+NOT)=I                                                            *122 LM00126    
      OTDL          CONTINUE                                                                      *123 LM00127    
                  END OF CONDITIONAL                                                              *124 LM00128    
                  SETBRK.(BRKOUT)                                                                 *125 LM00129    
                                                                                                       LM00130    
                   THINK ABOUT MODE                                                                    LM00131    
                                                                                                       LM00132    
                  OPENF.(FN,FN1)                                                                  *126 LM00133    
                  EOFCT=360                                                                       *127 LM00134    
                  RDWAIT.(FN,FN1,1,IN(IN+360)...360,EOFT,EOFCT)                                   *128 LM00135    
      EOFT        IL=360-EOFCT                                                                    *129 LM00136    
                  THROUGH LLM, FOR I=360,-1,I.LE.IL.OR.LMSW                                       *130 LM00137    
                  WHENEVER IN(IN+I).A.LM .E.LM, LMSW=1B                                           *131 LM00138    
      LLM         CONTINUE                                                                        *132 LM00139    
                  WHENEVER MODE.E.0                                                               *133 LM00140    
                    N9=0B                                                                         *134 LM00141    
                    N12=0B                                                                        *135 LM00142    
                    THROUGH LT, FOR I=360,-1,I.LE.IL.OR.N9.AND.N12                                *136 LM00143    
                    CHAR=IN(IN+I)                                                                 *137 LM00144    
                    WHENEVER CHAR.A.LM.E.LM, TRANSFER TO LT                                       *138 LM00145    
                    WHENEVER .NOT.N9.AND.CHAR.A.600600600600K.NE.0,N9=1B                          *139 LM00146    
                    WHENEVER .NOT.N12.AND.CHAR.A.720072007200K.NE.0,N12=1B                        *140 LM00147    
      LT            CONTINUE                                                                      *141 LM00148    
                    WHENEVER .NOT.N9.AND.N12                                                      *142 LM00149    
                      MODE=9                                                                      *143 LM00150    
                      NCCS=0B                                                                     *144 LM00151    
                      CC=0B                                                                       *145 LM00152    
                    OR WHENEVER .NOT.N12.AND.N9                                                   *146 LM00153    
                      MODE=12                                                                     *147 LM00154    
                      NCCS=0B                                                                     *148 LM00155    
                      CC=0B                                                                       *149 LM00156    
                    OTHERWISE                                                                     *150 LM00157    
                      MODE=6                                                                      *151 LM00158    
                    END OF CONDITIONAL                                                            *152 LM00159    
                  END OF CONDITIONAL                                                              *153 LM00160    
                  IN(IN+IL+1)=0                                                                   *154 LM00161    
                  THROUGH CCTL, FOR I=360,-1,I.LE.IL.OR..NOT.NCCS                                 *155 LM00162    
                  PCC=IN(IN+I-1).RS.30                                                            *156 LM00163    
      PCL         THROUGH PCL, FOR J=0,1,J.G.NPCC.OR.PCC.E.PCCL(J)                                *157 LM00164    
                  WHENEVER J.G.NPCC.OR.IN(IN+I).A.LM.NE.LM                                        *158 LM00165    
                    NCCS=0B                                                                       *159 LM00166    
                    CC=0B                                                                         *160 LM00167    
                  OTHERWISE                                                                       *161 LM00168    
                    I=I-IN(IN+I).A.77777K                                                         *162 LM00169    
                    CC=1B                                                                         *163 LM00170    
                  END OF CONDITIONAL                                                              *164 LM00171    
      CCTL        CONTINUE                                                                        *165 LM00172    
                                                                                                       LM00173    
                   GET UNITID AND PICK UP TIMING CODES                                                 LM00174    
                                                                                                       LM00175    
                  WHOAMI.(OUT(OUT+4)...4)                                                         *166 LM00176    
                  WHENEVER OUT(OUT+1) .E. $(FIB) $                                                *167 LM00177    
                    ID=10                                                                         *168 LM00178    
                    TRANSFER TO GETTIM                                                            *169 LM00179    
                  OTHERWISE                                                                       *170 LM00180    
                    ID = OUT(OUT+1) .RS. 30                                                       *171 LM00181    
                    WHENEVER ID.G.9                                                               *172 LM00182    
                      PRFULL.($'R'1ILLEGAL '1CONSOLE 'UID:'X'8$,OUT(OUT+1),                       *173 LM00183    
                1       $'B'9$)                                                                   *173 LM00184    
                      TRANSFER TO BRKOUT                                                          *174 LM00185    
                    END OF CONDITIONAL                                                            *175 LM00186    
      GETTIM        TCR = TCR(ID)                                                                 *176 LM00187    
                    TCRLF=TCRLF(ID)                                                               *177 LM00188    
                    WHENEVER FILESW, TCRLF=1                                                      *178 LM00189    
                    TBS = TBS(ID)                                                                 *179 LM00190    
                    TSP = TSP(ID)                                                                 *180 LM00191    
                    TTAB = TTAB(ID)                                                               *181 LM00192    
                    TLF = TLF(ID)                                                                 *182 LM00193    
                    WHENEVER FILESW, TLF=1                                                        *183 LM00194    
                    LL=LL(ID)                                                                     *184 LM00195    
                    WHENEVER SLL.NE.0, LL=SLL                                                     *185 LM00196    
                    PGL=PGL(ID)                                                                   *186 LM00197    
                    WHENEVER SPGL.NE.0, PGL=SPGL                                                  *187 LM00198    
                    D(8)=PGL/5                                                                    *188 LM00199    
                    D(7)=(PGL-1)/4                                                                *189 LM00200    
                    D(6)=(PGL-2)/3                                                                *190 LM00201    
                    D(5)=2*D(7)                                                                   *191 LM00202    
                    D(1)=PGL                                                                      *192 LM00203    
                  END OF CONDITIONAL                                                              *193 LM00204    
                  WHENEVER LNSZ.NE.0                                                              *194 LM00205    
                    LMSW=0B                                                                       *195 LM00206    
                  OR WHENEVER .NOT.LMSW.AND.MODE.E.6                                              *196 LM00207    
                    LNSZ=14                                                                       *197 LM00208    
                  OTHERWISE                                                                       *198 LM00209    
                    LNSZ=0                                                                        *199 LM00210    
                  END OF CONDITIONAL                                                              *200 LM00211    
                  SETSIZ.(MODE,LNSZ,LMSW)                                                         *201 LM00212    
                  SETFUL.(0)                                                                      *202 LM00213    
                  AX=1                                                                            *203 LM00214    
                  BX=1                                                                            *204 LM00215    
                  AY=0                                                                            *205 LM00216    
                  WHENEVER CC.OR.PS                                                               *206 LM00217    
                    CCN=CC                                                                        *207 LM00218    
                    CCX=CC.OR.PS                                                                  *208 LM00219    
                    BY=0                                                                          *209 LM00220    
                  OTHERWISE                                                                       *210 LM00221    
                    BY=1                                                                          *211 LM00222    
                    CCN=0B                                                                        *212 LM00223    
                    CCX=0B                                                                        *213 LM00224    
                  END OF CONDITIONAL                                                              *214 LM00225    
                  K=1                                                                             *215 LM00226    
                  WHENEVER DATESW.OR.HDRSW                                                        *216 LM00227    
                    BY=4                                                                          *217 LM00228    
                    AY=4                                                                          *218 LM00229    
                    PRTCHR.(PTCHAR.)                                                              *219 LM00230    
                    PRFULA.($'*'*'X$,FN,$ 'X'8$,FN1,DATE...2,TIME,PGN...PGNO,                     *220 LM00231    
                1     $'*'*'9$)                                                                   *220 LM00232    
                  END OF CONDITIONAL                                                              *221 LM00233    
                  EOFSW=0B                                                                        *222 LM00234    
      LOOP        N=READF.(IN(IN),360,777K,EOF)                                                   *223 LM00235    
                  THROUGH CHARL, FOR I=1,1,I.G.N                                                  *224 LM00236    
                  CHAR=IN(IN+I).A.177K                                                            *225 LM00237    
                  WHENEVER MODE.E.9, CHAR=ASCTSS.(CHAR)                                           *226 LM00238    
                  WHENEVER CHAR.E.57K, TRANSFER TO CHARL                                          *227 LM00239    
                  PTF=1B                                                                          *228 LM00240    
                  CKP=1B                                                                          *229 LM00241    
                  WHENEVER CCN                                                                    *230 LM00242    
                    CCN=0B                                                                        *231 LM00243    
      L2            THROUGH L2, FOR J=0,1,J.G.NPCC.OR.CHAR.E.PCCL(J)                              *232 LM00244    
                    WHENEVER J.G.NPCC, TRANSFER TO CKHDR                                          *233 LM00245    
                    PTF=0B                                                                        *234 LM00246    
                    TRANSFER TO PCCP(J)                                                           *235 LM00247    
                                                                                                       LM00248    
                  1 2 3 4 5 -- SKIPS                                                                   LM00249    
      PCCP(1)                                                                                     *236 LM00250    
      PCCP(5)                                                                                     *237 LM00251    
      PCCP(6)                                                                                     *238 LM00252    
      PCCP(7)                                                                                     *239 LM00253    
      PCCP(8)       WHENEVER BY.E.BY/PGL*PGL, TRANSFER TO CKHDR                                   *240 LM00254    
                    X=((BY-BY/PGL*PGL)/D(J)+1)*D(J)                                               *241 LM00255    
                    WHENEVER X.G.PGL, X=PGL                                                       *242 LM00256    
                    BY=BY/PGL*PGL+X+2                                                             *243 LM00257    
                    TRANSFER TO CKHDR                                                             *244 LM00258    
                                                                                                       LM00259    
                  SPACE 0 -                                                                            LM00260    
      PCCP(0)                                                                                     *245 LM00261    
      PCCP(2)                                                                                     *246 LM00262    
      PCCP(3)       BY=BY+D(J)                                                                    *247 LM00263    
                    TRANSFER TO CKHDR                                                             *248 LM00264    
                                                                                                       LM00265    
                  + / S T                                                                              LM00266    
      PCCP(4)                                                                                     *249 LM00267    
      PCCP(9)                                                                                     *250 LM00268    
      PCCP(10)                                                                                    *251 LM00269    
      PCCP(11)      BY=BY+D(J)                                                                    *252 LM00270    
                    CKP=0B                                                                        *253 LM00271    
                    TRANSFER TO CKHDR                                                             *254 LM00272    
                                                                                                       LM00273    
                  OR WHENEVER CCX.OR..NOT.(CC.OR.PS)                                              *255 LM00274    
                    CKP=CCX                                                                       *256 LM00275    
      CKHDR         CCX=0B                                                                        *257 LM00276    
                    WHENEVER AY/PGL.NE.(BY+2)/PGL.AND.HDRSW                                       *258 LM00277    
                      BY=BY+4                                                                     *259 LM00278    
                      AY=AY+1                                                                     *260 LM00279    
                      AX=1                                                                        *261 LM00280    
                      PTCHAR.(SP(0))                                                              *262 LM00281    
                      WHENEVER TLF.G.0                                                            *263 LM00282    
                        CHR=SP(0)                                                                 *264 LM00283    
                      OTHERWISE                                                                   *265 LM00284    
                        CHR=SP(1)                                                                 *266 LM00285    
                      END OF CONDITIONAL                                                          *267 LM00286    
      SK1             X=AY-AY/PGL*PGL                                                             *268 LM00287    
                      WHENEVER X.NE.0, X=PGL-X                                                    *269 LM00288    
                      AY=AY+X                                                                     *270 LM00289    
                      THROUGH SK2, FOR X=X,-1,X.E.0                                               *271 LM00290    
      SK2             PTCHAR.(CHR)                                                                *272 LM00291    
                      PAGENO=PAGENO+1                                                             *273 LM00292    
                      PGN(1)=BZ57.(DEFBC.(PAGENO))                                                *274 LM00293    
                      PRFULA.($'*'*'X$,FN,$ 'X'8$,FN1,DATE...2,TIME,PGN...PGNO,                   *275 LM00294    
                1       $'*'*'9$)                                                                 *275 LM00295    
                      AY=AY+4                                                                     *276 LM00296    
                      WHENEVER BY.L.AY, BY=AY                                                     *277 LM00297    
                      WHENEVER AY/PGL.NE.(BY+2)/PGL, TRANSFER TO SK1                              *278 LM00298    
                    END OF CONDITIONAL                                                            *279 LM00299    
                                                                                                       LM00300    
                    WHENEVER CKP                                                                  *280 LM00301    
                      MOD=BY-(BY/PGL)*PGL                                                         *281 LM00302    
                      WHENEVER MOD.G.PGL-3.OR.MOD.L.2                                             *282 LM00303    
                        BY=((BY+3)/PGL)*PGL+2                                                     *283 LM00304    
                      END OF CONDITIONAL                                                          *284 LM00305    
                    END OF CONDITIONAL                                                            *285 LM00306    
                    WHENEVER .NOT.PTF, TRANSFER TO CHARL                                          *286 LM00307    
                  END OF CONDITIONAL                                                              *287 LM00308    
                                                                                                       LM00309    
      L1          THROUGH L1, FOR J=0,1,J.G.NSPC .OR. CHAR.E.SP(J)                                *288 LM00310    
                  WHENEVER J.LE.NSPC                                                              *289 LM00311    
                    TRANSFER TO SPP(J)                                                            *290 LM00312    
                   CR                                                                                  LM00313    
      SPP(0)        BX=1                                                                          *291 LM00314    
                    BY=BY+1                                                                       *292 LM00315    
                    CCN=CC                                                                        *293 LM00316    
                    CCX=CC.OR.PS                                                                  *294 LM00317    
                    TRANSFER TO CHARL                                                             *295 LM00318    
                   LF                                                                                  LM00319    
      SPP(1)        BY=BY+1                                                                       *296 LM00320    
                    CCX=CC.OR.PS                                                                  *297 LM00321    
                    TRANSFER TO CHARL                                                             *298 LM00322    
                   TAB                                                                                 LM00323    
      SPP(2)        CONTINUE                                                                      *299 LM00324    
      TL1           THROUGH TL1, FOR TI=1,1,ITABS(ITABS+TI).G.BX                                  *300 LM00325    
                    BX=ITABS(ITABS+TI)                                                            *301 LM00326    
                    TRANSFER TO CHARL                                                             *302 LM00327    
                   SP                                                                                  LM00328    
      SPP(3)        BX=BX+1                                                                       *303 LM00329    
                    TRANSFER TO CHARL                                                             *304 LM00330    
                   BS                                                                                  LM00331    
      SPP(4)        BX=BX-1                                                                       *305 LM00332    
                    TRANSFER TO CHARL                                                             *306 LM00333    
                   CR NO LF                                                                            LM00334    
      SPP(5)        BX=1                                                                          *307 LM00335    
                    TRANSFER TO CHARL                                                             *308 LM00336    
                                                                                                       LM00337    
                  OTHERWISE                                                                       *309 LM00338    
      FILOUT        WHENEVER CHAR.E.MADBS.AND.BX.E.12.AND.MADSW                                   *310 LM00339    
                      BX=11                                                                       *311 LM00340    
                      TRANSFER TO CHARL                                                           *312 LM00341    
                    END OF CONDITIONAL                                                            *313 LM00342    
      L3            THROUGH L3, FOR J=0,1,J.G.NNOSP.OR.CHAR.E.NOSP(J)                             *314 LM00343    
                    WHENEVER J.LE.NNOSP                                                           *315 LM00344    
                      PTCHAR.(CHAR)                                                               *316 LM00345    
                      TRANSFER TO CHARL                                                           *317 LM00346    
                    END OF CONDITIONAL                                                            *318 LM00347    
                    WHENEVER BX.G.LL                                                              *319 LM00348    
                      WHENEVER WR                                                                 *320 LM00349    
                        BX=1                                                                      *321 LM00350    
                        BY=BY+1                                                                   *322 LM00351    
                      OTHERWISE                                                                   *323 LM00352    
                        TRANSFER TO NOPT                                                          *324 LM00353    
                      END OF CONDITIONAL                                                          *325 LM00354    
                    END OF CONDITIONAL                                                            *326 LM00355    
                    WHENEVER AX.E.BX.AND.AY.E.BY, TRANSFER TO PCHAR                               *327 LM00356    
                    WHENEVER BY.E.AY.AND.BX.E.AX+1                                                *328 LM00357    
                      PTCHAR.(SP(3))                                                              *329 LM00358    
                      TRANSFER TO PCHAR                                                           *330 LM00359    
                    OR WHENEVER BX.E.1.AND.BY.E.AY+1                                              *331 LM00360    
                      PTCHAR.(SP(0))                                                              *332 LM00361    
                      TRANSFER TO PCHAR                                                           *333 LM00362    
                    END OF CONDITIONAL                                                            *334 LM00363    
                   FILL FROM A TO B                                                                    LM00364    
                  THROUGH RL, FOR J=0,1,J.G.NSPC                                                  *335 LM00365    
      RL          NC(J)=0                                                                         *336 LM00366    
                  WHENEVER BY.G.AY .AND. TLF.G.0                                                  *337 LM00367    
                    NCR=1                                                                         *338 LM00368    
                    AX=1                                                                          *339 LM00369    
                    AY=AY+1                                                                       *340 LM00370    
                  END OF CONDITIONAL                                                              *341 LM00371    
                  WHENEVER AX.L.BX                                                                *342 LM00372    
                    HORZ.(AX,BX)                                                                  *343 LM00373    
                  OTHERWISE                                                                       *344 LM00374    
                    WHENEVER TCR*AX+HORZ.(1,BX).L.(AX-BX)*TBS.AND.                                *345 LM00375    
                1     (BY.G.AY.OR.TCRLF.E.0)                                                      *345 LM00376    
                      WHENEVER BY.G.AY                                                            *346 LM00377    
                        NCR=NCR+1                                                                 *347 LM00378    
                        AY=AY+1                                                                   *348 LM00379    
                        AX=1                                                                      *349 LM00380    
                      OTHERWISE                                                                   *350 LM00381    
                        NCRLF=1                                                                   *351 LM00382    
                        AX=1                                                                      *352 LM00383    
                      END OF CONDITIONAL                                                          *353 LM00384    
                    OTHERWISE                                                                     *354 LM00385    
                      NBS=AX-BX                                                                   *355 LM00386    
                      NSP=0                                                                       *356 LM00387    
                      NTAB=0                                                                      *357 LM00388    
                    END OF CONDITIONAL                                                            *358 LM00389    
                  END OF CONDITIONAL                                                              *359 LM00390    
                  WHENEVER TLF.G.0                                                                *360 LM00391    
                    NCR=NCR+BY-AY                                                                 *361 LM00392    
                  OTHERWISE                                                                       *362 LM00393    
                    NLF=NLF+BY-AY                                                                 *363 LM00394    
                  END OF CONDITIONAL                                                              *364 LM00395    
                  THROUGH FILL, FOR J=0,1,J.G.NSPC                                                *365 LM00396    
                  THROUGH FILL1, FOR L=1,1,L.G.NC(J)                                              *366 LM00397    
                  PTCHAR.(SP(J))                                                                  *367 LM00398    
      FILL1       CONTINUE                                                                        *368 LM00399    
      FILL        CONTINUE                                                                        *369 LM00400    
      PCHAR       WHENEVER EOFSW, TRANSFER TO DONE                                                *370 LM00401    
                  AX=BX                                                                           *371 LM00402    
                  AY=BY                                                                           *372 LM00403    
                  PTCHAR.(CHAR)                                                                   *373 LM00404    
                  AX=AX+1                                                                         *374 LM00405    
      NOPT        BX=BX+1                                                                         *375 LM00406    
                  END OF CONDITIONAL                                                              *376 LM00407    
      CHARL       CONTINUE                                                                        *377 LM00408    
                  TRANSFER TO LOOP                                                                *378 LM00409    
      DONE        WHENEVER K.NE.0                                                                 *379 LM00410    
                    WHENEVER FILESW                                                               *380 LM00411    
                      WTA.(OUT(OUT),K-1)                                                          *381 LM00412    
                      CLOSEW.                                                                     *382 LM00413    
                    OTHERWISE                                                                     *383 LM00414    
                      PNTLIN.(OUT(OUT),K-1)                                                       *384 LM00415    
                    END OF CONDITIONAL                                                            *385 LM00416    
                  END OF CONDITIONAL                                                              *386 LM00417    
      BRKOUT      CLOSEF.                                                                         *387 LM00418    
      EGRETS      SETBCD.(0)                                                                      *388 LM00419    
                  CHNCOM.(0)                                                                      *389 LM00420    
                                                                                                       LM00421    
      EOF         EOFSW=1B                                                                        *390 LM00422    
                  WHENEVER CC                                                                     *391 LM00423    
                    WHENEVER BY.NE.(BY/PGL)*PGL                                                   *392 LM00424    
                      BY=(BY/PGL+1)*PGL+1                                                         *393 LM00425    
                    END OF CONDITIONAL                                                            *394 LM00426    
                  OTHERWISE                                                                       *395 LM00427    
                    BY=BY+2                                                                       *396 LM00428    
                    BX=1                                                                          *397 LM00429    
                  END OF CONDITIONAL                                                              *398 LM00430    
                  TRANSFER TO FILOUT                                                              *399 LM00431    
                                                                                                       LM00432    
                  INTERNAL FUNCTION (PTC)                                                         *400 LM00433    
                  ENTRY TO PTCHAR.                                                                *401 LM00434    
                  WHENEVER FILESW                                                                 *402 LM00435    
                    C=TSSASC.(PTC)                                                                *403 LM00436    
                  OTHERWISE                                                                       *404 LM00437    
                    C=PTC                                                                         *405 LM00438    
                  END OF CONDITIONAL                                                              *406 LM00439    
                  OUT(OUT+K)=C                                                                    *407 LM00440    
                  K=K+1                                                                           *408 LM00441    
                  WHENEVER K.G.84                                                                 *409 LM00442    
                    WHENEVER FILESW                                                               *410 LM00443    
                      WTA.(OUT(OUT),84)                                                           *411 LM00444    
                    OTHERWISE                                                                     *412 LM00445    
                      PNTLIN.(OUT(OUT),84)                                                        *413 LM00446    
                    END OF CONDITIONAL                                                            *414 LM00447    
                    K=1                                                                           *415 LM00448    
                  END OF CONDITIONAL                                                              *416 LM00449    
                  FUNCTION RETURN                                                                 *417 LM00450    
                  END OF FUNCTION                                                                 *418 LM00451    
                                                                                                       LM00452    
                                                                                                       LM00453    
                  INTERNAL FUNCTION (AA,BB)                                                       *419 LM00454    
                  ENTRY TO HORZ.                                                                  *420 LM00455    
                  A=AA                                                                            *421 LM00456    
                  B=BB                                                                            *422 LM00457    
      TL2         THROUGH TL2, FOR ATI=1,1,OTABS(OTABS+ATI).G.A                                   *423 LM00458    
      TL3         THROUGH TL3, FOR BTI=1,1,OTABS(OTABS+BTI).G.B                                   *424 LM00459    
                  NTAB=BTI-ATI                                                                    *425 LM00460    
                  WHENEVER NTAB.G.0                                                               *426 LM00461    
                    A1=OTABS(OTABS+BTI-1)                                                         *427 LM00462    
                    T=(A1-A)*TTAB+NTAB*TSP                                                        *428 LM00463    
                    A=A1                                                                          *429 LM00464    
                    ATI=BTI                                                                       *430 LM00465    
                  OTHERWISE                                                                       *431 LM00466    
                    T=0                                                                           *432 LM00467    
                  END OF CONDITIONAL                                                              *433 LM00468    
                  NSP=B-A                                                                         *434 LM00469    
                  LTAB=OTABS(OTABS+ATI)-A                                                         *435 LM00470    
                  NBS=LTAB-NSP                                                                    *436 LM00471    
                  TMSP=NSP*TSP                                                                    *437 LM00472    
                  TMBS=TTAB*LTAB+TSP+TBS*NBS                                                      *438 LM00473    
                  WHENEVER TMSP.LE.TMBS                                                           *439 LM00474    
                    NBS=0                                                                         *440 LM00475    
                    T=T+TMSP                                                                      *441 LM00476    
                  OTHERWISE                                                                       *442 LM00477    
                    NSP=0                                                                         *443 LM00478    
                    NTAB=NTAB+1                                                                   *444 LM00479    
                    T=T+TMBS                                                                      *445 LM00480    
                  END OF CONDITIONAL                                                              *446 LM00481    
                  FUNCTION RETURN T                                                               *447 LM00482    
                  END OF FUNCTION                                                                 *448 LM00483    
                                                                                                       LM00484    
                  INTERNAL FUNCTION (NN,A)                                                        *449 LM00485    
                  ENTRY TO GETTAB.                                                                *450 LM00486    
                  WHENEVER COMARG.(I+1).E.FENCE, TRANSFER TO BAD                                  *451 LM00487    
                  N=NN                                                                            *452 LM00488    
                  THROUGH TAL, FOR I=I+1,1,COMARG.(I,ARG1).E.FENCE                                *453 LM00489    
                  WHENEVER ARG1.E.$   FAP$                                                        *454 LM00490    
                    THROUGH FCL, FOR J=0,1,FAPTAB(J).E.0                                          *455 LM00491    
                    N=N+1                                                                         *456 LM00492    
      FCL           A(N)=FAPTAB(J)                                                                *457 LM00493    
                  OR WHENEVER ARG1.E.$   MAD$                                                     *458 LM00494    
                    WHENEVER ARG.E.$ ITABS$, MADSW=1B                                             *459 LM00495    
                    THROUGH MCL, FOR J=0,1,MADTAB(J).E.0                                          *460 LM00496    
                    N=N+1                                                                         *461 LM00497    
      MCL           A(N)=MADTAB(J)                                                                *462 LM00498    
                  OR WHENEVER ARG1.E.$  CTSS$                                                     *463 LM00499    
                    THROUGH XCL, FOR J=15,15,J.G.150                                              *464 LM00500    
                    N=N+1                                                                         *465 LM00501    
      XCL           A(N)=J                                                                        *466 LM00502    
                  OR WHENEVER ZEL.(ARG1).A.$$.E.0                                                 *467 LM00503    
                    N=N+1                                                                         *468 LM00504    
                    A(N)=BCDEC.(ARG1)                                                             *469 LM00505    
                  OTHERWISE                                                                       *470 LM00506    
                    TRANSFER TO RET                                                               *471 LM00507    
                  END OF CONDITIONAL                                                              *472 LM00508    
      TAL         CONTINUE                                                                        *473 LM00509    
      RET         I=I-1                                                                           *474 LM00510    
      SORT        CH=0B                                                                           *475 LM00511    
                  THROUGH SL, FOR J=2,1,J.G.N                                                     *476 LM00512    
                  WHENEVER A(J).E.A(J-1)                                                          *477 LM00513    
                    A(J)=A(N)                                                                     *478 LM00514    
                    N=N-1                                                                         *479 LM00515    
                    CH=1B                                                                         *480 LM00516    
                  OR WHENEVER A(J).L.A(J-1)                                                       *481 LM00517    
                    ARG1=A(J-1)                                                                   *482 LM00518    
                    A(J-1)=A(J)                                                                   *483 LM00519    
                    A(J)=ARG1                                                                     *484 LM00520    
                    CH=1B                                                                         *485 LM00521    
                  END OF CONDITIONAL                                                              *486 LM00522    
      SL          CONTINUE                                                                        *487 LM00523    
                  WHENEVER CH, TRANSFER TO SORT                                                   *488 LM00524    
                  N=N+1                                                                           *489 LM00525    
                  A(N)=1000                                                                       *490 LM00526    
                  NN=N                                                                            *491 LM00527    
                  FUNCTION RETURN                                                                 *492 LM00528    
                  END OF FUNCTION                                                                 *493 LM00529    
                                                                                                       LM00530    
                  INTERNAL FUNCTION (Z)                                                           *494 LM00531    
                  ENTRY TO BCDC.                                                                  *495 LM00532    
                  WHENEVER ZEL.(Z).A.$$.NE.0, TRANSFER TO BAD                                     *496 LM00533    
                  FUNCTION RETURN BCDEC.(Z)                                                       *497 LM00534    
                  END OF FUNCTION                                                                 *498 LM00535    
                                                                                                       LM00536    
                  VECTOR VALUES NSPC=5                                                            *499 LM00537    
                  VECTOR VALUES SP=55K,107K,72K,60K,135K,136K                                     *500 LM00538    
                  VECTOR VALUES NNOSP=2                                                           *501 LM00539    
                  VECTOR VALUES NOSP=113K,132K,133K                                               *502 LM00540    
                  VECTOR VALUES NPCC=11                                                           *503 LM00541    
                  VECTOR VALUES PCCL=60K,1K,0K,40K,20K,2K,3K,4K,5K,61K,62K,63K                    *504 LM00542    
                  VECTOR VALUES D=0,66,1,2,-1,32,21,16,13,0,1,2                                   *505 LM00543    
                  VECTOR VALUES MADBS=35K                                                         *506 LM00544    
                  VECTOR VALUES LM=777777K6                                                       *507 LM00545    
                  VECTOR VALUES FENCE = 777777777777K                                             *508 LM00546    
                  VECTOR VALUES FAPTAB=8,16,35,40,45,50,55,60,65,70,75,80,85,0                    *509 LM00547    
                  VECTOR VALUES MADTAB=12,17,22,27,32,37,42,47,52,57,62,67,72,77,82,87,0          *510 LM00548    
                  DIMENSION IN(0),OUT(0),NC(5),ITABS(0),OTABS(0)                                  *511 LM00549    
                                                                                                       LM00550    
                   TIMING TABLE FOR EACH DEVICE                                                        LM00551    
                                                                                                       LM00552    
                  VECTOR VALUES TCR = 0,2,8,128,176,176,8,8,8,1,1                                 *512 LM00553    
                  VECTOR VALUES TCRLF=0,1,1,0,0,0,1,0,1,0,0                                       *513 LM00554    
                  VECTOR VALUES TBS = 0,1K5,112,1K5,1K5,1K5,1K5,88,112,1,1                        *514 LM00555    
                  VECTOR VALUES TSP = 0,88,72,64,88,88,88,88,72,1,1                               *515 LM00556    
                  VECTOR VALUES TTAB = 0,24,8,1K5,1K5,1K5,24,24,8,1,1                             *516 LM00557    
                  VECTOR VALUES TLF = 0,1,0,0,0,0,0,1,0,1,0                                       *517 LM00558    
                  VECTOR VALUES LL=0,87,129,68,68,68,87,87,129,79,1K5                             *518 LM00559    
                  VECTOR VALUES PGL=0,66,66,66,66,66,66,66,66,56,66                               *519 LM00560    
                  VECTOR VALUES ITD=10                                                            *520 LM00561    
                  VECTOR VALUES OTD=10                                                            *521 LM00562    
                                                                                                       LM00563    
                  EQUIVALENCE (NCR,NC(0)),(NLF,NC(1)),(NTAB,NC(2)),                               *522 LM00564    
                1   (NSP,NC(3)),(NBS,NC(4)),(NCRLF,NC(5))                                         *522 LM00565    
                  NORMAL MODE IS INTEGER                                                          *523 LM00566    
                  BOOLEAN N9,N12,CC,NCCS,CCN,EOFSW,WR,PS,CH,LMSW,DATESW                           *524 LM00567    
                  BOOLEAN FILESW,HDRSW,MADSW,CCX,PTF,CKP                                          *525 LM00568    
                  END OF PROGRAM                                                                  *526 LM00569    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   04424 TRANSFER VECTOR LENGTH  00042 PROGRAM BEGINS    00662
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      A1     00123   1        DONE   00061   4        J      00223   1        NLF    00053   1        RL     00046   4  
      AL     00046   4        D      00165 A 1        K      00224   1        NNOSP  00276 A 1        SK1    00113   4  
      ARG1   00124   1        EGRETS 00062   4        L1     00046   4        NOPT   00073   4        SK2    00046   4  
      ARG    00125   1        EOFCT  00166   1        L2     00046   4        NOSP   00301 A 1        SLL    00347   1  
      ARGX   00126   1        EOF    00063   4        L3     00046   4        NOT    00302   1        SL     00046   4  
      A      00127   1        EOFSW  00167   2        LLM    00046   4        NPCC   00303 A 1        SORT   00114   4  
      ATI    00130   1        EOFT   00064   4        LL     00237 A 1        N      00304   1        SPGL   00350   1  
      AX     00131   1        FAPTAB 00205 A 1        LM     00240 A 1        NSPC   00305 A 1        SPP    00122 A 4  
      AY     00132   1        FCL    00046   4        LMSW   00241   2        NSP    00051   1        SP     00356 A 1  
      BAD    00055   4        FENCE  00206 A 1        LNSZ   00242   1        NTAB   00052   1        TAL    00046   4  
      BRKOUT 00056   4        FILESW 00207   2        LOOP   00071   4        OTABS  00306 A 1        TBS    00371 A 1  
      B      00133   1        FILL1  00046   4        L      00243   1        OTDL   00046   4        TCRLF  00404 A 1  
      BTI    00134   1        FILL   00046   4        LTAB   00244   1        OTD    00307 A 1        TCR    00417 A 1  
      BX     00135   1        FILOUT 00065   4        LT     00072   4        OUT    00310 A 1        TIME   00420   1  
      BY     00136   1        FN1    00210   1        MADBS  00245 A 1        PAGENO 00311   1        TI     00421   1  
      CCN    00137   2        FNARY  00212 A 1        MADSW  00246   2        PCCL   00325 A 1        TL1    00046   4  
      CC     00140   2        FN     00213   1        MADTAB 00267 A 1        PCCP   00107 A 4        TL2    00046   4  
      CCTL   00046   4        GETTIM 00066   4        MCL    00046   4        PCC    00326   1        TL3    00046   4  
      CCX    00141   2        HDRSW  00214   2        MODE   00270   1        PCHAR  00110   4        TLF    00434 A 1  
      CHARL  00057   4        HELP   00067   4        MOD    00271   1        PCL    00046   4        TMBS   00435   1  
      CHAR   00142   1        ID     00215   1        N12    00272   2        PGL    00341 A 1        TMSP   00436   1  
      CHR    00143   1        ILL    00070   4        N9     00273   2        PGNO   00342   1        T      00437   1  
      CH     00144   2        IL     00216   1        NBS    00050   1        PGN    00344 A 1        TSP    00452 A 1  
      CKHDR  00060   4        IN     00217 A 1        NCCS   00274   2        PHDR1  00111   4        TTAB   00465 A 1  
      CKP    00145   2        I      00220   1        NCRLF  00047   1        PS     00345   2        WR     00466   2  
      C      00146   1        ITABS  00221 A 1        NCR    00054   1        PTF    00346   2        XCL    00046   4  
      DATE   00150 A 1        ITDL   00046   4        NC     00054 A 1        RET    00112   4        X      00467   1  
      DATESW 00151   2        ITD    00222 A 1        NIT    00275   1                                                  
0FUNCTION DICTIONARY    
      ASCTSS 00000   1        BCDEC  00001   1        BZ57   00002   1        BZEL   00003   1        CHNCOM 00004   1  
      CLOSEF 00005   1        CLOSEW 00006   1        COMARG 00007   1        DEFBC  00010   1        DELETE 00011   1  
      EXIT   00012   1        FTIME  00013   1        GETBUF 00014   1        GTDYTM 00015   1        .SETUP 00016   1  
      LJUST  00017   1        OPENF  00020   1        OPENW  00021   1        PNTLIN 00022   1        PRFULA 00023   1  
      PRFULL 00024   1        PRMESS 00025   1        PRTCHR 00026   1        RDWAIT 00027   1        READF  00030   1  
      RJUST  00031   1        SETBCD 00032   1        SETBRK 00033   1        SETFUL 00034   1        SETSIZ 00035   1  
      TSSASC 00036   1        WHOAMI 00037   1        WTA    00040   1        ZEL    00041   1        BCDC   00042   1  
      GETTAB 00043   1        HORZ   00044   1        PTCHAR 00045   1                                                  
0ABSOLUTE CONSTANTS     
 00521 +000000001750     00640 -206060606060     00505 +000000000017     00616 -206023636262     00626 -206060442124    
 00624 -206060262147     00502 +000000000013     00511 +000000000057     00515 +000000000177     00520 +000000000777    
 00540 +145414541411     00606 -201467141060     00541 +145414541467     00504 +000000000016     00533 +142214116060    
 00565 +312435146714     00574 -064325601464     00531 +140123464562     00567 -032527214360     00535 +145114013143    
 00501 +000000000012     00655 -342631223460     00474 +000000000004     00523 +000000077777     00510 +000000000036    
 00653 -320072007200     00602 -200600600600     00526 +106060606060     00615 -204727436014     00536 +145114036060    
 00475 +000000000005     00477 +000000000010     00551 +214333142260     00610 -203143432527     00546 +146760141060    
 00651 -312524331422     00561 +252346274531     00612 -204546636051     00537 +145114671410     00553 +224342623171    
 00630 -206060472743     00634 -206060604343     00623 -206046632122     00622 -206031632122     00552 +214760442124    
 00557 +236362626026     00605 -201464144560     00645 -232131456235     00644 -226360234645     00633 -206060604331    
 00532 +140443316263     00576 -066321226260     00570 -033162636060     00550 +212262601404     00560 +250460606060    
 00603 -201443452144     00620 -206026314325     00652 -316014451410     00607 -202243426231     00563 +274360144560    
 00604 -201445606047     00534 +144560604343     00613 -204663212260     00547 +212260144560     00545 +146460603163    
 00577 -076060606060     00647 -232560302543     00564 +302451602421     00650 -265160476260     00556 +236045232360    
 00527 +116001026023     00544 +146460600660     00562 +253560606060     00643 -226014432151     00542 +146444462425    
 00573 -062425624060     00572 -042502604044     00571 -042501604521     00543 +146447604521     00614 -204663212262    
 00611 -203163212262     00601 -200000610000     00660 -377700000000     00524 +000077770000     00642 -210000146060    
 00506 +000000000022     00522 +000000007777     00617 -206024216325     00625 -206060302451     00635 -206060604762    
 00641 -206060606651     00627 -206060452323     00632 -206060602323     00503 +000000000014     00631 -206060600102    
 00500 +000000000011     00637 -206060606011     00476 +000000000006     00636 -206060606006     00600 -200000000000    
 00525 +007777777777     00654 -340000000000     00657 -370000000000     00512 +000000000060     00661 -377777777700    
 00507 +000000000034     00513 +000000000077     00473 +000000000003     00516 +000000000226     00514 +000000000124    
 00517 +000000000550     00470 +000000000000     00566 +331454142260     00575 -064444214524     00646 -232560140123    
 00555 +234644474325     00530 +140114513145     00621 -206030254347     00656 -343025434734     00472 +000000000002    
 00471 +000000000001     00554 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00055 TXL -301452001444       00056 TXL -303506003505       00057 TXL -303451003450       00060 TXL -302566002564      
 00061 TXL -303455003452       00062 TXL -303510003506       00063 TXL -303514003512       00064 TXL -301623001620      
 00065 TXL -303126003116       00066 TXL -302160002155       00067 TXL -301236001235       00070 TXL -301462001453      
 00071 TXL -302373002361       00072 TXL -301741001740       00073 TXL -303450003445       00074 TXL -302550002544      
 00075 TXL -302544002544       00076 TXL -302544002544       00077 TXL -302477002465       00100 TXL -302465002465      
 00101 TXL -302465002465       00102 TXL -302465002465       00103 TXL -302544002544       00104 TXL -302543002537      
 00105 TXL -302537002537       00106 TXL -302465002465       00107 TXL -302537002537       00110 TXL -303434003431      
 00111 TXL -301150001141       00112 TXL -304223004220       00113 TXL -302640002627       00114 TXL -304225004223      
 00115 TXL -303114003112       00116 TXL -303111003106       00117 TXL -303105003102       00120 TXL -303056003056      
 00121 TXL -303045003042       00122 TXL -303024003022                                                                  
0PROGRAM    
                 W'R (COMARG.(2,FN1).E.FENCE).OR.(COMARG.(1,FN).E.FENCE)            001  LM00003
 00662 TSX +0 07400 4 00016    00663 TSX +0 07400 4 00007    00664 TXH +3 00000 0 00471    00665 TXH +3 00000 0 00213   
 00666 SUB +0 40200 0 00206    00667 TZE +0 10000 0 00675    00670 TSX +0 07400 4 00007    00671 TXH +3 00000 0 00472   
 00672 TXH +3 00000 0 00210    00673 SUB +0 40200 0 00206    00674 TNZ -0 10000 0 00714                                 
                   W'R FN.E.$  HELP$.OR.FN.E.$(HELP)$, T'O HELP                     002  LM00004
 00675 CLA +0 50000 0 00213    00676 SUB +0 40200 0 00656    00677 TZE +0 10000 0 00703    00700 CLA +0 50000 0 00213   
 00701 SUB +0 40200 0 00621    00702 TNZ -0 10000 0 00704    00703 TRA +0 02000 0 00067                                 
                   PRFULL.($'1'RINCOMPLETE '1COMMAND.'*'B$)                         003  LM00005
 00704 TSX +0 07400 4 00024    00705 TXH +3 00000 0 00530    00706 TXH +3 00000 0 00555    00707 TXH +3 00000 0 00646   
 00710 TXH +3 00000 0 00575    00711 TXH +3 00000 0 00566                                                               
                   CHNCOM.(0)                                                       004  LM00006
 00712 TSX +0 07400 4 00004    00713 TXH +3 00000 0 00470                                                               
                 E'L                                                                005  LM00007
                 GETBUF.(IN,360)                                                    006  LM00008
 00714 TSX +0 07400 4 00014    00715 TXH +3 00000 0 00217    00716 TXH +3 00000 0 00517                                 
                 GETBUF.(OUT,84)                                                    007  LM00009
 00717 TSX +0 07400 4 00014    00720 TXH +3 00000 0 00310    00721 TXH +3 00000 0 00514                                 
                 GETBUF.(ITABS,150)                                                 008  LM00010
 00722 TSX +0 07400 4 00014    00723 TXH +3 00000 0 00221    00724 TXH +3 00000 0 00516                                 
                 GETBUF.(OTABS,150)                                                 009  LM00011
 00725 TSX +0 07400 4 00014    00726 TXH +3 00000 0 00306    00727 TXH +3 00000 0 00516                                 
                 MODE=0                                                             010  LM00012
 00730 CLA +0 50000 0 00470    00731 STO +0 60100 0 00270                                                               
                 LMSW=0B                                                            011  LM00013
 00732 CLA +0 50000 0 00470    00733 STO +0 60100 0 00241                                                               
                 LNSZ=0                                                             012  LM00014
 00734 CLA +0 50000 0 00470    00735 STO +0 60100 0 00242                                                               
                 HDRSW=0B                                                           013  LM00015
 00736 CLA +0 50000 0 00470    00737 STO +0 60100 0 00214                                                               
                 DATESW=0B                                                          014  LM00016
 00740 CLA +0 50000 0 00470    00741 STO +0 60100 0 00151                                                               
                 CC=0B                                                              015  LM00017
 00742 CLA +0 50000 0 00470    00743 STO +0 60100 0 00140                                                               
                 NCCS=1B                                                            016  LM00018
 00744 CLA +0 50000 0 00471    00745 STO +0 60100 0 00274                                                               
                 PS=0B                                                              017  LM00019
 00746 CLA +0 50000 0 00470    00747 STO +0 60100 0 00345                                                               
                 NIT=0                                                              018  LM00020
 00750 CLA +0 50000 0 00470    00751 STO +0 60100 0 00275                                                               
                 NOT=0                                                              019  LM00021
 00752 CLA +0 50000 0 00470    00753 STO +0 60100 0 00302                                                               
                 MADSW=0B                                                           020  LM00022
 00754 CLA +0 50000 0 00470    00755 STO +0 60100 0 00246                                                               
                 T'H AL, FOR I=3,1,COMARG.(I,ARG).E.FENCE                           021  LM00023
 00756 CLA +0 50000 0 00473    00757 STO +0 60100 0 00220    00760 TRA +0 02000 0 00764    00761 CLA +0 50000 0 00220   
 00762 ADD +0 40000 0 00471    00763 STO +0 60100 0 00220    00764 TSX +0 07400 4 00007    00765 TXH +3 00000 0 00220   
 00766 TXH +3 00000 0 00125    00767 SUB +0 40200 0 00206    00770 TZE +0 10000 0 01464                                 
                 ARGX=ARG                                                           022  LM00024
 00771 CLA +0 50000 0 00125    00772 STO +0 60100 0 00126                                                               
                 W'R ARG.A.77K.E.34K                                                023  LM00025
 00773 CAL -0 50000 0 00125    00774 ANA -0 32000 0 00513    00775 SLW +0 60200 0 04420    00776 CLA +0 50000 0 04420   
 00777 SUB +0 40200 0 00507    01000 TNZ -0 10000 0 01031                                                               
                   ARG=LJUST.(ARG.A.7777777777K2.V.60K)                             024  LM00026
 01001 CAL -0 50000 0 00125    01002 ANA -0 32000 0 00661    01003 ORA -0 50100 0 00512    01004 SLW +0 60200 0 04420   
 01005 TSX +0 07400 4 00017    01006 TXH +3 00000 0 04420    01007 STO +0 60100 0 00125                                 
                   W'R ARG.A.77K10.NE.74K10, T'O BAD                                025  LM00027
 01010 CAL -0 50000 0 00125    01011 ANA -0 32000 0 00657    01012 SLW +0 60200 0 04420    01013 CLA +0 50000 0 04420   
 01014 SUB +0 40200 0 00654    01015 TZE +0 10000 0 01017    01016 TRA +0 02000 0 00055                                 
                   ARG=BZEL.(RJUST.(ARG.A.7777777777K.V.60K10))                     026  LM00028
 01017 CAL -0 50000 0 00125    01020 ANA -0 32000 0 00525    01021 ORA -0 50100 0 00600    01022 SLW +0 60200 0 04420   
 01023 TSX +0 07400 4 00031    01024 TXH +3 00000 0 04420    01025 STO +0 60100 0 04420    01026 TSX +0 07400 4 00003   
 01027 TXH +3 00000 0 04420    01030 STO +0 60100 0 00125                                                               
                 E'L                                                                027  LM00029
                 W'R ARG.E.$     6$                                                 028  LM00030
 01031 CLA +0 50000 0 00125    01032 SUB +0 40200 0 00636    01033 TNZ -0 10000 0 01037                                 
                   MODE=6                                                           029  LM00031
 01034 CLA +0 50000 0 00476    01035 STO +0 60100 0 00270                                                               
                 O'R ARG.E.$     9$                                                 030  LM00032
 01036 TRA +0 02000 0 01463    01037 CLA +0 50000 0 00125    01040 SUB +0 40200 0 00637    01041 TNZ -0 10000 0 01051   
                   MODE=9                                                           031  LM00033
 01042 CLA +0 50000 0 00500    01043 STO +0 60100 0 00270                                                               
                   CC=0B                                                            032  LM00034
 01044 CLA +0 50000 0 00470    01045 STO +0 60100 0 00140                                                               
                   NCCS=0B                                                          033  LM00035
 01046 CLA +0 50000 0 00470    01047 STO +0 60100 0 00274                                                               
                 O'R ARG.E.$    12$                                                 034  LM00036
 01050 TRA +0 02000 0 01463    01051 CLA +0 50000 0 00125    01052 SUB +0 40200 0 00631    01053 TNZ -0 10000 0 01063   
                   MODE=12                                                          035  LM00037
 01054 CLA +0 50000 0 00503    01055 STO +0 60100 0 00270                                                               
                   CC=0B                                                            036  LM00038
 01056 CLA +0 50000 0 00470    01057 STO +0 60100 0 00140                                                               
                   NCCS=0B                                                          037  LM00039
 01060 CLA +0 50000 0 00470    01061 STO +0 60100 0 00274                                                               
                 O'R ARG.E.$    CC$                                                 038  LM00040
 01062 TRA +0 02000 0 01463    01063 CLA +0 50000 0 00125    01064 SUB +0 40200 0 00632    01065 TNZ -0 10000 0 01073   
                   CC=1B                                                            039  LM00041
 01066 CLA +0 50000 0 00471    01067 STO +0 60100 0 00140                                                               
                   NCCS=0B                                                          040  LM00042
 01070 CLA +0 50000 0 00470    01071 STO +0 60100 0 00274                                                               
                 O'R ARG.E.$   NCC$                                                 041  LM00043
 01072 TRA +0 02000 0 01463    01073 CLA +0 50000 0 00125    01074 SUB +0 40200 0 00627    01075 TNZ -0 10000 0 01103   
                   CC=0B                                                            042  LM00044
 01076 CLA +0 50000 0 00470    01077 STO +0 60100 0 00140                                                               
                   NCCS=0B                                                          043  LM00045
 01100 CLA +0 50000 0 00470    01101 STO +0 60100 0 00274                                                               
                 O'R ARG.E.$    WR$                                                 044  LM00046
 01102 TRA +0 02000 0 01463    01103 CLA +0 50000 0 00125    01104 SUB +0 40200 0 00641    01105 TNZ -0 10000 0 01111   
                   WR=1B                                                            045  LM00047
 01106 CLA +0 50000 0 00471    01107 STO +0 60100 0 00466                                                               
                 O'R ARG.E.$    PS$                                                 046  LM00048
 01110 TRA +0 02000 0 01463    01111 CLA +0 50000 0 00125    01112 SUB +0 40200 0 00635    01113 TNZ -0 10000 0 01117   
                   PS=1B                                                            047  LM00049
 01114 CLA +0 50000 0 00471    01115 STO +0 60100 0 00345                                                               
                 O'R ARG.E.$   HDR$                                                 048  LM00050
 01116 TRA +0 02000 0 01463    01117 CLA +0 50000 0 00125    01120 SUB +0 40200 0 00625    01121 TNZ -0 10000 0 01132   
                   HDRSW=1B                                                         049  LM00051
 01122 CLA +0 50000 0 00471    01123 STO +0 60100 0 00214                                                               
                   PAGENO=1                                                         050  LM00052
 01124 CLA +0 50000 0 00471    01125 STO +0 60100 0 00311                                                               
                   PGNO=2                                                           051  LM00053
 01126 CLA +0 50000 0 00472    01127 STO +0 60100 0 00342                                                               
                   T'O PHDR1                                                        052  LM00054
 01130 TRA +0 02000 0 00111                                                                                             
                 O'R ARG.E.$  DATE$                                                 053  LM00055
 01131 TRA +0 02000 0 01463    01132 CLA +0 50000 0 00125    01133 SUB +0 40200 0 00617    01134 TNZ -0 10000 0 01204   
                   DATESW=1B                                                        054  LM00056
 01135 CLA +0 50000 0 00471    01136 STO +0 60100 0 00151                                                               
                   PGNO=0                                                           055  LM00057
 01137 CLA +0 50000 0 00470    01140 STO +0 60100 0 00342                                                               
      PHDR1        FTIME.(GTDYTM.(0),DATE,TIME)                                     056  LM00058
 01141 TSX +0 07400 4 00015    01142 TXH +3 00000 0 00470    01143 STO +0 60100 0 04420    01144 TSX +0 07400 4 00013   
 01145 TXH +3 00000 0 04420    01146 TXH +3 00000 0 00150    01147 TXH +3 00000 0 00420                                 
                   DATE(1)=(DATE.A.7777K).LS.18.V.$/00'  $                          057  LM00059
 01150 CAL -0 50000 0 00150    01151 ANA -0 32000 0 00522    01152 SLW +0 60200 0 04420    01153 CAL -0 50000 0 00506   
 01154 STA +0 62100 0 01156    01155 CAL -0 50000 0 04420    01156 ALS +0 76700 0 00000    01157 ORA -0 50100 0 00642   
 01160 SLW +0 60200 0 00147                                                                                             
                   DATE=(DATE.A.7777K8).RS.6.V.(DATE.A.7777K4).RS.12                058  LM00060
                1    .V.$ 00/00$                                                    058  LM00061
 01161 CAL -0 50000 0 00150    01162 ANA -0 32000 0 00524    01163 SLW +0 60200 0 04420    01164 CAL -0 50000 0 00503   
 01165 STA +0 62100 0 01167    01166 CAL -0 50000 0 04420    01167 LGR -0 76500 0 00000    01170 SLW +0 60200 0 04420   
 01171 CAL -0 50000 0 00150    01172 ANA -0 32000 0 00660    01173 SLW +0 60200 0 04421    01174 CAL -0 50000 0 00476   
 01175 STA +0 62100 0 01177    01176 CAL -0 50000 0 04421    01177 LGR -0 76500 0 00000    01200 ORA -0 50100 0 04420   
 01201 ORA -0 50100 0 00601    01202 SLW +0 60200 0 00150                                                               
                     V'S PGN=$ PAGE 1'8$                                            059  LM00062
 00343     +0 11410 6 06060    00344     -2 04721 2 72560                                                               
                     D'N DATE(1)                                                    060  LM00063
                 O'R ARG.E.$ ITABS$                                                 061  LM00064
 01203 TRA +0 02000 0 01463    01204 CLA +0 50000 0 00125    01205 SUB +0 40200 0 00611    01206 TNZ -0 10000 0 01217   
                   GETTAB.(NIT,ITABS(ITABS))                                        062  LM00065
 01207 CLA +0 50000 0 00221    01210 SUB +0 40200 0 01211    01211 TXH +3 00000 0 00221    01212 STA +0 62100 0 01215   
 01213 TSX +0 07400 4 00043    01214 TXH +3 00000 0 00275    01215 TXH +3 00000 0 00000                                 
                 O'R ARG.E.$ OTABS$                                                 063  LM00066
 01216 TRA +0 02000 0 01463    01217 CLA +0 50000 0 00125    01220 SUB +0 40200 0 00614    01221 TNZ -0 10000 0 01232   
                   GETTAB.(NOT,OTABS(OTABS))                                        064  LM00067
 01222 CLA +0 50000 0 00306    01223 SUB +0 40200 0 01224    01224 TXH +3 00000 0 00306    01225 STA +0 62100 0 01230   
 01226 TSX +0 07400 4 00043    01227 TXH +3 00000 0 00302    01230 TXH +3 00000 0 00000                                 
                 O'R ARG.E.$  HELP$                                                 065  LM00068
 01231 TRA +0 02000 0 01463    01232 CLA +0 50000 0 00125    01233 SUB +0 40200 0 00621    01234 TNZ -0 10000 0 01312   
      HELP         PRMESS.                                                          066  LM00069
 01235 TSX +0 07400 4 00025                                                                                             
                   PRFULL.($'UP NAME1 NAME2 -MODES-$)                               067  LM00070
 01236 TSX +0 07400 4 00024    01237 TXH +3 00000 0 00543    01240 TXH +3 00000 0 00571    01241 TXH +3 00000 0 00572   
 01242 TXH +3 00000 0 00573                                                                                             
                   PRFULL.($'UMODES 'LARE:$)                                        068  LM00071
 01243 TSX +0 07400 4 00024    01244 TXH +3 00000 0 00542    01245 TXH +3 00000 0 00643    01246 TXH +3 00000 0 00562   
                   PRFULL.($'U  6 9 12 CC NCC WR PS HDR DATE HELP$)                 069  LM00072
 01247 TSX +0 07400 4 00024    01250 TXH +3 00000 0 00544    01251 TXH +3 00000 0 00527    01252 TXH +3 00000 0 00556   
 01253 TXH +3 00000 0 00650    01254 TXH +3 00000 0 00564    01255 TXH +3 00000 0 00647    01256 TXH +3 00000 0 00577   
                   PRFULL.($'U  ITAB 'N  OTAB 'N  LL 'N  PGL 'N  BLKSIZ 'N'8$,      070  LM00073
                1    $  FILE 'LNAME4$)                                              070  LM00074
 01257 TSX +0 07400 4 00024    01260 TXH +3 00000 0 00545    01261 TXH +3 00000 0 00547    01262 TXH +3 00000 0 00613   
 01263 TXH +3 00000 0 00534    01264 TXH +3 00000 0 00604    01265 TXH +3 00000 0 00563    01266 TXH +3 00000 0 00607   
 01267 TXH +3 00000 0 00652    01270 TXH +3 00000 0 00620    01271 TXH +3 00000 0 00603    01272 TXH +3 00000 0 00560   
                   PRFULL.($'U  ITABS '4LIST  OTABS '4LIST$)                        071  LM00075
 01273 TSX +0 07400 4 00024    01274 TXH +3 00000 0 00545    01275 TXH +3 00000 0 00550    01276 TXH +3 00000 0 00570   
 01277 TXH +3 00000 0 00576    01300 TXH +3 00000 0 00532                                                               
                   PRFULL.($    LIST CONTAINS: 'U'N CTSS FAP MAD$)                  072  LM00076
 01301 TSX +0 07400 4 00024    01302 TXH +3 00000 0 00633    01303 TXH +3 00000 0 00644    01304 TXH +3 00000 0 00645   
 01305 TXH +3 00000 0 00605    01306 TXH +3 00000 0 00557    01307 TXH +3 00000 0 00552                                 
                   T'O EGRETS                                                       073  LM00077
 01310 TRA +0 02000 0 00062                                                                                             
                 O'R COMARG.(I+1,ARG1).NE.FENCE                                     074  LM00078
 01311 TRA +0 02000 0 01463    01312 CLA +0 50000 0 00220    01313 ADD +0 40000 0 00471    01314 STO +0 60100 0 04421   
 01315 TSX +0 07400 4 00007    01316 TXH +3 00000 0 04421    01317 TXH +3 00000 0 00124    01320 SUB +0 40200 0 00206   
 01321 TZE +0 10000 0 01444                                                                                             
                   I=I+1                                                            075  LM00079
 01322 CLA +0 50000 0 00220    01323 ADD +0 40000 0 00471    01324 STO +0 60100 0 00220                                 
                   W'R ARG.E.$  ITAB$                                               076  LM00080
 01325 CLA +0 50000 0 00125    01326 SUB +0 40200 0 00622    01327 TNZ -0 10000 0 01340                                 
                     ITD=BCDC.(ARG1)                                                077  LM00081
 01330 TSX +0 07400 4 00042    01331 TXH +3 00000 0 00124    01332 STO +0 60100 0 00222                                 
                     W'R ITD.E.0, T'O ILL                                           078  LM00082
 01333 CLA +0 50000 0 00222    01334 SUB +0 40200 0 00470    01335 TNZ -0 10000 0 01337    01336 TRA +0 02000 0 00070   
                   O'R ARG.E.$  OTAB$                                               079  LM00083
 01337 TRA +0 02000 0 01443    01340 CLA +0 50000 0 00125    01341 SUB +0 40200 0 00623    01342 TNZ -0 10000 0 01353   
                     OTD=BCDC.(ARG1)                                                080  LM00084
 01343 TSX +0 07400 4 00042    01344 TXH +3 00000 0 00124    01345 STO +0 60100 0 00307                                 
                     W'R OTD.E.0, T'O ILL                                           081  LM00085
 01346 CLA +0 50000 0 00307    01347 SUB +0 40200 0 00470    01350 TNZ -0 10000 0 01352    01351 TRA +0 02000 0 00070   
                   O'R ARG.E.$    LL$                                               082  LM00086
 01352 TRA +0 02000 0 01443    01353 CLA +0 50000 0 00125    01354 SUB +0 40200 0 00634    01355 TNZ -0 10000 0 01366   
                     SLL=BCDC.(ARG1)                                                083  LM00087
 01356 TSX +0 07400 4 00042    01357 TXH +3 00000 0 00124    01360 STO +0 60100 0 00347                                 
                     W'R SLL.E.0, T'O ILL                                           084  LM00088
 01361 CLA +0 50000 0 00347    01362 SUB +0 40200 0 00470    01363 TNZ -0 10000 0 01365    01364 TRA +0 02000 0 00070   
                   O'R ARG.E.$   PGL$                                               085  LM00089
 01365 TRA +0 02000 0 01443    01366 CLA +0 50000 0 00125    01367 SUB +0 40200 0 00630    01370 TNZ -0 10000 0 01401   
                     SPGL=BCDC.(ARG1)                                               086  LM00090
 01371 TSX +0 07400 4 00042    01372 TXH +3 00000 0 00124    01373 STO +0 60100 0 00350                                 
                     W'R SPGL.E.0, T'O ILL                                          087  LM00091
 01374 CLA +0 50000 0 00350    01375 SUB +0 40200 0 00470    01376 TNZ -0 10000 0 01400    01377 TRA +0 02000 0 00070   
                   O'R ARG.E.$BLKSIZ$                                               088  LM00092
 01400 TRA +0 02000 0 01443    01401 CLA +0 50000 0 00125    01402 SUB +0 40200 0 00553    01403 TNZ -0 10000 0 01420   
                     LNSZ=BCDC.(ARG1)                                               089  LM00093
 01404 TSX +0 07400 4 00042    01405 TXH +3 00000 0 00124    01406 STO +0 60100 0 00242                                 
                     W'R LNSZ.E.0, T'O ILL                                          090  LM00094
 01407 CLA +0 50000 0 00242    01410 SUB +0 40200 0 00470    01411 TNZ -0 10000 0 01413    01412 TRA +0 02000 0 00070   
                     CC=0B                                                          091  LM00095
 01413 CLA +0 50000 0 00470    01414 STO +0 60100 0 00140                                                               
                     NCCS=0B                                                        092  LM00096
 01415 CLA +0 50000 0 00470    01416 STO +0 60100 0 00274                                                               
                   O'R ARG.E.$  FILE$                                               093  LM00097
 01417 TRA +0 02000 0 01443    01420 CLA +0 50000 0 00125    01421 SUB +0 40200 0 00620    01422 TNZ -0 10000 0 01442   
                     FILESW=1B                                                      094  LM00098
 01423 CLA +0 50000 0 00471    01424 STO +0 60100 0 00207                                                               
                     FNARY=FN                                                       095  LM00099
 01425 CLA +0 50000 0 00213    01426 STO +0 60100 0 00212                                                               
                     FNARY(1)=ARG1                                                  096  LM00100
 01427 CLA +0 50000 0 00124    01430 STO +0 60100 0 00211                                                               
                     DELETE.(FNARY,FNARY(1),0,EGRETS)                               097  LM00101
 01431 TSX +0 07400 4 00011    01432 TXH +3 00000 0 00212    01433 TXH +3 00000 0 00211    01434 TXH +3 00000 0 00470   
 01435 TXH +3 00000 0 00062                                                                                             
                     DIMENSION FNARY(1)                                             098  LM00102
                     OPENW.(FN,ARG1)                                                099  LM00103
 01436 TSX +0 07400 4 00021    01437 TXH +3 00000 0 00213    01440 TXH +3 00000 0 00124                                 
                   O'E                                                              100  LM00104
 01441 TRA +0 02000 0 01443                                                                                             
                     T'O BAD                                                        101  LM00105
 01442 TRA +0 02000 0 00055                                                                                             
                   E'L                                                              102  LM00106
                 O'E                                                                103  LM00107
 01443 TRA +0 02000 0 01463                                                                                             
      BAD          PRFULL.($'R'X'8$,ARGX,$ NOT RECOGNIZED.'B$)                      104  LM00108
 01444 TSX +0 07400 4 00024    01445 TXH +3 00000 0 00537    01446 TXH +3 00000 0 00126    01447 TXH +3 00000 0 00612   
 01450 TXH +3 00000 0 00561    01451 TXH +3 00000 0 00651                                                               
                   T'O EGRETS                                                       105  LM00109
 01452 TRA +0 02000 0 00062                                                                                             
      ILL          PRFULL.($'R'X'8$,ARGX,$'X '8$,ARG1,$ ILLEGAL.'B$)                106  LM00110
 01453 TSX +0 07400 4 00024    01454 TXH +3 00000 0 00537    01455 TXH +3 00000 0 00126    01456 TXH +3 00000 0 00546   
 01457 TXH +3 00000 0 00124    01460 TXH +3 00000 0 00610    01461 TXH +3 00000 0 00551                                 
                   T'O EGRETS                                                       107  LM00111
 01462 TRA +0 02000 0 00062                                                                                             
      AL         E'L                                                                108  LM00112
 01463 TRA +0 02000 0 00761                                                                                             
                 W'R (SPGL.L.5.OR.(SPGL.L.8.AND.HDRSW)).AND.SPGL.NE.0               109  LM00113
 01464 CLA +0 50000 0 00350    01465 SUB +0 40200 0 00470    01466 TZE +0 10000 0 01517    01467 NZT -0 52000 0 00214   
 01470 TRA +0 02000 0 01475    01471 CLA +0 50000 0 00350    01472 SUB +0 40200 0 00477    01473 TZE +0 10000 0 01475   
 01474 TMI -0 12000 0 01501    01475 CLA +0 50000 0 00350    01476 SUB +0 40200 0 00475    01477 TZE +0 10000 0 01517   
 01500 TPL +0 12000 0 01517                                                                                             
                   PRFULL.($'R'3   PGL '8$,BZEL.(DEFBC.(SPGL)),$ ILLEGAL.'B$)       110  LM00114
 01501 TSX +0 07400 4 00010    01502 TXH +3 00000 0 00350    01503 STO +0 60100 0 04421    01504 TSX +0 07400 4 00003   
 01505 TXH +3 00000 0 04421    01506 STO +0 60100 0 04421    01507 TSX +0 07400 4 00024    01510 TXH +3 00000 0 00536   
 01511 TXH +3 00000 0 00615    01512 TXH +3 00000 0 00526    01513 TXH +3 00000 0 04421    01514 TXH +3 00000 0 00610   
 01515 TXH +3 00000 0 00551                                                                                             
                   T'O EGRETS                                                       111  LM00115
 01516 TRA +0 02000 0 00062                                                                                             
                 E'L                                                                112  LM00116
                 W'R NIT.E.0                                                        113  LM00117
 01517 CLA +0 50000 0 00275    01520 SUB +0 40200 0 00470    01521 TNZ -0 10000 0 01546                                 
                   T'H ITDL, FOR I=ITD+1,ITD,I.G.150                                114  LM00118
 01522 CLA +0 50000 0 00222    01523 ADD +0 40000 0 00471    01524 STO +0 60100 0 00220    01525 TRA +0 02000 0 01531   
 01526 CLA +0 50000 0 00220    01527 ADD +0 40000 0 00222    01530 STO +0 60100 0 00220    01531 CLA +0 50000 0 00220   
 01532 SUB +0 40200 0 00516    01533 TZE +0 10000 0 01535    01534 TPL +0 12000 0 01546                                 
                   NIT=NIT+1                                                        115  LM00119
 01535 CLA +0 50000 0 00275    01536 ADD +0 40000 0 00471    01537 STO +0 60100 0 00275                                 
                   ITABS(ITABS+NIT)=I                                               116  LM00120
 01540 CLA +0 50000 0 00221    01541 ADD +0 40000 0 00275    01542 PAX +0 73400 1 00000    01543 CLA +0 50000 0 00220   
 01544 STO +0 60100 1 00221                                                                                             
      ITDL         C'E                                                              117  LM00121
 01545 TRA +0 02000 0 01526                                                                                             
                 E'L                                                                118  LM00122
                 W'R NOT.E.0                                                        119  LM00123
 01546 CLA +0 50000 0 00302    01547 SUB +0 40200 0 00470    01550 TNZ -0 10000 0 01575                                 
                   T'H OTDL, FOR I=OTD+1,OTD,I.G.150                                120  LM00124
 01551 CLA +0 50000 0 00307    01552 ADD +0 40000 0 00471    01553 STO +0 60100 0 00220    01554 TRA +0 02000 0 01560   
 01555 CLA +0 50000 0 00220    01556 ADD +0 40000 0 00307    01557 STO +0 60100 0 00220    01560 CLA +0 50000 0 00220   
 01561 SUB +0 40200 0 00516    01562 TZE +0 10000 0 01564    01563 TPL +0 12000 0 01575                                 
                   NOT=NOT+1                                                        121  LM00125
 01564 CLA +0 50000 0 00302    01565 ADD +0 40000 0 00471    01566 STO +0 60100 0 00302                                 
                   OTABS(OTABS+NOT)=I                                               122  LM00126
 01567 CLA +0 50000 0 00306    01570 ADD +0 40000 0 00302    01571 PAX +0 73400 1 00000    01572 CLA +0 50000 0 00220   
 01573 STO +0 60100 1 00306                                                                                             
      OTDL         C'E                                                              123  LM00127
 01574 TRA +0 02000 0 01555                                                                                             
                 E'L                                                                124  LM00128
                 SETBRK.(BRKOUT)                                                    125  LM00129
 01575 TSX +0 07400 4 00033    01576 TXH +3 00000 0 00056                                                               
                 OPENF.(FN,FN1)                                                     126  LM00133
 01577 TSX +0 07400 4 00020    01600 TXH +3 00000 0 00213    01601 TXH +3 00000 0 00210                                 
                 EOFCT=360                                                          127  LM00134
 01602 CLA +0 50000 0 00517    01603 STO +0 60100 0 00166                                                               
                 RDWAIT.(FN,FN1,1,IN(IN+360)...360,EOFT,EOFCT)                      128  LM00135
 01604 CLA +0 50000 0 00217    01605 ADD +0 40000 0 00517    01606 SUB +0 40200 0 01607    01607 TXH +3 00000 0 00217   
 01610 STA +0 62100 0 01615    01611 TSX +0 07400 4 00027    01612 TXH +3 00000 0 00213    01613 TXH +3 00000 0 00210   
 01614 TXH +3 00000 0 00471    01615 TIX +2 00517 0 00000    01616 TXH +3 00000 0 00064    01617 TXH +3 00000 0 00166   
      EOFT       IL=360-EOFCT                                                       129  LM00136
 01620 CLA +0 50000 0 00517    01621 SUB +0 40200 0 00166    01622 STO +0 60100 0 00216                                 
                 T'H LLM, FOR I=360,-1,I.LE.IL.OR.LMSW                              130  LM00137
 01623 CLA +0 50000 0 00517    01624 STO +0 60100 0 00220    01625 TRA +0 02000 0 01631    01626 CLS +0 50200 0 00471   
 01627 ADD +0 40000 0 00220    01630 STO +0 60100 0 00220    01631 ZET +0 52000 0 00241    01632 TRA +0 02000 0 01653   
 01633 CLA +0 50000 0 00220    01634 SUB +0 40200 0 00216    01635 TZE +0 10000 0 01653    01636 TMI -0 12000 0 01653   
                 W'R IN(IN+I).A.LM .E.LM, LMSW=1B                                   131  LM00138
 01637 CLA +0 50000 0 00217    01640 ADD +0 40000 0 00220    01641 PAX +0 73400 1 00000    01642 CAL -0 50000 1 00217   
 01643 ANA -0 32000 0 00240    01644 SLW +0 60200 0 04421    01645 CLA +0 50000 0 04421    01646 SUB +0 40200 0 00240   
 01647 TNZ -0 10000 0 01652    01650 CLA +0 50000 0 00471    01651 STO +0 60100 0 00241                                 
      LLM        C'E                                                                132  LM00139
 01652 TRA +0 02000 0 01626                                                                                             
                 W'R MODE.E.0                                                       133  LM00140
 01653 CLA +0 50000 0 00270    01654 SUB +0 40200 0 00470    01655 TNZ -0 10000 0 01771                                 
                   N9=0B                                                            134  LM00141
 01656 CLA +0 50000 0 00470    01657 STO +0 60100 0 00273                                                               
                   N12=0B                                                           135  LM00142
 01660 CLA +0 50000 0 00470    01661 STO +0 60100 0 00272                                                               
                   T'H LT, FOR I=360,-1,I.LE.IL.OR.N9.AND.N12                       136  LM00143
 01662 CLA +0 50000 0 00517    01663 STO +0 60100 0 00220    01664 TRA +0 02000 0 01670    01665 CLS +0 50200 0 00471   
 01666 ADD +0 40000 0 00220    01667 STO +0 60100 0 00220    01670 NZT -0 52000 0 00272    01671 TRA +0 02000 0 01674   
 01672 ZET +0 52000 0 00273    01673 TRA +0 02000 0 01741    01674 CLA +0 50000 0 00220    01675 SUB +0 40200 0 00216   
 01676 TZE +0 10000 0 01741    01677 TMI -0 12000 0 01741                                                               
                   CHAR=IN(IN+I)                                                    137  LM00144
 01700 CLA +0 50000 0 00217    01701 ADD +0 40000 0 00220    01702 PAX +0 73400 2 00000    01703 CLA +0 50000 2 00217   
 01704 STO +0 60100 0 00142                                                                                             
                   W'R CHAR.A.LM.E.LM, T'O LT                                       138  LM00145
 01705 CAL -0 50000 0 00142    01706 ANA -0 32000 0 00240    01707 SLW +0 60200 0 04421    01710 CLA +0 50000 0 04421   
 01711 SUB +0 40200 0 00240    01712 TNZ -0 10000 0 01714    01713 TRA +0 02000 0 00072                                 
                   W'R .NOT.N9.AND.CHAR.A.600600600600K.NE.0,N9=1B                  139  LM00146
 01714 CAL -0 50000 0 00142    01715 ANA -0 32000 0 00602    01716 SLW +0 60200 0 04421    01717 CLA +0 50000 0 04421   
 01720 SUB +0 40200 0 00470    01721 TZE +0 10000 0 01726    01722 ZET +0 52000 0 00273    01723 TRA +0 02000 0 01726   
 01724 CLA +0 50000 0 00471    01725 STO +0 60100 0 00273                                                               
                   W'R .NOT.N12.AND.CHAR.A.720072007200K.NE.0,N12=1B                140  LM00147
 01726 CAL -0 50000 0 00142    01727 ANA -0 32000 0 00653    01730 SLW +0 60200 0 04421    01731 CLA +0 50000 0 04421   
 01732 SUB +0 40200 0 00470    01733 TZE +0 10000 0 01740    01734 ZET +0 52000 0 00272    01735 TRA +0 02000 0 01740   
 01736 CLA +0 50000 0 00471    01737 STO +0 60100 0 00272                                                               
      LT           C'E                                                              141  LM00148
 01740 TRA +0 02000 0 01665                                                                                             
                   W'R .NOT.N9.AND.N12                                              142  LM00149
 01741 NZT -0 52000 0 00272    01742 TRA +0 02000 0 01754    01743 ZET +0 52000 0 00273    01744 TRA +0 02000 0 01754   
                     MODE=9                                                         143  LM00150
 01745 CLA +0 50000 0 00500    01746 STO +0 60100 0 00270                                                               
                     NCCS=0B                                                        144  LM00151
 01747 CLA +0 50000 0 00470    01750 STO +0 60100 0 00274                                                               
                     CC=0B                                                          145  LM00152
 01751 CLA +0 50000 0 00470    01752 STO +0 60100 0 00140                                                               
                   O'R .NOT.N12.AND.N9                                              146  LM00153
 01753 TRA +0 02000 0 01771    01754 NZT -0 52000 0 00273    01755 TRA +0 02000 0 01767    01756 ZET +0 52000 0 00272   
 01757 TRA +0 02000 0 01767                                                                                             
                     MODE=12                                                        147  LM00154
 01760 CLA +0 50000 0 00503    01761 STO +0 60100 0 00270                                                               
                     NCCS=0B                                                        148  LM00155
 01762 CLA +0 50000 0 00470    01763 STO +0 60100 0 00274                                                               
                     CC=0B                                                          149  LM00156
 01764 CLA +0 50000 0 00470    01765 STO +0 60100 0 00140                                                               
                   O'E                                                              150  LM00157
 01766 TRA +0 02000 0 01771                                                                                             
                     MODE=6                                                         151  LM00158
 01767 CLA +0 50000 0 00476    01770 STO +0 60100 0 00270                                                               
                   E'L                                                              152  LM00159
                 E'L                                                                153  LM00160
                 IN(IN+IL+1)=0                                                      154  LM00161
 01771 CLA +0 50000 0 00217    01772 ADD +0 40000 0 00216    01773 ADD +0 40000 0 00471    01774 PAX +0 73400 1 00000   
 01775 CLA +0 50000 0 00470    01776 STO +0 60100 1 00217                                                               
                 T'H CCTL, FOR I=360,-1,I.LE.IL.OR..NOT.NCCS                        155  LM00162
 01777 CLA +0 50000 0 00517    02000 STO +0 60100 0 00220    02001 TRA +0 02000 0 02005    02002 CLS +0 50200 0 00471   
 02003 ADD +0 40000 0 00220    02004 STO +0 60100 0 00220    02005 NZT -0 52000 0 00274    02006 TRA +0 02000 0 02101   
 02007 CLA +0 50000 0 00220    02010 SUB +0 40200 0 00216    02011 TZE +0 10000 0 02101    02012 TMI -0 12000 0 02101   
                 PCC=IN(IN+I-1).RS.30                                               156  LM00163
 02013 CLA +0 50000 0 00217    02014 ADD +0 40000 0 00220    02015 SUB +0 40200 0 00471    02016 PAX +0 73400 1 00000   
 02017 CAL -0 50000 0 00510    02020 STA +0 62100 0 02022    02021 CAL -0 50000 1 00217    02022 LGR -0 76500 0 00000   
 02023 SLW +0 60200 0 00326                                                                                             
      PCL        T'H PCL, FOR J=0,1,J.G.NPCC.OR.PCC.E.PCCL(J)                       157  LM00164
 02024 CLA +0 50000 0 00470    02025 STO +0 60100 0 00223    02026 TRA +0 02000 0 02032    02027 CLA +0 50000 0 00223   
 02030 ADD +0 40000 0 00471    02031 STO +0 60100 0 00223    02032 LXA +0 53400 2 00223    02033 CLA +0 50000 0 00326   
 02034 SUB +0 40200 2 00325    02035 TZE +0 10000 0 02043    02036 CLA +0 50000 0 00223    02037 SUB +0 40200 0 00303   
 02040 TZE +0 10000 0 02042    02041 TPL +0 12000 0 02043    02042 TRA +0 02000 0 02027                                 
                 W'R J.G.NPCC.OR.IN(IN+I).A.LM.NE.LM                                158  LM00165
 02043 CLA +0 50000 0 00217    02044 ADD +0 40000 0 00220    02045 PAX +0 73400 1 00000    02046 CAL -0 50000 1 00217   
 02047 ANA -0 32000 0 00240    02050 SLW +0 60200 0 04421    02051 CLA +0 50000 0 04421    02052 SUB +0 40200 0 00240   
 02053 TNZ -0 10000 0 02060    02054 CLA +0 50000 0 00223    02055 SUB +0 40200 0 00303    02056 TZE +0 10000 0 02065   
 02057 TMI -0 12000 0 02065                                                                                             
                   NCCS=0B                                                          159  LM00166
 02060 CLA +0 50000 0 00470    02061 STO +0 60100 0 00274                                                               
                   CC=0B                                                            160  LM00167
 02062 CLA +0 50000 0 00470    02063 STO +0 60100 0 00140                                                               
                 O'E                                                                161  LM00168
 02064 TRA +0 02000 0 02100                                                                                             
                   I=I-IN(IN+I).A.77777K                                            162  LM00169
 02065 CLA +0 50000 0 00217    02066 ADD +0 40000 0 00220    02067 PAX +0 73400 1 00000    02070 CAL -0 50000 1 00217   
 02071 ANA -0 32000 0 00523    02072 SLW +0 60200 0 04421    02073 CLA +0 50000 0 00220    02074 SUB +0 40200 0 04421   
 02075 STO +0 60100 0 00220                                                                                             
                   CC=1B                                                            163  LM00170
 02076 CLA +0 50000 0 00471    02077 STO +0 60100 0 00140                                                               
                 E'L                                                                164  LM00171
      CCTL       C'E                                                                165  LM00172
 02100 TRA +0 02000 0 02002                                                                                             
                 WHOAMI.(OUT(OUT+4)...4)                                            166  LM00176
 02101 CLA +0 50000 0 00310    02102 ADD +0 40000 0 00474    02103 SUB +0 40200 0 02104    02104 TXH +3 00000 0 00310   
 02105 STA +0 62100 0 02107    02106 TSX +0 07400 4 00037    02107 TIX +2 00474 0 00000                                 
                 W'R OUT(OUT+1) .E. $(FIB) $                                        167  LM00177
 02110 CLA +0 50000 0 00310    02111 ADD +0 40000 0 00471    02112 PAX +0 73400 1 00000    02113 CLA +0 50000 1 00310   
 02114 SUB +0 40200 0 00655    02115 TNZ -0 10000 0 02122                                                               
                   ID=10                                                            168  LM00178
 02116 CLA +0 50000 0 00501    02117 STO +0 60100 0 00215                                                               
                   T'O GETTIM                                                       169  LM00179
 02120 TRA +0 02000 0 00066                                                                                             
                 O'E                                                                170  LM00180
 02121 TRA +0 02000 0 02247                                                                                             
                   ID = OUT(OUT+1) .RS. 30                                          171  LM00181
 02122 CLA +0 50000 0 00310    02123 ADD +0 40000 0 00471    02124 PAX +0 73400 1 00000    02125 CAL -0 50000 0 00510   
 02126 STA +0 62100 0 02130    02127 CAL -0 50000 1 00310    02130 LGR -0 76500 0 00000    02131 SLW +0 60200 0 00215   
                   W'R ID.G.9                                                       172  LM00182
 02132 CLA +0 50000 0 00215    02133 SUB +0 40200 0 00500    02134 TZE +0 10000 0 02155    02135 TMI -0 12000 0 02155   
                     PRFULL.($'R'1ILLEGAL '1CONSOLE 'UID:'X'8$,OUT(OUT+1),          173  LM00183
                1      $'B'9$)                                                      173  LM00184
 02136 CLA +0 50000 0 00310    02137 ADD +0 40000 0 00471    02140 SUB +0 40200 0 02141    02141 TXH +3 00000 0 00310   
 02142 STA +0 62100 0 02152    02143 TSX +0 07400 4 00024    02144 TXH +3 00000 0 00535    02145 TXH +3 00000 0 00567   
 02146 TXH +3 00000 0 00531    02147 TXH +3 00000 0 00574    02150 TXH +3 00000 0 00565    02151 TXH +3 00000 0 00526   
 02152 TXH +3 00000 0 00000    02153 TXH +3 00000 0 00533                                                               
                     T'O BRKOUT                                                     174  LM00185
 02154 TRA +0 02000 0 00056                                                                                             
                   E'L                                                              175  LM00186
      GETTIM       TCR = TCR(ID)                                                    176  LM00187
 02155 LXA +0 53400 2 00215    02156 CLA +0 50000 2 00417    02157 STO +0 60100 0 00417                                 
                   TCRLF=TCRLF(ID)                                                  177  LM00188
 02160 CLA +0 50000 2 00404    02161 STO +0 60100 0 00404                                                               
                   W'R FILESW, TCRLF=1                                              178  LM00189
 02162 NZT -0 52000 0 00207    02163 TRA +0 02000 0 02166    02164 CLA +0 50000 0 00471    02165 STO +0 60100 0 00404   
                   TBS = TBS(ID)                                                    179  LM00190
 02166 LXA +0 53400 2 00215    02167 CLA +0 50000 2 00371    02170 STO +0 60100 0 00371                                 
                   TSP = TSP(ID)                                                    180  LM00191
 02171 CLA +0 50000 2 00452    02172 STO +0 60100 0 00452                                                               
                   TTAB = TTAB(ID)                                                  181  LM00192
 02173 CLA +0 50000 2 00465    02174 STO +0 60100 0 00465                                                               
                   TLF = TLF(ID)                                                    182  LM00193
 02175 CLA +0 50000 2 00434    02176 STO +0 60100 0 00434                                                               
                   W'R FILESW, TLF=1                                                183  LM00194
 02177 NZT -0 52000 0 00207    02200 TRA +0 02000 0 02203    02201 CLA +0 50000 0 00471    02202 STO +0 60100 0 00434   
                   LL=LL(ID)                                                        184  LM00195
 02203 LXA +0 53400 2 00215    02204 CLA +0 50000 2 00237    02205 STO +0 60100 0 00237                                 
                   W'R SLL.NE.0, LL=SLL                                             185  LM00196
 02206 CLA +0 50000 0 00347    02207 SUB +0 40200 0 00470    02210 TZE +0 10000 0 02213    02211 CLA +0 50000 0 00347   
 02212 STO +0 60100 0 00237                                                                                             
                   PGL=PGL(ID)                                                      186  LM00197
 02213 LXA +0 53400 2 00215    02214 CLA +0 50000 2 00341    02215 STO +0 60100 0 00341                                 
                   W'R SPGL.NE.0, PGL=SPGL                                          187  LM00198
 02216 CLA +0 50000 0 00350    02217 SUB +0 40200 0 00470    02220 TZE +0 10000 0 02223    02221 CLA +0 50000 0 00350   
 02222 STO +0 60100 0 00341                                                                                             
                   D(8)=PGL/5                                                       188  LM00199
 02223 LDQ +0 56000 0 00341    02224 PXD -0 75400 0 00000    02225 LLS +0 76300 0 00000    02226 DVP +0 22100 0 00475   
 02227 STQ -0 60000 0 00155                                                                                             
                   D(7)=(PGL-1)/4                                                   189  LM00200
 02230 CLA +0 50000 0 00341    02231 SUB +0 40200 0 00471    02232 LRS +0 76500 0 00043    02233 DVP +0 22100 0 00474   
 02234 STQ -0 60000 0 00156                                                                                             
                   D(6)=(PGL-2)/3                                                   190  LM00201
 02235 CLA +0 50000 0 00341    02236 SUB +0 40200 0 00472    02237 LRS +0 76500 0 00043    02240 DVP +0 22100 0 00473   
 02241 STQ -0 60000 0 00157                                                                                             
                   D(5)=2*D(7)                                                      191  LM00202
 02242 LDQ +0 56000 0 00472    02243 MPY +0 20000 0 00156    02244 STQ -0 60000 0 00160                                 
                   D(1)=PGL                                                         192  LM00203
 02245 CLA +0 50000 0 00341    02246 STO +0 60100 0 00164                                                               
                 E'L                                                                193  LM00204
                 W'R LNSZ.NE.0                                                      194  LM00205
 02247 CLA +0 50000 0 00242    02250 SUB +0 40200 0 00470    02251 TZE +0 10000 0 02255                                 
                   LMSW=0B                                                          195  LM00206
 02252 CLA +0 50000 0 00470    02253 STO +0 60100 0 00241                                                               
                 O'R .NOT.LMSW.AND.MODE.E.6                                         196  LM00207
 02254 TRA +0 02000 0 02267    02255 CLA +0 50000 0 00270    02256 SUB +0 40200 0 00476    02257 TNZ -0 10000 0 02265   
 02260 ZET +0 52000 0 00241    02261 TRA +0 02000 0 02265                                                               
                   LNSZ=14                                                          197  LM00208
 02262 CLA +0 50000 0 00504    02263 STO +0 60100 0 00242                                                               
                 O'E                                                                198  LM00209
 02264 TRA +0 02000 0 02267                                                                                             
                   LNSZ=0                                                           199  LM00210
 02265 CLA +0 50000 0 00470    02266 STO +0 60100 0 00242                                                               
                 E'L                                                                200  LM00211
                 SETSIZ.(MODE,LNSZ,LMSW)                                            201  LM00212
 02267 TSX +0 07400 4 00035    02270 TXH +3 00000 0 00270    02271 TXH +3 00000 0 00242    02272 TXH +3 00000 0 00241   
                 SETFUL.(0)                                                         202  LM00213
 02273 TSX +0 07400 4 00034    02274 TXH +3 00000 0 00470                                                               
                 AX=1                                                               203  LM00214
 02275 CLA +0 50000 0 00471    02276 STO +0 60100 0 00131                                                               
                 BX=1                                                               204  LM00215
 02277 CLA +0 50000 0 00471    02300 STO +0 60100 0 00135                                                               
                 AY=0                                                               205  LM00216
 02301 CLA +0 50000 0 00470    02302 STO +0 60100 0 00132                                                               
                 W'R CC.OR.PS                                                       206  LM00217
 02303 ZET +0 52000 0 00345    02304 TRA +0 02000 0 02307    02305 NZT -0 52000 0 00140    02306 TRA +0 02000 0 02324   
                   CCN=CC                                                           207  LM00218
 02307 CLA +0 50000 0 00140    02310 STO +0 60100 0 00137                                                               
                   CCX=CC.OR.PS                                                     208  LM00219
 02311 ZET +0 52000 0 00345    02312 TRA +0 02000 0 02317    02313 ZET +0 52000 0 00140    02314 TRA +0 02000 0 02317   
 02315 PXD -0 75400 0 00000    02316 TRA +0 02000 0 02320    02317 CLA +0 50000 0 00471    02320 STO +0 60100 0 00141   
                   BY=0                                                             209  LM00220
 02321 CLA +0 50000 0 00470    02322 STO +0 60100 0 00136                                                               
                 O'E                                                                210  LM00221
 02323 TRA +0 02000 0 02332                                                                                             
                   BY=1                                                             211  LM00222
 02324 CLA +0 50000 0 00471    02325 STO +0 60100 0 00136                                                               
                   CCN=0B                                                           212  LM00223
 02326 CLA +0 50000 0 00470    02327 STO +0 60100 0 00137                                                               
                   CCX=0B                                                           213  LM00224
 02330 CLA +0 50000 0 00470    02331 STO +0 60100 0 00141                                                               
                 E'L                                                                214  LM00225
                 K=1                                                                215  LM00226
 02332 CLA +0 50000 0 00471    02333 STO +0 60100 0 00224                                                               
                 W'R DATESW.OR.HDRSW                                                216  LM00227
 02334 ZET +0 52000 0 00214    02335 TRA +0 02000 0 02340    02336 NZT -0 52000 0 00151    02337 TRA +0 02000 0 02357   
                   BY=4                                                             217  LM00228
 02340 CLA +0 50000 0 00474    02341 STO +0 60100 0 00136                                                               
                   AY=4                                                             218  LM00229
 02342 CLA +0 50000 0 00474    02343 STO +0 60100 0 00132                                                               
                   PRTCHR.(PTCHAR.)                                                 219  LM00230
 02344 TSX +0 07400 4 00026    02345 TXH +3 00000 0 00045                                                               
                   PRFULA.($'*'*'X$,FN,$ 'X'8$,FN1,DATE...2,TIME,PGN...PGNO,        220  LM00231
                1    $'*'*'9$)                                                      220  LM00232
 02346 TSX +0 07400 4 00023    02347 TXH +3 00000 0 00541    02350 TXH +3 00000 0 00213    02351 TXH +3 00000 0 00606   
 02352 TXH +3 00000 0 00210    02353 TIX +2 00472 0 00150    02354 TXH +3 00000 0 00420    02355 TIX +2 00342 0 00344   
 02356 TXH +3 00000 0 00540                                                                                             
                 E'L                                                                221  LM00233
                 EOFSW=0B                                                           222  LM00234
 02357 CLA +0 50000 0 00470    02360 STO +0 60100 0 00167                                                               
      LOOP       N=READF.(IN(IN),360,777K,EOF)                                      223  LM00235
 02361 CLA +0 50000 0 00217    02362 SUB +0 40200 0 02363    02363 TXH +3 00000 0 00217    02364 STA +0 62100 0 02366   
 02365 TSX +0 07400 4 00030    02366 TXH +3 00000 0 00000    02367 TXH +3 00000 0 00517    02370 TXH +3 00000 0 00520   
 02371 TXH +3 00000 0 00063    02372 STO +0 60100 0 00304                                                               
                 T'H CHARL, FOR I=1,1,I.G.N                                         224  LM00236
 02373 CLA +0 50000 0 00471    02374 STO +0 60100 0 00220    02375 TRA +0 02000 0 02401    02376 CLA +0 50000 0 00220   
 02377 ADD +0 40000 0 00471    02400 STO +0 60100 0 00220    02401 CLA +0 50000 0 00220    02402 SUB +0 40200 0 00304   
 02403 TZE +0 10000 0 02405    02404 TPL +0 12000 0 03451                                                               
                 CHAR=IN(IN+I).A.177K                                               225  LM00237
 02405 CLA +0 50000 0 00217    02406 ADD +0 40000 0 00220    02407 PAX +0 73400 1 00000    02410 CAL -0 50000 1 00217   
 02411 ANA -0 32000 0 00515    02412 SLW +0 60200 0 00142                                                               
                 W'R MODE.E.9, CHAR=ASCTSS.(CHAR)                                   226  LM00238
 02413 CLA +0 50000 0 00270    02414 SUB +0 40200 0 00500    02415 TNZ -0 10000 0 02421    02416 TSX +0 07400 4 00000   
 02417 TXH +3 00000 0 00142    02420 STO +0 60100 0 00142                                                               
                 W'R CHAR.E.57K, T'O CHARL                                          227  LM00239
 02421 CLA +0 50000 0 00142    02422 SUB +0 40200 0 00511    02423 TNZ -0 10000 0 02425    02424 TRA +0 02000 0 00057   
                 PTF=1B                                                             228  LM00240
 02425 CLA +0 50000 0 00471    02426 STO +0 60100 0 00346                                                               
                 CKP=1B                                                             229  LM00241
 02427 CLA +0 50000 0 00471    02430 STO +0 60100 0 00145                                                               
                 W'R CCN                                                            230  LM00242
 02431 NZT -0 52000 0 00137    02432 TRA +0 02000 0 02554                                                               
                   CCN=0B                                                           231  LM00243
 02433 CLA +0 50000 0 00470    02434 STO +0 60100 0 00137                                                               
      L2           T'H L2, FOR J=0,1,J.G.NPCC.OR.CHAR.E.PCCL(J)                     232  LM00244
 02435 CLA +0 50000 0 00470    02436 STO +0 60100 0 00223    02437 TRA +0 02000 0 02443    02440 CLA +0 50000 0 00223   
 02441 ADD +0 40000 0 00471    02442 STO +0 60100 0 00223    02443 LXA +0 53400 2 00223    02444 CLA +0 50000 0 00142   
 02445 SUB +0 40200 2 00325    02446 TZE +0 10000 0 02454    02447 CLA +0 50000 0 00223    02450 SUB +0 40200 0 00303   
 02451 TZE +0 10000 0 02453    02452 TPL +0 12000 0 02454    02453 TRA +0 02000 0 02440                                 
                   W'R J.G.NPCC, T'O CKHDR                                          233  LM00245
 02454 CLA +0 50000 0 00223    02455 SUB +0 40200 0 00303    02456 TZE +0 10000 0 02461    02457 TMI -0 12000 0 02461   
 02460 TRA +0 02000 0 00060                                                                                             
                   PTF=0B                                                           234  LM00246
 02461 CLA +0 50000 0 00470    02462 STO +0 60100 0 00346                                                               
                   T'O PCCP(J)                                                      235  LM00247
 02463 LXA +0 53400 2 00223    02464 TRA +0 02000 2 00107                                                               
      PCCP(1)                                                                       236  LM00250
      PCCP(5)                                                                       237  LM00251
      PCCP(6)                                                                       238  LM00252
      PCCP(7)                                                                       239  LM00253
      PCCP(8)      W'R BY.E.BY/PGL*PGL, T'O CKHDR                                   240  LM00254
 02465 LDQ +0 56000 0 00136    02466 PXD -0 75400 0 00000    02467 LLS +0 76300 0 00000    02470 DVP +0 22100 0 00341   
 02471 MPY +0 20000 0 00341    02472 XCA +0 13100 0 00000    02473 CHS +0 76000 0 00002    02474 ADD +0 40000 0 00136   
 02475 TNZ -0 10000 0 02477    02476 TRA +0 02000 0 00060                                                               
                   X=((BY-BY/PGL*PGL)/D(J)+1)*D(J)                                  241  LM00255
 02477 LDQ +0 56000 0 00136    02500 PXD -0 75400 0 00000    02501 LLS +0 76300 0 00000    02502 DVP +0 22100 0 00341   
 02503 MPY +0 20000 0 00341    02504 XCA +0 13100 0 00000    02505 CHS +0 76000 0 00002    02506 ADD +0 40000 0 00136   
 02507 LXA +0 53400 2 00223    02510 LRS +0 76500 0 00043    02511 DVP +0 22100 2 00165    02512 XCA +0 13100 0 00000   
 02513 ADD +0 40000 0 00471    02514 XCA +0 13100 0 00000    02515 MPY +0 20000 2 00165    02516 STQ -0 60000 0 00467   
                   W'R X.G.PGL, X=PGL                                               242  LM00256
 02517 CLA +0 50000 0 00467    02520 SUB +0 40200 0 00341    02521 TZE +0 10000 0 02525    02522 TMI -0 12000 0 02525   
 02523 CLA +0 50000 0 00341    02524 STO +0 60100 0 00467                                                               
                   BY=BY/PGL*PGL+X+2                                                243  LM00257
 02525 LDQ +0 56000 0 00136    02526 PXD -0 75400 0 00000    02527 LLS +0 76300 0 00000    02530 DVP +0 22100 0 00341   
 02531 MPY +0 20000 0 00341    02532 XCA +0 13100 0 00000    02533 ADD +0 40000 0 00467    02534 ADD +0 40000 0 00472   
 02535 STO +0 60100 0 00136                                                                                             
                   T'O CKHDR                                                        244  LM00258
 02536 TRA +0 02000 0 00060                                                                                             
      PCCP(0)                                                                       245  LM00261
      PCCP(2)                                                                       246  LM00262
      PCCP(3)      BY=BY+D(J)                                                       247  LM00263
 02537 LXA +0 53400 2 00223    02540 CLA +0 50000 0 00136    02541 ADD +0 40000 2 00165    02542 STO +0 60100 0 00136   
                   T'O CKHDR                                                        248  LM00264
 02543 TRA +0 02000 0 00060                                                                                             
      PCCP(4)                                                                       249  LM00267
      PCCP(9)                                                                       250  LM00268
      PCCP(10)                                                                      251  LM00269
      PCCP(11)     BY=BY+D(J)                                                       252  LM00270
 02544 LXA +0 53400 2 00223    02545 CLA +0 50000 0 00136    02546 ADD +0 40000 2 00165    02547 STO +0 60100 0 00136   
                   CKP=0B                                                           253  LM00271
 02550 CLA +0 50000 0 00470    02551 STO +0 60100 0 00145                                                               
                   T'O CKHDR                                                        254  LM00272
 02552 TRA +0 02000 0 00060                                                                                             
                 O'R CCX.OR..NOT.(CC.OR.PS)                                         255  LM00274
 02553 TRA +0 02000 0 02775    02554 ZET +0 52000 0 00345    02555 TRA +0 02000 0 02560    02556 NZT -0 52000 0 00140   
 02557 TRA +0 02000 0 02562    02560 NZT -0 52000 0 00141    02561 TRA +0 02000 0 02775                                 
                   CKP=CCX                                                          256  LM00275
 02562 CLA +0 50000 0 00141    02563 STO +0 60100 0 00145                                                               
      CKHDR        CCX=0B                                                           257  LM00276
 02564 CLA +0 50000 0 00470    02565 STO +0 60100 0 00141                                                               
                   W'R AY/PGL.NE.(BY+2)/PGL.AND.HDRSW                               258  LM00277
 02566 NZT -0 52000 0 00214    02567 TRA +0 02000 0 02735    02570 CLA +0 50000 0 00136    02571 ADD +0 40000 0 00472   
 02572 LRS +0 76500 0 00043    02573 DVP +0 22100 0 00341    02574 STQ -0 60000 0 04421    02575 LDQ +0 56000 0 00132   
 02576 PXD -0 75400 0 00000    02577 LLS +0 76300 0 00000    02600 DVP +0 22100 0 00341    02601 XCA +0 13100 0 00000   
 02602 SUB +0 40200 0 04421    02603 TZE +0 10000 0 02735                                                               
                     BY=BY+4                                                        259  LM00278
 02604 CLA +0 50000 0 00136    02605 ADD +0 40000 0 00474    02606 STO +0 60100 0 00136                                 
                     AY=AY+1                                                        260  LM00279
 02607 CLA +0 50000 0 00132    02610 ADD +0 40000 0 00471    02611 STO +0 60100 0 00132                                 
                     AX=1                                                           261  LM00280
 02612 CLA +0 50000 0 00471    02613 STO +0 60100 0 00131                                                               
                     PTCHAR.(SP(0))                                                 262  LM00281
 02614 TSX +0 07400 4 00045    02615 TXH +3 00000 0 00356                                                               
                     W'R TLF.G.0                                                    263  LM00282
 02616 CLA +0 50000 0 00434    02617 SUB +0 40200 0 00470    02620 TZE +0 10000 0 02625    02621 TMI -0 12000 0 02625   
                       CHR=SP(0)                                                    264  LM00283
 02622 CLA +0 50000 0 00356    02623 STO +0 60100 0 00143                                                               
                     O'E                                                            265  LM00284
 02624 TRA +0 02000 0 02627                                                                                             
                       CHR=SP(1)                                                    266  LM00285
 02625 CLA +0 50000 0 00355    02626 STO +0 60100 0 00143                                                               
                     E'L                                                            267  LM00286
      SK1            X=AY-AY/PGL*PGL                                                268  LM00287
 02627 LDQ +0 56000 0 00132    02630 PXD -0 75400 0 00000    02631 LLS +0 76300 0 00000    02632 DVP +0 22100 0 00341   
 02633 MPY +0 20000 0 00341    02634 XCA +0 13100 0 00000    02635 CHS +0 76000 0 00002    02636 ADD +0 40000 0 00132   
 02637 STO +0 60100 0 00467                                                                                             
                     W'R X.NE.0, X=PGL-X                                            269  LM00288
 02640 CLA +0 50000 0 00467    02641 SUB +0 40200 0 00470    02642 TZE +0 10000 0 02646    02643 CLA +0 50000 0 00341   
 02644 SUB +0 40200 0 00467    02645 STO +0 60100 0 00467                                                               
                     AY=AY+X                                                        270  LM00289
 02646 CLA +0 50000 0 00132    02647 ADD +0 40000 0 00467    02650 STO +0 60100 0 00132                                 
                     T'H SK2, FOR X=X,-1,X.E.0                                      271  LM00290
 02651 CLA +0 50000 0 00467    02652 STO +0 60100 0 00467    02653 TRA +0 02000 0 02657    02654 CLS +0 50200 0 00471   
 02655 ADD +0 40000 0 00467    02656 STO +0 60100 0 00467    02657 CLA +0 50000 0 00467    02660 SUB +0 40200 0 00470   
 02661 TZE +0 10000 0 02665                                                                                             
      SK2            PTCHAR.(CHR)                                                   272  LM00291
 02662 TSX +0 07400 4 00045    02663 TXH +3 00000 0 00143    02664 TRA +0 02000 0 02654                                 
                     PAGENO=PAGENO+1                                                273  LM00292
 02665 CLA +0 50000 0 00311    02666 ADD +0 40000 0 00471    02667 STO +0 60100 0 00311                                 
                     PGN(1)=BZ57.(DEFBC.(PAGENO))                                   274  LM00293
 02670 TSX +0 07400 4 00010    02671 TXH +3 00000 0 00311    02672 STO +0 60100 0 04421    02673 TSX +0 07400 4 00002   
 02674 TXH +3 00000 0 04421    02675 STO +0 60100 0 00343                                                               
                     PRFULA.($'*'*'X$,FN,$ 'X'8$,FN1,DATE...2,TIME,PGN...PGNO,      275  LM00294
                1      $'*'*'9$)                                                    275  LM00295
 02676 TSX +0 07400 4 00023    02677 TXH +3 00000 0 00541    02700 TXH +3 00000 0 00213    02701 TXH +3 00000 0 00606   
 02702 TXH +3 00000 0 00210    02703 TIX +2 00472 0 00150    02704 TXH +3 00000 0 00420    02705 TIX +2 00342 0 00344   
 02706 TXH +3 00000 0 00540                                                                                             
                     AY=AY+4                                                        276  LM00296
 02707 CLA +0 50000 0 00132    02710 ADD +0 40000 0 00474    02711 STO +0 60100 0 00132                                 
                     W'R BY.L.AY, BY=AY                                             277  LM00297
 02712 CLA +0 50000 0 00136    02713 SUB +0 40200 0 00132    02714 TZE +0 10000 0 02720    02715 TPL +0 12000 0 02720   
 02716 CLA +0 50000 0 00132    02717 STO +0 60100 0 00136                                                               
                     W'R AY/PGL.NE.(BY+2)/PGL, T'O SK1                              278  LM00298
 02720 CLA +0 50000 0 00136    02721 ADD +0 40000 0 00472    02722 LRS +0 76500 0 00043    02723 DVP +0 22100 0 00341   
 02724 STQ -0 60000 0 04421    02725 LDQ +0 56000 0 00132    02726 PXD -0 75400 0 00000    02727 LLS +0 76300 0 00000   
 02730 DVP +0 22100 0 00341    02731 XCA +0 13100 0 00000    02732 SUB +0 40200 0 04421    02733 TZE +0 10000 0 02735   
 02734 TRA +0 02000 0 00113                                                                                             
                   E'L                                                              279  LM00299
                   W'R CKP                                                          280  LM00301
 02735 NZT -0 52000 0 00145    02736 TRA +0 02000 0 02772                                                               
                     MOD=BY-(BY/PGL)*PGL                                            281  LM00302
 02737 LDQ +0 56000 0 00136    02740 PXD -0 75400 0 00000    02741 LLS +0 76300 0 00000    02742 DVP +0 22100 0 00341   
 02743 MPY +0 20000 0 00341    02744 XCA +0 13100 0 00000    02745 CHS +0 76000 0 00002    02746 ADD +0 40000 0 00136   
 02747 STO +0 60100 0 00271                                                                                             
                     W'R MOD.G.PGL-3.OR.MOD.L.2                                     282  LM00303
 02750 CLA +0 50000 0 00271    02751 SUB +0 40200 0 00472    02752 TZE +0 10000 0 02754    02753 TMI -0 12000 0 02762   
 02754 CLA +0 50000 0 00341    02755 SUB +0 40200 0 00473    02756 CHS +0 76000 0 00002    02757 ADD +0 40000 0 00271   
 02760 TZE +0 10000 0 02772    02761 TMI -0 12000 0 02772                                                               
                       BY=((BY+3)/PGL)*PGL+2                                        283  LM00304
 02762 CLA +0 50000 0 00136    02763 ADD +0 40000 0 00473    02764 LRS +0 76500 0 00043    02765 DVP +0 22100 0 00341   
 02766 MPY +0 20000 0 00341    02767 XCA +0 13100 0 00000    02770 ADD +0 40000 0 00472    02771 STO +0 60100 0 00136   
                     E'L                                                            284  LM00305
                   E'L                                                              285  LM00306
                   W'R .NOT.PTF, T'O CHARL                                          286  LM00307
 02772 ZET +0 52000 0 00346    02773 TRA +0 02000 0 02775    02774 TRA +0 02000 0 00057                                 
                 E'L                                                                287  LM00308
      L1         T'H L1, FOR J=0,1,J.G.NSPC .OR. CHAR.E.SP(J)                       288  LM00310
 02775 CLA +0 50000 0 00470    02776 STO +0 60100 0 00223    02777 TRA +0 02000 0 03003    03000 CLA +0 50000 0 00223   
 03001 ADD +0 40000 0 00471    03002 STO +0 60100 0 00223    03003 LXA +0 53400 2 00223    03004 CLA +0 50000 0 00142   
 03005 SUB +0 40200 2 00356    03006 TZE +0 10000 0 03014    03007 CLA +0 50000 0 00223    03010 SUB +0 40200 0 00305   
 03011 TZE +0 10000 0 03013    03012 TPL +0 12000 0 03014    03013 TRA +0 02000 0 03000                                 
                 W'R J.LE.NSPC                                                      289  LM00311
 03014 CLA +0 50000 0 00223    03015 SUB +0 40200 0 00305    03016 TZE +0 10000 0 03020    03017 TPL +0 12000 0 03116   
                   T'O SPP(J)                                                       290  LM00312
 03020 LXA +0 53400 2 00223    03021 TRA +0 02000 2 00122                                                               
      SPP(0)       BX=1                                                             291  LM00314
 03022 CLA +0 50000 0 00471    03023 STO +0 60100 0 00135                                                               
                   BY=BY+1                                                          292  LM00315
 03024 CLA +0 50000 0 00136    03025 ADD +0 40000 0 00471    03026 STO +0 60100 0 00136                                 
                   CCN=CC                                                           293  LM00316
 03027 CLA +0 50000 0 00140    03030 STO +0 60100 0 00137                                                               
                   CCX=CC.OR.PS                                                     294  LM00317
 03031 ZET +0 52000 0 00345    03032 TRA +0 02000 0 03037    03033 ZET +0 52000 0 00140    03034 TRA +0 02000 0 03037   
 03035 PXD -0 75400 0 00000    03036 TRA +0 02000 0 03040    03037 CLA +0 50000 0 00471    03040 STO +0 60100 0 00141   
                   T'O CHARL                                                        295  LM00318
 03041 TRA +0 02000 0 00057                                                                                             
      SPP(1)       BY=BY+1                                                          296  LM00320
 03042 CLA +0 50000 0 00136    03043 ADD +0 40000 0 00471    03044 STO +0 60100 0 00136                                 
                   CCX=CC.OR.PS                                                     297  LM00321
 03045 ZET +0 52000 0 00345    03046 TRA +0 02000 0 03053    03047 ZET +0 52000 0 00140    03050 TRA +0 02000 0 03053   
 03051 PXD -0 75400 0 00000    03052 TRA +0 02000 0 03054    03053 CLA +0 50000 0 00471    03054 STO +0 60100 0 00141   
                   T'O CHARL                                                        298  LM00322
 03055 TRA +0 02000 0 00057                                                                                             
      SPP(2)       C'E                                                              299  LM00324
      TL1          T'H TL1, FOR TI=1,1,ITABS(ITABS+TI).G.BX                         300  LM00325
 03056 CLA +0 50000 0 00471    03057 STO +0 60100 0 00421    03060 TRA +0 02000 0 03064    03061 CLA +0 50000 0 00421   
 03062 ADD +0 40000 0 00471    03063 STO +0 60100 0 00421    03064 CLA +0 50000 0 00221    03065 ADD +0 40000 0 00421   
 03066 PAX +0 73400 1 00000    03067 CLA +0 50000 1 00221    03070 SUB +0 40200 0 00135    03071 TZE +0 10000 0 03073   
 03072 TPL +0 12000 0 03074    03073 TRA +0 02000 0 03061                                                               
                   BX=ITABS(ITABS+TI)                                               301  LM00326
 03074 CLA +0 50000 0 00221    03075 ADD +0 40000 0 00421    03076 PAX +0 73400 2 00000    03077 CLA +0 50000 2 00221   
 03100 STO +0 60100 0 00135                                                                                             
                   T'O CHARL                                                        302  LM00327
 03101 TRA +0 02000 0 00057                                                                                             
      SPP(3)       BX=BX+1                                                          303  LM00329
 03102 CLA +0 50000 0 00135    03103 ADD +0 40000 0 00471    03104 STO +0 60100 0 00135                                 
                   T'O CHARL                                                        304  LM00330
 03105 TRA +0 02000 0 00057                                                                                             
      SPP(4)       BX=BX-1                                                          305  LM00332
 03106 CLA +0 50000 0 00135    03107 SUB +0 40200 0 00471    03110 STO +0 60100 0 00135                                 
                   T'O CHARL                                                        306  LM00333
 03111 TRA +0 02000 0 00057                                                                                             
      SPP(5)       BX=1                                                             307  LM00335
 03112 CLA +0 50000 0 00471    03113 STO +0 60100 0 00135                                                               
                   T'O CHARL                                                        308  LM00336
 03114 TRA +0 02000 0 00057                                                                                             
                 O'E                                                                309  LM00338
 03115 TRA +0 02000 0 03450                                                                                             
      FILOUT       W'R CHAR.E.MADBS.AND.BX.E.12.AND.MADSW                           310  LM00339
 03116 NZT -0 52000 0 00246    03117 TRA +0 02000 0 03131    03120 CLA +0 50000 0 00135    03121 SUB +0 40200 0 00503   
 03122 TNZ -0 10000 0 03131    03123 CLA +0 50000 0 00142    03124 SUB +0 40200 0 00245    03125 TNZ -0 10000 0 03131   
                     BX=11                                                          311  LM00340
 03126 CLA +0 50000 0 00502    03127 STO +0 60100 0 00135                                                               
                     T'O CHARL                                                      312  LM00341
 03130 TRA +0 02000 0 00057                                                                                             
                   E'L                                                              313  LM00342
      L3           T'H L3, FOR J=0,1,J.G.NNOSP.OR.CHAR.E.NOSP(J)                    314  LM00343
 03131 CLA +0 50000 0 00470    03132 STO +0 60100 0 00223    03133 TRA +0 02000 0 03137    03134 CLA +0 50000 0 00223   
 03135 ADD +0 40000 0 00471    03136 STO +0 60100 0 00223    03137 LXA +0 53400 2 00223    03140 CLA +0 50000 0 00142   
 03141 SUB +0 40200 2 00301    03142 TZE +0 10000 0 03150    03143 CLA +0 50000 0 00223    03144 SUB +0 40200 0 00276   
 03145 TZE +0 10000 0 03147    03146 TPL +0 12000 0 03150    03147 TRA +0 02000 0 03134                                 
                   W'R J.LE.NNOSP                                                   315  LM00344
 03150 CLA +0 50000 0 00223    03151 SUB +0 40200 0 00276    03152 TZE +0 10000 0 03154    03153 TPL +0 12000 0 03157   
                     PTCHAR.(CHAR)                                                  316  LM00345
 03154 TSX +0 07400 4 00045    03155 TXH +3 00000 0 00142                                                               
                     T'O CHARL                                                      317  LM00346
 03156 TRA +0 02000 0 00057                                                                                             
                   E'L                                                              318  LM00347
                   W'R BX.G.LL                                                      319  LM00348
 03157 CLA +0 50000 0 00135    03160 SUB +0 40200 0 00237    03161 TZE +0 10000 0 03174    03162 TMI -0 12000 0 03174   
                     W'R WR                                                         320  LM00349
 03163 NZT -0 52000 0 00466    03164 TRA +0 02000 0 03173                                                               
                       BX=1                                                         321  LM00350
 03165 CLA +0 50000 0 00471    03166 STO +0 60100 0 00135                                                               
                       BY=BY+1                                                      322  LM00351
 03167 CLA +0 50000 0 00136    03170 ADD +0 40000 0 00471    03171 STO +0 60100 0 00136                                 
                     O'E                                                            323  LM00352
 03172 TRA +0 02000 0 03174                                                                                             
                       T'O NOPT                                                     324  LM00353
 03173 TRA +0 02000 0 00073                                                                                             
                     E'L                                                            325  LM00354
                   E'L                                                              326  LM00355
                   W'R AX.E.BX.AND.AY.E.BY, T'O PCHAR                               327  LM00356
 03174 CLA +0 50000 0 00132    03175 SUB +0 40200 0 00136    03176 TNZ -0 10000 0 03203    03177 CLA +0 50000 0 00131   
 03200 SUB +0 40200 0 00135    03201 TNZ -0 10000 0 03203    03202 TRA +0 02000 0 00110                                 
                   W'R BY.E.AY.AND.BX.E.AX+1                                        328  LM00357
 03203 CLA +0 50000 0 00131    03204 ADD +0 40000 0 00471    03205 CHS +0 76000 0 00002    03206 ADD +0 40000 0 00135   
 03207 TNZ -0 10000 0 03217    03210 CLA +0 50000 0 00136    03211 SUB +0 40200 0 00132    03212 TNZ -0 10000 0 03217   
                     PTCHAR.(SP(3))                                                 329  LM00358
 03213 TSX +0 07400 4 00045    03214 TXH +3 00000 0 00353                                                               
                     T'O PCHAR                                                      330  LM00359
 03215 TRA +0 02000 0 00110                                                                                             
                   O'R BX.E.1.AND.BY.E.AY+1                                         331  LM00360
 03216 TRA +0 02000 0 03232    03217 CLA +0 50000 0 00132    03220 ADD +0 40000 0 00471    03221 CHS +0 76000 0 00002   
 03222 ADD +0 40000 0 00136    03223 TNZ -0 10000 0 03232    03224 CLA +0 50000 0 00135    03225 SUB +0 40200 0 00471   
 03226 TNZ -0 10000 0 03232                                                                                             
                     PTCHAR.(SP(0))                                                 332  LM00361
 03227 TSX +0 07400 4 00045    03230 TXH +3 00000 0 00356                                                               
                     T'O PCHAR                                                      333  LM00362
 03231 TRA +0 02000 0 00110                                                                                             
                   E'L                                                              334  LM00363
                 T'H RL, FOR J=0,1,J.G.NSPC                                         335  LM00365
 03232 CLA +0 50000 0 00470    03233 STO +0 60100 0 00223    03234 TRA +0 02000 0 03240    03235 CLA +0 50000 0 00223   
 03236 ADD +0 40000 0 00471    03237 STO +0 60100 0 00223    03240 CLA +0 50000 0 00223    03241 SUB +0 40200 0 00305   
 03242 TZE +0 10000 0 03244    03243 TPL +0 12000 0 03250                                                               
      RL         NC(J)=0                                                            336  LM00366
 03244 LXA +0 53400 1 00223    03245 CLA +0 50000 0 00470    03246 STO +0 60100 1 00054    03247 TRA +0 02000 0 03235   
                 W'R BY.G.AY .AND. TLF.G.0                                          337  LM00367
 03250 CLA +0 50000 0 00434    03251 SUB +0 40200 0 00470    03252 TZE +0 10000 0 03267    03253 TMI -0 12000 0 03267   
 03254 CLA +0 50000 0 00136    03255 SUB +0 40200 0 00132    03256 TZE +0 10000 0 03267    03257 TMI -0 12000 0 03267   
                   NCR=1                                                            338  LM00368
 03260 CLA +0 50000 0 00471    03261 STO +0 60100 0 00054                                                               
                   AX=1                                                             339  LM00369
 03262 CLA +0 50000 0 00471    03263 STO +0 60100 0 00131                                                               
                   AY=AY+1                                                          340  LM00370
 03264 CLA +0 50000 0 00132    03265 ADD +0 40000 0 00471    03266 STO +0 60100 0 00132                                 
                 E'L                                                                341  LM00371
                 W'R AX.L.BX                                                        342  LM00372
 03267 CLA +0 50000 0 00131    03270 SUB +0 40200 0 00135    03271 TZE +0 10000 0 03277    03272 TPL +0 12000 0 03277   
                   HORZ.(AX,BX)                                                     343  LM00373
 03273 TSX +0 07400 4 00044    03274 TXH +3 00000 0 00131    03275 TXH +3 00000 0 00135                                 
                 O'E                                                                344  LM00374
 03276 TRA +0 02000 0 03357                                                                                             
                   W'R TCR*AX+HORZ.(1,BX).L.(AX-BX)*TBS.AND.                        345  LM00375
                1    (BY.G.AY.OR.TCRLF.E.0)                                         345  LM00376
 03277 CLA +0 50000 0 00404    03300 SUB +0 40200 0 00470    03301 TZE +0 10000 0 03306    03302 CLA +0 50000 0 00136   
 03303 SUB +0 40200 0 00132    03304 TZE +0 10000 0 03350    03305 TMI -0 12000 0 03350    03306 CLA +0 50000 0 00131   
 03307 SUB +0 40200 0 00135    03310 XCA +0 13100 0 00000    03311 MPY +0 20000 0 00371    03312 STQ -0 60000 0 04421   
 03313 TSX +0 07400 4 00044    03314 TXH +3 00000 0 00471    03315 TXH +3 00000 0 00135    03316 STO +0 60100 0 04420   
 03317 LDQ +0 56000 0 00417    03320 MPY +0 20000 0 00131    03321 XCA +0 13100 0 00000    03322 ADD +0 40000 0 04420   
 03323 SUB +0 40200 0 04421    03324 TZE +0 10000 0 03350    03325 TPL +0 12000 0 03350                                 
                     W'R BY.G.AY                                                    346  LM00377
 03326 CLA +0 50000 0 00136    03327 SUB +0 40200 0 00132    03330 TZE +0 10000 0 03343    03331 TMI -0 12000 0 03343   
                       NCR=NCR+1                                                    347  LM00378
 03332 CLA +0 50000 0 00054    03333 ADD +0 40000 0 00471    03334 STO +0 60100 0 00054                                 
                       AY=AY+1                                                      348  LM00379
 03335 CLA +0 50000 0 00132    03336 ADD +0 40000 0 00471    03337 STO +0 60100 0 00132                                 
                       AX=1                                                         349  LM00380
 03340 CLA +0 50000 0 00471    03341 STO +0 60100 0 00131                                                               
                     O'E                                                            350  LM00381
 03342 TRA +0 02000 0 03347                                                                                             
                       NCRLF=1                                                      351  LM00382
 03343 CLA +0 50000 0 00471    03344 STO +0 60100 0 00047                                                               
                       AX=1                                                         352  LM00383
 03345 CLA +0 50000 0 00471    03346 STO +0 60100 0 00131                                                               
                     E'L                                                            353  LM00384
                   O'E                                                              354  LM00385
 03347 TRA +0 02000 0 03357                                                                                             
                     NBS=AX-BX                                                      355  LM00386
 03350 CLA +0 50000 0 00131    03351 SUB +0 40200 0 00135    03352 STO +0 60100 0 00050                                 
                     NSP=0                                                          356  LM00387
 03353 CLA +0 50000 0 00470    03354 STO +0 60100 0 00051                                                               
                     NTAB=0                                                         357  LM00388
 03355 CLA +0 50000 0 00470    03356 STO +0 60100 0 00052                                                               
                   E'L                                                              358  LM00389
                 E'L                                                                359  LM00390
                 W'R TLF.G.0                                                        360  LM00391
 03357 CLA +0 50000 0 00434    03360 SUB +0 40200 0 00470    03361 TZE +0 10000 0 03370    03362 TMI -0 12000 0 03370   
                   NCR=NCR+BY-AY                                                    361  LM00392
 03363 CLA +0 50000 0 00054    03364 ADD +0 40000 0 00136    03365 SUB +0 40200 0 00132    03366 STO +0 60100 0 00054   
                 O'E                                                                362  LM00393
 03367 TRA +0 02000 0 03374                                                                                             
                   NLF=NLF+BY-AY                                                    363  LM00394
 03370 CLA +0 50000 0 00053    03371 ADD +0 40000 0 00136    03372 SUB +0 40200 0 00132    03373 STO +0 60100 0 00053   
                 E'L                                                                364  LM00395
                 T'H FILL, FOR J=0,1,J.G.NSPC                                       365  LM00396
 03374 CLA +0 50000 0 00470    03375 STO +0 60100 0 00223    03376 TRA +0 02000 0 03402    03377 CLA +0 50000 0 00223   
 03400 ADD +0 40000 0 00471    03401 STO +0 60100 0 00223    03402 CLA +0 50000 0 00223    03403 SUB +0 40200 0 00305   
 03404 TZE +0 10000 0 03406    03405 TPL +0 12000 0 03431                                                               
                 T'H FILL1, FOR L=1,1,L.G.NC(J)                                     366  LM00397
 03406 CLA +0 50000 0 00471    03407 STO +0 60100 0 00243    03410 TRA +0 02000 0 03414    03411 CLA +0 50000 0 00243   
 03412 ADD +0 40000 0 00471    03413 STO +0 60100 0 00243    03414 LXA +0 53400 2 00223    03415 CLA +0 50000 0 00243   
 03416 SUB +0 40200 2 00054    03417 TZE +0 10000 0 03421    03420 TPL +0 12000 0 03430                                 
                 PTCHAR.(SP(J))                                                     367  LM00398
 03421 CLA +0 50000 0 00223    03422 SUB +0 40200 0 03423    03423 TXH +3 00000 0 00356    03424 STA +0 62100 0 03426   
 03425 TSX +0 07400 4 00045    03426 TXH +3 00000 0 00000                                                               
      FILL1      C'E                                                                368  LM00399
 03427 TRA +0 02000 0 03411                                                                                             
      FILL       C'E                                                                369  LM00400
 03430 TRA +0 02000 0 03377                                                                                             
      PCHAR      W'R EOFSW, T'O DONE                                                370  LM00401
 03431 NZT -0 52000 0 00167    03432 TRA +0 02000 0 03434    03433 TRA +0 02000 0 00061                                 
                 AX=BX                                                              371  LM00402
 03434 CLA +0 50000 0 00135    03435 STO +0 60100 0 00131                                                               
                 AY=BY                                                              372  LM00403
 03436 CLA +0 50000 0 00136    03437 STO +0 60100 0 00132                                                               
                 PTCHAR.(CHAR)                                                      373  LM00404
 03440 TSX +0 07400 4 00045    03441 TXH +3 00000 0 00142                                                               
                 AX=AX+1                                                            374  LM00405
 03442 CLA +0 50000 0 00131    03443 ADD +0 40000 0 00471    03444 STO +0 60100 0 00131                                 
      NOPT       BX=BX+1                                                            375  LM00406
 03445 CLA +0 50000 0 00135    03446 ADD +0 40000 0 00471    03447 STO +0 60100 0 00135                                 
                 E'L                                                                376  LM00407
      CHARL      C'E                                                                377  LM00408
 03450 TRA +0 02000 0 02376                                                                                             
                 T'O LOOP                                                           378  LM00409
 03451 TRA +0 02000 0 00071                                                                                             
      DONE       W'R K.NE.0                                                         379  LM00410
 03452 CLA +0 50000 0 00224    03453 SUB +0 40200 0 00470    03454 TZE +0 10000 0 03505                                 
                   W'R FILESW                                                       380  LM00411
 03455 NZT -0 52000 0 00207    03456 TRA +0 02000 0 03473                                                               
                     WTA.(OUT(OUT),K-1)                                             381  LM00412
 03457 CLA +0 50000 0 00224    03460 SUB +0 40200 0 00471    03461 STO +0 60100 0 04421    03462 CLA +0 50000 0 00310   
 03463 SUB +0 40200 0 03464    03464 TXH +3 00000 0 00310    03465 STA +0 62100 0 03467    03466 TSX +0 07400 4 00040   
 03467 TXH +3 00000 0 00000    03470 TXH +3 00000 0 04421                                                               
                     CLOSEW.                                                        382  LM00413
 03471 TSX +0 07400 4 00006                                                                                             
                   O'E                                                              383  LM00414
 03472 TRA +0 02000 0 03505                                                                                             
                     PNTLIN.(OUT(OUT),K-1)                                          384  LM00415
 03473 CLA +0 50000 0 00224    03474 SUB +0 40200 0 00471    03475 STO +0 60100 0 04421    03476 CLA +0 50000 0 00310   
 03477 SUB +0 40200 0 03500    03500 TXH +3 00000 0 00310    03501 STA +0 62100 0 03503    03502 TSX +0 07400 4 00022   
 03503 TXH +3 00000 0 00000    03504 TXH +3 00000 0 04421                                                               
                   E'L                                                              385  LM00416
                 E'L                                                                386  LM00417
      BRKOUT     CLOSEF.                                                            387  LM00418
 03505 TSX +0 07400 4 00005                                                                                             
      EGRETS     SETBCD.(0)                                                         388  LM00419
 03506 TSX +0 07400 4 00032    03507 TXH +3 00000 0 00470                                                               
                 CHNCOM.(0)                                                         389  LM00420
 03510 TSX +0 07400 4 00004    03511 TXH +3 00000 0 00470                                                               
      EOF        EOFSW=1B                                                           390  LM00422
 03512 CLA +0 50000 0 00471    03513 STO +0 60100 0 00167                                                               
                 W'R CC                                                             391  LM00423
 03514 NZT -0 52000 0 00140    03515 TRA +0 02000 0 03543                                                               
                   W'R BY.NE.(BY/PGL)*PGL                                           392  LM00424
 03516 LDQ +0 56000 0 00136    03517 PXD -0 75400 0 00000    03520 LLS +0 76300 0 00000    03521 DVP +0 22100 0 00341   
 03522 MPY +0 20000 0 00341    03523 XCA +0 13100 0 00000    03524 CHS +0 76000 0 00002    03525 ADD +0 40000 0 00136   
 03526 TZE +0 10000 0 03542                                                                                             
                     BY=(BY/PGL+1)*PGL+1                                            393  LM00425
 03527 LDQ +0 56000 0 00136    03530 PXD -0 75400 0 00000    03531 LLS +0 76300 0 00000    03532 DVP +0 22100 0 00341   
 03533 XCA +0 13100 0 00000    03534 ADD +0 40000 0 00471    03535 XCA +0 13100 0 00000    03536 MPY +0 20000 0 00341   
 03537 XCA +0 13100 0 00000    03540 ADD +0 40000 0 00471    03541 STO +0 60100 0 00136                                 
                   E'L                                                              394  LM00426
                 O'E                                                                395  LM00427
 03542 TRA +0 02000 0 03550                                                                                             
                   BY=BY+2                                                          396  LM00428
 03543 CLA +0 50000 0 00136    03544 ADD +0 40000 0 00472    03545 STO +0 60100 0 00136                                 
                   BX=1                                                             397  LM00429
 03546 CLA +0 50000 0 00471    03547 STO +0 60100 0 00135                                                               
                 E'L                                                                398  LM00430
                 T'O FILOUT                                                         399  LM00431
 03550 TRA +0 02000 0 00065                                                                                             
                 INTERNAL FUNCTION (PTC)                                            400  LM00433
 03551 TRA +0 02000 0 03641                                                                                             
                 ENTRY TO PTCHAR.                                                   401  LM00434
 03552 TRA +0 02000 0 03555    00045 TTR +0 02100 0 03553    03553 SXA +0 63400 2 03626    03554 TSX +0 07400 2 03626   
                 W'R FILESW                                                         402  LM00435
 03555 NZT -0 52000 0 00207    03556 TRA +0 02000 0 03563                                                               
                   C=TSSASC.(PTC)                                                   403  LM00436
 03557 TSX +0 07400 4 00036    03560 TXH +3 00000 0 00024    03561 STO +0 60100 0 00146                                 
                 O'E                                                                404  LM00437
 03562 TRA +0 02000 0 03565                                                                                             
                   C=PTC                                                            405  LM00438
 03563 CLA +0 50000 0 00024    03564 STO +0 60100 0 00146                                                               
                 E'L                                                                406  LM00439
                 OUT(OUT+K)=C                                                       407  LM00440
 03565 CLA +0 50000 0 00310    03566 ADD +0 40000 0 00224    03567 PAX +0 73400 1 00000    03570 CLA +0 50000 0 00146   
 03571 STO +0 60100 1 00310                                                                                             
                 K=K+1                                                              408  LM00441
 03572 CLA +0 50000 0 00224    03573 ADD +0 40000 0 00471    03574 STO +0 60100 0 00224                                 
                 W'R K.G.84                                                         409  LM00442
 03575 CLA +0 50000 0 00224    03576 SUB +0 40200 0 00514    03577 TZE +0 10000 0 03624    03600 TMI -0 12000 0 03624   
                   W'R FILESW                                                       410  LM00443
 03601 NZT -0 52000 0 00207    03602 TRA +0 02000 0 03613                                                               
                     WTA.(OUT(OUT),84)                                              411  LM00444
 03603 CLA +0 50000 0 00310    03604 SUB +0 40200 0 03605    03605 TXH +3 00000 0 00310    03606 STA +0 62100 0 03610   
 03607 TSX +0 07400 4 00040    03610 TXH +3 00000 0 00000    03611 TXH +3 00000 0 00514                                 
                   O'E                                                              412  LM00445
 03612 TRA +0 02000 0 03622                                                                                             
                     PNTLIN.(OUT(OUT),84)                                           413  LM00446
 03613 CLA +0 50000 0 00310    03614 SUB +0 40200 0 03615    03615 TXH +3 00000 0 00310    03616 STA +0 62100 0 03620   
 03617 TSX +0 07400 4 00022    03620 TXH +3 00000 0 00000    03621 TXH +3 00000 0 00514                                 
                   E'L                                                              414  LM00447
                   K=1                                                              415  LM00448
 03622 CLA +0 50000 0 00471    03623 STO +0 60100 0 00224                                                               
                 E'L                                                                416  LM00449
                 F'N                                                                417  LM00450
 03624 TRA +0 02000 0 03635                                                                                             
                 END OF FUNCTION                                                    418  LM00451
 03625 TSX +0 07400 4 00012    03626 TXH +3 00000 0 00000    03627 SXD -0 63400 1 03626    03630 SXA +0 63400 4 03635   
 03631 CLA +0 50000 4 00001    03632 STO +0 60100 0 03560    03633 STA +0 62100 0 03563    03634 TRA +0 02000 2 00001   
 03635 AXT +0 77400 4 00000    03636 LXA +0 53400 2 03626    03637 LXD -0 53400 1 03626    03640 TRA +0 02000 4 00001   
                 INTERNAL FUNCTION (AA,BB)                                          419  LM00454
 03641 TRA +0 02000 0 04035                                                                                             
                 ENTRY TO HORZ.                                                     420  LM00455
 03642 TRA +0 02000 0 03645    00044 TTR +0 02100 0 03643    03643 SXA +0 63400 2 04020    03644 TSX +0 07400 2 04020   
                 A=AA                                                               421  LM00456
 03645 CLA +0 50000 0 00024    03646 STO +0 60100 0 00127                                                               
                 B=BB                                                               422  LM00457
 03647 CLA +0 50000 0 00024    03650 STO +0 60100 0 00133                                                               
      TL2        T'H TL2, FOR ATI=1,1,OTABS(OTABS+ATI).G.A                          423  LM00458
 03651 CLA +0 50000 0 00471    03652 STO +0 60100 0 00130    03653 TRA +0 02000 0 03657    03654 CLA +0 50000 0 00130   
 03655 ADD +0 40000 0 00471    03656 STO +0 60100 0 00130    03657 CLA +0 50000 0 00306    03660 ADD +0 40000 0 00130   
 03661 PAX +0 73400 1 00000    03662 CLA +0 50000 1 00306    03663 SUB +0 40200 0 00127    03664 TZE +0 10000 0 03666   
 03665 TPL +0 12000 0 03667    03666 TRA +0 02000 0 03654                                                               
      TL3        T'H TL3, FOR BTI=1,1,OTABS(OTABS+BTI).G.B                          424  LM00459
 03667 CLA +0 50000 0 00471    03670 STO +0 60100 0 00134    03671 TRA +0 02000 0 03675    03672 CLA +0 50000 0 00134   
 03673 ADD +0 40000 0 00471    03674 STO +0 60100 0 00134    03675 CLA +0 50000 0 00306    03676 ADD +0 40000 0 00134   
 03677 PAX +0 73400 1 00000    03700 CLA +0 50000 1 00306    03701 SUB +0 40200 0 00133    03702 TZE +0 10000 0 03704   
 03703 TPL +0 12000 0 03705    03704 TRA +0 02000 0 03672                                                               
                 NTAB=BTI-ATI                                                       425  LM00460
 03705 CLA +0 50000 0 00134    03706 SUB +0 40200 0 00130    03707 STO +0 60100 0 00052                                 
                 W'R NTAB.G.0                                                       426  LM00461
 03710 CLA +0 50000 0 00052    03711 SUB +0 40200 0 00470    03712 TZE +0 10000 0 03741    03713 TMI -0 12000 0 03741   
                   A1=OTABS(OTABS+BTI-1)                                            427  LM00462
 03714 CLA +0 50000 0 00306    03715 ADD +0 40000 0 00134    03716 SUB +0 40200 0 00471    03717 PAX +0 73400 2 00000   
 03720 CLA +0 50000 2 00306    03721 STO +0 60100 0 00123                                                               
                   T=(A1-A)*TTAB+NTAB*TSP                                           428  LM00463
 03722 LDQ +0 56000 0 00052    03723 MPY +0 20000 0 00452    03724 STQ -0 60000 0 04034    03725 CLA +0 50000 0 00123   
 03726 SUB +0 40200 0 00127    03727 XCA +0 13100 0 00000    03730 MPY +0 20000 0 00465    03731 XCA +0 13100 0 00000   
 03732 ADD +0 40000 0 04034    03733 STO +0 60100 0 00437                                                               
                   A=A1                                                             429  LM00464
 03734 CLA +0 50000 0 00123    03735 STO +0 60100 0 00127                                                               
                   ATI=BTI                                                          430  LM00465
 03736 CLA +0 50000 0 00134    03737 STO +0 60100 0 00130                                                               
                 O'E                                                                431  LM00466
 03740 TRA +0 02000 0 03743                                                                                             
                   T=0                                                              432  LM00467
 03741 CLA +0 50000 0 00470    03742 STO +0 60100 0 00437                                                               
                 E'L                                                                433  LM00468
                 NSP=B-A                                                            434  LM00469
 03743 CLA +0 50000 0 00133    03744 SUB +0 40200 0 00127    03745 STO +0 60100 0 00051                                 
                 LTAB=OTABS(OTABS+ATI)-A                                            435  LM00470
 03746 CLA +0 50000 0 00306    03747 ADD +0 40000 0 00130    03750 PAX +0 73400 1 00000    03751 CLA +0 50000 1 00306   
 03752 SUB +0 40200 0 00127    03753 STO +0 60100 0 00244                                                               
                 NBS=LTAB-NSP                                                       436  LM00471
 03754 CLA +0 50000 0 00244    03755 SUB +0 40200 0 00051    03756 STO +0 60100 0 00050                                 
                 TMSP=NSP*TSP                                                       437  LM00472
 03757 LDQ +0 56000 0 00051    03760 MPY +0 20000 0 00452    03761 STQ -0 60000 0 00436                                 
                 TMBS=TTAB*LTAB+TSP+TBS*NBS                                         438  LM00473
 03762 LDQ +0 56000 0 00371    03763 MPY +0 20000 0 00050    03764 STQ -0 60000 0 04034    03765 LDQ +0 56000 0 00465   
 03766 MPY +0 20000 0 00244    03767 XCA +0 13100 0 00000    03770 ADD +0 40000 0 00452    03771 ADD +0 40000 0 04034   
 03772 STO +0 60100 0 00435                                                                                             
                 W'R TMSP.LE.TMBS                                                   439  LM00474
 03773 CLA +0 50000 0 00436    03774 SUB +0 40200 0 00435    03775 TZE +0 10000 0 03777    03776 TPL +0 12000 0 04005   
                   NBS=0                                                            440  LM00475
 03777 CLA +0 50000 0 00470    04000 STO +0 60100 0 00050                                                               
                   T=T+TMSP                                                         441  LM00476
 04001 CLA +0 50000 0 00437    04002 ADD +0 40000 0 00436    04003 STO +0 60100 0 00437                                 
                 O'E                                                                442  LM00477
 04004 TRA +0 02000 0 04015                                                                                             
                   NSP=0                                                            443  LM00478
 04005 CLA +0 50000 0 00470    04006 STO +0 60100 0 00051                                                               
                   NTAB=NTAB+1                                                      444  LM00479
 04007 CLA +0 50000 0 00052    04010 ADD +0 40000 0 00471    04011 STO +0 60100 0 00052                                 
                   T=T+TMBS                                                         445  LM00480
 04012 CLA +0 50000 0 00437    04013 ADD +0 40000 0 00435    04014 STO +0 60100 0 00437                                 
                 E'L                                                                446  LM00481
                 F'N T                                                              447  LM00482
 04015 CLA +0 50000 0 00437    04016 TRA +0 02000 0 04030                                                               
                 END OF FUNCTION                                                    448  LM00483
 04017 TSX +0 07400 4 00012    04020 TXH +3 00000 0 00000    04021 SXD -0 63400 1 04020    04022 SXA +0 63400 4 04030   
 04023 CLA +0 50000 4 00001    04024 STA +0 62100 0 03645    04025 CLA +0 50000 4 00002    04026 STA +0 62100 0 03647   
 04027 TRA +0 02000 2 00001    04030 AXT +0 77400 4 00000    04031 LXA +0 53400 2 04020    04032 LXD -0 53400 1 04020   
 04033 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION (NN,A)                                           449  LM00485
 04035 TRA +0 02000 0 04361                                                                                             
                 ENTRY TO GETTAB.                                                   450  LM00486
 04036 TRA +0 02000 0 04041    00043 TTR +0 02100 0 04037    04037 SXA +0 63400 2 04325    04040 TSX +0 07400 2 04325   
                 W'R COMARG.(I+1).E.FENCE, T'O BAD                                  451  LM00487
 04041 CLA +0 50000 0 00220    04042 ADD +0 40000 0 00471    04043 STO +0 60100 0 04360    04044 TSX +0 07400 4 00007   
 04045 TXH +3 00000 0 04360    04046 SUB +0 40200 0 00206    04047 TNZ -0 10000 0 04051    04050 TRA +0 02000 0 00055   
                 N=NN                                                               452  LM00488
 04051 CLA +0 50000 0 00024    04052 STO +0 60100 0 00304                                                               
                 T'H TAL, FOR I=I+1,1,COMARG.(I,ARG1).E.FENCE                       453  LM00489
 04053 CLA +0 50000 0 00220    04054 ADD +0 40000 0 00471    04055 STO +0 60100 0 00220    04056 TRA +0 02000 0 04062   
 04057 CLA +0 50000 0 00220    04060 ADD +0 40000 0 00471    04061 STO +0 60100 0 00220    04062 TSX +0 07400 4 00007   
 04063 TXH +3 00000 0 00220    04064 TXH +3 00000 0 00124    04065 SUB +0 40200 0 00206    04066 TZE +0 10000 0 04220   
                 W'R ARG1.E.$   FAP$                                                454  LM00490
 04067 CLA +0 50000 0 00124    04070 SUB +0 40200 0 00624    04071 TNZ -0 10000 0 04115                                 
                   T'H FCL, FOR J=0,1,FAPTAB(J).E.0                                 455  LM00491
 04072 CLA +0 50000 0 00470    04073 STO +0 60100 0 00223    04074 TRA +0 02000 0 04100    04075 CLA +0 50000 0 00223   
 04076 ADD +0 40000 0 00471    04077 STO +0 60100 0 00223    04100 LXA +0 53400 1 00223    04101 CLA +0 50000 1 00205   
 04102 SUB +0 40200 0 00470    04103 TZE +0 10000 0 04114                                                               
                   N=N+1                                                            456  LM00492
 04104 CLA +0 50000 0 00304    04105 ADD +0 40000 0 00471    04106 STO +0 60100 0 00304                                 
      FCL          A(N)=FAPTAB(J)                                                   457  LM00493
 04107 LXA +0 53400 1 00304    04110 LXA +0 53400 2 00223    04111 CLA +0 50000 2 00205    04112 STO +0 60100 1 00024   
 04113 TRA +0 02000 0 04075                                                                                             
                 O'R ARG1.E.$   MAD$                                                458  LM00494
 04114 TRA +0 02000 0 04217    04115 CLA +0 50000 0 00124    04116 SUB +0 40200 0 00626    04117 TNZ -0 10000 0 04150   
                   W'R ARG.E.$ ITABS$, MADSW=1B                                     459  LM00495
 04120 CLA +0 50000 0 00125    04121 SUB +0 40200 0 00611    04122 TNZ -0 10000 0 04125    04123 CLA +0 50000 0 00471   
 04124 STO +0 60100 0 00246                                                                                             
                   T'H MCL, FOR J=0,1,MADTAB(J).E.0                                 460  LM00496
 04125 CLA +0 50000 0 00470    04126 STO +0 60100 0 00223    04127 TRA +0 02000 0 04133    04130 CLA +0 50000 0 00223   
 04131 ADD +0 40000 0 00471    04132 STO +0 60100 0 00223    04133 LXA +0 53400 1 00223    04134 CLA +0 50000 1 00267   
 04135 SUB +0 40200 0 00470    04136 TZE +0 10000 0 04147                                                               
                   N=N+1                                                            461  LM00497
 04137 CLA +0 50000 0 00304    04140 ADD +0 40000 0 00471    04141 STO +0 60100 0 00304                                 
      MCL          A(N)=MADTAB(J)                                                   462  LM00498
 04142 LXA +0 53400 1 00304    04143 LXA +0 53400 2 00223    04144 CLA +0 50000 2 00267    04145 STO +0 60100 1 00024   
 04146 TRA +0 02000 0 04130                                                                                             
                 O'R ARG1.E.$  CTSS$                                                463  LM00499
 04147 TRA +0 02000 0 04217    04150 CLA +0 50000 0 00124    04151 SUB +0 40200 0 00616    04152 TNZ -0 10000 0 04175   
                   T'H XCL, FOR J=15,15,J.G.150                                     464  LM00500
 04153 CLA +0 50000 0 00505    04154 STO +0 60100 0 00223    04155 TRA +0 02000 0 04161    04156 CLA +0 50000 0 00223   
 04157 ADD +0 40000 0 00505    04160 STO +0 60100 0 00223    04161 CLA +0 50000 0 00223    04162 SUB +0 40200 0 00516   
 04163 TZE +0 10000 0 04165    04164 TPL +0 12000 0 04174                                                               
                   N=N+1                                                            465  LM00501
 04165 CLA +0 50000 0 00304    04166 ADD +0 40000 0 00471    04167 STO +0 60100 0 00304                                 
      XCL          A(N)=J                                                           466  LM00502
 04170 LXA +0 53400 1 00304    04171 CLA +0 50000 0 00223    04172 STO +0 60100 1 00024    04173 TRA +0 02000 0 04156   
                 O'R ZEL.(ARG1).A.$$.E.0                                            467  LM00503
 04174 TRA +0 02000 0 04217    04175 TSX +0 07400 4 00041    04176 TXH +3 00000 0 00124    04177 STO +0 60100 0 04360   
 04200 CAL -0 50000 0 04360    04201 ANA -0 32000 0 00640    04202 SLW +0 60200 0 04360    04203 CLA +0 50000 0 04360   
 04204 SUB +0 40200 0 00470    04205 TNZ -0 10000 0 04216                                                               
                   N=N+1                                                            468  LM00504
 04206 CLA +0 50000 0 00304    04207 ADD +0 40000 0 00471    04210 STO +0 60100 0 00304                                 
                   A(N)=BCDEC.(ARG1)                                                469  LM00505
 04211 TSX +0 07400 4 00001    04212 TXH +3 00000 0 00124    04213 LXA +0 53400 1 00304    04214 STO +0 60100 1 00024   
                 O'E                                                                470  LM00506
 04215 TRA +0 02000 0 04217                                                                                             
                   T'O RET                                                          471  LM00507
 04216 TRA +0 02000 0 00112                                                                                             
                 E'L                                                                472  LM00508
      TAL        C'E                                                                473  LM00509
 04217 TRA +0 02000 0 04057                                                                                             
      RET        I=I-1                                                              474  LM00510
 04220 CLA +0 50000 0 00220    04221 SUB +0 40200 0 00471    04222 STO +0 60100 0 00220                                 
      SORT       CH=0B                                                              475  LM00511
 04223 CLA +0 50000 0 00470    04224 STO +0 60100 0 00144                                                               
                 T'H SL, FOR J=2,1,J.G.N                                            476  LM00512
 04225 CLA +0 50000 0 00472    04226 STO +0 60100 0 00223    04227 TRA +0 02000 0 04233    04230 CLA +0 50000 0 00223   
 04231 ADD +0 40000 0 00471    04232 STO +0 60100 0 00223    04233 CLA +0 50000 0 00223    04234 SUB +0 40200 0 00304   
 04235 TZE +0 10000 0 04237    04236 TPL +0 12000 0 04310                                                               
                 W'R A(J).E.A(J-1)                                                  477  LM00513
 04237 CLA +0 50000 0 00223    04240 SUB +0 40200 0 00471    04241 LXA +0 53400 1 00223    04242 PAX +0 73400 2 00000   
 04243 CLA +0 50000 1 00024    04244 SUB +0 40200 2 00024    04245 TNZ -0 10000 0 04257                                 
                   A(J)=A(N)                                                        478  LM00514
 04246 LXA +0 53400 2 00304    04247 CLA +0 50000 2 00024    04250 STO +0 60100 1 00024                                 
                   N=N-1                                                            479  LM00515
 04251 CLA +0 50000 0 00304    04252 SUB +0 40200 0 00471    04253 STO +0 60100 0 00304                                 
                   CH=1B                                                            480  LM00516
 04254 CLA +0 50000 0 00471    04255 STO +0 60100 0 00144                                                               
                 O'R A(J).L.A(J-1)                                                  481  LM00517
 04256 TRA +0 02000 0 04307    04257 CLA +0 50000 0 00223    04260 SUB +0 40200 0 00471    04261 LXA +0 53400 1 00223   
 04262 PAX +0 73400 2 00000    04263 CLA +0 50000 1 00024    04264 SUB +0 40200 2 00024    04265 TZE +0 10000 0 04307   
 04266 TPL +0 12000 0 04307                                                                                             
                   ARG1=A(J-1)                                                      482  LM00518
 04267 CLA +0 50000 0 00223    04270 SUB +0 40200 0 00471    04271 PAX +0 73400 2 00000    04272 CLA +0 50000 2 00024   
 04273 STO +0 60100 0 00124                                                                                             
                   A(J-1)=A(J)                                                      483  LM00519
 04274 CLA +0 50000 0 00223    04275 SUB +0 40200 0 00471    04276 PAX +0 73400 1 00000    04277 LXA +0 53400 2 00223   
 04300 CLA +0 50000 2 00024    04301 STO +0 60100 1 00024                                                               
                   A(J)=ARG1                                                        484  LM00520
 04302 LXA +0 53400 1 00223    04303 CLA +0 50000 0 00124    04304 STO +0 60100 1 00024                                 
                   CH=1B                                                            485  LM00521
 04305 CLA +0 50000 0 00471    04306 STO +0 60100 0 00144                                                               
                 E'L                                                                486  LM00522
      SL         C'E                                                                487  LM00523
 04307 TRA +0 02000 0 04230                                                                                             
                 W'R CH, T'O SORT                                                   488  LM00524
 04310 NZT -0 52000 0 00144    04311 TRA +0 02000 0 04313    04312 TRA +0 02000 0 00114                                 
                 N=N+1                                                              489  LM00525
 04313 CLA +0 50000 0 00304    04314 ADD +0 40000 0 00471    04315 STO +0 60100 0 00304                                 
                 A(N)=1000                                                          490  LM00526
 04316 LXA +0 53400 1 00304    04317 CLA +0 50000 0 00521    04320 STO +0 60100 1 00024                                 
                 NN=N                                                               491  LM00527
 04321 CLA +0 50000 0 00304    04322 STO +0 60100 0 00024                                                               
                 F'N                                                                492  LM00528
 04323 TRA +0 02000 0 04354                                                                                             
                 END OF FUNCTION                                                    493  LM00529
 04324 TSX +0 07400 4 00012    04325 TXH +3 00000 0 00000    04326 SXD -0 63400 1 04325    04327 SXA +0 63400 4 04354   
 04330 CLA +0 50000 4 00001    04331 STA +0 62100 0 04051    04332 STA +0 62100 0 04322    04333 CLA +0 50000 4 00002   
 04334 STA +0 62100 0 04112    04335 STA +0 62100 0 04145    04336 STA +0 62100 0 04172    04337 STA +0 62100 0 04214   
 04340 STA +0 62100 0 04243    04341 STA +0 62100 0 04244    04342 STA +0 62100 0 04247    04343 STA +0 62100 0 04250   
 04344 STA +0 62100 0 04263    04345 STA +0 62100 0 04264    04346 STA +0 62100 0 04272    04347 STA +0 62100 0 04300   
 04350 STA +0 62100 0 04301    04351 STA +0 62100 0 04304    04352 STA +0 62100 0 04320    04353 TRA +0 02000 2 00001   
 04354 AXT +0 77400 4 00000    04355 LXA +0 53400 2 04325    04356 LXD -0 53400 1 04325    04357 TRA +0 02000 4 00001   
                 INTERNAL FUNCTION (Z)                                              494  LM00531
 04361 TRA +0 02000 0 04417                                                                                             
                 E'O BCDC.                                                          495  LM00532
 04362 TRA +0 02000 0 04365    00042 TTR +0 02100 0 04363    04363 SXA +0 63400 2 04403    04364 TSX +0 07400 2 04403   
                 W'R ZEL.(Z).A.$$.NE.0, T'O BAD                                     496  LM00533
 04365 TSX +0 07400 4 00041    04366 TXH +3 00000 0 00024    04367 STO +0 60100 0 04416    04370 CAL -0 50000 0 04416   
 04371 ANA -0 32000 0 00640    04372 SLW +0 60200 0 04416    04373 CLA +0 50000 0 04416    04374 SUB +0 40200 0 00470   
 04375 TZE +0 10000 0 04377    04376 TRA +0 02000 0 00055                                                               
                 F'N BCDEC.(Z)                                                      497  LM00534
 04377 TSX +0 07400 4 00001    04400 TXH +3 00000 0 00024    04401 TRA +0 02000 0 04412                                 
                 E'N                                                                498  LM00535
 04402 TSX +0 07400 4 00012    04403 TXH +3 00000 0 00000    04404 SXD -0 63400 1 04403    04405 SXA +0 63400 4 04412   
 04406 CLA +0 50000 4 00001    04407 STO +0 60100 0 04366    04410 STO +0 60100 0 04400    04411 TRA +0 02000 2 00001   
 04412 AXT +0 77400 4 00000    04413 LXA +0 53400 2 04403    04414 LXD -0 53400 1 04403    04415 TRA +0 02000 4 00001   
                 V'S NSPC=5                                                         499  LM00537
 00305     +0 00000 0 00005                                                                                             
                 V'S SP=55K,107K,72K,60K,135K,136K                                  500  LM00538
 00351     +0 00000 0 00136    00352     +0 00000 0 00135    00353     +0 00000 0 00060    00354     +0 00000 0 00072   
 00355     +0 00000 0 00107    00356     +0 00000 0 00055                                                               
                 V'S NNOSP=2                                                        501  LM00539
 00276     +0 00000 0 00002                                                                                             
                 V'S NOSP=113K,132K,133K                                            502  LM00540
 00277     +0 00000 0 00133    00300     +0 00000 0 00132    00301     +0 00000 0 00113                                 
                 V'S NPCC=11                                                        503  LM00541
 00303     +0 00000 0 00013                                                                                             
                 V'S PCCL=60K,1K,0K,40K,20K,2K,3K,4K,5K,61K,62K,63K                 504  LM00542
 00312     +0 00000 0 00063    00313     +0 00000 0 00062    00314     +0 00000 0 00061    00315     +0 00000 0 00005   
 00316     +0 00000 0 00004    00317     +0 00000 0 00003    00320     +0 00000 0 00002    00321     +0 00000 0 00020   
 00322     +0 00000 0 00040    00323     +0 00000 0 00000    00324     +0 00000 0 00001    00325     +0 00000 0 00060   
                 V'S D=0,66,1,2,-1,32,21,16,13,0,1,2                                505  LM00543
 00152     +0 00000 0 00002    00153     +0 00000 0 00001    00154     +0 00000 0 00000    00155     +0 00000 0 00015   
 00156     +0 00000 0 00020    00157     +0 00000 0 00025    00160     +0 00000 0 00040    00161     -0 00000 0 00001   
 00162     +0 00000 0 00002    00163     +0 00000 0 00001    00164     +0 00000 0 00102    00165     +0 00000 0 00000   
                 V'S MADBS=35K                                                      506  LM00544
 00245     +0 00000 0 00035                                                                                             
                 V'S LM=777777K6                                                    507  LM00545
 00240     -3 77777 0 00000                                                                                             
                 V'S FENCE = 777777777777K                                          508  LM00546
 00206     -3 77777 7 77777                                                                                             
                 V'S FAPTAB=8,16,35,40,45,50,55,60,65,70,75,80,85,0                 509  LM00547
 00170     +0 00000 0 00000    00171     +0 00000 0 00125    00172     +0 00000 0 00120    00173     +0 00000 0 00113   
 00174     +0 00000 0 00106    00175     +0 00000 0 00101    00176     +0 00000 0 00074    00177     +0 00000 0 00067   
 00200     +0 00000 0 00062    00201     +0 00000 0 00055    00202     +0 00000 0 00050    00203     +0 00000 0 00043   
 00204     +0 00000 0 00020    00205     +0 00000 0 00010                                                               
                 V'S MADTAB=12,17,22,27,32,37,42,47,52,57,62,67,72,77,82,87,0       510  LM00548
 00247     +0 00000 0 00000    00250     +0 00000 0 00127    00251     +0 00000 0 00122    00252     +0 00000 0 00115   
 00253     +0 00000 0 00110    00254     +0 00000 0 00103    00255     +0 00000 0 00076    00256     +0 00000 0 00071   
 00257     +0 00000 0 00064    00260     +0 00000 0 00057    00261     +0 00000 0 00052    00262     +0 00000 0 00045   
 00263     +0 00000 0 00040    00264     +0 00000 0 00033    00265     +0 00000 0 00026    00266     +0 00000 0 00021   
 00267     +0 00000 0 00014                                                                                             
                 DIMENSION IN(0),OUT(0),NC(5),ITABS(0),OTABS(0)                     511  LM00549
                 V'S TCR = 0,2,8,128,176,176,8,8,8,1,1                              512  LM00553
 00405     +0 00000 0 00001    00406     +0 00000 0 00001    00407     +0 00000 0 00010    00410     +0 00000 0 00010   
 00411     +0 00000 0 00010    00412     +0 00000 0 00260    00413     +0 00000 0 00260    00414     +0 00000 0 00200   
 00415     +0 00000 0 00010    00416     +0 00000 0 00002    00417     +0 00000 0 00000                                 
                 V'S TCRLF=0,1,1,0,0,0,1,0,1,0,0                                    513  LM00554
 00372     +0 00000 0 00000    00373     +0 00000 0 00000    00374     +0 00000 0 00001    00375     +0 00000 0 00000   
 00376     +0 00000 0 00001    00377     +0 00000 0 00000    00400     +0 00000 0 00000    00401     +0 00000 0 00000   
 00402     +0 00000 0 00001    00403     +0 00000 0 00001    00404     +0 00000 0 00000                                 
                 V'S TBS = 0,1K5,112,1K5,1K5,1K5,1K5,88,112,1,1                     514  LM00555
 00357     +0 00000 0 00001    00360     +0 00000 0 00001    00361     +0 00000 0 00160    00362     +0 00000 0 00130   
 00363     +0 00000 1 00000    00364     +0 00000 1 00000    00365     +0 00000 1 00000    00366     +0 00000 1 00000   
 00367     +0 00000 0 00160    00370     +0 00000 1 00000    00371     +0 00000 0 00000                                 
                 V'S TSP = 0,88,72,64,88,88,88,88,72,1,1                            515  LM00556
 00440     +0 00000 0 00001    00441     +0 00000 0 00001    00442     +0 00000 0 00110    00443     +0 00000 0 00130   
 00444     +0 00000 0 00130    00445     +0 00000 0 00130    00446     +0 00000 0 00130    00447     +0 00000 0 00100   
 00450     +0 00000 0 00110    00451     +0 00000 0 00130    00452     +0 00000 0 00000                                 
                 V'S TTAB = 0,24,8,1K5,1K5,1K5,24,24,8,1,1                          516  LM00557
 00453     +0 00000 0 00001    00454     +0 00000 0 00001    00455     +0 00000 0 00010    00456     +0 00000 0 00030   
 00457     +0 00000 0 00030    00460     +0 00000 1 00000    00461     +0 00000 1 00000    00462     +0 00000 1 00000   
 00463     +0 00000 0 00010    00464     +0 00000 0 00030    00465     +0 00000 0 00000                                 
                 V'S TLF = 0,1,0,0,0,0,0,1,0,1,0                                    517  LM00558
 00422     +0 00000 0 00000    00423     +0 00000 0 00001    00424     +0 00000 0 00000    00425     +0 00000 0 00001   
 00426     +0 00000 0 00000    00427     +0 00000 0 00000    00430     +0 00000 0 00000    00431     +0 00000 0 00000   
 00432     +0 00000 0 00000    00433     +0 00000 0 00001    00434     +0 00000 0 00000                                 
                 V'S LL=0,87,129,68,68,68,87,87,129,79,1K5                          518  LM00559
 00225     +0 00000 1 00000    00226     +0 00000 0 00117    00227     +0 00000 0 00201    00230     +0 00000 0 00127   
 00231     +0 00000 0 00127    00232     +0 00000 0 00104    00233     +0 00000 0 00104    00234     +0 00000 0 00104   
 00235     +0 00000 0 00201    00236     +0 00000 0 00127    00237     +0 00000 0 00000                                 
                 V'S PGL=0,66,66,66,66,66,66,66,66,56,66                            519  LM00560
 00327     +0 00000 0 00102    00330     +0 00000 0 00070    00331     +0 00000 0 00102    00332     +0 00000 0 00102   
 00333     +0 00000 0 00102    00334     +0 00000 0 00102    00335     +0 00000 0 00102    00336     +0 00000 0 00102   
 00337     +0 00000 0 00102    00340     +0 00000 0 00102    00341     +0 00000 0 00000                                 
                 V'S ITD=10                                                         520  LM00561
 00222     +0 00000 0 00012                                                                                             
                 V'S OTD=10                                                         521  LM00562
 00307     +0 00000 0 00012                                                                                             
                 EQUIVALENCE (NCR,NC(0)),(NLF,NC(1)),(NTAB,NC(2)),                  522  LM00564
                1  (NSP,NC(3)),(NBS,NC(4)),(NCRLF,NC(5))                            522  LM00565
                 NORMAL MODE IS INTEGER                                             523  LM00566
                 BOOLEAN N9,N12,CC,NCCS,CCN,EOFSW,WR,PS,CH,LMSW,DATESW              524  LM00567
                 BOOLEAN FILESW,HDRSW,MADSW,CCX,PTF,CKP                             525  LM00568
                 END OF PROGRAM                                                     526  LM00569
 04417 TSX +0 07400 4 00012                                                                                             
1            OPENW,WTA,CLOSEW                                                    02/05/69 1710.5 PAGE 1     
                  
                              *      OPENW.(FN,FN1)   
                              *      WTA.(A,N)  
                              *      CLOSEW.    
                       00031         ENTRY   WTA
                       00006         ENTRY   OPENW    
                       00071         ENTRY   CLOSEW   
                  
        TRANSFER VECTOR 
      00000  464725456060     OPEN  
      00001  226426262551     BUFFER
      00002  665166213163     WRWAIT
      00003  234346622560     CLOSE 
                  
            LINKAGE DIRECTOR  
      00004  000000000000     
      00005  666321606060     
                  
      00006  0636 00 4 00027  OPENW  SCA     XRO,4    
      00007 -0500 60 4 00001         CAL*    1,4
      00010  0602 00 0 00123         SLW     FN 
      00011 -0500 60 4 00002         CAL*    2,4
      00012  0602 00 0 00124         SLW     FN1
      00013  0074 00 4 00000         TSX     $OPEN,4  
      00014  3 00000 0 01670         PTH     =HW
      00015  3 00000 0 00123         PTH     FN 
      00016  3 00000 0 00124         PTH     FN1
      00017  0074 00 4 00001         TSX     $BUFFER,4
      00020  3 00000 0 00123         PTH     FN 
      00021  3 00000 0 00124         PTH     FN1
      00022  3 00660 0 00126         PTH     WBUF,,432
      00023 -0500 00 0 01667         CAL     =O77     
      00024  0602 00 0 00125         SLW     AC 
      00025  0774 00 4 00660         AXT     432,4    
      00026  0634 00 4 00043         SXA     WC,4     
      00027 -0774 00 4 00000  XRO    AXC     ,4 
      00030  0020 00 4 00001         TRA     1,4
                              *     
      00031  0636 00 4 00066  WTA    SCA     XRW,4    
      00032  0634 00 1 00067         SXA     XRW+1,1  
      00033 -0500 00 4 00001         CAL     1,4
      00034  0621 00 0 00045         STA     LDQ
      00035 -0500 60 4 00002         CAL*    2,4
      00036  0734 00 4 00000         PAX     ,4 
      00037 -0634 00 4 00044         SXD     LOOP,4   
      00040  0774 00 1 00001         AXT     1,1
      00041 -0500 00 0 00125         CAL     AC 
      00042  0140 00 0 00042         TOV     *  
      00043  0774 00 4 00000  WC     AXT     ,4 
      00044  3 00044 1 00064  LOOP   TXH     OUT,1,1**
      00045  0560 00 1 00000  LDQ    LDQ     **,1     
      00046 -0773 00 0 00033         RQL     36-9     
      00047 -0763 00 0 00011         LGL     9  
      00050 -0140 00 0 00063         TNO     CLE
      00051  0602 00 4 01666         SLW     BUF+432,4
      00052  2 00001 4 00062         TIX     NW,4,1   
      00053  0074 00 4 00002         TSX     $WRWAIT,4
1            OPENW,WTA,CLOSEW                                                    02/05/69 1710.5 PAGE 2     
                  
      00054  3 00000 0 00123         PTH     FN 
      00055  3 00000 0 00124         PTH     FN1
      00056  3 00000 0 01666         PTH     =0 
      00057  3 00660 0 01006         PTH     BUF,,432 
      00060  0140 00 0 00060         TOV     *  
      00061  0774 00 4 00660         AXT     432,4    
      00062 -0500 00 0 01667  NW     CAL     =O77     
      00063  1 00001 1 00044  CLE    TXI     LOOP,1,1 
      00064  0634 00 4 00043  OUT    SXA     WC,4     
      00065  0602 00 0 00125         SLW     AC 
      00066 -0774 00 4 00000  XRW    AXC     ,4 
      00067  0774 00 1 00000         AXT     ,1 
      00070  0020 00 4 00001         TRA     1,4
                              *     
      00071  0636 00 4 00121  CLOSEW SCA     XRC,4    
      00072  0534 00 4 00043         LXA     WC,4     
      00073 -0500 00 0 00125         CAL     AC 
      00074 -0340 00 0 01667         LAS     =O77     
      00075  0020 00 0 00077         TRA     *+2
      00076  0020 00 0 00105         TRA     LE 
      00077  0140 00 0 00077         TOV     *  
      00100  0560 00 0 01666         LDQ     =0 
      00101 -0763 00 0 00011         LGL     9  
      00102 -0140 00 0 00101         TNO     *-1
      00103  0602 00 4 01666         SLW     BUF+432,4
      00104  1 77777 4 00105         TXI     *+1,4,-1 
      00105 -0636 00 4 00107  LE     SCD     *+2,4    
      00106  0774 00 4 00660         AXT     432,4    
      00107  1 00000 4 00110         TXI     *+1,4,** 
      00110 -0634 00 4 00115         SXD     *+5,4    
      00111  0074 00 4 00002         TSX     $WRWAIT,4
      00112  3 00000 0 00123         PTH     FN 
      00113  3 00000 0 00124         PTH     FN1
      00114  3 00000 0 01666         PTH     =0 
      00115  3 00000 0 01006         PTH     BUF,,**  
      00116  0074 00 4 00003         TSX     $CLOSE,4 
      00117  3 00000 0 00123         PTH     FN 
      00120  3 00000 0 00124         PTH     FN1
      00121 -0774 00 4 00000  XRC    AXC     ,4 
      00122  0020 00 4 00001         TRA     1,4
      00123  0 00000 0 00000  FN    
      00124  0 00000 0 00000  FN1   
      00125  0 00000 0 00000  AC    
      00126                   WBUF   BSS     432
      01006                   BUF    BSS     432
                                     END  
                  
        LITERALS  
      01666  000000000000     
      01667  000000000077     
      01670  666060606060     
1            OPENW,WTA,CLOSEW                                                    02/05/69 1710.5 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1671 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        125     AC    24,   41,   65,   73
        123     FN    10,   15,   20,   54,  112,  117
        105     LE    76
         62     NW    52
         43     WC    26,   64,   72
       1006    BUF    51,   57,  103,  115
         63    CLE    50
        124    FN1    12,   16,   21,   55,  113,  120
         45    LDQ    34
         64    OUT    44
         31    WTA     0
        121    XRC    71
         27    XRO     6
         66    XRW    31,   32
         44   LOOP    37,   63
          0   OPEN    13
        126   WBUF    22
          3  CLOSE   116
          6  OPENW     0
          1 BUFFER    17
         71 CLOSEW     0
          2 WRWAIT    53,  111
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            OPENF,SETSIZ,READF,CLOSEF                                           02/05/69 1710.6 PAGE 1     
                  
                              *      OPENF.(FN1,FN2)  
                              *      SETSIZ.(CHARSIZ,LINESIZ,LINEMARKSW)
                              *      N=READF.(A,NMAX,BRK,EOF)     
                              *      CLOSEF.()  
                       00061         ENTRY   READF    
                       00006         ENTRY   OPENF    
                       00040         ENTRY   SETSIZ   
                       00213         ENTRY   CLOSEF   
                  
        TRANSFER VECTOR 
      00000  464725456060     OPEN  
      00001  452346446060     NCOM  
      00002  512466213163     RDWAIT
      00003  234346622560     CLOSE 
                  
            LINKAGE DIRECTOR  
      00004  000000000000     
      00005  512521242660     
                  
      00006  0636 00 4 00032  OPENF  SCA     XRO,4    
      00007 -0500 60 4 00001         CAL*    1,4
      00010  0602 00 0 00221         SLW     FN 
      00011 -0500 60 4 00002         CAL*    2,4
      00012  0602 00 0 00222         SLW     FN1
      00013  0074 00 4 00000         TSX     $OPEN,4  
      00014  3 00000 0 01127         PTH     =HR
      00015  3 00000 0 00221         PTH     FN 
      00016  3 00000 0 00222         PTH     FN1
      00017  3 00000 0 01125         PTH     =-0
      00020  3 00000 0 01125         PTH     =-0
      00021  3 00000 0 00034         PTH     ERR
      00022  0634 00 0 00077         SXA     WC,0     
      00023  0634 00 0 00100         SXA     CC,0     
      00024  0600 00 0 00223         STZ     EOFSW    
      00025  0600 00 0 00224         STZ     EOFSW1   
      00026 -0634 00 0 00123         SXD     TXH,0    
      00027 -0500 00 0 01117         CAL     =1 
      00030  0602 00 0 00231         SLW     RELADR   
      00031 -0625 00 0 00227         STL     FIRST    
      00032 -0774 00 4 00000  XRO    AXC     ,4 
      00033  0020 00 4 00001         TRA     1,4
                              *     
      00034  0074 00 4 00001  ERR    TSX     $NCOM,4  
      00035  3 00000 0 01126         PTH     =HPRNTER 
      00036  3 00000 0 01121         PTH     =O51     
      00037  0101 00 0 01124         TIA     =HDORMNT 
                              *     
      00040 -0500 60 4 00001  SETSIZ CAL*    1,4
      00041  0621 00 0 00172         STA     SFTN     
      00042  0560 00 0 01120         LDQ     =36
      00043 -0754 00 0 00000         ZAC  
      00044  0221 60 4 00001         DVP*    1,4
      00045 -0130 00 0 00000         XCL  
      00046  0621 00 0 00170         STA     N1 
      00047 -0500 60 4 00002         CAL*    2,4
      00050  0621 00 0 00232         STA     LNSZ     
1            OPENF,SETSIZ,READF,CLOSEF                                           02/05/69 1710.6 PAGE 2     
                  
      00051  0602 00 0 00233         SLW     DO 
      00052 -0500 60 4 00003         CAL*    3,4
      00053  0602 00 0 00234         SLW     LMSW     
      00054 -0602 00 0 00233         ORS     DO 
      00055  0600 00 0 00235         STZ     LCT
      00056  0600 00 0 00236         STZ     NDLM     
      00057 -0625 00 0 00227         STL     FIRST    
      00060  0020 00 4 00001         TRA     1,4
                              *     
      00061  0636 00 4 00205  READF  SCA     XRR,4    
      00062  0520 00 0 00224         ZET     EOFSW1   
      00063  0020 60 4 00004         TRA*    4,4
      00064  0634 00 1 00206         SXA     XRR+1,1  
      00065  0634 00 2 00207         SXA     XRR+2,2  
      00066 -0500 00 4 00001         CAL     1,4
      00067  0621 00 0 00174         STA     SLW
      00070  0774 00 1 00000         AXT     0,1
      00071 -0500 60 4 00002         CAL*    2,4
      00072  0734 00 2 00000         PAX     ,2 
      00073  1 77777 2 00074         TXI     *+1,2,-1 
      00074 -0634 00 2 00102         SXD     LOOP,2   
      00075 -0500 60 4 00003         CAL*    3,4
      00076  0602 00 0 00226         SLW     BRK
      00077  0774 00 4 00000  WC     AXT     **,4     
      00100  0774 00 2 00000  CC     AXT     **,2     
      00101  0560 00 0 00230         LDQ     MQ 
      00102  3 00000 1 00201  LOOP   TXH     OUT,1,** 
      00103  2 00001 2 00171         TIX     SFT,2,1  
      00104 -0520 00 0 00233         NZT     DO 
      00105  0020 00 0 00123         TRA     TXH
      00106  0520 00 0 00235         ZET     LCT
      00107  0020 00 0 00123         TRA     TXH
      00110  0520 00 0 00236         ZET     NDLM     
      00111  0020 00 0 00123         TRA     TXH
      00112 -0500 00 0 00232         CAL     LNSZ     
      00113  0602 00 0 00235         SLW     LCT
      00114  0520 00 0 00227         ZET     FIRST    
      00115  0020 00 0 00122         TRA     TXH-1    
      00116 -0100 00 0 00120         TNZ     *+2
      00117 -0625 00 0 00236         STL     NDLM     
      00120 -0500 00 0 01122         CAL     =O55     
      00121  0020 00 0 00173         TRA     STO
      00122  0600 00 0 00227         STZ     FIRST    
      00123  3 00000 4 00147  TXH    TXH     NRD,4,** 
      00124  0520 00 0 00223         ZET     EOFSW    
      00125  0020 00 0 00200         TRA     REOF     
      00126  0074 00 4 00002         TSX     $RDWAIT,4
      00127  3 00000 0 00221         PTH     FN 
      00130  3 00000 0 00222         PTH     FN1
      00131  3 00000 0 00231         PTH     RELADR   
      00132  3 00660 0 00237         PTH     BUF,,432 
      00133  3 00000 0 00142         PTH     EOF
      00134  3 00000 0 00225         PTH     EOFCT    
      00135 -0500 00 0 00231         CAL     RELADR   
      00136  0400 00 0 01123         ADD     =432     
      00137  0602 00 0 00231         SLW     RELADR   
1            OPENF,SETSIZ,READF,CLOSEF                                           02/05/69 1710.6 PAGE 3     
                  
      00140 -0774 00 4 00660         AXC     432,4    
      00141  0020 00 0 00145         TRA     SXD
      00142  0535 00 4 00225  EOF    LAC     EOFCT,4  
      00143 -0625 00 0 00223         STL     EOFSW    
      00144 -3 00000 4 00200         TXL     REOF,4,0 
      00145 -0634 00 4 00123  SXD    SXD     TXH,4    
      00146  0774 00 4 00000         AXT     0,4
      00147  0520 00 0 00234  NRD    ZET     LMSW     
      00150  0520 00 0 00235         ZET     LCT
      00151  0020 00 0 00163         TRA     GET
      00152 -0500 00 4 00237         CAL     BUF,4    
      00153  1 77777 4 00154         TXI     *+1,4,-1 
      00154  0322 00 0 01130         ERA     =O777777000000 
      00155 -0320 00 0 01130         ANA     =O777777000000 
      00156 -0100 00 0 00102         TNZ     LOOP     
      00157 -0500 00 4 00236         CAL     BUF-1,4  
      00160  0621 00 0 00235         STA     LCT
      00161  0600 00 0 00236         STZ     NDLM     
      00162  0020 00 0 00102         TRA     LOOP     
      00163 -0500 00 0 00235  GET    CAL     LCT
      00164  0402 00 0 01117         SUB     =1 
      00165  0602 00 0 00235         SLW     LCT
      00166  0560 00 4 00237         LDQ     BUF,4    
      00167  1 77777 4 00170         TXI     *+1,4,-1 
      00170  0774 00 2 00004  N1     AXT     4,2
      00171 -0754 00 0 00000  SFT    ZAC  
      00172 -0763 00 0 00011  SFTN   LGL     9  
      00173  1 00001 1 00174  STO    TXI     *+1,1,1  
      00174  0602 00 1 00000  SLW    SLW     **,1     
      00175  0322 00 0 00226         ERA     BRK
      00176  0100 00 0 00201         TZE     OUT
      00177  0020 00 0 00102         TRA     LOOP     
      00200 -0625 00 0 00224  REOF   STL     EOFSW1   
      00201  0634 00 4 00077  OUT    SXA     WC,4     
      00202  0634 00 2 00100         SXA     CC,2     
      00203 -0600 00 0 00230         STQ     MQ 
      00204  0754 00 1 00000         PXA     ,1 
      00205 -0774 00 4 00000  XRR    AXC     ,4 
      00206  0774 00 1 00000         AXT     ,1 
      00207  0774 00 2 00000         AXT     ,2 
      00210  0100 60 4 00004         TZE*    4,4
      00211  0020 00 4 00001         TRA     1,4
                              *     
      00212  0 00000 0 00000  N     
      00213  0636 00 4 00217  CLOSEF SCA     XRC,4    
      00214  0074 00 4 00003         TSX     $CLOSE,4 
      00215  3 00000 0 00221         PTH     FN 
      00216  3 00000 0 00222         PTH     FN1
      00217 -0774 00 4 00000  XRC    AXC     ,4 
      00220  0020 00 4 00001         TRA     1,4
      00221  0 00000 0 00000  FN    
      00222  0 00000 0 00000  FN1   
      00223  0 00000 0 00000  EOFSW 
      00224  0 00000 0 00000  EOFSW1
      00225  0 00000 0 00000  EOFCT 
      00226  0 00000 0 00000  BRK   
1            OPENF,SETSIZ,READF,CLOSEF                                           02/05/69 1710.6 PAGE 4     
                  
      00227  0 00000 0 00000  FIRST 
      00230  0 00000 0 00000  MQ    
      00231  0 00000 0 00000  RELADR
      00232  0 00000 0 00000  LNSZ  
      00233  0 00000 0 00000  DO    
      00234  0 00000 0 00000  LMSW  
      00235  0 00000 0 00000  LCT   
      00236  0 00000 0 00000  NDLM  
      00237                   BUF    BSS     432
                                     END  
                  
        LITERALS  
      01117  000000000001     
      01120  000000000044     
      01121  000000000051     
      01122  000000000055     
      01123  000000000660     
      01124  244651444563     
      01125  400000000000     
      01126  475145632551     
      01127  516060606060     
      01130  777777000000     
1            OPENF,SETSIZ,READF,CLOSEF                                           02/05/69 1710.6 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1131 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        212      N      
        100     CC    23,  202
        233     DO    51,   54,  104
        221     FN    10,   15,  127,  215
        230     MQ   101,  203
        170     N1    46
         77     WC    22,  201
        226    BRK    76,  175
        237    BUF   132,  152,  157,  166
        142    EOF   133
         34    ERR    21
        222    FN1    12,   16,  130,  216
        163    GET   151
        235    LCT    55,  106,  113,  150,  160,  163,  165
        147    NRD   123
        201    OUT   102,  176
        171    SFT   103
        174    SLW    67
        173    STO   121
        145    SXD   141
        123    TXH    26,  105,  107,  111,  115,  145
        217    XRC   213
         32    XRO     6
        205    XRR    61,   64,   65
        234   LMSW    53,  147
        232   LNSZ    50,  112
        102   LOOP    74,  156,  162,  177
          1   NCOM    34
        236   NDLM    56,  110,  117,  161
          0   OPEN    13
        200   REOF   125,  144
        172   SFTN    41
          3  CLOSE   214
        225  EOFCT   134,  142
        223  EOFSW    24,  124,  143
        227  FIRST    31,   57,  114,  122
          6  OPENF     0
         61  READF     0
        213 CLOSEF     0
        224 EOFSW1    25,   62,  200
          2 RDWAIT   126
        231 RELADR    30,  131,  135,  137
         40 SETSIZ     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            CHARACTER CONVERSION ROUTINE                                        02/05/69 1711.4 PAGE 1     
                  
                              *      ASCTSS CONVERTS A SINGLE ASCII CHARACTER INTO A CTSS CHARACTER.  
                              *      TSSASC CONVERTS A SINGLE CTSS CHARACTER INTO AN ASCII CHARACTER. 
                              *     
                              *      NO ESCAPE CONVENTIONS ARE RELEVANT.
                              *      MAD CALLING SEQUENCE   
                              *      X = ASCTSS.(CHAR)
                              *      X = TSSASC.(CHAR)
                              *      WRITTEN BY ROBERT MORRIS, DECEMBER, 1965 
                              *      FIXED FOR PR(1966)ASCII BY J. H. SALTZER, OCT. 66.   
                              *     
                       00004         ENTRY   ASCTSS   
                       00002         ENTRY   TSSASC   
                              *     
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  216223636262     
                  
      00002 -0625 00 0 00017  TSSASC STL     XYZFL    
      00003  0020 00 0 00005         TRA     *+2
      00004  0600 00 0 00017  ASCTSS STZ     XYZFL    
      00005  0634 00 1 00015         SXA     XR1,1    
      00006  0500 60 4 00001         CLA*    1,4
      00007 -0320 00 0 00220         ANA     =O177    
      00010  0737 00 1 00000         PAC     ,1 
      00011  0500 00 1 00020         CLA     TABLE,1  
      00012  0520 00 0 00017         ZET     XYZFL    
      00013  0771 00 0 00022         ARS     18 
      00014 -0320 00 0 00220         ANA     =O177    
      00015  0774 00 1 00000  XR1    AXT     **,1     
      00016  0020 00 4 00002         TRA     2,4
                              *     
      00017  0 00000 0 00000  XYZFL  PZE  
                              *     
                              T      MACRO   X,Y
                                     VFD     O18/X,O18/Y    
                                     END  
                              *     
                       00020  TABLE  EQU     *  
      00020                          T       060,057       0 NUL  
      00021                          T       061,057       1 SOH  
      00022                          T       062,057       2 STX  
      00023                          T       063,057       3 ETX  
      00024                          T       064,057       4 EOT  
      00025                          T       065,057       5 ENQ  
      00026                          T       066,057       6 ACK  
      00027                          T       067,113       7 BEL  
      00030                          T       070,135       8 BS   
      00031                          T       071,072       9 HT   
      00032                          T       000,055       NUL NL 
      00033                          T       075,172       EQUALS VT    
      00034                          T       047,052       ACUTE FF     
      00035                          T       000,136       NUL CR 
      00036                          T       000,133       NUL SO 
      00037                          T       000,132       NUL SI 
      00040                          T       053,057       PLUS DLE     
1            CHARACTER CONVERSION ROUTINE                                        02/05/69 1711.4 PAGE 2     
                  
      00041                          T       101,057       A RHT  
      00042                          T       102,110       B HLF  
      00043                          T       103,057       C CS   
      00044                          T       104,111       D HLR  
      00045                          T       105,057       E NAK  
      00046                          T       106,057       F SYN  
      00047                          T       107,057       G ETB  
      00050                          T       110,057       H CAN  
      00051                          T       111,057       I EM   
      00052                          T       000,057       NUL SS 
      00053                          T       056,057       PERIOD ESC   
      00054                          T       051,057       CLOSE PAREN FS     
      00055                          T       072,057       COLON GS     
      00056                          T       000,057       NUL RS 
      00057                          T       000,057       NUL US 
      00060                          T       055,060       MINUS SPACE  
      00061                          T       112,114       J EXCLAM PT  
      00062                          T       113,137       K QUOTE
      00063                          T       114,104       L NR SIGN    
      00064                          T       115,053       M DOLLAR SIGN
      00065                          T       116,105       N PERCENT    
      00066                          T       117,120       O AMPERSAND  
      00067                          T       120,014       P ACUTE
      00070                          T       121,074       Q OPEN PAREN 
      00071                          T       122,034       R CLOSE PAREN
      00072                          T       014,054       FF STAR
      00073                          T       044,020       DOLLARS PLUS 
      00074                          T       052,073       STAR COMMA   
      00075                          T       012,040       NL DASH
      00076                          T       000,033       NUL PERIOD   
      00077                          T       000,061       NUL SLASH    
      00100                          T       040,000       BLANK 0
      00101                          T       057,001       SLASH 1
      00102                          T       123,002       S 2    
      00103                          T       124,003       T 3    
      00104                          T       125,004       U 4    
      00105                          T       126,005       V 5    
      00106                          T       127,006       W 6    
      00107                          T       130,007       X 7    
      00110                          T       131,010       Y 8    
      00111                          T       132,011       Z 9    
      00112                          T       011,035       TAB COLON    
      00113                          T       054,103       COMMA SEMICOLON    
      00114                          T       050,152       OPEN PAREN LESS THAN     
      00115                          T       000,013       NUL EQUALS   
      00116                          T       000,155       NUL GREATER THAN   
      00117                          T       000,156       NUL QUESTION 
      00120                          T       174,106       VERTICAL BAR AT SIGN PR(1966)ASCII   
      00121                          T       135,021       CLOSE BRACKET A    
      00122                          T       134,022       LSLANT B PR(1966)ASCII   
      00123                          T       073,023       SEMICOLON C  
      00124                          T       043,024       NR SIGN D    
      00125                          T       045,025       PERCENT E PR(1966)ASCII  
      00126                          T       100,026       AT F PR(1966)ASCII 
      00127                          T       000,027       LINE FEED G  
      00130                          T       022,030       HLF H  
1            CHARACTER CONVERSION ROUTINE                                        02/05/69 1711.4 PAGE 3     
                  
      00131                          T       024,031       HLR I  
      00132                          T       136,041       CIRCUMFLEX J 
      00133                          T       007,042       BELL K 
      00134                          T       041,043       EXCLAM L     
      00135                          T       000,044       WRU M  
      00136                          T       000,045       HANG UP N    
      00137                          T       000,046       PR OFF O     
      00140                          T       046,047       AMPERSAND P  
      00141                          T       141,050       A Q    
      00142                          T       142,051       B R    
      00143                          T       143,062       C S    
      00144                          T       144,063       D T    
      00145                          T       145,064       E U    
      00146                          T       146,065       F V    
      00147                          T       147,066       G W    
      00150                          T       150,067       H X    
      00151                          T       151,070       I Y    
      00152                          T       017,071       BLACK Z
      00153                          T       016,153       RED OPEN BRA 
      00154                          T       176,102       OVERLINE/TILDE LSLANT PR(1966)ASCII  
      00155                          T       010,101       BS CLOSE BRA 
      00156                          T       015,112       CRLF::// CIRCUMFLEX PR(1966)ASCII    
      00157                          T       042,140       QUOTE UNDERLINE    
      00160                          T       137,160       UNDERLINE GRAVE PR(1966)ASCII  
      00161                          T       152,121       J A    
      00162                          T       153,122       K B    
      00163                          T       154,123       L C    
      00164                          T       155,124       M D    
      00165                          T       156,125       N E    
      00166                          T       157,126       O F    
      00167                          T       160,127       P G    
      00170                          T       161,130       Q G    
      00171                          T       162,131       R I    
      00172                          T       074,141       LESS THAN J  
      00173                          T       133,142       OPEN BRA K   
      00174                          T       000,143       PREFIX L     
      00175                          T       076,144       GREATER THAN M     
      00176                          T       077,145       QUESTION N   
      00177                          T       000,146       NULL O 
      00200                          T       140,147       GRAVE ACCENT P PR(1966)ASCII   
      00201                          T       000,150       LK Q   
      00202                          T       163,151       S R    
      00203                          T       164,162       T S    
      00204                          T       165,163       U T    
      00205                          T       166,164       V U    
      00206                          T       167,165       W V    
      00207                          T       170,166       X W    
      00210                          T       171,167       Y X    
      00211                          T       172,170       Z Y    
      00212                          T       013,171       VT Z   
      00213                          T       173,173       OPEN BRACE OPEN BRACE    
      00214                          T       175,100       CLOSE BRACE VERTICAL BAR PR(1966)ASCII     
      00215                          T       000,174       PR ON CLOSE BRACE  
      00216                          T       000,134       ULK OVERLINE/TILDE PR(1966)ASCII     
      00217                          T       000,057       ALT MODE DEL 
                              *     
1            CHARACTER CONVERSION ROUTINE                                        02/05/69 1711.4 PAGE 4     
                  
                                     END  
                  
        LITERALS  
      00220  000000000177     
1            CHARACTER CONVERSION ROUTINE                                        02/05/69 1711.4 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        221 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         15    XR1     5
         20  TABLE    11,   20
         17  XYZFL     2,    4,   12
          4 ASCTSS     0
          2 TSSASC     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            EXECUTE PNTLIN.(A,N)   PRINTS AS 84A1                               02/05/69 1711.7 PAGE 1     
                  
                       00003         ENTRY   PNTLIN   
                  
        TRANSFER VECTOR 
      00000  665126436721     WRFLXA
                  
            LINKAGE DIRECTOR  
      00001  000000000000     
      00002  474563433145     
                  
      00003  0634 00 4 00060  PNTLIN SXA     XR,4     
      00004  0634 00 1 00061         SXA     XR+1,1   
      00005  0634 00 2 00062         SXA     XR+2,2   
      00006 -0500 00 4 00001         CAL     1,4
      00007  0621 00 0 00021         STA     A  
      00010 -0500 60 4 00002         CAL*    2,4
      00011  0734 00 1 00000         PAX     ,1 
      00012 -0634 00 1 00020         SXD     TXH,1    
      00013  0774 00 1 00000         AXT     0,1
      00014  0774 00 2 00034  LOOP   AXT     28,2     
      00015  0774 00 4 00003         AXT     3,4
      00016 -0754 00 0 00000         ZAC  
      00017  1 00001 1 00020         TXI     *+1,1,1  
      00020  3 00000 1 00032  TXH    TXH     OUT,1,** 
      00021  0560 00 1 00000  A      LDQ     **,1     
      00022 -0773 00 0 00030         RQL     24 
      00023 -0763 00 0 00014         LGL     12 
      00024  2 00001 4 00017         TIX     *-5,4,1  
      00025  0602 00 2 00121         SLW     B+28,2   
      00026  2 00001 2 00015         TIX     *-9,2,1  
      00027  0774 00 2 00000         AXT     0,2
      00030  0634 00 1 00064         SXA     XR1,1    
      00031  0020 00 0 00041         TRA     WRT
      00032  0600 00 0 00064  OUT    STZ     XR1
      00033  3 00005 4 00041         TXH     WRT,4,5  
      00034  0560 00 0 00121         LDQ     =O005700570057 
      00035 -0763 00 0 00014         LGL     12 
      00036  2 00001 4 00035         TIX     *-1,4,1  
      00037  0602 00 2 00121         SLW     B+28,2   
      00040  1 77777 2 00041         TXI     *+1,2,-1 
      00041  0754 00 2 00000  WRT    PXA     ,2 
      00042  0737 00 2 00000         PAC     ,2 
      00043  1 00034 2 00044         TXI     *+1,2,28 
      00044  0774 00 1 00065         AXT     B,1
      00045  0634 00 1 00053  L      SXA     PAR,1    
      00046  0774 00 4 00034         AXT     28,4     
      00047 -0634 00 4 00053         SXD     PAR,4    
      00050  3 00034 2 00052         TXH     *+2,2,28 
      00051 -0634 00 2 00053         SXD     PAR,2    
      00052  0074 00 4 00000         TSX     $WRFLXA,4
      00053  0 00000 0 00000  PAR   
      00054  1 00034 1 00055         TXI     *+1,1,28 
      00055  2 00034 2 00045         TIX     L,2,28   
      00056  0534 00 1 00064         LXA     XR1,1    
      00057  3 00000 1 00014         TXH     LOOP,1,0 
      00060  0774 00 4 00000  XR     AXT     ,4 
      00061  0774 00 1 00000         AXT     ,1 
1            EXECUTE PNTLIN.(A,N)   PRINTS AS 84A1                               02/05/69 1711.7 PAGE 2     
                  
      00062  0774 00 2 00000         AXT     ,2 
      00063  0020 00 4 00001         TRA     1,4
      00064  0 00000 0 00000  XR1   
      00065                   B      BSS     28 
                                     END  
                  
        LITERALS  
      00121  005700570057     
1            EXECUTE PNTLIN.(A,N)   PRINTS AS 84A1                               02/05/69 1711.7 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        122 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         21      A     7
         65      B    25,   37,   44
         45      L    55
         60     XR     3,    4,    5
         32    OUT    20
         53    PAR    45,   47,   51
         20    TXH    12
         41    WRT    31,   33
         64    XR1    30,   32,   56
         14   LOOP    57
          3 PNTLIN     0
          0 WRFLXA    52
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




PERMIT   BCD 09/18/68 2318.4    4865         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   PERMT   MAD            02/07/68    2207.0
-                 
                 ..  EMERGENCY PERMIT COMMAND.                                                         LM00001    
                 ..  J. H. SALTZER, AUGUST, 1965.                                                      LM00002    
                   (MODIFIED BY D. E. OPPERT, SEPT-OCT, 1965)                                          LM00003    
                                                                                                       LM00004    
                 ..  USAGE . . .                                                                       LM00005    
                 ..       PERMIT NAME1 NAME2 MODE PROB PROG                                            LM00006    
                                                                                                       LM00007    
                  NORMAL MODE IS INTEGER                                                          *001 LM00008    
                  DIMENSION VEC(6), BF(432)                                                       *002 LM00009    
                  VECTOR VALUES P = $PERMIT$                                                      *003 LM00010    
                  VECTOR VALUES F = $  FILE$                                                      *004 LM00011    
                  VECTOR VALUES VEC(6) = 777777000005K                                            *005 LM00012    
                  VECTOR VALUES FENCE = 777777777777K                                             *006 LM00013    
                                                                                                       LM00014    
                                                                                                       LM00015    
                 ..  CHECK ARGUMENTS.                                                                  LM00016    
                 ..                                                                                    LM00017    
                  THROUGH GETARG, FOR I = 5, -1, I .L. 1                                          *007 LM00018    
                    VEC(I) = COMARG.(6-I)                                                         *008 LM00019    
      GETARG        WHENEVER VEC(I) .E. FENCE, TRANSFER TO BADARG                                 *009 LM00020    
                  WHENEVER COMARG.(6) .NE. FENCE, TRANSFER TO BADARG                              *010 LM00021    
                                                                                                       LM00022    
                                                                                                       LM00023    
                  FOLLOWING PATCH ALLOWS MODE TO BE EXPRESSED IN LETTERS.                              LM00024    
                  I.E., T, S, R, W, V, L, OR P.                                                        LM00025    
                                                                                                       LM00026    
                  DIMENSION TABLE(6), TBL(6)                                                      *011 LM00027    
                  VECTOR VALUES TABLE = $00000T00000S00000R00000W00000V00000L00000P$              *012 LM00028    
                  VECTOR VALUES TBL   = 1, 2, 4, 64, 128, 256, 4096                               *013 LM00029    
                             T  S  R   W   V    L     P                                                LM00030    
                                                                                                       LM00031    
                                                                                                       LM00032    
                    DETERMINE WHTHR MODE IS NUMERICAL OR ALPHA-CAL                                     LM00033    
                                                                                                       LM00034    
                  DIMENSION TABL(5)                                                               *014 LM00035    
                  VECTOR VALUES TABL = 777777777700K, 777777770077K, 777777007777K                *015 LM00036    
                  VECTOR VALUES TABL(3) = 777700777777K, 770077777777K, 007777777777K             *016 LM00037    
                                                                                                       LM00038    
                                                                                                       LM00039    
                  T2 = VEC(3)                                                                     *017 LM00040    
                  THROUGH PC, FOR I = 0, 6, I .G. 30                                              *018 LM00041    
      PC          WHENEVER((VEC(3).RS.I).A.77K).E.60K,T2=T2.A.TABL(I/6)                           *019 LM00042    
                  WHENEVER ( T2 .A. 707070707070K ) .E. 0, TRANSFER TO PB                         *020 LM00043    
                                                                                                       LM00044    
                  A. H. WHEN MODE IS ALPHA-L                                                           LM00045    
                                                                                                       LM00046    
                  T2 = 0                                                                          *021 LM00047    
                  THROUGH PA, FOR I = 0, 6,  I .G. 30                                             *022 LM00048    
                  THROUGH PD, FOR J = 0, 1,  J .G. 6                                              *023 LM00049    
      PD          WHENEVER((VEC(3).RS.I).A.77K).E.TABLE(J),TRANSFER TO PE                         *024 LM00050    
                  WHENEVER ( (VEC(3) .RS. I) .A. 77K) .E. 60K, TRANSFER TO PA                     *025 LM00051    
                                                                                                       LM00052    
                  PRINT COMMENT $MODE UNACCEPTABLE$                                               *026 LM00053    
                  CHNCOM.(0)                                                                      *027 LM00054    
                                                                                                       LM00055    
      PE          T2 = T2 .V. TBL(J)                                                              *028 LM00056    
      PA          CONTINUE                                                                        *029 LM00057    
                                                                                                       LM00058    
                  VEC(3) = T2 .V. $   000$                                                        *030 LM00059    
                                                                                                       LM00060    
                   END OF PATCH                                                                        LM00061    
                                                                                                       LM00062    
      PB          WHENEVER BCOCT.(VEC(3)) .G. 177K, TRANSFER TO BADARG                            *031 LM00063    
                 ..                                                                                    LM00064    
                 ..ADD PERMISSION.                                                                     LM00065    
                                                                                                       LM00066    
                  TEMP = VEC(3)                                                                   *032 LM00067    
                  WHENEVER VEC(2) .E. $     *$                                                    *033 LM00068    
                    VEC(3) = VEC(2)                                                               *034 LM00069    
                  OTHERWISE                                                                       *035 LM00070    
                    VEC(3) = REPROB.(VEC(2))                                                      *036 LM00071    
                  END OF CONDITIONAL                                                              *037 LM00072    
                                                                                                       LM00073    
                  VEC(2) = VEC(1)                                                                 *038 LM00074    
                  VEC(1) = TEMP                                                                   *039 LM00075    
                  OPEN.($W$, P, F, 120K)                                                          *040 LM00076    
                                                                                                       LM00077    
                   NOTICE THAT PERMT FILE IS                                                           LM00078    
                   PRIVATE AND PROTECTED.                                                              LM00079    
                                                                                                       LM00080    
                  BUFFER.(P, F, BF(432)...432)                                                    *041 LM00081    
                  WRFILE.(P, F, 0, VEC(6)...6)                                                    *042 LM00082    
                  CLOSE.(P,F)                                                                     *043 LM00083    
                  CHNCOM.(0)                                                                      *044 LM00084    
                                                                                                       LM00085    
      BADARG      PRINT COMMENT $PERMIT NAME1 NAME2 MODE PROBNO PROGNO$                           *045 LM00086    
                  CHNCOM.(0)                                                                      *046 LM00087    
                                                                                                       LM00088    
                  END OF PROGRAM                                                                  *047 LM00089    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01247 TRANSFER VECTOR LENGTH  00013 PROGRAM BEGINS    00762
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BADARG 00014   4        GETARG 00013   4        PB     00016   4        P      00705 A 1        TBL    00732 A 1  
      BF     00700 A 1        I      00703   1        PC     00013   4        T2     00706   1        TEMP   00733   1  
      FENCE  00701 A 1        J      00704   1        PD     00013   4        TABLE  00715 A 1        VEC    00742 A 1  
      F      00702 A 1        PA     00015   4        PE     00017   4        TABL   00723 A 1                          
0FUNCTION DICTIONARY    
      BCOCT  00000   1        BUFFER 00001   1        CHNCOM 00002   1        CLOSE  00003   1        COMARG 00004   1  
      EXIT   00005   1        .PCOMT 00006   1        .SETUP 00007   1        OPEN   00010   1        REPROB 00011   1  
      WRFILE 00012   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00754 +000000000660     00752 +000000000120     00760 -266060606060     00757 -206060606054     00753 +000000000177    
 00756 -206060000000     00761 -307070707070     00750 +000000000060     00751 +000000000077     00747 +000000000036    
 00743 +000000000000     00746 +000000000006     00745 +000000000005     00744 +000000000001     00755 +233000000000    
0STATEMENT DICTIONARY   
 00014 TXL -301241001230       00015 TXL -301155001154       00016 TXL -301166001160       00017 TXL -301154001150      
0PROGRAM    
                 NORMAL MODE IS INTEGER                                             001  LM00008
                 DIMENSION VEC(6), BF(432)                                          002  LM00009
                 VECTOR VALUES P = $PERMIT$                                         003  LM00010
 00762 TSX +0 07400 4 00007    00705     -0 72551 4 43163                                                               
                 VECTOR VALUES F = $  FILE$                                         004  LM00011
 00702     -2 06026 3 14325                                                                                             
                 VECTOR VALUES VEC(6) = 777777000005K                               005  LM00012
 00734     -3 77777 0 00005                                                                                             
                 VECTOR VALUES FENCE = 777777777777K                                006  LM00013
 00701     -3 77777 7 77777                                                                                             
                 THROUGH GETARG, FOR I = 5, -1, I .L. 1                             007  LM00018
 00763 CLA +0 50000 0 00745    00764 STO +0 60100 0 00703    00765 TRA +0 02000 0 00771    00766 CLS +0 50200 0 00744   
 00767 ADD +0 40000 0 00703    00770 STO +0 60100 0 00703    00771 CLA +0 50000 0 00703    00772 SUB +0 40200 0 00744   
 00773 TZE +0 10000 0 00775    00774 TMI -0 12000 0 01012                                                               
                   VEC(I) = COMARG.(6-I)                                            008  LM00019
 00775 CLA +0 50000 0 00746    00776 SUB +0 40200 0 00703    00777 STO +0 60100 0 01244    01000 TSX +0 07400 4 00004   
 01001 TXH +3 00000 0 01244    01002 LXA +0 53400 1 00703    01003 STO +0 60100 1 00742                                 
      GETARG       WHENEVER VEC(I) .E. FENCE, TRANSFER TO BADARG                    009  LM00020
 01004 LXA +0 53400 1 00703    01005 CLA +0 50000 1 00742    01006 SUB +0 40200 0 00701    01007 TNZ -0 10000 0 01011   
 01010 TRA +0 02000 0 00014    01011 TRA +0 02000 0 00766                                                               
                 WHENEVER COMARG.(6) .NE. FENCE, TRANSFER TO BADARG                 010  LM00021
 01012 TSX +0 07400 4 00004    01013 TXH +3 00000 0 00746    01014 SUB +0 40200 0 00701    01015 TZE +0 10000 0 01017   
 01016 TRA +0 02000 0 00014                                                                                             
                 D'N TABLE(6), TBL(6)                                               011  LM00027
                 V'S TABLE = $00000T00000S00000R00000W00000V00000L00000P$           012  LM00028
 00707     +0 00000 0 00047    00710     +0 00000 0 00043    00711     +0 00000 0 00065    00712     +0 00000 0 00066   
 00713     +0 00000 0 00051    00714     +0 00000 0 00062    00715     +0 00000 0 00063                                 
                 V'S TBL   = 1, 2, 4, 64, 128, 256, 4096                            013  LM00029
 00724     +0 00000 0 10000    00725     +0 00000 0 00400    00726     +0 00000 0 00200    00727     +0 00000 0 00100   
 00730     +0 00000 0 00004    00731     +0 00000 0 00002    00732     +0 00000 0 00001                                 
                 D'N TABL(5)                                                        014  LM00035
                 V'S TABL = 777777777700K, 777777770077K, 777777007777K             015  LM00036
 00721     -3 77777 0 07777    00722     -3 77777 7 70077    00723     -3 77777 7 77700                                 
                 V'S TABL(3) = 777700777777K, 770077777777K, 007777777777K          016  LM00037
 00716     +0 07777 7 77777    00717     -3 70077 7 77777    00720     -3 77700 7 77777                                 
                 T2 = VEC(3)                                                        017  LM00040
 01017 CLA +0 50000 0 00737    01020 STO +0 60100 0 00706                                                               
                 T'H PC, FOR I = 0, 6, I .G. 30                                     018  LM00041
 01021 CLA +0 50000 0 00743    01022 STO +0 60100 0 00703    01023 TRA +0 02000 0 01027    01024 CLA +0 50000 0 00703   
 01025 ADD +0 40000 0 00746    01026 STO +0 60100 0 00703    01027 CLA +0 50000 0 00703    01030 SUB +0 40200 0 00747   
 01031 TZE +0 10000 0 01033    01032 TPL +0 12000 0 01056                                                               
      PC         W'R((VEC(3).RS.I).A.77K).E.60K,T2=T2.A.TABL(I/6)                   019  LM00042
 01033 CAL -0 50000 0 00703    01034 STA +0 62100 0 01036    01035 CAL -0 50000 0 00737    01036 LGR -0 76500 0 00000   
 01037 ANA -0 32000 0 00751    01040 SLW +0 60200 0 01244    01041 CLA +0 50000 0 01244    01042 SUB +0 40200 0 00750   
 01043 TNZ -0 10000 0 01055    01044 LDQ +0 56000 0 00703    01045 PXD -0 75400 0 00000    01046 LLS +0 76300 0 00000   
 01047 DVP +0 22100 0 00746    01050 XCA +0 13100 0 00000    01051 PAX +0 73400 2 00000    01052 CAL -0 50000 0 00706   
 01053 ANA -0 32000 2 00723    01054 SLW +0 60200 0 00706    01055 TRA +0 02000 0 01024                                 
                 W'R ( T2 .A. 707070707070K ) .E. 0, T'O PB                         020  LM00043
 01056 CAL -0 50000 0 00706    01057 ANA -0 32000 0 00761    01060 SLW +0 60200 0 01244    01061 CLA +0 50000 0 01244   
 01062 SUB +0 40200 0 00743    01063 TNZ -0 10000 0 01065    01064 TRA +0 02000 0 00016                                 
                 T2 = 0                                                             021  LM00047
 01065 CLA +0 50000 0 00743    01066 STO +0 60100 0 00706                                                               
                 T'H PA, FOR I = 0, 6,  I .G. 30                                    022  LM00048
 01067 CLA +0 50000 0 00743    01070 STO +0 60100 0 00703    01071 TRA +0 02000 0 01075    01072 CLA +0 50000 0 00703   
 01073 ADD +0 40000 0 00746    01074 STO +0 60100 0 00703    01075 CLA +0 50000 0 00703    01076 SUB +0 40200 0 00747   
 01077 TZE +0 10000 0 01101    01100 TPL +0 12000 0 01155                                                               
                 T'H PD, FOR J = 0, 1,  J .G. 6                                     023  LM00049
 01101 CLA +0 50000 0 00743    01102 STO +0 60100 0 00704    01103 TRA +0 02000 0 01107    01104 CLA +0 50000 0 00704   
 01105 ADD +0 40000 0 00744    01106 STO +0 60100 0 00704    01107 CLA +0 50000 0 00704    01110 SUB +0 40200 0 00746   
 01111 TZE +0 10000 0 01113    01112 TPL +0 12000 0 01127                                                               
      PD         W'R((VEC(3).RS.I).A.77K).E.TABLE(J),T'O PE                         024  LM00050
 01113 CAL -0 50000 0 00703    01114 STA +0 62100 0 01116    01115 CAL -0 50000 0 00737    01116 LGR -0 76500 0 00000   
 01117 ANA -0 32000 0 00751    01120 LXA +0 53400 2 00704    01121 SLW +0 60200 0 01244    01122 CLA +0 50000 0 01244   
 01123 SUB +0 40200 2 00715    01124 TNZ -0 10000 0 01126    01125 TRA +0 02000 0 00017    01126 TRA +0 02000 0 01104   
                 W'R ( (VEC(3) .RS. I) .A. 77K) .E. 60K, T'O PA                     025  LM00051
 01127 CAL -0 50000 0 00703    01130 STA +0 62100 0 01132    01131 CAL -0 50000 0 00737    01132 LGR -0 76500 0 00000   
 01133 ANA -0 32000 0 00751    01134 SLW +0 60200 0 01244    01135 CLA +0 50000 0 01244    01136 SUB +0 40200 0 00750   
 01137 TNZ -0 10000 0 01141    01140 TRA +0 02000 0 00015                                                               
                 PRINT COMMENT $MODE UNACCEPTABLE$                                  026  LM00053
 01141 TSX +0 07400 4 00006    01142     +0 00000 0 00003    01143     -0 44624 2 56064    01144     -0 52123 2 32547   
 01145     -2 32122 4 32560                                                                                             
                 CHNCOM.(0)                                                         027  LM00054
 01146 TSX +0 07400 4 00002    01147 TXH +3 00000 0 00743                                                               
      PE         T2 = T2 .V. TBL(J)                                                 028  LM00056
 01150 LXA +0 53400 2 00704    01151 CAL -0 50000 0 00706    01152 ORA -0 50100 2 00732    01153 SLW +0 60200 0 00706   
      PA         CONTINUE                                                           029  LM00057
 01154 TRA +0 02000 0 01072                                                                                             
                 VEC(3) = T2 .V. $   000$                                           030  LM00059
 01155 CAL -0 50000 0 00706    01156 ORA -0 50100 0 00756    01157 SLW +0 60200 0 00737                                 
      PB         WHENEVER BCOCT.(VEC(3)) .G. 177K, TRANSFER TO BADARG               031  LM00063
 01160 TSX +0 07400 4 00000    01161 TXH +3 00000 0 00737    01162 SUB +0 40200 0 00753    01163 TZE +0 10000 0 01166   
 01164 TMI -0 12000 0 01166    01165 TRA +0 02000 0 00014                                                               
                 TEMP = VEC(3)                                                      032  LM00067
 01166 CLA +0 50000 0 00737    01167 STO +0 60100 0 00733                                                               
                 WHENEVER VEC(2) .E. $     *$                                       033  LM00068
 01170 CLA +0 50000 0 00740    01171 SUB +0 40200 0 00757    01172 TNZ -0 10000 0 01176                                 
                   VEC(3) = VEC(2)                                                  034  LM00069
 01173 CLA +0 50000 0 00740    01174 STO +0 60100 0 00737                                                               
                 OTHERWISE                                                          035  LM00070
 01175 TRA +0 02000 0 01201                                                                                             
                   VEC(3) = REPROB.(VEC(2))                                         036  LM00071
 01176 TSX +0 07400 4 00011    01177 TXH +3 00000 0 00740    01200 STO +0 60100 0 00737                                 
                 END OF CONDITIONAL                                                 037  LM00072
                 VEC(2) = VEC(1)                                                    038  LM00074
 01201 CLA +0 50000 0 00741    01202 STO +0 60100 0 00740                                                               
                 VEC(1) = TEMP                                                      039  LM00075
 01203 CLA +0 50000 0 00733    01204 STO +0 60100 0 00741                                                               
                 OPEN.($W$, P, F, 120K)                                             040  LM00076
 01205 TSX +0 07400 4 00010    01206 TXH +3 00000 0 00760    01207 TXH +3 00000 0 00705    01210 TXH +3 00000 0 00702   
 01211 TXH +3 00000 0 00752                                                                                             
                 BUFFER.(P, F, BF(432)...432)                                       041  LM00081
 01212 TSX +0 07400 4 00001    01213 TXH +3 00000 0 00705    01214 TXH +3 00000 0 00702    01215 TIX +2 00754 0 00020   
                 WRFILE.(P, F, 0, VEC(6)...6)                                       042  LM00082
 01216 TSX +0 07400 4 00012    01217 TXH +3 00000 0 00705    01220 TXH +3 00000 0 00702    01221 TXH +3 00000 0 00743   
 01222 TIX +2 00746 0 00734                                                                                             
                 CLOSE.(P,F)                                                        043  LM00083
 01223 TSX +0 07400 4 00003    01224 TXH +3 00000 0 00705    01225 TXH +3 00000 0 00702                                 
                 CHNCOM.(0)                                                         044  LM00084
 01226 TSX +0 07400 4 00002    01227 TXH +3 00000 0 00743                                                               
      BADARG     PRINT COMMENT $PERMIT NAME1 NAME2 MODE PROBNO PROGNO$              045  LM00086
 01230 TSX +0 07400 4 00006    01231     +0 00000 0 00007    01232     -0 72551 4 43163    01233     -2 04521 4 42501   
 01234     -2 04521 4 42502    01235     -2 04446 2 42560    01236     -0 75146 2 24546    01237     -2 04751 4 62745   
 01240     -0 66060 6 06060                                                                                             
                 CHNCOM.(0)                                                         046  LM00087
 01241 TSX +0 07400 4 00002    01242 TXH +3 00000 0 00743                                                               
                 END OF PROGRAM                                                     047  LM00089
 01243 TSX +0 07400 4 00005                                                                                             
1                                                                                                PAGE 1     
                           FILE NAME -- REPRB FAP                                   
                  
                  
                              *     
                       00002         ENTRY   REPROB        REFORMAT PROBLEM NUMBER. 
                              *      J.H. SALTZER     
                              *      (MAINTAINED BY D.E. OPPERT)  
                              *      (SEPT - OCT, 1965)     
                              *     
                              *     
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  512547514622     
                  
      00002  0560 60 4 00001  REPROB LDQ*    1,4           GET PROBLEM NUMBER WITH LEADING BLANKS.    
      00003  0774 00 1 00000         AXT     0,1           COUNT BLANKS.
      00004 -0754 00 0 00000  LP     ZAC                   CLEAR FOR COMPARISON.    
      00005 -0763 00 0 00006         LGL     6             GET NEXT CHARACTER.
      00006 -0340 00 0 00024         LAS     =H00000       COMPARE WITH ONE BLANK.  
      00007  0020 00 0 00011         TRA     FND           NOT BLANK, GO.     
      00010  1 00001 1 00004         TXI     LP,1,1        YES, COUNT IT.     
      00011 -0501 00 0 00025  FND    ORA     =H0000 0      NON-BLANK FOUND, ADD PRECEDING BLANK.
      00012 -2 00001 1 00015  LOOP   TNX     DONE,1,1      SEE HOW MANY ZEROS TO ADD.     
      00013  0767 00 0 00006         ALS     6             MOVE IN A ZERO.    
      00014  0020 00 0 00012         TRA     LOOP     
      00015  0140 00 0 00016  DONE   TOV     *+1           TURN OFF OVERFLOW INDICATOR.   
      00016 -0763 00 0 00006         LGL     6  
      00017 -0140 00 0 00016         TNO     *-1           ..     
      00020  0602 00 0 00023         SLW     TEMP     
      00021  0500 00 0 00023         CLA     TEMP     
      00022  0020 00 4 00001         TRA     1,4           RETURN TO MAD PROGRAM    
      00023  0 00000 0 00000  TEMP                         TEMPORARY STORAGE FOR RESULT.  
                                     END  
                  
        LITERALS  
      00024  000000000060     
      00025  000000006000     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         26 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          4     LP    10
         11    FND     7
         15   DONE    12
         12   LOOP    14
         23   TEMP    20,   21
          2 REPROB     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




 PINFO   BCD 05/12/69 2020.2    3914         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   PINFO   MAD            03/18/69    1456.5
-                 
                  PINFO COMMAND - PETER R. BOS  11/67                                                  LM00001    
                                                                                                       LM00002    
                  USAGE...                                                                             LM00003    
                     PINFO NAME1 -NAME2-                                                               LM00004    
                  PINFO WILL SWITCH TO THE PUBLIC FILE AND PRINT                                       LM00005    
                  FILE NAME1 NAME2. DEFAULT FOR NAME2 IS 'INFO'.                                       LM00006    
                                                                                                       LM00007    
                  NORMAL MODE IS INTEGER                                                          *001 LM00008    
                  DIMENSION BUF1(0), BUF2(0), LINE(15)                                            *002 LM00009    
                  VECTOR VALUES FNS=777777777777K                                                 *003 LM00010    
                                                                                                       LM00011    
                  DEFINE UNARY OPERATOR .CAL., PRECEDENCE SAME AS =                               *004 LM00012    
                  MODE STRUCTURE .CAL.1 TO 1                                                      *005 LM00013    
             CAL      B                                                                           *006 LM00014    
             OUT      LAC                                                                         *007 LM00015    
             END                                                                                  *008 LM00016    
                  DEFINE UNARY OPERATOR .LDQ., PRECEDENCE SAME AS =                               *009 LM00017    
                  MODE STRUCTURE .LDQ.1 TO 1                                                      *010 LM00018    
             LDQ      B                                                                           *011 LM00019    
             OUT      MQ                                                                          *012 LM00020    
             END                                                                                  *013 LM00021    
                                                                                                       LM00022    
                  SETBRK.(CHN)                                                                    *014 LM00023    
                  NM1=COMARG.(1)                                                                  *015 LM00024    
                  WHENEVER NM1.E.FNS                                                              *016 LM00025    
                    PRINT COMMENT $'PINFO' NAME1 -NAME2-$                                         *017 LM00026    
                    PRINT COMMENT $IF NAME2 OMITTED, INFO ASSUMED$                                *018 LM00027    
                    CHNCOM.(0)                                                                    *019 LM00028    
                  END OF CONDITIONAL                                                              *020 LM00029    
                  TMP=COMARG.(2)                                                                  *021 LM00030    
                  WHENEVER TMP.NE.FNS, NM2=TMP                                                    *022 LM00031    
                  VECTOR VALUES NM2=$  INFO$                                                      *023 LM00032    
                                                                                                       LM00033    
                  TSSFIL.                                                                         *024 LM00034    
                  GETBUF.(BUF1,431)                                                               *025 LM00035    
                  GETBUF.(BUF2,431)                                                               *026 LM00036    
                  BFOPEN.($R$,NM1,NM2,BUF1(BUF1+431),BUF2(BUF2+431),-0,ERR)                       *027 LM00037    
                  BFREAD.(NM1,NM2,LMARK...1,EOF,TMP,ERR)                                          *028 LM00038    
                  WHENEVER LMARK.A.777777K6.E.777777K6, TRANSFER TO RDLINE                        *029 LM00039    
                  LINE(14)=LMARK                                                                  *030 LM00040    
                  BFREAD.(NM1,NM2,LINE(13)...13,EOF,TMP,ERR)                                      *031 LM00041    
                  TRANSFER TO PCARD                                                               *032 LM00042    
                                                                                                       LM00043    
      RDCARD      BFREAD.(NM1,NM2,LINE(14)...14,EOF,TMP,ERR)                                      *033 LM00044    
      PCARD       WRFX.(LINE(14)...12)                                                            *034 LM00045    
                  TRANSFER TO RDCARD                                                              *035 LM00046    
      RDLM        BFREAD.(NM1,NM2,LMARK...1,EOF,TMP,ERR)                                          *036 LM00047    
                  WHENEVER LMARK.A.777777K6.NE.777777K6, TRANSFER TO RDLM                         *037 LM00048    
      RDLINE      LMARK=LMARK.A.17K                                                               *038 LM00049    
                  BFREAD.(NM1,NM2,LINE(LMARK)...LMARK,EOF,TMP,ERR)                                *039 LM00050    
                  WRFX.(LINE(LMARK)...LMARK)                                                      *040 LM00051    
                  TRANSFER TO RDLM                                                                *041 LM00052    
                                                                                                       LM00053    
      EOF         BFCLOS.(NM1,NM2,ERR)                                                            *042 LM00054    
      CHN         USRFIL.                                                                         *043 LM00055    
                  CHNCOM.(0)                                                                      *044 LM00056    
                                                                                                       LM00057    
      ERR         .CAL.$PRNTER$                                                                   *045 LM00058    
                  .LDQ.400000000071K                                                              *046 LM00059    
                  NEXCOM.                                                                         *047 LM00060    
                                                                                                       LM00061    
                  END OF PROGRAM                                                                  *048 LM00062    
                                         MODE STRUCTURE .CAL.1 TO 1           005  LM00013
 (THE NUMERIC FORM OF THE OPERATOR-MODE ARGUMENT IS    11101 )    
                                         MODE STRUCTURE .LDQ.1 TO 1           010  LM00018
 (THE NUMERIC FORM OF THE OPERATOR-MODE ARGUMENT IS    11201 )    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00310 TRANSFER VECTOR LENGTH  00016 PROGRAM BEGINS    00072
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BUF1   00026 A 1        EOF    00020   4        LINE   00050 A 1        NM2    00053 A 1        RDLINE 00024   4  
      BUF2   00027 A 1        ERR    00021   4        LMARK  00051   1        PCARD  00022   4        RDLM   00025   4  
      CHN    00017   4        FNS    00030 A 1        NM1    00052   1        RDCARD 00023   4        TMP    00054   1  
0FUNCTION DICTIONARY    
      BFCLOS 00000   1        BFOPEN 00001   1        BFREAD 00002   1        CHNCOM 00003   1        COMARG 00004   1  
      EXIT   00005   1        GETBUF 00006   1        .PCOMT 00007   1        .SETUP 00010   1        NEXCOM 00011   1  
      SETBRK 00012   1        TSSFIL 00013   1        USRFIL 00014   1        WRFX   00015   1                          
0ABSOLUTE CONSTANTS     
 00066 -000000000071     00067 -075145632551     00063 +000000000017     00060 +000000000014     00062 +000000000016    
 00061 +000000000015     00071 -377777000000     00070 -116060606060     00064 +000000000657     00057 +000000000002    
 00055 +000000000000     00056 +000000000001     00065 +233000000000                                                    
0STATEMENT DICTIONARY   
 00017 TXL -300277000276       00020 TXL -300276000272       00021 TXL -300302000301       00022 TXL -300226000224      
 00023 TXL -300224000215       00024 TXL -300250000245       00025 TXL -300236000227                                    
0PROGRAM    
                 N'S INTEGER                                                        001  LM00008
                 D'N BUF1(0), BUF2(0), LINE(15)                                     002  LM00009
                 V'S FNS=777777777777K                                              003  LM00010
 00072 TSX +0 07400 4 00010    00030     -3 77777 7 77777                                                               
                 DEFINE UNARY OPERATOR .CAL., PRECEDENCE SAME AS =                  004  LM00012
                 MODE STRUCTURE .CAL.1 TO 1                                         005  LM00013
                 DEFINE UNARY OPERATOR .LDQ., PRECEDENCE SAME AS =                  009  LM00017
                 MODE STRUCTURE .LDQ.1 TO 1                                         010  LM00018
                 SETBRK.(CHN)                                                       014  LM00023
 00073 TSX +0 07400 4 00012    00074 TXH +3 00000 0 00017                                                               
                 NM1=COMARG.(1)                                                     015  LM00024
 00075 TSX +0 07400 4 00004    00076 TXH +3 00000 0 00056    00077 STO +0 60100 0 00052                                 
                 W'R NM1.E.FNS                                                      016  LM00025
 00100 CLA +0 50000 0 00052    00101 SUB +0 40200 0 00030    00102 TNZ -0 10000 0 00122                                 
                   PRINT COMMENT $'PINFO' NAME1 -NAME2-$                            017  LM00026
 00103 TSX +0 07400 4 00007    00104     +0 00000 0 00004    00105     +1 44731 4 52646    00106     +1 46045 2 14425   
 00107     +0 16040 4 52144    00110     +2 50240 6 06060                                                               
                   PRINT COMMENT $IF NAME2 OMITTED, INFO ASSUMED$                   018  LM00027
 00111 TSX +0 07400 4 00007    00112     +0 00000 0 00005    00113     +3 12660 4 52144    00114     +2 50260 4 64431   
 00115     -2 36325 2 47360    00116     +3 14526 4 66021    00117     -2 26264 4 42524                                 
                   CHNCOM.(0)                                                       019  LM00028
 00120 TSX +0 07400 4 00003    00121 TXH +3 00000 0 00055                                                               
                 E'L                                                                020  LM00029
                 TMP=COMARG.(2)                                                     021  LM00030
 00122 TSX +0 07400 4 00004    00123 TXH +3 00000 0 00057    00124 STO +0 60100 0 00054                                 
                 W'R TMP.NE.FNS, NM2=TMP                                            022  LM00031
 00125 CLA +0 50000 0 00054    00126 SUB +0 40200 0 00030    00127 TZE +0 10000 0 00132    00130 CLA +0 50000 0 00054   
 00131 STO +0 60100 0 00053                                                                                             
                 V'S NM2=$  INFO$                                                   023  LM00032
 00053     -2 06031 4 52646                                                                                             
                 TSSFIL.                                                            024  LM00034
 00132 TSX +0 07400 4 00013                                                                                             
                 GETBUF.(BUF1,431)                                                  025  LM00035
 00133 TSX +0 07400 4 00006    00134 TXH +3 00000 0 00026    00135 TXH +3 00000 0 00064                                 
                 GETBUF.(BUF2,431)                                                  026  LM00036
 00136 TSX +0 07400 4 00006    00137 TXH +3 00000 0 00027    00140 TXH +3 00000 0 00064                                 
                 BFOPEN.($R$,NM1,NM2,BUF1(BUF1+431),BUF2(BUF2+431),-0,ERR)          027  LM00037
 00141 CLS +0 50200 0 00055    00142 STO +0 60100 0 00305    00143 CLA +0 50000 0 00027    00144 ADD +0 40000 0 00064   
 00145 SUB +0 40200 0 00146    00146 TXH +3 00000 0 00027    00147 STA +0 62100 0 00162    00150 CLA +0 50000 0 00026   
 00151 ADD +0 40000 0 00064    00152 SUB +0 40200 0 00153    00153 TXH +3 00000 0 00026    00154 STA +0 62100 0 00161   
 00155 TSX +0 07400 4 00001    00156 TXH +3 00000 0 00070    00157 TXH +3 00000 0 00052    00160 TXH +3 00000 0 00053   
 00161 TXH +3 00000 0 00000    00162 TXH +3 00000 0 00000    00163 TXH +3 00000 0 00305    00164 TXH +3 00000 0 00021   
                 BFREAD.(NM1,NM2,LMARK...1,EOF,TMP,ERR)                             028  LM00038
 00165 TSX +0 07400 4 00002    00166 TXH +3 00000 0 00052    00167 TXH +3 00000 0 00053    00170 TIX +2 00056 0 00051   
 00171 TXH +3 00000 0 00020    00172 TXH +3 00000 0 00054    00173 TXH +3 00000 0 00021                                 
                 W'R LMARK.A.777777K6.E.777777K6, T'O RDLINE                        029  LM00039
 00174 CAL -0 50000 0 00051    00175 ANA -0 32000 0 00071    00176 SLW +0 60200 0 00305    00177 CLA +0 50000 0 00305   
 00200 SUB +0 40200 0 00071    00201 TNZ -0 10000 0 00203    00202 TRA +0 02000 0 00024                                 
                 LINE(14)=LMARK                                                     030  LM00040
 00203 CLA +0 50000 0 00051    00204 STO +0 60100 0 00032                                                               
                 BFREAD.(NM1,NM2,LINE(13)...13,EOF,TMP,ERR)                         031  LM00041
 00205 TSX +0 07400 4 00002    00206 TXH +3 00000 0 00052    00207 TXH +3 00000 0 00053    00210 TIX +2 00061 0 00033   
 00211 TXH +3 00000 0 00020    00212 TXH +3 00000 0 00054    00213 TXH +3 00000 0 00021                                 
                 T'O PCARD                                                          032  LM00042
 00214 TRA +0 02000 0 00022                                                                                             
      RDCARD     BFREAD.(NM1,NM2,LINE(14)...14,EOF,TMP,ERR)                         033  LM00044
 00215 TSX +0 07400 4 00002    00216 TXH +3 00000 0 00052    00217 TXH +3 00000 0 00053    00220 TIX +2 00062 0 00032   
 00221 TXH +3 00000 0 00020    00222 TXH +3 00000 0 00054    00223 TXH +3 00000 0 00021                                 
      PCARD      WRFX.(LINE(14)...12)                                               034  LM00045
 00224 TSX +0 07400 4 00015    00225 TIX +2 00060 0 00032                                                               
                 T'O RDCARD                                                         035  LM00046
 00226 TRA +0 02000 0 00023                                                                                             
      RDLM       BFREAD.(NM1,NM2,LMARK...1,EOF,TMP,ERR)                             036  LM00047
 00227 TSX +0 07400 4 00002    00230 TXH +3 00000 0 00052    00231 TXH +3 00000 0 00053    00232 TIX +2 00056 0 00051   
 00233 TXH +3 00000 0 00020    00234 TXH +3 00000 0 00054    00235 TXH +3 00000 0 00021                                 
                 W'R LMARK.A.777777K6.NE.777777K6, T'O RDLM                         037  LM00048
 00236 CAL -0 50000 0 00051    00237 ANA -0 32000 0 00071    00240 SLW +0 60200 0 00305    00241 CLA +0 50000 0 00305   
 00242 SUB +0 40200 0 00071    00243 TZE +0 10000 0 00245    00244 TRA +0 02000 0 00025                                 
      RDLINE     LMARK=LMARK.A.17K                                                  038  LM00049
 00245 CAL -0 50000 0 00051    00246 ANA -0 32000 0 00063    00247 SLW +0 60200 0 00051                                 
                 BFREAD.(NM1,NM2,LINE(LMARK)...LMARK,EOF,TMP,ERR)                   039  LM00050
 00250 CLA +0 50000 0 00051    00251 SUB +0 40200 0 00252    00252 TXH +3 00000 0 00050    00253 STA +0 62100 0 00257   
 00254 TSX +0 07400 4 00002    00255 TXH +3 00000 0 00052    00256 TXH +3 00000 0 00053    00257 TIX +2 00051 0 00000   
 00260 TXH +3 00000 0 00020    00261 TXH +3 00000 0 00054    00262 TXH +3 00000 0 00021                                 
                 WRFX.(LINE(LMARK)...LMARK)                                         040  LM00051
 00263 CLA +0 50000 0 00051    00264 SUB +0 40200 0 00265    00265 TXH +3 00000 0 00050    00266 STA +0 62100 0 00270   
 00267 TSX +0 07400 4 00015    00270 TIX +2 00051 0 00000                                                               
                 T'O RDLM                                                           041  LM00052
 00271 TRA +0 02000 0 00025                                                                                             
      EOF        BFCLOS.(NM1,NM2,ERR)                                               042  LM00054
 00272 TSX +0 07400 4 00000    00273 TXH +3 00000 0 00052    00274 TXH +3 00000 0 00053    00275 TXH +3 00000 0 00021   
      CHN        USRFIL.                                                            043  LM00055
 00276 TSX +0 07400 4 00014                                                                                             
                 CHNCOM.(0)                                                         044  LM00056
 00277 TSX +0 07400 4 00003    00300 TXH +3 00000 0 00055                                                               
      ERR        .CAL.$PRNTER$                                                      045  LM00058
 00301 CAL -0 50000 0 00067                                                                                             
                 .LDQ.400000000071K                                                 046  LM00059
 00302 LDQ +0 56000 0 00066                                                                                             
                 NEXCOM.                                                            047  LM00060
 00303 TSX +0 07400 4 00011                                                                                             
                 END OF PROGRAM                                                     048  LM00062
 00304 TSX +0 07400 4 00005                                                                                             
1            WRFX., WRFXA., RDFX., RDFXA.- MAD CALLS TO WRFLX, ETC.              03/18/69 1456.6 PAGE 1     
                           PETER R. BOS --- AUGUST 1967                             
                  
                                     PCC     ON 
                                     NOLNK
                       00004         ENTRY   WRFX     
                       00006         ENTRY   WRFXA    
                       00010         ENTRY   RDFX     
                       00012         ENTRY   RDFXA    
                                     LBL     WRFX     
                                     PCC     OFF
                  
                  
                                             ALLOW MAD CALLS FOR CONSOLE I/O. 
                  
                  
        TRANSFER VECTOR 
      00000  665126436760     WRFLX 
      00001  665126436721     WRFLXA
      00002  512426436760     RDFLX 
      00003  512426436721     RDFLXA
                  
      00004 -0500 00 0 00000  WRFX   CAL     $WRFLX   
      00005  0020 00 0 00013         TRA     GO 
      00006 -0500 00 0 00001  WRFXA  CAL     $WRFLXA  
      00007  0020 00 0 00013         TRA     GO 
      00010 -0500 00 0 00002  RDFX   CAL     $RDFLX   
      00011  0020 00 0 00013         TRA     GO 
      00012 -0500 00 0 00003  RDFXA  CAL     $RDFLXA  
      00013  0621 00 0 00023  GO     STA     TSX
      00014  0634 00 4 00025         SXA     FX4,4    
                  
      00015 -0500 00 4 00001         CAL     1,4           PICK UP A(N)...N FROM MAD.     
      00016  0621 00 0 00024         STA     WR 
      00017 -0737 00 4 00000         PDC     0,4           GET COUNT.   
      00020 -0500 00 4 00000         CAL     0,4           ..     
      00021  0734 00 4 00000         PAX     0,4           ..     
      00022 -0634 00 4 00024         SXD     WR,4          ..     
      00023  0074 00 4 00000  TSX    TSX     -,4
      00024  0 00000 0 00000  WR     PZE     -,0,-    
                  
      00025  0774 00 4 00000  FX4    AXT     -,4
      00026  0020 00 4 00001         TRA     1,4
                  
                                     END  
1            WRFX., WRFXA., RDFX., RDFXA.- MAD CALLS TO WRFLX, ETC.              03/18/69 1456.6 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         27 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         13     GO     5,    7,   11
         24     WR    16,   22
         25    FX4    14
         23    TSX    13
         10   RDFX     0
          4   WRFX     0
          2  RDFLX    10
         12  RDFXA     0
          0  WRFLX     4
          6  WRFXA     0
          3 RDFLXA    12
          1 WRFLXA     6
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




 PLOAD   BCD 09/18/68 2318.4   25611         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  PBLOAD   MAD            02/07/68    2215.9
-                 
                                                                                                       LM00001    
                    PRELOD NAME1 TYPE -COMB- -NOLIST-                                                  LM00002    
                      WHERE TYPE IS EITHER 'NCLOAD' OR 'VLOAD' OR NOTHING                              LM00003    
                                                                                                       LM00004    
                    CHECKS NAME1 LOAD TO SEE IF IT WILL LOAD                                           LM00005    
                    SUCCESSFULLY.  CREATES A LINE MARKED                                               LM00006    
                    FILE, NAME1 STOMAP, WHICH INCLUDES ERROR                                           LM00007    
                    COMMENTS IF ANY, CHECKS FOR MISSING FILES,                                         LM00008    
                    MISSING ENTRY POINTS, DUPLICATED ENTRY POINTS,                                     LM00009    
                    AND CORE OVERLAP.                                                                  LM00010    
                                                                                                       LM00011    
                  NORMAL MODE IS INTEGER                                                          *001 LM00012    
                  DIMENSION BUFF1(432),BUFF2(432),A(14),PROG(28),TVARAY(4000)                     *002 LM00013    
                  DIMENSION EPARAY(9600,DIM),MFARAY(100),MEARAY(600),MULT(200)                    *003 LM00014    
                  DIMENSION LINE(33),FILNAM(2),BUFF3(432),TV1(8000,DTV)                           *004 LM00015    
                  EQUIVALENCE (FILNAM(0),N1),(FILNAM(1),NA2)                                      *005 LM00016    
                  VECTOR VALUES BL = 432                                                          *006 LM00017    
                  VECTOR VALUES BLANK3 = $                  $,777777000003K                       *007 LM00018    
                  VECTOR VALUES DIFC=$TOTAL LOCATIONS NOT USED      $,0,$ DECIMAL$,               *008 LM00019    
                1 777777777777K                                                                   *008 LM00020    
                  VECTOR VALUES DIM = 2,17,16                                                     *009 LM00021    
                  VECTOR VALUES DTV = 2,3,2                                                       *010 LM00022    
                  VECTOR VALUES FENCE = 777777777777K                                             *011 LM00023    
                  VECTOR VALUES HEAD = 777777000013K,$0            NAME  T.V. ORGIN LENTH         *012 LM00024    
                1  COMMON      CROSS REFERENCE$                                                   *012 LM00025    
                  VECTOR VALUES HPC = $HIGHEST PROGRAM LOCATION      $,0,777777777777K            *013 LM00026    
                  VECTOR VALUES ICOMB = 0                                                         *014 LM00027    
                  VECTOR VALUES ILIST = 0                                                         *015 LM00028    
                  VECTOR VALUES JE = 0                                                            *016 LM00029    
                  VECTOR VALUES JT = -50                                                          *017 LM00030    
                  VECTOR VALUES LCOM = 77777K                                                     *018 LM00031    
                  VECTOR VALUES LCM = $LOWEST COMMON LOCATION        $,0,777777777777K            *019 LM00032    
                  VECTOR VALUES LC = 33                                                           *020 LM00033    
                  VECTOR VALUES LPOINT = 7000K                                                    *021 LM00034    
                  VECTOR VALUES MASK1 = 7777K8                                                    *022 LM00035    
                  VECTOR VALUES MASK2 = 000077000000K                                             *023 LM00036    
                  VECTOR VALUES MASK3 = 000000777777K                                             *024 LM00037    
                  VECTOR VALUES MASK4 = 577777777777K                                             *025 LM00038    
                  VECTOR VALUES MEARAY(0) = 0                                                     *026 LM00039    
                  VECTOR VALUES MESS1 = $EOF IN PROGRAM CARD INFORMATION, FILE SKIPPED$           *027 LM00040    
                  VECTOR VALUES MESS2 = $COMMAND FORM IS ' PLOAD NAME1 -TYPE- -'NOLIST'-          *028 LM00041    
                1 -'COMB'-'$,777777777777K                                                        *028 LM00042    
                  VECTOR VALUES MESS3 = $  WHERE TYPE MAY BE 'NCLOAD' OR 'VLOAD'$,                *029 LM00043    
                1  777777777777K                                                                  *029 LM00044    
                  VECTOR VALUES MFARAY(0) = 0                                                     *030 LM00045    
                  VECTOR VALUES MULT(0) = 0                                                       *031 LM00046    
                  VECTOR VALUES NASTY = 0,777777777777K                                           *032 LM00047    
                  VECTOR VALUES NA2 = $STOMAP$                                                    *033 LM00048    
                  VECTOR VALUES N2 = $  LOAD$                                                     *034 LM00049    
                  VECTOR VALUES QBSS = $   BSS$                                                   *035 LM00050    
                  VECTOR VALUES QCOMB = $  COMB$                                                  *036 LM00051    
                  VECTOR VALUES PROGSW = 0                                                        *037 LM00052    
                  VECTOR VALUES SUM1 = 777777000004K,$0   PRELOAD   SUCCESSFUL$,                  *038 LM00053    
                2 777777000006K,$      LOWEST COMMON LOCATION  $,0,                               *038 LM00054    
                3 777777000006K,$      HIGHEST PROGRAM LOCATION$,0,                               *038 LM00055    
                4 777777000010K,$      TOTAL NOT USED          $,0,$ DECIMAL$                     *038 LM00056    
                  VECTOR VALUES SUM1A = $UNSUCC$                                                  *039 LM00057    
                  VECTOR VALUES SUM2 = 777777000004K,$      MISSING FILES ARE$                    *040 LM00058    
                  VECTOR VALUES SUM3 = 777777000005K,$      MISSING ENTRY POINTS ARE$             *041 LM00059    
                  VECTOR VALUES SUM4 = 777777000006K,$      DUPLICATED ENTRY POINTS ARE$          *042 LM00060    
                  VECTOR VALUES TITLE = 777777000020K,$   STOMAP FOR PRELOD OF $                  *043 LM00061    
                1  ,0,$ SYSTEM $,0,$            $,0,$      $,0,$      $,0,0                       *043 LM00062    
                  VECTOR VALUES TVSW = 0                                                          *044 LM00063    
                  VECTOR VALUES PL = 0                                                            *045 LM00064    
                  VECTOR VALUES TAG = $******$                                                    *046 LM00065    
                  VECTOR VALUES BLANK = $      $                                                  *047 LM00066    
                  VECTOR VALUES ZERO = 0                                                          *048 LM00067    
                  FERRTN.(ERR1)                                                                   *049 LM00068    
                  FERRTN.(ERR2)                                                                   *050 LM00069    
                  FERRTN.(ERR3)                                                                   *051 LM00070    
                  FERRTN.(ERR4)                                                                   *052 LM00071    
                                                                                                       LM00072    
                    GET AND CHECK ARGUMENTS                                                            LM00073    
                                                                                                       LM00074    
                  WHENEVER COMARG.(1,N1).E.FENCE                                                  *053 LM00075    
                     PRNTP.(MESS2)                                                                *054 LM00076    
                     PRNTP.(MESS3)                                                                *055 LM00077    
                     CHNCOM.(0)                                                                   *056 LM00078    
                  OR WHENEVER COMARG.(2) .E. FENCE                                                *057 LM00079    
                    TRANSFER TO START                                                             *058 LM00080    
                  OR WHENEVER COMARG.(2).E.$NCLOAD$                                               *059 LM00081    
                    LPOINT = 30K                                                                  *060 LM00082    
                  OR WHENEVER COMARG.(2).E.$ VLOAD$                                               *061 LM00083    
                    LPOINT = 346K                                                                 *062 LM00084    
                  END OF CONDITIONAL                                                              *063 LM00085    
                  WHENEVER COMARG.(2).E.QCOMB .OR. COMARG.(3) .E. QCOMB                           *064 LM00086    
                1  .OR. COMARG.(4) .E. QCOMB,ICOMB = 1                                            *064 LM00087    
                  WHENEVER COMARG.(3) .E. $NOLIST$ .OR. COMARG.(2) .E. $NOLIST$                   *065 LM00088    
                1  .OR. COMARG.(4) .E. $NOLIST$,  ILIST = 1                                       *065 LM00089    
                    READ FILE NAMES FROM CTSSLD                                                        LM00090    
      START       BFOPEN.($R$,N1,N2,BUFF1(BL),-0,-0,ERR1)                                         *066 LM00091    
                                                                                                       LM00092    
                    READ CTSSLD                                                                        LM00093    
                                                                                                       LM00094    
      READ1       BFREAD.(N1,N2,A(14)...14,EOF1,EOFCT,ERR1)                                       *067 LM00095    
                  WHENEVER (A(14) .E. TAG) .OR. (A(14) .E. $      $), TRANSFER TO READ1           *068 LM00096    
                  BFOPEN.($R$,A(14),QBSS,BUFF2(BL),-0,-0,ERR2)                                    *069 LM00097    
                                                                                                       LM00098    
                    READ NEXT BSS FILE CARD                                                            LM00099    
                                                                                                       LM00100    
      READ2       BFREAD.(A(14),QBSS,PROG(28)...28,EOF2,EOFCT,ERR2)                               *070 LM00101    
      R2          WHENEVER (PROG(28) .A. MASK1) .E. 4005K8                                        *071 LM00102    
                    NW = (PROG(28) .A. MASK2) .RS. 18                                             *072 LM00103    
                    K = 26                                                                        *073 LM00104    
                    WHENEVER PROGSW .E. 1, TRANSFER TO LTOP1                                      *074 LM00105    
                    NW = NW-2                                                                     *075 LM00106    
                    K = K-2                                                                       *076 LM00107    
                    PROGSW = 1                                                                    *077 LM00108    
                    LPOINT = LPOINT + PL                                                          *078 LM00109    
                  TEMP = (PROG(25) .A. 4K11) .RS. 3                                               *079 LM00110    
                  WHENEVER TEMP .NE. 0, LPOINT = 2*((LPOINT+1)/2)                                 *080 LM00111    
                                                                                                       LM00112    
                    STORE PROGRAM INFORMATION                                                          LM00113    
                                                                                                       LM00114    
                    PL = PROG(26).A.MASK3                                                         *081 LM00115    
                    TVL = PROG(26) .RS. 18                                                        *082 LM00116    
                    EPARAY(JE,3) = PROG(25) .A. 377777777777K                                     *083 LM00117    
                  WHENEVER (EPARAY(JE,3).NE.0).AND.(EPARAY(JE,3).L.LCOM),                         *084 LM00118    
                1 LCOM = EPARAY(JE,3)                                                             *084 LM00119    
                    EPARAY(JE,0) = A(14)                                                          *085 LM00120    
                    EPARAY(JE,1) = OCABC.(LPOINT)                                                 *086 LM00121    
                    EPARAY(JE,2) = PL                                                             *087 LM00122    
                    EPARAY(JE,4) = TAG                                                            *088 LM00123    
                    JE =JE+1                                                                      *089 LM00124    
      LTOP1         THROUGH LOOP1, FOR ICNT = NW,-2,ICNT.LE.0                                     *090 LM00125    
                      EPARAY(JE,0) = PROG(K)                                                      *091 LM00126    
                      EPARAY(JE,1) = OCABC.(.ABS.(PROG(K-1)) + LPOINT)                            *092 LM00127    
                    EPARAY(JE,2) = 3                                                              *093 LM00128    
                      K = K-2                                                                     *094 LM00129    
      LOOP1           JE = JE + 1                                                                 *095 LM00130    
                    TRANSFER TO READ2                                                             *096 LM00131    
                    END OF CONDITIONAL                                                            *097 LM00132    
                                                                                                       LM00133    
                    STORE TRANSFER VECTOR                                                              LM00134    
                                                                                                       LM00135    
                  WHENEVER TVSW .E. 1, TRANSFER TO LTOP2                                          *098 LM00136    
                  TVSW =1                                                                         *099 LM00137    
                  JT = (JT/50 + 1) * 50                                                           *100 LM00138    
                  TVARAY(JT) = A(14)                                                              *101 LM00139    
                  JT = JT + 1                                                                     *102 LM00140    
      LTOP2       K = 24                                                                          *103 LM00141    
                  IC = 20                                                                         *104 LM00142    
                  WHENEVER TVL.L.20, IC = TVL                                                     *105 LM00143    
                  THROUGH LOOP2, FOR ICNT = IC, -1, ICNT .E. 0                                    *106 LM00144    
                    TVARAY(JT) = PROG(K)                                                          *107 LM00145    
                    K = K - 1                                                                     *108 LM00146    
      LOOP2         JT = JT + 1                                                                   *109 LM00147    
                  WHENEVER TVL .G. 20                                                             *110 LM00148    
                    TVL = TVL - 20                                                                *111 LM00149    
                    TRANSFER TO READ2                                                             *112 LM00150    
                  OTHERWISE                                                                       *113 LM00151    
                    TVARAY(JT) = FENCE                                                            *114 LM00152    
                    TVSW = 0                                                                      *115 LM00153    
                  END OF CONDITIONAL                                                              *116 LM00154    
                  PROGSW = 0                                                                      *117 LM00155    
                  WHENEVER ICOMB .E. 0                                                            *118 LM00156    
                    BFCLOS.(A(14),QBSS,READ1)                                                     *119 LM00157    
                    TRANSFER TO READ1                                                             *120 LM00158    
                  END OF CONDITIONAL                                                              *121 LM00159    
                                                                                                       LM00160    
                    IF THIS IS A COMBINED FILE, SEARCH FOR REMAINING P.C.                              LM00161    
                                                                                                       LM00162    
      SKIP        BFREAD.(A(14),QBSS,PROG(28)...28,EOF3,EOFCT,ERR3)                               *122 LM00163    
                  WHENEVER PROG(28) .A. MASK1 .E. 4005K8, TRANSFER TO R2                          *123 LM00164    
                  TRANSFER TO SKIP                                                                *124 LM00165    
      EOF3        BFCLOS.(A(14),QBSS,READ1)                                                       *125 LM00166    
                  TRANSFER TO READ1                                                               *126 LM00167    
                                                                                                       LM00168    
                    ENTIRE CTSSLD HAS BEEN READ AND ALL PROGRAM                                        LM00169    
                    INFORMATION STORED                                                                 LM00170    
                                                                                                       LM00171    
      EOF1        BFCLOS.(N1,N2,EOF1A)                                                            *127 LM00172    
      EOF1A       HCORE = LPOINT + PL                                                             *128 LM00173    
                  JESAVE = JE                                                                     *129 LM00174    
                  WHENEVER JT .L. 0                                                               *130 LM00175    
                    TVARAY(1) = FENCE                                                             *131 LM00176    
                    TVARAY(2) = FENCE                                                             *132 LM00177    
                    TRANSFER TO PART2                                                             *133 LM00178    
                  END OF CONDITIONAL                                                              *134 LM00179    
                  TVARAY(JT+1) = FENCE                                                            *135 LM00180    
                  JT = - 50                                                                       *136 LM00181    
                  TRANSFER TO PART2                                                               *137 LM00182    
                                                                                                       LM00183    
                    I/O ERROR RETURNS                                                                  LM00184    
                                                                                                       LM00185    
      EOF2        PRNTP.(MESS1)                                                                   *138 LM00186    
                  TRANSFER TO ER2A                                                                *139 LM00187    
      ERR1        PRNTER.                                                                         *140 LM00188    
                  BFCLOS.($ALL$,-0,ERRX)                                                          *141 LM00189    
      ERRX        CHNCOM.(0)                                                                      *142 LM00190    
      ERR2        PRNTER.                                                                         *143 LM00191    
      ER2A        BFCLOS.(A(14),QBSS,ER2B)                                                        *144 LM00192    
      ER2B        MFARAY = MFARAY + 1                                                             *145 LM00193    
                  MFARAY(MFARAY) = A(14)                                                          *146 LM00194    
                  TRANSFER TO READ1                                                               *147 LM00195    
      ERR3        PRNTER.                                                                         *148 LM00196    
                  BFCLOS. (A(14),QBSS,READ1)                                                      *149 LM00197    
                  TRANSFER TO READ1                                                               *150 LM00198    
                                                                                                       LM00199    
                    CHECK T.V. AGAINST ENTRY POINTS                                                    LM00200    
                    IF ENTRY POINT FOUND, STORE CALLING FILE NAME                                      LM00201    
                    IF ENTRY POINT NOT FOUND, STORE TRANSFER NAME                                      LM00202    
                    IN MISSING ENTRY POINT ARRAY (MEARAY)                                              LM00203    
                                                                                                       LM00204    
      PART2       JT = (JT/50 + 1)*50                                                             *151 LM00205    
                  MODNAM = TVARAY(JT)                                                             *152 LM00206    
      MNAM        JT = JT +1                                                                      *153 LM00207    
                  WHENEVER TVARAY(JT) .NE. FENCE, TRANSFER TO LTOP3                               *154 LM00208    
                  WHENEVER TVARAY(JT+1) .E. FENCE, TRANSFER TO DUPCK                              *155 LM00209    
                  TRANSFER TO PART2                                                               *156 LM00210    
      LTOP3       THROUGH LOOP3, FOR JE=1,1, JE.GE.JESAVE                                         *157 LM00211    
                    WHENEVER EPARAY(JE,4) .E. TAG                                                 *158 LM00212    
                      FILEN = EPARAY(JE,0)                                                        *159 LM00213    
                      TRANSFER TO LOOP3                                                           *160 LM00214    
                    END OF CONDITIONAL                                                            *161 LM00215    
                    WHENEVER TVARAY(JT) .NE. EPARAY(JE,0), TRANSFER TO LOOP3                      *162 LM00216    
                    TV1(JT,0) = FILEN                                                             *163 LM00217    
                    TV1(JT,1) = EPARAY(JE,1)                                                      *164 LM00218    
                    WHENEVER EPARAY(JE,2) .G. 14, TRANSFER TO MNAM                                *165 LM00219    
                    EPARAY(JE,EPARAY(JE,2)) = MODNAM                                              *166 LM00220    
                    EPARAY(JE,2) = EPARAY(JE,2) + 1                                               *167 LM00221    
                    TRANSFER TO MNAM                                                              *168 LM00222    
      LOOP3       CONTINUE                                                                        *169 LM00223    
                  MEARAY = MEARAY + 1                                                             *170 LM00224    
                  MEARAY(MEARAY) = TVARAY(JT)                                                     *171 LM00225    
                  TV1(JT,0) = BLANK                                                               *172 LM00226    
                  TV1(JT,1) = BLANK                                                               *173 LM00227    
                  TRANSFER TO MNAM                                                                *174 LM00228    
                                                                                                       LM00229    
                    CHECK FOR DUPLICATED ENTRY POINTS                                                  LM00230    
                                                                                                       LM00231    
      DUPCK       THROUGH LOOP5, FOR JE1 = 1,1,JE1.GE.JESAVE                                      *175 LM00232    
                    WHENEVER EPARAY(JE1,4) .E. TAG, TRANSFER TO LOOP5                             *176 LM00233    
                    THROUGH LOOP4, FOR JE=JE1+1,1,JE.E.JESAVE                                     *177 LM00234    
                      WHENEVER EPARAY(JE,4) .E. TAG, TRANSFER TO LOOP4                            *178 LM00235    
                      WHENEVER EPARAY(JE1,0) .NE. EPARAY(JE,0), TRANSFER TO LOOP4                 *179 LM00236    
                      MULT = MULT + 1                                                             *180 LM00237    
                      MULT(MULT) = EPARAY(JE,0)                                                   *181 LM00238    
                      TRANSFER TO LOOP5                                                           *182 LM00239    
      LOOP4         CONTINUE                                                                      *183 LM00240    
      LOOP5       CONTINUE                                                                        *184 LM00241    
                                                                                                       LM00242    
                    WRITE FILE FOR OUTPUT                                                              LM00243    
                                                                                                       LM00244    
                  EXECUTE DELETE.(FILNAM)                                                         *185 LM00245    
                  BFOPEN.($W$,N1,NA2,BUFF1(BL),BUFF2(BL),BUFF3(BL),ERR4)                          *186 LM00246    
                  TITLE(8) = N1                                                                   *187 LM00247    
                  GETTM.(TITLE(11),TITLE(13))                                                     *188 LM00248    
                  TITLE(5)=(N1.A.777777770000K).V.000000005757K                                   *189 LM00249    
                  WHOAMI.(TITLE(16)...2)                                                          *190 LM00250    
                  LINE(LC-15) = TITLE(16)                                                         *191 LM00251    
                  LINE(LC-16) = TITLE(15)                                                         *192 LM00252    
                  THROUGH LOOP6, FOR IC = 0,1,IC .G. 14                                           *193 LM00253    
      LOOP6       LINE(LC-IC) = TITLE(IC)                                                         *194 LM00254    
                  BFWRIT.(N1,NA2,LINE(LC)...17,ERR4)                                              *195 LM00255    
                  WHENEVER ILIST .E. 1 .OR. JESAVE .L. 1, TRANSFER TO SUMERY                      *196 LM00256    
                  THROUGH LOOP7, FOR IC = 0,1,IC .G. 11                                           *197 LM00257    
      LOOP7       LINE(LC-IC) = HEAD(IC)                                                          *198 LM00258    
                  BFWRIT.(N1,NA2,LINE(LC)...12, ERR4)                                             *199 LM00259    
                  JT = -50                                                                        *200 LM00260    
                  JE = 0                                                                          *201 LM00261    
                                                                                                       LM00262    
                    PRINT FILE LINE                                                                    LM00263    
                                                                                                       LM00264    
      LTOP8       BFWRIT.(N1,NA2,BLANK3(3)...4,ERR4)                                              *202 LM00265    
                  LINE(LC) = 777777000007K                                                        *203 LM00266    
                  LINE(LC-1) = BLANK                                                              *204 LM00267    
                  LINE(LC-2) = $FILE  $                                                           *205 LM00268    
                  LINE(LC-3) = EPARAY(JE,0)                                                       *206 LM00269    
                  LINE(LC-4) = BLANK                                                              *207 LM00270    
                  LINE(LC-5) = (EPARAY(JE,1))                                                     *208 LM00271    
                  LINE(LC-6) = OCABC.(EPARAY(JE,2))                                               *209 LM00272    
                  LINE(LC-7) = OCABC.(EPARAY(JE,3))                                               *210 LM00273    
                  BFWRIT.(N1,NA2,LINE(LC)...8,ERR4)                                               *211 LM00274    
                                                                                                       LM00275    
                    PRINT EACH TRANSFER VECTOR                                                         LM00276    
                                                                                                       LM00277    
                  LINE(LC) = 777777000011K                                                        *212 LM00278    
                  LINE(LC-1) = BLANK                                                              *213 LM00279    
                  LINE(LC-2) = BLANK                                                              *214 LM00280    
                  LINE(LC-3) = BLANK                                                              *215 LM00281    
                  LINE(LC-5) = BLANK                                                              *216 LM00282    
                  LINE(LC-6) = BLANK                                                              *217 LM00283    
                  LINE(LC-7) = BLANK                                                              *218 LM00284    
                  JT = (JT/50+1)*50 + 1                                                           *219 LM00285    
      LTOP9       WHENEVER TVARAY(JT) .E. FENCE, TRANSFER TO TOP10                                *220 LM00286    
                  LINE(LC-4) = TVARAY(JT)                                                         *221 LM00287    
                  LINE(LC-8) = TV1(JT,0)                                                          *222 LM00288    
                  LINE(LC-9) = TV1(JT,1)                                                          *223 LM00289    
                  BFWRIT.(N1,NA2,LINE(LC)...10,ERR4)                                              *224 LM00290    
                  JT = JT + 1                                                                     *225 LM00291    
                  TRANSFER TO LTOP9                                                               *226 LM00292    
      TOP10       LINE(LC-4) = BLANK                                                              *227 LM00293    
                  LINE(LC-6) = BLANK                                                              *228 LM00294    
                  LINE(LC-7) = BLANK                                                              *229 LM00295    
      LTOP10      JE = JE + 1                                                                     *230 LM00296    
                                                                                                       LM00297    
                    PRINT EACH ENTRY POINT NAME, LOAD POINT                                            LM00298    
                    AND CALLERS                                                                        LM00299    
                                                                                                       LM00300    
                  WHENEVER JE .GE. JESAVE, TRANSFER TO SUMERY                                     *231 LM00301    
                  WHENEVER EPARAY(JE,4) .E. TAG, TRANSFER TO LTOP8                                *232 LM00302    
                  NLC= (2*(EPARAY(JE,2)-3)+7)                                                     *233 LM00303    
                  LINE(LC)= (NLC-1).V.777777K6                                                    *234 LM00304    
                  LINE(LC-3) = EPARAY(JE,0)                                                       *235 LM00305    
                  LINE(LC-5) = (EPARAY(JE,1))                                                     *236 LM00306    
                  LINE(LC-7) = BLANK                                                              *237 LM00307    
                  LCNT = LC - 8                                                                   *238 LM00308    
                  THROUGH LOOP11, FOR IC = 3,1,IC .E. EPARAY(JE,2)                                *239 LM00309    
                    LINE(LCNT) = EPARAY(JE,IC)                                                    *240 LM00310    
                    LINE(LCNT-1) = 735757575757K                                                  *241 LM00311    
      LOOP11      LCNT = LCNT-2                                                                   *242 LM00312    
                  BFWRIT.(N1,NA2,LINE(LC)...NLC,ERR4)                                             *243 LM00313    
                  TRANSFER TO LTOP10                                                              *244 LM00314    
                                                                                                       LM00315    
                    PRINT PRELOD SUMMARY                                                               LM00316    
                                                                                                       LM00317    
      SUMERY      SUM1(18) = OCABC.(HCORE)                                                        *245 LM00318    
                  SUM1(11) = OCABC.(LCOM)                                                         *246 LM00319    
                  SUM1(25) = BZEL.(DERBC.(LCOM-HCORE))                                            *247 LM00320    
                  WHENEVER HCORE.G.LCOM, SUM1(25) =SUM1(25).A.MASK4                               *248 LM00321    
                  HPC(5) = SUM1(18)                                                               *249 LM00322    
                  LCM(5) = SUM1(11)                                                               *250 LM00323    
                  DIFC(5) = SUM1(25)                                                              *251 LM00324    
                  WHENEVER HCORE .L. LCOM .AND. (MEARAY+MFARAY) .E. 0                             *252 LM00325    
                                                                                                       LM00326    
                    SUCCESSFUL PRELOD                                                                  LM00327    
                                                                                                       LM00328    
                    THROUGH LOOP13, FOR IC = 0,1,IC .G. 27                                        *253 LM00329    
      LOOP13        LINE(LC-IC) = SUM1(IC)                                                        *254 LM00330    
                    BFWRIT.(N1,NA2,LINE(LC)...28,ERR4)                                            *255 LM00331    
                    PRINT COMMENT $SYSTEM PRELOAD SUCCESSFUL$                                     *256 LM00332    
                  PRNTP.(LCM)                                                                     *257 LM00333    
                  PRNTP.(HPC)                                                                     *258 LM00334    
                  PRNTP.(DIFC)                                                                    *259 LM00335    
                    TRANSFER TO MUCK                                                              *260 LM00336    
                  END OF CONDITIONAL                                                              *261 LM00337    
                    UNSUCCESSFUL PRELOD                                                                LM00338    
                                                                                                       LM00339    
                  SUM1(3) = SUM1A                                                                 *262 LM00340    
                  THROUGH LOOP14, FOR IC = 0,1,IC .G. 27                                          *263 LM00341    
      LOOP14      LINE(LC-IC) = SUM1(IC)                                                          *264 LM00342    
                  BFWRIT.(N1,NA2,LINE(LC)...28, ERR4)                                             *265 LM00343    
                  PRINT COMMENT $SYSTEM PRELOAD UNSUCCESSFUL$                                     *266 LM00344    
                  PRNTP.(LCM)                                                                     *267 LM00345    
                  PRNTP.(HPC)                                                                     *268 LM00346    
                  PRNTP.(DIFC)                                                                    *269 LM00347    
                  WHENEVER MFARAY .E. 0, TRANSFER TO MECK                                         *270 LM00348    
                                                                                                       LM00349    
                    PRINT MISSING FILES                                                                LM00350    
                                                                                                       LM00351    
                  THROUGH LOOP15, FOR IC = 0,1,IC .G. 4                                           *271 LM00352    
      LOOP15      LINE(LC-IC) = SUM2(IC)                                                          *272 LM00353    
                  BFWRIT.(N1,NA2,LINE(LC)...5,ERR4)                                               *273 LM00354    
                  PRINT COMMENT $MISSING FILES ARE$                                               *274 LM00355    
                  LINE(LC) = 777777000003K                                                        *275 LM00356    
                  LINE(LC-2) = BLANK                                                              *276 LM00357    
                  THROUGH LOOP16, FOR IC = 1,1,IC .G. MFARAY                                      *277 LM00358    
                  LINE(LC-3) = MFARAY(IC)                                                         *278 LM00359    
                  NASTY(0) = MFARAY(IC)                                                           *279 LM00360    
                  PRNTP.(NASTY)                                                                   *280 LM00361    
      LOOP16      BFWRIT.(N1,NA2,LINE(LC)...4,ERR4)                                               *281 LM00362    
      MECK        WHENEVER MEARAY .E. 0, TRANSFER TO MUCK                                         *282 LM00363    
                                                                                                       LM00364    
                    PRINT MISSING ENTRY POINTS                                                         LM00365    
                                                                                                       LM00366    
                  THROUGH LOOP17, FOR IC = 0,1,IC .G. 5                                           *283 LM00367    
      LOOP17      LINE(LC-IC) = SUM3(IC)                                                          *284 LM00368    
                  BFWRIT.(N1,NA2,LINE(LC)...6,ERR4)                                               *285 LM00369    
                  PRINT COMMENT $MISSING ENTRY POINTS ARE$                                        *286 LM00370    
                  LINE(LC) = 777777000003K                                                        *287 LM00371    
                  LINE(LC-2) = BLANK                                                              *288 LM00372    
                  THROUGH LOOP18, FOR IC = 1,1,IC .G. MEARAY                                      *289 LM00373    
                  LINE(LC-3) = MEARAY(IC)                                                         *290 LM00374    
                  NASTY(0) = MEARAY(IC)                                                           *291 LM00375    
                  PRNTP.(NASTY)                                                                   *292 LM00376    
      LOOP18      BFWRIT. (N1,NA2,LINE(LC)...4,ERR4)                                              *293 LM00377    
      MUCK        WHENEVER MULT .E. 0, TRANSFER TO END                                            *294 LM00378    
                                                                                                       LM00379    
                    PRINT DUPLICATED ENTRY POINTS                                                      LM00380    
                                                                                                       LM00381    
                  THROUGH LOOP19, FOR IC = 0,1,IC .G. 6                                           *295 LM00382    
      LOOP19      LINE(LC-IC) = SUM4(IC)                                                          *296 LM00383    
                  BFWRIT.(N1,NA2,LINE(LC)...7,ERR4)                                               *297 LM00384    
                  PRINT COMMENT $DUPLICATED ENTRY POINTS ARE$                                     *298 LM00385    
                  LINE(LC) = 777777000003K                                                        *299 LM00386    
                  LINE (LC-2) = BLANK                                                             *300 LM00387    
                  THROUGH LOOP20, FOR IC = 1,1,IC .G. MULT                                        *301 LM00388    
                  LINE(LC-3) = MULT(IC)                                                           *302 LM00389    
                  NASTY(0) = MULT(IC)                                                             *303 LM00390    
                  PRNTP.(NASTY)                                                                   *304 LM00391    
      LOOP20      BFWRIT.(N1,NA2,LINE(LC)...4,ERR4)                                               *305 LM00392    
                  TRANSFER TO END                                                                 *306 LM00393    
      ERR4        PRNTER.                                                                         *307 LM00394    
      END         BFCLOS.(N1,NA2,END2)                                                            *308 LM00395    
      END2        CHNCOM.(0)                                                                      *309 LM00396    
                  END OF PROGRAM                                                                  *310 LM00397    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   61746 TRANSFER VECTOR LENGTH  00024 PROGRAM BEGINS    57137
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      A      00110 A 1        ERR3   00043   4        LOOP11 00024   4        MASK1  25477 A 1        PROGSW 27411 A 1  
      BLANK3 00114 A 1        ERR4   00044   4        LOOP13 00024   4        MASK2  25500 A 1        QBSS   27412 A 1  
      BLANK  00115 A 1        ERRX   00045   4        LOOP14 00024   4        MASK3  25501 A 1        QCOMB  27413 A 1  
      BL     00116 A 1        FENCE  25363 A 1        LOOP15 00024   4        MASK4  25502 A 1        R2     00063   4  
      BUFF1  00777 A 1        FILEN  25364   1        LOOP16 00024   4        MEARAY 26633 A 1        READ1  00064   4  
      BUFF2  01660 A 1        FILNAM 00027 A 1        LOOP17 00024   4        MECK   00057   4        READ2  00065   4  
      BUFF3  02541 A 1        HCORE  25365   1        LOOP18 00024   4        MESS1  26643 A 1        SKIP   00066   4  
      DIFC   02552 A 1        HEAD   25401 A 1        LOOP19 00024   4        MESS2  26656 A 1        START  00067   4  
      DIM    02555 A 1        HPC    25410 A 1        LOOP1  00024   4        MESS3  26666 A 1        SUM1A  27414 A 1  
      DTV    02560 A 1        ICNT   25411   1        LOOP20 00024   4        MFARAY 27033 A 1        SUM1   27450 A 1  
      DUPCK  00030   4        ICOMB  25412 A 1        LOOP2  00024   4        MNAM   00060   4        SUM2   27455 A 1  
      END2   00031   4        IC     25413   1        LOOP3  00046   4        MODNAM 27034   1        SUM3   27463 A 1  
      END    00032   4        ILIST  25414 A 1        LOOP4  00047   4        MUCK   00061   4        SUM4   27472 A 1  
      EOF1A  00033   4        JE1    25415   1        LOOP5  00050   4        MULT   27345 A 1        SUMERY 00070   4  
      EOF1   00034   4        JE     25416 A 1        LOOP6  00024   4        N1     00027   1        TAG    27473 A 1  
      EOF2   00035   4        JESAVE 25417   1        LOOP7  00024   4        N2     27346 A 1        TEMP   27474   1  
      EOF3   00036   4        JT     25420 A 1        LPOINT 25476 A 1        NA2    00026 A 1        TITLE  27515 A 1  
      EOFCT  02561   1        K      25421   1        LTOP10 00051   4        NASTY  27350 A 1        TOP10  00071   4  
      EPARAY 25362 A 1        LCM    25430 A 1        LTOP1  00052   4        NLC    27351   1        TV1    47216 A 1  
      ER2A   00037   4        LCNT   25431   1        LTOP2  00053   4        NW     27352   1        TVARAY 57057 A 1  
      ER2B   00040   4        LCOM   25432 A 1        LTOP3  00054   4        PART2  00062   4        TVL    57060   1  
      ERR1   00041   4        LC     25433 A 1        LTOP8  00055   4        PL     27353 A 1        TVSW   57061 A 1  
      ERR2   00042   4        LINE   25475 A 1        LTOP9  00056   4        PROG   27410 A 1        ZERO   57062 A 1  
0FUNCTION DICTIONARY    
      .03310 00000   0        .03311 00001   0        BFCLOS 00002   1        BFOPEN 00003   1        BFREAD 00004   1  
      BFWRIT 00005   1        BZEL   00006   1        CHNCOM 00007   1        COMARG 00010   1        DELETE 00011   1  
      DERBC  00012   1        EXIT   00013   1        FERRTN 00014   1        GETTM  00015   1        .PCOMT 00016   1  
      .SETUP 00017   1        OCABC  00020   1        PRNTER 00021   1        PRNTP  00022   1        WHOAMI 00023   1  
0ABSOLUTE CONSTANTS     
 57133 -377777000003     57110 +000000000033     57131 -335757575757     57132 -377777000000     57075 +000000000012    
 57074 +000000000011     57135 -377777000011     57073 +000000000010     57072 +000000000007     57071 +000000000006    
 57070 +000000000005     57117 +263143256060     57134 -377777000007     57077 +000000000014     57076 +000000000013    
 57103 +000000000021     57102 +000000000020     57101 +000000000017     57114 +000000005757     57136 -377777770000    
 57130 -266060606060     57115 +214343606060     57105 +000000000024     57112 +000000000062     57120 +377777777777    
 57121 -000000000000     57107 +000000000032     57104 +000000000022     57122 -000500000000     57111 +000000000034    
 57126 -206060606060     57100 +000000000016     57125 -116060606060     57124 -054643316263     57066 +000000000003    
 57067 +000000000004     57113 +000000000346     57127 -206543462124     57106 +000000000030     57123 -052343462124    
 57065 +000000000002     57063 +000000000000     57064 +000000000001     57116 +233000000000                            
0STATEMENT DICTIONARY   
 00030 TXL -360272060260       00031 TXL -361741061737       00032 TXL -361737061733       00033 TXL -357754057751      
 00034 TXL -357751057745       00035 TXL -360001057777       00036 TXL -357744057740       00037 TXL -360020060014      
 00040 TXL -360023060020       00041 TXL -360003060002       00042 TXL -360014060013       00043 TXL -360030060027      
 00044 TXL -361733061732       00045 TXL -360013060011       00046 TXL -360232060231       00047 TXL -360362060361      
 00050 TXL -360363060362       00051 TXL -361036061033       00052 TXL -357536057524       00053 TXL -357635057633      
 00054 TXL -360103060071       00055 TXL -360543060536       00056 TXL -360743060736       00057 TXL -361510061504      
 00060 TXL -360054060051       00061 TXL -361622061616       00062 TXL -360046060035       00063 TXL -357336057330      
 00064 TXL -357272057263       00065 TXL -357330057321       00066 TXL -357730057721       00067 TXL -357263057243      
 00070 TXL -361211061206       00071 TXL -361021061014                                                                  
0PROGRAM    
                 NORMAL MODE IS INTEGER                                             001  LM00012
                 DIMENSION BUFF1(432),BUFF2(432),A(14),PROG(28),TVARAY(4000)        002  LM00013
                 DIMENSION EPARAY(9600,DIM),MFARAY(100),MEARAY(600),MULT(200)       003  LM00014
                 DIMENSION LINE(33),FILNAM(2),BUFF3(432),TV1(8000,DTV)              004  LM00015
                 EQUIVALENCE (FILNAM(0),N1),(FILNAM(1),NA2)                         005  LM00016
                 V'S BL = 432                                                       006  LM00017
 57137 TSX +0 07400 4 00017    00116     +0 00000 0 00660                                                               
                 V'S BLANK3 = $                  $,777777000003K                    007  LM00018
 00111     -3 77777 0 00003    00112     -2 06060 6 06060    00113     -2 06060 6 06060    00114     -2 06060 6 06060   
                 V'S DIFC=$TOTAL LOCATIONS NOT USED      $,0,$ DECIMAL$,            008  LM00019
                1777777777777K                                                      008  LM00020
 02542     -3 77777 7 77777    02543     +2 14360 6 06060    02544     -2 02425 2 33144    02545     +0 00000 0 00000   
 02546     -2 06060 6 06060    02547     -2 36064 6 22524    02550     -0 64562 6 04546    02551     -0 34623 2 16331   
 02552     -2 34663 2 14360                                                                                             
                 V'S DIM = 2,17,16                                                  009  LM00021
 02553     +0 00000 0 00020    02554     +0 00000 0 00021    02555     +0 00000 0 00002                                 
                 V'S DTV = 2,3,2                                                    010  LM00022
 02556     +0 00000 0 00002    02557     +0 00000 0 00003    02560     +0 00000 0 00002                                 
                 V'S FENCE = 777777777777K                                          011  LM00023
 25363     -3 77777 7 77777                                                                                             
                 V'S HEAD = 777777000013K,$0            NAME  T.V. ORGIN LENTH      012  LM00024
                1 COMMON      CROSS REFERENCE$                                      012  LM00025
 25366     -0 52325 6 06060    25367     -1 12526 2 55125    25370     +2 35146 6 26260    25371     -2 06060 6 06060   
 25372     +2 34644 4 44645    25373     -0 32545 6 33060    25374     -0 65127 3 14560    25375     -2 06333 6 53360   
 25376     -2 04521 4 42560    25377     -2 06060 6 06060    25400     +0 06060 6 06060    25401     -3 77777 0 00013   
                 V'S HPC = $HIGHEST PROGRAM LOCATION      $,0,777777777777K         013  LM00026
 25402     -3 77777 7 77777    25403     +0 00000 0 00000    25404     -2 06060 6 06060    25405     +2 32163 3 14645   
 25406     -1 12144 6 04346    25407     -2 36047 5 14627    25410     +3 03127 3 02562                                 
                 V'S ICOMB = 0                                                      014  LM00027
 25412     +0 00000 0 00000                                                                                             
                 V'S ILIST = 0                                                      015  LM00028
 25414     +0 00000 0 00000                                                                                             
                 V'S JE = 0                                                         016  LM00029
 25416     +0 00000 0 00000                                                                                             
                 V'S JT = -50                                                       017  LM00030
 25420     -0 00000 0 00062                                                                                             
                 V'S LCOM = 77777K                                                  018  LM00031
 25432     +0 00000 0 77777                                                                                             
                 V'S LCM = $LOWEST COMMON LOCATION        $,0,777777777777K         019  LM00032
 25422     -3 77777 7 77777    25423     +0 00000 0 00000    25424     -2 06060 6 06060    25425     -2 33146 4 56060   
 25426     -0 56043 4 62321    25427     -2 02346 4 44446    25430     -0 34666 2 56263                                 
                 V'S LC = 33                                                        020  LM00033
 25433     +0 00000 0 00041                                                                                             
                 V'S LPOINT = 7000K                                                 021  LM00034
 25476     +0 00000 0 07000                                                                                             
                 V'S MASK1 = 7777K8                                                 022  LM00035
 25477     -3 77700 0 00000                                                                                             
                 V'S MASK2 = 000077000000K                                          023  LM00036
 25500     +0 00077 0 00000                                                                                             
                 V'S MASK3 = 000000777777K                                          024  LM00037
 25501     +0 00000 7 77777                                                                                             
                 V'S MASK4 = 577777777777K                                          025  LM00038
 25502     -1 77777 7 77777                                                                                             
                 V'S MEARAY(0) = 0                                                  026  LM00039
 26633     +0 00000 0 00000                                                                                             
                 V'S MESS1 = $EOF IN PROGRAM CARD INFORMATION, FILE SKIPPED$        027  LM00040
 26634     -0 72524 6 06060    26635     +2 56062 4 23147    26636     -0 57360 2 63143    26637     -1 14421 6 33146   
 26640     +2 46031 4 52646    26641     +2 14460 2 32151    26642     -2 04751 4 62751    26643     +2 54626 6 03145   
                 V'S MESS2 = $COMMAND FORM IS ' PLOAD NAME1 -TYPE- -'NOLIST'-       028  LM00041
                1-'COMB'-'$,777777777777K                                           028  LM00042
 26644     -3 77777 7 77777    26645     +1 44014 6 06060    26646     -0 01423 4 64422    26647     +3 16263 1 44060   
 26650     -2 04014 4 54643    26651     -0 06370 4 72540    26652     -0 52144 2 50160    26653     -0 74346 2 12460   
 26654     -2 03162 6 01460    26655     +2 46026 4 65144    26656     +2 34644 4 42145                                 
                 V'S MESS3 = $  WHERE TYPE MAY BE 'NCLOAD' OR 'VLOAD'$,             029  LM00043
                1 777777777777K                                                     029  LM00044
 26657     -3 77777 7 77777    26660     +2 12414 6 06060    26661     -1 16014 6 54346    26662     -0 62124 1 46046   
 26663     +2 56014 4 52343    26664     -2 04421 7 06022    26665     +2 56063 7 04725    26666     -2 06066 3 02551   
                 V'S MFARAY(0) = 0                                                  030  LM00045
 27033     +0 00000 0 00000                                                                                             
                 V'S MULT(0) = 0                                                    031  LM00046
 27345     +0 00000 0 00000                                                                                             
                 V'S NASTY = 0,777777777777K                                        032  LM00047
 27347     -3 77777 7 77777    27350     +0 00000 0 00000                                                               
                 V'S NA2 = $STOMAP$                                                 033  LM00048
 00026     -2 26346 4 42147                                                                                             
                 V'S N2 = $  LOAD$                                                  034  LM00049
 27346     -2 06043 4 62124                                                                                             
                 V'S QBSS = $   BSS$                                                035  LM00050
 27412     -2 06060 2 26262                                                                                             
                 V'S QCOMB = $  COMB$                                               036  LM00051
 27413     -2 06023 4 64422                                                                                             
                 V'S PROGSW = 0                                                     037  LM00052
 27411     +0 00000 0 00000                                                                                             
                 V'S SUM1 = 777777000004K,$0   PRELOAD   SUCCESSFUL$,               038  LM00053
                2777777000006K,$      LOWEST COMMON LOCATION  $,0,                  038  LM00054
                3777777000006K,$      HIGHEST PROGRAM LOCATION$,0,                  038  LM00055
                4777777000010K,$      TOTAL NOT USED          $,0,$ DECIMAL$        038  LM00056
 27415     +2 14360 6 06060    27416     -2 02425 2 33144    27417     +0 00000 0 00000    27420     -2 06060 6 06060   
 27421     +2 52460 6 06060    27422     -0 54663 6 06462    27423     -2 34663 2 14360    27424     -2 06060 6 06060   
 27425     -3 77777 0 00010    27426     +0 00000 0 00000    27427     +2 32163 3 14645    27430     -1 12144 6 04346   
 27431     -2 36047 5 14627    27432     +3 03127 3 02562    27433     -2 06060 6 06060    27434     -3 77777 0 00006   
 27435     +0 00000 0 00000    27436     -2 33146 4 56060    27437     -0 56043 4 62321    27440     -2 02346 4 44446   
 27441     -0 34666 2 56263    27442     -2 06060 6 06060    27443     -3 77777 0 00006    27444     +2 56262 2 66443   
 27445     -2 06062 6 42323    27446     +2 54346 2 12460    27447     +0 06060 6 04751    27450     -3 77777 0 00004   
                 V'S SUM1A = $UNSUCC$                                               039  LM00057
 27414     -2 44562 6 42323                                                                                             
                 V'S SUM2 = 777777000004K,$      MISSING FILES ARE$                 040  LM00058
 27451     -2 26021 5 12560    27452     +2 76026 3 14325    27453     -0 43162 6 23145    27454     -2 06060 6 06060   
 27455     -3 77777 0 00004                                                                                             
                 V'S SUM3 = 777777000005K,$      MISSING ENTRY POINTS ARE$          041  LM00059
 27456     -2 36260 2 15125    27457     -3 06047 4 63145    27460     +2 76025 4 56351    27461     -0 43162 6 23145   
 27462     -2 06060 6 06060    27463     -3 77777 0 00005                                                               
                 V'S SUM4 = 777777000006K,$      DUPLICATED ENTRY POINTS ARE$       042  LM00060
 27464     +2 15125 6 06060    27465     -0 63145 6 36260    27466     -0 56351 7 06047    27467     +2 16325 2 46025   
 27470     +2 46447 4 33123    27471     -2 06060 6 06060    27472     -3 77777 0 00006                                 
                 V'S TITLE = 777777000020K,$   STOMAP FOR PRELOD OF $               043  LM00061
                1 ,0,$ SYSTEM $,0,$            $,0,$      $,0,$      $,0,0          043  LM00062
 27475     +0 00000 0 00000    27476     +0 00000 0 00000    27477     -2 06060 6 06060    27500     +0 00000 0 00000   
 27501     -2 06060 6 06060    27502     +0 00000 0 00000    27503     -2 06060 6 06060    27504     -2 06060 6 06060   
 27505     +0 00000 0 00000    27506     -0 46060 6 06060    27507     -2 06270 6 26325    27510     +0 00000 0 00000   
 27511     -0 62460 4 62660    27512     -1 16047 5 12543    27513     -0 42147 6 02646    27514     -2 06060 6 26346   
 27515     -3 77777 0 00020                                                                                             
                 V'S TVSW = 0                                                       044  LM00063
 57061     +0 00000 0 00000                                                                                             
                 V'S PL = 0                                                         045  LM00064
 27353     +0 00000 0 00000                                                                                             
                 V'S TAG = $******$                                                 046  LM00065
 27473     -1 45454 5 45454                                                                                             
                 V'S BLANK = $      $                                               047  LM00066
 00115     -2 06060 6 06060                                                                                             
                 V'S ZERO = 0                                                       048  LM00067
 57062     +0 00000 0 00000                                                                                             
                 FERRTN.(ERR1)                                                      049  LM00068
 57140 TSX +0 07400 4 00014    57141 TXH +3 00000 0 00041                                                               
                 FERRTN.(ERR2)                                                      050  LM00069
 57142 TSX +0 07400 4 00014    57143 TXH +3 00000 0 00042                                                               
                 FERRTN.(ERR3)                                                      051  LM00070
 57144 TSX +0 07400 4 00014    57145 TXH +3 00000 0 00043                                                               
                 FERRTN.(ERR4)                                                      052  LM00071
 57146 TSX +0 07400 4 00014    57147 TXH +3 00000 0 00044                                                               
                 W'R COMARG.(1,N1).E.FENCE                                          053  LM00075
 57150 TSX +0 07400 4 00010    57151 TXH +3 00000 0 57064    57152 TXH +3 00000 0 00027    57153 SUB +0 40200 0 25363   
 57154 TNZ -0 10000 0 57164                                                                                             
                    PRNTP.(MESS2)                                                   054  LM00076
 57155 TSX +0 07400 4 00022    57156 TXH +3 00000 0 26656                                                               
                    PRNTP.(MESS3)                                                   055  LM00077
 57157 TSX +0 07400 4 00022    57160 TXH +3 00000 0 26666                                                               
                    CHNCOM.(0)                                                      056  LM00078
 57161 TSX +0 07400 4 00007    57162 TXH +3 00000 0 57063                                                               
                 O'R COMARG.(2) .E. FENCE                                           057  LM00079
 57163 TRA +0 02000 0 57207    57164 TSX +0 07400 4 00010    57165 TXH +3 00000 0 57065    57166 SUB +0 40200 0 25363   
 57167 TNZ -0 10000 0 57172                                                                                             
                   T'O START                                                        058  LM00080
 57170 TRA +0 02000 0 00067                                                                                             
                 O'R COMARG.(2).E.$NCLOAD$                                          059  LM00081
 57171 TRA +0 02000 0 57207    57172 TSX +0 07400 4 00010    57173 TXH +3 00000 0 57065    57174 SUB +0 40200 0 57123   
 57175 TNZ -0 10000 0 57201                                                                                             
                   LPOINT = 30K                                                     060  LM00082
 57176 CLA +0 50000 0 57106    57177 STO +0 60100 0 25476                                                               
                 O'R COMARG.(2).E.$ VLOAD$                                          061  LM00083
 57200 TRA +0 02000 0 57207    57201 TSX +0 07400 4 00010    57202 TXH +3 00000 0 57065    57203 SUB +0 40200 0 57127   
 57204 TNZ -0 10000 0 57207                                                                                             
                   LPOINT = 346K                                                    062  LM00084
 57205 CLA +0 50000 0 57113    57206 STO +0 60100 0 25476                                                               
                 E'L                                                                063  LM00085
                 W'R COMARG.(2).E.QCOMB .OR. COMARG.(3) .E. QCOMB                   064  LM00086
                1 .OR. COMARG.(4) .E. QCOMB,ICOMB = 1                               064  LM00087
 57207 TSX +0 07400 4 00010    57210 TXH +3 00000 0 57067    57211 SUB +0 40200 0 27413    57212 TZE +0 10000 0 57223   
 57213 TSX +0 07400 4 00010    57214 TXH +3 00000 0 57066    57215 SUB +0 40200 0 27413    57216 TZE +0 10000 0 57223   
 57217 TSX +0 07400 4 00010    57220 TXH +3 00000 0 57065    57221 SUB +0 40200 0 27413    57222 TNZ -0 10000 0 57225   
 57223 CLA +0 50000 0 57064    57224 STO +0 60100 0 25412                                                               
                 W'R COMARG.(3) .E. $NOLIST$ .OR. COMARG.(2) .E. $NOLIST$           065  LM00088
                1 .OR. COMARG.(4) .E. $NOLIST$,  ILIST = 1                          065  LM00089
 57225 TSX +0 07400 4 00010    57226 TXH +3 00000 0 57067    57227 SUB +0 40200 0 57124    57230 TZE +0 10000 0 57241   
 57231 TSX +0 07400 4 00010    57232 TXH +3 00000 0 57065    57233 SUB +0 40200 0 57124    57234 TZE +0 10000 0 57241   
 57235 TSX +0 07400 4 00010    57236 TXH +3 00000 0 57066    57237 SUB +0 40200 0 57124    57240 TNZ -0 10000 0 57243   
 57241 CLA +0 50000 0 57064    57242 STO +0 60100 0 25414                                                               
      START      BFOPEN.($R$,N1,N2,BUFF1(BL),-0,-0,ERR1)                            066  LM00091
 57243 CLS +0 50200 0 57063    57244 STO +0 60100 0 61742    57245 CLS +0 50200 0 57063    57246 STO +0 60100 0 61743   
 57247 CLA +0 50000 0 00116    57250 SUB +0 40200 0 57251    57251 TXH +3 00000 0 00777    57252 STA +0 62100 0 57257   
 57253 TSX +0 07400 4 00003    57254 TXH +3 00000 0 57125    57255 TXH +3 00000 0 00027    57256 TXH +3 00000 0 27346   
 57257 TXH +3 00000 0 00000    57260 TXH +3 00000 0 61743    57261 TXH +3 00000 0 61742    57262 TXH +3 00000 0 00041   
      READ1      BFREAD.(N1,N2,A(14)...14,EOF1,EOFCT,ERR1)                          067  LM00095
 57263 TSX +0 07400 4 00004    57264 TXH +3 00000 0 00027    57265 TXH +3 00000 0 27346    57266 TIX +2 57100 0 00072   
 57267 TXH +3 00000 0 00034    57270 TXH +3 00000 0 02561    57271 TXH +3 00000 0 00041                                 
                 W'R (A(14) .E. TAG) .OR. (A(14) .E. $      $), T'O READ1           068  LM00096
 57272 CLA +0 50000 0 00072    57273 SUB +0 40200 0 57126    57274 TZE +0 10000 0 57300    57275 CLA +0 50000 0 00072   
 57276 SUB +0 40200 0 27473    57277 TNZ -0 10000 0 57301    57300 TRA +0 02000 0 00064                                 
                 BFOPEN.($R$,A(14),QBSS,BUFF2(BL),-0,-0,ERR2)                       069  LM00097
 57301 CLS +0 50200 0 57063    57302 STO +0 60100 0 61743    57303 CLS +0 50200 0 57063    57304 STO +0 60100 0 61742   
 57305 CLA +0 50000 0 00116    57306 SUB +0 40200 0 57307    57307 TXH +3 00000 0 01660    57310 STA +0 62100 0 57315   
 57311 TSX +0 07400 4 00003    57312 TXH +3 00000 0 57125    57313 TXH +3 00000 0 00072    57314 TXH +3 00000 0 27412   
 57315 TXH +3 00000 0 00000    57316 TXH +3 00000 0 61742    57317 TXH +3 00000 0 61743    57320 TXH +3 00000 0 00042   
      READ2      BFREAD.(A(14),QBSS,PROG(28)...28,EOF2,EOFCT,ERR2)                  070  LM00101
 57321 TSX +0 07400 4 00004    57322 TXH +3 00000 0 00072    57323 TXH +3 00000 0 27412    57324 TIX +2 57111 0 27354   
 57325 TXH +3 00000 0 00035    57326 TXH +3 00000 0 02561    57327 TXH +3 00000 0 00042                                 
      R2         W'R (PROG(28) .A. MASK1) .E. 4005K8                                071  LM00102
 57330 CAL -0 50000 0 27354    57331 ANA -0 32000 0 25477    57332 SLW +0 60200 0 61743    57333 CLA +0 50000 0 61743   
 57334 SUB +0 40200 0 57122    57335 TNZ -0 10000 0 57606                                                               
                   NW = (PROG(28) .A. MASK2) .RS. 18                                072  LM00103
 57336 CAL -0 50000 0 27354    57337 ANA -0 32000 0 25500    57340 SLW +0 60200 0 61743    57341 CAL -0 50000 0 57104   
 57342 STA +0 62100 0 57344    57343 CAL -0 50000 0 61743    57344 LGR -0 76500 0 00000    57345 SLW +0 60200 0 27352   
                   K = 26                                                           073  LM00104
 57346 CLA +0 50000 0 57107    57347 STO +0 60100 0 25421                                                               
                   W'R PROGSW .E. 1, T'O LTOP1                                      074  LM00105
 57350 CLA +0 50000 0 27411    57351 SUB +0 40200 0 57064    57352 TNZ -0 10000 0 57354    57353 TRA +0 02000 0 00052   
                   NW = NW-2                                                        075  LM00106
 57354 CLA +0 50000 0 27352    57355 SUB +0 40200 0 57065    57356 STO +0 60100 0 27352                                 
                   K = K-2                                                          076  LM00107
 57357 CLA +0 50000 0 25421    57360 SUB +0 40200 0 57065    57361 STO +0 60100 0 25421                                 
                   PROGSW = 1                                                       077  LM00108
 57362 CLA +0 50000 0 57064    57363 STO +0 60100 0 27411                                                               
                   LPOINT = LPOINT + PL                                             078  LM00109
 57364 CLA +0 50000 0 25476    57365 ADD +0 40000 0 27353    57366 STO +0 60100 0 25476                                 
                 TEMP = (PROG(25) .A. 4K11) .RS. 3                                  079  LM00110
 57367 CAL -0 50000 0 27357    57370 ANA -0 32000 0 57121    57371 SLW +0 60200 0 61743    57372 CAL -0 50000 0 57066   
 57373 STA +0 62100 0 57375    57374 CAL -0 50000 0 61743    57375 LGR -0 76500 0 00000    57376 SLW +0 60200 0 27474   
                 W'R TEMP .NE. 0, LPOINT = 2*((LPOINT+1)/2)                         080  LM00111
 57377 CLA +0 50000 0 27474    57400 SUB +0 40200 0 57063    57401 TZE +0 10000 0 57410    57402 CLA +0 50000 0 25476   
 57403 ADD +0 40000 0 57064    57404 LRS +0 76500 0 00043    57405 DVP +0 22100 0 57065    57406 MPY +0 20000 0 57065   
 57407 STQ -0 60000 0 25476                                                                                             
                   PL = PROG(26).A.MASK3                                            081  LM00115
 57410 CAL -0 50000 0 27356    57411 ANA -0 32000 0 25501    57412 SLW +0 60200 0 27353                                 
                   TVL = PROG(26) .RS. 18                                           082  LM00116
 57413 CAL -0 50000 0 57104    57414 STA +0 62100 0 57416    57415 CAL -0 50000 0 27356    57416 LGR -0 76500 0 00000   
 57417 SLW +0 60200 0 57060                                                                                             
                   EPARAY(JE,3) = PROG(25) .A. 377777777777K                        083  LM00117
 57420 CAL -0 50000 0 27357    57421 ANA -0 32000 0 57120    57422 SLW +0 60200 0 61743    57423 LDQ +0 56000 0 57066   
 57424 CLA +0 50000 0 25416    57425 TSX +0 07400 4 00001    57426 TXH +3 02555 0 25362    57427 PAX +0 73400 1 00000   
 57430 CLA +0 50000 0 61743    57431 STO +0 60100 1 25362                                                               
                 W'R (EPARAY(JE,3).NE.0).AND.(EPARAY(JE,3).L.LCOM),                 084  LM00118
                1LCOM = EPARAY(JE,3)                                                084  LM00119
 57432 LDQ +0 56000 0 57066    57433 CLA +0 50000 0 25416    57434 TSX +0 07400 4 00001    57435 TXH +3 02555 0 25362   
 57436 PAX +0 73400 1 00000    57437 CLA +0 50000 1 25362    57440 SUB +0 40200 0 25432    57441 TZE +0 10000 0 57462   
 57442 TPL +0 12000 0 57462    57443 LDQ +0 56000 0 57066    57444 CLA +0 50000 0 25416    57445 TSX +0 07400 4 00001   
 57446 TXH +3 02555 0 25362    57447 PAX +0 73400 1 00000    57450 CLA +0 50000 1 25362    57451 SUB +0 40200 0 57063   
 57452 TZE +0 10000 0 57462    57453 LDQ +0 56000 0 57066    57454 CLA +0 50000 0 25416    57455 TSX +0 07400 4 00001   
 57456 TXH +3 02555 0 25362    57457 PAX +0 73400 2 00000    57460 CLA +0 50000 2 25362    57461 STO +0 60100 0 25432   
                   EPARAY(JE,0) = A(14)                                             085  LM00120
 57462 LDQ +0 56000 0 57063    57463 CLA +0 50000 0 25416    57464 TSX +0 07400 4 00001    57465 TXH +3 02555 0 25362   
 57466 PAX +0 73400 1 00000    57467 CLA +0 50000 0 00072    57470 STO +0 60100 1 25362                                 
                   EPARAY(JE,1) = OCABC.(LPOINT)                                    086  LM00121
 57471 TSX +0 07400 4 00020    57472 TXH +3 00000 0 25476    57473 STO +0 60100 0 61743    57474 LDQ +0 56000 0 57064   
 57475 CLA +0 50000 0 25416    57476 TSX +0 07400 4 00001    57477 TXH +3 02555 0 25362    57500 PAX +0 73400 1 00000   
 57501 CLA +0 50000 0 61743    57502 STO +0 60100 1 25362                                                               
                   EPARAY(JE,2) = PL                                                087  LM00122
 57503 LDQ +0 56000 0 57065    57504 CLA +0 50000 0 25416    57505 TSX +0 07400 4 00001    57506 TXH +3 02555 0 25362   
 57507 PAX +0 73400 1 00000    57510 CLA +0 50000 0 27353    57511 STO +0 60100 1 25362                                 
                   EPARAY(JE,4) = TAG                                               088  LM00123
 57512 LDQ +0 56000 0 57067    57513 CLA +0 50000 0 25416    57514 TSX +0 07400 4 00001    57515 TXH +3 02555 0 25362   
 57516 PAX +0 73400 1 00000    57517 CLA +0 50000 0 27473    57520 STO +0 60100 1 25362                                 
                   JE =JE+1                                                         089  LM00124
 57521 CLA +0 50000 0 25416    57522 ADD +0 40000 0 57064    57523 STO +0 60100 0 25416                                 
      LTOP1        T'H LOOP1, FOR ICNT = NW,-2,ICNT.LE.0                            090  LM00125
 57524 CLA +0 50000 0 27352    57525 STO +0 60100 0 25411    57526 TRA +0 02000 0 57532    57527 CLS +0 50200 0 57065   
 57530 ADD +0 40000 0 25411    57531 STO +0 60100 0 25411    57532 CLA +0 50000 0 25411    57533 SUB +0 40200 0 57063   
 57534 TZE +0 10000 0 57605    57535 TMI -0 12000 0 57605                                                               
                     EPARAY(JE,0) = PROG(K)                                         091  LM00126
 57536 LDQ +0 56000 0 57063    57537 CLA +0 50000 0 25416    57540 TSX +0 07400 4 00001    57541 TXH +3 02555 0 25362   
 57542 PAX +0 73400 1 00000    57543 LXA +0 53400 2 25421    57544 CLA +0 50000 2 27410    57545 STO +0 60100 1 25362   
                     EPARAY(JE,1) = OCABC.(.ABS.(PROG(K-1)) + LPOINT)               092  LM00127
 57546 CLA +0 50000 0 25421    57547 SUB +0 40200 0 57064    57550 PAX +0 73400 2 00000    57551 CLA +0 50000 2 27410   
 57552 SSP +0 76000 0 00003    57553 ADD +0 40000 0 25476    57554 STO +0 60100 0 61743    57555 TSX +0 07400 4 00020   
 57556 TXH +3 00000 0 61743    57557 STO +0 60100 0 61743    57560 LDQ +0 56000 0 57064    57561 CLA +0 50000 0 25416   
 57562 TSX +0 07400 4 00001    57563 TXH +3 02555 0 25362    57564 PAX +0 73400 1 00000    57565 CLA +0 50000 0 61743   
 57566 STO +0 60100 1 25362                                                                                             
                   EPARAY(JE,2) = 3                                                 093  LM00128
 57567 LDQ +0 56000 0 57065    57570 CLA +0 50000 0 25416    57571 TSX +0 07400 4 00001    57572 TXH +3 02555 0 25362   
 57573 PAX +0 73400 1 00000    57574 CLA +0 50000 0 57066    57575 STO +0 60100 1 25362                                 
                     K = K-2                                                        094  LM00129
 57576 CLA +0 50000 0 25421    57577 SUB +0 40200 0 57065    57600 STO +0 60100 0 25421                                 
      LOOP1          JE = JE + 1                                                    095  LM00130
 57601 CLA +0 50000 0 25416    57602 ADD +0 40000 0 57064    57603 STO +0 60100 0 25416    57604 TRA +0 02000 0 57527   
                   T'O READ2                                                        096  LM00131
 57605 TRA +0 02000 0 00065                                                                                             
                   E'L                                                              097  LM00132
                 W'R TVSW .E. 1, T'O LTOP2                                          098  LM00136
 57606 CLA +0 50000 0 57061    57607 SUB +0 40200 0 57064    57610 TNZ -0 10000 0 57612    57611 TRA +0 02000 0 00053   
                 TVSW =1                                                            099  LM00137
 57612 CLA +0 50000 0 57064    57613 STO +0 60100 0 57061                                                               
                 JT = (JT/50 + 1) * 50                                              100  LM00138
 57614 LDQ +0 56000 0 25420    57615 PXD -0 75400 0 00000    57616 LLS +0 76300 0 00000    57617 DVP +0 22100 0 57112   
 57620 XCA +0 13100 0 00000    57621 ADD +0 40000 0 57064    57622 XCA +0 13100 0 00000    57623 MPY +0 20000 0 57112   
 57624 STQ -0 60000 0 25420                                                                                             
                 TVARAY(JT) = A(14)                                                 101  LM00139
 57625 LXA +0 53400 1 25420    57626 CLA +0 50000 0 00072    57627 STO +0 60100 1 57057                                 
                 JT = JT + 1                                                        102  LM00140
 57630 CLA +0 50000 0 25420    57631 ADD +0 40000 0 57064    57632 STO +0 60100 0 25420                                 
      LTOP2      K = 24                                                             103  LM00141
 57633 CLA +0 50000 0 57106    57634 STO +0 60100 0 25421                                                               
                 IC = 20                                                            104  LM00142
 57635 CLA +0 50000 0 57105    57636 STO +0 60100 0 25413                                                               
                 W'R TVL.L.20, IC = TVL                                             105  LM00143
 57637 CLA +0 50000 0 57060    57640 SUB +0 40200 0 57105    57641 TZE +0 10000 0 57645    57642 TPL +0 12000 0 57645   
 57643 CLA +0 50000 0 57060    57644 STO +0 60100 0 25413                                                               
                 T'H LOOP2, FOR ICNT = IC, -1, ICNT .E. 0                           106  LM00144
 57645 CLA +0 50000 0 25413    57646 STO +0 60100 0 25411    57647 TRA +0 02000 0 57653    57650 CLS +0 50200 0 57064   
 57651 ADD +0 40000 0 25411    57652 STO +0 60100 0 25411    57653 CLA +0 50000 0 25411    57654 SUB +0 40200 0 57063   
 57655 TZE +0 10000 0 57671                                                                                             
                   TVARAY(JT) = PROG(K)                                             107  LM00145
 57656 LXA +0 53400 1 25420    57657 LXA +0 53400 2 25421    57660 CLA +0 50000 2 27410    57661 STO +0 60100 1 57057   
                   K = K - 1                                                        108  LM00146
 57662 CLA +0 50000 0 25421    57663 SUB +0 40200 0 57064    57664 STO +0 60100 0 25421                                 
      LOOP2        JT = JT + 1                                                      109  LM00147
 57665 CLA +0 50000 0 25420    57666 ADD +0 40000 0 57064    57667 STO +0 60100 0 25420    57670 TRA +0 02000 0 57650   
                 W'R TVL .G. 20                                                     110  LM00148
 57671 CLA +0 50000 0 57060    57672 SUB +0 40200 0 57105    57673 TZE +0 10000 0 57702    57674 TMI -0 12000 0 57702   
                   TVL = TVL - 20                                                   111  LM00149
 57675 CLA +0 50000 0 57060    57676 SUB +0 40200 0 57105    57677 STO +0 60100 0 57060                                 
                   T'O READ2                                                        112  LM00150
 57700 TRA +0 02000 0 00065                                                                                             
                 O'E                                                                113  LM00151
 57701 TRA +0 02000 0 57707                                                                                             
                   TVARAY(JT) = FENCE                                               114  LM00152
 57702 LXA +0 53400 1 25420    57703 CLA +0 50000 0 25363    57704 STO +0 60100 1 57057                                 
                   TVSW = 0                                                         115  LM00153
 57705 CLA +0 50000 0 57063    57706 STO +0 60100 0 57061                                                               
                 E'L                                                                116  LM00154
                 PROGSW = 0                                                         117  LM00155
 57707 CLA +0 50000 0 57063    57710 STO +0 60100 0 27411                                                               
                 W'R ICOMB .E. 0                                                    118  LM00156
 57711 CLA +0 50000 0 25412    57712 SUB +0 40200 0 57063    57713 TNZ -0 10000 0 57721                                 
                   BFCLOS.(A(14),QBSS,READ1)                                        119  LM00157
 57714 TSX +0 07400 4 00002    57715 TXH +3 00000 0 00072    57716 TXH +3 00000 0 27412    57717 TXH +3 00000 0 00064   
                   T'O READ1                                                        120  LM00158
 57720 TRA +0 02000 0 00064                                                                                             
                 E'L                                                                121  LM00159
      SKIP       BFREAD.(A(14),QBSS,PROG(28)...28,EOF3,EOFCT,ERR3)                  122  LM00163
 57721 TSX +0 07400 4 00004    57722 TXH +3 00000 0 00072    57723 TXH +3 00000 0 27412    57724 TIX +2 57111 0 27354   
 57725 TXH +3 00000 0 00036    57726 TXH +3 00000 0 02561    57727 TXH +3 00000 0 00043                                 
                 W'R PROG(28) .A. MASK1 .E. 4005K8, T'O R2                          123  LM00164
 57730 CAL -0 50000 0 27354    57731 ANA -0 32000 0 25477    57732 SLW +0 60200 0 61743    57733 CLA +0 50000 0 61743   
 57734 SUB +0 40200 0 57122    57735 TNZ -0 10000 0 57737    57736 TRA +0 02000 0 00063                                 
                 T'O SKIP                                                           124  LM00165
 57737 TRA +0 02000 0 00066                                                                                             
      EOF3       BFCLOS.(A(14),QBSS,READ1)                                          125  LM00166
 57740 TSX +0 07400 4 00002    57741 TXH +3 00000 0 00072    57742 TXH +3 00000 0 27412    57743 TXH +3 00000 0 00064   
                 T'O READ1                                                          126  LM00167
 57744 TRA +0 02000 0 00064                                                                                             
      EOF1       BFCLOS.(N1,N2,EOF1A)                                               127  LM00172
 57745 TSX +0 07400 4 00002    57746 TXH +3 00000 0 00027    57747 TXH +3 00000 0 27346    57750 TXH +3 00000 0 00033   
      EOF1A      HCORE = LPOINT + PL                                                128  LM00173
 57751 CLA +0 50000 0 25476    57752 ADD +0 40000 0 27353    57753 STO +0 60100 0 25365                                 
                 JESAVE = JE                                                        129  LM00174
 57754 CLA +0 50000 0 25416    57755 STO +0 60100 0 25417                                                               
                 W'R JT .L. 0                                                       130  LM00175
 57756 CLA +0 50000 0 25420    57757 SUB +0 40200 0 57063    57760 TZE +0 10000 0 57767    57761 TPL +0 12000 0 57767   
                   TVARAY(1) = FENCE                                                131  LM00176
 57762 CLA +0 50000 0 25363    57763 STO +0 60100 0 57056                                                               
                   TVARAY(2) = FENCE                                                132  LM00177
 57764 CLA +0 50000 0 25363    57765 STO +0 60100 0 57055                                                               
                   T'O PART2                                                        133  LM00178
 57766 TRA +0 02000 0 00062                                                                                             
                 E'L                                                                134  LM00179
                 TVARAY(JT+1) = FENCE                                               135  LM00180
 57767 CLA +0 50000 0 25420    57770 ADD +0 40000 0 57064    57771 PAX +0 73400 1 00000    57772 CLA +0 50000 0 25363   
 57773 STO +0 60100 1 57057                                                                                             
                 JT = - 50                                                          136  LM00181
 57774 CLS +0 50200 0 57112    57775 STO +0 60100 0 25420                                                               
                 T'O PART2                                                          137  LM00182
 57776 TRA +0 02000 0 00062                                                                                             
      EOF2       PRNTP.(MESS1)                                                      138  LM00186
 57777 TSX +0 07400 4 00022    60000 TXH +3 00000 0 26643                                                               
                 T'O ER2A                                                           139  LM00187
 60001 TRA +0 02000 0 00037                                                                                             
      ERR1       PRNTER.                                                            140  LM00188
 60002 TSX +0 07400 4 00021                                                                                             
                 BFCLOS.($ALL$,-0,ERRX)                                             141  LM00189
 60003 CLS +0 50200 0 57063    60004 STO +0 60100 0 61743    60005 TSX +0 07400 4 00002    60006 TXH +3 00000 0 57115   
 60007 TXH +3 00000 0 61743    60010 TXH +3 00000 0 00045                                                               
      ERRX       CHNCOM.(0)                                                         142  LM00190
 60011 TSX +0 07400 4 00007    60012 TXH +3 00000 0 57063                                                               
      ERR2       PRNTER.                                                            143  LM00191
 60013 TSX +0 07400 4 00021                                                                                             
      ER2A       BFCLOS.(A(14),QBSS,ER2B)                                           144  LM00192
 60014 TSX +0 07400 4 00002    60015 TXH +3 00000 0 00072    60016 TXH +3 00000 0 27412    60017 TXH +3 00000 0 00040   
      ER2B       MFARAY = MFARAY + 1                                                145  LM00193
 60020 CLA +0 50000 0 27033    60021 ADD +0 40000 0 57064    60022 STO +0 60100 0 27033                                 
                 MFARAY(MFARAY) = A(14)                                             146  LM00194
 60023 LXA +0 53400 1 27033    60024 CLA +0 50000 0 00072    60025 STO +0 60100 1 27033                                 
                 T'O READ1                                                          147  LM00195
 60026 TRA +0 02000 0 00064                                                                                             
      ERR3       PRNTER.                                                            148  LM00196
 60027 TSX +0 07400 4 00021                                                                                             
                 BFCLOS. (A(14),QBSS,READ1)                                         149  LM00197
 60030 TSX +0 07400 4 00002    60031 TXH +3 00000 0 00072    60032 TXH +3 00000 0 27412    60033 TXH +3 00000 0 00064   
                 T'O READ1                                                          150  LM00198
 60034 TRA +0 02000 0 00064                                                                                             
      PART2      JT = (JT/50 + 1)*50                                                151  LM00205
 60035 LDQ +0 56000 0 25420    60036 PXD -0 75400 0 00000    60037 LLS +0 76300 0 00000    60040 DVP +0 22100 0 57112   
 60041 XCA +0 13100 0 00000    60042 ADD +0 40000 0 57064    60043 XCA +0 13100 0 00000    60044 MPY +0 20000 0 57112   
 60045 STQ -0 60000 0 25420                                                                                             
                 MODNAM = TVARAY(JT)                                                152  LM00206
 60046 LXA +0 53400 2 25420    60047 CLA +0 50000 2 57057    60050 STO +0 60100 0 27034                                 
      MNAM       JT = JT +1                                                         153  LM00207
 60051 CLA +0 50000 0 25420    60052 ADD +0 40000 0 57064    60053 STO +0 60100 0 25420                                 
                 W'R TVARAY(JT) .NE. FENCE, T'O LTOP3                               154  LM00208
 60054 LXA +0 53400 1 25420    60055 CLA +0 50000 1 57057    60056 SUB +0 40200 0 25363    60057 TZE +0 10000 0 60061   
 60060 TRA +0 02000 0 00054                                                                                             
                 W'R TVARAY(JT+1) .E. FENCE, T'O DUPCK                              155  LM00209
 60061 CLA +0 50000 0 25420    60062 ADD +0 40000 0 57064    60063 PAX +0 73400 1 00000    60064 CLA +0 50000 1 57057   
 60065 SUB +0 40200 0 25363    60066 TNZ -0 10000 0 60070    60067 TRA +0 02000 0 00030                                 
                 T'O PART2                                                          156  LM00210
 60070 TRA +0 02000 0 00062                                                                                             
      LTOP3      T'H LOOP3, FOR JE=1,1, JE.GE.JESAVE                                157  LM00211
 60071 CLA +0 50000 0 57064    60072 STO +0 60100 0 25416    60073 TRA +0 02000 0 60077    60074 CLA +0 50000 0 25416   
 60075 ADD +0 40000 0 57064    60076 STO +0 60100 0 25416    60077 CLA +0 50000 0 25416    60100 SUB +0 40200 0 25417   
 60101 TZE +0 10000 0 60232    60102 TPL +0 12000 0 60232                                                               
                   W'R EPARAY(JE,4) .E. TAG                                         158  LM00212
 60103 LDQ +0 56000 0 57067    60104 CLA +0 50000 0 25416    60105 TSX +0 07400 4 00001    60106 TXH +3 02555 0 25362   
 60107 PAX +0 73400 1 00000    60110 CLA +0 50000 1 25362    60111 SUB +0 40200 0 27473    60112 TNZ -0 10000 0 60123   
                     FILEN = EPARAY(JE,0)                                           159  LM00213
 60113 LDQ +0 56000 0 57063    60114 CLA +0 50000 0 25416    60115 TSX +0 07400 4 00001    60116 TXH +3 02555 0 25362   
 60117 PAX +0 73400 2 00000    60120 CLA +0 50000 2 25362    60121 STO +0 60100 0 25364                                 
                     T'O LOOP3                                                      160  LM00214
 60122 TRA +0 02000 0 00046                                                                                             
                   E'L                                                              161  LM00215
                   W'R TVARAY(JT) .NE. EPARAY(JE,0), T'O LOOP3                      162  LM00216
 60123 LDQ +0 56000 0 57063    60124 CLA +0 50000 0 25416    60125 TSX +0 07400 4 00001    60126 TXH +3 02555 0 25362   
 60127 LXA +0 53400 1 25420    60130 PAX +0 73400 2 00000    60131 CLA +0 50000 1 57057    60132 SUB +0 40200 2 25362   
 60133 TZE +0 10000 0 60135    60134 TRA +0 02000 0 00046                                                               
                   TV1(JT,0) = FILEN                                                163  LM00217
 60135 LDQ +0 56000 0 57063    60136 CLA +0 50000 0 25420    60137 TSX +0 07400 4 00001    60140 TXH +3 02560 0 47216   
 60141 PAX +0 73400 1 00000    60142 CLA +0 50000 0 25364    60143 STO +0 60100 1 47216                                 
                   TV1(JT,1) = EPARAY(JE,1)                                         164  LM00218
 60144 LDQ +0 56000 0 57064    60145 CLA +0 50000 0 25416    60146 TSX +0 07400 4 00001    60147 TXH +3 02555 0 25362   
 60150 STO +0 60100 0 61743    60151 LDQ +0 56000 0 57064    60152 CLA +0 50000 0 25420    60153 TSX +0 07400 4 00001   
 60154 TXH +3 02560 0 47216    60155 PAX +0 73400 1 00000    60156 LXA +0 53400 2 61743    60157 CLA +0 50000 2 25362   
 60160 STO +0 60100 1 47216                                                                                             
                   W'R EPARAY(JE,2) .G. 14, T'O MNAM                                165  LM00219
 60161 LDQ +0 56000 0 57065    60162 CLA +0 50000 0 25416    60163 TSX +0 07400 4 00001    60164 TXH +3 02555 0 25362   
 60165 PAX +0 73400 1 00000    60166 CLA +0 50000 1 25362    60167 SUB +0 40200 0 57100    60170 TZE +0 10000 0 60173   
 60171 TMI -0 12000 0 60173    60172 TRA +0 02000 0 00060                                                               
                   EPARAY(JE,EPARAY(JE,2)) = MODNAM                                 166  LM00220
 60173 LDQ +0 56000 0 57065    60174 CLA +0 50000 0 25416    60175 TSX +0 07400 4 00001    60176 TXH +3 02555 0 25362   
 60177 SUB +0 40200 0 60200    60200 TXH +3 00000 0 25362    60201 STA +0 62100 0 60202    60202 LDQ +0 56000 0 00000   
 60203 CLA +0 50000 0 25416    60204 TSX +0 07400 4 00000    60205 TXH +3 02555 0 25362    60206 PAX +0 73400 1 00000   
 60207 CLA +0 50000 0 27034    60210 STO +0 60100 1 25362                                                               
                   EPARAY(JE,2) = EPARAY(JE,2) + 1                                  167  LM00221
 60211 LDQ +0 56000 0 57065    60212 CLA +0 50000 0 25416    60213 TSX +0 07400 4 00001    60214 TXH +3 02555 0 25362   
 60215 PAX +0 73400 1 00000    60216 CLA +0 50000 1 25362    60217 ADD +0 40000 0 57064    60220 STO +0 60100 0 61743   
 60221 LDQ +0 56000 0 57065    60222 CLA +0 50000 0 25416    60223 TSX +0 07400 4 00001    60224 TXH +3 02555 0 25362   
 60225 PAX +0 73400 1 00000    60226 CLA +0 50000 0 61743    60227 STO +0 60100 1 25362                                 
                   T'O MNAM                                                         168  LM00222
 60230 TRA +0 02000 0 00060                                                                                             
      LOOP3      CONTINUE                                                           169  LM00223
 60231 TRA +0 02000 0 60074                                                                                             
                 MEARAY = MEARAY + 1                                                170  LM00224
 60232 CLA +0 50000 0 26633    60233 ADD +0 40000 0 57064    60234 STO +0 60100 0 26633                                 
                 MEARAY(MEARAY) = TVARAY(JT)                                        171  LM00225
 60235 LXA +0 53400 1 26633    60236 LXA +0 53400 2 25420    60237 CLA +0 50000 2 57057    60240 STO +0 60100 1 26633   
                 TV1(JT,0) = BLANK                                                  172  LM00226
 60241 LDQ +0 56000 0 57063    60242 CLA +0 50000 0 25420    60243 TSX +0 07400 4 00001    60244 TXH +3 02560 0 47216   
 60245 PAX +0 73400 1 00000    60246 CLA +0 50000 0 00115    60247 STO +0 60100 1 47216                                 
                 TV1(JT,1) = BLANK                                                  173  LM00227
 60250 LDQ +0 56000 0 57064    60251 CLA +0 50000 0 25420    60252 TSX +0 07400 4 00001    60253 TXH +3 02560 0 47216   
 60254 PAX +0 73400 1 00000    60255 CLA +0 50000 0 00115    60256 STO +0 60100 1 47216                                 
                 T'O MNAM                                                           174  LM00228
 60257 TRA +0 02000 0 00060                                                                                             
      DUPCK      T'H LOOP5, FOR JE1 = 1,1,JE1.GE.JESAVE                             175  LM00232
 60260 CLA +0 50000 0 57064    60261 STO +0 60100 0 25415    60262 TRA +0 02000 0 60266    60263 CLA +0 50000 0 25415   
 60264 ADD +0 40000 0 57064    60265 STO +0 60100 0 25415    60266 CLA +0 50000 0 25415    60267 SUB +0 40200 0 25417   
 60270 TZE +0 10000 0 60363    60271 TPL +0 12000 0 60363                                                               
                   W'R EPARAY(JE1,4) .E. TAG, T'O LOOP5                             176  LM00233
 60272 LDQ +0 56000 0 57067    60273 CLA +0 50000 0 25415    60274 TSX +0 07400 4 00001    60275 TXH +3 02555 0 25362   
 60276 PAX +0 73400 1 00000    60277 CLA +0 50000 1 25362    60300 SUB +0 40200 0 27473    60301 TNZ -0 10000 0 60303   
 60302 TRA +0 02000 0 00050                                                                                             
                   T'H LOOP4, FOR JE=JE1+1,1,JE.E.JESAVE                            177  LM00234
 60303 CLA +0 50000 0 25415    60304 ADD +0 40000 0 57064    60305 STO +0 60100 0 25416    60306 TRA +0 02000 0 60312   
 60307 CLA +0 50000 0 25416    60310 ADD +0 40000 0 57064    60311 STO +0 60100 0 25416    60312 CLA +0 50000 0 25416   
 60313 SUB +0 40200 0 25417    60314 TZE +0 10000 0 60362                                                               
                     W'R EPARAY(JE,4) .E. TAG, T'O LOOP4                            178  LM00235
 60315 LDQ +0 56000 0 57067    60316 CLA +0 50000 0 25416    60317 TSX +0 07400 4 00001    60320 TXH +3 02555 0 25362   
 60321 PAX +0 73400 1 00000    60322 CLA +0 50000 1 25362    60323 SUB +0 40200 0 27473    60324 TNZ -0 10000 0 60326   
 60325 TRA +0 02000 0 00047                                                                                             
                     W'R EPARAY(JE1,0) .NE. EPARAY(JE,0), T'O LOOP4                 179  LM00236
 60326 LDQ +0 56000 0 57063    60327 CLA +0 50000 0 25416    60330 TSX +0 07400 4 00001    60331 TXH +3 02555 0 25362   
 60332 STO +0 60100 0 61743    60333 LDQ +0 56000 0 57063    60334 CLA +0 50000 0 25415    60335 TSX +0 07400 4 00001   
 60336 TXH +3 02555 0 25362    60337 PAX +0 73400 1 00000    60340 LXA +0 53400 2 61743    60341 CLA +0 50000 1 25362   
 60342 SUB +0 40200 2 25362    60343 TZE +0 10000 0 60345    60344 TRA +0 02000 0 00047                                 
                     MULT = MULT + 1                                                180  LM00237
 60345 CLA +0 50000 0 27345    60346 ADD +0 40000 0 57064    60347 STO +0 60100 0 27345                                 
                     MULT(MULT) = EPARAY(JE,0)                                      181  LM00238
 60350 LDQ +0 56000 0 57063    60351 CLA +0 50000 0 25416    60352 TSX +0 07400 4 00001    60353 TXH +3 02555 0 25362   
 60354 LXA +0 53400 1 27345    60355 PAX +0 73400 2 00000    60356 CLA +0 50000 2 25362    60357 STO +0 60100 1 27345   
                     T'O LOOP5                                                      182  LM00239
 60360 TRA +0 02000 0 00050                                                                                             
      LOOP4        CONTINUE                                                         183  LM00240
 60361 TRA +0 02000 0 60307                                                                                             
      LOOP5      CONTINUE                                                           184  LM00241
 60362 TRA +0 02000 0 60263                                                                                             
                 EXECUTE DELETE.(FILNAM)                                            185  LM00245
 60363 TSX +0 07400 4 00011    60364 TXH +3 00000 0 00027                                                               
                 BFOPEN.($W$,N1,NA2,BUFF1(BL),BUFF2(BL),BUFF3(BL),ERR4)             186  LM00246
 60365 CLA +0 50000 0 00116    60366 SUB +0 40200 0 60367    60367 TXH +3 00000 0 02541    60370 STA +0 62100 0 60407   
 60371 CLA +0 50000 0 00116    60372 SUB +0 40200 0 60373    60373 TXH +3 00000 0 01660    60374 STA +0 62100 0 60406   
 60375 CLA +0 50000 0 00116    60376 SUB +0 40200 0 60377    60377 TXH +3 00000 0 00777    60400 STA +0 62100 0 60405   
 60401 TSX +0 07400 4 00003    60402 TXH +3 00000 0 57130    60403 TXH +3 00000 0 00027    60404 TXH +3 00000 0 00026   
 60405 TXH +3 00000 0 00000    60406 TXH +3 00000 0 00000    60407 TXH +3 00000 0 00000    60410 TXH +3 00000 0 00044   
                 TITLE(8) = N1                                                      187  LM00247
 60411 CLA +0 50000 0 00027    60412 STO +0 60100 0 27505                                                               
                 GETTM.(TITLE(11),TITLE(13))                                        188  LM00248
 60413 TSX +0 07400 4 00015    60414 TXH +3 00000 0 27502    60415 TXH +3 00000 0 27500                                 
                 TITLE(5)=(N1.A.777777770000K).V.000000005757K                      189  LM00249
 60416 CAL -0 50000 0 00027    60417 ANA -0 32000 0 57136    60420 ORA -0 50100 0 57114    60421 SLW +0 60200 0 27510   
                 WHOAMI.(TITLE(16)...2)                                             190  LM00250
 60422 TSX +0 07400 4 00023    60423 TIX +2 57065 0 27475                                                               
                 LINE(LC-15) = TITLE(16)                                            191  LM00251
 60424 CLA +0 50000 0 25433    60425 SUB +0 40200 0 57101    60426 PAX +0 73400 1 00000    60427 CLA +0 50000 0 27475   
 60430 STO +0 60100 1 25475                                                                                             
                 LINE(LC-16) = TITLE(15)                                            192  LM00252
 60431 CLA +0 50000 0 25433    60432 SUB +0 40200 0 57102    60433 PAX +0 73400 1 00000    60434 CLA +0 50000 0 27476   
 60435 STO +0 60100 1 25475                                                                                             
                 T'H LOOP6, FOR IC = 0,1,IC .G. 14                                  193  LM00253
 60436 CLA +0 50000 0 57063    60437 STO +0 60100 0 25413    60440 TRA +0 02000 0 60444    60441 CLA +0 50000 0 25413   
 60442 ADD +0 40000 0 57064    60443 STO +0 60100 0 25413    60444 CLA +0 50000 0 25413    60445 SUB +0 40200 0 57100   
 60446 TZE +0 10000 0 60450    60447 TPL +0 12000 0 60457                                                               
      LOOP6      LINE(LC-IC) = TITLE(IC)                                            194  LM00254
 60450 CLA +0 50000 0 25433    60451 SUB +0 40200 0 25413    60452 PAX +0 73400 1 00000    60453 LXA +0 53400 2 25413   
 60454 CLA +0 50000 2 27515    60455 STO +0 60100 1 25475    60456 TRA +0 02000 0 60441                                 
                 BFWRIT.(N1,NA2,LINE(LC)...17,ERR4)                                 195  LM00255
 60457 CLA +0 50000 0 25433    60460 SUB +0 40200 0 60461    60461 TXH +3 00000 0 25475    60462 STA +0 62100 0 60466   
 60463 TSX +0 07400 4 00005    60464 TXH +3 00000 0 00027    60465 TXH +3 00000 0 00026    60466 TIX +2 57103 0 00000   
 60467 TXH +3 00000 0 00044                                                                                             
                 W'R ILIST .E. 1 .OR. JESAVE .L. 1, T'O SUMERY                      196  LM00256
 60470 CLA +0 50000 0 25417    60471 SUB +0 40200 0 57064    60472 TZE +0 10000 0 60474    60473 TMI -0 12000 0 60477   
 60474 CLA +0 50000 0 25414    60475 SUB +0 40200 0 57064    60476 TNZ -0 10000 0 60500    60477 TRA +0 02000 0 00070   
                 T'H LOOP7, FOR IC = 0,1,IC .G. 11                                  197  LM00257
 60500 CLA +0 50000 0 57063    60501 STO +0 60100 0 25413    60502 TRA +0 02000 0 60506    60503 CLA +0 50000 0 25413   
 60504 ADD +0 40000 0 57064    60505 STO +0 60100 0 25413    60506 CLA +0 50000 0 25413    60507 SUB +0 40200 0 57076   
 60510 TZE +0 10000 0 60512    60511 TPL +0 12000 0 60521                                                               
      LOOP7      LINE(LC-IC) = HEAD(IC)                                             198  LM00258
 60512 CLA +0 50000 0 25433    60513 SUB +0 40200 0 25413    60514 PAX +0 73400 1 00000    60515 LXA +0 53400 2 25413   
 60516 CLA +0 50000 2 25401    60517 STO +0 60100 1 25475    60520 TRA +0 02000 0 60503                                 
                 BFWRIT.(N1,NA2,LINE(LC)...12, ERR4)                                199  LM00259
 60521 CLA +0 50000 0 25433    60522 SUB +0 40200 0 60523    60523 TXH +3 00000 0 25475    60524 STA +0 62100 0 60530   
 60525 TSX +0 07400 4 00005    60526 TXH +3 00000 0 00027    60527 TXH +3 00000 0 00026    60530 TIX +2 57077 0 00000   
 60531 TXH +3 00000 0 00044                                                                                             
                 JT = -50                                                           200  LM00260
 60532 CLS +0 50200 0 57112    60533 STO +0 60100 0 25420                                                               
                 JE = 0                                                             201  LM00261
 60534 CLA +0 50000 0 57063    60535 STO +0 60100 0 25416                                                               
      LTOP8      BFWRIT.(N1,NA2,BLANK3(3)...4,ERR4)                                 202  LM00265
 60536 TSX +0 07400 4 00005    60537 TXH +3 00000 0 00027    60540 TXH +3 00000 0 00026    60541 TIX +2 57067 0 00111   
 60542 TXH +3 00000 0 00044                                                                                             
                 LINE(LC) = 777777000007K                                           203  LM00266
 60543 LXA +0 53400 1 25433    60544 CLA +0 50000 0 57134    60545 STO +0 60100 1 25475                                 
                 LINE(LC-1) = BLANK                                                 204  LM00267
 60546 CLA +0 50000 0 25433    60547 SUB +0 40200 0 57064    60550 PAX +0 73400 1 00000    60551 CLA +0 50000 0 00115   
 60552 STO +0 60100 1 25475                                                                                             
                 LINE(LC-2) = $FILE  $                                              205  LM00268
 60553 CLA +0 50000 0 25433    60554 SUB +0 40200 0 57065    60555 PAX +0 73400 1 00000    60556 CLA +0 50000 0 57117   
 60557 STO +0 60100 1 25475                                                                                             
                 LINE(LC-3) = EPARAY(JE,0)                                          206  LM00269
 60560 LDQ +0 56000 0 57063    60561 CLA +0 50000 0 25416    60562 TSX +0 07400 4 00001    60563 TXH +3 02555 0 25362   
 60564 STO +0 60100 0 61743    60565 CLA +0 50000 0 25433    60566 SUB +0 40200 0 57066    60567 PAX +0 73400 1 00000   
 60570 LXA +0 53400 2 61743    60571 CLA +0 50000 2 25362    60572 STO +0 60100 1 25475                                 
                 LINE(LC-4) = BLANK                                                 207  LM00270
 60573 CLA +0 50000 0 25433    60574 SUB +0 40200 0 57067    60575 PAX +0 73400 1 00000    60576 CLA +0 50000 0 00115   
 60577 STO +0 60100 1 25475                                                                                             
                 LINE(LC-5) = (EPARAY(JE,1))                                        208  LM00271
 60600 LDQ +0 56000 0 57064    60601 CLA +0 50000 0 25416    60602 TSX +0 07400 4 00001    60603 TXH +3 02555 0 25362   
 60604 STO +0 60100 0 61743    60605 CLA +0 50000 0 25433    60606 SUB +0 40200 0 57070    60607 PAX +0 73400 1 00000   
 60610 LXA +0 53400 2 61743    60611 CLA +0 50000 2 25362    60612 STO +0 60100 1 25475                                 
                 LINE(LC-6) = OCABC.(EPARAY(JE,2))                                  209  LM00272
 60613 LDQ +0 56000 0 57065    60614 CLA +0 50000 0 25416    60615 TSX +0 07400 4 00001    60616 TXH +3 02555 0 25362   
 60617 SUB +0 40200 0 60620    60620 TXH +3 00000 0 25362    60621 STA +0 62100 0 60623    60622 TSX +0 07400 4 00020   
 60623 TXH +3 00000 0 00000    60624 STO +0 60100 0 61743    60625 CLA +0 50000 0 25433    60626 SUB +0 40200 0 57071   
 60627 PAX +0 73400 1 00000    60630 CLA +0 50000 0 61743    60631 STO +0 60100 1 25475                                 
                 LINE(LC-7) = OCABC.(EPARAY(JE,3))                                  210  LM00273
 60632 LDQ +0 56000 0 57066    60633 CLA +0 50000 0 25416    60634 TSX +0 07400 4 00001    60635 TXH +3 02555 0 25362   
 60636 SUB +0 40200 0 60637    60637 TXH +3 00000 0 25362    60640 STA +0 62100 0 60642    60641 TSX +0 07400 4 00020   
 60642 TXH +3 00000 0 00000    60643 STO +0 60100 0 61743    60644 CLA +0 50000 0 25433    60645 SUB +0 40200 0 57072   
 60646 PAX +0 73400 1 00000    60647 CLA +0 50000 0 61743    60650 STO +0 60100 1 25475                                 
                 BFWRIT.(N1,NA2,LINE(LC)...8,ERR4)                                  211  LM00274
 60651 CLA +0 50000 0 25433    60652 SUB +0 40200 0 60653    60653 TXH +3 00000 0 25475    60654 STA +0 62100 0 60660   
 60655 TSX +0 07400 4 00005    60656 TXH +3 00000 0 00027    60657 TXH +3 00000 0 00026    60660 TIX +2 57073 0 00000   
 60661 TXH +3 00000 0 00044                                                                                             
                 LINE(LC) = 777777000011K                                           212  LM00278
 60662 LXA +0 53400 1 25433    60663 CLA +0 50000 0 57135    60664 STO +0 60100 1 25475                                 
                 LINE(LC-1) = BLANK                                                 213  LM00279
 60665 CLA +0 50000 0 25433    60666 SUB +0 40200 0 57064    60667 PAX +0 73400 1 00000    60670 CLA +0 50000 0 00115   
 60671 STO +0 60100 1 25475                                                                                             
                 LINE(LC-2) = BLANK                                                 214  LM00280
 60672 CLA +0 50000 0 25433    60673 SUB +0 40200 0 57065    60674 PAX +0 73400 1 00000    60675 CLA +0 50000 0 00115   
 60676 STO +0 60100 1 25475                                                                                             
                 LINE(LC-3) = BLANK                                                 215  LM00281
 60677 CLA +0 50000 0 25433    60700 SUB +0 40200 0 57066    60701 PAX +0 73400 1 00000    60702 CLA +0 50000 0 00115   
 60703 STO +0 60100 1 25475                                                                                             
                 LINE(LC-5) = BLANK                                                 216  LM00282
 60704 CLA +0 50000 0 25433    60705 SUB +0 40200 0 57070    60706 PAX +0 73400 1 00000    60707 CLA +0 50000 0 00115   
 60710 STO +0 60100 1 25475                                                                                             
                 LINE(LC-6) = BLANK                                                 217  LM00283
 60711 CLA +0 50000 0 25433    60712 SUB +0 40200 0 57071    60713 PAX +0 73400 1 00000    60714 CLA +0 50000 0 00115   
 60715 STO +0 60100 1 25475                                                                                             
                 LINE(LC-7) = BLANK                                                 218  LM00284
 60716 CLA +0 50000 0 25433    60717 SUB +0 40200 0 57072    60720 PAX +0 73400 1 00000    60721 CLA +0 50000 0 00115   
 60722 STO +0 60100 1 25475                                                                                             
                 JT = (JT/50+1)*50 + 1                                              219  LM00285
 60723 LDQ +0 56000 0 25420    60724 PXD -0 75400 0 00000    60725 LLS +0 76300 0 00000    60726 DVP +0 22100 0 57112   
 60727 XCA +0 13100 0 00000    60730 ADD +0 40000 0 57064    60731 XCA +0 13100 0 00000    60732 MPY +0 20000 0 57112   
 60733 XCA +0 13100 0 00000    60734 ADD +0 40000 0 57064    60735 STO +0 60100 0 25420                                 
      LTOP9      W'R TVARAY(JT) .E. FENCE, T'O TOP10                                220  LM00286
 60736 LXA +0 53400 1 25420    60737 CLA +0 50000 1 57057    60740 SUB +0 40200 0 25363    60741 TNZ -0 10000 0 60743   
 60742 TRA +0 02000 0 00071                                                                                             
                 LINE(LC-4) = TVARAY(JT)                                            221  LM00287
 60743 CLA +0 50000 0 25433    60744 SUB +0 40200 0 57067    60745 PAX +0 73400 1 00000    60746 LXA +0 53400 2 25420   
 60747 CLA +0 50000 2 57057    60750 STO +0 60100 1 25475                                                               
                 LINE(LC-8) = TV1(JT,0)                                             222  LM00288
 60751 LDQ +0 56000 0 57063    60752 CLA +0 50000 0 25420    60753 TSX +0 07400 4 00001    60754 TXH +3 02560 0 47216   
 60755 STO +0 60100 0 61743    60756 CLA +0 50000 0 25433    60757 SUB +0 40200 0 57073    60760 PAX +0 73400 1 00000   
 60761 LXA +0 53400 2 61743    60762 CLA +0 50000 2 47216    60763 STO +0 60100 1 25475                                 
                 LINE(LC-9) = TV1(JT,1)                                             223  LM00289
 60764 LDQ +0 56000 0 57064    60765 CLA +0 50000 0 25420    60766 TSX +0 07400 4 00001    60767 TXH +3 02560 0 47216   
 60770 STO +0 60100 0 61743    60771 CLA +0 50000 0 25433    60772 SUB +0 40200 0 57074    60773 PAX +0 73400 1 00000   
 60774 LXA +0 53400 2 61743    60775 CLA +0 50000 2 47216    60776 STO +0 60100 1 25475                                 
                 BFWRIT.(N1,NA2,LINE(LC)...10,ERR4)                                 224  LM00290
 60777 CLA +0 50000 0 25433    61000 SUB +0 40200 0 61001    61001 TXH +3 00000 0 25475    61002 STA +0 62100 0 61006   
 61003 TSX +0 07400 4 00005    61004 TXH +3 00000 0 00027    61005 TXH +3 00000 0 00026    61006 TIX +2 57075 0 00000   
 61007 TXH +3 00000 0 00044                                                                                             
                 JT = JT + 1                                                        225  LM00291
 61010 CLA +0 50000 0 25420    61011 ADD +0 40000 0 57064    61012 STO +0 60100 0 25420                                 
                 T'O LTOP9                                                          226  LM00292
 61013 TRA +0 02000 0 00056                                                                                             
      TOP10      LINE(LC-4) = BLANK                                                 227  LM00293
 61014 CLA +0 50000 0 25433    61015 SUB +0 40200 0 57067    61016 PAX +0 73400 1 00000    61017 CLA +0 50000 0 00115   
 61020 STO +0 60100 1 25475                                                                                             
                 LINE(LC-6) = BLANK                                                 228  LM00294
 61021 CLA +0 50000 0 25433    61022 SUB +0 40200 0 57071    61023 PAX +0 73400 1 00000    61024 CLA +0 50000 0 00115   
 61025 STO +0 60100 1 25475                                                                                             
                 LINE(LC-7) = BLANK                                                 229  LM00295
 61026 CLA +0 50000 0 25433    61027 SUB +0 40200 0 57072    61030 PAX +0 73400 1 00000    61031 CLA +0 50000 0 00115   
 61032 STO +0 60100 1 25475                                                                                             
      LTOP10     JE = JE + 1                                                        230  LM00296
 61033 CLA +0 50000 0 25416    61034 ADD +0 40000 0 57064    61035 STO +0 60100 0 25416                                 
                 W'R JE .GE. JESAVE, T'O SUMERY                                     231  LM00301
 61036 CLA +0 50000 0 25416    61037 SUB +0 40200 0 25417    61040 TZE +0 10000 0 61042    61041 TMI -0 12000 0 61043   
 61042 TRA +0 02000 0 00070                                                                                             
                 W'R EPARAY(JE,4) .E. TAG, T'O LTOP8                                232  LM00302
 61043 LDQ +0 56000 0 57067    61044 CLA +0 50000 0 25416    61045 TSX +0 07400 4 00001    61046 TXH +3 02555 0 25362   
 61047 PAX +0 73400 1 00000    61050 CLA +0 50000 1 25362    61051 SUB +0 40200 0 27473    61052 TNZ -0 10000 0 61054   
 61053 TRA +0 02000 0 00055                                                                                             
                 NLC= (2*(EPARAY(JE,2)-3)+7)                                        233  LM00303
 61054 LDQ +0 56000 0 57065    61055 CLA +0 50000 0 25416    61056 TSX +0 07400 4 00001    61057 TXH +3 02555 0 25362   
 61060 PAX +0 73400 1 00000    61061 CLA +0 50000 1 25362    61062 SUB +0 40200 0 57066    61063 XCA +0 13100 0 00000   
 61064 MPY +0 20000 0 57065    61065 XCA +0 13100 0 00000    61066 ADD +0 40000 0 57072    61067 STO +0 60100 0 27351   
                 LINE(LC)= (NLC-1).V.777777K6                                       234  LM00304
 61070 CLA +0 50000 0 27351    61071 SUB +0 40200 0 57064    61072 STO +0 60100 0 61743    61073 CAL -0 50000 0 61743   
 61074 ORA -0 50100 0 57132    61075 LXA +0 53400 1 25433    61076 SLW +0 60200 1 25475                                 
                 LINE(LC-3) = EPARAY(JE,0)                                          235  LM00305
 61077 LDQ +0 56000 0 57063    61100 CLA +0 50000 0 25416    61101 TSX +0 07400 4 00001    61102 TXH +3 02555 0 25362   
 61103 STO +0 60100 0 61743    61104 CLA +0 50000 0 25433    61105 SUB +0 40200 0 57066    61106 PAX +0 73400 1 00000   
 61107 LXA +0 53400 2 61743    61110 CLA +0 50000 2 25362    61111 STO +0 60100 1 25475                                 
                 LINE(LC-5) = (EPARAY(JE,1))                                        236  LM00306
 61112 LDQ +0 56000 0 57064    61113 CLA +0 50000 0 25416    61114 TSX +0 07400 4 00001    61115 TXH +3 02555 0 25362   
 61116 STO +0 60100 0 61743    61117 CLA +0 50000 0 25433    61120 SUB +0 40200 0 57070    61121 PAX +0 73400 1 00000   
 61122 LXA +0 53400 2 61743    61123 CLA +0 50000 2 25362    61124 STO +0 60100 1 25475                                 
                 LINE(LC-7) = BLANK                                                 237  LM00307
 61125 CLA +0 50000 0 25433    61126 SUB +0 40200 0 57072    61127 PAX +0 73400 1 00000    61130 CLA +0 50000 0 00115   
 61131 STO +0 60100 1 25475                                                                                             
                 LCNT = LC - 8                                                      238  LM00308
 61132 CLA +0 50000 0 25433    61133 SUB +0 40200 0 57073    61134 STO +0 60100 0 25431                                 
                 T'H LOOP11, FOR IC = 3,1,IC .E. EPARAY(JE,2)                       239  LM00309
 61135 CLA +0 50000 0 57066    61136 STO +0 60100 0 25413    61137 TRA +0 02000 0 61143    61140 CLA +0 50000 0 25413   
 61141 ADD +0 40000 0 57064    61142 STO +0 60100 0 25413    61143 LDQ +0 56000 0 57065    61144 CLA +0 50000 0 25416   
 61145 TSX +0 07400 4 00001    61146 TXH +3 02555 0 25362    61147 PAX +0 73400 2 00000    61150 CLA +0 50000 0 25413   
 61151 SUB +0 40200 2 25362    61152 TZE +0 10000 0 61174                                                               
                   LINE(LCNT) = EPARAY(JE,IC)                                       240  LM00310
 61153 LDQ +0 56000 0 25413    61154 CLA +0 50000 0 25416    61155 TSX +0 07400 4 00001    61156 TXH +3 02555 0 25362   
 61157 LXA +0 53400 1 25431    61160 PAX +0 73400 2 00000    61161 CLA +0 50000 2 25362    61162 STO +0 60100 1 25475   
                   LINE(LCNT-1) = 735757575757K                                     241  LM00311
 61163 CLA +0 50000 0 25431    61164 SUB +0 40200 0 57064    61165 PAX +0 73400 1 00000    61166 CLA +0 50000 0 57131   
 61167 STO +0 60100 1 25475                                                                                             
      LOOP11     LCNT = LCNT-2                                                      242  LM00312
 61170 CLA +0 50000 0 25431    61171 SUB +0 40200 0 57065    61172 STO +0 60100 0 25431    61173 TRA +0 02000 0 61140   
                 BFWRIT.(N1,NA2,LINE(LC)...NLC,ERR4)                                243  LM00313
 61174 CLA +0 50000 0 25433    61175 SUB +0 40200 0 61176    61176 TXH +3 00000 0 25475    61177 STA +0 62100 0 61203   
 61200 TSX +0 07400 4 00005    61201 TXH +3 00000 0 00027    61202 TXH +3 00000 0 00026    61203 TIX +2 27351 0 00000   
 61204 TXH +3 00000 0 00044                                                                                             
                 T'O LTOP10                                                         244  LM00314
 61205 TRA +0 02000 0 00051                                                                                             
      SUMERY     SUM1(18) = OCABC.(HCORE)                                           245  LM00318
 61206 TSX +0 07400 4 00020    61207 TXH +3 00000 0 25365    61210 STO +0 60100 0 27426                                 
                 SUM1(11) = OCABC.(LCOM)                                            246  LM00319
 61211 TSX +0 07400 4 00020    61212 TXH +3 00000 0 25432    61213 STO +0 60100 0 27435                                 
                 SUM1(25) = BZEL.(DERBC.(LCOM-HCORE))                               247  LM00320
 61214 CLA +0 50000 0 25432    61215 SUB +0 40200 0 25365    61216 STO +0 60100 0 61743    61217 TSX +0 07400 4 00012   
 61220 TXH +3 00000 0 61743    61221 STO +0 60100 0 61743    61222 TSX +0 07400 4 00006    61223 TXH +3 00000 0 61743   
 61224 STO +0 60100 0 27417                                                                                             
                 W'R HCORE.G.LCOM, SUM1(25) =SUM1(25).A.MASK4                       248  LM00321
 61225 CLA +0 50000 0 25365    61226 SUB +0 40200 0 25432    61227 TZE +0 10000 0 61234    61230 TMI -0 12000 0 61234   
 61231 CAL -0 50000 0 27417    61232 ANA -0 32000 0 25502    61233 SLW +0 60200 0 27417                                 
                 HPC(5) = SUM1(18)                                                  249  LM00322
 61234 CLA +0 50000 0 27426    61235 STO +0 60100 0 25403                                                               
                 LCM(5) = SUM1(11)                                                  250  LM00323
 61236 CLA +0 50000 0 27435    61237 STO +0 60100 0 25423                                                               
                 DIFC(5) = SUM1(25)                                                 251  LM00324
 61240 CLA +0 50000 0 27417    61241 STO +0 60100 0 02545                                                               
                 W'R HCORE .L. LCOM .AND. (MEARAY+MFARAY) .E. 0                     252  LM00325
 61242 CLA +0 50000 0 26633    61243 ADD +0 40000 0 27033    61244 SUB +0 40200 0 57063    61245 TNZ -0 10000 0 61322   
 61246 CLA +0 50000 0 25365    61247 SUB +0 40200 0 25432    61250 TZE +0 10000 0 61322    61251 TPL +0 12000 0 61322   
                   T'H LOOP13, FOR IC = 0,1,IC .G. 27                               253  LM00329
 61252 CLA +0 50000 0 57063    61253 STO +0 60100 0 25413    61254 TRA +0 02000 0 61260    61255 CLA +0 50000 0 25413   
 61256 ADD +0 40000 0 57064    61257 STO +0 60100 0 25413    61260 CLA +0 50000 0 25413    61261 SUB +0 40200 0 57110   
 61262 TZE +0 10000 0 61264    61263 TPL +0 12000 0 61273                                                               
      LOOP13       LINE(LC-IC) = SUM1(IC)                                           254  LM00330
 61264 CLA +0 50000 0 25433    61265 SUB +0 40200 0 25413    61266 PAX +0 73400 1 00000    61267 LXA +0 53400 2 25413   
 61270 CLA +0 50000 2 27450    61271 STO +0 60100 1 25475    61272 TRA +0 02000 0 61255                                 
                   BFWRIT.(N1,NA2,LINE(LC)...28,ERR4)                               255  LM00331
 61273 CLA +0 50000 0 25433    61274 SUB +0 40200 0 61275    61275 TXH +3 00000 0 25475    61276 STA +0 62100 0 61302   
 61277 TSX +0 07400 4 00005    61300 TXH +3 00000 0 00027    61301 TXH +3 00000 0 00026    61302 TIX +2 57111 0 00000   
 61303 TXH +3 00000 0 00044                                                                                             
                   PRINT COMMENT $SYSTEM PRELOAD SUCCESSFUL$                        256  LM00332
 61304 TSX +0 07400 4 00016    61305     +0 00000 0 00005    61306     -2 27062 6 32544    61307     -2 04751 2 54346   
 61310     +2 12460 6 26423    61311     +2 32562 6 22664    61312     -0 36060 6 06060                                 
                 PRNTP.(LCM)                                                        257  LM00333
 61313 TSX +0 07400 4 00022    61314 TXH +3 00000 0 25430                                                               
                 PRNTP.(HPC)                                                        258  LM00334
 61315 TSX +0 07400 4 00022    61316 TXH +3 00000 0 25410                                                               
                 PRNTP.(DIFC)                                                       259  LM00335
 61317 TSX +0 07400 4 00022    61320 TXH +3 00000 0 02552                                                               
                   T'O MUCK                                                         260  LM00336
 61321 TRA +0 02000 0 00061                                                                                             
                 E'L                                                                261  LM00337
                 SUM1(3) = SUM1A                                                    262  LM00340
 61322 CLA +0 50000 0 27414    61323 STO +0 60100 0 27445                                                               
                 T'H LOOP14, FOR IC = 0,1,IC .G. 27                                 263  LM00341
 61324 CLA +0 50000 0 57063    61325 STO +0 60100 0 25413    61326 TRA +0 02000 0 61332    61327 CLA +0 50000 0 25413   
 61330 ADD +0 40000 0 57064    61331 STO +0 60100 0 25413    61332 CLA +0 50000 0 25413    61333 SUB +0 40200 0 57110   
 61334 TZE +0 10000 0 61336    61335 TPL +0 12000 0 61345                                                               
      LOOP14     LINE(LC-IC) = SUM1(IC)                                             264  LM00342
 61336 CLA +0 50000 0 25433    61337 SUB +0 40200 0 25413    61340 PAX +0 73400 1 00000    61341 LXA +0 53400 2 25413   
 61342 CLA +0 50000 2 27450    61343 STO +0 60100 1 25475    61344 TRA +0 02000 0 61327                                 
                 BFWRIT.(N1,NA2,LINE(LC)...28, ERR4)                                265  LM00343
 61345 CLA +0 50000 0 25433    61346 SUB +0 40200 0 61347    61347 TXH +3 00000 0 25475    61350 STA +0 62100 0 61354   
 61351 TSX +0 07400 4 00005    61352 TXH +3 00000 0 00027    61353 TXH +3 00000 0 00026    61354 TIX +2 57111 0 00000   
 61355 TXH +3 00000 0 00044                                                                                             
                 PRINT COMMENT $SYSTEM PRELOAD UNSUCCESSFUL$                        266  LM00344
 61356 TSX +0 07400 4 00016    61357     +0 00000 0 00005    61360     -2 27062 6 32544    61361     -2 04751 2 54346   
 61362     +2 12460 6 44562    61363     -2 42323 2 56262    61364     +2 66443 6 06060                                 
                 PRNTP.(LCM)                                                        267  LM00345
 61365 TSX +0 07400 4 00022    61366 TXH +3 00000 0 25430                                                               
                 PRNTP.(HPC)                                                        268  LM00346
 61367 TSX +0 07400 4 00022    61370 TXH +3 00000 0 25410                                                               
                 PRNTP.(DIFC)                                                       269  LM00347
 61371 TSX +0 07400 4 00022    61372 TXH +3 00000 0 02552                                                               
                 W'R MFARAY .E. 0, T'O MECK                                         270  LM00348
 61373 CLA +0 50000 0 27033    61374 SUB +0 40200 0 57063    61375 TNZ -0 10000 0 61377    61376 TRA +0 02000 0 00057   
                 T'H LOOP15, FOR IC = 0,1,IC .G. 4                                  271  LM00352
 61377 CLA +0 50000 0 57063    61400 STO +0 60100 0 25413    61401 TRA +0 02000 0 61405    61402 CLA +0 50000 0 25413   
 61403 ADD +0 40000 0 57064    61404 STO +0 60100 0 25413    61405 CLA +0 50000 0 25413    61406 SUB +0 40200 0 57067   
 61407 TZE +0 10000 0 61411    61410 TPL +0 12000 0 61420                                                               
      LOOP15     LINE(LC-IC) = SUM2(IC)                                             272  LM00353
 61411 CLA +0 50000 0 25433    61412 SUB +0 40200 0 25413    61413 PAX +0 73400 1 00000    61414 LXA +0 53400 2 25413   
 61415 CLA +0 50000 2 27455    61416 STO +0 60100 1 25475    61417 TRA +0 02000 0 61402                                 
                 BFWRIT.(N1,NA2,LINE(LC)...5,ERR4)                                  273  LM00354
 61420 CLA +0 50000 0 25433    61421 SUB +0 40200 0 61422    61422 TXH +3 00000 0 25475    61423 STA +0 62100 0 61427   
 61424 TSX +0 07400 4 00005    61425 TXH +3 00000 0 00027    61426 TXH +3 00000 0 00026    61427 TIX +2 57070 0 00000   
 61430 TXH +3 00000 0 00044                                                                                             
                 PRINT COMMENT $MISSING FILES ARE$                                  274  LM00355
 61431 TSX +0 07400 4 00016    61432     +0 00000 0 00003    61433     -0 43162 6 23145    61434     +2 76026 3 14325   
 61435     -2 26021 5 12560                                                                                             
                 LINE(LC) = 777777000003K                                           275  LM00356
 61436 LXA +0 53400 1 25433    61437 CLA +0 50000 0 57133    61440 STO +0 60100 1 25475                                 
                 LINE(LC-2) = BLANK                                                 276  LM00357
 61441 CLA +0 50000 0 25433    61442 SUB +0 40200 0 57065    61443 PAX +0 73400 1 00000    61444 CLA +0 50000 0 00115   
 61445 STO +0 60100 1 25475                                                                                             
                 T'H LOOP16, FOR IC = 1,1,IC .G. MFARAY                             277  LM00358
 61446 CLA +0 50000 0 57064    61447 STO +0 60100 0 25413    61450 TRA +0 02000 0 61454    61451 CLA +0 50000 0 25413   
 61452 ADD +0 40000 0 57064    61453 STO +0 60100 0 25413    61454 CLA +0 50000 0 25413    61455 SUB +0 40200 0 27033   
 61456 TZE +0 10000 0 61460    61457 TPL +0 12000 0 61504                                                               
                 LINE(LC-3) = MFARAY(IC)                                            278  LM00359
 61460 CLA +0 50000 0 25433    61461 SUB +0 40200 0 57066    61462 PAX +0 73400 1 00000    61463 LXA +0 53400 2 25413   
 61464 CLA +0 50000 2 27033    61465 STO +0 60100 1 25475                                                               
                 NASTY(0) = MFARAY(IC)                                              279  LM00360
 61466 CLA +0 50000 2 27033    61467 STO +0 60100 0 27350                                                               
                 PRNTP.(NASTY)                                                      280  LM00361
 61470 TSX +0 07400 4 00022    61471 TXH +3 00000 0 27350                                                               
      LOOP16     BFWRIT.(N1,NA2,LINE(LC)...4,ERR4)                                  281  LM00362
 61472 CLA +0 50000 0 25433    61473 SUB +0 40200 0 61474    61474 TXH +3 00000 0 25475    61475 STA +0 62100 0 61501   
 61476 TSX +0 07400 4 00005    61477 TXH +3 00000 0 00027    61500 TXH +3 00000 0 00026    61501 TIX +2 57067 0 00000   
 61502 TXH +3 00000 0 00044    61503 TRA +0 02000 0 61451                                                               
      MECK       W'R MEARAY .E. 0, T'O MUCK                                         282  LM00363
 61504 CLA +0 50000 0 26633    61505 SUB +0 40200 0 57063    61506 TNZ -0 10000 0 61510    61507 TRA +0 02000 0 00061   
                 T'H LOOP17, FOR IC = 0,1,IC .G. 5                                  283  LM00367
 61510 CLA +0 50000 0 57063    61511 STO +0 60100 0 25413    61512 TRA +0 02000 0 61516    61513 CLA +0 50000 0 25413   
 61514 ADD +0 40000 0 57064    61515 STO +0 60100 0 25413    61516 CLA +0 50000 0 25413    61517 SUB +0 40200 0 57070   
 61520 TZE +0 10000 0 61522    61521 TPL +0 12000 0 61531                                                               
      LOOP17     LINE(LC-IC) = SUM3(IC)                                             284  LM00368
 61522 CLA +0 50000 0 25433    61523 SUB +0 40200 0 25413    61524 PAX +0 73400 1 00000    61525 LXA +0 53400 2 25413   
 61526 CLA +0 50000 2 27463    61527 STO +0 60100 1 25475    61530 TRA +0 02000 0 61513                                 
                 BFWRIT.(N1,NA2,LINE(LC)...6,ERR4)                                  285  LM00369
 61531 CLA +0 50000 0 25433    61532 SUB +0 40200 0 61533    61533 TXH +3 00000 0 25475    61534 STA +0 62100 0 61540   
 61535 TSX +0 07400 4 00005    61536 TXH +3 00000 0 00027    61537 TXH +3 00000 0 00026    61540 TIX +2 57071 0 00000   
 61541 TXH +3 00000 0 00044                                                                                             
                 PRINT COMMENT $MISSING ENTRY POINTS ARE$                           286  LM00370
 61542 TSX +0 07400 4 00016    61543     +0 00000 0 00004    61544     -0 43162 6 23145    61545     +2 76025 4 56351   
 61546     -3 06047 4 63145    61547     -2 36260 2 15125                                                               
                 LINE(LC) = 777777000003K                                           287  LM00371
 61550 LXA +0 53400 1 25433    61551 CLA +0 50000 0 57133    61552 STO +0 60100 1 25475                                 
                 LINE(LC-2) = BLANK                                                 288  LM00372
 61553 CLA +0 50000 0 25433    61554 SUB +0 40200 0 57065    61555 PAX +0 73400 1 00000    61556 CLA +0 50000 0 00115   
 61557 STO +0 60100 1 25475                                                                                             
                 T'H LOOP18, FOR IC = 1,1,IC .G. MEARAY                             289  LM00373
 61560 CLA +0 50000 0 57064    61561 STO +0 60100 0 25413    61562 TRA +0 02000 0 61566    61563 CLA +0 50000 0 25413   
 61564 ADD +0 40000 0 57064    61565 STO +0 60100 0 25413    61566 CLA +0 50000 0 25413    61567 SUB +0 40200 0 26633   
 61570 TZE +0 10000 0 61572    61571 TPL +0 12000 0 61616                                                               
                 LINE(LC-3) = MEARAY(IC)                                            290  LM00374
 61572 CLA +0 50000 0 25433    61573 SUB +0 40200 0 57066    61574 PAX +0 73400 1 00000    61575 LXA +0 53400 2 25413   
 61576 CLA +0 50000 2 26633    61577 STO +0 60100 1 25475                                                               
                 NASTY(0) = MEARAY(IC)                                              291  LM00375
 61600 CLA +0 50000 2 26633    61601 STO +0 60100 0 27350                                                               
                 PRNTP.(NASTY)                                                      292  LM00376
 61602 TSX +0 07400 4 00022    61603 TXH +3 00000 0 27350                                                               
      LOOP18     BFWRIT. (N1,NA2,LINE(LC)...4,ERR4)                                 293  LM00377
 61604 CLA +0 50000 0 25433    61605 SUB +0 40200 0 61606    61606 TXH +3 00000 0 25475    61607 STA +0 62100 0 61613   
 61610 TSX +0 07400 4 00005    61611 TXH +3 00000 0 00027    61612 TXH +3 00000 0 00026    61613 TIX +2 57067 0 00000   
 61614 TXH +3 00000 0 00044    61615 TRA +0 02000 0 61563                                                               
      MUCK       W'R MULT .E. 0, T'O END                                            294  LM00378
 61616 CLA +0 50000 0 27345    61617 SUB +0 40200 0 57063    61620 TNZ -0 10000 0 61622    61621 TRA +0 02000 0 00032   
                 T'H LOOP19, FOR IC = 0,1,IC .G. 6                                  295  LM00382
 61622 CLA +0 50000 0 57063    61623 STO +0 60100 0 25413    61624 TRA +0 02000 0 61630    61625 CLA +0 50000 0 25413   
 61626 ADD +0 40000 0 57064    61627 STO +0 60100 0 25413    61630 CLA +0 50000 0 25413    61631 SUB +0 40200 0 57071   
 61632 TZE +0 10000 0 61634    61633 TPL +0 12000 0 61643                                                               
      LOOP19     LINE(LC-IC) = SUM4(IC)                                             296  LM00383
 61634 CLA +0 50000 0 25433    61635 SUB +0 40200 0 25413    61636 PAX +0 73400 1 00000    61637 LXA +0 53400 2 25413   
 61640 CLA +0 50000 2 27472    61641 STO +0 60100 1 25475    61642 TRA +0 02000 0 61625                                 
                 BFWRIT.(N1,NA2,LINE(LC)...7,ERR4)                                  297  LM00384
 61643 CLA +0 50000 0 25433    61644 SUB +0 40200 0 61645    61645 TXH +3 00000 0 25475    61646 STA +0 62100 0 61652   
 61647 TSX +0 07400 4 00005    61650 TXH +3 00000 0 00027    61651 TXH +3 00000 0 00026    61652 TIX +2 57072 0 00000   
 61653 TXH +3 00000 0 00044                                                                                             
                 PRINT COMMENT $DUPLICATED ENTRY POINTS ARE$                        298  LM00385
 61654 TSX +0 07400 4 00016    61655     +0 00000 0 00005    61656     +2 46447 4 33123    61657     +2 16325 2 46025   
 61660     -0 56351 7 06047    61661     -0 63145 6 36260    61662     +2 15125 6 06060                                 
                 LINE(LC) = 777777000003K                                           299  LM00386
 61663 LXA +0 53400 1 25433    61664 CLA +0 50000 0 57133    61665 STO +0 60100 1 25475                                 
                 LINE (LC-2) = BLANK                                                300  LM00387
 61666 CLA +0 50000 0 25433    61667 SUB +0 40200 0 57065    61670 PAX +0 73400 1 00000    61671 CLA +0 50000 0 00115   
 61672 STO +0 60100 1 25475                                                                                             
                 T'H LOOP20, FOR IC = 1,1,IC .G. MULT                               301  LM00388
 61673 CLA +0 50000 0 57064    61674 STO +0 60100 0 25413    61675 TRA +0 02000 0 61701    61676 CLA +0 50000 0 25413   
 61677 ADD +0 40000 0 57064    61700 STO +0 60100 0 25413    61701 CLA +0 50000 0 25413    61702 SUB +0 40200 0 27345   
 61703 TZE +0 10000 0 61705    61704 TPL +0 12000 0 61731                                                               
                 LINE(LC-3) = MULT(IC)                                              302  LM00389
 61705 CLA +0 50000 0 25433    61706 SUB +0 40200 0 57066    61707 PAX +0 73400 1 00000    61710 LXA +0 53400 2 25413   
 61711 CLA +0 50000 2 27345    61712 STO +0 60100 1 25475                                                               
                 NASTY(0) = MULT(IC)                                                303  LM00390
 61713 CLA +0 50000 2 27345    61714 STO +0 60100 0 27350                                                               
                 PRNTP.(NASTY)                                                      304  LM00391
 61715 TSX +0 07400 4 00022    61716 TXH +3 00000 0 27350                                                               
      LOOP20     BFWRIT.(N1,NA2,LINE(LC)...4,ERR4)                                  305  LM00392
 61717 CLA +0 50000 0 25433    61720 SUB +0 40200 0 61721    61721 TXH +3 00000 0 25475    61722 STA +0 62100 0 61726   
 61723 TSX +0 07400 4 00005    61724 TXH +3 00000 0 00027    61725 TXH +3 00000 0 00026    61726 TIX +2 57067 0 00000   
 61727 TXH +3 00000 0 00044    61730 TRA +0 02000 0 61676                                                               
                 T'O END                                                            306  LM00393
 61731 TRA +0 02000 0 00032                                                                                             
      ERR4       PRNTER.                                                            307  LM00394
 61732 TSX +0 07400 4 00021                                                                                             
      END        BFCLOS.(N1,NA2,END2)                                               308  LM00395
 61733 TSX +0 07400 4 00002    61734 TXH +3 00000 0 00027    61735 TXH +3 00000 0 00026    61736 TXH +3 00000 0 00031   
      END2       CHNCOM.(0)                                                         309  LM00396
 61737 TSX +0 07400 4 00007    61740 TXH +3 00000 0 57063                                                               
                 E'M                                                                310  LM00397
 61741 TSX +0 07400 4 00013                                                                                             




 PRBIN   BCD 05/12/69 2020.2   16186         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   PRBIN   MAD            02/24/69    2223.1
-                 
      PRBIN       PRINT A FILE IN SPREAD OCTAL (BINARY).                                               LM00001    
                                                                                                       LM00002    
                  D. A. ANDERSON AND R. A. ROACH   02/24/69                                            LM00003    
                                                                                                       LM00004    
                  USAGE:                                                                               LM00005    
                                                                                                       LM00006    
                                                                                                       LM00007    
                  PRBIN N1 N2 -START- -'THRU'/'TO'/'...' END- -NWORDS-                                 LM00008    
                       -DELTA- -BLOCKSIZE- -'OFF'/'OFFON'/'ONOFF'- -N3- -N4-                           LM00009    
                                                                                                       LM00010    
                   LOADING INSTRUCTIONS:                                                               LM00011    
                                                                                                       LM00012    
                   LAED NCLOAD PRBIN (SRCH) (SYS) XLIBE                                                LM00013    
                   SAVE PRBIN                                                                          LM00014    
                                                                                                       LM00015    
                                                                                                       LM00016    
                  NORMAL MODE IS INTEGER                                                          *001 LM00017    
                  DIMENSION B0(0),B1(0),B2(0),B3(0),BON(50),BOFF(50)                              *002 LM00018    
                  BOOLEAN STARTF,ENDF,LLF,DELTAF,TEMPF,OFF,ON,NEWON,NEWOFF,OCT                    *003 LM00019    
                  BOOLEAN BLKSZF                                                                  *004 LM00020    
                  VECTOR VALUES STARTF = 0B                                                       *005 LM00021    
                  VECTOR VALUES ENDF = 0B                                                         *006 LM00022    
                  VECTOR VALUES LLF = 0B                                                          *007 LM00023    
                  VECTOR VALUES DELTAF = 0B                                                       *008 LM00024    
                  VECTOR VALUES BLKSZF = 0B                                                       *009 LM00025    
                  VECTOR VALUES ON = 1B                                                           *010 LM00026    
                  VECTOR VALUES OFF = 0B                                                          *011 LM00027    
                  VECTOR VALUES NEWON = 1B                                                        *012 LM00028    
                  VECTOR VALUES NEWOFF = 1B                                                       *013 LM00029    
                  VECTOR VALUES OCT = 0B                                                          *014 LM00030    
                  VECTOR VALUES FENCE = 777777777777K                                             *015 LM00031    
                  VECTOR VALUES MAXON = 25,19,25,19,19,19,19,19,25,16                             *016 LM00032    
                  VECTOR VALUES BL = 605757575757K                                                *017 LM00033    
                  VECTOR VALUES CR = 555757575757K                                                *018 LM00034    
                  EQUIVALENCE (BL,BOFF(49))                                                       *019 LM00035    
                  EQUIVALENCE (TEMP,TEMPF)                                                        *020 LM00036    
                  VECTOR VALUES LM = 777777K6                                                     *021 LM00037    
                  VECTOR VALUES N4 = $   BIN$                                                     *022 LM00038    
                  VECTOR VALUES RECCNT = 432                                                      *023 LM00039    
                  VECTOR VALUES MAXOFF = 29                                                       *024 LM00040    
                  VECTOR VALUES ARGS1 = 3,$    TO$,$  THRU$,$   ...$                              *025 LM00041    
                  VECTOR VALUES ARGS2 = 6,$     O$,$   OFF$,$ (OFF)$,$ OFFON$,$ONOFF$,            *026 LM00042    
                1   $     *$                                                                      *026 LM00043    
                                                                                                       LM00044    
                                                                                                       LM00045    
                  PROCESS COMMAND BUFFER AND SET UP FLAGS                                              LM00046    
                                                                                                       LM00047    
                  N1 = COMARG.(1)                                                                 *027 LM00048    
                  WHENEVER N1 .E. FENCE .OR. N1 .E. $(HELP)$                                      *028 LM00049    
      HELP           PRMESS.                                                                      *029 LM00050    
                     PRMESS.($ CORRECT USAGE IS:$)                                                *030 LM00051    
                     PRMESS.                                                                      *031 LM00052    
                     PRMESA.(COMARG.(0),$ N1  N2  -START- -'THRU'/'TO'/'...' $)                   *032 LM00053    
                     PRMESS.($END- -NWORDS- -DELTA- -BLOCKSIZE-$)                                 *033 LM00054    
                     PRMESS.($      -'OFF'/'OFFON'/'ONOFF'- -N3- -N4-$)                           *034 LM00055    
                     EXITM.                                                                       *035 LM00056    
                  END OF CONDITIONAL                                                              *036 LM00057    
                                                                                                       LM00058    
                  WHENEVER COMARG.(2,N2) .E. FENCE                                                *037 LM00059    
                    TRANSFER TO HELP                                                              *038 LM00060    
      BADFMT        PRMESS.($ILLEGAL ARGUMENT:$,TEMP)                                             *039 LM00061    
                     EXITM.                                                                       *040 LM00062    
                  END OF CONDITIONAL                                                              *041 LM00063    
                                                                                                       LM00064    
                  J = 3                                                                           *042 LM00065    
                  NUMBER.(START,STARTF,GO,OCT)                                                    *043 LM00066    
                  WHENEVER COMARG.(J,TEMP) .E. FENCE, TRANSFER TO GO                              *044 LM00067    
      LOOPA       THROUGH LOOPA, FOR K = 1,1,K.G.ARGS1 .OR. TEMP.E.ARGS1(K)                       *045 LM00068    
                  WHENEVER K .LE. ARGS1                                                           *046 LM00069    
                     J = J+1                                                                      *047 LM00070    
                     NUMBER.(END,ENDF,BADFMT,TEMPF)                                               *048 LM00071    
                  END OF CONDITIONAL                                                              *049 LM00072    
                  NUMBER.(NON,LLF,GO,TEMPF)                                                       *050 LM00073    
                  NUMBER.(DELTA,DELTAF,GO,TEMPF)                                                  *051 LM00074    
                  NUMBER.(BLKSIZ,BLKSZF,GO,TEMPF)                                                 *052 LM00075    
                  TEMPF = 0B                                                                      *053 LM00076    
                  NUMBER.(TEMP,TEMPF,GO,TEMPF)                                                    *054 LM00077    
                  WHENEVER TEMPF, TRANSFER TO HELP                                                *055 LM00078    
                                                                                                       LM00079    
      GO          WHENEVER .NOT.STARTF, START = 1                                                 *056 LM00080    
                  WHENEVER START .E. 0, START = 1                                                 *057 LM00081    
                  WHENEVER .NOT.ENDF, END = 377777777777K                                         *058 LM00082    
                  WHENEVER .NOT.DELTAF, DELTA = 1                                                 *059 LM00083    
                  WHENEVER .NOT.BLKSZF, BLKSIZ = 1                                                *060 LM00084    
                                                                                                       LM00085    
                  WHENEVER BLKSIZ .G. DELTA                                                       *061 LM00086    
                    PRMESS.($BLOCK SIZE GREATER THAN DELTA.$)                                     *062 LM00087    
                    EXITM.                                                                        *063 LM00088    
                  END OF CONDITIONAL                                                              *064 LM00089    
                                                                                                       LM00090    
                  WHOAMI.(BOFF(3)...4)                                                            *065 LM00091    
                  CONSOL = BOFF.RS.30                                                             *066 LM00092    
                  WHENEVER CONSOL .G. 9, CONSOL = 0                                               *067 LM00093    
                  GETTM.(DATE,TIME)                                                               *068 LM00094    
                  WHENEVER LLF                                                                    *069 LM00095    
                     NOFF = NON                                                                   *070 LM00096    
                  OTHERWISE                                                                       *071 LM00097    
                     NON = (MAXON(CONSOL)-1)/3                                                    *072 LM00098    
                     NOFF = 9                                                                     *073 LM00099    
                  END OF CONDITIONAL                                                              *074 LM00100    
                                                                                                       LM00101    
                  GETBUF.(B0,432)                                                                 *075 LM00102    
                  FERRTN.(IOERR)                                                                  *076 LM00103    
                  SETBRK.(EXITM.)                                                                 *077 LM00104    
                  OPEN.($R$,N1,N2)                                                                *078 LM00105    
                                                                                                       LM00106    
                                                                                                       LM00107    
                  WHENEVER ON                                                                     *079 LM00108    
                     PRMESS.(CR,N1,BL,N2,BL,BL,DATE,BL,TIME,CR)                                   *080 LM00109    
                  END OF CONDITIONAL                                                              *081 LM00110    
                                                                                                       LM00111    
                  WHENEVER OFF                                                                    *082 LM00112    
                     GETBUF.(B1,432)                                                              *083 LM00113    
                     GETBUF.(B2,432)                                                              *084 LM00114    
                     GETBUF.(B3,432)                                                              *085 LM00115    
                     BFOPEN.($W$,N3,N4,B1(B1+432),B2(B2+432),B3(B3+432),IOERR)                    *086 LM00116    
                                                                                                       LM00117    
                     BOFF(48) = 777777000012K                                                     *087 LM00118    
                     BOFF(47) = $1$                                                               *088 LM00119    
                     BOFF(46) = N1                                                                *089 LM00120    
                     BOFF(45) = BL                                                                *090 LM00121    
                     BOFF(44) = BZ57.(N2)                                                         *091 LM00122    
                     BOFF(43) = $  FOR$                                                           *092 LM00123    
                     BOFF(42) = BOFF(3)                                                           *093 LM00124    
                     BOFF(41) = BZ57.(BOFF(2)) - 1K10                                             *094 LM00125    
                     BOFF(40) = $$                                                                *095 LM00126    
                     BOFF(39) = DATE                                                              *096 LM00127    
                     BOFF(38) = TIME                                                              *097 LM00128    
                     BOFF(37) = 777777000001K                                                     *098 LM00129    
                     BOFF(36) = BL                                                                *099 LM00130    
                     BOFF(35) = 777777000001K                                                     *100 LM00131    
                     BOFF(34) = BL                                                                *101 LM00132    
                                                                                                       LM00133    
                     BFWRIT.(N3,N4,BOFF(48)...15,IOERR)                                           *102 LM00134    
                  END OF CONDITIONAL                                                              *103 LM00135    
                                                                                                       LM00136    
                  THROUGH LOOP, FOR LOC1 = START,DELTA,LOC1.G.END                                 *104 LM00137    
                  WHENEVER BLKSZF                                                                 *105 LM00138    
                    WHENEVER ON.AND.ONCNT.G.1                                                     *106 LM00139    
                      PRMESS.(BON(1)...ONCNT)                                                     *107 LM00140    
                      NEWON=1B                                                                    *108 LM00141    
                      ONCNT=1                                                                     *109 LM00142    
                    END OF CONDITIONAL                                                            *110 LM00143    
                    WHENEVER OFF.AND.OFFCNT.G.2                                                   *111 LM00144    
                      BOFF(50)=OFFCNT.V.LM                                                        *112 LM00145    
                      MCOUNT=OFFCNT+1                                                             *113 LM00146    
                      BFWRIT.(N3,N4,BOFF(50)...MCOUNT,IOERR)                                      *114 LM00147    
                      NEWOFF=1B                                                                   *115 LM00148    
                      OFFCNT=2                                                                    *116 LM00149    
                    END OF CONDITIONAL                                                            *117 LM00150    
                  END OF CONDITIONAL                                                              *118 LM00151    
                  THROUGH LOOP, FOR LOC=LOC1,1,LOC.E.LOC1+BLKSIZ                                  *119 LM00152    
                  TEMP = (LOC-1)/432 * 432 + 1                                                    *120 LM00153    
                  WHENEVER TEMP .NE. RELLOC                                                       *121 LM00154    
                     RELLOC = TEMP                                                                *122 LM00155    
                     RDWAIT.(N1,N2,RELLOC,B0(B0+432)...432,EOF,EOFCT)                             *123 LM00156    
                  END OF CONDITIONAL                                                              *124 LM00157    
      BACK        TEMP = LOC - RELLOC                                                             *125 LM00158    
                  WHENEVER TEMP .G. RECCNT, TRANSFER TO FINALE                                    *126 LM00159    
                  WORD = B0(B0+432-TEMP)                                                          *127 LM00160    
                                                                                                       LM00161    
                                                                                                       LM00162    
                  WHENEVER .NOT.ON, TRANSFER TO OVER1                                             *128 LM00163    
                  WHENEVER NEWON                                                                  *129 LM00164    
                     WHENEVER .NOT. OCT                                                           *130 LM00165    
                        BON(1) = BZEL.(DEFBC.(LOC))                                               *131 LM00166    
                     OTHERWISE                                                                    *132 LM00167    
                        BON(1) = OCRBC.(LOC)                                                      *133 LM00168    
                     END OF CONDITIONAL                                                           *134 LM00169    
                     NEWON = 0B                                                                   *135 LM00170    
                     ONCNT = 1                                                                    *136 LM00171    
                     ONWRDS = 0                                                                   *137 LM00172    
                  END OF CONDITIONAL                                                              *138 LM00173    
                                                                                                       LM00174    
                  BON(ONCNT+1) = BL                                                               *139 LM00175    
                  BON(ONCNT+2) = OCLBC.(WORD)                                                     *140 LM00176    
                  BON(ONCNT+3) = OCRBC.(WORD)                                                     *141 LM00177    
                  ONCNT = ONCNT + 3                                                               *142 LM00178    
                  ONWRDS = ONWRDS + 1                                                             *143 LM00179    
                                                                                                       LM00180    
                  WHENEVER ONWRDS.GE.NON                                                          *144 LM00181    
                     PRMESS.(BON(1)...ONCNT)                                                      *145 LM00182    
                     NEWON = 1B                                                                   *146 LM00183    
                     ONCNT = 1                                                                    *147 LM00184    
                  OR WHENEVER ONCNT .GE. MAXON(CONSOL)                                            *148 LM00185    
                     PRMESS.(BON(1)...ONCNT)                                                      *149 LM00186    
                     BON(1) = $$                                                                  *150 LM00187    
                     ONCNT = 1                                                                    *151 LM00188    
                  END OF CONDITIONAL                                                              *152 LM00189    
                                                                                                       LM00190    
      OVER1       WHENEVER .NOT. OFF, TRANSFER TO LOOP                                            *153 LM00191    
                  WHENEVER NEWOFF                                                                 *154 LM00192    
                     WHENEVER .NOT. OCT                                                           *155 LM00193    
                       BOFF(48) = BZEL.(DEFBC.(LOC))                                              *156 LM00194    
                     OTHERWISE                                                                    *157 LM00195    
                       BOFF(48) = OCRBC.(LOC)                                                     *158 LM00196    
                     END OF CONDITIONAL                                                           *159 LM00197    
                     NEWOFF = 0B                                                                  *160 LM00198    
                     OFFCNT = 2                                                                   *161 LM00199    
                     OFFWDS = 0                                                                   *162 LM00200    
                  END OF CONDITIONAL                                                              *163 LM00201    
                                                                                                       LM00202    
                  BOFF(50-OFFCNT-1) = BL                                                          *164 LM00203    
                  BOFF(50-OFFCNT-2) = OCLBC.(WORD)                                                *165 LM00204    
                  BOFF(50-OFFCNT-3) = OCRBC.(WORD)                                                *166 LM00205    
                  OFFCNT = OFFCNT + 3                                                             *167 LM00206    
                  OFFWDS = OFFWDS + 1                                                             *168 LM00207    
                                                                                                       LM00208    
                  WHENEVER OFFWDS .GE. NOFF                                                       *169 LM00209    
                     BOFF(50) = OFFCNT.V.LM                                                       *170 LM00210    
                     MCOUNT = OFFCNT+1                                                            *171 LM00211    
                     BFWRIT.(N3,N4,BOFF(50)...MCOUNT,IOERR)                                       *172 LM00212    
                     NEWOFF = 1B                                                                  *173 LM00213    
                     OFFCNT = 2                                                                   *174 LM00214    
                  OR WHENEVER OFFCNT .GE. MAXOFF                                                  *175 LM00215    
                     BOFF(50) = OFFCNT.V.LM                                                       *176 LM00216    
                     MCOUNT = OFFCNT+1                                                            *177 LM00217    
                     BFWRIT.(N3,N4,BOFF(50)...MCOUNT,IOERR)                                       *178 LM00218    
                     OFFCNT = 2                                                                   *179 LM00219    
                     BOFF(48) = $$                                                                *180 LM00220    
                  END OF CONDITIONAL                                                              *181 LM00221    
      LOOP        CONTINUE                                                                        *182 LM00222    
                                                                                                       LM00223    
                                                                                                       LM00224    
      EOF         RECCNT = EOFCT - 1                                                              *183 LM00225    
                  TRANSFER TO BACK                                                                *184 LM00226    
                                                                                                       LM00227    
                                                                                                       LM00228    
      IOERR       PRDIAG.                                                                         *185 LM00229    
                                                                                                       LM00230    
                                                                                                       LM00231    
      FINALE      WHENEVER ON .AND. ONCNT.G.1, PRMESS.(BON(1)...ONCNT)                            *186 LM00232    
                  WHENEVER OFF .AND. OFFCNT .G. 2                                                 *187 LM00233    
                     BOFF(50) = OFFCNT .V. LM                                                     *188 LM00234    
                     MCOUNT = -OFFCNT-1                                                           *189 LM00235    
                     BFWRIT.(N3,N4,BOFF(50)...MCOUNT,IOERR)                                       *190 LM00236    
                     BFCLOS.(N3,N4,IOERR)                                                         *191 LM00237    
                  END OF CONDITIONAL                                                              *192 LM00238    
                  EXITM.                                                                          *193 LM00239    
                                                                                                       LM00240    
                  INTERNAL FUNCTION (A,B,C,D)                                                     *194 LM00241    
                  STATEMENT LABEL C                                                               *195 LM00242    
                  BOOLEAN B,D                                                                     *196 LM00243    
                  ENTRY TO NUMBER.                                                                *197 LM00244    
                                                                                                       LM00245    
      NUM         WHENEVER COMARG.(J,TEMP).E.FENCE, TRANSFER TO C                                 *198 LM00246    
                  J = J+1                                                                         *199 LM00247    
      LOOPA2      THROUGH LOOPA2, FOR K = ARGS2,-1,K.E.0 .OR. TEMP.E.ARGS2(K)                     *200 LM00248    
                  TRANSFER TO ARGT(K)                                                             *201 LM00249    
                                                                                                       LM00250    
      ARGT(0)     WHENEVER ZEL.(TEMP) .A. $$ .NE. 0, TRANSFER TO BADFMT                           *202 LM00251    
                  A = BCDEC.(TEMP)                                                                *203 LM00252    
                  B = 1B                                                                          *204 LM00253    
      ARGT(6)     FUNCTION RETURN                                                                 *205 LM00254    
                                                                                                       LM00255    
      ARGT(1)     WHENEVER COMARG.(J,TEMP) .E. FENCE, TRANSFER TO BADFMT                          *206 LM00256    
                  J = J + 1                                                                       *207 LM00257    
                  WHENEVER ZEL.(TEMP).A.$YYYYYY$ .NE. 0, TRANSFER TO BADFMT                       *208 LM00258    
                  A = BCOCT.(TEMP)                                                                *209 LM00259    
                  D = 1B                                                                          *210 LM00260    
                  B = 1B                                                                          *211 LM00261    
                  FUNCTION RETURN                                                                 *212 LM00262    
                                                                                                       LM00263    
                                                                                                       LM00264    
                    'OFF' OR '(OFF)'                                                                   LM00265    
                                                                                                       LM00266    
      ARGT(2)                                                                                     *213 LM00267    
      ARGT(3)     ON = 0B                                                                         *214 LM00268    
                                                                                                       LM00269    
                  'OFFON' OR 'ONOFF'                                                                   LM00270    
                                                                                                       LM00271    
      ARGT(4)                                                                                     *215 LM00272    
      ARGT(5)     OFF = 1B                                                                        *216 LM00273    
                  WHENEVER COMARG.(J,N3) .E. FENCE                                                *217 LM00274    
                     N3 = N1                                                                      *218 LM00275    
                     TRANSFER TO C                                                                *219 LM00276    
                  END OF CONDITIONAL                                                              *220 LM00277    
                                                                                                       LM00278    
                  J = J+2                                                                         *221 LM00279    
                  WHENEVER COMARG.(J-1,N4) .NE. FENCE, TRANSFER TO NUM                            *222 LM00280    
                  N4 = $   BIN$                                                                   *223 LM00281    
                  TRANSFER TO C                                                                   *224 LM00282    
                                                                                                       LM00283    
                  END OF FUNCTION                                                                 *225 LM00284    
                                                                                                       LM00285    
                  END OF PROGRAM                                                                  *226 LM00286    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01702 TRANSFER VECTOR LENGTH  00031 PROGRAM BEGINS    00410
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ARGS1  00143 A 1        BON    00243 A 1        HELP   00133   4        MCOUNT 00276   1        OFFWDS 00312   1  
      ARGS2  00152 A 1        CONSOL 00244   1        IOERR  00134   4        N1     00277   1        ONCNT  00313   1  
      ARGT   00125 A 4        CR     00245 A 1        J      00255   1        N2     00300   1        ON     00314 A 2  
      B0     00153 A 1        DATE   00246   1        K      00256   1        N3     00301   1        ONWRDS 00315   1  
      B1     00154 A 1        DELTAF 00247 A 2        LLF    00257 A 2        N4     00302 A 1        OVER1  00137   4  
      B2     00155 A 1        DELTA  00250   1        LM     00260 A 1        NEWOFF 00303 A 2        RECCNT 00316 A 1  
      B3     00156 A 1        ENDF   00251 A 2        LOC1   00261   1        NEWON  00304 A 2        RELLOC 00317   1  
      BACK   00126   4        END    00252   1        LOC    00262   1        NOFF   00305   1        STARTF 00320 A 2  
      BADFMT 00127   4        EOFCT  00253   1        LOOPA2 00032   4        NON    00306   1        START  00321   1  
      BLKSIZ 00157   1        EOF    00130   4        LOOPA  00032   4        NUM    00136   4        TEMPF  00116   2  
      BLKSZF 00160 A 2        FENCE  00254 A 1        LOOP   00135   4        OCT    00307 A 2        TEMP   00116   1  
      BL     00034 A 1        FINALE 00131   4        MAXOFF 00263 A 1        OFFCNT 00310   1        TIME   00322   1  
      BOFF   00115 A 1        GO     00132   4        MAXON  00275 A 1        OFF    00311 A 2        WORD   00323   1  
0FUNCTION DICTIONARY    
      BCDEC  00000   1        BCOCT  00001   1        BFCLOS 00002   1        BFOPEN 00003   1        BFWRIT 00004   1  
      BZ57   00005   1        BZEL   00006   1        COMARG 00007   1        DEFBC  00010   1        EXITM  00011   1  
      EXIT   00012   1        FERRTN 00013   1        GETBUF 00014   1        GETTM  00015   1        .SETUP 00016   1  
      OCLBC  00017   1        OCRBC  00020   1        OPEN   00021   1        PRDIAG 00022   1        PRMESA 00023   1  
      PRMESS 00024   1        RDWAIT 00025   1        SETBRK 00026   1        WHOAMI 00027   1        ZEL    00030   1  
      NUMBER 00031   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00373 -206060223145     00403 -307070707070     00334 +000000000062     00332 +000000000017     00406 -377777000001    
 00336 +010000000000     00372 -206026465160     00337 +016060606060     00407 -377777000012     00402 -266060606060    
 00367 -116060606060     00335 +000000000660     00331 +000000000011     00333 +000000000036     00330 +000000000004    
 00347 +242543632133     00375 -206330214560     00366 -112521632551     00400 -223171256027     00344 +224346234260    
 00353 +377777777777     00327 +000000000003     00361 -042545633560     00360 -036021512764     00352 +314343252721    
 00326 +000000000002     00362 -050440606060     00355 -004503406040     00365 -062626144060     00363 -051461144645    
 00376 -211446262646     00354 -001446262614     00374 -206060606060     00404 -312540606060     00357 -034623426231    
 00401 -232140604022     00356 -006040242543     00364 -056646512462     00350 +254524406040     00341 +143333331460    
 00377 -211463461461     00342 +146330516414     00343 +215163406040     00340 +026060406263     00371 -204501606045    
 00324 +000000000000     00351 +272560316235     00346 +236360646221     00370 -202346515125     00405 -343025434734    
 00325 +000000000001     00345 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00117 TXL -301562001561       00120 TXL -301621001617       00121 TXL -301617001617       00122 TXL -301617001615      
 00123 TXL -301615001615       00124 TXL -301570001562       00125 TXL -301554001542       00126 TXL -301161001156      
 00127 TXL -300476000471       00130 TXL -301445001442       00131 TXL -301457001447       00132 TXL -300604000600      
 00133 TXL -300423000422       00134 TXL -301447001446       00135 TXL -301442001440       00136 TXL -301517001511      
 00137 TXL -301307001304                                                                                                
0PROGRAM    
                 N'R                                                                001  LM00017
                 D'N B0(0),B1(0),B2(0),B3(0),BON(50),BOFF(50)                       002  LM00018
                 BOOLEAN STARTF,ENDF,LLF,DELTAF,TEMPF,OFF,ON,NEWON,NEWOFF,OCT       003  LM00019
                 BOOLEAN BLKSZF                                                     004  LM00020
                 V'S STARTF = 0B                                                    005  LM00021
 00410 TSX +0 07400 4 00016    00320     +0 00000 0 00000                                                               
                 V'S ENDF = 0B                                                      006  LM00022
 00251     +0 00000 0 00000                                                                                             
                 V'S LLF = 0B                                                       007  LM00023
 00257     +0 00000 0 00000                                                                                             
                 V'S DELTAF = 0B                                                    008  LM00024
 00247     +0 00000 0 00000                                                                                             
                 V'S BLKSZF = 0B                                                    009  LM00025
 00160     +0 00000 0 00000                                                                                             
                 V'S ON = 1B                                                        010  LM00026
 00314     +0 00000 0 00001                                                                                             
                 V'S OFF = 0B                                                       011  LM00027
 00311     +0 00000 0 00000                                                                                             
                 V'S NEWON = 1B                                                     012  LM00028
 00304     +0 00000 0 00001                                                                                             
                 V'S NEWOFF = 1B                                                    013  LM00029
 00303     +0 00000 0 00001                                                                                             
                 V'S OCT = 0B                                                       014  LM00030
 00307     +0 00000 0 00000                                                                                             
                 V'S FENCE = 777777777777K                                          015  LM00031
 00254     -3 77777 7 77777                                                                                             
                 V'S MAXON = 25,19,25,19,19,19,19,19,25,16                          016  LM00032
 00264     +0 00000 0 00020    00265     +0 00000 0 00031    00266     +0 00000 0 00023    00267     +0 00000 0 00023   
 00270     +0 00000 0 00023    00271     +0 00000 0 00023    00272     +0 00000 0 00023    00273     +0 00000 0 00031   
 00274     +0 00000 0 00023    00275     +0 00000 0 00031                                                               
                 V'S BL = 605757575757K                                             017  LM00033
 00034     -2 05757 5 75757                                                                                             
                 V'S CR = 555757575757K                                             018  LM00034
 00245     -1 55757 5 75757                                                                                             
                 E'E (BL,BOFF(49))                                                  019  LM00035
                 E'E (TEMP,TEMPF)                                                   020  LM00036
                 V'S LM = 777777K6                                                  021  LM00037
 00260     -3 77777 0 00000                                                                                             
                 V'S N4 = $   BIN$                                                  022  LM00038
 00302     -2 06060 2 23145                                                                                             
                 V'S RECCNT = 432                                                   023  LM00039
 00316     +0 00000 0 00660                                                                                             
                 V'S MAXOFF = 29                                                    024  LM00040
 00263     +0 00000 0 00035                                                                                             
                 V'S ARGS1 = 3,$    TO$,$  THRU$,$   ...$                           025  LM00041
 00140     -2 06060 3 33333    00141     -2 06063 3 05164    00142     -2 06060 6 06346    00143     +0 00000 0 00003   
                 V'S ARGS2 = 6,$     O$,$   OFF$,$ (OFF)$,$ OFFON$,$ONOFF$,         026  LM00042
                1  $     *$                                                         026  LM00043
 00144     -2 06060 6 06054    00145     -0 64546 2 62660    00146     -2 04626 2 64645    00147     -2 07446 2 62634   
 00150     -2 06060 4 62626    00151     -2 06060 6 06046    00152     +0 00000 0 00006                                 
                 N1 = COMARG.(1)                                                    027  LM00048
 00411 TSX +0 07400 4 00007    00412 TXH +3 00000 0 00325    00413 STO +0 60100 0 00277                                 
                 W'R N1 .E. FENCE .OR. N1 .E. $(HELP)$                              028  LM00049
 00414 CLA +0 50000 0 00277    00415 SUB +0 40200 0 00405    00416 TZE +0 10000 0 00422    00417 CLA +0 50000 0 00277   
 00420 SUB +0 40200 0 00254    00421 TNZ -0 10000 0 00463                                                               
      HELP          PRMESS.                                                         029  LM00050
 00422 TSX +0 07400 4 00024                                                                                             
                    PRMESS.($ CORRECT USAGE IS:$)                                   030  LM00051
 00423 TSX +0 07400 4 00024    00424 TXH +3 00000 0 00370    00425 TXH +3 00000 0 00346    00426 TXH +3 00000 0 00351   
                    PRMESS.                                                         031  LM00052
 00427 TSX +0 07400 4 00024                                                                                             
                    PRMESA.(COMARG.(0),$ N1  N2  -START- -'THRU'/'TO'/'...' $)      032  LM00053
 00430 TSX +0 07400 4 00007    00431 TXH +3 00000 0 00324    00432 STO +0 60100 0 01677    00433 TSX +0 07400 4 00023   
 00434 TXH +3 00000 0 01677    00435 TXH +3 00000 0 00371    00436 TXH +3 00000 0 00340    00437 TXH +3 00000 0 00343   
 00440 TXH +3 00000 0 00342    00441 TXH +3 00000 0 00377    00442 TXH +3 00000 0 00341                                 
                    PRMESS.($END- -NWORDS- -DELTA- -BLOCKSIZE-$)                    033  LM00054
 00443 TSX +0 07400 4 00024    00444 TXH +3 00000 0 00350    00445 TXH +3 00000 0 00364    00446 TXH +3 00000 0 00356   
 00447 TXH +3 00000 0 00401    00450 TXH +3 00000 0 00357    00451 TXH +3 00000 0 00404                                 
                    PRMESS.($      -'OFF'/'OFFON'/'ONOFF'- -N3- -N4-$)              034  LM00055
 00452 TSX +0 07400 4 00024    00453 TXH +3 00000 0 00374    00454 TXH +3 00000 0 00354    00455 TXH +3 00000 0 00376   
 00456 TXH +3 00000 0 00363    00457 TXH +3 00000 0 00365    00460 TXH +3 00000 0 00355    00461 TXH +3 00000 0 00362   
                    EXITM.                                                          035  LM00056
 00462 TSX +0 07400 4 00011                                                                                             
                 E'L                                                                036  LM00057
                 W'R COMARG.(2,N2) .E. FENCE                                        037  LM00059
 00463 TSX +0 07400 4 00007    00464 TXH +3 00000 0 00326    00465 TXH +3 00000 0 00300    00466 SUB +0 40200 0 00254   
 00467 TNZ -0 10000 0 00477                                                                                             
                   T'O HELP                                                         038  LM00060
 00470 TRA +0 02000 0 00133                                                                                             
      BADFMT       PRMESS.($ILLEGAL ARGUMENT:$,TEMP)                                039  LM00061
 00471 TSX +0 07400 4 00024    00472 TXH +3 00000 0 00352    00473 TXH +3 00000 0 00360    00474 TXH +3 00000 0 00361   
 00475 TXH +3 00000 0 00116                                                                                             
                    EXITM.                                                          040  LM00062
 00476 TSX +0 07400 4 00011                                                                                             
                 E'L                                                                041  LM00063
                 J = 3                                                              042  LM00065
 00477 CLA +0 50000 0 00327    00500 STO +0 60100 0 00255                                                               
                 NUMBER.(START,STARTF,GO,OCT)                                       043  LM00066
 00501 TSX +0 07400 4 00031    00502 TXH +3 00000 0 00321    00503 TXH +3 00000 0 00320    00504 TXH +3 00000 0 00132   
 00505 TXH +3 00000 0 00307                                                                                             
                 W'R COMARG.(J,TEMP) .E. FENCE, T'O GO                              044  LM00067
 00506 TSX +0 07400 4 00007    00507 TXH +3 00000 0 00255    00510 TXH +3 00000 0 00116    00511 SUB +0 40200 0 00254   
 00512 TNZ -0 10000 0 00514    00513 TRA +0 02000 0 00132                                                               
      LOOPA      T'H LOOPA, FOR K = 1,1,K.G.ARGS1 .OR. TEMP.E.ARGS1(K)              045  LM00068
 00514 CLA +0 50000 0 00325    00515 STO +0 60100 0 00256    00516 TRA +0 02000 0 00522    00517 CLA +0 50000 0 00256   
 00520 ADD +0 40000 0 00325    00521 STO +0 60100 0 00256    00522 LXA +0 53400 2 00256    00523 CLA +0 50000 0 00116   
 00524 SUB +0 40200 2 00143    00525 TZE +0 10000 0 00533    00526 CLA +0 50000 0 00256    00527 SUB +0 40200 0 00143   
 00530 TZE +0 10000 0 00532    00531 TPL +0 12000 0 00533    00532 TRA +0 02000 0 00517                                 
                 W'R K .LE. ARGS1                                                   046  LM00069
 00533 CLA +0 50000 0 00256    00534 SUB +0 40200 0 00143    00535 TZE +0 10000 0 00537    00536 TPL +0 12000 0 00547   
                    J = J+1                                                         047  LM00070
 00537 CLA +0 50000 0 00255    00540 ADD +0 40000 0 00325    00541 STO +0 60100 0 00255                                 
                    NUMBER.(END,ENDF,BADFMT,TEMPF)                                  048  LM00071
 00542 TSX +0 07400 4 00031    00543 TXH +3 00000 0 00252    00544 TXH +3 00000 0 00251    00545 TXH +3 00000 0 00127   
 00546 TXH +3 00000 0 00116                                                                                             
                 E'L                                                                049  LM00072
                 NUMBER.(NON,LLF,GO,TEMPF)                                          050  LM00073
 00547 TSX +0 07400 4 00031    00550 TXH +3 00000 0 00306    00551 TXH +3 00000 0 00257    00552 TXH +3 00000 0 00132   
 00553 TXH +3 00000 0 00116                                                                                             
                 NUMBER.(DELTA,DELTAF,GO,TEMPF)                                     051  LM00074
 00554 TSX +0 07400 4 00031    00555 TXH +3 00000 0 00250    00556 TXH +3 00000 0 00247    00557 TXH +3 00000 0 00132   
 00560 TXH +3 00000 0 00116                                                                                             
                 NUMBER.(BLKSIZ,BLKSZF,GO,TEMPF)                                    052  LM00075
 00561 TSX +0 07400 4 00031    00562 TXH +3 00000 0 00157    00563 TXH +3 00000 0 00160    00564 TXH +3 00000 0 00132   
 00565 TXH +3 00000 0 00116                                                                                             
                 TEMPF = 0B                                                         053  LM00076
 00566 CLA +0 50000 0 00324    00567 STO +0 60100 0 00116                                                               
                 NUMBER.(TEMP,TEMPF,GO,TEMPF)                                       054  LM00077
 00570 TSX +0 07400 4 00031    00571 TXH +3 00000 0 00116    00572 TXH +3 00000 0 00116    00573 TXH +3 00000 0 00132   
 00574 TXH +3 00000 0 00116                                                                                             
                 W'R TEMPF, T'O HELP                                                055  LM00078
 00575 NZT -0 52000 0 00116    00576 TRA +0 02000 0 00600    00577 TRA +0 02000 0 00133                                 
      GO         W'R .NOT.STARTF, START = 1                                         056  LM00080
 00600 ZET +0 52000 0 00320    00601 TRA +0 02000 0 00604    00602 CLA +0 50000 0 00325    00603 STO +0 60100 0 00321   
                 W'R START .E. 0, START = 1                                         057  LM00081
 00604 CLA +0 50000 0 00321    00605 SUB +0 40200 0 00324    00606 TNZ -0 10000 0 00611    00607 CLA +0 50000 0 00325   
 00610 STO +0 60100 0 00321                                                                                             
                 W'R .NOT.ENDF, END = 377777777777K                                 058  LM00082
 00611 ZET +0 52000 0 00251    00612 TRA +0 02000 0 00615    00613 CLA +0 50000 0 00353    00614 STO +0 60100 0 00252   
                 W'R .NOT.DELTAF, DELTA = 1                                         059  LM00083
 00615 ZET +0 52000 0 00247    00616 TRA +0 02000 0 00621    00617 CLA +0 50000 0 00325    00620 STO +0 60100 0 00250   
                 W'R .NOT.BLKSZF, BLKSIZ = 1                                        060  LM00084
 00621 ZET +0 52000 0 00160    00622 TRA +0 02000 0 00625    00623 CLA +0 50000 0 00325    00624 STO +0 60100 0 00157   
                 W'R BLKSIZ .G. DELTA                                               061  LM00086
 00625 CLA +0 50000 0 00157    00626 SUB +0 40200 0 00250    00627 TZE +0 10000 0 00640    00630 TMI -0 12000 0 00640   
                   PRMESS.($BLOCK SIZE GREATER THAN DELTA.$)                        062  LM00087
 00631 TSX +0 07400 4 00024    00632 TXH +3 00000 0 00344    00633 TXH +3 00000 0 00400    00634 TXH +3 00000 0 00366   
 00635 TXH +3 00000 0 00375    00636 TXH +3 00000 0 00347                                                               
                   EXITM.                                                           063  LM00088
 00637 TSX +0 07400 4 00011                                                                                             
                 E'L                                                                064  LM00089
                 WHOAMI.(BOFF(3)...4)                                               065  LM00091
 00640 TSX +0 07400 4 00027    00641 TIX +2 00330 0 00112                                                               
                 CONSOL = BOFF.RS.30                                                066  LM00092
 00642 CAL -0 50000 0 00333    00643 STA +0 62100 0 00645    00644 CAL -0 50000 0 00115    00645 LGR -0 76500 0 00000   
 00646 SLW +0 60200 0 00244                                                                                             
                 W'R CONSOL .G. 9, CONSOL = 0                                       067  LM00093
 00647 CLA +0 50000 0 00244    00650 SUB +0 40200 0 00331    00651 TZE +0 10000 0 00655    00652 TMI -0 12000 0 00655   
 00653 CLA +0 50000 0 00324    00654 STO +0 60100 0 00244                                                               
                 GETTM.(DATE,TIME)                                                  068  LM00094
 00655 TSX +0 07400 4 00015    00656 TXH +3 00000 0 00246    00657 TXH +3 00000 0 00322                                 
                 W'R LLF                                                            069  LM00095
 00660 NZT -0 52000 0 00257    00661 TRA +0 02000 0 00665                                                               
                    NOFF = NON                                                      070  LM00096
 00662 CLA +0 50000 0 00306    00663 STO +0 60100 0 00305                                                               
                 O'E                                                                071  LM00097
 00664 TRA +0 02000 0 00675                                                                                             
                    NON = (MAXON(CONSOL)-1)/3                                       072  LM00098
 00665 LXA +0 53400 1 00244    00666 CLA +0 50000 1 00275    00667 SUB +0 40200 0 00325    00670 LRS +0 76500 0 00043   
 00671 DVP +0 22100 0 00327    00672 STQ -0 60000 0 00306                                                               
                    NOFF = 9                                                        073  LM00099
 00673 CLA +0 50000 0 00331    00674 STO +0 60100 0 00305                                                               
                 E'L                                                                074  LM00100
                 GETBUF.(B0,432)                                                    075  LM00102
 00675 TSX +0 07400 4 00014    00676 TXH +3 00000 0 00153    00677 TXH +3 00000 0 00335                                 
                 FERRTN.(IOERR)                                                     076  LM00103
 00700 TSX +0 07400 4 00013    00701 TXH +3 00000 0 00134                                                               
                 SETBRK.(EXITM.)                                                    077  LM00104
 00702 TSX +0 07400 4 00026    00703 TXH +3 00000 0 00011                                                               
                 OPEN.($R$,N1,N2)                                                   078  LM00105
 00704 TSX +0 07400 4 00021    00705 TXH +3 00000 0 00367    00706 TXH +3 00000 0 00277    00707 TXH +3 00000 0 00300   
                 W'R ON                                                             079  LM00108
 00710 NZT -0 52000 0 00314    00711 TRA +0 02000 0 00725                                                               
                    PRMESS.(CR,N1,BL,N2,BL,BL,DATE,BL,TIME,CR)                      080  LM00109
 00712 TSX +0 07400 4 00024    00713 TXH +3 00000 0 00245    00714 TXH +3 00000 0 00277    00715 TXH +3 00000 0 00034   
 00716 TXH +3 00000 0 00300    00717 TXH +3 00000 0 00034    00720 TXH +3 00000 0 00034    00721 TXH +3 00000 0 00246   
 00722 TXH +3 00000 0 00034    00723 TXH +3 00000 0 00322    00724 TXH +3 00000 0 00245                                 
                 E'L                                                                081  LM00110
                 W'R OFF                                                            082  LM00112
 00725 NZT -0 52000 0 00311    00726 TRA +0 02000 0 01035                                                               
                    GETBUF.(B1,432)                                                 083  LM00113
 00727 TSX +0 07400 4 00014    00730 TXH +3 00000 0 00154    00731 TXH +3 00000 0 00335                                 
                    GETBUF.(B2,432)                                                 084  LM00114
 00732 TSX +0 07400 4 00014    00733 TXH +3 00000 0 00155    00734 TXH +3 00000 0 00335                                 
                    GETBUF.(B3,432)                                                 085  LM00115
 00735 TSX +0 07400 4 00014    00736 TXH +3 00000 0 00156    00737 TXH +3 00000 0 00335                                 
                    BFOPEN.($W$,N3,N4,B1(B1+432),B2(B2+432),B3(B3+432),IOERR)       086  LM00116
 00740 CLA +0 50000 0 00156    00741 ADD +0 40000 0 00335    00742 SUB +0 40200 0 00743    00743 TXH +3 00000 0 00156   
 00744 STA +0 62100 0 00765    00745 CLA +0 50000 0 00155    00746 ADD +0 40000 0 00335    00747 SUB +0 40200 0 00750   
 00750 TXH +3 00000 0 00155    00751 STA +0 62100 0 00764    00752 CLA +0 50000 0 00154    00753 ADD +0 40000 0 00335   
 00754 SUB +0 40200 0 00755    00755 TXH +3 00000 0 00154    00756 STA +0 62100 0 00763    00757 TSX +0 07400 4 00003   
 00760 TXH +3 00000 0 00402    00761 TXH +3 00000 0 00301    00762 TXH +3 00000 0 00302    00763 TXH +3 00000 0 00000   
 00764 TXH +3 00000 0 00000    00765 TXH +3 00000 0 00000    00766 TXH +3 00000 0 00134                                 
                    BOFF(48) = 777777000012K                                        087  LM00118
 00767 CLA +0 50000 0 00407    00770 STO +0 60100 0 00035                                                               
                    BOFF(47) = $1$                                                  088  LM00119
 00771 CLA +0 50000 0 00337    00772 STO +0 60100 0 00036                                                               
                    BOFF(46) = N1                                                   089  LM00120
 00773 CLA +0 50000 0 00277    00774 STO +0 60100 0 00037                                                               
                    BOFF(45) = BL                                                   090  LM00121
 00775 CLA +0 50000 0 00034    00776 STO +0 60100 0 00040                                                               
                    BOFF(44) = BZ57.(N2)                                            091  LM00122
 00777 TSX +0 07400 4 00005    01000 TXH +3 00000 0 00300    01001 STO +0 60100 0 00041                                 
                    BOFF(43) = $  FOR$                                              092  LM00123
 01002 CLA +0 50000 0 00372    01003 STO +0 60100 0 00042                                                               
                    BOFF(42) = BOFF(3)                                              093  LM00124
 01004 CLA +0 50000 0 00112    01005 STO +0 60100 0 00043                                                               
                    BOFF(41) = BZ57.(BOFF(2)) - 1K10                                094  LM00125
 01006 TSX +0 07400 4 00005    01007 TXH +3 00000 0 00113    01010 SUB +0 40200 0 00336    01011 STO +0 60100 0 00044   
                    BOFF(40) = $$                                                   095  LM00126
 01012 CLA +0 50000 0 00374    01013 STO +0 60100 0 00045                                                               
                    BOFF(39) = DATE                                                 096  LM00127
 01014 CLA +0 50000 0 00246    01015 STO +0 60100 0 00046                                                               
                    BOFF(38) = TIME                                                 097  LM00128
 01016 CLA +0 50000 0 00322    01017 STO +0 60100 0 00047                                                               
                    BOFF(37) = 777777000001K                                        098  LM00129
 01020 CLA +0 50000 0 00406    01021 STO +0 60100 0 00050                                                               
                    BOFF(36) = BL                                                   099  LM00130
 01022 CLA +0 50000 0 00034    01023 STO +0 60100 0 00051                                                               
                    BOFF(35) = 777777000001K                                        100  LM00131
 01024 CLA +0 50000 0 00406    01025 STO +0 60100 0 00052                                                               
                    BOFF(34) = BL                                                   101  LM00132
 01026 CLA +0 50000 0 00034    01027 STO +0 60100 0 00053                                                               
                    BFWRIT.(N3,N4,BOFF(48)...15,IOERR)                              102  LM00134
 01030 TSX +0 07400 4 00004    01031 TXH +3 00000 0 00301    01032 TXH +3 00000 0 00302    01033 TIX +2 00332 0 00035   
 01034 TXH +3 00000 0 00134                                                                                             
                 E'L                                                                103  LM00135
                 T'H LOOP, FOR LOC1 = START,DELTA,LOC1.G.END                        104  LM00137
 01035 CLA +0 50000 0 00321    01036 STO +0 60100 0 00261    01037 TRA +0 02000 0 01043    01040 CLA +0 50000 0 00261   
 01041 ADD +0 40000 0 00250    01042 STO +0 60100 0 00261    01043 CLA +0 50000 0 00261    01044 SUB +0 40200 0 00252   
 01045 TZE +0 10000 0 01047    01046 TPL +0 12000 0 01442                                                               
                 W'R BLKSZF                                                         105  LM00138
 01047 NZT -0 52000 0 00160    01050 TRA +0 02000 0 01112                                                               
                   W'R ON.AND.ONCNT.G.1                                             106  LM00139
 01051 CLA +0 50000 0 00313    01052 SUB +0 40200 0 00325    01053 TZE +0 10000 0 01065    01054 TMI -0 12000 0 01065   
 01055 NZT -0 52000 0 00314    01056 TRA +0 02000 0 01065                                                               
                     PRMESS.(BON(1)...ONCNT)                                        107  LM00140
 01057 TSX +0 07400 4 00024    01060 TIX +2 00313 0 00242                                                               
                     NEWON=1B                                                       108  LM00141
 01061 CLA +0 50000 0 00325    01062 STO +0 60100 0 00304                                                               
                     ONCNT=1                                                        109  LM00142
 01063 CLA +0 50000 0 00325    01064 STO +0 60100 0 00313                                                               
                   E'L                                                              110  LM00143
                   W'R OFF.AND.OFFCNT.G.2                                           111  LM00144
 01065 CLA +0 50000 0 00310    01066 SUB +0 40200 0 00326    01067 TZE +0 10000 0 01112    01070 TMI -0 12000 0 01112   
 01071 NZT -0 52000 0 00311    01072 TRA +0 02000 0 01112                                                               
                     BOFF(50)=OFFCNT.V.LM                                           112  LM00145
 01073 CAL -0 50000 0 00310    01074 ORA -0 50100 0 00260    01075 SLW +0 60200 0 00033                                 
                     MCOUNT=OFFCNT+1                                                113  LM00146
 01076 CLA +0 50000 0 00310    01077 ADD +0 40000 0 00325    01100 STO +0 60100 0 00276                                 
                     BFWRIT.(N3,N4,BOFF(50)...MCOUNT,IOERR)                         114  LM00147
 01101 TSX +0 07400 4 00004    01102 TXH +3 00000 0 00301    01103 TXH +3 00000 0 00302    01104 TIX +2 00276 0 00033   
 01105 TXH +3 00000 0 00134                                                                                             
                     NEWOFF=1B                                                      115  LM00148
 01106 CLA +0 50000 0 00325    01107 STO +0 60100 0 00303                                                               
                     OFFCNT=2                                                       116  LM00149
 01110 CLA +0 50000 0 00326    01111 STO +0 60100 0 00310                                                               
                   E'L                                                              117  LM00150
                 E'L                                                                118  LM00151
                 T'H LOOP, FOR LOC=LOC1,1,LOC.E.LOC1+BLKSIZ                         119  LM00152
 01112 CLA +0 50000 0 00261    01113 STO +0 60100 0 00262    01114 TRA +0 02000 0 01120    01115 CLA +0 50000 0 00262   
 01116 ADD +0 40000 0 00325    01117 STO +0 60100 0 00262    01120 CLA +0 50000 0 00261    01121 ADD +0 40000 0 00157   
 01122 CHS +0 76000 0 00002    01123 ADD +0 40000 0 00262    01124 TZE +0 10000 0 01441                                 
                 TEMP = (LOC-1)/432 * 432 + 1                                       120  LM00153
 01125 CLA +0 50000 0 00262    01126 SUB +0 40200 0 00325    01127 LRS +0 76500 0 00043    01130 DVP +0 22100 0 00335   
 01131 MPY +0 20000 0 00335    01132 XCA +0 13100 0 00000    01133 ADD +0 40000 0 00325    01134 STO +0 60100 0 00116   
                 W'R TEMP .NE. RELLOC                                               121  LM00154
 01135 CLA +0 50000 0 00116    01136 SUB +0 40200 0 00317    01137 TZE +0 10000 0 01156                                 
                    RELLOC = TEMP                                                   122  LM00155
 01140 CLA +0 50000 0 00116    01141 STO +0 60100 0 00317                                                               
                    RDWAIT.(N1,N2,RELLOC,B0(B0+432)...432,EOF,EOFCT)                123  LM00156
 01142 CLA +0 50000 0 00153    01143 ADD +0 40000 0 00335    01144 SUB +0 40200 0 01145    01145 TXH +3 00000 0 00153   
 01146 STA +0 62100 0 01153    01147 TSX +0 07400 4 00025    01150 TXH +3 00000 0 00277    01151 TXH +3 00000 0 00300   
 01152 TXH +3 00000 0 00317    01153 TIX +2 00335 0 00000    01154 TXH +3 00000 0 00130    01155 TXH +3 00000 0 00253   
                 E'L                                                                124  LM00157
      BACK       TEMP = LOC - RELLOC                                                125  LM00158
 01156 CLA +0 50000 0 00262    01157 SUB +0 40200 0 00317    01160 STO +0 60100 0 00116                                 
                 W'R TEMP .G. RECCNT, T'O FINALE                                    126  LM00159
 01161 CLA +0 50000 0 00116    01162 SUB +0 40200 0 00316    01163 TZE +0 10000 0 01166    01164 TMI -0 12000 0 01166   
 01165 TRA +0 02000 0 00131                                                                                             
                 WORD = B0(B0+432-TEMP)                                             127  LM00160
 01166 CLA +0 50000 0 00153    01167 ADD +0 40000 0 00335    01170 SUB +0 40200 0 00116    01171 PAX +0 73400 2 00000   
 01172 CLA +0 50000 2 00153    01173 STO +0 60100 0 00323                                                               
                 W'R .NOT.ON, T'O OVER1                                             128  LM00163
 01174 ZET +0 52000 0 00314    01175 TRA +0 02000 0 01177    01176 TRA +0 02000 0 00137                                 
                 W'R NEWON                                                          129  LM00164
 01177 NZT -0 52000 0 00304    01200 TRA +0 02000 0 01223                                                               
                    W'R .NOT. OCT                                                   130  LM00165
 01201 ZET +0 52000 0 00307    01202 TRA +0 02000 0 01212                                                               
                       BON(1) = BZEL.(DEFBC.(LOC))                                  131  LM00166
 01203 TSX +0 07400 4 00010    01204 TXH +3 00000 0 00262    01205 STO +0 60100 0 01677    01206 TSX +0 07400 4 00006   
 01207 TXH +3 00000 0 01677    01210 STO +0 60100 0 00242                                                               
                    O'E                                                             132  LM00167
 01211 TRA +0 02000 0 01215                                                                                             
                       BON(1) = OCRBC.(LOC)                                         133  LM00168
 01212 TSX +0 07400 4 00020    01213 TXH +3 00000 0 00262    01214 STO +0 60100 0 00242                                 
                    E'L                                                             134  LM00169
                    NEWON = 0B                                                      135  LM00170
 01215 CLA +0 50000 0 00324    01216 STO +0 60100 0 00304                                                               
                    ONCNT = 1                                                       136  LM00171
 01217 CLA +0 50000 0 00325    01220 STO +0 60100 0 00313                                                               
                    ONWRDS = 0                                                      137  LM00172
 01221 CLA +0 50000 0 00324    01222 STO +0 60100 0 00315                                                               
                 E'L                                                                138  LM00173
                 BON(ONCNT+1) = BL                                                  139  LM00175
 01223 CLA +0 50000 0 00313    01224 ADD +0 40000 0 00325    01225 PAX +0 73400 1 00000    01226 CLA +0 50000 0 00034   
 01227 STO +0 60100 1 00243                                                                                             
                 BON(ONCNT+2) = OCLBC.(WORD)                                        140  LM00176
 01230 TSX +0 07400 4 00017    01231 TXH +3 00000 0 00323    01232 STO +0 60100 0 01677    01233 CLA +0 50000 0 00313   
 01234 ADD +0 40000 0 00326    01235 PAX +0 73400 1 00000    01236 CLA +0 50000 0 01677    01237 STO +0 60100 1 00243   
                 BON(ONCNT+3) = OCRBC.(WORD)                                        141  LM00177
 01240 TSX +0 07400 4 00020    01241 TXH +3 00000 0 00323    01242 STO +0 60100 0 01677    01243 CLA +0 50000 0 00313   
 01244 ADD +0 40000 0 00327    01245 PAX +0 73400 1 00000    01246 CLA +0 50000 0 01677    01247 STO +0 60100 1 00243   
                 ONCNT = ONCNT + 3                                                  142  LM00178
 01250 CLA +0 50000 0 00313    01251 ADD +0 40000 0 00327    01252 STO +0 60100 0 00313                                 
                 ONWRDS = ONWRDS + 1                                                143  LM00179
 01253 CLA +0 50000 0 00315    01254 ADD +0 40000 0 00325    01255 STO +0 60100 0 00315                                 
                 W'R ONWRDS.GE.NON                                                  144  LM00181
 01256 CLA +0 50000 0 00315    01257 SUB +0 40200 0 00306    01260 TZE +0 10000 0 01262    01261 TMI -0 12000 0 01271   
                    PRMESS.(BON(1)...ONCNT)                                         145  LM00182
 01262 TSX +0 07400 4 00024    01263 TIX +2 00313 0 00242                                                               
                    NEWON = 1B                                                      146  LM00183
 01264 CLA +0 50000 0 00325    01265 STO +0 60100 0 00304                                                               
                    ONCNT = 1                                                       147  LM00184
 01266 CLA +0 50000 0 00325    01267 STO +0 60100 0 00313                                                               
                 O'R ONCNT .GE. MAXON(CONSOL)                                       148  LM00185
 01270 TRA +0 02000 0 01304    01271 LXA +0 53400 2 00244    01272 CLA +0 50000 0 00313    01273 SUB +0 40200 2 00275   
 01274 TZE +0 10000 0 01276    01275 TMI -0 12000 0 01304                                                               
                    PRMESS.(BON(1)...ONCNT)                                         149  LM00186
 01276 TSX +0 07400 4 00024    01277 TIX +2 00313 0 00242                                                               
                    BON(1) = $$                                                     150  LM00187
 01300 CLA +0 50000 0 00374    01301 STO +0 60100 0 00242                                                               
                    ONCNT = 1                                                       151  LM00188
 01302 CLA +0 50000 0 00325    01303 STO +0 60100 0 00313                                                               
                 E'L                                                                152  LM00189
      OVER1      W'R .NOT. OFF, T'O LOOP                                            153  LM00191
 01304 ZET +0 52000 0 00311    01305 TRA +0 02000 0 01307    01306 TRA +0 02000 0 00135                                 
                 W'R NEWOFF                                                         154  LM00192
 01307 NZT -0 52000 0 00303    01310 TRA +0 02000 0 01333                                                               
                    W'R .NOT. OCT                                                   155  LM00193
 01311 ZET +0 52000 0 00307    01312 TRA +0 02000 0 01322                                                               
                      BOFF(48) = BZEL.(DEFBC.(LOC))                                 156  LM00194
 01313 TSX +0 07400 4 00010    01314 TXH +3 00000 0 00262    01315 STO +0 60100 0 01677    01316 TSX +0 07400 4 00006   
 01317 TXH +3 00000 0 01677    01320 STO +0 60100 0 00035                                                               
                    O'E                                                             157  LM00195
 01321 TRA +0 02000 0 01325                                                                                             
                      BOFF(48) = OCRBC.(LOC)                                        158  LM00196
 01322 TSX +0 07400 4 00020    01323 TXH +3 00000 0 00262    01324 STO +0 60100 0 00035                                 
                    E'L                                                             159  LM00197
                    NEWOFF = 0B                                                     160  LM00198
 01325 CLA +0 50000 0 00324    01326 STO +0 60100 0 00303                                                               
                    OFFCNT = 2                                                      161  LM00199
 01327 CLA +0 50000 0 00326    01330 STO +0 60100 0 00310                                                               
                    OFFWDS = 0                                                      162  LM00200
 01331 CLA +0 50000 0 00324    01332 STO +0 60100 0 00312                                                               
                 E'L                                                                163  LM00201
                 BOFF(50-OFFCNT-1) = BL                                             164  LM00203
 01333 CLA +0 50000 0 00334    01334 SUB +0 40200 0 00310    01335 SUB +0 40200 0 00325    01336 PAX +0 73400 1 00000   
 01337 CLA +0 50000 0 00034    01340 STO +0 60100 1 00115                                                               
                 BOFF(50-OFFCNT-2) = OCLBC.(WORD)                                   165  LM00204
 01341 TSX +0 07400 4 00017    01342 TXH +3 00000 0 00323    01343 STO +0 60100 0 01677    01344 CLA +0 50000 0 00334   
 01345 SUB +0 40200 0 00310    01346 SUB +0 40200 0 00326    01347 PAX +0 73400 1 00000    01350 CLA +0 50000 0 01677   
 01351 STO +0 60100 1 00115                                                                                             
                 BOFF(50-OFFCNT-3) = OCRBC.(WORD)                                   166  LM00205
 01352 TSX +0 07400 4 00020    01353 TXH +3 00000 0 00323    01354 STO +0 60100 0 01677    01355 CLA +0 50000 0 00334   
 01356 SUB +0 40200 0 00310    01357 SUB +0 40200 0 00327    01360 PAX +0 73400 1 00000    01361 CLA +0 50000 0 01677   
 01362 STO +0 60100 1 00115                                                                                             
                 OFFCNT = OFFCNT + 3                                                167  LM00206
 01363 CLA +0 50000 0 00310    01364 ADD +0 40000 0 00327    01365 STO +0 60100 0 00310                                 
                 OFFWDS = OFFWDS + 1                                                168  LM00207
 01366 CLA +0 50000 0 00312    01367 ADD +0 40000 0 00325    01370 STO +0 60100 0 00312                                 
                 W'R OFFWDS .GE. NOFF                                               169  LM00209
 01371 CLA +0 50000 0 00312    01372 SUB +0 40200 0 00305    01373 TZE +0 10000 0 01375    01374 TMI -0 12000 0 01415   
                    BOFF(50) = OFFCNT.V.LM                                          170  LM00210
 01375 CAL -0 50000 0 00310    01376 ORA -0 50100 0 00260    01377 SLW +0 60200 0 00033                                 
                    MCOUNT = OFFCNT+1                                               171  LM00211
 01400 CLA +0 50000 0 00310    01401 ADD +0 40000 0 00325    01402 STO +0 60100 0 00276                                 
                    BFWRIT.(N3,N4,BOFF(50)...MCOUNT,IOERR)                          172  LM00212
 01403 TSX +0 07400 4 00004    01404 TXH +3 00000 0 00301    01405 TXH +3 00000 0 00302    01406 TIX +2 00276 0 00033   
 01407 TXH +3 00000 0 00134                                                                                             
                    NEWOFF = 1B                                                     173  LM00213
 01410 CLA +0 50000 0 00325    01411 STO +0 60100 0 00303                                                               
                    OFFCNT = 2                                                      174  LM00214
 01412 CLA +0 50000 0 00326    01413 STO +0 60100 0 00310                                                               
                 O'R OFFCNT .GE. MAXOFF                                             175  LM00215
 01414 TRA +0 02000 0 01440    01415 CLA +0 50000 0 00310    01416 SUB +0 40200 0 00263    01417 TZE +0 10000 0 01421   
 01420 TMI -0 12000 0 01440                                                                                             
                    BOFF(50) = OFFCNT.V.LM                                          176  LM00216
 01421 CAL -0 50000 0 00310    01422 ORA -0 50100 0 00260    01423 SLW +0 60200 0 00033                                 
                    MCOUNT = OFFCNT+1                                               177  LM00217
 01424 CLA +0 50000 0 00310    01425 ADD +0 40000 0 00325    01426 STO +0 60100 0 00276                                 
                    BFWRIT.(N3,N4,BOFF(50)...MCOUNT,IOERR)                          178  LM00218
 01427 TSX +0 07400 4 00004    01430 TXH +3 00000 0 00301    01431 TXH +3 00000 0 00302    01432 TIX +2 00276 0 00033   
 01433 TXH +3 00000 0 00134                                                                                             
                    OFFCNT = 2                                                      179  LM00219
 01434 CLA +0 50000 0 00326    01435 STO +0 60100 0 00310                                                               
                    BOFF(48) = $$                                                   180  LM00220
 01436 CLA +0 50000 0 00374    01437 STO +0 60100 0 00035                                                               
                 E'L                                                                181  LM00221
      LOOP       CONTINUE                                                           182  LM00222
 01440 TRA +0 02000 0 01115    01441 TRA +0 02000 0 01040                                                               
      EOF        RECCNT = EOFCT - 1                                                 183  LM00225
 01442 CLA +0 50000 0 00253    01443 SUB +0 40200 0 00325    01444 STO +0 60100 0 00316                                 
                 T'O BACK                                                           184  LM00226
 01445 TRA +0 02000 0 00126                                                                                             
      IOERR      PRDIAG.                                                            185  LM00229
 01446 TSX +0 07400 4 00022                                                                                             
      FINALE     W'R ON .AND. ONCNT.G.1, PRMESS.(BON(1)...ONCNT)                    186  LM00232
 01447 CLA +0 50000 0 00313    01450 SUB +0 40200 0 00325    01451 TZE +0 10000 0 01457    01452 TMI -0 12000 0 01457   
 01453 NZT -0 52000 0 00314    01454 TRA +0 02000 0 01457    01455 TSX +0 07400 4 00024    01456 TIX +2 00313 0 00242   
                 W'R OFF .AND. OFFCNT .G. 2                                         187  LM00233
 01457 CLA +0 50000 0 00310    01460 SUB +0 40200 0 00326    01461 TZE +0 10000 0 01504    01462 TMI -0 12000 0 01504   
 01463 NZT -0 52000 0 00311    01464 TRA +0 02000 0 01504                                                               
                    BOFF(50) = OFFCNT .V. LM                                        188  LM00234
 01465 CAL -0 50000 0 00310    01466 ORA -0 50100 0 00260    01467 SLW +0 60200 0 00033                                 
                    MCOUNT = -OFFCNT-1                                              189  LM00235
 01470 CLS +0 50200 0 00310    01471 SUB +0 40200 0 00325    01472 STO +0 60100 0 00276                                 
                    BFWRIT.(N3,N4,BOFF(50)...MCOUNT,IOERR)                          190  LM00236
 01473 TSX +0 07400 4 00004    01474 TXH +3 00000 0 00301    01475 TXH +3 00000 0 00302    01476 TIX +2 00276 0 00033   
 01477 TXH +3 00000 0 00134                                                                                             
                    BFCLOS.(N3,N4,IOERR)                                            191  LM00237
 01500 TSX +0 07400 4 00002    01501 TXH +3 00000 0 00301    01502 TXH +3 00000 0 00302    01503 TXH +3 00000 0 00134   
                 E'L                                                                192  LM00238
                 EXITM.                                                             193  LM00239
 01504 TSX +0 07400 4 00011                                                                                             
                 I'N (A,B,C,D)                                                      194  LM00241
 01505 TRA +0 02000 0 01676                                                                                             
                 STATEMENT LABEL C                                                  195  LM00242
                 BOOLEAN B,D                                                        196  LM00243
                 E'O NUMBER.                                                        197  LM00244
 01506 TRA +0 02000 0 01511    00031 TTR +0 02100 0 01507    01507 SXA +0 63400 2 01651    01510 TSX +0 07400 2 01651   
      NUM        W'R COMARG.(J,TEMP).E.FENCE, T'O C                                 198  LM00246
 01511 TSX +0 07400 4 00007    01512 TXH +3 00000 0 00255    01513 TXH +3 00000 0 00116    01514 SUB +0 40200 0 00254   
 01515 TNZ -0 10000 0 01517    01516 TRA +0 02000 0 00024                                                               
                 J = J+1                                                            199  LM00247
 01517 CLA +0 50000 0 00255    01520 ADD +0 40000 0 00325    01521 STO +0 60100 0 00255                                 
      LOOPA2     T'H LOOPA2, FOR K = ARGS2,-1,K.E.0 .OR. TEMP.E.ARGS2(K)            200  LM00248
 01522 CLA +0 50000 0 00152    01523 STO +0 60100 0 00256    01524 TRA +0 02000 0 01530    01525 CLS +0 50200 0 00325   
 01526 ADD +0 40000 0 00256    01527 STO +0 60100 0 00256    01530 LXA +0 53400 2 00256    01531 CLA +0 50000 0 00116   
 01532 SUB +0 40200 2 00152    01533 TZE +0 10000 0 01540    01534 CLA +0 50000 0 00256    01535 SUB +0 40200 0 00324   
 01536 TZE +0 10000 0 01540    01537 TRA +0 02000 0 01525                                                               
                 T'O ARGT(K)                                                        201  LM00249
 01540 LXA +0 53400 2 00256    01541 TRA +0 02000 2 00125                                                               
      ARGT(0)    W'R ZEL.(TEMP) .A. $$ .NE. 0, T'O BADFMT                           202  LM00251
 01542 TSX +0 07400 4 00030    01543 TXH +3 00000 0 00116    01544 STO +0 60100 0 01675    01545 CAL -0 50000 0 01675   
 01546 ANA -0 32000 0 00374    01547 SLW +0 60200 0 01675    01550 CLA +0 50000 0 01675    01551 SUB +0 40200 0 00324   
 01552 TZE +0 10000 0 01554    01553 TRA +0 02000 0 00127                                                               
                 A = BCDEC.(TEMP)                                                   203  LM00252
 01554 TSX +0 07400 4 00000    01555 TXH +3 00000 0 00116    01556 STO +0 60100 0 00024                                 
                 B = 1B                                                             204  LM00253
 01557 CLA +0 50000 0 00325    01560 STO +0 60100 0 00024                                                               
      ARGT(6)    F'N                                                                205  LM00254
 01561 TRA +0 02000 0 01671                                                                                             
      ARGT(1)    W'R COMARG.(J,TEMP) .E. FENCE, T'O BADFMT                          206  LM00256
 01562 TSX +0 07400 4 00007    01563 TXH +3 00000 0 00255    01564 TXH +3 00000 0 00116    01565 SUB +0 40200 0 00254   
 01566 TNZ -0 10000 0 01570    01567 TRA +0 02000 0 00127                                                               
                 J = J + 1                                                          207  LM00257
 01570 CLA +0 50000 0 00255    01571 ADD +0 40000 0 00325    01572 STO +0 60100 0 00255                                 
                 W'R ZEL.(TEMP).A.$YYYYYY$ .NE. 0, T'O BADFMT                       208  LM00258
 01573 TSX +0 07400 4 00030    01574 TXH +3 00000 0 00116    01575 STO +0 60100 0 01675    01576 CAL -0 50000 0 01675   
 01577 ANA -0 32000 0 00403    01600 SLW +0 60200 0 01675    01601 CLA +0 50000 0 01675    01602 SUB +0 40200 0 00324   
 01603 TZE +0 10000 0 01605    01604 TRA +0 02000 0 00127                                                               
                 A = BCOCT.(TEMP)                                                   209  LM00259
 01605 TSX +0 07400 4 00001    01606 TXH +3 00000 0 00116    01607 STO +0 60100 0 00024                                 
                 D = 1B                                                             210  LM00260
 01610 CLA +0 50000 0 00325    01611 STO +0 60100 0 00024                                                               
                 B = 1B                                                             211  LM00261
 01612 CLA +0 50000 0 00325    01613 STO +0 60100 0 00024                                                               
                 F'N                                                                212  LM00262
 01614 TRA +0 02000 0 01671                                                                                             
      ARGT(2)                                                                       213  LM00267
      ARGT(3)    ON = 0B                                                            214  LM00268
 01615 CLA +0 50000 0 00324    01616 STO +0 60100 0 00314                                                               
      ARGT(4)                                                                       215  LM00272
      ARGT(5)    OFF = 1B                                                           216  LM00273
 01617 CLA +0 50000 0 00325    01620 STO +0 60100 0 00311                                                               
                 W'R COMARG.(J,N3) .E. FENCE                                        217  LM00274
 01621 TSX +0 07400 4 00007    01622 TXH +3 00000 0 00255    01623 TXH +3 00000 0 00301    01624 SUB +0 40200 0 00254   
 01625 TNZ -0 10000 0 01631                                                                                             
                    N3 = N1                                                         218  LM00275
 01626 CLA +0 50000 0 00277    01627 STO +0 60100 0 00301                                                               
                    T'O C                                                           219  LM00276
 01630 TRA +0 02000 0 00024                                                                                             
                 E'L                                                                220  LM00277
                 J = J+2                                                            221  LM00279
 01631 CLA +0 50000 0 00255    01632 ADD +0 40000 0 00326    01633 STO +0 60100 0 00255                                 
                 W'R COMARG.(J-1,N4) .NE. FENCE, T'O NUM                            222  LM00280
 01634 CLA +0 50000 0 00255    01635 SUB +0 40200 0 00325    01636 STO +0 60100 0 01675    01637 TSX +0 07400 4 00007   
 01640 TXH +3 00000 0 01675    01641 TXH +3 00000 0 00302    01642 SUB +0 40200 0 00254    01643 TZE +0 10000 0 01645   
 01644 TRA +0 02000 0 00136                                                                                             
                 N4 = $   BIN$                                                      223  LM00281
 01645 CLA +0 50000 0 00373    01646 STO +0 60100 0 00302                                                               
                 T'O C                                                              224  LM00282
 01647 TRA +0 02000 0 00024                                                                                             
                 E'N                                                                225  LM00284
 01650 TSX +0 07400 4 00012    01651 TXH +3 00000 0 00000    01652 SXD -0 63400 1 01651    01653 SXA +0 63400 4 01671   
 01654 CLA +0 50000 4 00001    01655 STA +0 62100 0 01556    01656 STA +0 62100 0 01607    01657 CLA +0 50000 4 00002   
 01660 STA +0 62100 0 01560    01661 STA +0 62100 0 01613    01662 CLA +0 50000 4 00003    01663 STA +0 62100 0 01516   
 01664 STA +0 62100 0 01630    01665 STA +0 62100 0 01647    01666 CLA +0 50000 4 00004    01667 STA +0 62100 0 01611   
 01670 TRA +0 02000 2 00001    01671 AXT +0 77400 4 00000    01672 LXA +0 53400 2 01651    01673 LXD -0 53400 1 01651   
 01674 TRA +0 02000 4 00001                                                                                             
                 E'M                                                                226  LM00286
 01676 TSX +0 07400 4 00012                                                                                             




 PRBSS   BCD 09/18/68 2319.2   10583         00000    
1            PRBSS - PRINT BSS FILE SUMMARY.                                                     PAGE 1     
                  
                                             7/7/65 - NOEL I. MORRIS    
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
1            PRBSS - PRINT BSS FILE SUMMARY.                                                     PAGE 2     
                           INITIALIZE AND READ BSS FILE.                            
                  
                  
        TRANSFER VECTOR 
      00000  434164626360     LJUST 
      00001  222646472545     BFOPEN
      00002  246242255160     DSKER 
      00003  512422626260     RDBSS 
      00004  222623434662     BFCLOS
      00005  256646512460     EWORD 
      00006  252330215160     ECHAR 
      00007  664331452560     WLINE 
      00010  462321222360     OCABC 
      00011  227125436060     BZEL  
      00012  462324222360     OCDBC 
      00013  462351222360     OCRBC 
      00014  514164626360     RJUST 
                  
      00015  0760 00 0 00016  START  LMTM                  7 XRS  
      00016                          CALL    SETBRK(CHNXIT)    SET BREAK LEVEL
      00016  0074 00 4 00417         TSX     SETBRK,4                                                         .002
      00017  3 00000 0 00356         PAR     CHNXIT                                                           .004
                  
      00020 -0500 00 0 00470         CAL     =HSQZBSS      SET SECONDARY NAME TO 'SQZBSS' 
      00021  0602 00 0 00373         SLW     SNAM          INITIALLY    
                  
      00022                          CALL    GC            GET FIRST PARAMETER
      00022  0074 00 4 00335         TSX     GC,4                                                             .002
      00023  0602 00 0 77425         SLW     FILNAM        ..     
                  
      00024 -0340 00 0 00465         LAS     =H (SQZ)      CHECK FOR SQUEEZED FILE  
      00025  0020 00 0 00027         TRA     *+2           ..     
      00026  0020 00 0 00106         TRA     SQ            ..     
                  
      00027  0560 00 0 00464         LDQ     =H            CHANGE SQZBSS
      00030 -0620 00 0 00373         SLQ     SNAM          TO BSS 
                  
      00031  0322 00 0 00374  FERA   ERA     FENCE         CHECK FOR FENCE    
      00032  0100 00 0 00345         TZE     ILPAR         INCOMPLETE SET OF PARAMETERS   
                  
      00033                          CALL    GC            NEXT PARAMETER     
      00033  0074 00 4 00335         TSX     GC,4                                                             .002
      00034  0602 00 0 00376         SLW     ENTRY         ENTRY POINT TO LOOK FOR  
      00035  0322 00 0 00374         ERA     FENCE         CHECK FOR NONE     
      00036 -0100 00 0 00041         TNZ     *+3           IF NONE, PRINT ALL 
      00037 -0625 00 0 00366         STL     FOUND         ..     
      00040  0020 00 0 00044         TRA     GMEM          SKIP LJUST   
                  
      00041                          CALL    $LJUST(ENTRY) ENTRIES ARE LEFT JUSTIFIED     
      00041  0074 00 4 00000         TSX     $LJUST,4                                                         .002
      00042  3 00000 0 00376         PAR     ENTRY                                                            .004
      00043  0601 00 0 00376         STO     ENTRY         ..     
                  
                                             GET MEMORY BOUND AND ASSIGN BUFFERS.   
1            PRBSS - PRINT BSS FILE SUMMARY.                                                     PAGE 3     
                           INITIALIZE AND READ BSS FILE.                            
                  
      00044                   GMEM   CALL    GETMEM        GET MEMORY BOUND   
      00044  0074 00 4 00420         TSX     GETMEM,4                                                         .002
                  
      00045  0361 00 0 00361         ACL     LENGTH        ENTRY/T.V. BUFFER  
      00046  0621 00 0 00226         STA     TBL1          ..     
      00047  0621 00 0 00262         STA     TBL4+1        ..     
      00050  0361 00 0 00451         ACL     =1            ..     
      00051  0621 00 0 00257         STA     PENT          ..     
      00052  0621 00 0 00153         STA     PTV           ..     
      00053  0621 00 0 00232         STA     TBL2          ..     
      00054  0621 00 0 00330         STA     TBL3          ..     
                  
      00055  0361 00 0 00451         ACL     =1            DISK BUFFERS 
      00056  0621 00 0 00067         STA     OPN+4         ..     
      00057  0361 00 0 00452         ACL     =432          ..     
      00060  0621 00 0 00070         STA     OPN+5         ..     
      00061  0361 00 0 00452         ACL     =432          ..     
                  
      00062                          CALL    SETMEM        RESET MEMORY BOUND 
      00062  0074 00 4 00421         TSX     SETMEM,4                                                         .002
                  
      00063                   OPN    CALL    $BFOPEN(=HR,FILNAM,SNAM,**,**,=-0,$DSKER)    
      00063  0074 00 4 00001         TSX     $BFOPEN,4                                                        .002
      00064  3 00000 0 00462         PAR     =HR                                                              .004
      00065  3 00000 0 77425         PAR     FILNAM                                                           .004
      00066  3 00000 0 00373         PAR     SNAM                                                             .004
      00067  3 00000 0 00000         PAR     **                                                               .004
      00070  3 00000 0 00000         PAR     **                                                               .004
      00071  3 00000 0 00460         PAR     =-0                                                              .004
      00072  3 00000 0 00002         PAR     $DSKER                                                           .004
                  
      00073  0520 00 0 00365  NEXCD  ZET     ENDSW         CHECK FOR END OF RUN     
      00074  0020 00 0 00116         TRA     END           ..     
      00075                          CALL    $RDBSS(EOF)   READ A CARD  
      00075  0074 00 4 00003         TSX     $RDBSS,4                                                         .002
      00076  3 00000 0 00112         PAR     EOF                                                              .004
                  
      00077 -0046 00 0 00000         PIA                   FIRST WORD IN AC   
      00100 -0320 00 0 00453         ANA     =O37077777    MASK WDCNT AND LOAD ADDRESS    
      00101  0734 00 2 00000         PAX     ,2            LOAD ADDRESS IN XR2
      00102 -0734 00 3 00000         PDX     ,3            WDCNT IN XR3 
                  
      00103 -0056 00  400000         LNT     400000        CHECK FOR PROGRAM CARD   
      00104  0020 00 0 00243         TRA     I.C.          INSTRUCTION CARD   
      00105  0020 00 0 00136         TRA     P.C.          PROGRAM CARD 
                  
                  
                  
      00106 -0625 00 0 77424  SQ     STL     FILNAM-1      SET SQUEEZ PARAMETER     
                  
      00107                          CALL    GC            GET NEXT PARAMETER 
      00107  0074 00 4 00335         TSX     GC,4                                                             .002
      00110  0602 00 0 77425         SLW     FILNAM        ..     
      00111  0020 00 0 00031         TRA     FERA          GO CHECK PARAMETER 
1            PRBSS - PRINT BSS FILE SUMMARY.                                                     PAGE 4     
                           END OF FILE SECTION.                                     
                  
      00112 -0625 00 0 00365  EOF    STL     ENDSW         SET EOF SWITCH     
      00113  0520 00 0 00363         ZET     PCSW          CHECK FOR PROCESSING PROGRAM CARDS   
      00114  0020 00 0 00251         TRA     LASTNT        THIS WILL CATCH PROG. WITH NO INST. CARDS  
      00115  0020 00 0 00145         TRA     LASTV         AND PROCESS THE LAST OF THE STUFF    
                  
                  
                  
                  
                  
      00116                   END    CALL    $BFCLOS(FILNAM,SNAM,$DSKER)
      00116  0074 00 4 00004         TSX     $BFCLOS,4                                                        .002
      00117  3 00000 0 77425         PAR     FILNAM                                                           .004
      00120  3 00000 0 00373         PAR     SNAM                                                             .004
      00121  3 00000 0 00002         PAR     $DSKER                                                           .004
                  
      00122                          CALL    WRFLX((*,,0)) PRINT A CARRIAGE RETURN  
      00122  0074 00 4 00422         TSX     WRFLX,4                                                          .002
      00123  3 00000 0 00123         PAR     *,,0                                                             .004
                  
      00124  0520 00 0 00366         ZET     FOUND         CHECK FOR ENTRY EVER FOUND     
      00125  0020 00 0 00357         TRA     CHN           WAS FOUND, EXIT TO CHNCOM
                  
      00126 -0500 00 0 77425         CAL     FILNAM        SET NAME IN ERROR COMMENT
      00127  0602 00 0 00403         SLW     NAME          ..     
                  
      00130                          CALL    WRFLX((NONE,,7))  COMMENT THAT ENTRY NOT FOUND     
      00130  0074 00 4 00422         TSX     WRFLX,4                                                          .002
      00131  3 00007 0 00375         PAR     NONE,,7                                                          .004
                  
      00132  0520 00 0 00370         ZET     EOVF          CHECK FOR ENTRY TABLE OVERFLOW 
      00133                          COMENT  CAUSE,6,(MAY BE DUE TO OVERFLOW IN ENTRY TABLE.)   
      00133  0074 00 4 00422         TSX     WRFLX,4                                                          .003
      00134  3 00006 0 00423         PAR     CAUSE,,6                                                         .005
                                                           COMMENT ON POSSIBLE CAUSE.     
      00135  0020 00 0 00357         TRA     CHN           AND EXIT TO CHNCOM 
1            PRBSS - PRINT BSS FILE SUMMARY.                                                     PAGE 5     
                           PROCESS PROGRAM CARDS.                                   
                  
      00136 -0625 00 0 00363  P.C.   STL     PCSW          SET PROGRAM CARD SWITCH  
      00137 -0636 00 3 00241         SCD     PWC,3         COMPLEMENT OF WORD COUNT 
      00140 -0774 00 4 00000         AXC     0,4           INITIALIZE CARD WORD INDEX     
                  
      00141 -0520 00 0 00362         NZT     ICSW          CHECK FOR FIRST PROGRAM CARD   
      00142  0020 00 0 00222         TRA     ECHK-2        NOT FIRST, SKIP THIS SECT.     
      00143  0600 00 0 00362         STZ     ICSW          RESET INSTRUCTION CARD SWITCH  
                  
      00144  0520 00 0 00364         ZET     SUBSQ         CHECK FOR FIRST TIME THROUGH   
      00145 -0520 00 0 00366  LASTV  NZT     FOUND         HAS ENTRY BEEN FOUND     
      00146  0020 00 0 00164         TRA     PSKP          NO, SKIP PRINT     
                  
      00147  0774 00 2 00001         AXT     1,2           XR2 IS T.V. ENTRY POINTER
                  
      00150  0774 00 3 00014  PTVCK1 AXT     12,3          12 ENTRIES PER LINE
      00151  3 00000 2 00164         TXH     PSKP,2,**     DON'T PRINT NULL LINE    
                  
      00152  3 00000 2 00163  PTVCHK TXH     TVFIN,2,**    CHECK FOR ALL T.V. ENTRIES     
      00153  0560 00 2 00000  PTV    LDQ     **,2          GET ENTRY    
      00154                          CALL    $EWORD        GIVE TO PRINT ASSEMBLER  
      00154  0074 00 4 00005         TSX     $EWORD,4                                                         .002
                  
      00155  0560 00 0 00464         LDQ     =H            FOLLOW BY 1 BALNK  
      00156                          CALL    $ECHAR        ..     
      00156  0074 00 4 00006         TSX     $ECHAR,4                                                         .002
                  
      00157  1 00001 2 00160         TXI     *+1,2,1       NEXT T.V. ENTRY    
      00160  2 00001 3 00152         TIX     PTVCHK,3,1    NEXT   
                  
      00161                          CALL    $WLINE        PRINT OUT ASSEMBLED LINE 
      00161  0074 00 4 00007         TSX     $WLINE,4                                                         .002
      00162  0020 00 0 00150         TRA     PTVCK1        AND START NEXT ONE 
                  
      00163                   TVFIN  CALL    $WLINE        PRINT LAST LINE    
      00163  0074 00 4 00007         TSX     $WLINE,4                                                         .002
                  
      00164  0520 00 0 00365  PSKP   ZET     ENDSW         CHECK FOR END OF FILE ENCOUNTERED    
      00165  0020 00 0 00116         TRA     END           GOOD-BYE     
                  
      00166 -0625 00 0 00364         STL     SUBSQ         SET SUBSEQUENT INDIC.    
                  
      00167 -0534 00 4 77430         LXD     CARD+2,4      GET T.V. LENGTH IN XR4   
      00170 -3 00617 4 00173         TXL     *+3,4,LTH-1   CHECK FOR TOO BIG FOR T.V. TABLE     
      00171 -0625 00 0 00371         STL     TVOV          SET T.V. OVERFLOW INDIC. 
      00172  0774 00 4 00617         AXT     LTH-1,4       FORCE LENGTH TO 199
      00173 -0634 00 4 00152         SXD     PTVCHK,4      STORE FOR T.V. CHECKING  
      00174 -0634 00 4 00151         SXD     PTVCK1+1,4    ..     
      00175 -0634 00 4 00326         SXD     ITVCHK,4      ..     
                  
      00176                          CALL    $OCABC(CARD+2)    CONVERT LENGTH 
      00176  0074 00 4 00010         TSX     $OCABC,4                                                         .002
      00177  3 00000 0 77430         PAR     CARD+2                                                           .004
      00200  0601 00 0 00407         STO     COMENT+2      STORE INTO COMMENT 
      00201                          CALL    $BZEL(COMENT+2)   BLANK LEADING ZEROS  
      00201  0074 00 4 00011         TSX     $BZEL,4                                                          .002
1            PRBSS - PRINT BSS FILE SUMMARY.                                                     PAGE 6     
                           PROCESS PROGRAM CARDS.                                   
                  
      00202  3 00000 0 00407         PAR     COMENT+2                                                         .004
      00203  0601 00 0 00407         STO     COMENT+2      ..     
                  
      00204                          CALL    $OCDBC(CARD+2)    ALSO T.V. SIZE 
      00204  0074 00 4 00012         TSX     $OCDBC,4                                                         .002
      00205  3 00000 0 77430         PAR     CARD+2                                                           .004
      00206  0601 00 0 00415         STO     COMENT+8      ..     
      00207                          CALL    $BZEL(COMENT+8)   .. 
      00207  0074 00 4 00011         TSX     $BZEL,4                                                          .002
      00210  3 00000 0 00415         PAR     COMENT+8                                                         .004
      00211  0601 00 0 00415         STO     COMENT+8      ..     
                  
      00212                          CALL    $OCABC(CARD+3)    AND LOWEST COMMON    
      00212  0074 00 4 00010         TSX     $OCABC,4                                                         .002
      00213  3 00000 0 77431         PAR     CARD+3                                                           .004
      00214  0601 00 0 00412         STO     COMENT+5      ..     
      00215                          CALL    $BZEL(COMENT+5)   .. 
      00215  0074 00 4 00011         TSX     $BZEL,4                                                          .002
      00216  3 00000 0 00412         PAR     COMENT+5                                                         .004
      00217  0601 00 0 00412         STO     COMENT+5      ..     
                  
      00220  0774 00 1 00000         AXT     0,1           ENTRY TABLE POINTER
      00221 -0774 00 4 00002         AXC     2,4           SKIP FIRST 2 WORDS ON FIRST P.C.     
                  
      00222  0520 00 0 00367         ZET     EOV           CHECK FOR PREVIOUS OVERFLOW    
      00223  0020 00 0 00073         TRA     NEXCD         ..     
                  
      00224  3 00617 1 00350  ECHK   TXH     EFULL,1,LTH-1 CHECK FOR FULL TABLE     
                  
      00225 -0500 00 4 77431         CAL     CARD+3,4      GET NUMERIC ENTRY  
      00226  0602 00 1 00000  TBL1   SLW     **,1          ..     
                  
      00227 -0500 00 4 77430         CAL     CARD+2,4      AND BCD NAME 
      00230 -0100 00 0 00232         TNZ     *+2           IF ZERO,     
      00231 -0500 00 0 00472         CAL     =H(MAIN)      SET TO '(MAIN)'    
      00232  0602 00 1 00000  TBL2   SLW     **,1          ..     
                  
      00233  0322 00 0 00376         ERA     ENTRY         IS THIS ENTRY
      00234 -0100 00 0 00236         TNZ     *+2           ..     
      00235 -0625 00 0 00366         STL     FOUND         SET INDIC. IF ENTRY FOUND
                  
      00236 -0634 00 1 00307         SXD     ECOUNT,1      SAVE ENTRY COUNTER 
      00237  1 00002 1 00240         TXI     *+1,1,2       STEP ENTRY TABLE POINTER 
      00240  1 77776 4 00241         TXI     *+1,4,-2      AND CARD POINTER   
      00241  3 00000 4 00224  PWC    TXH     ECHK,4,**     AND GET NEXT PAIR  
      00242  0020 00 0 00073         TRA     NEXCD         GO READ NEXT CARD  
1            PRBSS - PRINT BSS FILE SUMMARY.                                                     PAGE 7     
                           PROCESS INSTRUCTION CARDS.                               
                  
      00243 -0625 00 0 00362  I.C.   STL     ICSW          SET INSTRUCTION CARD SWITCH    
      00244 -0636 00 3 00333         SCD     IWC,3         COMPLEMENT OF WORD COUNT 
      00245  1 00001 2 00246         TXI     *+1,2,1  
                  
      00246 -0520 00 0 00363         NZT     PCSW          CHECK FOR FIRST INSTRUCTION CARD     
      00247  0020 00 0 00323         TRA     ISKP          SKIP PRINT AFTER FIRST   
      00250  0600 00 0 00363         STZ     PCSW          RESET PROGRAM CARD SWITCH
                  
      00251 -0520 00 0 00366  LASTNT NZT     FOUND         HAS ENTRY BEEN FOUND     
      00252  0020 00 0 00073         TRA     NEXCD         NO,SKIP PRINT
                  
      00253                          CALL    WRFLX((*,,0)) SKIP A LINE  
      00253  0074 00 4 00422         TSX     WRFLX,4                                                          .002
      00254  3 00000 0 00254         PAR     *,,0                                                             .004
                  
      00255  0774 00 5 00000         AXT     0,5           XR5 IS ENTRY TABLE POINTER     
      00256  0774 00 3 00006         AXT     6,3           6 ENTRIES PER LINE 
                  
      00257  0560 00 5 00000  PENT   LDQ     **,5          GET NAME     
      00260                          CALL    $EWORD        SEND TO PRINT ROUTINE    
      00260  0074 00 4 00005         TSX     $EWORD,4                                                         .002
                  
      00261                   TBL4   CALL    $OCRBC((**,5))    CONVERT ENTRY TO OCTAL BCD 
      00261  0074 00 4 00013         TSX     $OCRBC,4                                                         .002
      00262  0761 00 5 00000         EFA     **,5                                                             .004
      00263  0560 00 0 00464         LDQ     =H            BLANKS IN MQ 
      00264 -0765 00 0 00006         LGR     6             DO AN LJUST  
      00265 -0100 00 0 00264         TNZ     *-1           ..     
                  
      00266  0500 60 0 00262         CLA*    TBL4+1        GET ENTRY POINT    
      00267  0120 00 0 00272         TPL     *+3           CHECK FOR NEG. ENTRY POINT     
                  
      00270 -0500 00 0 00463         CAL     =H     -      GET MINUS SIGN     
      00271 -0765 00 0 00006         LGR     6             AND SIFT IN  
      00272 -0600 00 0 00372         STQ     TEMP          ..     
                  
      00273                          CALL    $RJUST(TEMP)  NOW RIGHT ADJUST   
      00273  0074 00 4 00014         TSX     $RJUST,4                                                         .002
      00274  3 00000 0 00372         PAR     TEMP                                                             .004
      00275  0601 00 0 00372         STO     TEMP          ..     
                  
      00276                          CALL    $BZEL(TEMP)   BLANK LEADING ZEROS
      00276  0074 00 4 00011         TSX     $BZEL,4                                                          .002
      00277  3 00000 0 00372         PAR     TEMP                                                             .004
      00300  0131 00 0 00000         XCA                   ..     
      00301                          CALL    $EWORD        AND ENTER THAT ALSO
      00301  0074 00 4 00005         TSX     $EWORD,4                                                         .002
                  
      00302  0560 00 0 00457         LDQ     =H.           AND DECIMAL POINT AND BLANK    
      00303                          CALL    $ECHAR        ..     
      00303  0074 00 4 00006         TSX     $ECHAR,4                                                         .002
      00304 -0773 00 0 00006         RQL     6             ..     
      00305                          CALL    $ECHAR        ..     
      00305  0074 00 4 00006         TSX     $ECHAR,4                                                         .002
1            PRBSS - PRINT BSS FILE SUMMARY.                                                     PAGE 8     
                           PROCESS INSTRUCTION CARDS.                               
                  
      00306  1 00002 5 00307         TXI     *+1,5,2       NEXT ENTRY   
      00307  3 00000 5 00313  ECOUNT TXH     EFIN,5,**     CHECK FOR ALL ENTRIES PRINTED  
      00310  2 00001 3 00257         TIX     PENT,3,1      ..     
                  
      00311                          CALL    $WLINE        PRINT OUT COMPLETED LINE 
      00311  0074 00 4 00007         TSX     $WLINE,4                                                         .002
      00312  0020 00 0 00256         TRA     PENT-1        NEXT LINE    
                  
      00313                   EFIN   CALL    $WLINE        PRINT OUT LAST LINE
      00313  0074 00 4 00007         TSX     $WLINE,4                                                         .002
                  
      00314                          CALL    WRFLX((COMENT,,10))   AND COMMENT
      00314  0074 00 4 00422         TSX     WRFLX,4                                                          .002
      00315  3 00012 0 00405         PAR     COMENT,,10                                                       .004
                  
      00316  0520 00 0 00371         ZET     TVOV          CHECK FOR T.V. TABLE OVERFLOW  
      00317                          COMENT  TVF,4,(T.V. TABLE IS FULL.)
      00317  0074 00 4 00422         TSX     WRFLX,4                                                          .003
      00320  3 00004 0 00431         PAR     TVF,,4                                                           .005
                                                           COMMENT ON T.V. TABLE OVERFLOW 
      00321  0600 00 0 00371         STZ     TVOV          RESET T.V. OVERFLOW INDIC.     
      00322  0600 00 0 00367         STZ     EOV           AND ENTRY TABLE OVERFLOW INDIC.
                  
      00323 -0520 00 0 00366  ISKP   NZT     FOUND         SKIP NEXT SECTION IF NOT FOUND 
      00324  0020 00 0 00073         TRA     NEXCD         ..     
                  
      00325  0774 00 4 00000         AXT     0,4           CARD POINTER 
      00326  3 00000 2 00073  ITVCHK TXH     NEXCD,2,**    CHECK FOR LOAD ADDRESS .G. T.V. LTH  
                  
      00327 -0500 00 4 77432         CAL     CARD+4,4      GET T.V. ENTRY     
      00330  0602 00 2 00000  TBL3   SLW     **,2          STORE IN TABLE     
      00331  1 00001 2 00332         TXI     *+1,2,1       STEP ADDRESS 
      00332  1 77777 4 00333         TXI     *+1,4,-1      AND CARD POINTER   
      00333  3 00000 4 00326  IWC    TXH     ITVCHK,4,**   CHECK FOR WORD COUNT EXCEEDED  
      00334  0020 00 0 00073         TRA     NEXCD         AND READ NEXT CARD IF SO 
1            PRBSS - PRINT BSS FILE SUMMARY.                                                     PAGE 9     
                           MISCELLANEOUS ROUTINES.                                  
                  
      00335  0634 00 4 00343  GC     SXA     GCX4,4        GETCOM CALLING ROUTINE   
      00336  0534 00 4 00342         LXA     .GX,4         GET PARAMETER COUNT
      00337  1 00001 4 00340         TXI     *+1,4,1       INCREMENT    
      00340  0634 00 4 00342         SXA     .GX,4         AND RESTORE  
                  
      00341                          CALL    GETCOM        NOW GO TO GETCOM   
      00341  0074 00 4 00435         TSX     GETCOM,4                                                         .002
      00342  0 00000 0 00000  .GX    PZE     0             PARAMETER NUMBER   
                  
      00343  0774 00 4 00000  GCX4   AXT     **,4          RESTORE XR4  
      00344  0020 00 4 00001         TRA     1,4           RETURN WITH PARAMETER IN LAC   
                  
      00345                   ILPAR  COMENT  ICSET,5,(INCOMPLETE SET OF PARAMETERS.)
      00345  0074 00 4 00422         TSX     WRFLX,4                                                          .003
      00346  3 00005 0 00436         PAR     ICSET,,5                                                         .005
                  
      00347  0020 00 0 00356         TRA     CHNXIT        EXIT TO CHNCOM     
                  
      00350  0520 00 0 00366  EFULL  ZET     FOUND         CHECK FOR ENTRY FOUND    
      00351                          COMENT  ETF,4,(ENTRY TABLE OVERFLOW.)    
      00351  0074 00 4 00422         TSX     WRFLX,4                                                          .003
      00352  3 00004 0 00443         PAR     ETF,,4                                                           .005
                  
      00353 -0625 00 0 00367         STL     EOV           SET OVERFLOW INDICS.     
      00354 -0625 00 0 00370         STL     EOVF          ..     
      00355  0020 00 0 00073         TRA     NEXCD         AND GO TO NEXT CARD
                  
      00356                   CHNXIT CALL    RESETF        RESET ACTIVE FILES (IF ANY)    
      00356  0074 00 4 00447         TSX     RESETF,4                                                         .002
                  
      00357                   CHN    CALL    CHNCOM(0)     AND EXIT TO CHNCOM 
      00357  0074 00 4 00450         TSX     CHNCOM,4                                                         .002
      00360  3 00000 0 00000         PAR     0                                                                .004
                  
1            PRBSS - PRINT BSS FILE SUMMARY.                                                     PAGE 10    
                           STORAGE AND CONSTANTS.                                   
                  
                       00620  LTH    EQU     400
      00361  0 00000 0 00617  LENGTH PZE     LTH-1    
                  
      00362  0 00000 0 00362  ICSW   PZE     *             NON-ZERO FOR INSTRUCTION 
      00363  0 00000 0 00000  PCSW   PZE                   NON-ZERO FRO PROGRAM CARD
      00364  0 00000 0 00000  SUBSQ  PZE                   ZERO FIRST TIME THROUGH  
      00365  0 00000 0 00000  ENDSW  PZE                   GOES NON-ZERO AFTER EOF ENCOUNTERED  
      00366  0 00000 0 00000  FOUND  PZE                   NON-ZERO WHEN ENTRY FOUND
      00367  0 00000 0 00000  EOV    PZE                   NON-ZERO IF ENTRY TABLE FULL   
      00370  0 00000 0 00000  EOVF   PZE                   NON-ZERO IF ENTRY TABLE OVERFLOWED   
      00371  0 00000 0 00000  TVOV   PZE                   NON-ZERO IF T.V. TABLE FULL    
      00372  0 00000 0 00000  TEMP   PZE                   TEMPORARY STORAGE LOC'N  
      00373  0 00000 0 00000  SNAM   PZE                   SECOND NAME FOR FILE     
                  
      00374 -377777777777     FENCE  OCT     777777777777   
      00375  254563517060     NONE   BCI     1,ENTRY  
      00376  0 00000 0 00000  ENTRY  PZE  
      00377  604546636026            BCI     3, NOT FOUND IN LIBE 
      00400  466445246031     
      00401  456043312225     
      00402  605757575757            VFD     O36/605757575757     
      00403  0 00000 0 00000  NAME   PZE  
      00404  606060226262            BCI     1,   BSS 
                  
      00405  432545276330     COMENT VFD     H36/LENGTH,O6/60,H6/=,O24/57575757,36/0,O12/7360,  
      00406  601357575757     
      00407  000000000000     
      00410  736023464444            ETC     H36/COMMON,O6/60,H6/=,O12/5757,36/0,O12/7360,H24/T.V.,   
      00411  464560135757     
      00412  000000000000     
      00413  736063336533     
      00414  601357575757            ETC     O6/60,H6/=,O24/57575757,36/0,H6/.,O30/5757575757   
      00415  000000000000     
      00416  335757575757     
                  
                       77426         COMMON  27 
                       77426  CARD   COMMON  1  
                       77425  FILNAM COMMON  2  
                  
      00417                          RMT     *             REMOTE SEQUENCES.  
      00417  0101 00 0 00466  SETBRK TIA     =HSETBRK                                                         .002
      00420  0101 00 0 00456  GETMEM TIA     =HGETMEM                                                         .002
      00421  0101 00 0 00467  SETMEM TIA     =HSETMEM                                                         .002
      00422  0101 00 0 00471  WRFLX  TIA     =HWRFLX                                                          .002
      00423  442170602225     CAUSE  BCI     6,MAY BE DUE TO OVERFLOW IN ENTRY TABLE.                         .002
      00424  602464256063     
      00425  466046652551     
      00426  264346666031     
      00427  456025456351     
      00430  706063212243     
      00431  633365336063     TVF    BCI     4,T.V. TABLE IS FULL.                                            .002
      00432  212243256031     
      00433  626026644343     
      00434  336060606060     
      00435  0101 00 0 00455  GETCOM TIA     =HGETCOM                                                         .002
1            PRBSS - PRINT BSS FILE SUMMARY.                                                     PAGE 11    
                           STORAGE AND CONSTANTS.                                   
                  
      00436  314523464447     ICSET  BCI     5,INCOMPLETE SET OF PARAMETERS.                                  .002
      00437  432563256062     
      00440  256360462660     
      00441  472151214425     
      00442  632551623360     
      00443  254563517060     ETF    BCI     4,ENTRY TABLE OVERFLOW.                                          .002
      00444  632122432560     
      00445  466525512643     
      00446  466633606060     
      00447  0101 00 0 00461  RESETF TIA     =HRESETF                                                         .002
      00450  0101 00 0 00454  CHNCOM TIA     =HCHNCOM                                                         .002
                  
                                     END  
                  
        LITERALS  
      00451  000000000001     
      00452  000000000660     
      00453  000037077777     
      00454  233045234644     
      00455  272563234644     
      00456  272563442544     
      00457  336060606060     
      00460  400000000000     
      00461  512562256326     
      00462  516060606060     
      00463  606060606040     
      00464  606060606060     
      00465  607462507134     
      00466  622563225142     
      00467  622563442544     
      00470  625071226262     
      00471  665126436760     
      00472  744421314534     
1            PRBSS - PRINT BSS FILE SUMMARY.                                                     PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77423 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
        473 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        335     GC    22,   33,  107
        106     SQ    26
        357    CHN   125,  135
        116    END    74,  165
        112    EOF    76
        367    EOV   222,  322,  353
        443    ETF   352
        333    IWC   244
        342    .GX   336,  340
        620    LTH   170,  172,  224,  361
         63    OPN    56,   60
        153    PTV    52
        241    PWC   137
        431    TVF   320
         11   BZEL   201,  207,  215,  276
      77426   CARD   167,  177,  205,  213,  225,  227,  327,  417
        224   ECHK   142,  241
        313   EFIN   307
        370   EOVF   132,  354
         31   FERA   111
        343   GCX4   335
         44   GMEM    40
        362   ICSW   141,  143,  243
        243   I.C.   104
        323   ISKP   247
        403   NAME   127
        375   NONE   131
        363   PCSW   113,  136,  246,  250
        257   PENT    51,  310,  312
        136   P.C.   105
        164   PSKP   146,  151
        373   SNAM    21,   30,   66,  120
        226   TBL1    46
        232   TBL2    53
        330   TBL3    54
        261   TBL4    47,  266
        372   TEMP   272,  274,  275,  277
        371   TVOV   171,  316,  321
        423  CAUSE   134
          2  DSKER    72,  121
          6  ECHAR   156,  303,  305
        350  EFULL   224
        365  ENDSW    73,  112,  164
        376  ENTRY    34,   42,   43,  233
          5  EWORD   154,  260,  301
        374  FENCE    31,   35
        366  FOUND    37,  124,  145,  235,  251,  323,  350
        436  ICSET   346
        345  ILPAR    32
        145  LASTV   115
1            PRBSS - PRINT BSS FILE SUMMARY.                                                     PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          0  LJUST    41
         73  NEXCD   223,  242,  252,  324,  326,  334,  355
         10  OCABC   176,  212
         12  OCDBC   204
         13  OCRBC   261
          3  RDBSS    75
         14  RJUST   273
         15  START      
        364  SUBSQ   144,  166
        163  TVFIN   152
          7  WLINE   161,  163,  311,  313
        422  WRFLX   122,  130,  133,  253,  314,  317,  345,  351
          4 BFCLOS   116
          1 BFOPEN    63
        450 CHNCOM   357
        356 CHNXIT    17,  347
        405 COMENT   200,  202,  203,  206,  210,  211,  214,  216,  217,  315
        307 ECOUNT   236
      77425 FILNAM    23,   65,  106,  110,  117,  126,  417
        435 GETCOM   341
        420 GETMEM    44
        326 ITVCHK   175,  333
        251 LASTNT   114
        361 LENGTH    45
        152 PTVCHK   160,  173
        150 PTVCK1   162,  174
        447 RESETF   356
        417 SETBRK    16
        421 SETMEM    62
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            RDBSS - BSS FILE READING ROUTINE.                                                   PAGE 1     
                  
                                             NOEL I. MORRIS - 6/21/65   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00003         ENTRY   RDBSS    
                  
                  
        TRANSFER VECTOR 
      00000  222651252124     BFREAD
      00001  246242255160     DSKER 
      00002  462321222360     OCABC 
                  
      00003  0634 00 4 00073  RDBSS  SXA     XR4,4         SAVE XRS     
                  
      00004  0520 00 0 77424  WZERO  ZET     FILN-1        CHECK FOR SQZBSS FILE    
      00005  0020 00 0 00017         TRA     SQZ           ..     
                  
      00006                          CALL    $BFREAD(FILN,BSS(BUFF,,28)EOF,EOFCT,$DSKER)  
      00006  0074 00 4 00000         TSX     $BFREAD,4                                                        .002
      00007  3 00000 0 77425         PAR     FILN                                                             .004
      00010  3 00000 0 00114         PAR     BSS                                                              .004
      00011  3 00034 0 77426         PAR     BUFF,,28                                                         .004
      00012  3 00000 0 00111         PAR     EOF                                                              .004
      00013  3 00000 0 00113         PAR     EOFCT                                                            .004
      00014  3 00000 0 00001         PAR     $DSKER                                                           .004
      00015  0441 00 0 77426         LDI     BUFF          GET FIRST WORD IN SI     
      00016  0020 00 0 00050         TRA     CHECK         GO CHECK CHECKSUM  
                  
      00017  0774 00 4 00034  SQZ    AXT     28,4          ZERO OUT THE READ BUFFER 
      00020  0600 00 4 77462         STZ     BUFF+28,4     ..     
      00021  2 00001 4 00020         TIX     *-1,4,1       ..     
                  
      00022                          CALL    $BFREAD(FILN,=HSQZBSS(BUFF,,1)EOF,EOFCT,$DSKER)    
      00022  0074 00 4 00000         TSX     $BFREAD,4                                                        .002
      00023  3 00000 0 77425         PAR     FILN                                                             .004
      00024  3 00000 0 00134         PAR     =HSQZBSS                                                         .004
      00025  3 00001 0 77426         PAR     BUFF,,1                                                          .004
      00026  3 00000 0 00111         PAR     EOF                                                              .004
      00027  3 00000 0 00113         PAR     EOFCT                                                            .004
      00030  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00031  0441 00 0 77426         LDI     BUFF          GET FIRST WORD IN SI     
      00032 -0046 00 0 00000         PIA                   IN AC  
      00033 -0320 00 0 00130         ANA     =O77000000    MASK WORDCOUNT     
      00034 -0734 00 4 00000         PDX     ,4            WORDCOUNT IN XR4   
      00035 -0056 00  200000         LNT     200000        CHECK FOR REL. BIN CARD  
      00036  1 00001 4 00040         TXI     *+2,4,1       MUST BE A PROGRAM CARD   
      00037  1 00003 4 00040         TXI     *+1,4,3       RELOCATABLE INSTRUCTION CARD   
      00040 -0634 00 4 00044         SXD     VRR+3,4       STORE FOR READING REST OF CARD 
                  
      00041                   VRR    CALL    $BFREAD(FILN,=HSQZBSS(BUFF+1,,**)EOF,EOFCT,$DSKER) 
      00041  0074 00 4 00000         TSX     $BFREAD,4                                                        .002
      00042  3 00000 0 77425         PAR     FILN                                                             .004
      00043  3 00000 0 00134         PAR     =HSQZBSS                                                         .004
1            RDBSS - BSS FILE READING ROUTINE.                                                   PAGE 2     
                  
      00044  3 00000 0 77427         PAR     BUFF+1,,**                                                       .004
      00045  3 00000 0 00111         PAR     EOF                                                              .004
      00046  3 00000 0 00113         PAR     EOFCT                                                            .004
      00047  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00050 -0046 00 0 00000  CHECK  PIA                   FIRST WORD IN AC   
      00051 -0320 00 0 00130         ANA     =O77000000    MASK THE WORD COUNT
      00052 -0734 00 4 00000         PDX     ,4            WORD COUNT IN XR4  
      00053 -3 00000 4 00004         TXL     WZERO,4,0     TRY AGAIN IF WORD COUNT ZERO   
                  
      00054 -0056 00  400000         LNT     400000        CHECK FOR PROGRAM CARD   
      00055  0020 00 0 00062         TRA     *+5           ..     
      00056 -0500 00 0 77432         CAL     BUFF+4        GET ENTRY NAME     
      00057 -0100 00 0 00061         TNZ     *+2           CHECK FOR MAIN PROGRAM   
      00060 -0500 00 0 00136         CAL     =H(MAIN)      SET ENTRY TO '(MAIN)'    
      00061  0602 00 0 00121         SLW     PGN           ..     
                  
      00062 -0056 00  100000         LNT     100000        CHECK FOR IGNORE CHECKSUM PUNCH
      00063 -0520 00 0 77427         NZT     BUFF+1        ALSO BLANK CHECKSUM
      00064  0020 00 0 00073         TRA     IGCHK    
                  
      00065  0774 00 4 00026         AXT     22,4          ADD UP CHECKSUM    
      00066 -0500 00 0 77426         CAL     BUFF          ..     
      00067  0361 00 4 77456         ACL     BUFF+24,4     ..     
      00070  2 00001 4 00067         TIX     *-1,4,1       ..     
      00071  0322 00 0 77427         ERA     BUFF+1        XOR IN THE CHECKSUM TO COMPARE 
      00072 -0100 00 0 00075         TNZ     CHKERR        NON-ZERO ON ERROR  
                  
                       00073  IGCHK  SYN     *  
                  
      00073  0774 00 4 00000  XR4    AXT     **,4          RESTORE XRS  
      00074  0020 00 4 00002         TRA     2,4           RETURN 
                  
      00075 -0054 00  400000  CHKERR LFT     400000        CHECK FOR PROG. CARD     
      00076  0020 00 0 00106         TRA     P.C.          ..     
                  
      00077                          CALL    $OCABC(BUFF)  CONVERT LOAD ADDRESS TO OCTAL BCD    
      00077  0074 00 4 00002         TSX     $OCABC,4                                                         .002
      00100  3 00000 0 77426         PAR     BUFF                                                             .004
      00101  0560 00 0 00133         LDQ     =H            BLANK OUT SECOND WORD    
                  
      00102 -0603 00 0 00125  DST    DST     MSG+8         STORE INTO MESSAGE 
      00103                          CALL    WRFLX((MSG,,10))  PRINT ERROR MESSAGE  
      00103  0074 00 4 00127         TSX     WRFLX,4                                                          .002
      00104  3 00012 0 00115         PAR     MSG,,10                                                          .004
      00105  0020 00 0 00073         TRA     IGCHK         KEEP GOING   
                  
      00106  0500 00 0 00132  P.C.   CLA     =HPROGRA      SET LOAD ADDRESS TO
      00107  0560 00 0 00131         LDQ     =HM CARD      'PROGRAM CARD'     
      00110  0020 00 0 00102         TRA     DST           ..     
                  
                       00111  EOF    SYN     *  
      00111  0522 00 0 00073         XEC     XR4           AND XRS
      00112  0020 60 4 00001         TRA*    1,4           EOF RETURN   
1            RDBSS - BSS FILE READING ROUTINE.                                                   PAGE 3     
                  
      00113  0 00000 0 00000  EOFCT  PZE  
      00114  606060226262     BSS    BCI     1,   BSS 
      00115  233025234262     MSG    BCI     4,CHECKSUM ERROR IN PROG.  
      00116  644460255151     
      00117  465160314560     
      00120  475146273360     
      00121  0 00000 0 00000  PGN    PZE  
      00122  736043462124            BCI     2,, LOAD ADDRE 
      00123  602124245125     
      00124  626260135757            VFD     H12/SS,O6/60,H6/=,O12/5757 
      00125                          BSS     2  
                  
                       77426         COMMON  27 
                       77426  BUFF   COMMON  1  
                       77425  FILN   COMMON  2  
                  
      00127                          RMT     *             REMOTE SEQUENCES   
      00127  0101 00 0 00135  WRFLX  TIA     =HWRFLX                                                          .002
                                     END  
                  
        LITERALS  
      00130  000077000000     
      00131  446023215124     
      00132  475146275121     
      00133  606060606060     
      00134  625071226262     
      00135  665126436760     
      00136  744421314534     
1            RDBSS - BSS FILE READING ROUTINE.                                                   PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77423 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
        137 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        114    BSS    10
        102    DST   110
        111    EOF    12,   26,   45,  111
        115    MSG   102,  104
        121    PGN    61
         17    SQZ     5
         41    VRR    40
         73    XR4     3,  111
      77426   BUFF    11,   15,   20,   25,   31,   44,   56,   63,   66,   67,   71,  100,  127
      77425   FILN     4,    7,   23,   42,  127
        106   P.C.    76
         50  CHECK    16
          1  DSKER    14,   30,   47
        113  EOFCT    13,   27,   46
         73  IGCHK    64,   73,  105
          2  OCABC    77
          3  RDBSS     0
        127  WRFLX   103
          4  WZERO    53
          0 BFREAD     6,   22,   41
         75 CHKERR    72
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            ASSEMBLE 84 CHARACTER PRINT BUFFER.                                                 PAGE 1     
                  
                                             7/4/65 - NOEL I. MORRIS    
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                       00002         ENTRY   ECHAR    
                       00011         ENTRY   EWORD    
                       00022         ENTRY   WLINE    
                  
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  252330215160     
                  
                       00016  WPL    EQU     14            WORDS PER LINE     
                       00124  CPL    EQU     6*WPL         CHARACTERS PER LINE
                       00000  XR4    EQU     *-2           LINKAGE DIRECTOR   
                  
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
                  
                                             ECHAR - ENTER ONE CHARACTER INTO PRINT BUFFER.     
                  
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
                  
      00002 -0634 00 4 00000  ECHAR  SXD     XR4,4         SAVE XR4     
                  
      00003  0774 00 4 00124  CHX    AXT     CPL,4         INDEX TO CURRENT POSITION IN PRINT BUFFER  
      00004 -0620 00 4 00173         SLQ     PTBL+CPL,4    STORE CHARACTER FOR CRQ TABLE  
      00005  1 77777 4 00006         TXI     *+1,4,-1      CHECK FOR OVERFLOW 
      00006  0634 00 4 00003         SXA     CHX,4         SAVE BUFFER INDEX  
                  
      00007 -0534 00 4 00000  ERTN   LXD     XR4,4         RESTORE XR4  
      00010  0020 00 4 00001         TRA     1,4           AND RETURN   
                  
                  
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
                  
                                             EWORD - ENTER A FULL WORD INTO PRINT BUFFER. 
                  
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
                  
      00011  0634 00 4 00017  EWORD  SXA     WX4,4         SAVE XRS     
      00012  0634 00 1 00020         SXA     WX1,1         ..     
                  
      00013  0774 00 1 00006         AXT     6,1           SIX CHARACTERS IN WORD   
      00014                          CALL    ECHAR    
      00014  0074 00 4 00002         TSX     ECHAR,4                                                          .002
      00015 -0773 00 0 00006         RQL     6             SHIFT TO NEXT CHARACTER  
      00016  2 00001 1 00014         TIX     *-2,1,1       AND LOOP     
                  
      00017  0774 00 4 00000  WX4    AXT     **,4          RESTORE XRS  
      00020  0774 00 1 00000  WX1    AXT     **,1          ..     
      00021  0020 00 4 00001         TRA     1,4           RETURN 
1            ASSEMBLE 84 CHARACTER PRINT BUFFER.                                                 PAGE 2     
                  
                  
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
                  
                                             WLINE - ASSEMBLE AND PRINT OUT BUFFER CONTENTS.    
                  
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
                  
      00022 -0634 00 4 00000  WLINE  SXD     XR4,4         SAVE XRS     
      00023  0634 00 1 00035         SXA     XR1,1         ..     
                  
      00024  0774 00 4 00016         AXT     WPL,4         OUTPUT WORD COUNTER
      00025  0774 00 1 00047         AXT     PTBL,1        INITIALIZE CRQ     
      00026  0634 00 1 00030  CRL    SXA     CRQ,1         CRQ TABLE ADDRESS  
      00027  0560 00 0 00174         LDQ     =0            MUST BE ZERO FOR CRQ     
      00030 -0154 06 1 00047  CRQ    CRQ     PTBL,1,6      PRESTO, SIX CHARACTERS IN MQ   
      00031 -0600 00 4 00065         STQ     PTBL+WPL,4    USE SAME BUFFER    
      00032  2 00001 4 00026         TIX     CRL,4,1       ASSEMBLE ALL WORDS 
                  
      00033                          CALL    WRFLX((PTBL,,WPL))   
      00033  0074 00 4 00173         TSX     WRFLX,4                                                          .002
      00034  3 00016 0 00047         PAR     PTBL,,WPL                                                        .004
                                                           WRITE OUT BUFFER CONTENTS ON CONSOLE 
                  
      00035  0774 00 1 00000  XR1    AXT     **,1          RESTORE XR1  
                  
      00036  0774 00 4 00124  RESET  AXT     CPL,4         RESET THE CRQ TABLE
      00037  0634 00 4 00003         SXA     CHX,4         ..     
                  
      00040 -0500 00 0 00046         CAL     INIW          ..     
      00041  0602 00 4 00173         SLW     PTBL+CPL,4    ..     
      00042  0361 00 0 00175         ACL     =1            ..     
      00043  2 00001 4 00041         TIX     *-2,4,1       ..     
                  
      00044 -0534 00 4 00000         LXD     XR4,4         RESTORE XR4  
      00045  0020 00 4 00001         TRA     1,4           AND RETURN   
                  
                  
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
                  
      00046  600000000050     INIW   VFD     O21/6000000,15/PTBL+1
                       00047  PTBL   DUP     1,CPL    
      00047  600000000050            VFD     O21/6000000,15/*+1   
      00050  600000000051     
      00051  600000000052     
      00052  600000000053     
      00053  600000000054     
      00054  600000000055     
      00055  600000000056     
      00056  600000000057     
      00057  600000000060     
      00060  600000000061     
      00061  600000000062     
      00062  600000000063     
      00063  600000000064     
      00064  600000000065     
1            ASSEMBLE 84 CHARACTER PRINT BUFFER.                                                 PAGE 3     
                  
      00065  600000000066     
      00066  600000000067     
      00067  600000000070     
      00070  600000000071     
      00071  600000000072     
      00072  600000000073     
      00073  600000000074     
      00074  600000000075     
      00075  600000000076     
      00076  600000000077     
      00077  600000000100     
      00100  600000000101     
      00101  600000000102     
      00102  600000000103     
      00103  600000000104     
      00104  600000000105     
      00105  600000000106     
      00106  600000000107     
      00107  600000000110     
      00110  600000000111     
      00111  600000000112     
      00112  600000000113     
      00113  600000000114     
      00114  600000000115     
      00115  600000000116     
      00116  600000000117     
      00117  600000000120     
      00120  600000000121     
      00121  600000000122     
      00122  600000000123     
      00123  600000000124     
      00124  600000000125     
      00125  600000000126     
      00126  600000000127     
      00127  600000000130     
      00130  600000000131     
      00131  600000000132     
      00132  600000000133     
      00133  600000000134     
      00134  600000000135     
      00135  600000000136     
      00136  600000000137     
      00137  600000000140     
      00140  600000000141     
      00141  600000000142     
      00142  600000000143     
      00143  600000000144     
      00144  600000000145     
      00145  600000000146     
      00146  600000000147     
      00147  600000000150     
      00150  600000000151     
      00151  600000000152     
      00152  600000000153     
      00153  600000000154     
      00154  600000000155     
1            ASSEMBLE 84 CHARACTER PRINT BUFFER.                                                 PAGE 4     
                  
      00155  600000000156     
      00156  600000000157     
      00157  600000000160     
      00160  600000000161     
      00161  600000000162     
      00162  600000000163     
      00163  600000000164     
      00164  600000000165     
      00165  600000000166     
      00166  600000000167     
      00167  600000000170     
      00170  600000000171     
      00171  600000000172     
      00172  600000000173     
                                     END  
                                              REMOTE SEQUENCES    
                              WRFLX  GEN     (TIA)(=HWRFLX)                                                   .001
      00173  0101 00 0 00176  WRFLX  TIA     =HWRFLX                                                          .002
1            ASSEMBLE 84 CHARACTER PRINT BUFFER.                                                 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        177 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          3    CHX     6,   37
        124    CPL     2,    3,    4,   36,   41,   47
         26    CRL    32
         30    CRQ    26
         16    WPL     2,   24,   31,   34
         20    WX1    12
         17    WX4    11
         35    XR1    23
          0    XR4     2,    7,   22,   44
          7   ERTN      
         46   INIW    40
         47   PTBL     4,   25,   30,   31,   34,   41,   46
          2  ECHAR     0,   14
         11  EWORD     0
         36  RESET      
         22  WLINE     0
        173  WRFLX    33
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            DISK ERROR SUBROUTINE - CALLS PRNTER VIA NEXCOM.                                    PAGE 1     
                  
                                             REVISED 9/14/65 - NOEL I. MORRIS 
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00000         ENTRY   DSKER    
                  
      00000 -0500 00 0 00006  DSKER  CAL     =HPRNTER 
      00001  0560 00 0 00004         LDQ     =O-71    
      00002                          CALL    NEXCOM   
      00002  0074 00 4 00003         TSX     NEXCOM,4                                                         .002
                  
      00003                          RMT     *             REMOTE SEQUENCES   
      00003  0101 00 0 00005  NEXCOM TIA     =HNEXCOM                                                         .002
                  
                                     END  
                  
        LITERALS  
      00004  400000000071     
      00005  452567234644     
      00006  475145632551     
1            DISK ERROR SUBROUTINE - CALLS PRNTER VIA NEXCOM.                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          7 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          0  DSKER     0
          3 NEXCOM     2
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




 PRFIB   BCD 05/12/69 2020.2    4682         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   PRFIB   MAD            05/04/69    1511.6
-                 
      PRFIB           PRINT ALL PENDING FIB JOBS FOR USER                                              LM00001    
                                                                                                       LM00002    
                                                                                                       LM00003    
                  MODIFIED FOR '(ALL)' ARGUMENT BY ROGER ROACH 5/18/67                                 LM00004    
                  MODIFIED FOR 'PROB PROG' ARGUMENTS BY JIM BIXBY 12/26/67                             LM00005    
                  ABOVE OPTIONS RESTRICTED TO M1416 BY P.R.BOS 1/2/68                                  LM00006    
                                                                                                       LM00007    
                  NORMAL MODE IS INTEGER                                                          *001 LM00008    
                  DIMENSION CARD (13), WHO (1),  BUFF1 (431)                                      *002 LM00009    
                                                                                                       LM00010    
                      PRESET DECLARATIONS.                                                             LM00011    
                                                                                                       LM00012    
                  VECTOR VALUES FIBJOB = $FIBJOB$                                                 *003 LM00013    
                  VECTOR VALUES   FILE = $  FILE$                                                 *004 LM00014    
                  VECTOR VALUES  C0056 = $ C0056$                                                 *005 LM00015    
                  VECTOR VALUES FIBMON = $ 99995$                                                 *006 LM00016    
                  VECTOR VALUES  FENCE = 777777777777K                                            *007 LM00017    
                  VECTOR VALUES    MZE = -0                                                       *008 LM00018    
                  VECTOR VALUES     CT = 0                                                        *009 LM00019    
                  VECTOR VALUES  FIRST = 1B                                                       *010 LM00020    
                  VECTOR VALUES    ALL = $ (ALL)$                                                 *011 LM00021    
                  VECTOR VALUES  M1416 = $ M1416$                                                 *012 LM00022    
                                                                                                       LM00023    
                                                                                                       LM00024    
                  EQUIVALENCE  (PROBN, WHO (1)), (PROGN, WHO)                                     *013 LM00025    
                  EQUIVALENCE  (JPROB, CARD (13)), (JPROG, CARD (11)),                            *014 LM00026    
                1      (ESTTIM, CARD (9)), (DRB4, CARD (8)),                                      *014 LM00027    
                2      (JNAME, CARD (10))                                                         *014 LM00028    
                                                                                                       LM00029    
                                                                                                       LM00030    
                                                                                                       LM00031    
                      PICK UP PARAMETERS                                                               LM00032    
                                                                                                       LM00033    
                  PRMESS.                                                                         *015 LM00034    
                  WHOAMI. (WHO (1) ... 2)                                                         *016 LM00035    
                  WHENEVER WHO(1) .NE. M1416                                                      *017 LM00036    
                    ARG = FENCE                                                                   *018 LM00037    
                  OTHERWISE                                                                       *019 LM00038    
                    ARG = COMARG.(1)                                                              *020 LM00039    
                    ARG2 = COMARG.(2)                                                             *021 LM00040    
                    WHENEVER ARG.NE.FENCE.AND.ARG2.NE.FENCE                                       *022 LM00041    
                      PROBN = ARG                                                                 *023 LM00042    
                      PROGN = ARG2                                                                *024 LM00043    
                    END OF CONDITIONAL                                                            *025 LM00044    
                  END OF CONDITIONAL                                                              *026 LM00045    
                                                                                                       LM00046    
                  FERRTN. (ERROR)                                                                 *027 LM00047    
                                                                                                       LM00048    
                                                                                                       LM00049    
                      LINK TO FIBJOB FILE AND SEARCH FOR USER'S JOB.                                   LM00050    
                                                                                                       LM00051    
                  LINK. (FIBJOB, FILE, C0056, FIBMON, MZE, MZE, 124K, ERR1)                       *028 LM00052    
                  BFOPEN. ($R$, FIBJOB, FILE, BUFF1 (431), MZE, MZE, ERR1)                        *029 LM00053    
                  UNLINK. (FIBJOB, FILE)                                                          *030 LM00054    
                                                                                                       LM00055    
      READ        BFREAD. (FIBJOB, FILE, CARD (13) ... 14, CLOS, CT, ERROR)                       *031 LM00056    
                                                                                                       LM00057    
                  WHENEVER ARG .E. ALL, TRANSFER TO ONWARD                                        *032 LM00058    
                  WHENEVER JPROB .NE. PROBN .OR. JPROG .NE. PROGN, TRANSFER TO READ               *033 LM00059    
                                                                                                       LM00060    
                                                                                                       LM00061    
                      CARD FOUND.                                                                      LM00062    
                                                                                                       LM00063    
      ONWARD      WHENEVER FIRST                                                                  *034 LM00064    
                    WHENEVER ARG.E.ALL,PRMESA.($ PROB   PROG$,BL)                                 *035 LM00065    
                    PRMESS. (HEADER ... 5)                                                        *036 LM00066    
                    VECTOR VALUES HEADER = $JOBNAM  LIMIT   DATE  TIME$                           *037 LM00067    
                    PRMESS.                                                                       *038 LM00068    
                    FIRST = 0B                                                                    *039 LM00069    
                  END OF CONDITIONAL                                                              *040 LM00070    
                                                                                                       LM00071    
                  FTIME. (DRB4, DATE, TIME)                                                       *041 LM00072    
                  DATEX = ((DATE.A.7777K8)).V.((DATE.A.7777K4).RS.6).V.$00/00 $                   *042 LM00073    
                  WHENEVER ARG.E.ALL,PRMESA.(JPROB,JPROG,BL)                                      *043 LM00074    
                  PRMESS. (JNAME, BZEL. (DERBC. (ESTTIM)), BL, DATEX, TIME)                       *044 LM00075    
                  VECTOR VALUES BL = 6060 6057 5757K                                              *045 LM00076    
                  TRANSFER TO READ                                                                *046 LM00077    
                                                                                                       LM00078    
      CLOS        BFCLOS. (FIBJOB, FILE, ERROR)                                                   *047 LM00079    
                                                                                                       LM00080    
                  WHENEVER FIRST                                                                  *048 LM00081    
                    PRMESS. (NOJOB ... 3, PROBN, PROGN, $.$)                                      *049 LM00082    
                    VECTOR VALUES NOJOB = $ NO FIB JOBS FOR$                                      *050 LM00083    
                  END OF CONDITIONAL                                                              *051 LM00084    
                                                                                                       LM00085    
                  PRMESS.                                                                         *052 LM00086    
                                                                                                       LM00087    
                  CHNCOM. (0)                                                                     *053 LM00088    
                                                                                                       LM00089    
                                                                                                       LM00090    
                      FILE SYSTEM ERROR ENCOUNTERED.                                                   LM00091    
                                                                                                       LM00092    
      ERR1        UNLINK. (FIBJOB, FILE)                                                          *054 LM00093    
      ERROR       DSKER.                                                                          *055 LM00094    
                                                                                                       LM00095    
                                                                                                       LM00096    
                  END OF PROGRAM                                                                  *056 LM00097    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01212 TRANSFER VECTOR LENGTH  00021 PROGRAM BEGINS    00777
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ALL    00047 A 1        CLOS   00042   4        ESTTIM 00030   1        JNAME  00027   1        ONWARD 00045   4  
      ARG2   00050   1        CT     00734 A 1        FENCE  00737 A 1        JPROB  00024   1        PROBN  00022   1  
      ARG    00051   1        DATE   00735   1        FIBJOB 00740 A 1        JPROG  00026   1        PROGN  00023   1  
      BL     00052 A 1        DATEX  00736   1        FIBMON 00741 A 1        M1416  00751 A 1        READ   00046   4  
      BUFF1  00732 A 1        DRB4   00031   1        FILE   00742 A 1        MZE    00752 A 1        TIME   00756   1  
      C0056  00733 A 1        ERR1   00043   4        FIRST  00743 A 2        NOJOB  00755 A 1        WHO    00023 A 1  
      CARD   00041 A 1        ERROR  00044   4        HEADER 00750 A 1                                                  
0FUNCTION DICTIONARY    
      BFCLOS 00000   1        BFOPEN 00001   1        BFREAD 00002   1        BZEL   00003   1        CHNCOM 00004   1  
      COMARG 00005   1        DERBC  00006   1        DSKER  00007   1        EXIT   00010   1        FERRTN 00011   1  
      FTIME  00012   1        .SETUP 00013   1        LINK   00014   1        PRMESA 00015   1        PRMESS 00016   1  
      UNLINK 00017   1        WHOAMI 00020   1                                                                          
0ABSOLUTE CONSTANTS     
 00772 +336060606060     00762 +000000000003     00767 +000061000060     00776 -377700000000     00764 +000000000006    
 00770 +000077770000     00757 +000000000000     00763 +000000000005     00775 -206047514627     00774 -204751462260    
 00765 +000000000016     00773 -116060606060     00766 +000000000124     00761 +000000000002     00760 +000000000001    
 00771 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00042 TXL -301170001164       00043 TXL -301205001202       00044 TXL -301206001205       00045 TXL -301103001101      
 00046 TXL -301066001057                                                                                                
0PROGRAM    
                 N'R                                                                001  LM00008
                 D'N CARD (13), WHO (1),  BUFF1 (431)                               002  LM00009
                 V'S FIBJOB = $FIBJOB$                                              003  LM00013
 00777 TSX +0 07400 4 00013    00740     +2 63122 4 14622                                                               
                 V'S   FILE = $  FILE$                                              004  LM00014
 00742     -2 06026 3 14325                                                                                             
                 V'S  C0056 = $ C0056$                                              005  LM00015
 00733     -2 02300 0 00506                                                                                             
                 V'S FIBMON = $ 99995$                                              006  LM00016
 00741     -2 01111 1 11105                                                                                             
                 V'S  FENCE = 777777777777K                                         007  LM00017
 00737     -3 77777 7 77777                                                                                             
                 V'S    MZE = -0                                                    008  LM00018
 00752     -0 00000 0 00000                                                                                             
                 V'S     CT = 0                                                     009  LM00019
 00734     +0 00000 0 00000                                                                                             
                 V'S  FIRST = 1B                                                    010  LM00020
 00743     +0 00000 0 00001                                                                                             
                 V'S    ALL = $ (ALL)$                                              011  LM00021
 00047     -2 07421 4 34334                                                                                             
                 V'S  M1416 = $ M1416$                                              012  LM00022
 00751     -2 04401 0 40106                                                                                             
                 E'E  (PROBN, WHO (1)), (PROGN, WHO)                                013  LM00025
                 E'E  (JPROB, CARD (13)), (JPROG, CARD (11)),                       014  LM00026
                1     (ESTTIM, CARD (9)), (DRB4, CARD (8)),                         014  LM00027
                2     (JNAME, CARD (10))                                            014  LM00028
                 PRMESS.                                                            015  LM00034
 01000 TSX +0 07400 4 00016                                                                                             
                 WHOAMI. (WHO (1) ... 2)                                            016  LM00035
 01001 TSX +0 07400 4 00020    01002 TIX +2 00761 0 00022                                                               
                 W'R WHO(1) .NE. M1416                                              017  LM00036
 01003 CLA +0 50000 0 00022    01004 SUB +0 40200 0 00751    01005 TZE +0 10000 0 01011                                 
                   ARG = FENCE                                                      018  LM00037
 01006 CLA +0 50000 0 00737    01007 STO +0 60100 0 00051                                                               
                 O'E                                                                019  LM00038
 01010 TRA +0 02000 0 01031                                                                                             
                   ARG = COMARG.(1)                                                 020  LM00039
 01011 TSX +0 07400 4 00005    01012 TXH +3 00000 0 00760    01013 STO +0 60100 0 00051                                 
                   ARG2 = COMARG.(2)                                                021  LM00040
 01014 TSX +0 07400 4 00005    01015 TXH +3 00000 0 00761    01016 STO +0 60100 0 00050                                 
                   W'R ARG.NE.FENCE.AND.ARG2.NE.FENCE                               022  LM00041
 01017 CLA +0 50000 0 00050    01020 SUB +0 40200 0 00737    01021 TZE +0 10000 0 01031    01022 CLA +0 50000 0 00051   
 01023 SUB +0 40200 0 00737    01024 TZE +0 10000 0 01031                                                               
                     PROBN = ARG                                                    023  LM00042
 01025 CLA +0 50000 0 00051    01026 STO +0 60100 0 00022                                                               
                     PROGN = ARG2                                                   024  LM00043
 01027 CLA +0 50000 0 00050    01030 STO +0 60100 0 00023                                                               
                   E'L                                                              025  LM00044
                 E'L                                                                026  LM00045
                 FERRTN. (ERROR)                                                    027  LM00047
 01031 TSX +0 07400 4 00011    01032 TXH +3 00000 0 00044                                                               
                 LINK. (FIBJOB, FILE, C0056, FIBMON, MZE, MZE, 124K, ERR1)          028  LM00052
 01033 TSX +0 07400 4 00014    01034 TXH +3 00000 0 00740    01035 TXH +3 00000 0 00742    01036 TXH +3 00000 0 00733   
 01037 TXH +3 00000 0 00741    01040 TXH +3 00000 0 00752    01041 TXH +3 00000 0 00752    01042 TXH +3 00000 0 00766   
 01043 TXH +3 00000 0 00043                                                                                             
                 BFOPEN. ($R$, FIBJOB, FILE, BUFF1 (431), MZE, MZE, ERR1)           029  LM00053
 01044 TSX +0 07400 4 00001    01045 TXH +3 00000 0 00773    01046 TXH +3 00000 0 00740    01047 TXH +3 00000 0 00742   
 01050 TXH +3 00000 0 00053    01051 TXH +3 00000 0 00752    01052 TXH +3 00000 0 00752    01053 TXH +3 00000 0 00043   
                 UNLINK. (FIBJOB, FILE)                                             030  LM00054
 01054 TSX +0 07400 4 00017    01055 TXH +3 00000 0 00740    01056 TXH +3 00000 0 00742                                 
      READ       BFREAD. (FIBJOB, FILE, CARD (13) ... 14, CLOS, CT, ERROR)          031  LM00056
 01057 TSX +0 07400 4 00002    01060 TXH +3 00000 0 00740    01061 TXH +3 00000 0 00742    01062 TIX +2 00765 0 00024   
 01063 TXH +3 00000 0 00042    01064 TXH +3 00000 0 00734    01065 TXH +3 00000 0 00044                                 
                 W'R ARG .E. ALL, T'O ONWARD                                        032  LM00058
 01066 CLA +0 50000 0 00051    01067 SUB +0 40200 0 00047    01070 TNZ -0 10000 0 01072    01071 TRA +0 02000 0 00045   
                 W'R JPROB .NE. PROBN .OR. JPROG .NE. PROGN, T'O READ               033  LM00059
 01072 CLA +0 50000 0 00026    01073 SUB +0 40200 0 00023    01074 TNZ -0 10000 0 01100    01075 CLA +0 50000 0 00024   
 01076 SUB +0 40200 0 00022    01077 TZE +0 10000 0 01101    01100 TRA +0 02000 0 00046                                 
      ONWARD     W'R FIRST                                                          034  LM00064
 01101 NZT -0 52000 0 00743    01102 TRA +0 02000 0 01117                                                               
                   W'R ARG.E.ALL,PRMESA.($ PROB   PROG$,BL)                         035  LM00065
 01103 CLA +0 50000 0 00051    01104 SUB +0 40200 0 00047    01105 TNZ -0 10000 0 01112    01106 TSX +0 07400 4 00015   
 01107 TXH +3 00000 0 00774    01110 TXH +3 00000 0 00775    01111 TXH +3 00000 0 00052                                 
                   PRMESS. (HEADER ... 5)                                           036  LM00066
 01112 TSX +0 07400 4 00016    01113 TIX +2 00763 0 00750                                                               
                   V'S HEADER = $JOBNAM  LIMIT   DATE  TIME$                        037  LM00067
 00744     -0 42560 6 06060    00745     -2 32560 6 06331    00746     -2 36060 6 02421    00747     -2 06043 3 14431   
 00750     -0 14622 4 52144                                                                                             
                   PRMESS.                                                          038  LM00068
 01114 TSX +0 07400 4 00016                                                                                             
                   FIRST = 0B                                                       039  LM00069
 01115 CLA +0 50000 0 00757    01116 STO +0 60100 0 00743                                                               
                 E'L                                                                040  LM00070
                 FTIME. (DRB4, DATE, TIME)                                          041  LM00072
 01117 TSX +0 07400 4 00012    01120 TXH +3 00000 0 00031    01121 TXH +3 00000 0 00735    01122 TXH +3 00000 0 00756   
                 DATEX = ((DATE.A.7777K8)).V.((DATE.A.7777K4).RS.6).V.$00/00 $      042  LM00073
 01123 CAL -0 50000 0 00735    01124 ANA -0 32000 0 00770    01125 SLW +0 60200 0 01207    01126 CAL -0 50000 0 00764   
 01127 STA +0 62100 0 01131    01130 CAL -0 50000 0 01207    01131 LGR -0 76500 0 00000    01132 SLW +0 60200 0 01207   
 01133 CAL -0 50000 0 00735    01134 ANA -0 32000 0 00776    01135 ORA -0 50100 0 01207    01136 ORA -0 50100 0 00767   
 01137 SLW +0 60200 0 00736                                                                                             
                 W'R ARG.E.ALL,PRMESA.(JPROB,JPROG,BL)                              043  LM00074
 01140 CLA +0 50000 0 00051    01141 SUB +0 40200 0 00047    01142 TNZ -0 10000 0 01147    01143 TSX +0 07400 4 00015   
 01144 TXH +3 00000 0 00024    01145 TXH +3 00000 0 00026    01146 TXH +3 00000 0 00052                                 
                 PRMESS. (JNAME, BZEL. (DERBC. (ESTTIM)), BL, DATEX, TIME)          044  LM00075
 01147 TSX +0 07400 4 00006    01150 TXH +3 00000 0 00030    01151 STO +0 60100 0 01207    01152 TSX +0 07400 4 00003   
 01153 TXH +3 00000 0 01207    01154 STO +0 60100 0 01207    01155 TSX +0 07400 4 00016    01156 TXH +3 00000 0 00027   
 01157 TXH +3 00000 0 01207    01160 TXH +3 00000 0 00052    01161 TXH +3 00000 0 00736    01162 TXH +3 00000 0 00756   
                 V'S BL = 6060 6057 5757K                                           045  LM00076
 00052     -2 06060 5 75757                                                                                             
                 T'O READ                                                           046  LM00077
 01163 TRA +0 02000 0 00046                                                                                             
      CLOS       BFCLOS. (FIBJOB, FILE, ERROR)                                      047  LM00079
 01164 TSX +0 07400 4 00000    01165 TXH +3 00000 0 00740    01166 TXH +3 00000 0 00742    01167 TXH +3 00000 0 00044   
                 W'R FIRST                                                          048  LM00081
 01170 NZT -0 52000 0 00743    01171 TRA +0 02000 0 01177                                                               
                   PRMESS. (NOJOB ... 3, PROBN, PROGN, $.$)                         049  LM00082
 01172 TSX +0 07400 4 00016    01173 TIX +2 00762 0 00755    01174 TXH +3 00000 0 00022    01175 TXH +3 00000 0 00023   
 01176 TXH +3 00000 0 00772                                                                                             
                   V'S NOJOB = $ NO FIB JOBS FOR$                                   050  LM00083
 00753     -2 02646 5 16060    00754     +2 26041 4 62262    00755     -2 04546 6 02631                                 
                 E'L                                                                051  LM00084
                 PRMESS.                                                            052  LM00086
 01177 TSX +0 07400 4 00016                                                                                             
                 CHNCOM. (0)                                                        053  LM00088
 01200 TSX +0 07400 4 00004    01201 TXH +3 00000 0 00757                                                               
      ERR1       UNLINK. (FIBJOB, FILE)                                             054  LM00093
 01202 TSX +0 07400 4 00017    01203 TXH +3 00000 0 00740    01204 TXH +3 00000 0 00742                                 
      ERROR      DSKER.                                                             055  LM00094
 01205 TSX +0 07400 4 00007                                                                                             
                 E'M                                                                056  LM00097
 01206 TSX +0 07400 4 00010                                                                                             




 PRINT   BCD 09/18/68 2319.3   23960         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  PRINT0   MAD            02/07/68    2232.7
-                 
       PRNTF     ..PRINTS FILE OF VARIABLE LENGTH BCD RECORDS                                          LM00001    
                                                                                                       LM00002    
                 ..PRINT NAME1 NAME2 R (TO R1) F(1) L(1) ... F(N) L(N)                                 LM00003    
                 ..TAB (FULL)                                                                          LM00004    
                                                                                                       LM00005    
                 ..PRINTING BEGINS WITH THE RTH RECORD, ENDS WITH R1TH RECORD                          LM00006    
                 ..PRINTED LINE IS A CONCATENATION OF EVERY F(I)...L(I) FIELDS                         LM00007    
                 ..WHERE F(I) AND L(I) ARE THE RANKS OF FIRST AND LAST                                 LM00008    
                 ..CHARACTER OF THE FIELD SELECTED FROM THE RECORD                                     LM00009    
                 .. 'R' IS INTERPRETED AS A LINE NUMBER, AS LONG AS RECORDS                            LM00010    
                 ..KEEP 14 WORDS LONG.  ANY DIFFERENT LENGTH SWITCHES TO                               LM00011    
                 ..INTERPRETATION AS RECORD NUMBER STARTING FROM 1, BY 1.                              LM00012    
                 .. 'THRU' INSTEAD OF 'TO', FORCES RECORD NUMBER MODE.                                 LM00013    
                 ..LINE NUMBER IS PRINTED ON THE LEFT, UNLESS USER'S                                   LM00014    
                 ..EDITING SPECIFICATIONS. (LINE NUMBER = COL. 73 - 80)                                LM00015    
                 ..LAST L(N) MAY BE OMITTED, AND IS ASSUMED F(N).                                      LM00016    
                 ..COMPUTATION CENTER     JUNE 64              LOUIS POUZIN                            LM00017    
                 ..OCTOBER     65     E.QUISENBERRY                                                    LM00018    
                                                                                                       LM00019    
                  GCLS.(A,0)                                                                      *001 LM00020    
      AA          THROUGH AA, FOR A=1, 1, A.E.20.OR.A(A).E.FENCE                                  *002 LM00021    
                                                                                                       LM00022    
                 ..THERE ARE A-1 SIGNIFICANT ARGUMENTS                                                 LM00023    
                                                                                                       LM00024    
                  WHENEVER A.LE.2, TRANSFER TO ERR1                                               *003 LM00025    
                  BFOPEN.($R$,A(1),A(2),BUF1(432),-0,-0,NEXT)                                     *004 LM00026    
                  TRANSFER TO WHEN                                                                *005 LM00027    
      NEXT        PRNTER.(61K)                                                                    *006 LM00028    
                    EXECUTE BRAKE.                                                                *007 LM00029    
                    TRANSFER TO OUT                                                               *008 LM00030    
      WHEN        WHENEVER A.E.3,TRANSFER TO DD                                                   *009 LM00031    
                  WHENEVER A(3).E.$(FULL)$                                                        *010 LM00032    
                    EXECUTE FULMD.                                                                *011 LM00033    
                    FULL=5                                                                        *012 LM00034    
                    WHENEVER A.E.4,TRANSFER TO DD                                                 *013 LM00035    
                  N=4                                                                             *014 LM00036    
                  OTHERWISE                                                                       *015 LM00037    
                    N=3                                                                           *016 LM00038    
                  END OF CONDITIONAL                                                              *017 LM00039    
                  WHENEVER TDEC.(A(N)).E.0, EXECUTE ERR2.(A(N))                                   *018 LM00040    
                  R=BCDEC.(A(N))                                                                  *019 LM00041    
                  WHENEVER R.E.0, R=1                                                             *020 LM00042    
                  LN=ZEL.(A(N))                                                                   *021 LM00043    
                  WHENEVER A.E.N+1, TRANSFER TO DD                                                *022 LM00044    
                  WHENEVER A(N+1).E.$(FULL)$                                                      *023 LM00045    
                    EXECUTE FULMD.                                                                *024 LM00046    
                    FULL=5                                                                        *025 LM00047    
                    TRANSFER TO DD                                                                *026 LM00048    
                  END OF CONDITIONAL                                                              *027 LM00049    
                  WHENEVER A(N+1).E.$  THRU$                                                      *028 LM00050    
                    FIX=0                                                                         *029 LM00051    
                    TRANSFER TO GG                                                                *030 LM00052    
                  OR WHENEVER A(N+1).E.$    TO$                                                   *031 LM00053    
      GG            CONTINUE                                                                      *032 LM00054    
                    WHENEVER A.GE.N+3                                                             *033 LM00055    
                      WHENEVER TDEC.(A(N+2)).E.0, EXECUTE ERR2.(A(N+2))                           *034 LM00056    
                      L1=ZEL.(A(N+2))                                                             *035 LM00057    
                    END OF CONDITIONAL                                                            *036 LM00058    
                    D=N+2                                                                         *037 LM00059    
                    WHENEVER L1.L.LN                                                              *038 LM00060    
                      MES2=A(N)                                                                   *039 LM00061    
                      MES2(2)=A(N+2)                                                              *040 LM00062    
                      EXECUTE PRNTP.(MES2)                                                        *041 LM00063    
                      EXECUTE BRAKE.                                                              *042 LM00064    
                      TRANSFER TO OUT                                                             *043 LM00065    
                    END OF CONDITIONAL                                                            *044 LM00066    
                    WHENEVER A.LE.N+3, TRANSFER TO DD                                             *045 LM00067    
                  END OF CONDITIONAL                                                              *046 LM00068    
                  MINUS=0                                                                         *047 LM00069    
                  THROUGH EE, FOR E=D+1,1,E.E.A                                                   *048 LM00070    
                  WHENEVER A(E).E.$   TAB$,TRANSFER TO QBMP                                       *049 LM00071    
                  WHENEVER A(E).E.$(FULL)$                                                        *050 LM00072    
                  EXECUTE FULMD.                                                                  *051 LM00073    
                  MINUS=MINUS+1                                                                   *052 LM00074    
                  FULL=5                                                                          *053 LM00075    
                  TRANSFER TO EE                                                                  *054 LM00076    
                  END OF CONDITIONAL                                                              *055 LM00077    
                  WHENEVER TDEC.(A(E)).E.0,EXECUTE ERR2.(A(E))                                    *056 LM00078    
                  EDIT=1                                                                          *057 LM00079    
                  C=BCDEC.(A(E))                                                                  *058 LM00080    
                  C(E-D-MINUS)=C                                                                  *059 LM00081    
                  WHENEVER XMOD.(E-D-MINUS,2).E.1,C(E-D-MINUS+1)=C                                *060 LM00082    
                  TRANSFER TO EE                                                                  *061 LM00083    
      QBMP        TBCT=TBCT+1                                                                     *062 LM00084    
                  MINUS=MINUS+1                                                                   *063 LM00085    
      EE          CONTINUE                                                                        *064 LM00086    
      DD          CONTINUE                                                                        *065 LM00087    
                                                                                                       LM00088    
                                                                                                       LM00089    
                  EXECUTE SETBRK.(FF1)                                                            *066 LM00090    
                  WHENEVER R.LE.1.AND.D.E.3.AND.MES3.E.0                                          *067 LM00091    
                  KK(0)=575757575755K                                                             *068 LM00092    
                  KK(1)=A(1)                                                                      *069 LM00093    
                  KK(2)=575757575760K                                                             *070 LM00094    
                  KK(3)=A(2)                                                                      *071 LM00095    
                  KK(4)=606060606060K                                                             *072 LM00096    
                  KK(6)=KK(2)                                                                     *073 LM00097    
                  GETTM.(KK(5),KK(7))                                                             *074 LM00098    
                  KK(8)=KK(0)                                                                     *075 LM00099    
                  KK(9)=575757575755K                                                             *076 LM00100    
                  KK(10)=FENCE                                                                    *077 LM00101    
                  PRNTPC.(KK)                                                                     *078 LM00102    
                  END OF CONDITIONAL                                                              *079 LM00103    
                  THROUGH BB, FOR B=1,1,FIX.E.0.AND.B.G.R                                         *080 LM00104    
                  BFREAD.(A(1),A(2),K(NAX)...1,FF,QEOFCT,QERR)                                    *081 LM00105    
                  WHENEVER K(NAX).A.MASK1.NE.MASK1                                                *082 LM00106    
                    TRANSFER TO LNUM                                                              *083 LM00107    
                  OTHERWISE                                                                       *084 LM00108    
                      EXECUTE INMK.                                                               *085 LM00109    
                  FIX=0                                                                           *086 LM00110    
                  END OF CONDITIONAL                                                              *087 LM00111    
                  TRANSFER TO BB                                                                  *088 LM00112    
                 ..CARD IMAGE FILES SHOULD ONLY BE PRINTED IN THE 6 BIT MODE                           LM00113    
      LNUM        BFREAD.(A(1),A(2),K(21)...13,FF,QEOFCT,QERR)                                    *089 LM00114    
                  WHENEVER GLBLN.(W).GE.LN.AND.FIX.E.1,TRANSFER TO JJ                             *090 LM00115    
      BB          CONTINUE                                                                        *091 LM00116    
      JJ          CONTINUE                                                                        *092 LM00117    
                  WHENEVER GLBLN.(W).G.L1.AND.FIX.E.1,TRANSFER TO FF                              *093 LM00118    
                                                                                                       LM00119    
                  R1=BCDEC.(L1)                                                                   *094 LM00120    
                  WHENEVER EDIT.E.0                                                               *095 LM00121    
                  THROUGH LL,FOR L=R,1,L.G.R1.AND.FIX.E.0                                         *096 LM00122    
                  WHENEVER FIX.E.0.AND.K(NAX).A.MASK1.E.MASK1,TRANSFER TO MARK1                   *097 LM00123    
                  WHENEVER FIX.E.0                                                                *098 LM00124    
                    ICD=-1                                                                        *099 LM00125    
                    LINC=12                                                                       *100 LM00126    
                    EGB=22                                                                        *101 LM00127    
                  TRANSFER TO MARK2                                                               *102 LM00128    
                  END OF CONDITIONAL                                                              *103 LM00129    
                  KK(0)=K(10)                                                                     *104 LM00130    
                  KK(1)=K(9)                                                                      *105 LM00131    
                  ZERO=2                                                                          *106 LM00132    
                  ICD=1                                                                           *107 LM00133    
                  LINC=12                                                                         *108 LM00134    
                  EGB=22                                                                          *109 LM00135    
                  TRANSFER TO MARK2                                                               *110 LM00136    
      MARK1       ICD=-1                                                                          *111 LM00137    
                  LINC=CLIN                                                                       *112 LM00138    
                  EGB=BEG                                                                         *113 LM00139    
      MARK2       PRNCT=(36/CHAR)*LINC-1                                                          *114 LM00140    
                  DEN1=NAX-LINC                                                                   *115 LM00141    
                  UNPKNR.(K(EGB)...K(DEN1),KCHOS...KCHOS(PRNCT),CHAR)                             *116 LM00142    
                  EXECUTE PRYNT.                                                                  *117 LM00143    
                  WHENEVER GLBLN.(W).GE.L1.AND.FIX.E.1,TRANSFER TO FF1                            *118 LM00144    
                  WHENEVER L.E.R1.AND.FIX.E.0,TRANSFER TO FF1                                     *119 LM00145    
                  BFREAD.(A(1),A(2),K(NAX)...1,FF1,QEOFCT,QERR)                                   *120 LM00146    
                  WHENEVER K(NAX).A.MASK1.E.MASK1                                                 *121 LM00147    
                  EXECUTE INMK.                                                                   *122 LM00148    
                  FIX=0                                                                           *123 LM00149    
                  OTHERWISE                                                                       *124 LM00150    
                  BFREAD.(A(1),A(2),K(21)...13,FF1,QEOFCT,QERR)                                   *125 LM00151    
                  END OF CONDITIONAL                                                              *126 LM00152    
      LL          CONTINUE                                                                        *127 LM00153    
                  OTHERWISE                                                                       *128 LM00154    
                  ACT=A-D-MINUS                                                                   *129 LM00155    
                  ACT=ACT/2                                                                       *130 LM00156    
                  THROUGH RR,FOR L=R,1,L.G.R1.AND.FIX.E.0                                         *131 LM00157    
                  WHENEVER FIX.E.0.AND.K(NAX).A.MASK1.E.MASK1,TRANSFER TO MARK                    *132 LM00158    
                  UNPKNR.(K(22)...K(9),KUNP(1)...KUNP(84),CHAR)                                   *133 LM00159    
      COMN        ARYCT=-1                                                                        *134 LM00160    
                  EXECUTE PKOFF.                                                                  *135 LM00161    
                  PRNCT=ARYCT-TBCT                                                                *136 LM00162    
                  EXECUTE PRYNT.                                                                  *137 LM00163    
                  TRANSFER TO CHECK                                                               *138 LM00164    
      MARK        NED=(36/CHAR)*CLIN                                                              *139 LM00165    
                  DEN=NAX-CLIN                                                                    *140 LM00166    
                  UNPKNR.(K(BEG)...K(DEN),KUNP(1)...KUNP(NED),CHAR)                               *141 LM00167    
                  TRANSFER TO COMN                                                                *142 LM00168    
      CHECK       WHENEVER GLBLN.(W).GE.L1.AND.FIX.E.1,TRANSFER TO FF1                            *143 LM00169    
                  WHENEVER L.E.R1.AND.FIX.E.0,TRANSFER TO FF1                                     *144 LM00170    
                  BFREAD.(A(1),A(2),K(NAX)...1,FF1,QEOFCT,QERR)                                   *145 LM00171    
                  WHENEVER K(NAX).A.MASK1.E.MASK1                                                 *146 LM00172    
                  EXECUTE INMK.                                                                   *147 LM00173    
                  FIX=0                                                                           *148 LM00174    
                  OTHERWISE                                                                       *149 LM00175    
                  BFREAD.(A(1),A(2),K(21)...13,FF1,QEOFCT,QERR)                                   *150 LM00176    
                  END OF CONDITIONAL                                                              *151 LM00177    
      RR          CONTINUE                                                                        *152 LM00178    
                  END OF CONDITIONAL                                                              *153 LM00179    
                                                                                                       LM00180    
                 ..WHEN END OF FILE                                                                    LM00181    
                                                                                                       LM00182    
      QERR        PRNTER.(61K)                                                                    *154 LM00183    
                  TRANSFER TO FF1                                                                 *155 LM00184    
      FF          CONTINUE                                                                        *156 LM00185    
                  EOF=A(3)                                                                        *157 LM00186    
                  EXECUTE PRNTP.(EOF)                                                             *158 LM00187    
      FF1         BFCLOS.(A(1),A(2),OUT)                                                          *159 LM00188    
                  EXECUTE SAVBRK.                                                                 *160 LM00189    
      OUT         EXECUTE CHNCOM.(0)                                                              *161 LM00190    
                                                                                                       LM00191    
      ERR1        EXECUTE PRNTP.(MES)                                                             *162 LM00192    
                  TRANSFER TO OUT                                                                 *163 LM00193    
                                                                                                       LM00194    
                    *   *   *   *   *   *   *   *   *   *   *   *   *   *   *                          LM00195    
                                                                                                       LM00196    
                  INTERNAL FUNCTION(Z)                                                            *164 LM00197    
                  ENTRY TO ERR2.                                                                  *165 LM00198    
                  MES3=Z                                                                          *166 LM00199    
                  EXECUTE PRNTP.(MES3)                                                            *167 LM00200    
                  TRANSFER TO DD                                                                  *168 LM00201    
                  END OF FUNCTION                                                                 *169 LM00202    
                                                                                                       LM00203    
                  INTERNAL FUNCTION                                                               *170 LM00204    
                  ENTRY TO FULMD.                                                                 *171 LM00205    
                  BLANK=006000600060K                                                             *172 LM00206    
                  CHAR=12                                                                         *173 LM00207    
                  WORD=3                                                                          *174 LM00208    
                  NAX=132                                                                         *175 LM00209    
                  BEG=131                                                                         *176 LM00210    
                  FUNCTION RETURN                                                                 *177 LM00211    
                  END OF FUNCTION                                                                 *178 LM00212    
                                                                                                       LM00213    
                  INTERNAL FUNCTION                                                               *179 LM00214    
                  ENTRY TO GLBLN.                                                                 *180 LM00215    
                  W=(K(10).LS.12).V.(K(9).RS.24)                                                  *181 LM00216    
                  W=W.A.007777777777K                                                             *182 LM00217    
                  FUNCTION RETURN W                                                               *183 LM00218    
                   END OF FUNCTION                                                                *184 LM00219    
                                                                                                       LM00220    
                  INTERNAL FUNCTION                                                               *185 LM00221    
                  ENTRY TO INMK.                                                                  *186 LM00222    
                  ZERO=0                                                                          *187 LM00223    
                  CLIN=K(NAX).A.MASK2                                                             *188 LM00224    
                  WHENEVER CLIN.G.NAX                                                             *189 LM00225    
                    MOV=CLIN-NAX                                                                  *190 LM00226    
                    CLIN=NAX                                                                      *191 LM00227    
                  END OF CONDITIONAL                                                              *192 LM00228    
                  BFREAD.(A(1),A(2),K(BEG)...CLIN,FF1,QEOFCT,QERR)                                *193 LM00229    
      MOVNE       WHENEVER MOV.NE.0                                                               *194 LM00230    
                  WHENEVER MOV.G.NAX                                                              *195 LM00231    
                    MV=NAX                                                                        *196 LM00232    
                    MOV=MOV-NAX                                                                   *197 LM00233    
                  OTHERWISE                                                                       *198 LM00234    
                    MV=MOV                                                                        *199 LM00235    
                    MOV=0                                                                         *200 LM00236    
                  END OF CONDITIONAL                                                              *201 LM00237    
                  BFREAD.(A(1),A(2),KK(BEG)...MV,FF1,QEOFCT,QERR)                                 *202 LM00238    
                  TRANSFER TO MOVNE                                                               *203 LM00239    
                  END OF CONDITIONAL                                                              *204 LM00240    
                  FUNCTION RETURN                                                                 *205 LM00241    
                  END OF FUNCTION                                                                 *206 LM00242    
                                                                                                       LM00243    
                  INTERNAL FUNCTION                                                               *207 LM00244    
                  ENTRY TO PRYNT.                                                                 *208 LM00245    
                  TOP=PRNCT                                                                       *209 LM00246    
                  THROUGH LOOP,FOR IB=TOP,-1,IB.L.0                                               *210 LM00247    
                  WHENEVER KCHOS(IB).NE.60K.AND.KCHOS(IB).NE.57K,                                 *211 LM00248    
                1 TRANSFER TO NBLK                                                                *211 LM00249    
      LOOP        PRNCT=PRNCT-1                                                                   *212 LM00250    
      NBLK        NUM=(PRNCT)/WORD+1+ZERO                                                         *213 LM00251    
                  WHENEVER PRNCT.L.0                                                              *214 LM00252    
                    NUM=0                                                                         *215 LM00253    
                    TRANSFER TO OMIT                                                              *216 LM00254    
                  END OF CONDITIONAL                                                              *217 LM00255    
                  PAKNR.(KCHOS...KCHOS(PRNCT),KK(ZERO)...KK(NUM-1),CHAR)                          *218 LM00256    
      OMIT        KK(NUM)=575757575755K                                                           *219 LM00257    
                  WHENEVER FLAG.E.1                                                               *220 LM00258    
                    KK(NUM)=FENCE                                                                 *221 LM00259    
                    FLAG=0                                                                        *222 LM00260    
                    WHENEVER FULL.E.5,SETFUL.                                                     *223 LM00261    
                    TRANSFER TO PC                                                                *224 LM00262    
                  END OF CONDITIONAL                                                              *225 LM00263    
                  KK(NUM+1)=FENCE                                                                 *226 LM00264    
                  WHENEVER FULL.E.5                                                               *227 LM00265    
                  KK(NUM)=005700570055K                                                           *228 LM00266    
                  EXECUTE SETFUL.                                                                 *229 LM00267    
                  END OF CONDITIONAL                                                              *230 LM00268    
      PC          PRNTPC.(KK)                                                                     *231 LM00269    
                  FUNCTION RETURN                                                                 *232 LM00270    
                   END OF FUNCTION                                                                *233 LM00271    
                                                                                                       LM00272    
                  INTERNAL FUNCTION                                                               *234 LM00273    
                  ENTRY TO PKOFF.                                                                 *235 LM00274    
                  CKEND=CLIN*WORD                                                                 *236 LM00275    
                  THROUGH PICKC,FOR I=1,1,I.G.ACT                                                 *237 LM00276    
                  MIN=C(2*(I-1)+1)                                                                *238 LM00277    
                  MAX=C(2*I)                                                                      *239 LM00278    
                  INC=1                                                                           *240 LM00279    
                  WHENEVER MAX.L.MIN,INC=-1                                                       *241 LM00280    
                  THROUGH CHOSC,FOR II=MIN,INC,II.E.MAX+INC                                       *242 LM00281    
                  WHENEVER ARYCT.E.130                                                            *243 LM00282    
                  PRNCT=ARYCT                                                                     *244 LM00283    
                  FLAG=1                                                                          *245 LM00284    
                    EXECUTE PRYNT.                                                                *246 LM00285    
                    ARYCT=0                                                                       *247 LM00286    
                  END OF CONDITIONAL                                                              *248 LM00287    
                  WHENEVER II.G.CKEND,TRANSFER TO CHO                                             *249 LM00288    
                  ARYCT=ARYCT+1                                                                   *250 LM00289    
                  KCHOS(ARYCT)=KUNP(II)                                                           *251 LM00290    
      CHOSC       CONTINUE                                                                        *252 LM00291    
      CHO         WHENEVER TBCT.E.0,TRANSFER TO PICKC                                             *253 LM00292    
                  THROUGH PICKC,FOR N=1,1,N.G.TBCT                                                *254 LM00293    
                  ARYCT=ARYCT+1                                                                   *255 LM00294    
                  KCHOS(ARYCT)=72K                                                                *256 LM00295    
      PICKC       CONTINUE                                                                        *257 LM00296    
                  FUNCTION RETURN                                                                 *258 LM00297    
                  END OF FUNCTION                                                                 *259 LM00298    
                                                                                                       LM00299    
                    *   *   *   *   *   *   *   *   *   *   *   *   *   *   *                          LM00300    
                                                                                                       LM00301    
                  NORMAL MODE IS INTEGER                                                          *260 LM00302    
                  DIMENSION KK(135),BUF1(432),K(132),KUNP(396),                                   *261 LM00303    
                1 KCHOS(396),A(19),C(19)                                                          *261 LM00304    
                                                                                                       LM00305    
                  VECTOR VALUES FULL=0                                                            *262 LM00306    
                  VECTOR VALUES ZERO=0                                                            *263 LM00307    
                  VECTOR VALUES BMASK=000000000057K                                               *264 LM00308    
                  VECTOR VALUES CLIN=14                                                           *265 LM00309    
                  VECTOR VALUES MOV=0                                                             *266 LM00310    
                  VECTOR VALUES BLANK=606060606060K                                               *267 LM00311    
                  VECTOR VALUES FLAG=0                                                            *268 LM00312    
                  VECTOR VALUES NAX=22                                                            *269 LM00313    
                  VECTOR VALUES BEG=21                                                            *270 LM00314    
                  VECTOR VALUES EOF(1)=$ NOT IN FILE.$, 777777777777K                             *271 LM00315    
                  VECTOR VALUES C=0, 1, 72                                                        *272 LM00316    
                  VECTOR VALUES D=3                                                               *273 LM00317    
                  VECTOR VALUES R=1                                                               *274 LM00318    
                  VECTOR VALUES R1=377777777777K                                                  *275 LM00319    
                  VECTOR VALUES L1=377777777777K                                                  *276 LM00320    
                  VECTOR VALUES K=$$                                                              *277 LM00321    
                  VECTOR VALUES FIX=1                                                             *278 LM00322    
                  VECTOR VALUES EDIT=0                                                            *279 LM00323    
                  VECTOR VALUES E=6                                                               *280 LM00324    
                  VECTOR VALUES H=0                                                               *281 LM00325    
                  VECTOR VALUES MES=$ INCORRECT FORMAT$, 777777777777K                            *282 LM00326    
                  VECTOR VALUES TABCOV=15                                                         *283 LM00327    
                  VECTOR VALUES TBCT=0                                                            *284 LM00328    
                  VECTOR VALUES MASK1=777777000000K                                               *285 LM00329    
                  VECTOR VALUES MASK2=000000777777K                                               *286 LM00330    
                  VECTOR VALUES MES=$COMMAND FORMAT IS 'PRINT NAME1 NAME2                         *287 LM00331    
                1 -R(TO/THRU R2) F(1) L(1) ... F(N) L(N) TAB (FULL)-$,                            *287 LM00332    
                2 777777777777K                                                                   *287 LM00333    
                  VECTOR VALUES WORD=6                                                            *288 LM00334    
                  VECTOR VALUES CHAR=6                                                            *289 LM00335    
                  VECTOR VALUES MES1(2)=$ NOT FOUND$, 777777777777K                               *290 LM00336    
                  VECTOR VALUES MES2(1)=$   TO$, 0,$ IS ILLEGAL$, 777777777777K                   *291 LM00337    
                  VECTOR VALUES MES3(1)=$ NOT DECIMAL.  FOLLOWING ARGUMENTS ARE                   *292 LM00338    
                1  IGNORED.$, 777777777777K                                                       *292 LM00339    
                  VECTOR VALUES FENCE=777777777777K                                               *293 LM00340    
                  END OF PROGRAM                                                                  *294 LM00341    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   05213 TRANSFER VECTOR LENGTH  00025 PROGRAM BEGINS    03261
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      AA     00033   4        DEN1   01027   1        II     01051   1        MASK1  03127 A 1        OMIT   00056   4  
      ACT    00065   1        DEN    01030   1        INC    01052   1        MASK2  03130 A 1        OUT    00057   4  
      ARYCT  00066   1        D      01031 A 1        I      01053   1        MAX    03131   1        PC     00060   4  
      A      00112 A 1        EDIT   01032 A 1        JJ     00046   4        MES1   03136 A 1        PICKC  00061   4  
      BB     00034   4        EE     00041   4        KCHOS  01670 A 1        MES2   03144 A 1        PRNCT  03210   1  
      BEG    00113 A 1        EGB    01033   1        KK     02100 A 1        MES3   03156 A 1        QBMP   00062   4  
      BLANK  00114 A 1        EOF    01040 A 1        K      02305 A 1        MES    03177 A 1        QEOFCT 03211   1  
      BMASK  00115 A 1        ERR1   00042   4        KUNP   03122 A 1        MIN    03200   1        QERR   00063   4  
      B      00116   1        E      01041 A 1        L1     03123 A 1        MINUS  03201   1        R1     03212 A 1  
      BUF1   00777 A 1        FENCE  01042 A 1        LINC   03124   1        MOVNE  00053   4        RR     00033   4  
      CHAR   01000 A 1        FF1    00043   4        LL     00033   4        MOV    03202 A 1        R      03213 A 1  
      CHECK  00035   4        FF     00044   4        LN     03125   1        MV     03203   1        TABCOV 03214 A 1  
      CHO    00036   4        FIX    01043 A 1        LNUM   00047   4        NAX    03204 A 1        TBCT   03215 A 1  
      CHOSC  00033   4        FLAG   01044 A 1        LOOP   00033   4        NBLK   00054   4        TOP    03216   1  
      CKEND  01001   1        FULL   01045 A 1        L      03126   1        NED    03205   1        WHEN   00064   4  
      CLIN   01002 A 1        GG     00045   4        MARK1  00050   4        NEXT   00055   4        WORD   03217 A 1  
      COMN   00037   4        H      01046 A 1        MARK2  00051   4        N      03206   1        W      03220   1  
      C      01026 A 1        IB     01047   1        MARK   00052   4        NUM    03207   1        ZERO   03221 A 1  
      DD     00040   4        ICD    01050   1                                                                          
0FUNCTION DICTIONARY    
      BCDEC  00000   1        BFCLOS 00001   1        BFOPEN 00002   1        BFREAD 00003   1        BRAKE  00004   1  
      CHNCOM 00005   1        EXIT   00006   1        GCLS   00007   1        GETTM  00010   1        .SETUP 00011   1  
      PAKNR  00012   1        PRNTER 00013   1        PRNTPC 00014   1        PRNTP  00015   1        SAVBRK 00016   1  
      SETBRK 00017   1        SETFUL 00020   1        TDEC   00021   1        UNPKNR 00022   1        XMOD   00023   1  
      ZEL    00024   1        ERR2   00025   1        FULMD  00026   1        GLBLN  00027   1        INMK   00030   1  
      PKOFF  00031   1        PRYNT  00032   1                                                                          
0ABSOLUTE CONSTANTS     
 03241 +000000000072     03242 +000000000202     03245 +005700570055     03237 +000000000060     03236 +000000000057    
 03247 +007777777777     03234 +000000000030     03243 +000000000203     03244 +000000000204     03246 +006000600060    
 03235 +000000000044     03233 +000000000026     03230 +000000000014     03231 +000000000015     03254 -206060606060    
 03253 -175757575760     03252 -175757575755     03256 -206060632122     03255 -206060606346     03257 -206063305164    
 03226 +000000000004     03227 +000000000005     03260 -342664434334     03225 +000000000003     03240 +000000000061    
 03251 -116060606060     03224 +000000000002     03232 +000000000024     03222 +000000000000     03223 +000000000001    
 03250 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00034 TXL -304017004016       00035 TXL -304362004351       00036 TXL -305152005146       00037 TXL -304307004305      
 00040 TXL -303666003666       00041 TXL -303666003665       00042 TXL -304447004445       00043 TXL -304442004436      
 00044 TXL -304432004432       00045 TXL -303455003455       00046 TXL -304017004017       00047 TXL -304005003776      
 00050 TXL -304117004115       00051 TXL -304133004123       00052 TXL -304323004315       00053 TXL -304623004620      
 00054 TXL -304733004723       00055 TXL -303327003325       00056 TXL -304770004765       00057 TXL -304445004443      
 00060 TXL -305022005020       00061 TXL -305174005172       00062 TXL -303662003657       00063 TXL -304431004427      
 00064 TXL -303335003331                                                                                                
0PROGRAM    
                 GCLS.(A,0)                                                         001  LM00020
 03261 TSX +0 07400 4 00011    03262 TSX +0 07400 4 00007    03263 TXH +3 00000 0 00112    03264 TXH +3 00000 0 03222   
      AA         THROUGH AA, FOR A=1, 1, A.E.20.OR.A(A).E.FENCE                     002  LM00021
 03265 CLA +0 50000 0 03223    03266 STO +0 60100 0 00112    03267 TRA +0 02000 0 03273    03270 CLA +0 50000 0 00112   
 03271 ADD +0 40000 0 03223    03272 STO +0 60100 0 00112    03273 LXA +0 53400 1 00112    03274 CLA +0 50000 1 00112   
 03275 SUB +0 40200 0 01042    03276 TZE +0 10000 0 03303    03277 CLA +0 50000 0 00112    03300 SUB +0 40200 0 03232   
 03301 TZE +0 10000 0 03303    03302 TRA +0 02000 0 03270                                                               
                 WHENEVER A.LE.2, TRANSFER TO ERR1                                  003  LM00025
 03303 CLA +0 50000 0 00112    03304 SUB +0 40200 0 03224    03305 TZE +0 10000 0 03307    03306 TPL +0 12000 0 03310   
 03307 TRA +0 02000 0 00042                                                                                             
                 BFOPEN.($R$,A(1),A(2),BUF1(432),-0,-0,NEXT)                        004  LM00026
 03310 CLS +0 50200 0 03222    03311 STO +0 60100 0 05207    03312 CLS +0 50200 0 03222    03313 STO +0 60100 0 05210   
 03314 TSX +0 07400 4 00002    03315 TXH +3 00000 0 03251    03316 TXH +3 00000 0 00111    03317 TXH +3 00000 0 00110   
 03320 TXH +3 00000 0 00117    03321 TXH +3 00000 0 05210    03322 TXH +3 00000 0 05207    03323 TXH +3 00000 0 00055   
                 TRANSFER TO WHEN                                                   005  LM00027
 03324 TRA +0 02000 0 00064                                                                                             
      NEXT       PRNTER.(61K)                                                       006  LM00028
 03325 TSX +0 07400 4 00013    03326 TXH +3 00000 0 03240                                                               
                   EXECUTE BRAKE.                                                   007  LM00029
 03327 TSX +0 07400 4 00004                                                                                             
                   TRANSFER TO OUT                                                  008  LM00030
 03330 TRA +0 02000 0 00057                                                                                             
      WHEN       WHENEVER A.E.3,TRANSFER TO DD                                      009  LM00031
 03331 CLA +0 50000 0 00112    03332 SUB +0 40200 0 03225    03333 TNZ -0 10000 0 03335    03334 TRA +0 02000 0 00040   
                 WHENEVER A(3).E.$(FULL)$                                           010  LM00032
 03335 CLA +0 50000 0 00107    03336 SUB +0 40200 0 03260    03337 TNZ -0 10000 0 03352                                 
                   EXECUTE FULMD.                                                   011  LM00033
 03340 TSX +0 07400 4 00026                                                                                             
                   FULL=5                                                           012  LM00034
 03341 CLA +0 50000 0 03227    03342 STO +0 60100 0 01045                                                               
                   WHENEVER A.E.4,TRANSFER TO DD                                    013  LM00035
 03343 CLA +0 50000 0 00112    03344 SUB +0 40200 0 03226    03345 TNZ -0 10000 0 03347    03346 TRA +0 02000 0 00040   
                 N=4                                                                014  LM00036
 03347 CLA +0 50000 0 03226    03350 STO +0 60100 0 03206                                                               
                 OTHERWISE                                                          015  LM00037
 03351 TRA +0 02000 0 03354                                                                                             
                   N=3                                                              016  LM00038
 03352 CLA +0 50000 0 03225    03353 STO +0 60100 0 03206                                                               
                 END OF CONDITIONAL                                                 017  LM00039
                 WHENEVER TDEC.(A(N)).E.0, EXECUTE ERR2.(A(N))                      018  LM00040
 03354 CLA +0 50000 0 03206    03355 SUB +0 40200 0 03356    03356 TXH +3 00000 0 00112    03357 STA +0 62100 0 03361   
 03360 TSX +0 07400 4 00021    03361 TXH +3 00000 0 00000    03362 SUB +0 40200 0 03222    03363 TNZ -0 10000 0 03372   
 03364 CLA +0 50000 0 03206    03365 SUB +0 40200 0 03366    03366 TXH +3 00000 0 00112    03367 STA +0 62100 0 03371   
 03370 TSX +0 07400 4 00025    03371 TXH +3 00000 0 00000                                                               
                 R=BCDEC.(A(N))                                                     019  LM00041
 03372 CLA +0 50000 0 03206    03373 SUB +0 40200 0 03374    03374 TXH +3 00000 0 00112    03375 STA +0 62100 0 03377   
 03376 TSX +0 07400 4 00000    03377 TXH +3 00000 0 00000    03400 STO +0 60100 0 03213                                 
                 WHENEVER R.E.0, R=1                                                020  LM00042
 03401 CLA +0 50000 0 03213    03402 SUB +0 40200 0 03222    03403 TNZ -0 10000 0 03406    03404 CLA +0 50000 0 03223   
 03405 STO +0 60100 0 03213                                                                                             
                 LN=ZEL.(A(N))                                                      021  LM00043
 03406 CLA +0 50000 0 03206    03407 SUB +0 40200 0 03410    03410 TXH +3 00000 0 00112    03411 STA +0 62100 0 03413   
 03412 TSX +0 07400 4 00024    03413 TXH +3 00000 0 00000    03414 STO +0 60100 0 03125                                 
                 WHENEVER A.E.N+1, TRANSFER TO DD                                   022  LM00044
 03415 CLA +0 50000 0 03206    03416 ADD +0 40000 0 03223    03417 CHS +0 76000 0 00002    03420 ADD +0 40000 0 00112   
 03421 TNZ -0 10000 0 03423    03422 TRA +0 02000 0 00040                                                               
                 WHENEVER A(N+1).E.$(FULL)$                                         023  LM00045
 03423 CLA +0 50000 0 03206    03424 ADD +0 40000 0 03223    03425 PAX +0 73400 1 00000    03426 CLA +0 50000 1 00112   
 03427 SUB +0 40200 0 03260    03430 TNZ -0 10000 0 03435                                                               
                   EXECUTE FULMD.                                                   024  LM00046
 03431 TSX +0 07400 4 00026                                                                                             
                   FULL=5                                                           025  LM00047
 03432 CLA +0 50000 0 03227    03433 STO +0 60100 0 01045                                                               
                   TRANSFER TO DD                                                   026  LM00048
 03434 TRA +0 02000 0 00040                                                                                             
                 END OF CONDITIONAL                                                 027  LM00049
                 WHENEVER A(N+1).E.$  THRU$                                         028  LM00050
 03435 CLA +0 50000 0 03206    03436 ADD +0 40000 0 03223    03437 PAX +0 73400 1 00000    03440 CLA +0 50000 1 00112   
 03441 SUB +0 40200 0 03257    03442 TNZ -0 10000 0 03447                                                               
                   FIX=0                                                            029  LM00051
 03443 CLA +0 50000 0 03222    03444 STO +0 60100 0 01043                                                               
                   TRANSFER TO GG                                                   030  LM00052
 03445 TRA +0 02000 0 00045                                                                                             
                 OR WHENEVER A(N+1).E.$    TO$                                      031  LM00053
 03446 TRA +0 02000 0 03545    03447 CLA +0 50000 0 03206    03450 ADD +0 40000 0 03223    03451 PAX +0 73400 1 00000   
 03452 CLA +0 50000 1 00112    03453 SUB +0 40200 0 03255    03454 TNZ -0 10000 0 03545                                 
      GG           CONTINUE                                                         032  LM00054
                   WHENEVER A.GE.N+3                                                033  LM00055
 03455 CLA +0 50000 0 03206    03456 ADD +0 40000 0 03225    03457 CHS +0 76000 0 00002    03460 ADD +0 40000 0 00112   
 03461 TZE +0 10000 0 03463    03462 TMI -0 12000 0 03513                                                               
                     WHENEVER TDEC.(A(N+2)).E.0, EXECUTE ERR2.(A(N+2))              034  LM00056
 03463 CLA +0 50000 0 03206    03464 ADD +0 40000 0 03224    03465 SUB +0 40200 0 03466    03466 TXH +3 00000 0 00112   
 03467 STA +0 62100 0 03471    03470 TSX +0 07400 4 00021    03471 TXH +3 00000 0 00000    03472 SUB +0 40200 0 03222   
 03473 TNZ -0 10000 0 03503    03474 CLA +0 50000 0 03206    03475 ADD +0 40000 0 03224    03476 SUB +0 40200 0 03477   
 03477 TXH +3 00000 0 00112    03500 STA +0 62100 0 03502    03501 TSX +0 07400 4 00025    03502 TXH +3 00000 0 00000   
                     L1=ZEL.(A(N+2))                                                035  LM00057
 03503 CLA +0 50000 0 03206    03504 ADD +0 40000 0 03224    03505 SUB +0 40200 0 03506    03506 TXH +3 00000 0 00112   
 03507 STA +0 62100 0 03511    03510 TSX +0 07400 4 00024    03511 TXH +3 00000 0 00000    03512 STO +0 60100 0 03123   
                   END OF CONDITIONAL                                               036  LM00058
                   D=N+2                                                            037  LM00059
 03513 CLA +0 50000 0 03206    03514 ADD +0 40000 0 03224    03515 STO +0 60100 0 01031                                 
                   WHENEVER L1.L.LN                                                 038  LM00060
 03516 CLA +0 50000 0 03123    03517 SUB +0 40200 0 03125    03520 TZE +0 10000 0 03536    03521 TPL +0 12000 0 03536   
                     MES2=A(N)                                                      039  LM00061
 03522 LXA +0 53400 2 03206    03523 CLA +0 50000 2 00112    03524 STO +0 60100 0 03144                                 
                     MES2(2)=A(N+2)                                                 040  LM00062
 03525 CLA +0 50000 0 03206    03526 ADD +0 40000 0 03224    03527 PAX +0 73400 2 00000    03530 CLA +0 50000 2 00112   
 03531 STO +0 60100 0 03142                                                                                             
                     EXECUTE PRNTP.(MES2)                                           041  LM00063
 03532 TSX +0 07400 4 00015    03533 TXH +3 00000 0 03144                                                               
                     EXECUTE BRAKE.                                                 042  LM00064
 03534 TSX +0 07400 4 00004                                                                                             
                     TRANSFER TO OUT                                                043  LM00065
 03535 TRA +0 02000 0 00057                                                                                             
                   END OF CONDITIONAL                                               044  LM00066
                   WHENEVER A.LE.N+3, TRANSFER TO DD                                045  LM00067
 03536 CLA +0 50000 0 03206    03537 ADD +0 40000 0 03225    03540 CHS +0 76000 0 00002    03541 ADD +0 40000 0 00112   
 03542 TZE +0 10000 0 03544    03543 TPL +0 12000 0 03545    03544 TRA +0 02000 0 00040                                 
                 END OF CONDITIONAL                                                 046  LM00068
                 MINUS=0                                                            047  LM00069
 03545 CLA +0 50000 0 03222    03546 STO +0 60100 0 03201                                                               
                 THROUGH EE, FOR E=D+1,1,E.E.A                                      048  LM00070
 03547 CLA +0 50000 0 01031    03550 ADD +0 40000 0 03223    03551 STO +0 60100 0 01041    03552 TRA +0 02000 0 03556   
 03553 CLA +0 50000 0 01041    03554 ADD +0 40000 0 03223    03555 STO +0 60100 0 01041    03556 CLA +0 50000 0 01041   
 03557 SUB +0 40200 0 00112    03560 TZE +0 10000 0 03666                                                               
                 WHENEVER A(E).E.$   TAB$,TRANSFER TO QBMP                          049  LM00071
 03561 LXA +0 53400 1 01041    03562 CLA +0 50000 1 00112    03563 SUB +0 40200 0 03256    03564 TNZ -0 10000 0 03566   
 03565 TRA +0 02000 0 00062                                                                                             
                 WHENEVER A(E).E.$(FULL)$                                           050  LM00072
 03566 LXA +0 53400 1 01041    03567 CLA +0 50000 1 00112    03570 SUB +0 40200 0 03260    03571 TNZ -0 10000 0 03601   
                 EXECUTE FULMD.                                                     051  LM00073
 03572 TSX +0 07400 4 00026                                                                                             
                 MINUS=MINUS+1                                                      052  LM00074
 03573 CLA +0 50000 0 03201    03574 ADD +0 40000 0 03223    03575 STO +0 60100 0 03201                                 
                 FULL=5                                                             053  LM00075
 03576 CLA +0 50000 0 03227    03577 STO +0 60100 0 01045                                                               
                 TRANSFER TO EE                                                     054  LM00076
 03600 TRA +0 02000 0 00041                                                                                             
                 END OF CONDITIONAL                                                 055  LM00077
                 WHENEVER TDEC.(A(E)).E.0,EXECUTE ERR2.(A(E))                       056  LM00078
 03601 CLA +0 50000 0 01041    03602 SUB +0 40200 0 03603    03603 TXH +3 00000 0 00112    03604 STA +0 62100 0 03606   
 03605 TSX +0 07400 4 00021    03606 TXH +3 00000 0 00000    03607 SUB +0 40200 0 03222    03610 TNZ -0 10000 0 03617   
 03611 CLA +0 50000 0 01041    03612 SUB +0 40200 0 03613    03613 TXH +3 00000 0 00112    03614 STA +0 62100 0 03616   
 03615 TSX +0 07400 4 00025    03616 TXH +3 00000 0 00000                                                               
                 EDIT=1                                                             057  LM00079
 03617 CLA +0 50000 0 03223    03620 STO +0 60100 0 01032                                                               
                 C=BCDEC.(A(E))                                                     058  LM00080
 03621 CLA +0 50000 0 01041    03622 SUB +0 40200 0 03623    03623 TXH +3 00000 0 00112    03624 STA +0 62100 0 03626   
 03625 TSX +0 07400 4 00000    03626 TXH +3 00000 0 00000    03627 STO +0 60100 0 01026                                 
                 C(E-D-MINUS)=C                                                     059  LM00081
 03630 CLA +0 50000 0 01041    03631 SUB +0 40200 0 01031    03632 SUB +0 40200 0 03201    03633 PAX +0 73400 1 00000   
 03634 CLA +0 50000 0 01026    03635 STO +0 60100 1 01026                                                               
                 WHENEVER XMOD.(E-D-MINUS,2).E.1,C(E-D-MINUS+1)=C                   060  LM00082
 03636 CLA +0 50000 0 01041    03637 SUB +0 40200 0 01031    03640 SUB +0 40200 0 03201    03641 STO +0 60100 0 05210   
 03642 TSX +0 07400 4 00023    03643 TXH +3 00000 0 05210    03644 TXH +3 00000 0 03224    03645 SUB +0 40200 0 03223   
 03646 TNZ -0 10000 0 03656    03647 CLA +0 50000 0 01041    03650 SUB +0 40200 0 01031    03651 SUB +0 40200 0 03201   
 03652 ADD +0 40000 0 03223    03653 PAX +0 73400 1 00000    03654 CLA +0 50000 0 01026    03655 STO +0 60100 1 01026   
                 TRANSFER TO EE                                                     061  LM00083
 03656 TRA +0 02000 0 00041                                                                                             
      QBMP       TBCT=TBCT+1                                                        062  LM00084
 03657 CLA +0 50000 0 03215    03660 ADD +0 40000 0 03223    03661 STO +0 60100 0 03215                                 
                 MINUS=MINUS+1                                                      063  LM00085
 03662 CLA +0 50000 0 03201    03663 ADD +0 40000 0 03223    03664 STO +0 60100 0 03201                                 
      EE         CONTINUE                                                           064  LM00086
 03665 TRA +0 02000 0 03553                                                                                             
      DD         CONTINUE                                                           065  LM00087
                 EXECUTE SETBRK.(FF1)                                               066  LM00090
 03666 TSX +0 07400 4 00017    03667 TXH +3 00000 0 00043                                                               
                 WHENEVER R.LE.1.AND.D.E.3.AND.MES3.E.0                             067  LM00091
 03670 CLA +0 50000 0 03156    03671 SUB +0 40200 0 03222    03672 TNZ -0 10000 0 03731    03673 CLA +0 50000 0 01031   
 03674 SUB +0 40200 0 03225    03675 TNZ -0 10000 0 03731    03676 CLA +0 50000 0 03213    03677 SUB +0 40200 0 03223   
 03700 TZE +0 10000 0 03702    03701 TPL +0 12000 0 03731                                                               
                 KK(0)=575757575755K                                                068  LM00092
 03702 CLA +0 50000 0 03252    03703 STO +0 60100 0 02100                                                               
                 KK(1)=A(1)                                                         069  LM00093
 03704 CLA +0 50000 0 00111    03705 STO +0 60100 0 02077                                                               
                 KK(2)=575757575760K                                                070  LM00094
 03706 CLA +0 50000 0 03253    03707 STO +0 60100 0 02076                                                               
                 KK(3)=A(2)                                                         071  LM00095
 03710 CLA +0 50000 0 00110    03711 STO +0 60100 0 02075                                                               
                 KK(4)=606060606060K                                                072  LM00096
 03712 CLA +0 50000 0 03254    03713 STO +0 60100 0 02074                                                               
                 KK(6)=KK(2)                                                        073  LM00097
 03714 CLA +0 50000 0 02076    03715 STO +0 60100 0 02072                                                               
                 GETTM.(KK(5),KK(7))                                                074  LM00098
 03716 TSX +0 07400 4 00010    03717 TXH +3 00000 0 02073    03720 TXH +3 00000 0 02071                                 
                 KK(8)=KK(0)                                                        075  LM00099
 03721 CLA +0 50000 0 02100    03722 STO +0 60100 0 02070                                                               
                 KK(9)=575757575755K                                                076  LM00100
 03723 CLA +0 50000 0 03252    03724 STO +0 60100 0 02067                                                               
                 KK(10)=FENCE                                                       077  LM00101
 03725 CLA +0 50000 0 01042    03726 STO +0 60100 0 02066                                                               
                 PRNTPC.(KK)                                                        078  LM00102
 03727 TSX +0 07400 4 00014    03730 TXH +3 00000 0 02100                                                               
                 END OF CONDITIONAL                                                 079  LM00103
                 THROUGH BB, FOR B=1,1,FIX.E.0.AND.B.G.R                            080  LM00104
 03731 CLA +0 50000 0 03223    03732 STO +0 60100 0 00116    03733 TRA +0 02000 0 03737    03734 CLA +0 50000 0 00116   
 03735 ADD +0 40000 0 03223    03736 STO +0 60100 0 00116    03737 CLA +0 50000 0 00116    03740 SUB +0 40200 0 03213   
 03741 TZE +0 10000 0 03746    03742 TMI -0 12000 0 03746    03743 CLA +0 50000 0 01043    03744 SUB +0 40200 0 03222   
 03745 TZE +0 10000 0 04017                                                                                             
                 BFREAD.(A(1),A(2),K(NAX)...1,FF,QEOFCT,QERR)                       081  LM00105
 03746 CLA +0 50000 0 03204    03747 SUB +0 40200 0 03750    03750 TXH +3 00000 0 02305    03751 STA +0 62100 0 03755   
 03752 TSX +0 07400 4 00003    03753 TXH +3 00000 0 00111    03754 TXH +3 00000 0 00110    03755 TIX +2 03223 0 00000   
 03756 TXH +3 00000 0 00044    03757 TXH +3 00000 0 03211    03760 TXH +3 00000 0 00063                                 
                 WHENEVER K(NAX).A.MASK1.NE.MASK1                                   082  LM00106
 03761 LXA +0 53400 1 03204    03762 CAL -0 50000 1 02305    03763 ANA -0 32000 0 03127    03764 SLW +0 60200 0 05210   
 03765 CLA +0 50000 0 05210    03766 SUB +0 40200 0 03127    03767 TZE +0 10000 0 03772                                 
                   TRANSFER TO LNUM                                                 083  LM00107
 03770 TRA +0 02000 0 00047                                                                                             
                 OTHERWISE                                                          084  LM00108
 03771 TRA +0 02000 0 03775                                                                                             
                     EXECUTE INMK.                                                  085  LM00109
 03772 TSX +0 07400 4 00030                                                                                             
                 FIX=0                                                              086  LM00110
 03773 CLA +0 50000 0 03222    03774 STO +0 60100 0 01043                                                               
                 END OF CONDITIONAL                                                 087  LM00111
                 TRANSFER TO BB                                                     088  LM00112
 03775 TRA +0 02000 0 00034                                                                                             
      LNUM       BFREAD.(A(1),A(2),K(21)...13,FF,QEOFCT,QERR)                       089  LM00114
 03776 TSX +0 07400 4 00003    03777 TXH +3 00000 0 00111    04000 TXH +3 00000 0 00110    04001 TIX +2 03231 0 02260   
 04002 TXH +3 00000 0 00044    04003 TXH +3 00000 0 03211    04004 TXH +3 00000 0 00063                                 
                 WHENEVER GLBLN.(W).GE.LN.AND.FIX.E.1,TRANSFER TO JJ                090  LM00115
 04005 CLA +0 50000 0 01043    04006 SUB +0 40200 0 03223    04007 TNZ -0 10000 0 04016    04010 TSX +0 07400 4 00027   
 04011 TXH +3 00000 0 03220    04012 SUB +0 40200 0 03125    04013 TZE +0 10000 0 04015    04014 TMI -0 12000 0 04016   
 04015 TRA +0 02000 0 00046                                                                                             
      BB         CONTINUE                                                           091  LM00116
 04016 TRA +0 02000 0 03734                                                                                             
      JJ         CONTINUE                                                           092  LM00117
                 WHENEVER GLBLN.(W).G.L1.AND.FIX.E.1,TRANSFER TO FF                 093  LM00118
 04017 CLA +0 50000 0 01043    04020 SUB +0 40200 0 03223    04021 TNZ -0 10000 0 04030    04022 TSX +0 07400 4 00027   
 04023 TXH +3 00000 0 03220    04024 SUB +0 40200 0 03123    04025 TZE +0 10000 0 04030    04026 TMI -0 12000 0 04030   
 04027 TRA +0 02000 0 00044                                                                                             
                 R1=BCDEC.(L1)                                                      094  LM00120
 04030 TSX +0 07400 4 00000    04031 TXH +3 00000 0 03123    04032 STO +0 60100 0 03212                                 
                 WHENEVER EDIT.E.0                                                  095  LM00121
 04033 CLA +0 50000 0 01032    04034 SUB +0 40200 0 03222    04035 TNZ -0 10000 0 04240                                 
                 THROUGH LL,FOR L=R,1,L.G.R1.AND.FIX.E.0                            096  LM00122
 04036 CLA +0 50000 0 03213    04037 STO +0 60100 0 03126    04040 TRA +0 02000 0 04044    04041 CLA +0 50000 0 03126   
 04042 ADD +0 40000 0 03223    04043 STO +0 60100 0 03126    04044 CLA +0 50000 0 01043    04045 SUB +0 40200 0 03222   
 04046 TNZ -0 10000 0 04053    04047 CLA +0 50000 0 03126    04050 SUB +0 40200 0 03212    04051 TZE +0 10000 0 04053   
 04052 TPL +0 12000 0 04237                                                                                             
                 WHENEVER FIX.E.0.AND.K(NAX).A.MASK1.E.MASK1,TRANSFER TO MARK1      097  LM00123
 04053 LXA +0 53400 1 03204    04054 CAL -0 50000 1 02305    04055 ANA -0 32000 0 03127    04056 SLW +0 60200 0 05210   
 04057 CLA +0 50000 0 05210    04060 SUB +0 40200 0 03127    04061 TNZ -0 10000 0 04066    04062 CLA +0 50000 0 01043   
 04063 SUB +0 40200 0 03222    04064 TNZ -0 10000 0 04066    04065 TRA +0 02000 0 00050                                 
                 WHENEVER FIX.E.0                                                   098  LM00124
 04066 CLA +0 50000 0 01043    04067 SUB +0 40200 0 03222    04070 TNZ -0 10000 0 04100                                 
                   ICD=-1                                                           099  LM00125
 04071 CLS +0 50200 0 03223    04072 STO +0 60100 0 01050                                                               
                   LINC=12                                                          100  LM00126
 04073 CLA +0 50000 0 03230    04074 STO +0 60100 0 03124                                                               
                   EGB=22                                                           101  LM00127
 04075 CLA +0 50000 0 03233    04076 STO +0 60100 0 01033                                                               
                 TRANSFER TO MARK2                                                  102  LM00128
 04077 TRA +0 02000 0 00051                                                                                             
                 END OF CONDITIONAL                                                 103  LM00129
                 KK(0)=K(10)                                                        104  LM00130
 04100 CLA +0 50000 0 02273    04101 STO +0 60100 0 02100                                                               
                 KK(1)=K(9)                                                         105  LM00131
 04102 CLA +0 50000 0 02274    04103 STO +0 60100 0 02077                                                               
                 ZERO=2                                                             106  LM00132
 04104 CLA +0 50000 0 03224    04105 STO +0 60100 0 03221                                                               
                 ICD=1                                                              107  LM00133
 04106 CLA +0 50000 0 03223    04107 STO +0 60100 0 01050                                                               
                 LINC=12                                                            108  LM00134
 04110 CLA +0 50000 0 03230    04111 STO +0 60100 0 03124                                                               
                 EGB=22                                                             109  LM00135
 04112 CLA +0 50000 0 03233    04113 STO +0 60100 0 01033                                                               
                 TRANSFER TO MARK2                                                  110  LM00136
 04114 TRA +0 02000 0 00051                                                                                             
      MARK1      ICD=-1                                                             111  LM00137
 04115 CLS +0 50200 0 03223    04116 STO +0 60100 0 01050                                                               
                 LINC=CLIN                                                          112  LM00138
 04117 CLA +0 50000 0 01002    04120 STO +0 60100 0 03124                                                               
                 EGB=BEG                                                            113  LM00139
 04121 CLA +0 50000 0 00113    04122 STO +0 60100 0 01033                                                               
      MARK2      PRNCT=(36/CHAR)*LINC-1                                             114  LM00140
 04123 LDQ +0 56000 0 03235    04124 PXD -0 75400 0 00000    04125 LLS +0 76300 0 00000    04126 DVP +0 22100 0 01000   
 04127 MPY +0 20000 0 03124    04130 XCA +0 13100 0 00000    04131 SUB +0 40200 0 03223    04132 STO +0 60100 0 03210   
                 DEN1=NAX-LINC                                                      115  LM00141
 04133 CLA +0 50000 0 03204    04134 SUB +0 40200 0 03124    04135 STO +0 60100 0 01027                                 
                 UNPKNR.(K(EGB)...K(DEN1),KCHOS...KCHOS(PRNCT),CHAR)                116  LM00142
 04136 CLA +0 50000 0 03210    04137 SUB +0 40200 0 04140    04140 TXH +3 00000 0 01670    04141 ALS +0 76700 0 00022   
 04142 STD +0 62200 0 04156    04143 CLA +0 50000 0 01027    04144 SUB +0 40200 0 04145    04145 TXH +3 00000 0 02305   
 04146 ALS +0 76700 0 00022    04147 STD +0 62200 0 04155    04150 CLA +0 50000 0 01033    04151 SUB +0 40200 0 04152   
 04152 TXH +3 00000 0 02305    04153 STA +0 62100 0 04155    04154 TSX +0 07400 4 00022    04155 TIX +2 00000 0 00000   
 04156 TIX +2 00000 0 01670    04157 TXH +3 00000 0 01000                                                               
                 EXECUTE PRYNT.                                                     117  LM00143
 04160 TSX +0 07400 4 00032                                                                                             
                 WHENEVER GLBLN.(W).GE.L1.AND.FIX.E.1,TRANSFER TO FF1               118  LM00144
 04161 CLA +0 50000 0 01043    04162 SUB +0 40200 0 03223    04163 TNZ -0 10000 0 04172    04164 TSX +0 07400 4 00027   
 04165 TXH +3 00000 0 03220    04166 SUB +0 40200 0 03123    04167 TZE +0 10000 0 04171    04170 TMI -0 12000 0 04172   
 04171 TRA +0 02000 0 00043                                                                                             
                 WHENEVER L.E.R1.AND.FIX.E.0,TRANSFER TO FF1                        119  LM00145
 04172 CLA +0 50000 0 01043    04173 SUB +0 40200 0 03222    04174 TNZ -0 10000 0 04201    04175 CLA +0 50000 0 03126   
 04176 SUB +0 40200 0 03212    04177 TNZ -0 10000 0 04201    04200 TRA +0 02000 0 00043                                 
                 BFREAD.(A(1),A(2),K(NAX)...1,FF1,QEOFCT,QERR)                      120  LM00146
 04201 CLA +0 50000 0 03204    04202 SUB +0 40200 0 04203    04203 TXH +3 00000 0 02305    04204 STA +0 62100 0 04210   
 04205 TSX +0 07400 4 00003    04206 TXH +3 00000 0 00111    04207 TXH +3 00000 0 00110    04210 TIX +2 03223 0 00000   
 04211 TXH +3 00000 0 00043    04212 TXH +3 00000 0 03211    04213 TXH +3 00000 0 00063                                 
                 WHENEVER K(NAX).A.MASK1.E.MASK1                                    121  LM00147
 04214 LXA +0 53400 1 03204    04215 CAL -0 50000 1 02305    04216 ANA -0 32000 0 03127    04217 SLW +0 60200 0 05210   
 04220 CLA +0 50000 0 05210    04221 SUB +0 40200 0 03127    04222 TNZ -0 10000 0 04227                                 
                 EXECUTE INMK.                                                      122  LM00148
 04223 TSX +0 07400 4 00030                                                                                             
                 FIX=0                                                              123  LM00149
 04224 CLA +0 50000 0 03222    04225 STO +0 60100 0 01043                                                               
                 OTHERWISE                                                          124  LM00150
 04226 TRA +0 02000 0 04236                                                                                             
                 BFREAD.(A(1),A(2),K(21)...13,FF1,QEOFCT,QERR)                      125  LM00151
 04227 TSX +0 07400 4 00003    04230 TXH +3 00000 0 00111    04231 TXH +3 00000 0 00110    04232 TIX +2 03231 0 02260   
 04233 TXH +3 00000 0 00043    04234 TXH +3 00000 0 03211    04235 TXH +3 00000 0 00063                                 
                 END OF CONDITIONAL                                                 126  LM00152
      LL         CONTINUE                                                           127  LM00153
 04236 TRA +0 02000 0 04041                                                                                             
                 OTHERWISE                                                          128  LM00154
 04237 TRA +0 02000 0 04427                                                                                             
                 ACT=A-D-MINUS                                                      129  LM00155
 04240 CLA +0 50000 0 00112    04241 SUB +0 40200 0 01031    04242 SUB +0 40200 0 03201    04243 STO +0 60100 0 00065   
                 ACT=ACT/2                                                          130  LM00156
 04244 LDQ +0 56000 0 00065    04245 PXD -0 75400 0 00000    04246 LLS +0 76300 0 00000    04247 DVP +0 22100 0 03224   
 04250 STQ -0 60000 0 00065                                                                                             
                 THROUGH RR,FOR L=R,1,L.G.R1.AND.FIX.E.0                            131  LM00157
 04251 CLA +0 50000 0 03213    04252 STO +0 60100 0 03126    04253 TRA +0 02000 0 04257    04254 CLA +0 50000 0 03126   
 04255 ADD +0 40000 0 03223    04256 STO +0 60100 0 03126    04257 CLA +0 50000 0 01043    04260 SUB +0 40200 0 03222   
 04261 TNZ -0 10000 0 04266    04262 CLA +0 50000 0 03126    04263 SUB +0 40200 0 03212    04264 TZE +0 10000 0 04266   
 04265 TPL +0 12000 0 04427                                                                                             
                 WHENEVER FIX.E.0.AND.K(NAX).A.MASK1.E.MASK1,TRANSFER TO MARK       132  LM00158
 04266 LXA +0 53400 1 03204    04267 CAL -0 50000 1 02305    04270 ANA -0 32000 0 03127    04271 SLW +0 60200 0 05210   
 04272 CLA +0 50000 0 05210    04273 SUB +0 40200 0 03127    04274 TNZ -0 10000 0 04301    04275 CLA +0 50000 0 01043   
 04276 SUB +0 40200 0 03222    04277 TNZ -0 10000 0 04301    04300 TRA +0 02000 0 00052                                 
                 UNPKNR.(K(22)...K(9),KUNP(1)...KUNP(84),CHAR)                      133  LM00159
 04301 TSX +0 07400 4 00022    04302 TIX +2 02274 0 02257    04303 TIX +2 02776 0 03121    04304 TXH +3 00000 0 01000   
      COMN       ARYCT=-1                                                           134  LM00160
 04305 CLS +0 50200 0 03223    04306 STO +0 60100 0 00066                                                               
                 EXECUTE PKOFF.                                                     135  LM00161
 04307 TSX +0 07400 4 00031                                                                                             
                 PRNCT=ARYCT-TBCT                                                   136  LM00162
 04310 CLA +0 50000 0 00066    04311 SUB +0 40200 0 03215    04312 STO +0 60100 0 03210                                 
                 EXECUTE PRYNT.                                                     137  LM00163
 04313 TSX +0 07400 4 00032                                                                                             
                 TRANSFER TO CHECK                                                  138  LM00164
 04314 TRA +0 02000 0 00035                                                                                             
      MARK       NED=(36/CHAR)*CLIN                                                 139  LM00165
 04315 LDQ +0 56000 0 03235    04316 PXD -0 75400 0 00000    04317 LLS +0 76300 0 00000    04320 DVP +0 22100 0 01000   
 04321 MPY +0 20000 0 01002    04322 STQ -0 60000 0 03205                                                               
                 DEN=NAX-CLIN                                                       140  LM00166
 04323 CLA +0 50000 0 03204    04324 SUB +0 40200 0 01002    04325 STO +0 60100 0 01030                                 
                 UNPKNR.(K(BEG)...K(DEN),KUNP(1)...KUNP(NED),CHAR)                  141  LM00167
 04326 CLA +0 50000 0 03205    04327 SUB +0 40200 0 04330    04330 TXH +3 00000 0 03122    04331 ALS +0 76700 0 00022   
 04332 STD +0 62200 0 04346    04333 CLA +0 50000 0 01030    04334 SUB +0 40200 0 04335    04335 TXH +3 00000 0 02305   
 04336 ALS +0 76700 0 00022    04337 STD +0 62200 0 04345    04340 CLA +0 50000 0 00113    04341 SUB +0 40200 0 04342   
 04342 TXH +3 00000 0 02305    04343 STA +0 62100 0 04345    04344 TSX +0 07400 4 00022    04345 TIX +2 00000 0 00000   
 04346 TIX +2 00000 0 03121    04347 TXH +3 00000 0 01000                                                               
                 TRANSFER TO COMN                                                   142  LM00168
 04350 TRA +0 02000 0 00037                                                                                             
      CHECK      WHENEVER GLBLN.(W).GE.L1.AND.FIX.E.1,TRANSFER TO FF1               143  LM00169
 04351 CLA +0 50000 0 01043    04352 SUB +0 40200 0 03223    04353 TNZ -0 10000 0 04362    04354 TSX +0 07400 4 00027   
 04355 TXH +3 00000 0 03220    04356 SUB +0 40200 0 03123    04357 TZE +0 10000 0 04361    04360 TMI -0 12000 0 04362   
 04361 TRA +0 02000 0 00043                                                                                             
                 WHENEVER L.E.R1.AND.FIX.E.0,TRANSFER TO FF1                        144  LM00170
 04362 CLA +0 50000 0 01043    04363 SUB +0 40200 0 03222    04364 TNZ -0 10000 0 04371    04365 CLA +0 50000 0 03126   
 04366 SUB +0 40200 0 03212    04367 TNZ -0 10000 0 04371    04370 TRA +0 02000 0 00043                                 
                 BFREAD.(A(1),A(2),K(NAX)...1,FF1,QEOFCT,QERR)                      145  LM00171
 04371 CLA +0 50000 0 03204    04372 SUB +0 40200 0 04373    04373 TXH +3 00000 0 02305    04374 STA +0 62100 0 04400   
 04375 TSX +0 07400 4 00003    04376 TXH +3 00000 0 00111    04377 TXH +3 00000 0 00110    04400 TIX +2 03223 0 00000   
 04401 TXH +3 00000 0 00043    04402 TXH +3 00000 0 03211    04403 TXH +3 00000 0 00063                                 
                 WHENEVER K(NAX).A.MASK1.E.MASK1                                    146  LM00172
 04404 LXA +0 53400 1 03204    04405 CAL -0 50000 1 02305    04406 ANA -0 32000 0 03127    04407 SLW +0 60200 0 05210   
 04410 CLA +0 50000 0 05210    04411 SUB +0 40200 0 03127    04412 TNZ -0 10000 0 04417                                 
                 EXECUTE INMK.                                                      147  LM00173
 04413 TSX +0 07400 4 00030                                                                                             
                 FIX=0                                                              148  LM00174
 04414 CLA +0 50000 0 03222    04415 STO +0 60100 0 01043                                                               
                 OTHERWISE                                                          149  LM00175
 04416 TRA +0 02000 0 04426                                                                                             
                 BFREAD.(A(1),A(2),K(21)...13,FF1,QEOFCT,QERR)                      150  LM00176
 04417 TSX +0 07400 4 00003    04420 TXH +3 00000 0 00111    04421 TXH +3 00000 0 00110    04422 TIX +2 03231 0 02260   
 04423 TXH +3 00000 0 00043    04424 TXH +3 00000 0 03211    04425 TXH +3 00000 0 00063                                 
                 END OF CONDITIONAL                                                 151  LM00177
      RR         CONTINUE                                                           152  LM00178
 04426 TRA +0 02000 0 04254                                                                                             
                 END OF CONDITIONAL                                                 153  LM00179
      QERR       PRNTER.(61K)                                                       154  LM00183
 04427 TSX +0 07400 4 00013    04430 TXH +3 00000 0 03240                                                               
                 TRANSFER TO FF1                                                    155  LM00184
 04431 TRA +0 02000 0 00043                                                                                             
      FF         CONTINUE                                                           156  LM00185
                 EOF=A(3)                                                           157  LM00186
 04432 CLA +0 50000 0 00107    04433 STO +0 60100 0 01040                                                               
                 EXECUTE PRNTP.(EOF)                                                158  LM00187
 04434 TSX +0 07400 4 00015    04435 TXH +3 00000 0 01040                                                               
      FF1        BFCLOS.(A(1),A(2),OUT)                                             159  LM00188
 04436 TSX +0 07400 4 00001    04437 TXH +3 00000 0 00111    04440 TXH +3 00000 0 00110    04441 TXH +3 00000 0 00057   
                 EXECUTE SAVBRK.                                                    160  LM00189
 04442 TSX +0 07400 4 00016                                                                                             
      OUT        EXECUTE CHNCOM.(0)                                                 161  LM00190
 04443 TSX +0 07400 4 00005    04444 TXH +3 00000 0 03222                                                               
      ERR1       EXECUTE PRNTP.(MES)                                                162  LM00192
 04445 TSX +0 07400 4 00015    04446 TXH +3 00000 0 03177                                                               
                 TRANSFER TO OUT                                                    163  LM00193
 04447 TRA +0 02000 0 00057                                                                                             
                 INTERNAL FUNCTION(Z)                                               164  LM00197
 04450 TRA +0 02000 0 04474                                                                                             
                 ENTRY TO ERR2.                                                     165  LM00198
 04451 TRA +0 02000 0 04454    00025 TTR +0 02100 0 04452    04452 SXA +0 63400 2 04462    04453 TSX +0 07400 2 04462   
                 MES3=Z                                                             166  LM00199
 04454 CLA +0 50000 0 00024    04455 STO +0 60100 0 03156                                                               
                 EXECUTE PRNTP.(MES3)                                               167  LM00200
 04456 TSX +0 07400 4 00015    04457 TXH +3 00000 0 03156                                                               
                 TRANSFER TO DD                                                     168  LM00201
 04460 TRA +0 02000 0 00040                                                                                             
                 END OF FUNCTION                                                    169  LM00202
 04461 TSX +0 07400 4 00006    04462 TXH +3 00000 0 00000    04463 SXD -0 63400 1 04462    04464 SXA +0 63400 4 04470   
 04465 CLA +0 50000 4 00001    04466 STA +0 62100 0 04454    04467 TRA +0 02000 2 00001    04470 AXT +0 77400 4 00000   
 04471 LXA +0 53400 2 04462    04472 LXD -0 53400 1 04462    04473 TRA +0 02000 4 00001                                 
                 INTERNAL FUNCTION                                                  170  LM00204
 04474 TRA +0 02000 0 04524                                                                                             
                 ENTRY TO FULMD.                                                    171  LM00205
 04475 TRA +0 02000 0 04500    00026 TTR +0 02100 0 04476    04476 SXA +0 63400 2 04514    04477 TSX +0 07400 2 04514   
                 BLANK=006000600060K                                                172  LM00206
 04500 CLA +0 50000 0 03246    04501 STO +0 60100 0 00114                                                               
                 CHAR=12                                                            173  LM00207
 04502 CLA +0 50000 0 03230    04503 STO +0 60100 0 01000                                                               
                 WORD=3                                                             174  LM00208
 04504 CLA +0 50000 0 03225    04505 STO +0 60100 0 03217                                                               
                 NAX=132                                                            175  LM00209
 04506 CLA +0 50000 0 03244    04507 STO +0 60100 0 03204                                                               
                 BEG=131                                                            176  LM00210
 04510 CLA +0 50000 0 03243    04511 STO +0 60100 0 00113                                                               
                 FUNCTION RETURN                                                    177  LM00211
 04512 TRA +0 02000 0 04520                                                                                             
                 END OF FUNCTION                                                    178  LM00212
 04513 TSX +0 07400 4 00006    04514 TXH +3 00000 0 00000    04515 SXD -0 63400 1 04514    04516 SXA +0 63400 4 04520   
 04517 TRA +0 02000 2 00001    04520 AXT +0 77400 4 00000    04521 LXA +0 53400 2 04514    04522 LXD -0 53400 1 04514   
 04523 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  179  LM00214
 04524 TRA +0 02000 0 04562                                                                                             
                 ENTRY TO GLBLN.                                                    180  LM00215
 04525 TRA +0 02000 0 04530    00027 TTR +0 02100 0 04526    04526 SXA +0 63400 2 04551    04527 TSX +0 07400 2 04551   
                 W=(K(10).LS.12).V.(K(9).RS.24)                                     181  LM00216
 04530 CAL -0 50000 0 03234    04531 STA +0 62100 0 04533    04532 CAL -0 50000 0 02274    04533 LGR -0 76500 0 00000   
 04534 SLW +0 60200 0 04561    04535 CAL -0 50000 0 03230    04536 STA +0 62100 0 04540    04537 CAL -0 50000 0 02273   
 04540 ALS +0 76700 0 00000    04541 ORA -0 50100 0 04561    04542 SLW +0 60200 0 03220                                 
                 W=W.A.007777777777K                                                182  LM00217
 04543 CAL -0 50000 0 03220    04544 ANA -0 32000 0 03247    04545 SLW +0 60200 0 03220                                 
                 FUNCTION RETURN W                                                  183  LM00218
 04546 CLA +0 50000 0 03220    04547 TRA +0 02000 0 04555                                                               
                  END OF FUNCTION                                                   184  LM00219
 04550 TSX +0 07400 4 00006    04551 TXH +3 00000 0 00000    04552 SXD -0 63400 1 04551    04553 SXA +0 63400 4 04555   
 04554 TRA +0 02000 2 00001    04555 AXT +0 77400 4 00000    04556 LXA +0 53400 2 04551    04557 LXD -0 53400 1 04551   
 04560 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  185  LM00221
 04562 TRA +0 02000 0 04667                                                                                             
                 ENTRY TO INMK.                                                     186  LM00222
 04563 TRA +0 02000 0 04566    00030 TTR +0 02100 0 04564    04564 SXA +0 63400 2 04657    04565 TSX +0 07400 2 04657   
                 ZERO=0                                                             187  LM00223
 04566 CLA +0 50000 0 03222    04567 STO +0 60100 0 03221                                                               
                 CLIN=K(NAX).A.MASK2                                                188  LM00224
 04570 LXA +0 53400 1 03204    04571 CAL -0 50000 1 02305    04572 ANA -0 32000 0 03130    04573 SLW +0 60200 0 01002   
                 WHENEVER CLIN.G.NAX                                                189  LM00225
 04574 CLA +0 50000 0 01002    04575 SUB +0 40200 0 03204    04576 TZE +0 10000 0 04605    04577 TMI -0 12000 0 04605   
                   MOV=CLIN-NAX                                                     190  LM00226
 04600 CLA +0 50000 0 01002    04601 SUB +0 40200 0 03204    04602 STO +0 60100 0 03202                                 
                   CLIN=NAX                                                         191  LM00227
 04603 CLA +0 50000 0 03204    04604 STO +0 60100 0 01002                                                               
                 END OF CONDITIONAL                                                 192  LM00228
                 BFREAD.(A(1),A(2),K(BEG)...CLIN,FF1,QEOFCT,QERR)                   193  LM00229
 04605 CLA +0 50000 0 00113    04606 SUB +0 40200 0 04607    04607 TXH +3 00000 0 02305    04610 STA +0 62100 0 04614   
 04611 TSX +0 07400 4 00003    04612 TXH +3 00000 0 00111    04613 TXH +3 00000 0 00110    04614 TIX +2 01002 0 00000   
 04615 TXH +3 00000 0 00043    04616 TXH +3 00000 0 03211    04617 TXH +3 00000 0 00063                                 
      MOVNE      WHENEVER MOV.NE.0                                                  194  LM00230
 04620 CLA +0 50000 0 03202    04621 SUB +0 40200 0 03222    04622 TZE +0 10000 0 04655                                 
                 WHENEVER MOV.G.NAX                                                 195  LM00231
 04623 CLA +0 50000 0 03202    04624 SUB +0 40200 0 03204    04625 TZE +0 10000 0 04635    04626 TMI -0 12000 0 04635   
                   MV=NAX                                                           196  LM00232
 04627 CLA +0 50000 0 03204    04630 STO +0 60100 0 03203                                                               
                   MOV=MOV-NAX                                                      197  LM00233
 04631 CLA +0 50000 0 03202    04632 SUB +0 40200 0 03204    04633 STO +0 60100 0 03202                                 
                 OTHERWISE                                                          198  LM00234
 04634 TRA +0 02000 0 04641                                                                                             
                   MV=MOV                                                           199  LM00235
 04635 CLA +0 50000 0 03202    04636 STO +0 60100 0 03203                                                               
                   MOV=0                                                            200  LM00236
 04637 CLA +0 50000 0 03222    04640 STO +0 60100 0 03202                                                               
                 END OF CONDITIONAL                                                 201  LM00237
                 BFREAD.(A(1),A(2),KK(BEG)...MV,FF1,QEOFCT,QERR)                    202  LM00238
 04641 CLA +0 50000 0 00113    04642 SUB +0 40200 0 04643    04643 TXH +3 00000 0 02100    04644 STA +0 62100 0 04650   
 04645 TSX +0 07400 4 00003    04646 TXH +3 00000 0 00111    04647 TXH +3 00000 0 00110    04650 TIX +2 03203 0 00000   
 04651 TXH +3 00000 0 00043    04652 TXH +3 00000 0 03211    04653 TXH +3 00000 0 00063                                 
                 TRANSFER TO MOVNE                                                  203  LM00239
 04654 TRA +0 02000 0 00053                                                                                             
                 END OF CONDITIONAL                                                 204  LM00240
                 FUNCTION RETURN                                                    205  LM00241
 04655 TRA +0 02000 0 04663                                                                                             
                 END OF FUNCTION                                                    206  LM00242
 04656 TSX +0 07400 4 00006    04657 TXH +3 00000 0 00000    04660 SXD -0 63400 1 04657    04661 SXA +0 63400 4 04663   
 04662 TRA +0 02000 2 00001    04663 AXT +0 77400 4 00000    04664 LXA +0 53400 2 04657    04665 LXD -0 53400 1 04657   
 04666 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  207  LM00244
 04667 TRA +0 02000 0 05034                                                                                             
                 ENTRY TO PRYNT.                                                    208  LM00245
 04670 TRA +0 02000 0 04673    00032 TTR +0 02100 0 04671    04671 SXA +0 63400 2 05024    04672 TSX +0 07400 2 05024   
                 TOP=PRNCT                                                          209  LM00246
 04673 CLA +0 50000 0 03210    04674 STO +0 60100 0 03216                                                               
                 THROUGH LOOP,FOR IB=TOP,-1,IB.L.0                                  210  LM00247
 04675 CLA +0 50000 0 03216    04676 STO +0 60100 0 01047    04677 TRA +0 02000 0 04703    04700 CLS +0 50200 0 03223   
 04701 ADD +0 40000 0 01047    04702 STO +0 60100 0 01047    04703 CLA +0 50000 0 01047    04704 SUB +0 40200 0 03222   
 04705 TZE +0 10000 0 04707    04706 TMI -0 12000 0 04723                                                               
                 WHENEVER KCHOS(IB).NE.60K.AND.KCHOS(IB).NE.57K,                    211  LM00248
                1TRANSFER TO NBLK                                                   211  LM00249
 04707 LXA +0 53400 1 01047    04710 CLA +0 50000 1 01670    04711 SUB +0 40200 0 03236    04712 TZE +0 10000 0 04717   
 04713 CLA +0 50000 1 01670    04714 SUB +0 40200 0 03237    04715 TZE +0 10000 0 04717    04716 TRA +0 02000 0 00054   
      LOOP       PRNCT=PRNCT-1                                                      212  LM00250
 04717 CLA +0 50000 0 03210    04720 SUB +0 40200 0 03223    04721 STO +0 60100 0 03210    04722 TRA +0 02000 0 04700   
      NBLK       NUM=(PRNCT)/WORD+1+ZERO                                            213  LM00251
 04723 LDQ +0 56000 0 03210    04724 PXD -0 75400 0 00000    04725 LLS +0 76300 0 00000    04726 DVP +0 22100 0 03217   
 04727 XCA +0 13100 0 00000    04730 ADD +0 40000 0 03223    04731 ADD +0 40000 0 03221    04732 STO +0 60100 0 03207   
                 WHENEVER PRNCT.L.0                                                 214  LM00252
 04733 CLA +0 50000 0 03210    04734 SUB +0 40200 0 03222    04735 TZE +0 10000 0 04742    04736 TPL +0 12000 0 04742   
                   NUM=0                                                            215  LM00253
 04737 CLA +0 50000 0 03222    04740 STO +0 60100 0 03207                                                               
                   TRANSFER TO OMIT                                                 216  LM00254
 04741 TRA +0 02000 0 00056                                                                                             
                 END OF CONDITIONAL                                                 217  LM00255
                 PAKNR.(KCHOS...KCHOS(PRNCT),KK(ZERO)...KK(NUM-1),CHAR)             218  LM00256
 04742 CLA +0 50000 0 03207    04743 SUB +0 40200 0 03223    04744 SUB +0 40200 0 04745    04745 TXH +3 00000 0 02100   
 04746 ALS +0 76700 0 00022    04747 STD +0 62200 0 04763    04750 CLA +0 50000 0 03221    04751 SUB +0 40200 0 04752   
 04752 TXH +3 00000 0 02100    04753 STA +0 62100 0 04763    04754 CLA +0 50000 0 03210    04755 SUB +0 40200 0 04756   
 04756 TXH +3 00000 0 01670    04757 ALS +0 76700 0 00022    04760 STD +0 62200 0 04762    04761 TSX +0 07400 4 00012   
 04762 TIX +2 00000 0 01670    04763 TIX +2 00000 0 00000    04764 TXH +3 00000 0 01000                                 
      OMIT       KK(NUM)=575757575755K                                              219  LM00257
 04765 LXA +0 53400 1 03207    04766 CLA +0 50000 0 03252    04767 STO +0 60100 1 02100                                 
                 WHENEVER FLAG.E.1                                                  220  LM00258
 04770 CLA +0 50000 0 01044    04771 SUB +0 40200 0 03223    04772 TNZ -0 10000 0 05004                                 
                   KK(NUM)=FENCE                                                    221  LM00259
 04773 CLA +0 50000 0 01042    04774 STO +0 60100 1 02100                                                               
                   FLAG=0                                                           222  LM00260
 04775 CLA +0 50000 0 03222    04776 STO +0 60100 0 01044                                                               
                   WHENEVER FULL.E.5,SETFUL.                                        223  LM00261
 04777 CLA +0 50000 0 01045    05000 SUB +0 40200 0 03227    05001 TNZ -0 10000 0 05003    05002 TSX +0 07400 4 00020   
                   TRANSFER TO PC                                                   224  LM00262
 05003 TRA +0 02000 0 00060                                                                                             
                 END OF CONDITIONAL                                                 225  LM00263
                 KK(NUM+1)=FENCE                                                    226  LM00264
 05004 CLA +0 50000 0 03207    05005 ADD +0 40000 0 03223    05006 PAX +0 73400 1 00000    05007 CLA +0 50000 0 01042   
 05010 STO +0 60100 1 02100                                                                                             
                 WHENEVER FULL.E.5                                                  227  LM00265
 05011 CLA +0 50000 0 01045    05012 SUB +0 40200 0 03227    05013 TNZ -0 10000 0 05020                                 
                 KK(NUM)=005700570055K                                              228  LM00266
 05014 LXA +0 53400 1 03207    05015 CLA +0 50000 0 03245    05016 STO +0 60100 1 02100                                 
                 EXECUTE SETFUL.                                                    229  LM00267
 05017 TSX +0 07400 4 00020                                                                                             
                 END OF CONDITIONAL                                                 230  LM00268
      PC         PRNTPC.(KK)                                                        231  LM00269
 05020 TSX +0 07400 4 00014    05021 TXH +3 00000 0 02100                                                               
                 FUNCTION RETURN                                                    232  LM00270
 05022 TRA +0 02000 0 05030                                                                                             
                  END OF FUNCTION                                                   233  LM00271
 05023 TSX +0 07400 4 00006    05024 TXH +3 00000 0 00000    05025 SXD -0 63400 1 05024    05026 SXA +0 63400 4 05030   
 05027 TRA +0 02000 2 00001    05030 AXT +0 77400 4 00000    05031 LXA +0 53400 2 05024    05032 LXD -0 53400 1 05024   
 05033 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  234  LM00273
 05034 TRA +0 02000 0 05206                                                                                             
                 ENTRY TO PKOFF.                                                    235  LM00274
 05035 TRA +0 02000 0 05040    00031 TTR +0 02100 0 05036    05036 SXA +0 63400 2 05176    05037 TSX +0 07400 2 05176   
                 CKEND=CLIN*WORD                                                    236  LM00275
 05040 LDQ +0 56000 0 01002    05041 MPY +0 20000 0 03217    05042 STQ -0 60000 0 01001                                 
                 THROUGH PICKC,FOR I=1,1,I.G.ACT                                    237  LM00276
 05043 CLA +0 50000 0 03223    05044 STO +0 60100 0 01053    05045 TRA +0 02000 0 05051    05046 CLA +0 50000 0 01053   
 05047 ADD +0 40000 0 03223    05050 STO +0 60100 0 01053    05051 CLA +0 50000 0 01053    05052 SUB +0 40200 0 00065   
 05053 TZE +0 10000 0 05055    05054 TPL +0 12000 0 05174                                                               
                 MIN=C(2*(I-1)+1)                                                   238  LM00277
 05055 CLA +0 50000 0 01053    05056 SUB +0 40200 0 03223    05057 XCA +0 13100 0 00000    05060 MPY +0 20000 0 03224   
 05061 XCA +0 13100 0 00000    05062 ADD +0 40000 0 03223    05063 PAX +0 73400 2 00000    05064 CLA +0 50000 2 01026   
 05065 STO +0 60100 0 03200                                                                                             
                 MAX=C(2*I)                                                         239  LM00278
 05066 LDQ +0 56000 0 03224    05067 MPY +0 20000 0 01053    05070 XCA +0 13100 0 00000    05071 PAX +0 73400 2 00000   
 05072 CLA +0 50000 2 01026    05073 STO +0 60100 0 03131                                                               
                 INC=1                                                              240  LM00279
 05074 CLA +0 50000 0 03223    05075 STO +0 60100 0 01052                                                               
                 WHENEVER MAX.L.MIN,INC=-1                                          241  LM00280
 05076 CLA +0 50000 0 03131    05077 SUB +0 40200 0 03200    05100 TZE +0 10000 0 05104    05101 TPL +0 12000 0 05104   
 05102 CLS +0 50200 0 03223    05103 STO +0 60100 0 01052                                                               
                 THROUGH CHOSC,FOR II=MIN,INC,II.E.MAX+INC                          242  LM00281
 05104 CLA +0 50000 0 03200    05105 STO +0 60100 0 01051    05106 TRA +0 02000 0 05112    05107 CLA +0 50000 0 01051   
 05110 ADD +0 40000 0 01052    05111 STO +0 60100 0 01051    05112 CLA +0 50000 0 03131    05113 ADD +0 40000 0 01052   
 05114 CHS +0 76000 0 00002    05115 ADD +0 40000 0 01051    05116 TZE +0 10000 0 05146                                 
                 WHENEVER ARYCT.E.130                                               243  LM00282
 05117 CLA +0 50000 0 00066    05120 SUB +0 40200 0 03242    05121 TNZ -0 10000 0 05131                                 
                 PRNCT=ARYCT                                                        244  LM00283
 05122 CLA +0 50000 0 00066    05123 STO +0 60100 0 03210                                                               
                 FLAG=1                                                             245  LM00284
 05124 CLA +0 50000 0 03223    05125 STO +0 60100 0 01044                                                               
                   EXECUTE PRYNT.                                                   246  LM00285
 05126 TSX +0 07400 4 00032                                                                                             
                   ARYCT=0                                                          247  LM00286
 05127 CLA +0 50000 0 03222    05130 STO +0 60100 0 00066                                                               
                 END OF CONDITIONAL                                                 248  LM00287
                 WHENEVER II.G.CKEND,TRANSFER TO CHO                                249  LM00288
 05131 CLA +0 50000 0 01051    05132 SUB +0 40200 0 01001    05133 TZE +0 10000 0 05136    05134 TMI -0 12000 0 05136   
 05135 TRA +0 02000 0 00036                                                                                             
                 ARYCT=ARYCT+1                                                      250  LM00289
 05136 CLA +0 50000 0 00066    05137 ADD +0 40000 0 03223    05140 STO +0 60100 0 00066                                 
                 KCHOS(ARYCT)=KUNP(II)                                              251  LM00290
 05141 LXA +0 53400 1 00066    05142 LXA +0 53400 2 01051    05143 CLA +0 50000 2 03122    05144 STO +0 60100 1 01670   
      CHOSC      CONTINUE                                                           252  LM00291
 05145 TRA +0 02000 0 05107                                                                                             
      CHO        WHENEVER TBCT.E.0,TRANSFER TO PICKC                                253  LM00292
 05146 CLA +0 50000 0 03215    05147 SUB +0 40200 0 03222    05150 TNZ -0 10000 0 05152    05151 TRA +0 02000 0 00061   
                 THROUGH PICKC,FOR N=1,1,N.G.TBCT                                   254  LM00293
 05152 CLA +0 50000 0 03223    05153 STO +0 60100 0 03206    05154 TRA +0 02000 0 05160    05155 CLA +0 50000 0 03206   
 05156 ADD +0 40000 0 03223    05157 STO +0 60100 0 03206    05160 CLA +0 50000 0 03206    05161 SUB +0 40200 0 03215   
 05162 TZE +0 10000 0 05164    05163 TPL +0 12000 0 05173                                                               
                 ARYCT=ARYCT+1                                                      255  LM00294
 05164 CLA +0 50000 0 00066    05165 ADD +0 40000 0 03223    05166 STO +0 60100 0 00066                                 
                 KCHOS(ARYCT)=72K                                                   256  LM00295
 05167 LXA +0 53400 1 00066    05170 CLA +0 50000 0 03241    05171 STO +0 60100 1 01670                                 
      PICKC      CONTINUE                                                           257  LM00296
 05172 TRA +0 02000 0 05155    05173 TRA +0 02000 0 05046                                                               
                 FUNCTION RETURN                                                    258  LM00297
 05174 TRA +0 02000 0 05202                                                                                             
                 END OF FUNCTION                                                    259  LM00298
 05175 TSX +0 07400 4 00006    05176 TXH +3 00000 0 00000    05177 SXD -0 63400 1 05176    05200 SXA +0 63400 4 05202   
 05201 TRA +0 02000 2 00001    05202 AXT +0 77400 4 00000    05203 LXA +0 53400 2 05176    05204 LXD -0 53400 1 05176   
 05205 TRA +0 02000 4 00001                                                                                             
                 NORMAL MODE IS INTEGER                                             260  LM00302
                 DIMENSION KK(135),BUF1(432),K(132),KUNP(396),                      261  LM00303
                1KCHOS(396),A(19),C(19)                                             261  LM00304
                 VECTOR VALUES FULL=0                                               262  LM00306
 01045     +0 00000 0 00000                                                                                             
                 VECTOR VALUES ZERO=0                                               263  LM00307
 03221     +0 00000 0 00000                                                                                             
                 VECTOR VALUES BMASK=000000000057K                                  264  LM00308
 00115     +0 00000 0 00057                                                                                             
                 VECTOR VALUES CLIN=14                                              265  LM00309
 01002     +0 00000 0 00016                                                                                             
                 VECTOR VALUES MOV=0                                                266  LM00310
 03202     +0 00000 0 00000                                                                                             
                 VECTOR VALUES BLANK=606060606060K                                  267  LM00311
 00114     -2 06060 6 06060                                                                                             
                 VECTOR VALUES FLAG=0                                               268  LM00312
 01044     +0 00000 0 00000                                                                                             
                 VECTOR VALUES NAX=22                                               269  LM00313
 03204     +0 00000 0 00026                                                                                             
                 VECTOR VALUES BEG=21                                               270  LM00314
 00113     +0 00000 0 00025                                                                                             
                 VECTOR VALUES EOF(1)=$ NOT IN FILE.$, 777777777777K                271  LM00315
 01034     -3 77777 7 77777    01035     +3 36060 6 06060    01036     -0 56026 3 14325    01037     -2 04546 6 36031   
                 VECTOR VALUES C=0, 1, 72                                           272  LM00316
 01024     +0 00000 0 00110    01025     +0 00000 0 00001    01026     +0 00000 0 00000                                 
                 VECTOR VALUES D=3                                                  273  LM00317
 01031     +0 00000 0 00003                                                                                             
                 VECTOR VALUES R=1                                                  274  LM00318
 03213     +0 00000 0 00001                                                                                             
                 VECTOR VALUES R1=377777777777K                                     275  LM00319
 03212     +3 77777 7 77777                                                                                             
                 VECTOR VALUES L1=377777777777K                                     276  LM00320
 03123     +3 77777 7 77777                                                                                             
                 VECTOR VALUES K=$$                                                 277  LM00321
 02305     -2 06060 6 06060                                                                                             
                 VECTOR VALUES FIX=1                                                278  LM00322
 01043     +0 00000 0 00001                                                                                             
                 VECTOR VALUES EDIT=0                                               279  LM00323
 01032     +0 00000 0 00000                                                                                             
                 VECTOR VALUES E=6                                                  280  LM00324
 01041     +0 00000 0 00006                                                                                             
                 VECTOR VALUES H=0                                                  281  LM00325
 01046     +0 00000 0 00000                                                                                             
                 VECTOR VALUES MES=$ INCORRECT FORMAT$, 777777777777K               282  LM00326
 03174     -3 77777 7 77777    03175     -0 65144 2 16360    03176     -1 12523 6 36026    03177     -2 03145 2 34651   
                 VECTOR VALUES TABCOV=15                                            283  LM00327
 03214     +0 00000 0 00017                                                                                             
                 VECTOR VALUES TBCT=0                                               284  LM00328
 03215     +0 00000 0 00000                                                                                             
                 VECTOR VALUES MASK1=777777000000K                                  285  LM00329
 03127     -3 77777 0 00000                                                                                             
                 VECTOR VALUES MASK2=000000777777K                                  286  LM00330
 03130     +0 00000 7 77777                                                                                             
                 VECTOR VALUES MES=$COMMAND FORMAT IS 'PRINT NAME1 NAME2            287  LM00331
                1-R(TO/THRU R2) F(1) L(1) ... F(N) L(N) TAB (FULL)-$,               287  LM00332
                2777777777777K                                                      287  LM00333
 03157     -3 77777 7 77777    03160     +3 44060 6 06060    03161     -2 07426 6 44343    03162     -0 53460 6 32122   
 03163     -3 44534 6 04374    03164     -2 03333 3 36026    03165     +3 46043 7 40134    03166     +0 23460 2 67401   
 03167     -2 33051 6 46051    03170     -0 05174 6 34661    03171     -2 06060 6 06060    03172     -2 04521 4 42502   
 03173     -2 04521 4 42501    03174     +1 44751 3 14563    03175     +2 16360 3 16260    03176     +2 46026 4 65144   
 03177     +2 34644 4 42145                                                                                             
                 VECTOR VALUES WORD=6                                               288  LM00334
 03217     +0 00000 0 00006                                                                                             
                 VECTOR VALUES CHAR=6                                               289  LM00335
 01000     +0 00000 0 00006                                                                                             
                 VECTOR VALUES MES1(2)=$ NOT FOUND$, 777777777777K                  290  LM00336
 03132     -3 77777 7 77777    03133     -0 66445 2 46060    03134     -2 04546 6 36026                                 
                 VECTOR VALUES MES2(1)=$   TO$, 0,$ IS ILLEGAL$, 777777777777K      291  LM00337
 03137     -3 77777 7 77777    03140     -0 32527 2 14360    03141     -2 03162 6 03143    03142     +0 00000 0 00000   
 03143     -2 06060 6 34660                                                                                             
                 VECTOR VALUES MES3(1)=$ NOT DECIMAL.  FOLLOWING ARGUMENTS ARE      292  LM00338
                1 IGNORED.$, 777777777777K                                          292  LM00339
 03145     -3 77777 7 77777    03146     -0 65125 2 43360    03147     -1 12560 3 12745    03150     +2 54563 6 26021   
 03151     -2 02151 2 76444    03152     -0 34666 3 14527    03153     +3 36060 2 64643    03154     +2 52331 4 42143   
 03155     -2 04546 6 36024                                                                                             
                 VECTOR VALUES FENCE=777777777777K                                  293  LM00340
 01042     -3 77777 7 77777                                                                                             
                 END OF PROGRAM                                                     294  LM00341
 05206 TSX +0 07400 4 00006                                                                                             
1       GLIMS IS USED TO EVALUATE THE THE MAD EXPRESSION                                         PAGE 1     
                           FILE NAME -- UNPNR FAP                                   
                  
                       00002         ENTRY   UNPKNR   
                                     INSERT  WMACS    
                              ZMQ    MACRO
                                     LDQ     =0 
                              ZMQ    END  
             0 00001 1 60000  ---    OPSYN   PZE
                              * A...B.  WORD IS THE ARGUMENT(TXH A,,B),  AND THE REST IS AS FOLLOWS-- 
                              *     
                              *      GLIMS   WORD,HOLD,BUMP,CHECK 
                              *      ...  
                              * HOLD AXC     --,1     
                              * X    BSS  
                              *      ...  
                              * CHECK        ---           *+2,1,--     
                              * BUMP TXI     X,1,--   
                              *     
                              * THE IR SPECIFIED IS ALWAYS -THIS WORD.  
                              *     
                              GLIMS  MACRO   WORD,HOLD,BUMP,CHECK,D1,D2,D3    
                                     CAL     WORD     
                                     STD     D1 
                                     AXT     1,1
                                     PAX     ,2 
                              D1     TXL     D2,2,1   
                                     AXT     -1,1     
                              D2     BSS  
                                     IRP     BUMP     
                                     SCD     BUMP,1   
                                     IRP  
                                     PAX     ,2 
                                     IRP     HOLD     
                                     SXA     HOLD,2   
                                     IRP  
                                     PDX     ,2 
                                     LDQ     =O700000000000 
                                     TXL     D3,1,1   
                                     TXI     *+1,2,1  
                                     LDQ     =O300000000000 
                              D3     BSS  
                                     XCL  
                                     IRP     CHECK    
                                     SCD     CHECK,2  
                                     STP     CHECK    
                                     IRP  
                              GLIMS  END  
                              REPORT MACRO   Z,TEXT,CR01,CR02,CR03
                                     TRA     CR01     
                                     BCI     Z,TEXT   
                              CR01   BSS  
                                     TSX     $WRFLX,4 
                                             CR01-Z,,Z
                              REPORT END  
1       GLIMS IS USED TO EVALUATE THE THE MAD EXPRESSION                                         PAGE 2     
                           FILE NAME -- UNPNR FAP                                   
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  644547424551     
                  
      00002  0634 00 1 00103  UNPKNR SXA     UP07,1   
      00003  0634 00 2 00104         SXA     UP08,2   
      00004  0636 00 4 00105         SCA     UP09,4   
      00005  0600 00 0 00107         STZ     CHCNT         INITIALIZE COUNT   
      00006                          GLIMS   (1,4),HLDW,BMPW,CHKW GET LIMITS  
 A    00014                   ..002  BSS                                                                      .001
 A    00024                   ..003  BSS                                                                      .001
      00027                          GLIMS   (2,4),HLDC,(BMPC1,BMPC2),(CHKC1,CHKC2) 
 A    00035                   ..005  BSS                                                                      .001
 A    00046                   ..006  BSS                                                                      .001
      00053 -0500 60 4 00003         CAL*    3,4           GET BYTE SIZE
      00054  0621 00 0 00064         STA     UP03          ..     
      00055  0767 00 0 00022         ALS     18            ..     
      00056  0622 00 0 00073         STD     UP04          ..     
      00057 -0774 00 1 00000  HLDW   AXC     --,1          FIRST WORD   
      00060 -0774 00 2 00000  HLDC   AXC     --,2          FIRST CHARACTER    
      00061  0774 00 4 00044  UP01   AXT     36,4          IR4 COUNTS CHARS IN WORD 
      00062  0560 00 1 00000         LDQ     ,1 
      00063 -0754 00 0 00000  UP02   ZAC  
      00064 -0763 00 0 00000  UP03   LGL     -- 
      00065  0602 00 2 00000         SLW     ,2 
      00066 -0500 00 0 00107         CAL     CHCNT    
      00067  0400 00 0 00110         ADD     =1 
      00070  0602 00 0 00107         SLW     CHCNT    
      00071  0 00000 2 00103  CHKC1  ---     UP07,2,--
      00072  1 00000 2 00073  BMPC1  TXI     *+1,2,-- 
      00073  2 00000 4 00063  UP04   TIX     UP02,4,--
      00074  0 00000 1 00076  CHKW   ---     UP05,1,--
      00075  1 00000 1 00061  BMPW   TXI     UP01,1,--
                              *     
      00076 -0500 00 0 00111  UP05   CAL     =O60          FILL CHARACTER BUFFER IF WORDS RAN OUT     
      00077  0602 00 2 00000  UP06   SLW     ,2            ..     
      00100  0 00000 2 00103  CHKC2  ---     UP07,2,--     ..     
      00101  1 00000 2 00077  BMPC2  TXI     UP06,2,--     ..     
                              *     
      00102 -0500 00 0 00107         CAL     CHCNT         GET COUNT OF CHARS UNPACKED.   
      00103  0774 00 1 00000  UP07   AXT     --,1          RETURN 
      00104  0774 00 2 00000  UP08   AXT     --,2          ..     
      00105 -0774 00 4 00000  UP09   AXC     --,4          ..     
      00106  0020 00 4 00001         TRA     1,4           ..     
      00107  0 00000 0 00000  CHCNT                        CHARACTER COUNT    
                                     END  
                  
        LITERALS  
      00110  000000000001     
      00111  000000000060     
      00112  300000000000     
      00113  700000000000     
1       GLIMS IS USED TO EVALUATE THE THE MAD EXPRESSION                                         PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        114 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         75   BMPW    14
         74   CHKW    25,   26
         60   HLDC    40
         57   HLDW    16
         61   UP01    75
         63   UP02    73
         64   UP03    54
         73   UP04    56
         76   UP05    74
         77   UP06   101
        103   UP07     2,   71,  100
        104   UP08     3
        105   UP09     4
         72  BMPC1    35
        101  BMPC2    36
        107  CHCNT     5,   66,   70,  102
         71  CHKC1    47,   50
        100  CHKC2    51,   52
         12  ..001     7
         14  ..002    12
         24  ..003    21
         33  ..004    30
         35  ..005    33
         46  ..006    43
          2 UNPKNR     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1       GLIMS IS USED TO EVALUATE THE THE MAD EXPRESSION                                         PAGE 1     
                           FILE NAME -- PAKNR FAP                                   
                  
                       00002         ENTRY   PAKNR    
                                     INSERT  WMACS    
                              ZMQ    MACRO
                                     LDQ     =0 
                              ZMQ    END  
             0 00001 1 60000  ---    OPSYN   PZE
                              * A...B.  WORD IS THE ARGUMENT(TXH A,,B),  AND THE REST IS AS FOLLOWS-- 
                              *     
                              *      GLIMS   WORD,HOLD,BUMP,CHECK 
                              *      ...  
                              * HOLD AXC     --,1     
                              * X    BSS  
                              *      ...  
                              * CHECK        ---           *+2,1,--     
                              * BUMP TXI     X,1,--   
                              *     
                              * THE IR SPECIFIED IS ALWAYS -THIS WORD.  
                              *     
                              GLIMS  MACRO   WORD,HOLD,BUMP,CHECK,D1,D2,D3    
                                     CAL     WORD     
                                     STD     D1 
                                     AXT     1,1
                                     PAX     ,2 
                              D1     TXL     D2,2,1   
                                     AXT     -1,1     
                              D2     BSS  
                                     IRP     BUMP     
                                     SCD     BUMP,1   
                                     IRP  
                                     PAX     ,2 
                                     IRP     HOLD     
                                     SXA     HOLD,2   
                                     IRP  
                                     PDX     ,2 
                                     LDQ     =O700000000000 
                                     TXL     D3,1,1   
                                     TXI     *+1,2,1  
                                     LDQ     =O300000000000 
                              D3     BSS  
                                     XCL  
                                     IRP     CHECK    
                                     SCD     CHECK,2  
                                     STP     CHECK    
                                     IRP  
                              GLIMS  END  
                              REPORT MACRO   Z,TEXT,CR01,CR02,CR03
                                     TRA     CR01     
                                     BCI     Z,TEXT   
                              CR01   BSS  
                                     TSX     $WRFLX,4 
                                             CR01-Z,,Z
                              REPORT END  
1       GLIMS IS USED TO EVALUATE THE THE MAD EXPRESSION                                         PAGE 2     
                           FILE NAME -- PAKNR FAP                                   
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  472142455160     
                  
      00002  0634 00 1 00120  PAKNR  SXA     PK12,1   
      00003  0634 00 2 00121         SXA     PK13,2   
      00004  0636 00 4 00122         SCA     PK14,4   
      00005                          GLIMS   (1,4),HLDC,BMPC,CHKC 
 A    00013                   ..002  BSS                                                                      .001
 A    00023                   ..003  BSS                                                                      .001
      00026                          GLIMS   (2,4),HLDW,(BMPW1,BMPW2),(CHKW1,CHKW2) 
 A    00034                   ..005  BSS                                                                      .001
 A    00045                   ..006  BSS                                                                      .001
      00052 -0500 60 4 00003         CAL*    3,4
      00053  0734 00 1 00000         PAX     ,1 
      00054  0634 00 1 00072         SXA     PK04,1   
      00055  0634 00 1 00107         SXA     PK09,1   
      00056 -0634 00 1 00073         SXD     PK05,1   
      00057 -0634 00 1 00110         SXD     PK10,1   
      00060 -0636 00 1 00077         SCD     PK06,1   
      00061 -0636 00 1 00112         SCD     PK11,1   
      00062  1 77734 1 00063         TXI     *+1,1,-36
      00063  0636 00 1 00071         SCA     PK03,1   
      00064  0636 00 1 00106         SCA     PK08,1   
                              *     
      00065 -0774 00 1 00000  HLDW   AXC     --,1          FIRST WORD   
      00066 -0774 00 2 00000  HLDC   AXC     --,2          FIRST CHARACTER    
      00067  0774 00 4 77734  PK01   AXT     -36,4    
      00070  0560 00 2 00000  PK02   LDQ     ,2 
      00071 -0773 00 0 00000  PK03   RQL     --            (36-BITS)    
      00072 -0763 00 0 00000  PK04   LGL     --            (BITS) 
      00073  1 00000 4 00074  PK05   TXI     *+1,4,--      (BITS) 
      00074  0 00000 2 00111  CHKC   ---     PKP10,2,--     
      00075  1 00000 2 00076  BMPC   TXI     *+1,2,-- 
      00076 -3 00000 4 00100         TXL     *+2,4,0  
      00077 -3 00000 4 00070  PK06   TXL     PK02,4,--     (-BITS)
      00100                          ZMQ  
      00101 -0763 00 4 00000         LGL     ,4 
      00102  0602 00 1 00000         SLW     ,1 
                              *     
      00103  0 00000 1 00120  CHKW1  ---     PK12,1,--
      00104  1 00000 1 00067  BMPW1  TXI     PK01,1,--
                              *     
      00105  0560 00 0 00125  PK07   LDQ     =O57          FILL IN LAST WORD  
      00106 -0773 00 0 00000  PK08   RQL     --            (36-BITS)    
      00107 -0763 00 0 00000  PK09   LGL     --            (BITS) 
      00110  1 00000 4 00111  PK10   TXI     *+1,4,--      (BITS) 
      00111 -3 00000 4 00113  PKP10  TXL     *+2,4,0       (DAMN) 
      00112 -3 00000 4 00105  PK11   TXL     PK07,4,--      (-BITS)     
      00113  0602 00 1 00000         SLW     ,1 
      00114  0 00000 1 00120  CHKW2  ---     PK12,1,--
      00115  1 00000 1 00116  BMPW2  TXI     *+1,1,-- 
      00116  0774 00 4 77734         AXT     -36,4    
      00117  0020 00 0 00105         TRA     PK07     
                              *     
1       GLIMS IS USED TO EVALUATE THE THE MAD EXPRESSION                                         PAGE 3     
                           FILE NAME -- PAKNR FAP                                   
                  
      00120  0774 00 1 00000  PK12   AXT     --,1     
      00121  0774 00 2 00000  PK13   AXT     --,2     
      00122 -0774 00 4 00000  PK14   AXC     --,4     
      00123  0020 00 4 00001         TRA     1,4
                                     END  
                  
        LITERALS  
      00124  000000000000     
      00125  000000000057     
      00126  300000000000     
      00127  700000000000     
1       GLIMS IS USED TO EVALUATE THE THE MAD EXPRESSION                                         PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        130 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         75   BMPC    13
         74   CHKC    24,   25
         66   HLDC    15
         65   HLDW    37
         67   PK01   104
         70   PK02    77
         71   PK03    63
         72   PK04    54
         73   PK05    56
         77   PK06    60
        105   PK07   112,  117
        106   PK08    64
        107   PK09    55
        110   PK10    57
        112   PK11    61
        120   PK12     2,  103,  114
        121   PK13     3
        122   PK14     4
        104  BMPW1    34
        115  BMPW2    35
        103  CHKW1    46,   47
        114  CHKW2    50,   51
         11  ..001     6
         13  ..002    11
         23  ..003    20
         32  ..004    27
         34  ..005    32
         45  ..006    42
          2  PAKNR     0
        111  PKP10    74
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




PRNTER   BCD 05/12/69 1845.6   11001         00000    
1       PRNTER COMMAND   ROGER ROACH 10-16-67                                                    PAGE 1     
                  
                              *     
                              * IF THE COMMAND IS CALLED BY ANY OTHER NAME IT WILL ACCEPT THREE 
                              * ARGUMENTS - 1. ENTRY NAME, 2. ERROR CODE, AND 3. I/O ERROR CODE.
                              *     
                              * IF PRNTER IS CALLED WITH A MASK BEGINNING WITH A BLANK, IT'LL ASSSUME 
                              * THIS MASK IS IN SPREAD OCTAL. OTHERWISE IT IS IN BINARY.  A NEGATIVE  
                              * ARGUMENT WILL RESULT IN CALLING CHNCOM OTHERWISE BRAKE IS CALLED.     
                              *     
                  
        TRANSFER VECTOR 
      00000  272563234644     GETCOM
      00001  314624312127     IODIAG
      00002  475145632551     PRNTER
      00003  233045234644     CHNCOM
      00004  222346236360     BCOCT 
      00005  225121422560     BRAKE 
      00006  222324252360     BCDEC 
      00007  434164626360     LJUST 
                  
      00010  0074 00 4 00000         TSX     $GETCOM,4     TEST THE COMMAND NAME    
      00011  0 00000 0 00000         PZE     0  
      00012 -0340 00 0 00137         LAS     =HPRNTER 
      00013  0020 00 0 00015         TRA     *+2           NOT PRNTER   
      00014  0020 00 0 00023         TRA     CALL2    
      00015  0500 00 0 00051  CALL1  CLA     DIAGTR        FAKE OUT OF IODIAG 
      00016  0601 60 0 00001         STO*    $IODIAG  
      00017  0074 00 4 00002         TSX     $PRNTER,4
      00020  3 00000 0 00134         PTH     =O351    
      00021  0074 00 4 00003         TSX     $CHNCOM,4
      00022  0 00000 0 00000         PZE     0  
                              *     
      00023  0500 00 0 00133  CALL2  CLA     DIAGTA        IODIAG'S TIA 
      00024  0601 60 0 00001         STO*    $IODIAG  
      00025  0074 00 4 00000         TSX     $GETCOM,4
      00026  0 00000 0 00001         PZE     1  
      00027 -0340 00 0 00132         LAS     FENCE    
      00030  0020 00 0 00032         TRA     *+2           A FENCE, USE THE MASK    
      00031 -0500 00 0 00136         CAL     =O-375        ASSUME 375 IF NO MASK    
      00032  0602 00 0 00131         SLW     MASK     
      00033 -0320 00 0 00141         ANA     =O770000000000 
      00034  0322 00 0 00140         ERA     =H 00000 
      00035 -0100 00 0 00042         TNZ     *+5
      00036  0074 00 4 00004         TSX     $BCOCT,4 
      00037  0 00000 0 00131         PZE     MASK     
      00040 -0760 00 0 00003         SSM  
      00041  0601 00 0 00131         STO     MASK     
      00042  0074 00 4 00002         TSX     $PRNTER,4
      00043  0 00000 0 00131         PZE     MASK     
      00044  0500 00 0 00131         CLA     MASK     
      00045 -0120 00 0 00047         TMI     *+2
      00046  0074 00 4 00005         TSX     $BRAKE,4 
      00047  0074 00 4 00003         TSX     $CHNCOM,4
      00050  0 00000 0 00000         PZE     0  
                              *     
                              * FAKE OUT OF IODIAG    
                              *     
1       PRNTER COMMAND   ROGER ROACH 10-16-67                                                    PAGE 2     
                  
      00051  0021 00 0 00052  DIAGTR TTR     *+1
      00052  0634 00 4 00117         SXA     XR4,4    
      00053  0500 00 4 00001         CLA     1,4
      00054  0621 00 0 00130         STA     BUFFAD   
      00055  0622 00 0 00130         STD     BUFFAD   
      00056  0074 00 4 00000         TSX     GETCOM,4 
      00057  0 00000 0 00001         PZE     1  
      00060 -0340 00 0 00132         LAS     FENCE    
      00061  0020 00 0 00063         TRA     *+2
      00062  0020 00 0 00023         TRA     CALL2    
      00063  0602 00 0 00122         SLW     ENTRY    
      00064  0074 00 4 00000         TSX     GETCOM,4 
      00065  0 00000 0 00002         PZE     2  
      00066 -0340 00 0 00132         LAS     FENCE    
      00067  0020 00 0 00071         TRA     *+2
      00070  0020 00 0 00100         TRA     TRNSFR   
      00071  0602 00 0 00123         SLW     ERCODE   
      00072  0074 00 4 00000         TSX     GETCOM,4 
      00073  0 00000 0 00003         PZE     3  
      00074 -0340 00 0 00132         LAS     FENCE    
      00075  0020 00 0 00077         TRA     *+2
      00076  0020 00 0 00100         TRA     TRNSFR   
      00077  0602 00 0 00124         SLW     IOERCD   
                              *     
      00100  0074 00 4 00006  TRNSFR TSX     $BCDEC,4 
      00101  0 00000 0 00123         PZE     ERCODE   
      00102  0601 00 0 00123         STO     ERCODE   
      00103  0074 00 4 00006         TSX     $BCDEC,4 
      00104  0 00000 0 00124         PZE     IOERCD   
      00105  0601 00 0 00124         STO     IOERCD   
      00106  0074 00 4 00007         TSX     $LJUST,4 
      00107  0 00000 0 00122         PZE     ENTRY    
      00110  0601 00 0 00122         STO     ENTRY    
      00111 -0535 00 4 00130         LDC     BUFFAD,4 
      00112  1 00001 4 00113         TXI     *+1,4,1  
      00113 -0500 00 4 00121         CAL     BUFF,4   
      00114  0602 60 0 00130         SLW*    BUFFAD   
      00115 -3 00000 4 00117         TXL     XR4,4,0  
      00116  1 00001 4 00113         TXI     *-3,4,1  
                              *     
      00117  0774 00 4 00000  XR4    AXT     **,4     
      00120  0020 00 4 00002         TRA     2,4
                              *     
      00121  0 00000 0 00000  BUFF   PZE  
      00122  464725456060     ENTRY  BCI     1,OPEN   
      00123  0 00000 0 00001  ERCODE PZE     1  
      00124  0 00000 0 00005  IOERCD PZE     5  
      00125 +000000000000     REST   OCT     0,0,0    
      00126 +000000000000     
      00127 +000000000000     
                              *     
      00130  0 00000 4 00000  BUFFAD PZE     **,4,**  
      00131  0 00000 0 00000  MASK  
      00132 -377777777777     FENCE  OCT     777777777777   
      00133  0101 00 0 00135  DIAGTA TIA     =HIODIAG 
                                     END  
1       PRNTER COMMAND   ROGER ROACH 10-16-67                                                    PAGE 3     
                  
        LITERALS  
      00134  000000000351     
      00135  314624312127     
      00136  400000000375     
      00137  475145632551     
      00140  600000000000     
      00141  770000000000     
1       PRNTER COMMAND   ROGER ROACH 10-16-67                                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        142 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        117    XR4    52,  115
        121   BUFF   113
        131   MASK    32,   37,   41,   43,   44
        125   REST      
          6  BCDEC   100,  103
          4  BCOCT    36
          5  BRAKE    46
         15  CALL1      
         23  CALL2    14,   62
        122  ENTRY    63,  107,  110
        132  FENCE    27,   60,   66,   74
          7  LJUST   106
        130 BUFFAD    54,   55,  111,  114
          3 CHNCOM    21,   47
        133 DIAGTA    23
         51 DIAGTR    15
        123 ERCODE    71,  101,  102
          0 GETCOM    10,   25,   56,   64,   72
          1 IODIAG    16,   24
        124 IOERCD    77,  104,  105
          2 PRNTER    17,   42
        100 TRNSFR    70,   76
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 1     
                  
                              * DON WAGNER'S VERSION WITH VARIABLE VERBOSITY. 
                       00003         ENTRY   PRNTER   
                                     EXTERN  IODIAG   
                              *     
                              * CALLED BY 
                              *      PRNTER.(MASK)    
                              * WHERE MASK HAS A BIT ON FOR EACH MESSAGE PART DESIRED.    
                              * THE MESSAGE PARTS ARE--     
                              * THE WORD 'ERROR '     
                              * ERROR NUMBER    
                              * FILE NAME 
                              * FILE SYSTEM ROUTINE NAME    
                              * CALLING LOCATION
                              * FILE SYSTEM LOCATION  
                              * CARRIAGE RETURN 
                              *     
                              * FOR COMPATIBILITY, IF NO ARGUMENT IS SPECIFIED OR IF
                              * MASK.E.0 A DEFAULT MASK IS USED.  
                              *     
                              * ALSO CALLED BY  
                              *      PRNTER.(MASK,FCN)
                              * WHERE FCN IS A USER'S OUTPUT ROUTINE, CALLED BY PRNTER WITH     
                              *      FCN.(BUFF(Z)...Z,Z)    
                              *     
                              * BECAUSE THE STAND-ALONE PROGRAMS NEED A SLIGHTLY DIFFERENT
                              * PRNTER, THE FOLLOWING ASSEMBLY PARAMETER (LIB) DETERMINES 
                              * WHETHER COLT IS CALLED, HOW LONG A PRINTED LINE IS, 
                              * WHETHER WRFLX OR WRFLXA IS CALLED.
                  
                  
        TRANSFER VECTOR 
      00000  314624312127     IODIAG
      00001  234643636060     COLT  
      00002  665126436721     WRFLXA
                  
                       00001  LIB    EQU     1  
                  
                              * LIB IS 1 FOR A NORMAL LIBRARY SUBROUTINE, 0 FOR GARMAN'S  
                              * SPECIAL ROUTINE.
                              *     
                              * COLT MACRO EITHER CALLS $COLT OR DOES AN EASY SUBSET FOR GARMAN.
                              *     
                              LIBCLT MACRO
                                     TSX     $COLT,4  
                                             IR4
                              LIBCLT END  
                              *     
                              INDCLT MACRO
                                     LDI     1,4
                                     IIL     300000        TXH    
                                     CAL     =O1000000
                                     OFT     =O700000700000 
                                     CAL     =0 
                                     TXI     *+1,4,-1 
                              INDCLT END  
                              *     
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 2     
                  
             2 12251 0 10641  COLT   OPSYN   LIBCLT   
                              *     
      00003  0636 00 1 00266  PRNTER SCA     SAV1,1   
      00004  0636 00 2 00267         SCA     SAV2,2   
      00005  0604 00 0 01265         STI     SAVI     
      00006 -0634 00 4 01263         SXD     IR4,4    
      00007                          COLT 
      00007  0074 00 4 00001         TSX     $COLT,4                                                          .001
      00010  0 00000 0 01263                 IR4                                                              .001
      00011  0636 00 4 00270         SCA     SAV4,4   
      00012 -0534 00 4 01263         LXD     IR4,4    
      00013 -0734 00 2 00000         PDX     ,2 
      00014 -3 00000 2 00017         TXL     PR00,2,0 
      00015  0441 60 4 00001         LDI*    1,4
      00016 -0520 60 4 00001         NZT*    1,4
      00017  0055 00  000375  PR00   SIR     DFMASK   
      00020  0604 00 0 01266         STI     MASK     
      00021  0600 00 0 01262         STZ     CALLSW   
      00022 -3 00001 2 00026         TXL     PRP1,2,1 
      00023 -0500 00 4 00002         CAL     2,4
      00024  0621 00 0 00247         STA     CALL     
      00025 -0625 00 0 01262         STL     CALLSW   
 A    00026                   PRP1   BSS  
      00026  0074 00 4 00000         TSX     IODIAG,4      GET ERROR INFO     
      00027  3 00007 0 01253         TXH     DIBUF,,7      ..     
                              *     
      00030  0535 00 2 01255         LAC     DIBUF+2,2     PICK UP ERROR CODE 
      00031  0636 00 2 01267         SCA     ERRN,2   
      00032  3 77775 2 00274         TXH     STAND,2,-3    1 AND 2 ARE STANDARD.    
      00033 -3 77634 2 00276         TXL     STAND1,2,-100 100 UP ALSO  
                              *     
      00034 -0500 00 0 01254         CAL     DIBUF+1       ALL OTHERS DEPEND UPON ROUTINE.
      00035  0774 00 1 00072         AXT     NOCALL,1 
      00036 -0340 00 1 00403  PR01   LAS     CALLS,1       SEARCH FOR IO ROUTINE    
      00037  0020 00 0 00041         TRA     *+2
      00040  0020 00 0 00043         TRA     PR02          FOUND  
      00041  2 00002 1 00036         TIX     PR01,1,2 
      00042  0020 00 0 00271         TRA     NFOUND        NOT FOUND    
                              *     
      00043  0500 00 1 00404  PR02   CLA     CALLS+1,1     FOUND  
      00044  0120 00 0 00046  PRP2   TPL     *+2           MINUS MEANS DON'T PRINT FILE NAME.   
      00045  0057 00  000020         RIR     FNBIT         ..     
      00046  0604 00 0 01266         STI     MASK          ..     
      00047  0760 00 0 00006         COM                   CHECK WHETHER NUMBER IS KNOWN FOR ENTRY    
      00050  0622 00 0 00051         STD     *+1           ..     
      00051  3 00000 2 00053         TXH     *+2,2,--      ..     
      00052  0020 00 0 00271         TRA     NFOUND        ..     
      00053  0500 60 1 00404         CLA*    CALLS+1,1     POINTER TO MESSAGE 
      00054 -0120 00 0 00301         TMI     IOER          MINUS MEANS IO ERROR.    
      00055  0737 00 2 00000  GMESS  PAC     ,2            CALCULATE MESSAGE LIMITS ETC.  
      00056 -3 00000 2 00271         TXL     NFOUND,2,0    .. IR2=CURRENT WORD IN MESSAGE 
      00057  0734 00 1 00000         PAX     ,1            ..     
      00060  0622 00 0 00061         STD     PR03          ..     
      00061  1 00000 1 00062  PR03   TXI     *+1,1,--      ..     
      00062 -0756 00 1 00000         PCD     ,1            ..     
      00063  0622 00 0 00123         STD     MS03          .. LIMIT OF MESSAGE
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 3     
                  
      00064  0622 00 0 00167         STD     MSP7          .. ..  
      00065  0622 00 0 00162         STD     MS07          .. ..  
                              *     
      00066 -0774 00 1 01227         AXC     OTBUF,1       IR1=-CURRENT PLACE IN OUTPUT BUFFER  
                              *     
      00067  0056 00  000200         RNT     QTBIT         IS THE WORD 'ERROR' DESIRED    
      00070  0020 00 0 00074         TRA     QT01     
      00071 -0500 00 0 01300         CAL     =HERROR  
      00072  0602 00 1 00000         SLW     ,1 
      00073  1 77777 1 00074         TXI     *+1,1,-1 
 A    00074                   QT01   BSS  
                              *     
      00074  0056 00  000100         RNT     NRBIT         IS ERROR NUMBER DESIRED  
      00075  0020 00 0 00105         TRA     NR02          NO     
      00076  0074 00 4 01203         TSX     DEFBC,4       YES    
 TD   00077  3 00000 0 01267         TXH     ERRN     
      00100  0560 00 0 01302         LDQ     =O356057575757 
 A    00101                   NR01   BSS  
      00101 -0765 00 0 00006         LGR     6  
      00102 -0100 00 0 00101         TNZ     NR01     
      00103 -0600 00 1 00000  NRP1   STQ     ,1 
      00104  1 77777 1 00105         TXI     *+1,1,-1 
 A    00105                   NR02   BSS  
                              *     
      00105  0056 00  000040         RNT     MSBIT         IS MESSAGE DESIRED 
      00106  0020 00 0 00140         TRA     MSP5          NO     
      00107  0560 00 2 00000  MS01   LDQ     ,2            YES, GET WORD FROM MESSAGE     
      00110  0774 00 4 00044         AXT     36,4          IR4 COUNTS CHARACTERS    
      00111 -0763 00 0 00006  MS02   LGL     6             DOES WORD HAVE A $ 
      00112  0044 00 0 00000         PAI                   ..     
      00113  0051 00  000053         IIR     FCHAR         ..     
      00114  0054 00  000077         RFT     000077        ..     
      00115  0020 00 0 00117         TRA     *+2           ..     
      00116  0020 00 0 00132         TRA     MS04          ..     
      00117  2 00006 4 00111         TIX     MS02,4,6      ..     
      00120  0602 00 1 00000         SLW     ,1            NO, STORE IT 
      00121  1 77777 1 00122         TXI     *+1,1,-1      ..     
      00122  1 77777 2 00123         TXI     *+1,2,-1      AND LOOP     
      00123  3 00000 2 00107  MS03   TXH     MS01,2,--     ..     
      00124  0441 00 0 01266         LDI     MASK     
      00125  0057 00  000040         RIR     MSBIT         IF NO $ FOUND, INDICATE THAT THERE   
      00126  0604 00 0 01266         STI     MASK     
      00127 -0500 00 0 01310         CAL     =O605757575757    IS NO SECOND HALF, THEN    
      00130  0602 00 1 00000         SLW     ,1            PUT IN FILE NAME.  
      00131  1 77777 1 00140         TXI     MSP5,1,-1     ..     
                              *     
      00132  0560 00 0 01305  MS04   LDQ     =O575757575757    YES, PUT IN PART BEFORE $  
      00133  0771 00 0 00006         ARS     6             ..     
      00134  0634 00 4 00135         SXA     MSP4,4        ..     
      00135 -0763 00 0 00000  MSP4   LGL     -- 
      00136  0602 00 1 00000         SLW     ,1 
      00137  1 77777 1 00140         TXI     *+1,1,-1 
 A    00140                   MSP5   BSS  
                              *     
      00140  0441 00 0 01266  FN01   LDI     MASK     
                              *     
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 4     
                  
      00141  0056 00  000020         RNT     FNBIT         IS FILE NAME DESIRED     
      00142  0020 00 0 00152         TRA     FN02          NO     
      00143 -0500 00 0 01257         CAL     DIBUF+4       YES    
      00144  0602 00 1 00000         SLW     ,1 
      00145 -0500 00 0 01310         CAL     =O605757575757 
      00146  0602 00 1 00001         SLW     1,1
      00147 -0500 00 0 01260         CAL     DIBUF+5  
      00150  0602 00 1 00002         SLW     2,1
      00151  1 77775 1 00152         TXI     *+1,1,-3 
 A    00152                   FN02   BSS  
                              *     
      00152  0056 00  000040  MS05   RNT     MSBIT         IS MESSAGE DESIRED (SECOND TIME ASKED)     
      00153  0020 00 0 00170         TRA     MSP8          NO     
      00154 -0500 00 2 00000  MS06   CAL     ,2            YES--GET THE PART AFTER THE $  
      00155  0560 00 0 01305         LDQ     =O575757575757 
      00156 -0763 00 4 00052         LGL     42,4          ..     
      00157  0602 00 1 00000         SLW     ,1            AND STORE INTO OUTPUT LINE     
      00160  1 77777 1 00161         TXI     *+1,1,-1 
      00161  1 77777 2 00162         TXI     *+1,2,-1 
      00162 -3 00000 2 00170  MS07   TXL     MSP8,2,--
      00163 -0500 00 2 00000  MSP6   CAL     ,2            PUT IN REST OF MESSAGE   
      00164  0602 00 1 00000         SLW     ,1            ..     
      00165  1 77777 1 00166         TXI     *+1,1,-1      ..     
      00166  1 77777 2 00167         TXI     *+1,2,-1      ..     
      00167  3 00000 2 00163  MSP7   TXH     MSP6,2,--     ..     
 A    00170                   MSP8   BSS  
                              *     
      00170  0441 00 0 01266  RN01   LDI     MASK     
      00171  0056 00  000010         RNT     RNBIT         IS ROUTINE NAME DESIRED  
      00172  0020 00 0 00200         TRA     RN02          NO     
      00173 -0500 00 0 01303         CAL     =O404057575757    YES
      00174  0602 00 1 00000         SLW     ,1 
      00175 -0500 00 0 01254         CAL     DIBUF+1  
      00176  0602 00 1 00001         SLW     1,1
      00177  1 77776 1 00200         TXI     *+1,1,-2 
 A    00200                   RN02   BSS  
                              *     
      00200  0056 00  000004  LC01   RNT     LCBIT         IS LOCATION DESIRED
      00201  0020 00 0 00217         TRA     LC02          NO     
      00202 -0500 00 0 01306         CAL     =O602163575757    YES
      00203  0602 00 1 00000         SLW     ,1 
      00204  0074 00 4 01214         TSX     OCABC,4       GET BCD OF LOCATION.     
 TD   00205  3 00000 0 01253         TXH     DIBUF         ..     
      00206  0601 00 1 00001         STO     1,1
      00207  1 77776 1 00210         TXI     *+1,1,-2 
      00210 -0534 00 4 01253         LXD     DIBUF,4       IS IT CORE A 
      00211  3 00001 4 00217         TXH     LC02,4,1      ..     
      00212 -0500 00 0 01307         CAL     =H CORE       YES--MENTION THE FACT.   
      00213  0602 00 1 00000         SLW     ,1 
      00214 -0500 00 0 01277         CAL     =O215757575757 
      00215  0602 00 1 00001         SLW     1,1
      00216  1 77776 1 00217         TXI     *+1,1,-2 
 A    00217                   LC02   BSS  
                              *     
      00217  0056 00  000002  FS01   RNT     FSBIT         IS FILE SYSTEM LOC DESIRED     
      00220  0020 00 0 00231         TRA     FS02          NO     
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 5     
                  
      00221 -0500 00 0 01311         CAL     =O607426336233    YES
      00222  0602 00 1 00000         SLW     ,1 
      00223  0074 00 4 01214         TSX     OCABC,4  
 TD   00224  3 00000 0 01261         TXH     DIBUF+6  
      00225  0601 00 1 00001         STO     1,1
      00226 -0500 00 0 01301         CAL     =O345757575757 
      00227  0602 00 1 00002         SLW     2,1
      00230  1 77775 1 00231         TXI     *+1,1,-3 
 A    00231                   FS02   BSS  
                              *     
      00231  0056 00  000001  CR01   RNT     CRBIT         IS CARRIAGE RETURN DESIRED     
      00232  0020 00 0 00236         TRA     CR02          NO     
      00233 -0500 00 0 01304         CAL     =O555757575757    YES
      00234  0602 00 1 00000         SLW     ,1 
      00235  1 77777 1 00236         TXI     *+1,1,-1 
 A    00236                   CR02   BSS  
                              *     
      00236  1 01227 1 00237  PR04   TXI     *+1,1,OTBUF   CALCULATE SIZE OF RESULTING LINE     
      00237  0756 00 1 00000         PCA     ,1            ..     
      00240  0734 00 1 00000         PAX     ,1            .. NOW IR1=SIZE    
                              *     
      00241 -0520 00 0 01262         NZT     CALLSW        CALL USER-SPECIFIED FUNCTION   
      00242  0020 00 0 00253         TRA     PRP4          OR JUST PRINT
      00243  0634 00 1 01264         SXA     LINZ,1        SET UP MAD ARG     
      00244 -0634 00 1 00250         SXD     CL01,1        SET UP FAP ARG     
      00245  1 01227 1 00246         TXI     *+1,1,OTBUF    
      00246  0634 00 1 00250         SXA     CL01,1   
      00247  0074 00 4 00000  CALL   TSX     --,4          CALL FUNCTION
      00250  3 00000 0 00000  CL01   TXH     --,,--   
 TD   00251  3 00000 0 01264         TXH     LINZ     
      00252  0020 00 0 00265         TRA     RT01     
                              *     
 A    00253                   PRP4   BSS  
      00253  0774 00 2 01227         AXT     OTBUF,2  
      00254 -2 00016 1 00261  PR05   TNX     PR07,1,WRFLXZ  
      00255  0634 00 2 00257         SXA     PR06,2   
      00256  0074 00 4 00002         TSX     $WRFLXA,4
      00257  0 00016 0 00000  PR06           --,,WRFLXZ     
      00260  1 00016 2 00254         TXI     PR05,2,WRFLXZ  
                              *     
      00261  0634 00 2 00264  PR07   SXA     PR08,2   
      00262 -0634 00 1 00264         SXD     PR08,1   
      00263  0074 00 4 00002         TSX     $WRFLXA,4
      00264  0 00000 0 00000  PR08           --,,--   
                              * RETURN    
 A    00265                   RT01   BSS  
      00265  0441 00 0 01265         LDI     SAVI     
      00266 -0774 00 1 00000  SAV1   AXC     --,1     
      00267 -0774 00 2 00000  SAV2   AXC     --,2     
      00270  0020 00 0 00000  SAV4   TRA     --            RETURN AS DIRECTED BY COLT     
                              *     
      00271  0500 00 0 00403  NFOUND CLA     DNF
      00272  0055 00  000100         SIR     NRBIT    
      00273  0020 00 0 00055         TRA     GMESS    
                              *     
      00274  0500 00 2 00404  STAND  CLA     PZE1-1,2      ERROR CODES 1 AND 2 ARE STANDARD     
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 6     
                  
      00275  0020 00 0 00055         TRA     GMESS         .. FOR ALL IO CALLS
                              *     
      00276 -3 77632 2 00271  STAND1 TXL     NFOUND,2,PZE100-PZE999-100    UNKNOWN IF CODE TOO LARGE  
      00277  0500 00 2 00243         CLA     PZE100-100,2  PICK UP STANDARD CODE    
      00300  0020 00 0 00055         TRA     GMESS    
                              *     
      00301  0535 00 2 01256  IOER   LAC     DIBUF+3,2     IO ERROR CODE
      00302  0636 00 2 01267         SCA     ERRN,2   
      00303 -3 77771 2 00306         TXL     IOER2,2,-NOIOER
      00304  0500 00 2 00557         CLA     IOERT,2  
      00305  0020 00 0 00055         TRA     GMESS    
      00306  0500 00 0 00404  IOER2  CLA     DNFIO    
      00307  0055 00  000100         SIR     NRBIT    
      00310  0020 00 0 00055         TRA     GMESS    
                       00311  CALLB  SYN     *             TABLE OF POSSIBLE I/O CALLS    
                  
      00311  644724442624            BCI     1,UPDMFD 
      00312  0 00005 2 00406                 UPDMF,2,5
      00313  242543442624            BCI     1,DELMFD 
      00314  0 00004 2 00412                 DELMF,2,4
      00315  216363212330            BCI     1,ATTACH 
      00316  0 00004 2 00414                 ATTAC,2,4
      00317  644724216325            BCI     1,UPDATE 
      00320 -0 00003 2 00411         MZE     UPDAT,2,3
      00321  464725456060            BCI     1,OPEN   
      00322  0 00024 2 00416                 OPEN,2,20
      00323  226426262551            BCI     1,BUFFER 
      00324  0 00006 2 00440                 BUFFE,2,6
      00325  512426314325            BCI     1,RDFILE 
      00326  0 00010 2 00444                 RDFIL,2,8
      00327  512466213163            BCI     1,RDWAIT 
      00330  0 00010 2 00444                 RDFIL,2,8
      00331  665126314325            BCI     1,WRFILE 
      00332  0 00012 2 00452                 WRFIL,2,10     
      00333  665166213163            BCI     1,WRWAIT 
      00334  0 00012 2 00452                 WRFIL,2,10     
      00335  635126314325            BCI     1,TRFILE 
      00336  0 00011 2 00462                 TRFIL,2,9
      00337  262330252342            BCI     1,FCHECK 
      00340  0 00005 2 00471                 CLOSE,2,5
      00341  266621316360            BCI     1,FWAIT  
      00342  0 00005 2 00471                 CLOSE,2,5
      00343  234346622560            BCI     1,CLOSE  
      00344  0 00006 2 00471                 CLOSE,2,6
      00345  512562256326            BCI     1,RESETF 
      00346  0 00003 2 00411                 UPDAT,2,3
      00347  233026314325            BCI     1,CHFILE 
      00350  0 00014 2 00475                 CHFIL,2,12     
      00351  242543263143            BCI     1,DELFIL 
      00352  0 00010 2 00507                 DELFL,2,8
      00353  266263216325            BCI     1,FSTATE 
      00354  0 00005 2 00507                 DELFL,2,5
      00355  444665263143            BCI     1,MOVFIL 
      00356  0 00012 2 00515                 MOVFL,2,10     
      00357  622563263143            BCI     1,SETFIL 
      00360  0 00005 2 00525                 SETFL,2,5
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 7     
                  
      00361  433145426060            BCI     1,LINK   
      00362  0 00006 2 00530                 LINK,2,6 
      00363  644543314542            BCI     1,UNLINK 
      00364  0 00005 2 00534                 UNLIN,2,5
      00365  214343466360            BCI     1,ALLOT  
      00366 -0 00003 2 00537         MZE     ALLOT,2,3
      00367  626346512725            BCI     1,STORGE 
      00370 -0 00004 2 00537         MZE     ALLOT,2,4
      00371  444664456360            BCI     1,MOUNT  
      00372 -0 00004 2 00541         MZE     MOUNT,2,4
      00373  644446644563            BCI     1,UMOUNT 
      00374 -0 00003 2 00543         MZE     UMOUN,2,3
      00375  652551312670            BCI     1,VERIFY 
      00376 -0 00007 2 00544         MZE     VERIF,2,7
      00377  432122254360            BCI     1,LABEL  
      00400 -0 00006 2 00544         MZE     VERIF,2,6
      00401  632147263143            BCI     1,TAPFIL 
      00402  0 00006 2 00551                 TAPFL,2,6
                  
                       00403  CALLS  SYN     *  
                  
                       00072  NOCALL EQU     CALLS-CALLB    
                              *     
                              *              POINTER TO DIAGNOSTIC COMMENTS   
                              *     
      00403  0 00003 0 00566  DNF    PZE     DIAG0,,3 
      00404  0 00004 0 01135  DNFIO  PZE     DIAGI0,,4
                              *     
      00405  0 00010 0 00571  PZE1   PZE     DIAG1,,8 
      00406  0 00006 0 00601                 DIAG2,,6 
                              *     
      00407  0 00004 0 00607  PZE100         DIAG00,,4
      00410  0 00004 0 00613                 DIAG01,,4
                       00411  PZE999 SYN     *             END OF STANDARD CODES    
                              *     
                       00406  UPDMF  EQU     *-3
      00411  0 00004 0 00617                 DIAGA1,,4
      00412  0 00004 0 00623                 DIAGA2,,4
      00413  0 00004 0 00636                 DIAGA5,,4
                              *     
                       00411  UPDAT  EQU     *-3
      00414  0 00004 0 00623                 DIAGA2,,4
                              *     
                       00412  DELMF  EQU     *-3
      00415  0 00003 0 00627                 DIAGA3,,3
      00416  0 00004 0 00632                 DIAGA4,,4
                              *     
                       00414  ATTAC  EQU     *-3
      00417  0 00003 0 00627                 DIAGA3,,3
      00420  0 00004 0 00623                 DIAGA2,,4
                              *     
                       00416  OPEN   EQU     *-3
      00421  0 00002 0 00642                 DIAGB1,,2
      00422  0 00004 0 00644                 DIAGB2,,4
      00423  0 00003 0 00650                 DIAGB3,,3
      00424  0 00003 0 00566                 DIAG0,,3 
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 8     
                  
      00425  0 00004 0 00657                 DIAGB5,,4
      00426  0 00004 0 00663                 DIAGB6,,4
      00427  0 00006 0 00667                 DIAGB7,,6
      00430  0 00006 0 00675                 DIAGB8,,6
      00431  0 00004 0 00623                 DIAGA2,,4
      00432  0 00002 0 00703                 DIAGB9,,2
      00433  0 00003 0 00705                 DIAGC1,,3
      00434  0 00005 0 00710                 DIAGC2,,5
      00435  0 00004 0 00715                 DIAGC3,,4
      00436  0 00005 0 00721                 DIAGC4,,5
      00437 -0 00000 0 00000         MZE  
      00440  0 00004 0 00726                 DIAGC5,,4
      00441  0 00004 0 00613                 DIAG01,,4
      00442  0 00007 0 00752                 DIAGC9,,7
                              *     
                       00440  BUFFE  EQU     *-3
      00443  0 00002 0 00761                 DIAGD1,,2
      00444  0 00005 0 00763                 DIAGD2,,5
      00445  0 00003 0 00770                 DIAGD3,,3
      00446 -0 00000 0 00000         MZE  
                              *     
                       00444  RDFIL  EQU     *-3
      00447  0 00002 0 00761                 DIAGD1,,2
      00450  0 00004 0 00773                 DIAGD4,,4
      00451  0 00004 0 01003                 DIAGD6,,4
      00452  0 00005 0 00763                 DIAGD2,,5
      00453 -0 00000 0 00000         MZE  
      00454  0 00003 0 00732                 DIAGC6,,3
                              *     
                       00452  WRFIL  EQU     *-3
      00455  0 00002 0 00761                 DIAGD1,,2
      00456  0 00004 0 00777                 DIAGD5,,4
      00457  0 00004 0 01003                 DIAGD6,,4
      00460  0 00004 0 00715                 DIAGC3,,4
      00461  0 00005 0 00763                 DIAGD2,,5
      00462 -0 00000 0 00000         MZE  
      00463  0 00010 0 00735                 DIAGC7,,8
      00464  0 00005 0 00745                 DIAGC8,,5
                              *     
                       00462  TRFIL  EQU     *-3
      00465  0 00002 0 00761                 DIAGD1,,2
      00466  0 00004 0 00777                 DIAGD5,,4
      00467  0 00004 0 01003                 DIAGD6,,4
      00470  0 00005 0 00763                 DIAGD2,,5
      00471  0 00003 0 01007                 DIAGD7,,3
      00472 -0 00000 0 00000         MZE  
      00473  0 00010 0 00735                 DIAGC7,,8
                              *     
                       00471  CLOSE  EQU     *-3
      00474  0 00002 0 00761                 DIAGD1,,2
      00475  0 00005 0 00763                 DIAGD2,,5
      00476 -0 00000 0 00000         MZE  
      00477  0 00004 0 00623                 DIAGA2,,4
                              *     
                       00475  CHFIL  EQU     *-3
      00500  0 00006 0 01012                 DIAGD8,,6
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 9     
                  
      00501  0 00002 0 00703                 DIAGB9,,2
      00502  0 00004 0 00653                 DIAGB4,,4
      00503  0 00004 0 00657                 DIAGB5,,4
      00504  0 00004 0 00663                 DIAGB6,,4
      00505  0 00010 0 01020                 DIAGD9,,8
      00506  0 00004 0 00715                 DIAGC3,,4
      00507  0 00003 0 01030                 DIAGE2,,3
      00510  0 00004 0 00623                 DIAGA2,,4
      00511  0 00002 0 00642                 DIAGB1,,2
                              *     
                       00507  DELFL  EQU     *-3
      00512  0 00002 0 00703                 DIAGB9,,2
      00513  0 00004 0 00653                 DIAGB4,,4
      00514  0 00004 0 00657                 DIAGB5,,4
      00515  0 00003 0 01036                 DIAGE3,,3
      00516  0 00004 0 00623                 DIAGA2,,4
      00517  0 00002 0 00642                 DIAGB1,,2
                              *     
                       00515  MOVFL  EQU     *-3
      00520  0 00002 0 00703                 DIAGB9,,2
      00521  0 00002 0 01041                 DIAGE4,,2
      00522  0 00003 0 01036                 DIAGE3,,3
      00523  0 00007 0 01043                 DIAGE5,,7
      00524  0 00004 0 00623                 DIAGA2,,4
      00525  0 00002 0 00642                 DIAGB1,,2
      00526  0 00004 0 00613                 DIAG01,,4
      00527  0 00004 0 00726                 DIAGC5,,4
                              *     
                       00525  SETFL  EQU     *-3
      00530  0 00003 0 00705                 DIAGC1,,3
      00531  0 00004 0 00623                 DIAGA2,,4
      00532  0 00002 0 01041                 DIAGE4,,2
                              *     
                       00530  LINK   EQU     *-3
      00533  0 00003 0 01030                 DIAGE2,,3
      00534  0 00004 0 00623                 DIAGA2,,4
      00535  0 00006 0 01052                 DIAGE6,,6
      00536  0 00004 0 00726                 DIAGC5,,4
                              *     
                       00534  UNLIN  EQU     *-3
      00537  0 00002 0 00703                 DIAGB9,,2
      00540  0 00002 0 01060                 DIAGE7,,2
      00541  0 00004 0 00623                 DIAGA2,,4
                              *     
                       00537  ALLOT  EQU     *-3
      00542  0 00003 0 00705                 DIAGC1,,3
      00543  0 00004 0 00623                 DIAGA2,,4
                              *     
                       00541  MOUNT  EQU     *-3
      00544  0 00007 0 01062                 DIAGF1,,7
      00545  0 00006 0 01126                 DIAGF8,,6
                              *     
                       00543  UMOUN  EQU     *-3
      00546  0 00005 0 01071                 DIAGF2,,5
                              *     
                       00544  VERIF  EQU     *-3
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 10    
                  
      00547  0 00004 0 01107                 DIAGF5,,4
      00550  0 00005 0 01121                 DIAGF7,,5
      00551  0 00006 0 01101                 DIAGF4,,6
      00552  0 00006 0 01113                 DIAGF6,,6
      00553  0 00003 0 01076                 DIAGF3,,3
                              *     
                       00551  TAPFL  EQU     *-3
      00554  0 00003 0 01030                 DIAGE2,,3
      00555  0 00004 0 00623                 DIAGA2,,4
      00556  0 00005 0 00710                 DIAGC2,,5
      00557  0 00004 0 00726                 DIAGC5,,4
                              *     
                       00557  IOERT  EQU     *-1
      00560  0 00006 0 01141                 DIAGI1,,6
      00561  0 00006 0 01147                 DIAGI2,,6
      00562  0 00006 0 01155                 DIAGI3,,6
      00563  0 00007 0 01163                 DIAGI4,,7
      00564  0 00005 0 01172                 DIAGI5,,5
      00565  0 00004 0 01177                 DIAGI6,,4
                       00007  NOIOER EQU     *-IOERT  
                              *     
                  
                                             DIAGNOSTIC COMMENTS  
                  
      00566  644542454666     DIAG0  BCI     3,UNKNOWN ERROR CODE 
      00567  456025515146     
      00570  516023462425     
                              *     
      00571  314343252721     DIAG1  BCI     8,ILLEGAL CALLING SEQUENCE OR PROTECTION VIOLATION 
      00572  436023214343     
      00573  314527606225     
      00574  506425452325     
      00575  604651604751     
      00576  466325236331     
      00577  464560653146     
      00600  432163314645     
      00601  644521646330     DIAG2  BCI     6,UNAUTHORIZED USE OF PRIVILEGED CALL  
      00602  465131712524     
      00603  606462256046     
      00604  266047513165     
      00605  314325272524     
      00606  602321434360     
                              *     
      00607  255151465160     DIAG00 BCI     4,ERROR IN U.F.D./M.F.D.   
      00610  314560643326     
      00611  332433614433     
      00612  263324336060     
      00613  643326332433     DIAG01 BCI     4,U.F.D./M.F.D. NOT FOUND  
      00614  614433263324     
      00615  336045466360     
      00616  264664452460     
                              *     
      00617  646225516021     DIAGA1 BCI     4,USER ALREADY IN M.F.D.   
      00620  435125212470     
      00621  603145604433     
      00622  263324336060     
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 11    
                  
      00623  442123303145     DIAGA2 BCI     4,MACHINE OR SYSTEM ERROR  
      00624  256046516062     
      00625  706263254460     
      00626  255151465160     
      00627  646225516045     DIAGA3 BCI     3,USER NOT IN M.F.D. 
      00630  466360314560     
      00631  443326332433     
      00632  643326332433     DIAGA4 BCI     4,U.F.D. STILL IN USE
      00633  606263314343     
      00634  603145606462     
      00635  256060606060     
      00636  712551466047     DIAGA5 BCI     4,ZERO PROBLEM NUMBER
      00637  514622432544     
      00640  604564442225     
      00641  516060606060     
                              *     
      00642  536021236331     DIAGB1 BCI     2,$ ACTIVE     
      00643  652560606060     
      00644  634646604421     DIAGB2 BCI     4,TOO MANY ACTIVE FILES    
      00645  457060212363     
      00646  316525602631     
      00647  432562606060     
      00650  314343252721     DIAGB3 BCI     3,ILLEGAL STATUS     
      00651  436062632163     
      00652  646260606060     
      00653  433145422524     DIAGB4 BCI     4,LINKED FILE $ NOT FOUND  
      00654  602631432560     
      00655  536045466360     
      00656  264664452460     
      00657  536043314542     DIAGB5 BCI     4,$ LINK DEPTH EXCEEDED    
      00660  602425476330     
      00661  602567232525     
      00662  242524606060     
      00663  536031456014     DIAGB6 BCI     4,$ IN 'PRIVATE' MODE
      00664  475131652163     
      00665  251460444624     
      00666  256060606060     
      00667  216363254447     DIAGB7 BCI     6,ATTEMPT TO WRITE 'READ-ONLY' FILE $  
      00670  636063466066     
      00671  513163256014     
      00672  512521244046     
      00673  454370146026     
      00674  314325605360     
      00675  216363254447     DIAGB8 BCI     6,ATTEMPT TO READ 'WRITE-ONLY' FILE $  
      00676  636063466051     
      00677  252124601466     
      00700  513163254046     
      00701  454370146026     
      00702  314325605360     
      00703  536045466360     DIAGB9 BCI     2,$ NOT FOUND  
      00704  264664452460     
                              *     
      00705  314343252721     DIAGC1 BCI     3,ILLEGAL DEVICE     
      00706  436024256531     
      00707  232560606060     
      00710  454660624721     DIAGC2 BCI     5,NO SPACE ALLOTTED FOR DEVICE   
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 12    
                  
      00711  232560214343     
      00712  466363252460     
      00713  264651602425     
      00714  653123256060     
      00715  512523465124     DIAGC3 BCI     4,RECORD QUOTA OVERFLOW    
      00716  605064466321     
      00717  604665255126     
      00720  434666606060     
      00721  536022253145     DIAGC4 BCI     5,$ BEING RESTORED FROM TAPE     
      00722  276051256263     
      00723  465125246026     
      00724  514644606321     
      00725  472560606060     
      00726  314343252721     DIAGC5 BCI     4,ILLEGAL USE OF M.F.D.    
      00727  436064622560     
      00730  462660443326     
      00731  332433606060     
      00732  643326332433     DIAGC6 BCI     3,U.F.D. DELETED     
      00733  602425432563     
      00734  252460606060     
      00735  454645407125     DIAGC7 BCI     8,NON-ZERO 'RELLOC' ACCESSING WRITE-ONLY FILE $    
      00736  514660145125     
      00737  434346231460     
      00740  212323256262     
      00741  314527606651     
      00742  316325404645     
      00743  437060263143     
      00744  256053606060     
      00745  536044216731     DIAGC8 BCI     5,$ MAXIMUM LENGTH EXCEEDED
      00746  446444604325     
      00747  452763306025     
      00750  672325252425     
      00751  246060606060     
      00752  536066216260     DIAGC9 BCI     7,$ WAS REMOVED AND MUST BE RETRIEVED  
      00753  512544466525     
      00754  246021452460     
      00755  446462636022     
      00756  256051256351     
      00757  312565252460     
      00760  606060606060     
                              *     
      00761  536045466360     DIAGD1 BCI     2,$ NOT ACTIVE 
      00762  212363316525     
      00763  536047512565     DIAGD2 BCI     5,$ PREVIOUS I/O OUT OF BOUNDS   
      00764  314664626031     
      00765  614660466463     
      00766  604626602246     
      00767  644524626060     
      00770  536022642626     DIAGD3 BCI     3,$ BUFFER TOO SMALL 
      00771  255160634646     
      00772  606244214343     
      00773  536045466360     DIAGD4 BCI     4,$ NOT IN READ STATUS     
      00774  314560512521     
      00775  246062632163     
      00776  646260606060     
      00777  536045466360     DIAGD5 BCI     4,$ NOT IN WRITE STATUS    
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 13    
                  
      01000  314560665131     
      01001  632560626321     
      01002  636462606060     
      01003  536045466022     DIAGD6 BCI     4,$ NO BUFFER ASSIGNED     
      01004  642626255160     
      01005  216262312745     
      01006  252460606060     
      01007  145125434346     DIAGD7 BCI     3,'RELLOC' TOO LARGE 
      01010  231460634646     
      01011  604321512725     
      01012  216363254447     DIAGD8 BCI     6,ATTEMPT TO CHANGE M.F.D. OR U.F.D.   
      01013  636063466023     
      01014  302145272560     
      01015  443326332433     
      01016  604651606433     
      01017  263324336060     
      01020  216363254447     DIAGD9 BCI     8,ATTEMPT TO CHANGE PROTECTED FILE OF ANOTHER USER 
      01021  636063466023     
      01022  302145272560     
      01023  475146632523     
      01024  632524602631     
      01025  432560462660     
      01026  214546633025     
      01027  516064622551     
                              *     
      01030  536021435125     DIAGE2 BCI     6,$ ALREADY EXISTS  OR NAME CONFLICT   
      01031  212470602567     
      01032  316263626060     
      01033  465160452144     
      01034  256023464526     
      01035  433123636060     
      01036  536014475146     DIAGE3 BCI     3,$ 'PROTECTED'
      01037  632523632524     
      01040  146060606060     
      01041  536014433145     DIAGE4 BCI     2,$ 'LINKED'   
      01042  422524146060     
      01043  536021435125     DIAGE5 BCI     7,$ ALREADY EXISTS IN OTHER FILE DIRECTORY   
      01044  212470602567     
      01045  316263626031     
      01046  456046633025     
      01047  516026314325     
      01050  602431512523     
      01051  634651706060     
      01052  466330255160     DIAGE6 BCI     6,OTHER FILE DIRECTORY NOT IN M.F.D.   
      01053  263143256024     
      01054  315125236346     
      01055  517060454663     
      01056  603145604433     
      01057  263324336060     
      01060  536045466360     DIAGE7 BCI     2,$ NOT LINKED 
      01061  433145422524     
                              *     
      01062  454660632147     DIAGF1 BCI     7,NO TAPE AVAILABLE ON SPECIFIED CHANNEL     
      01063  256021652131     
      01064  432122432560     
      01065  464560624725     
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 14    
                  
      01066  233126312524     
      01067  602330214545     
      01070  254360606060     
      01071  632147256026     DIAGF2 BCI     5,TAPE FILE CURRENTLY IN USE     
      01072  314325602364     
      01073  515125456343     
      01074  706031456064     
      01075  622560606060     
      01076  432122254360     DIAGF3 BCI     3,LABEL INCORRECT    
      01077  314523465151     
      01100  252363606060     
      01101  444664456360     DIAGF4 BCI     6,MOUNT FAILED, ILLEGAL OPERATION
      01102  262131432524     
      01103  736031434325     
      01104  272143604647     
      01105  255121633146     
      01106  456060606060     
      01107  632147256026     DIAGF5 BCI     4,TAPE FILE DOES NOT EXIST 
      01110  314325602446     
      01111  256260454663     
      01112  602567316263     
      01113  444664456360     DIAGF6 BCI     6,MOUNT FAILED, OPNS. DIFFICULTIES     
      01114  262131432524     
      01115  736046474562     
      01116  336024312626     
      01117  312364436331     
      01120  256260606060     
      01121  442123303145     DIAGF7 BCI     5,MACHINE ERROR OR BAD STATUS    
      01122  256025515146     
      01123  516046516022     
      01124  212460626321     
      01125  636462606060     
      01126  146445316345     DIAGF8 BCI     7,'UNITNO'-'AUTHNO' CONFLICT FOR TAPE FILE   
      01127  461440142164     
      01130  633045461460     
      01131  234645264331     
      01132  236360264651     
      01133  606321472560     
      01134  263143256060     
                              *     
      01135  644542454666     DIAGI0 BCI     4,UNKNOWN I/O ERROR CODE   
      01136  456031614660     
      01137  255151465160     
      01140  234624256060     
      01141  472151316370     DIAGI1 BCI     6,PARITY ERROR READING OR WRITING $    
      01142  602551514651     
      01143  605125212431     
      01144  452760465160     
      01145  665131633145     
      01146  276053606060     
      01147  262163214360     DIAGI2 BCI     6,FATAL ERROR READING OR WRITING FILE  
      01150  255151465160     
      01151  512521243145     
      01152  276046516066     
      01153  513163314527     
      01154  602631432560     
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 15    
                  
      01155  216521314321     DIAGI3 BCI     6,AVAILABLE SPACE ON DEVICE EXHAUSTED  
      01156  224325606247     
      01157  212325604645     
      01160  602425653123     
      01161  256025673021     
      01162  646263252460     
      01163  632147256026     DIAGI4 BCI     7,TAPE FILE NOT MOUNTED OR NOT AVAILABLE     
      01164  314325604546     
      01165  636044466445     
      01166  632524604651     
      01167  604546636021     
      01170  652131432122     
      01171  432560606060     
      01172  314343252721     DIAGI5 BCI     5,ILLEGAL I/O REQUEST FOR DEVICE 
      01173  436031614660     
      01174  512550642562     
      01175  636026465160     
      01176  242565312325     
      01177  253346336333     DIAGI6 BCI     4,E.O.T. PASSED, WRITING $ 
      01200  604721626225     
      01201  247360665131     
      01202  633145276053     
                              * ROUTINES TO DO THE WORK OF DEFBC AND OCABC    
      01203  0560 00 0 01270  DEFBC  LDQ     =0 
      01204 -0500 60 4 00001         CAL*    1,4
      01205  0225 06 0 01272         VDP     =1E4B29,,6     
      01206  0225 06 0 01273         VDP     =1E3B23,,6     
      01207  0225 06 0 01274         VDP     =100B17,,6     
      01210  0225 06 0 01275         VDP     =10B11,,6
      01211  0225 06 0 01276         VDP     =1B5,,6  
      01212  0131 00 0 00000         XCA  
      01213  0020 00 4 00001         TRA     1,4
      01214  0636 00 4 01225  OCABC  SCA     CLOC4,4  
      01215 -0500 60 4 00001         CAL*    1,4
      01216 -0765 00 0 00017         LGR     15 
      01217  0500 00 0 01271         CLA     =H00000  
      01220  0774 00 4 00005         AXT     5,4
      01221  0767 00 0 00003  CLOC1  ALS     3  
      01222 -0763 00 0 00003         LGL     3  
      01223  2 00001 4 01221         TIX     CLOC1,4,1
      01224 -0760 00 0 00003         SSM                   TO PRESERVE BLANK  
      01225 -0774 00 4 00000  CLOC4  AXC     --,4     
      01226  0020 00 4 00001         TRA     1,4
                              *     
      01227                   OTBUF  BSS     20            1 OUTPUT LINE BUFFER. NO CHECKING FOR SIZE 
      01253                   DIBUF  BSS     7             2 BUFFER FOR IODIAG. MAY BE OVERWRITTEN.   
      01262  0 00000 0 00000  CALLSW                       NON-ZERO IF USER FUNCTION SHOULD BE CALLED.
      01263  0 00000 0 00000  IR4                          DECREMENT=CALLING IR4    
      01264  0 00000 0 00000  LINZ                         SIZE OF RESULTING LINE.  
      01265  0 00000 0 00000  SAVI                         SAVE LOC FOR INDICATORS. 
      01266  0 00000 0 00000  MASK                         SAVE LOC FOR SPECIFIED MASK    
      01267  0 00000 0 00000  ERRN                         ERROR NUMBER 
                       00016  WRFLXZ EQU     14            WRFLX LINE SIZE FOR LIB VERSION
                      000053  FCHAR  BOOL    000053        DOLLAR SIGN  
                      000200  QTBIT  BOOL    200
                      000100  NRBIT  BOOL    100
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 16    
                  
                      000040  MSBIT  BOOL    40 
                      000020  FNBIT  BOOL    20 
                      000010  RNBIT  BOOL    10 
                      000004  LCBIT  BOOL    04 
                      000002  FSBIT  BOOL    02 
                      000001  CRBIT  BOOL    01 
                      000375  DFMASK BOOL    QTBIT+NRBIT+MSBIT+FNBIT+RNBIT+LCBIT+CRBIT    
                                     END  
                  
        LITERALS  
      01270  000000000000     
      01271  000000000060     
      01272  000002342000     
      01273  000017500000     
      01274  000144000000     
      01275  001200000000     
      01276  010000000000     
      01277  215757575757     
      01300  255151465160     
      01301  345757575757     
      01302  356057575757     
      01303  404057575757     
      01304  555757575757     
      01305  575757575757     
      01306  602163575757     
      01307  602346512560     
      01310  605757575757     
      01311  607426336233     
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1312 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        403    DNF   271
       1263    IR4     6,   10,   12
          1    LIB     3
        247   CALL    24
        250   CL01   244,  246
          1   COLT     7
        231   CR01      
        236   CR02   232
       1267   ERRN    31,   77,  302
        140   FN01      
        152   FN02   142
        217   FS01      
        231   FS02   220
        301   IOER    54
        200   LC01      
        217   LC02   201,  211
        530   LINK   362,  533
       1264   LINZ   243,  251
       1266   MASK    20,   46,  124,  126,  140,  170
        107   MS01   123
        111   MS02   117
        123   MS03    63
        132   MS04   116
        152   MS05      
        154   MS06      
        162   MS07    65
        135   MSP4   134
        140   MSP5   106,  131
        163   MSP6   167
        167   MSP7    64
        170   MSP8   153,  162
        101   NR01   102
        105   NR02    75
        103   NRP1      
        416   OPEN   322,  421
         17   PR00    14
         36   PR01    41
         43   PR02    40
         61   PR03    60
        236   PR04      
        254   PR05   260
        257   PR06   255
        261   PR07   254
        264   PR08   261,  262
         26   PRP1    22
         44   PRP2      
        253   PRP4   242
        405   PZE1   274
         74   QT01    70
        170   RN01      
        200   RN02   172
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        265   RT01   252
        266   SAV1     3
        267   SAV2     4
        270   SAV4    11
       1265   SAVI     5,  265
        537  ALLOT   366,  370,  542
        414  ATTAC   316,  417
        440  BUFFE   324,  443
        311  CALLB   311,  403
        403  CALLS    36,   43,   53,  403
        475  CHFIL   350,  500
       1221  CLOC1  1223
       1225  CLOC4  1214
        471  CLOSE   340,  342,  344,  474
          1  CRBIT   231, 1270
       1203  DEFBC    76
        507  DELFL   352,  354,  512
        412  DELMF   314,  415
        566  DIAG0   403,  424
        571  DIAG1   405
        601  DIAG2   406
       1253  DIBUF    27,   30,   34,  143,  147,  175,  205,  210,  224,  301
        404  DNFIO   306
         53  FCHAR   113, 1270
         20  FNBIT    45,  141, 1270
          2  FSBIT   217, 1270
         55  GMESS   273,  275,  300,  305,  310
        306  IOER2   303
        557  IOERT   304,  560,  566
          4  LCBIT   200, 1270
        541  MOUNT   372,  544
        515  MOVFL   356,  520
         40  MSBIT   105,  125,  152, 1270
        100  NRBIT    74,  272,  307, 1270
       1214  OCABC   204,  223
       1227  OTBUF    66,  236,  245,  253
        200  QTBIT    67, 1270
        444  RDFIL   326,  330,  447
         10  RNBIT   171, 1270
        525  SETFL   360,  530
        274  STAND    32
        551  TAPFL   402,  554
        462  TRFIL   336,  465
        543  UMOUN   374,  546
        534  UNLIN   364,  537
        411  UPDAT   320,  346,  414
        406  UPDMF   312,  411
        544  VERIF   376,  400,  547
        452  WRFIL   332,  334,  455
       1262 CALLSW    21,   25,  241
        375 DFMASK    17, 1270
        607 DIAG00   407
        613 DIAG01   410,  441,  526
        617 DIAGA1   411
        623 DIAGA2   412,  414,  420,  431,  477,  510,  516,  524,  531,  534,  541,  543,  555
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        627 DIAGA3   415,  417
        632 DIAGA4   416
        636 DIAGA5   413
        642 DIAGB1   421,  511,  517,  525
        644 DIAGB2   422
        650 DIAGB3   423
        653 DIAGB4   502,  513
        657 DIAGB5   425,  503,  514
        663 DIAGB6   426,  504
        667 DIAGB7   427
        675 DIAGB8   430
        703 DIAGB9   432,  501,  512,  520,  537
        705 DIAGC1   433,  530,  542
        710 DIAGC2   434,  556
        715 DIAGC3   435,  460,  506
        721 DIAGC4   436
        726 DIAGC5   440,  527,  536,  557
        732 DIAGC6   454
        735 DIAGC7   463,  473
        745 DIAGC8   464
        752 DIAGC9   442
        761 DIAGD1   443,  447,  455,  465,  474
        763 DIAGD2   444,  452,  461,  470,  475
        770 DIAGD3   445
        773 DIAGD4   450
        777 DIAGD5   456,  466
       1003 DIAGD6   451,  457,  467
       1007 DIAGD7   471
       1012 DIAGD8   500
       1020 DIAGD9   505
       1030 DIAGE2   507,  533,  554
       1036 DIAGE3   515,  522
       1041 DIAGE4   521,  532
       1043 DIAGE5   523
       1052 DIAGE6   535
       1060 DIAGE7   540
       1062 DIAGF1   544
       1071 DIAGF2   546
       1076 DIAGF3   553
       1101 DIAGF4   551
       1107 DIAGF5   547
       1113 DIAGF6   552
       1121 DIAGF7   550
       1126 DIAGF8   545
       1135 DIAGI0   404
       1141 DIAGI1   560
       1147 DIAGI2   561
       1155 DIAGI3   562
       1163 DIAGI4   563
       1172 DIAGI5   564
       1177 DIAGI6   565
          0 IODIAG    26
        271 NFOUND    42,   52,   56,  276
         72 NOCALL    35,  403
          7 NOIOER   303,  566
1       PRNTER--PRINT ERROR DIAGNOSTICS FOR FILE SYSTEM.                                         PAGE 4     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          3 PRNTER     0
        407 PZE100   276,  277
        411 PZE999   276,  411
        276 STAND1    33
          2 WRFLXA   256,  263
         16 WRFLXZ   254,  257,  260, 1270
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




   QED   BCD 10/04/70 1632.5   61587         00000    
1     FAP ASSEMBLY LISTING ... ... ...          FILE     QED   FAP               06/22/70 1518.0 PAGE 1     
                  
                  
        TRANSFER VECTOR 
      00000  502524606060     QED   
                  
      00001  0020 60 0 00000  MAIN   TRA*    $QED     
                                     END  
1     FAP ASSEMBLY LISTING ... ... ...          FILE     QED   FAP               06/22/70 1518.0 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          2 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          0    QED     1
          1   MAIN      
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 1     
                  
                       00014         ENTRY   QED
                       01256         ENTRY   TYPE0    
                                     EXTERN  FREEDT   
                                     EXTERN  INITDT   
                                     EXTERN  ZCMD     
                                     EXTERN  CANON    
                                     EXTERN  SETOPS   
                                     EXTERN  INESC    
                                     EXTERN  OUTESC   
                                     EXTERN  EKEDIT   
                                     EXTERN  CNVTBL   
                  
        TRANSFER VECTOR 
      00000  265125252463     FREEDT
      00001  314531632463     INITDT
      00002  712344246060     ZCMD  
      00003  232145464560     CANON 
      00004  622563464762     SETOPS
      00005  314525622360     INESC 
      00006  466463256223     OUTESC
      00007  254225243163     EKEDIT
      00010  234565632243     CNVTBL
                  
      00011  0774 00 0 00000  *EVEN*
                  
        LINKAGE DIRECTOR
      00012  000000000000     
      00013  502524606060     
                  
                                     EVEN 
                              DIVIDE MACRO   A,B
                                     ZAC  
                                     DVP     =A 
                                     SLW     BUF1+B   
                                     END     DIVIDE   
      00014  0760 00 0 00016  QED    LMTM 
      00015  0074 00 4 07303         TSX     WHOAMI,4 
      00016  0 00004 0 07344         PZE     BUF1,,4  
      00017 -0500 00 0 07345         CAL     BUF1+1   
      00020  0602 00 0 06626         SLW     CRC6+1   
      00021  0602 00 0 06632         SLW     CRC7+1   
      00022 -0500 00 0 11404         CAL     =O100000 
      00023 -0602 00 0 00010         ORS     CNVTBL   
      00024  0074 00 4 00001         TSX     INITDT,4 
      00025 -0340 00 0 11474         LAS     =H(FIB)  
      00026  0020 00 0 00030         TRA     *+2
      00027  0020 00 0 00056         TRA     INAR     
      00030  0074 00 4 07325         TSX     OPEN,4   
      00031  3 00000 0 11450         PAR     =HR
      00032  3 00000 0 11455         PAR     =H  USER 
      00033  3 00000 0 11445         PAR     =HPROFIL 
      00034  3 00000 0 11442         PAR     =-0
      00035  3 00000 0 11442         PAR     =-0
      00036  3 00000 0 00056         PAR     INAR     
      00037  3 00000 0 07264         PAR     COPY     
      00040  0074 00 4 07327         TSX     RDWAIT,4 
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 2     
                  
      00041  3 00000 0 11455         PAR     =H  USER 
      00042  3 00000 0 11445         PAR     =HPROFIL 
      00043  3 00000 0 11401         PAR     =404     
      00044  3 00002 0 07026         PAR     PPPMT,,2 
      00045  3 00000 0 00047         PAR     *+2
      00046  3 00000 0 07264         PAR     COPY     
      00047  0074 00 4 07324         TSX     CLOSE,4  
      00050  3 00000 0 11455         PAR     =H  USER 
      00051  3 00000 0 11445         PAR     =HPROFIL 
      00052  0074 00 4 07305         TSX     PERMIT,4 
      00053  3 00000 0 07026         PAR     PPPMT    
      00054  3 00000 0 07027         PAR     PPPMT+1  
      00055 -0625 00 0 07301         STL     PMTFLG   
      00056  0074 00 4 07320  INAR   TSX     GETMEM,4 
      00057  0771 00 0 00002         ARS     2  
      00060  0400 00 0 11317         ADD     =1 
      00061  0767 00 0 00002         ALS     2  
      00062  0737 00 5 00000         PAC     ,5 
      00063  0737 00 1 00000         PAC     ,1 
      00064  1 77773 1 00065         TXI     *+1,1,-5 
      00065 -0634 00 1 00102         SXD     IN2,1    
      00066  0771 00 0 00010         ARS     8  
      00067  0400 00 0 11317         ADD     =1 
      00070  0767 00 0 00010         ALS     8  
      00071  0737 00 1 00000         PAC     ,1 
      00072  0074 00 4 07336         TSX     SETMEM,4 
      00073  0600 00 1 00004         STZ     04,1     
      00074  1 00004 1 00075  IN1    TXI     *+1,1,4  
      00075  0756 00 1 00000         PCA     ,1 
      00076  0601 00 1 00004         STO     04,1     
      00077  0600 00 1 00003         STZ     03,1     
      00100  0600 00 1 00002         STZ     02,1     
      00101  0600 00 1 00001         STZ     01,1     
      00102 -3 00000 1 00074  IN2    TXL     IN1,1,** 
      00103  0636 00 5 07242         SCA     BUFER,5  
      00104  0600 00 0 07243         STZ     BBASE    
      00105 -0500 00 0 11351         CAL     =O60     
      00106  0074 00 4 03304         TSX     BOPEN,4  
      00107  0636 00 5 07244         SCA     INPUT,5  
      00110  0636 00 5 07245         SCA     IBASE,5  
      00111 -0500 00 5 00000         CAL     00,5     
      00112  0737 00 5 00000         PAC     ,5 
      00113  0600 00 0 07241         STZ     RECLEV   
      00114  0774 00 7 00000         AXT     00,7     
      00115  0074 00 4 00000         TSX     FREEDT,4 
      00116  0074 00 4 07335         TSX     SETFUL,4 
      00117  0074 00 4 07316         TSX     SETBRK,4 
      00120  0 00000 0 00674         PZE     INTRUP   
      00121  0074 00 4 07323         TSX     WRFLX,4  
      00122  0 00001 0 00263         PZE     MES2,,1  
      00123  0074 00 4 07315         TSX     GETCOM,4 
      00124  0 00000 0 00001         PZE     1  
      00125 -0340 00 0 11476         LAS     =O777777777777 
      00126  0020 00 0 00130         TRA     *+2
      00127  0020 00 0 00765         TRA     ADDRES   
      00130  0602 00 0 07264         SLW     COPY     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 3     
                  
      00131 -0500 00 0 11331         CAL     =O30     
      00132  0602 00 0 10616         SLW     BUF6+298 
      00133 -0500 00 0 11351         CAL     =O60     
      00134  0602 00 0 10615         SLW     BUF6+297 
      00135 -0500 00 0 11325         CAL     =O12     
      00136  0602 00 0 10614         SLW     BUF6+296 
      00137  0774 00 7 00001         AXT     1,7
      00140 -0500 00 0 11347         CAL     =O56     
      00141  0074 00 4 03304         TSX     BOPEN,4  
      00142 -0500 00 0 07251         CAL     ZER
      00143  0602 00 0 07247         SLW     ADDR2    
      00144  0074 00 4 03177         TSX     INSERT,4 
      00145  0 00000 0 00155         PZE     IN3
      00146 -0500 00 0 11351         CAL     =O60     
      00147  0074 00 4 03304         TSX     BOPEN,4  
      00150  0074 00 4 03406         TSX     SETFL,4  
      00151 -0774 00 4 05375         AXC     CRD2-1,4 
      00152  0636 00 4 02733         SCA     FC1,4    
      00153 -0774 00 2 00001         AXC     1,2
      00154  0020 00 0 02672         TRA     SETFC+2  
      00155  0636 00 4 00235  IN3    SCA     PM5,4    
      00156  0636 00 2 00236         SCA     PM5+1,2  
      00157 -0774 00 2 00000  PM1    AXC     **,2     
      00160  3 00000 2 00232         TXH     PM4,2,0  
      00161  0500 00 0 11362         CLA     =O142    
      00162  0602 00 0 00014         SLW     BUF3     
      00163 -0500 00 0 11351         CAL     =O60     
      00164  0602 00 0 00015         SLW     BUF3+1   
      00165 -0500 00 0 11325         CAL     =O12     
      00166  0602 00 0 00016         SLW     BUF3+2   
      00167 -0500 00 0 11367         CAL     =O162    
      00170  0602 00 0 00017         SLW     BUF3+3   
      00171 -0500 00 0 11361         CAL     =O141    
      00172  0602 00 0 00020         SLW     BUF3+4   
      00173 -0500 00 0 11340         CAL     =O40     
      00174  0602 00 0 00021         SLW     BUF3+5   
      00175  0074 00 4 07315         TSX     GETCOM,4 
      00176  0 00000 0 00001         PZE     1  
      00177  0602 00 0 07337         SLW     FILNAM   
      00200  0074 00 4 00240         TSX     PMN,4    
      00201 -0500 00 0 11340         CAL     =O40     
      00202  0602 00 2 00021         SLW     BUF3+5,2 
      00203 -0500 00 0 11453         CAL     =H   QED 
      00204  0602 00 0 07340         SLW     FILNAM+1 
      00205  0074 00 4 00240         TSX     PMN,4    
      00206 -0500 00 0 11331         CAL     =O30     
      00207  0602 00 2 00022         SLW     BUF3+6,2 
      00210 -0500 00 0 11351         CAL     =O60     
      00211  0602 00 2 00023         SLW     BUF3+7,2 
      00212 -0500 00 0 11325         CAL     =O12     
      00213  0602 00 2 00024         SLW     BUF3+8,2 
      00214  1 77775 2 00215         TXI     *+1,2,-3 
      00215  0074 00 4 07315         TSX     GETCOM,4 
      00216  0 00000 0 00002  PM2    PZE     2  
      00217 -0340 00 0 11476         LAS     =O777777777777 
      00220  0020 00 0 00222         TRA     *+2
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 4     
                  
      00221  0020 00 0 00227         TRA     PM3
      00222  0074 00 4 00240         TSX     PMN,4    
      00223 -0500 00 0 00216         CAL     PM2
      00224  0361 00 0 11317         ACL     =1 
      00225  0602 00 0 00216         SLW     PM2
      00226  0020 00 0 00215         TRA     PM2-1    
      00227 -0500 00 0 11321  PM3    CAL     =O3
      00230  0602 00 2 00022         SLW     BUF3+6,2 
      00231 -0774 00 2 00000         AXC     0,2
      00232 -0500 00 2 00014  PM4    CAL     BUF3,2   
      00233  1 77777 2 00234         TXI     *+1,2,-1 
      00234  0636 00 2 00157         SCA     PM1,2    
      00235 -0774 00 4 00000  PM5    AXC     **,4     
      00236 -0774 00 2 00000         AXC     **,2     
      00237  0020 00 4 00001         TRA     1,4
      00240 -0130 00 0 00000  PMN    XCL  
      00241 -0754 00 0 00000         ZAC  
      00242 -0763 00 0 00006         LGL     6  
      00243 -0130 00 0 00000         XCL  
      00244 -0501 00 0 11346         ORA     =O55     
      00245 -0130 00 0 00000         XCL  
      00246 -0340 00 0 11351         LAS     =O60     
      00247  0020 00 0 00251         TRA     *+2
      00250  0020 00 0 00241         TRA     PMN+1    
      00251  0737 00 1 00000         PAC     ,1 
      00252 -0500 60 0 00010         CAL*    CNVTBL   
      00253  0771 00 0 00020         ARS     16 
      00254 -0320 00 0 11372         ANA     =O177    
      00255  0602 00 2 00022         SLW     BUF3+6,2 
      00256  1 77777 2 00257         TXI     *+1,2,-1 
      00257 -0340 00 0 11325         LAS     =O12     
      00260  0020 00 0 00241         TRA     PMN+1    
      00261  0020 00 4 00001         TRA     1,4
      00262  0020 00 0 00241         TRA     PMN+1    
      00263  005000250024     MES2   BCI     1,0Q0E0D 
                       00674         ORG     QED+432  
      00674 -0625 00 0 07235  INTRUP STL     INTFLG   
      00675  0602 00 0 07342         SLW     AC 
      00676  0601 00 0 07343         STO     AC+1     
      00677 -0600 00 0 07344         STQ     AC+2     
      00700  0636 00 4 00713         SCA     INT1,4   
      00701  0074 00 4 07335         TSX     SETFUL,4 
      00702  0074 00 4 07317         TSX     GETBRK,4 
      00703  0621 00 0 00714         STA     INT1+1   
      00704  0074 00 4 07316         TSX     SETBRK,4 
      00705  0 00000 0 00674         PZE     INTRUP   
      00706  0500 00 0 07343         CLA     AC+1     
      00707 -0501 00 0 07342         ORA     AC 
      00710  0560 00 0 07344         LDQ     AC+2     
      00711  0520 00 0 07236         ZET     RFLG     
      00712  0020 00 0 00715         TRA     INT2     
      00713 -0774 00 4 00000  INT1   AXC     **,4     
      00714  0020 00 0 00000         TRA     ** 
      00715 -0520 00 0 07030  INT2   NZT     TFLG     
      00716  0020 00 0 01274         TRA     TYPE4    
      00717  0600 00 0 07236         STZ     RFLG     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 5     
                  
      00720  0600 00 0 07033         STZ     VFLG     
      00721  0535 00 4 02345         LAC     GC5,4    
      00722 -0500 00 0 11325         CAL     =O12     
      00723  0020 00 0 02425         TRA     GC11     
      00724  0636 00 4 00751  MORMEM SCA     MM1+1,4  
      00725  0074 00 4 07320         TSX     GETMEM,4 
      00726  0737 00 5 00000         PAC     ,5 
      00727  0737 00 4 00000         PAC     ,4 
      00730  1 77773 4 00731         TXI     *+1,4,-5 
      00731 -0634 00 4 00750         SXD     MM1,4    
      00732  0400 00 0 11376         ADD     =O400    
      00733  0340 00 0 11404         CAS     =O100000 
      00734  0020 00 0 00753         TRA     MM2
      00735  0074 00 4 00755         TSX     MM4,4    
      00736  0621 00 0 00740         STA     *+2
      00737  0074 00 4 07336         TSX     SETMEM,4 
      00740 -0774 00 4 00000         AXC     **,4     
      00741  0600 00 4 77774         STZ     -04,4    
      00742  1 00004 4 00743  MM3    TXI     *+1,4,4  
      00743  0756 00 4 00000         PCA     ,4 
      00744  0601 00 4 77774         STO     -04,4    
      00745  0600 00 4 77775         STZ     -03,4    
      00746  0600 00 4 77776         STZ     -02,4    
      00747  0600 00 4 77777         STZ     -01,4    
      00750 -3 00000 4 00742  MM1    TXL     MM3,4,** 
      00751 -0774 00 4 00000         AXC     **,4     
      00752  0020 00 4 00001         TRA     1,4
      00753  0074 00 4 07321  MM2    TSX     DORMNT,4 
      00754  0000 00 0 00000         HTR     0  
      00755  0636 00 4 00760  MM4    SCA     *+3,4    
      00756  0074 00 4 07323         TSX     WRFLX,4  
      00757  0 00001 0 00764         PZE     MES3,,1  
      00760 -0774 00 4 00000         AXC     **,4     
      00761 -0500 00 0 11402         CAL     =O77774  
      00762 -0625 00 0 07235         STL     INTFLG   
      00763  0020 00 4 00001         TRA     1,4
      00764  004400250044     MES3   BCI     1,0M0E0M 
      00765  0520 00 0 07235  ADDRES ZET     INTFLG   
      00766  0020 00 0 01274         TRA     TYPE4    
      00767  0600 00 0 07275         STZ     DFLG     
      00770  0600 00 0 07265         STZ     AFLG     
      00771  0600 00 0 07266         STZ     BFLG     
      00772  0074 00 4 02257         TSX     GETCHA,4 
      00773 -0500 00 0 07251         CAL     ZER
      00774  0602 00 0 07250         SLW     ADDR3    
      00775 -0500 60 0 00010  ADR1   CAL*    CNVTBL   
      00776  0771 00 0 00040         ARS     32 
      00777  0737 00 4 00000         PAC     ,4 
      01000  0020 00 4 01001         TRA     *+1,4    
      01001  0020 00 0 01230         TRA     AUNKN    
      01002  0020 00 0 01014         TRA     APLUS    
      01003  0020 00 0 01015         TRA     AMINUS   
      01004  0020 00 0 01023         TRA     ASRCH    
      01005  0020 00 0 01126         TRA     ANUMB    
      01006  0020 00 0 01073         TRA     ALAST    
      01007  0020 00 0 01100         TRA     ACURNT   
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 6     
                  
      01010  0020 00 0 01012         TRA     ABLNK    
      01011  0020 00 0 01147         TRA     AANUM    
      01012  0074 00 4 02257  ABLNK  TSX     GETCHA,4 
      01013  0020 00 0 00775         TRA     ADR1     
      01014  0020 00 0 01222  APLUS  TRA     ADV2     
      01015  0520 00 0 07275  AMINUS ZET     DFLG     
      01016  0020 00 0 01021         TRA     *+3
      01017 -0625 00 0 07275         STL     DFLG     
      01020  0020 00 0 01222         TRA     ADV2     
      01021  0600 00 0 07275         STZ     DFLG     
      01022  0020 00 0 01222         TRA     ADV2     
      01023 -0500 00 0 11350  ASRCH  CAL     =O57     
      01024  0602 00 0 07273         SLW     SLCHR    
      01025  0600 00 0 07263         STZ     SUBFLG   
      01026  0074 00 4 01426         TSX     COMPIL,4 
      01027  0020 00 0 01057         TRA     SRC3     
      01030  0 00000 0 01041         PZE     SRC2     
      01031  0535 00 4 07024         LAC     DOT,4    
      01032 -0500 00 4 00000         CAL     00,4     
      01033  0621 00 0 01036         STA     SRC1     
      01034 -0636 00 4 01036         SCD     SRC1,4   
      01035  0074 00 4 02527         TSX     SETBC,4  
      01036  0 00000 0 00000  SRC1   PZE     **,,**   
      01037 -0625 00 0 07234         STL     IFLG     
      01040  0600 00 0 07237         STZ     JFLG     
      01041  0600 00 0 07233  SRC2   STZ     FFLG     
      01042 -0520 00 0 07234         NZT     IFLG     
      01043  0020 00 0 01046         TRA     *+3
      01044  0600 00 0 07234         STZ     IFLG     
      01045 -0625 00 0 07233         STL     FFLG     
      01046  0074 00 4 02604         TSX     GETBC,4  
      01047  0737 00 1 00000         PAC     ,1 
      01050 -3 77774 1 01052         TXL     *+2,1,-4 
      01051 -3 77775 1 01067         TXL     SRC4,1,-3
      01052 -0774 00 2 07625         AXC     BUF2+50-1,2    
      01053 -3 77765 1 00014         TXL     BUF3,1,-11     
      01054  3 77766 1 00014         TXH     BUF3,1,-10     
      01055 -0625 00 0 07234         STL     IFLG     
      01056  0020 00 0 00014         TRA     BUF3     
      01057  0535 00 2 02621  SRC3   LAC     BC2,2    
      01060 -0520 00 0 07234         NZT     IFLG     
      01061  0020 00 0 01064         TRA     *+3
      01062 -0500 00 2 00000         CAL     00,2     
      01063 -0737 00 2 00000         PDC     ,2 
      01064  0074 00 4 02641         TSX     BC4,4    
      01065  0074 00 4 02257         TSX     GETCHA,4 
      01066  0020 00 0 01173         TRA     AREL     
      01067 -0520 00 0 07241  SRC4   NZT     RECLEV   
      01070  0020 00 0 01260         TRA     TYPE1    
      01071  0074 00 4 02641         TSX     BC4,4    
      01072  0020 00 0 00765         TRA     ADDRES   
      01073  0535 00 2 07251  ALAST  LAC     ZER,2    
      01074 -0500 00 2 00000         CAL     00,2     
      01075 -0737 00 2 00000         PDC     ,2 
      01076  0074 00 4 02257         TSX     GETCHA,4 
      01077  0020 00 0 01173         TRA     AREL     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 7     
                  
      01100  0535 00 2 07024  ACURNT LAC     DOT,2    
      01101  0074 00 4 02257         TSX     GETCHA,4 
      01102  0020 00 0 01173         TRA     AREL     
      01103  1 00060 1 01104  NUMB   TXI     *+1,1,48 
      01104  0636 00 1 01124         SCA     NUMB1,1  
      01105  0074 00 4 02257         TSX     GETCHA,4 
      01106 -0500 60 0 00010         CAL*    CNVTBL   
      01107  0771 00 0 00040         ARS     32 
      01110  0402 00 0 11322         SUB     =4 
      01111 -0100 00 0 01124         TNZ     NUMB1    
      01112  0535 00 4 01124         LAC     NUMB1,4  
      01113  0756 00 4 00000         PCA     ,4 
      01114  0131 00 0 00000         XCA  
      01115  0200 00 0 11325         MPY     =10
      01116  0131 00 0 00000         XCA  
      01117  1 00060 1 01120         TXI     *+1,1,48 
      01120  0636 00 1 01124         SCA     NUMB1,1  
      01121  0361 00 0 01124         ACL     NUMB1    
      01122  0621 00 0 01124         STA     NUMB1    
      01123  0020 00 0 01105         TRA     NUMB+2   
      01124 -0774 00 4 00000  NUMB1  AXC     **,4     
      01125  0020 00 2 00001         TRA     1,2
      01126  0074 00 2 01103  ANUMB  TSX     NUMB,2   
      01127  0535 00 2 07250         LAC     ADDR3,2  
      01130  0500 00 2 00000         CLA     00,2     
      01131  0520 00 0 07275         ZET     DFLG     
      01132  0020 00 0 01140         TRA     NUMB3    
      01133 -3 00000 4 01145  NUMB2  TXL     NUMB4,4,0
      01134  0737 00 2 00000         PAC     ,2 
      01135  0500 00 2 00000         CLA     00,2     
      01136 -0120 00 0 01300         TMI     TYPE5    
      01137  1 00001 4 01133         TXI     NUMB2,4,1
      01140 -3 00000 4 01145  NUMB3  TXL     NUMB4,4,0
      01141 -0120 00 0 01300         TMI     TYPE5    
      01142 -0737 00 2 00000         PDC     ,2 
      01143  0500 00 2 00000         CLA     00,2     
      01144  1 00001 4 01140         TXI     NUMB3,4,1
      01145  0636 00 2 07250  NUMB4  SCA     ADDR3,2  
      01146  0020 00 0 01225         TRA     ADV3     
      01147  0074 00 4 02257  AANUM  TSX     GETCHA,4 
      01150 -0500 60 0 00010         CAL*    CNVTBL   
      01151  0771 00 0 00040         ARS     32 
      01152  0402 00 0 11322         SUB     =4 
      01153 -0100 00 0 01264         TNZ     TYPE2    
      01154  0074 00 2 01103         TSX     NUMB,2   
      01155  0535 00 2 07251         LAC     ZER,2    
      01156 -3 00000 4 01173         TXL     AREL,4,0 
      01157 -0500 00 2 00000         CAL     00,2     
      01160  0737 00 2 00000         PAC     ,2 
      01161  0756 00 4 00000  AAN1   PCA     ,4 
      01162 -0340 00 2 00003         LAS     03,2     
      01163  0020 00 0 01166         TRA     *+3
      01164  0020 00 0 01173         TRA     AREL     
      01165  0020 00 0 01260         TRA     TYPE1    
      01166 -0500 00 2 00000         CAL     00,2     
      01167  0737 00 2 00000         PAC     ,2 
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 8     
                  
      01170  0500 00 2 00000         CLA     00,2     
      01171  0120 00 0 01161         TPL     AAN1     
      01172  0020 00 0 01260         TRA     TYPE1    
      01173  0535 00 4 07250  AREL   LAC     ADDR3,4  
      01174  0520 00 0 07275         ZET     DFLG     
      01175  0020 00 0 01207         TRA     REL2     
      01176  0500 00 4 00000         CLA     00,4     
      01177 -0120 00 0 01216         TMI     REL3     
      01200  0500 00 2 00000  REL1   CLA     00,2     
      01201 -0120 00 0 01220         TMI     REL4     
      01202 -0737 00 2 00000         PDC     ,2 
      01203  0500 00 4 00000         CLA     00,4     
      01204  0737 00 4 00000         PAC     ,4 
      01205  0120 00 0 01200         TPL     REL1     
      01206  0020 00 0 01300         TRA     TYPE5    
      01207  0500 00 2 00000  REL2   CLA     00,2     
      01210 -0120 00 0 01220         TMI     REL4     
      01211 -0737 00 2 00000         PDC     ,2 
      01212  0500 00 4 00000         CLA     00,4     
      01213 -0737 00 4 00000         PDC     ,4 
      01214  0120 00 0 01207         TPL     REL2     
      01215  0020 00 0 01300         TRA     TYPE5    
      01216  0636 00 2 07250  REL3   SCA     ADDR3,2  
      01217  0020 00 0 01225         TRA     ADV3     
      01220  0636 00 4 07250  REL4   SCA     ADDR3,4  
      01221  0020 00 0 01225         TRA     ADV3     
      01222  0074 00 4 02257  ADV2   TSX     GETCHA,4 
      01223 -0625 00 0 07265         STL     AFLG     
      01224  0020 00 0 00775         TRA     ADR1     
      01225  0600 00 0 07275  ADV3   STZ     DFLG     
      01226 -0625 00 0 07265         STL     AFLG     
      01227  0020 00 0 00775         TRA     ADR1     
      01230  0520 00 0 07266  AUNKN  ZET     BFLG     
      01231  0020 00 0 01237         TRA     UNK1     
      01232 -0500 00 0 07250         CAL     ADDR3    
      01233  0602 00 0 07246         SLW     ADDR1    
      01234  0602 00 0 07247         SLW     ADDR2    
      01235 -0625 00 0 07266         STL     BFLG     
      01236  0020 00 0 01243         TRA     UNK2     
      01237 -0500 00 0 07247  UNK1   CAL     ADDR2    
      01240  0602 00 0 07246         SLW     ADDR1    
      01241 -0500 00 0 07250         CAL     ADDR3    
      01242  0602 00 0 07247         SLW     ADDR2    
      01243  0756 00 1 00000  UNK2   PCA     ,1 
      01244  0402 00 0 11345         SUB     =O54     
      01245  0100 00 0 01252         TZE     UNK3     
      01246  0402 00 0 11330         SUB     =O17     
      01247 -0100 00 0 04400         TNZ     COMAND   
      01250 -0500 00 0 07250         CAL     ADDR3    
      01251  0602 00 0 07024         SLW     DOT
      01252  0074 00 4 02257  UNK3   TSX     GETCHA,4 
      01253 -0500 00 0 07251         CAL     ZER
      01254  0602 00 0 07250         SLW     ADDR3    
      01255  0020 00 0 00775         TRA     ADR1     
                              TYPE   MACRO   A  
                                     ZET     TRAP'A   
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 9     
                  
                                     TSX     TRAP,4   
                                     CAL     =H0'A'0 0
                                     TRA     ILLADD-1 
                                     END     TYPE     
      01256 -0500 00 0 11406  TYPE0  CAL     =H000 0  
      01257  0020 00 0 01362         TRA     ILLADD-1 
      01260                   TYPE1  TYPE    1  
      01264                   TYPE2  TYPE    2  
      01270                   TYPE3  TYPE    3  
      01274                   TYPE4  TYPE    4  
      01300                   TYPE5  TYPE    5  
      01304                   TYPE6  TYPE    6  
      01310                   TYPE7  TYPE    7  
      01314                   TYPE8  TYPE    8  
      01320                   TYPE9  TYPE    9  
      01324  0 00000 0 00000  TRAP1 
      01325  0 00000 0 00000  TRAP2 
      01326  0 00000 0 00000  TRAP3 
      01327  0 00000 0 00000  TRAP4 
      01330  0 00000 0 00000  TRAP5 
      01331  0 00000 0 00000  TRAP6 
      01332  0 00000 0 00000  TRAP7 
      01333  0 00000 0 00000  TRAP8 
      01334  0 00000 0 00000  TRAP9 
      01335 -0500 60 4 77777  TRAP   CAL*    -1,4     
      01336  0600 60 4 77777         STZ*    -1,4     
      01337  0602 00 0 01361         SLW     TRP1     
      01340  0600 00 0 07235         STZ     INTFLG   
      01341  0520 00 0 07030         ZET     TFLG     
      01342  0074 00 4 02427         TSX     GC11+2,4 
      01343  0535 00 4 07242         LAC     BUFER,4  
      01344 -0500 00 4 00003         CAL     03,4     
      01345  0602 00 0 01360         SLW     TRP2     
      01346 -0500 00 0 01361         CAL     TRP1     
      01347  0074 00 4 03304         TSX     BOPEN,4  
      01350  0535 00 4 07251         LAC     ZER,4    
      01351 -0500 00 4 00000         CAL     00,4     
      01352  0601 00 0 01354         STO     *+2
      01353  0074 00 4 02527         TSX     SETBC,4  
      01354  0 00000 0 00000         PZE     **,,**   
      01355 -0500 00 0 01360         CAL     TRP2     
      01356  0074 00 4 03304         TSX     BOPEN,4  
      01357  0020 00 0 00765         TRA     ADDRES   
      01360  0 00000 0 00000  TRP2   PZE     ** 
      01361  0 00000 0 00000  TRP1   PZE     ** 
      01362  0602 00 0 01417         SLW     MES1+1   
      01363  0600 00 0 07235  ILLADD STZ     INTFLG   
      01364 -0520 00 0 07267         NZT     TRCFLG   
      01365  0020 00 0 01375         TRA     IL2
      01366 -0340 00 0 11414         LAS     =H040 0  
      01367  0020 00 0 01371         TRA     *+2
      01370  0020 00 0 01375         TRA     IL2
      01371 -0520 00 0 07241         NZT     RECLEV   
      01372  0020 00 0 01375         TRA     IL2
      01373  0074 00 4 03502         TSX     PRINT,4  
      01374  0 00000 0 02604         PZE     GETBC    
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 10    
                  
      01375  0074 00 4 07335  IL2    TSX     SETFUL,4 
      01376  0520 00 0 07300         ZET     FILFLG   
      01377  0074 00 4 02772         TSX     CLOS,4   
      01400 -0520 00 0 07241         NZT     RECLEV   
      01401  0020 00 0 01412         TRA     IL1
      01402  0600 00 0 07241         STZ     RECLEV   
      01403  0535 00 4 07244         LAC     INPUT,4  
      01404  0756 00 5 00000         PCA     ,5 
      01405  0602 00 4 00000         SLW     00,4     
      01406  0535 00 4 07245         LAC     IBASE,4  
      01407 -0500 00 4 00000         CAL     00,4     
      01410  0737 00 5 00000         PAC     ,5 
      01411  0636 00 4 07244         SCA     INPUT,4  
      01412  0074 00 4 07323  IL1    TSX     WRFLX,4  
      01413  0 00002 0 01416         PZE     MES1,,2  
      01414  0774 00 7 00000         AXT     00,7     
      01415  0020 00 0 00765         TRA     ADDRES   
      01416 +017501320156     MES1   OCT     17501320156,0  
      01417 +000000000000     
      01420  0636 00 4 01423  BLINE  SCA     *+3,4    
      01421  0074 00 4 07323         TSX     WRFLX,4  
      01422  0 00001 0 01425         PZE     *+3,,1   
      01423 -0774 00 4 00000         AXC     **,4     
      01424  0020 00 4 00001         TRA     1,4
      01425 +006000600060            OCT     006000600060   
      01426  0636 00 4 01567  COMPIL SCA     CEOF,4   
      01427  0636 00 0 01540         SCA     OPONST,0 
      01430 -0774 00 3 00000         AXC     00,3     
      01431 -0774 00 2 00144         AXC     100,2    
      01432 -0500 00 0 11317         CAL     =1 
      01433  0602 00 0 07544         SLW     BUF2     
      01434  0600 00 0 07234         STZ     IFLG     
      01435  0600 00 0 07237         STZ     JFLG     
      01436  0520 00 0 07234  ADVANC ZET     IFLG     
      01437  0020 00 0 01511         TRA     AN1
      01440  0074 00 4 02257         TSX     GETCHA,4 
      01441 -0340 00 0 07273         LAS     SLCHR    
      01442  0020 00 0 01444         TRA     *+2
      01443  0020 00 0 01530         TRA     SL1
      01444  0520 00 0 07240         ZET     CPLFLG   
      01445  0600 00 0 07262         STZ     NSCHA    
      01446  0600 00 0 07240         STZ     CPLFLG   
      01447  0520 00 0 07033  IO1    ZET     VFLG     
      01450  0020 00 0 01461         TRA     AD1
      01451 -3 77602 1 01463         TXL     CH1,1,-126     
      01452 -3 77603 1 01514         TXL     RP0,1,-125     
      01453 -3 77604 1 01504         TXL     OR1,1,-124     
      01454 -3 77605 1 01474         TXL     LP1,1,-123     
      01455 -3 77725 1 01463         TXL     CH1,1,-43
      01456 -3 77726 1 01526         TXL     ST1,1,-42
      01457 -3 77727 1 01523         TXL     RP1,1,-41
      01460 -3 77730 1 01474         TXL     LP1,1,-40
      01461 -3 77765 1 01463  AD1    TXL     CH1,1,-11
      01462 -3 77766 1 01537         TXL     CILAD,1,-10    
      01463 -0756 00 1 00000  CH1    PCD     ,1 
      01464  0520 00 0 07033  IO2    ZET     VFLG     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 11    
                  
      01465 -0760 00 0 00003         SSM  
      01466  0601 00 0 07264         STO     COPY     
      01467 -0774 00 1 00007         AXC     7,1
      01470  0520 00 0 07237         ZET     JFLG     
      01471  0020 00 0 01500         TRA     CH2
      01472 -0625 00 0 07237         STL     JFLG     
      01473  0020 00 0 01540         TRA     OPONST   
      01474 -0774 00 1 00010  LP1    AXC     8,1
      01475 -0520 00 0 07237         NZT     JFLG     
      01476  0020 00 0 01540         TRA     OPONST   
      01477  0600 00 0 07237         STZ     JFLG     
      01500  0636 00 1 07264  CH2    SCA     COPY,1   
      01501 -0774 00 1 00005         AXC     5,1
      01502 -0625 00 0 07234         STL     IFLG     
      01503  0020 00 0 01540         TRA     OPONST   
      01504 -0774 00 1 00004  OR1    AXC     4,1
      01505 -0520 00 0 07237         NZT     JFLG     
      01506  0020 00 0 01537         TRA     CILAD    
      01507  0600 00 0 07237         STZ     JFLG     
      01510  0020 00 0 01540         TRA     OPONST   
      01511  0535 00 1 07264  AN1    LAC     COPY,1   
      01512  0600 00 0 07234         STZ     IFLG     
      01513  0020 00 0 01540         TRA     OPONST   
      01514  0074 00 4 02257  RP0    TSX     GETCHA,4 
      01515  0602 00 0 07264         SLW     COPY     
      01516 -0774 00 1 00002         AXC     2,1
      01517 -0340 00 0 07273         LAS     SLCHR    
      01520  0020 00 0 01533         TRA     RP2
      01521  0020 00 0 01537         TRA     CILAD    
      01522  0020 00 0 01533         TRA     RP2
      01523 -0774 00 1 00002  RP1    AXC     2,1
      01524  0600 00 0 07264         STZ     COPY     
      01525  0020 00 0 01533         TRA     RP2
      01526 -0774 00 1 00006  ST1    AXC     6,1
      01527  0020 00 0 01533         TRA     RP2
      01530  0520 00 0 07033 USL1    ZET     VFLG     
      01531  0020 00 0 01463         TRA     CH1
      01532 -0774 00 1 00001         AXC     1,1
      01533  0520 00 0 07237  RP2    ZET     JFLG     
      01534  0020 00 0 01540         TRA     OPONST   
      01535  0535 00 3 07240         LAC     CPLFLG,3 
      01536  3 00000 3 01567         TXH     CEOF,3,0 
      01537  0020 00 0 01270  CILAD  TRA     TYPE3    
      01540 -0774 00 4 00000  OPONST AXC     **,4     
      01541 -0634 00 1 01544         SXD     OP1,1    
      01542 -0500 00 4 07544  OP0    CAL     BUF2,4   
      01543  0737 00 1 00000         PAC     ,1 
      01544 -3 00000 1 01557  OP1    TXL     OP2,1,** 
      01545 -0534 00 1 01544         LXD     OP1,1    
      01546  3 77770 1 01550         TXH     *+2,1,-8 
      01547  1 00005 1 01550         TXI     *+1,1,5  
      01550  0500 00 0 07264         CLA     COPY     
      01551  0601 00 4 07545         STO     BUF2+1,4 
      01552  0756 00 1 00000         PCA     ,1 
      01553  0621 00 4 07545         STA     BUF2+1,4 
      01554  1 77777 4 01555         TXI     *+1,4,-1 
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 12    
                  
      01555  0636 00 4 01540         SCA     OPONST,4 
      01556  0020 00 0 01436         TRA     ADVANC   
      01557  0020 00 1 01557  OP2    TRA     *,1
      01560  0020 00 0 01567         TRA     CEOF     
      01561  0020 00 0 01602         TRA     CRTP     
      01562  0020 00 0 01603         TRA     CLFP     
      01563  0020 00 0 01635         TRA     COR
      01564  0020 00 0 01701         TRA     CAND     
      01565  0020 00 0 01713         TRA     CSTR     
      01566  0020 00 0 01747         TRA     CCHR     
      01567 -0774 00 4 00000  CEOF   AXC     **,4     
      01570  0636 00 0 02175         SCA     CNO1,0   
      01571  0636 00 0 02141         SCA     NO1,0    
      01572 -0500 00 4 00001         CAL     1,4
      01573  0602 00 3 00014         SLW     BUF3,3   
      01574  0636 00 3 07240         SCA     CPLFLG,3 
      01575 -0500 00 4 00002         CAL     2,4
      01576  0621 00 0 02254         STA     XCH2     
      01577 -0500 00 0 07220         CAL     TRA3     
      01600  0602 00 0 07627         SLW     BUF2+50+1
      01601  0020 00 4 00003         TRA     3,4
      01602  0020 00 0 01537  CRTP   TRA     CILAD    
      01603 -0534 00 1 01544  CLFP   LXD     OP1,1    
      01604  3 77776 1 01537         TXH     CILAD,1,-2     
      01605  1 00001 4 01606         TXI     *+1,4,1  
      01606  0636 00 4 01540         SCA     OPONST,4 
      01607 -0520 00 0 07264         NZT     COPY     
      01610  0020 00 0 01436         TRA     ADVANC   
      01611  0535 00 4 07262         LAC     NSCHA,4  
      01612 -0500 00 0 07264         CAL     COPY     
      01613  0602 00 4 11300         SLW     SCHARS,4 
      01614  1 77777 4 01615         TXI     *+1,4,-1 
      01615 -3 77767 4 01256         TXL     TYPE0,4,-9     
      01616  0636 00 4 07262         SCA     NSCHA,4  
      01617  0602 00 3 00015         SLW     BUF3+1,3 
      01620 -0500 00 0 07225         CAL     TSX5     
      01621  0602 00 3 00014         SLW     BUF3,3   
      01622 -0500 00 0 07224         CAL     TSX4     
      01623  0602 00 3 00016         SLW     BUF3+2,3 
      01624 -0500 00 2 07544         CAL     BUF2,2   
      01625  0737 00 4 00000         PAC     ,4 
      01626 -0500 00 4 00014         CAL     BUF3,4   
      01627  0602 00 3 00017         SLW     BUF3+3,3 
      01630  0756 00 3 00000         PCA     ,3 
      01631  0361 00 0 07216         ACL     TRA1     
      01632  0361 00 0 11320         ACL     =2 
      01633  0602 00 4 00014         SLW     BUF3,4   
      01634  1 77774 3 01436         TXI     ADVANC,3,-4    
      01635  1 00001 4 01636  COR    TXI     *+1,4,1  
      01636  0636 00 4 01540         SCA     OPONST,4 
      01637 -0500 00 2 07545         CAL     BUF2+1,2 
      01640  0737 00 4 00000         PAC     ,4 
      01641 -0500 00 4 00014         CAL     BUF3,4   
      01642  0602 00 3 00016         SLW     BUF3+2,3 
      01643  0756 00 3 00000         PCA     ,3 
      01644  0361 00 0 07216         ACL     TRA1     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 13    
                  
      01645  0361 00 0 11317         ACL     =1 
      01646  0602 00 4 00014         SLW     BUF3,4   
      01647  0361 00 0 11321         ACL     =3 
      01650  0602 00 3 00014         SLW     BUF3,3   
      01651 -0130 00 0 00000         XCL  
      01652 -0500 00 2 07544         CAL     BUF2,2   
      01653 -0737 00 4 00000         PDC     ,4 
      01654 -3 00000 4 01667         TXL     COR1,4,0 
      01655 -0500 00 2 07545         CAL     BUF2+1,2 
      01656 -0340 00 0 11404         LAS     =O100000 
      01657  0020 00 0 01664         TRA     *+5
      01660  0020 00 0 01664         TRA     *+4
      01661 -0756 00 4 00000         PCD     ,4 
      01662  0622 00 2 07545         STD     BUF2+1,2 
      01663  0020 00 0 01667         TRA     COR1     
      01664  0771 00 0 00022         ARS     18 
      01665  0361 00 0 07216         ACL     TRA1     
      01666  0602 00 4 00014         SLW     BUF3,4   
      01667 -0500 00 2 07544  COR1   CAL     BUF2,2   
      01670  0737 00 4 00000         PAC     ,4 
      01671 -0500 00 4 00014         CAL     BUF3,4   
      01672  0602 00 3 00017         SLW     BUF3+3,3 
      01673 -0600 00 4 00014         STQ     BUF3,4   
      01674 -0500 00 0 07222         CAL     TSX2     
      01675  0602 00 3 00015         SLW     BUF3+1,3 
      01676  1 77777 2 01677         TXI     *+1,2,-1 
      01677  0535 00 4 01540         LAC     OPONST,4 
      01700  1 77774 3 01542         TXI     OP0,3,-4 
      01701 -0500 00 2 07544  CAND   CAL     BUF2,2   
      01702 -0340 00 0 11404         LAS     =O100000 
      01703  1 77777 2 01712         TXI     CAN1,2,-1
      01704  1 77777 2 01712         TXI     CAN1,2,-1
      01705 -0500 00 2 07545         CAL     BUF2+1,2 
      01706 -0340 00 0 11404         LAS     =O100000 
      01707 -0320 00 0 11403         ANA     =O77777  
      01710  0602 00 2 07545         SLW     BUF2+1,2 
      01711  1 77777 2 01712         TXI     CAN1,2,-1
      01712  1 00001 4 01542  CAN1   TXI     OP0,4,1  
      01713  1 00001 4 01714  CSTR   TXI     *+1,4,1  
      01714  0636 00 4 01540         SCA     OPONST,4 
      01715  0500 00 2 07544         CLA     BUF2,2   
      01716 -0120 00 0 01537         TMI     CILAD    
      01717 -0737 00 4 00000         PDC     ,4 
      01720 -3 00000 4 01724         TXL     *+4,4,0  
      01721 -0500 00 0 07217         CAL     TRA2     
      01722  0602 00 4 00014         SLW     BUF3,4   
      01723 -0500 00 2 07544         CAL     BUF2,2   
      01724  0737 00 4 00000         PAC     ,4 
      01725 -0500 00 4 00014         CAL     BUF3,4   
      01726  0602 00 3 00015         SLW     BUF3+1,3 
      01727  0602 00 3 00020         SLW     BUF3+4,3 
      01730  0756 00 3 00000         PCA     ,3 
      01731  0361 00 0 07216         ACL     TRA1     
      01732  0361 00 0 11321         ACL     =3 
      01733  0602 00 4 00014         SLW     BUF3,4   
      01734  0361 00 0 11321         ACL     =3 
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 14    
                  
      01735  0602 00 3 00016         SLW     BUF3+2,3 
      01736  0602 00 3 00021         SLW     BUF3+5,3 
      01737 -0756 00 3 00000         PCD     ,3 
      01740  0361 00 0 11407         ACL     =O5000000
      01741  0622 00 2 07544         STD     BUF2,2   
      01742 -0500 00 0 07222         CAL     TSX2     
      01743  0602 00 3 00014         SLW     BUF3,3   
      01744  0602 00 3 00017         SLW     BUF3+3,3 
      01745  0535 00 4 01540         LAC     OPONST,4 
      01746  1 77772 3 01542         TXI     OP0,3,-6 
      01747  0636 00 4 01540  CCHR   SCA     OPONST,4 
      01750  0756 00 3 00000         PCA     ,3 
      01751  0602 00 2 07543         SLW     BUF2-1,2 
      01752  0361 00 0 07216         ACL     TRA1     
      01753  0361 00 0 11317         ACL     =1 
      01754  0602 00 3 00014         SLW     BUF3,3   
      01755  0500 00 4 07544         CLA     BUF2,4   
      01756 -0737 00 1 00000         PDC     ,1 
      01757 -0120 00 0 01766         TMI     CCH1     
      01760 -3 77641 1 01766         TXL     CCH1,1,-95     
      01761 -3 77642 1 02007         TXL     CCHZ,1,-94     
      01762 -3 77721 1 01766         TXL     CCH1,1,-47     
      01763 -3 77722 1 02017         TXL     CCHC,1,-46     
      01764 -3 77733 1 01766         TXL     CCH1,1,-37     
      01765 -3 77734 1 02031         TXL     CCHL,1,-36     
      01766 -0500 00 0 07221  CCH1   CAL     TSX1     
      01767  0602 00 3 00017         SLW     BUF3+3,3 
      01770 -0774 00 4 00000         AXC     00,4     
      01771 -0754 00 1 00000  CCH2   PXD     ,1 
      01772 -0501 00 0 07230         ORA     TXH1     
      01773  0602 00 3 00016         SLW     BUF3+2,3 
      01774 -3 00000 1 02000         TXL     *+4,1,0  
      01775  1 77777 1 01776         TXI     *+1,1,-1 
      01776 -0754 00 1 00000         PXD     ,1 
      01777 -0501 00 0 07226         ORA     TXL1     
      02000  0602 00 3 00015         SLW     BUF3+1,3 
      02001 -3 00000 4 02003         TXL     *+2,4,0  
      02002  1 77775 3 02004         TXI     CCH3,3,-3
      02003  1 77774 3 02004         TXI     CCH3,3,-4
      02004  1 00001 2 02005  CCH3   TXI     *+1,2,1  
      02005  0535 00 4 01540         LAC     OPONST,4 
      02006  1 00001 4 01542         TXI     OP0,4,1  
      02007 -0500 00 0 07231  CCHZ   CAL     NZT1     
      02010  0602 00 3 00015         SLW     BUF3+1,3 
      02011 -0500 00 0 07217         CAL     TRA2     
      02012  0602 00 3 00016         SLW     BUF3+2,3 
      02013  0500 00 2 07543         CLA     BUF2-1,2 
      02014 -0760 00 0 00003         SSM  
      02015  0601 00 2 07543         STO     BUF2-1,2 
      02016  1 77775 3 02004         TXI     CCH3,3,-3
      02017  0756 00 3 00000  CCHC   PCA     ,3 
      02020  0361 00 0 07227         ACL     TXL2     
      02021  0602 00 3 00015         SLW     BUF3+1,3 
      02022 -0774 00 4 00012         AXC     10,4     
      02023 -0754 00 4 00000         PXD     ,4 
      02024  0361 00 0 07226         ACL     TXL1     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 15    
                  
      02025  0602 00 3 00016         SLW     BUF3+2,3 
      02026 -0500 00 0 07221         CAL     TSX1     
      02027  0602 00 3 00017         SLW     BUF3+3,3 
      02030  1 77774 3 02004         TXI     CCH3,3,-4
      02031 -0774 00 1 00012  CCHL   AXC     10,1     
      02032  0500 00 2 07543         CLA     BUF2-1,2 
      02033 -0760 00 0 00003         SSM  
      02034  0601 00 2 07543         STO     BUF2-1,2 
      02035  0074 00 4 01771         TSX     CCH2,4   
      02036 -0520 00 0 07263  START  NZT     SUBFLG   
      02037  0020 00 4 00001         TRA     1,4
      02040  0636 00 4 02074         SCA     START2,4 
      02041  0636 00 5 02065         SCA     START1,5 
      02042 -0500 00 4 77777         CAL     -1,4     
      02043  0602 00 5 00001         SLW     1,5
      02044 -0500 00 2 00001         CAL     1,2
      02045 -0737 00 4 00000         PDC     ,4 
      02046 -3 00000 4 02056         TXL     START0,4,0     
      02047 -0500 00 4 00001  START4 CAL     1,4
      02050 -0340 00 5 00001         LAS     1,5
      02051  0020 00 0 02053         TRA     *+2
      02052  0020 00 0 02071         TRA     START3   
      02053 -0500 00 4 00000         CAL     0,4
      02054  0737 00 4 00000         PAC     ,4 
      02055  3 00000 4 02047         TXH     START4,4,0     
      02056 -0500 00 5 00000  START0 CAL     0,5
      02057  0737 00 5 00000         PAC     ,5 
      02060  3 00000 5 02062         TXH     *+2,5,0  
      02061  0074 00 4 00724         TSX     MORMEM,4 
      02062 -0500 00 2 00001         CAL     1,2
      02063 -0737 00 4 00000         PDC     ,4 
      02064  0756 00 4 00000         PCA     ,4 
      02065 -0774 00 4 00000  START1 AXC     **,4     
      02066  0602 00 4 00000         SLW     0,4
      02067 -0756 00 4 00000         PCD     ,4 
      02070  0622 00 2 00001         STD     1,2
      02071 -0500 00 0 07626  START3 CAL     BUF2+50  
      02072  0602 00 4 00002         SLW     2,4
      02073  0600 00 4 00003         STZ     3,4
      02074 -0774 00 4 00000  START2 AXC     **,4     
      02075  0020 00 4 00001         TRA     1,4
      02076 -0520 00 0 07263  FINISH NZT     SUBFLG   
      02077  0020 00 4 00004         TRA     4,4
      02100  0636 00 4 02117         SCA     FINIS3,4 
      02101 -0500 00 4 00001         CAL     1,4
      02102  0602 00 0 07264         SLW     COPY     
      02103 -0500 00 2 00001         CAL     1,2
      02104 -0737 00 4 00000         PDC     ,4 
      02105 -3 00000 4 01256  FINIS1 TXL     TYPE0,4,0
      02106 -0500 00 4 00001         CAL     1,4
      02107 -0340 00 0 07264         LAS     COPY     
      02110  0020 00 0 02112         TRA     *+2
      02111  0020 00 0 02115         TRA     FINIS2   
      02112 -0500 00 4 00000         CAL     0,4
      02113  0737 00 4 00000         PAC     ,4 
      02114  0020 00 0 02105         TRA     FINIS1   
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 16    
                  
      02115 -0500 00 0 07626  FINIS2 CAL     BUF2+50  
      02116  0602 00 4 00003         SLW     3,4
      02117 -0774 00 4 00000  FINIS3 AXC     **,4     
      02120  0020 00 4 00004         TRA     4,4
      02121 -0520 00 0 07263  FAIL   NZT     SUBFLG   
      02122  0020 00 2 00002         TRA     2,2
      02123 -0500 00 2 00001         CAL     1,2
      02124 -0737 00 4 00000         PDC     ,4 
      02125 -3 00000 4 02136         TXL     FAIL1+1,4,0    
      02126  0636 00 4 02135         SCA     FAIL1,4  
      02127 -0500 00 4 00000         CAL     0,4
      02130  0100 00 0 02133         TZE     *+3
      02131  0737 00 4 00000         PAC     ,4 
      02132  0020 00 0 02127         TRA     *-3
      02133  0756 00 5 00000         PCA     ,5 
      02134  0602 00 4 00000         SLW     0,4
      02135 -0774 00 5 00000  FAIL1  AXC     **,5     
      02136  0020 00 2 00002         TRA     2,2
      02137  0756 00 4 00000  NODE   PCA     ,4 
      02140  0361 00 0 07223         ACL     TSX3     
      02141 -0774 00 4 00000  NO1    AXC     **,4     
      02142 -3 00000 4 02147         TXL     NO2,4,0  
      02143 -0340 00 4 07542         LAS     BUF2-2,4 
      02144  1 00002 4 02142         TXI     *-2,4,2  
      02145  0020 00 0 02157         TRA     NO3
      02146  1 00002 4 02142         TXI     *-4,4,2  
      02147  0535 00 4 02141  NO2    LAC     NO1,4    
      02150  1 77776 4 02151         TXI     *+1,4,-2 
      02151 -3 77716 4 01256         TXL     TYPE0,4,-50    
      02152  0636 00 4 02141         SCA     NO1,4    
      02153  0602 00 4 07542         SLW     BUF2-2,4 
      02154 -0500 00 2 00001         CAL     1,2
      02155  0602 00 4 07543         SLW     BUF2-1,4 
      02156  0020 00 2 00002         TRA     2,2
      02157 -0500 00 4 07543  NO3    CAL     BUF2-1,4 
      02160 -0320 00 0 11403         ANA     =O77777  
      02161  0602 00 0 07264         SLW     COPY     
      02162 -0500 00 2 00001         CAL     1,2
      02163 -0320 00 0 11403         ANA     =O77777  
      02164 -0340 00 0 07264         LAS     COPY     
      02165  0020 00 0 02121         TRA     FAIL     
      02166  0020 00 0 02121         TRA     FAIL     
      02167 -0500 00 2 00001         CAL     1,2
      02170  0602 00 4 07543         SLW     BUF2-1,4 
      02171  0020 00 2 00002         TRA     2,2
      02172  0636 00 4 02237  CNODE  SCA     CNO3,4   
      02173  0756 00 4 00000         PCA     ,4 
      02174  0361 00 0 07223         ACL     TSX3     
      02175 -0774 00 4 00000  CNO1   AXC     **,4     
      02176  1 77776 4 02177         TXI     *+1,4,-2 
      02177 -3 77716 4 01256         TXL     TYPE0,4,-50    
      02200  0636 00 4 02175         SCA     CNO1,4   
      02201  0602 00 4 07625         SLW     BUF2+50-1,4    
      02202 -0500 00 0 07220         CAL     TRA3     
      02203  0602 00 4 07627         SLW     BUF2+50+1,4    
      02204 -0500 00 2 00001         CAL     1,2
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 17    
                  
      02205  0602 00 4 07626         SLW     BUF2+50,4
      02206 -0520 00 0 07263         NZT     SUBFLG   
      02207  0020 00 0 02237         TRA     CNO3     
      02210 -0737 00 4 00000         PDC     ,4 
      02211 -3 00000 4 02237         TXL     CNO3,4,0 
      02212 -0756 00 5 00000         PCD     ,5 
      02213  0622 00 2 00001         STD     1,2
      02214 -0500 00 4 00001  CNO4   CAL     1,4
      02215  0602 00 5 00001         SLW     1,5
      02216 -0500 00 4 00002         CAL     2,4
      02217  0602 00 5 00002         SLW     2,5
      02220 -0500 00 4 00003         CAL     3,4
      02221  0602 00 5 00003         SLW     3,5
      02222  0636 00 5 02232         SCA     CNO5,5   
      02223 -0500 00 5 00000         CAL     0,5
      02224  0737 00 5 00000         PAC     ,5 
      02225  3 00000 5 02231         TXH     *+4,5,0  
      02226  0636 00 4 02230         SCA     *+2,4    
      02227  0074 00 4 00724         TSX     MORMEM,4 
      02230 -0774 00 4 00000         AXC     **,4     
      02231  0756 00 5 00000         PCA     ,5 
      02232  0602 00 0 00000  CNO5   SLW     ** 
      02233 -0500 00 4 00000         CAL     0,4
      02234  0737 00 4 00000         PAC     ,4 
      02235  3 00000 4 02214         TXH     CNO4,4,0 
      02236  0600 60 0 02232         STZ*    CNO5     
      02237 -0774 00 4 00000  CNO3   AXC     **,4     
      02240  0020 00 4 00002         TRA     2,4
      02241  0535 00 4 02141  XCHG   LAC     NO1,4    
      02242 -0774 00 2 00000         AXC     00,2     
      02243  0636 00 0 02141         SCA     NO1,0    
      02244 -3 00000 4 02251         TXL     *+5,4,0  
      02245  1 00002 4 02246         TXI     *+1,4,2  
      02246  0443 00 4 07544         DLD     BUF2,4   
      02247 -0603 00 2 07627         DST     BUF2+50+1,2    
      02250  1 77776 2 02244         TXI     *-4,2,-2 
      02251 -0500 00 0 07220         CAL     TRA3     
      02252  0602 00 2 07627         SLW     BUF2+50+1,2    
      02253  0636 00 2 02175         SCA     CNO1,2   
      02254  0020 00 0 00000  XCH2   TRA     ** 
                                     INSERT  1QED     
      02255  0 00000 0 00000  SIZ1  
      02256  0 00000 0 00000  SIZ2  
      02257  0600 00 0 07033  GETCHA STZ     VFLG     
      02260  0520 00 0 07241         ZET     RECLEV   
      02261  0020 00 0 02520         TRA     GETBUF   
      02262  3 00000 7 02346         TXH     GC5+1,7,0
      02263 -0625 00 0 07236         STL     RFLG     
      02264  0600 00 0 02255         STZ     SIZ1     
      02265  0636 00 4 02345         SCA     GC5,4    
      02266  0074 00 4 07322  GC0    TSX     RDFLXA,4 
      02267  0 00144 0 07344         PZE     BUF1,,100
      02270  0560 00 0 07344         LDQ     BUF1     
      02271 -0754 00 0 00000         ZAC  
      02272 -0763 00 0 00006         LGL     6  
      02273 -0340 00 0 11355         LAS     =O77     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 18    
                  
      02274  0020 00 0 02276         TRA     *+2
      02275  0020 00 0 06425         TRA     ICOM     
      02276  0774 00 6 00000         AXT     00,6     
      02277  0774 00 7 00000         AXT     00,7     
      02300  2 00001 7 02304  GC1    TIX     *+4,7,1  
      02301  0774 00 7 00003         AXT     3,7
      02302  0560 00 6 07344         LDQ     BUF1,6   
      02303  1 77777 6 02304         TXI     *+1,6,-1 
      02304 -0754 00 0 00000         ZAC  
      02305 -0763 00 0 00014         LGL     12 
      02306 -0320 00 0 11372         ANA     =O177    
      02307  0737 00 1 00000         PAC     ,1 
      02310 -0500 60 0 00010         CAL*    CNVTBL   
      02311  0771 00 0 00020         ARS     16 
      02312 -0320 00 0 11372         ANA     =O177    
      02313  0534 00 1 02255         LXA     SIZ1,1   
      02314  0602 00 1 10617         SLW     BUF6+299,1     
      02315  1 00001 1 02316         TXI     *+1,1,1  
      02316  3 00454 1 01256         TXH     TYPE0,1,300    
      02317  0634 00 1 02255         SXA     SIZ1,1   
      02320 -0340 00 0 11325         LAS     =O12     
      02321  0020 00 0 02300         TRA     GC1
      02322  0020 00 0 02324         TRA     *+2
      02323  0020 00 0 02300         TRA     GC1
      02324  0074 00 4 00006         TSX     OUTESC,4 
      02325  3 00000 0 10617         PAR     BUF6+299 
      02326  3 00000 0 02255         PAR     SIZ1     
      02327  3 00000 0 10617         PAR     BUF6+299 
      02330  3 00000 0 02256         PAR     SIZ2     
      02331  3 00000 0 11377         PAR     =300     
      02332  0074 00 4 00003         TSX     CANON,4  
      02333  3 00000 0 10617         PAR     BUF6+299 
      02334  3 00000 0 02256         PAR     SIZ2     
      02335  3 00000 0 11377         PAR     =300     
      02336  0074 00 4 00007         TSX     EKEDIT,4 
      02337  3 00000 0 10617         PAR     BUF6+299 
      02340  3 00000 0 02256         PAR     SIZ2     
      02341  3 00000 0 11377         PAR     =300     
      02342  0600 00 0 07236         STZ     RFLG     
      02343  0600 00 0 07274         STZ     CFLG     
      02344  0774 00 7 00000         AXT     00,7     
      02345 -0774 00 4 00000  GC5    AXC     **,4     
      02346 -0500 00 7 10617         CAL     BUF6+299,7     
      02347  1 00001 7 02350         TXI     *+1,7,1  
      02350  0737 00 1 00000  GC4    PAC     ,1 
      02351  0520 00 0 07025         ZET     CAPFLG   
      02352 -3 77637 1 02422         TXL     GC10,1,-97     
      02353  0520 00 0 07030  GC10R  ZET     TFLG     
      02354  0020 00 0 02425         TRA     GC11     
      02355  0520 00 0 07033         ZET     VFLG     
      02356  0020 00 0 02402         TRA     GC12     
      02357 -0340 00 0 11332         LAS     =O31     
      02360  0020 00 0 02366         TRA     GC13     
      02361  0020 00 0 02442         TRA     GC14     
      02362 -0340 00 0 11331         LAS     =O30     
      02363  0020 00 0 02371         TRA     GC15     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 19    
                  
      02364  0020 00 0 02444         TRA     GC16     
      02365  0020 00 0 02371         TRA     GC15     
      02366 -0340 00 0 11336  GC13   LAS     =O36     
      02367  0020 00 0 02371         TRA     GC15     
      02370  0020 00 0 02506         TRA     GC17     
      02371 -0340 00 0 07253  GC15   LAS     V  
      02372  0020 00 0 02374         TRA     *+2
      02373  0020 00 0 02442         TRA     GC14     
      02374 -0340 00 0 07252         LAS     B  
      02375  0020 00 0 02377         TRA     *+2
      02376  0020 00 0 02444         TRA     GC16     
      02377 -0340 00 0 07260         LAS     R  
      02400  0020 00 0 02402         TRA     *+2
      02401  0020 00 0 02506         TRA     GC17     
      02402 -0340 00 0 11325  GC12   LAS     =O12     
      02403  0020 00 0 02415         TRA     GC6
      02404  0520 00 0 07241         ZET     RECLEV   
      02405  0020 00 0 02410         TRA     *+3
      02406  0774 00 7 00000         AXT     00,7     
      02407  0020 00 4 00001         TRA     1,4
      02410 -0340 00 0 11324         LAS     =O11     
      02411 -0625 00 0 07274         STL     CFLG     
      02412  0020 00 4 00001         TRA     1,4
      02413 -0625 00 0 07274         STL     CFLG     
      02414  0020 00 4 00001         TRA     1,4
      02415 -0340 00 0 11340  GC6    LAS     =O40     
      02416 -0625 00 0 07274         STL     CFLG     
      02417  0020 00 4 00001         TRA     1,4
      02420 -0625 00 0 07274         STL     CFLG     
      02421  0020 00 4 00001         TRA     1,4
      02422 -3 77605 1 02353  GC10   TXL     GC10R,1,-123   
      02423  0402 00 0 11340         SUB     =O40     
      02424  1 00040 1 02353         TXI     GC10R,1,32     
      02425 -0340 00 0 11325  GC11   LAS     =O12     
      02426  0020 00 4 00001         TRA     1,4
      02427  0020 00 0 02431         TRA     *+2
      02430  0020 00 4 00001         TRA     1,4
      02431  0534 00 7 07030         LXA     TFLG,7   
      02432  1 77777 7 02433         TXI     *+1,7,-1 
      02433  0634 00 7 07241         SXA     RECLEV,7 
      02434  0535 00 7 07245         LAC     IBASE,7  
      02435  0600 00 7 00001         STZ     01,7     
      02436  0534 00 6 07031         LXA     TFLG+1,6 
      02437 -0534 00 7 07031         LXD     TFLG+1,7 
      02440  0600 00 0 07030         STZ     TFLG     
      02441  0020 00 0 02404         TRA     GC12+2   
      02442 -0625 00 0 07033  GC14   STL     VFLG     
      02443  0020 00 0 02260         TRA     GETCHA+1 
      02444  0636 00 4 02503  GC16   SCA     GC8,4    
      02445  0535 00 4 07242         LAC     BUFER,4  
      02446 -0500 00 4 00003         CAL     03,4     
      02447  0602 00 0 02505         SLW     GC81     
      02450  0074 00 4 03057         TSX     GETBN,4  
      02451  0074 00 4 03304         TSX     BOPEN,4  
      02452 -0520 00 0 07241         NZT     RECLEV   
      02453  0020 00 0 02474         TRA     GC16.2   
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 20    
                  
      02454 -3 00001 7 02474         TXL     GC16.2,7,1     
      02455  0522 00 7 07131         XEC     CAL+1,7  
      02456  0522 00 7 07153         XEC     ARS+1,7  
      02457 -0320 00 0 11372         ANA     =O177    
      02460  0402 00 0 11325         SUB     =O12     
      02461 -0100 00 0 02474         TNZ     GC16.2   
      02462 -0534 00 4 02622         LXD     BC2+1,4  
      02463  0636 00 4 02473         SCA     GC16.1,4 
      02464  0500 00 0 02621         CLA     BC2
      02465  0402 00 0 02473         SUB     GC16.1   
      02466 -0100 00 0 02474         TNZ     GC16.2   
      02467  0520 00 0 07235         ZET     INTFLG   
      02470  0020 00 0 02474         TRA     GC16.2   
      02471  0074 00 4 02641         TSX     BC4,4    
      02472  0020 00 0 02474         TRA     GC16.2   
      02473 -0774 00 6 00000  GC16.1 AXC     **,6     
      02474  0535 00 4 07251  GC16.2 LAC     ZER,4    
      02475 -0500 00 4 00000         CAL     00,4     
      02476  0601 00 0 02500         STO     *+2
      02477  0074 00 4 02527         TSX     SETBC,4  
      02500  0 00000 0 00000         PZE     **,,**   
      02501 -0500 00 0 02505         CAL     GC81     
      02502  0074 00 4 03304         TSX     BOPEN,4  
      02503 -0774 00 4 00000  GC8    AXC     **,4     
      02504  0020 00 0 02257         TRA     GETCHA   
      02505  0 00000 0 00000  GC81   PZE  
      02506  0534 00 1 07241  GC17   LXA     RECLEV,1 
      02507  1 00001 1 02510         TXI     *+1,1,1  
      02510  0634 00 1 07030         SXA     TFLG,1   
      02511  0634 00 6 07031         SXA     TFLG+1,6 
      02512 -0634 00 7 07031         SXD     TFLG+1,7 
      02513  0535 00 1 07245         LAC     IBASE,1  
      02514 -0500 00 1 00001         CAL     01,1     
      02515  0774 00 7 00000         AXT     00,7     
      02516  0600 00 0 07241         STZ     RECLEV   
      02517  0020 00 0 02257         TRA     GETCHA   
      02520  0636 00 4 02522  GETBUF SCA     *+2,4    
      02521  0074 00 4 02604         TSX     GETBC,4  
      02522 -0774 00 4 00000         AXC     **,4     
      02523 -0340 00 0 11321         LAS     =O3
      02524  0020 00 0 02350         TRA     GC4
      02525  0020 00 0 02257         TRA     GETCHA   
      02526  0020 00 0 02350         TRA     GC4
      02527  0636 00 4 02567  SETBC  SCA     RE1,4    
      02530  0535 00 4 07244         LAC     INPUT,4  
      02531  0756 00 6 00000         PCA     ,6 
      02532  0602 00 4 00001         SLW     01,4     
      02533 -0756 00 7 00000         PCD     ,7 
      02534  0622 00 4 00001         STD     01,4     
      02535 -0500 00 0 11405         CAL     =O200000 
      02536  0520 00 0 07034         ZET     EFLG     
      02537  0625 00 4 00001         STT     01,4     
      02540 -0500 00 0 02621         CAL     BC2
      02541  0602 00 4 00002         SLW     02,4     
      02542 -0500 00 0 02622         CAL     BC2+1    
      02543  0622 00 4 00003         STD     03,4     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 21    
                  
      02544 -0500 00 0 02623         CAL     BC2+2    
      02545  0771 00 0 00022         ARS     18 
      02546  0621 00 4 00003         STA     03,4     
      02547  0756 00 5 00000         PCA     ,5 
      02550  0621 00 4 00000         STA     00,4     
      02551  0621 00 0 07244         STA     INPUT    
      02552 -0756 00 4 00000         PCD     ,4 
      02553  0622 00 5 00000         STD     00,5     
      02554 -0500 00 5 00000         CAL     00,5     
      02555  0737 00 5 00000         PAC     ,5 
      02556  3 00000 5 02560         TXH     *+2,5,0  
      02557  0074 00 4 00724         TSX     MORMEM,4 
      02560  0534 00 4 07241         LXA     RECLEV,4 
      02561  1 00001 4 02562         TXI     *+1,4,1  
      02562 -3 00764 4 02566         TXL     RE1-1,4,500    
      02563  1 00012 4 02564         TXI     *+1,4,10 
      02564 -0634 00 4 02562         SXD     *-2,4    
      02565  0020 00 0 01310         TRA     TYPE7    
      02566  0634 00 4 07241         SXA     RECLEV,4 
      02567 -0774 00 4 00000  RE1    AXC     **,4     
      02570 -0500 00 4 00001         CAL     1,4
      02571  0737 00 6 00000         PAC     ,6 
      02572 -0737 00 7 00000         PDC     ,7 
      02573  0636 00 6 02621         SCA     BC2,6    
      02574 -0500 00 6 00001         CAL     01,6     
      02575  0737 00 6 00000         PAC     ,6 
      02576 -0634 00 7 02622         SXD     BC2+1,7  
      02577  1 77777 7 02600         TXI     *+1,7,-1 
      02600 -0634 00 7 02623         SXD     BC2+2,7  
      02601  0774 00 7 00023         AXT     19,7     
      02602  0600 00 0 07034         STZ     EFLG     
      02603  0020 00 4 00002         TRA     2,4
      02604  0520 00 0 07034  GETBC  ZET     EFLG     
      02605  0020 00 0 02641         TRA     BC4
      02606  2 00001 7 02612         TIX     BC1,7,1  
      02607 -0500 00 6 00000         CAL     00,6     
      02610  0737 00 6 00000         PAC     ,6 
      02611  0774 00 7 00022         AXT     18,7     
      02612  0522 00 7 07130  BC1    XEC     CAL,7    
      02613  0522 00 7 07152         XEC     ARS,7    
      02614 -0320 00 0 11372         ANA     =O177    
      02615 -0340 00 0 11325         LAS     =O12     
      02616  0020 00 4 00001         TRA     1,4
      02617  0020 00 0 02621         TRA     BC2
      02620  0020 00 4 00001         TRA     1,4
      02621 -0774 00 6 00000  BC2    AXC     **,6     
      02622  3 00000 6 02624         TXH     *+2,6,** 
      02623  3 00000 6 02634         TXH     BC3,6,** 
      02624 -0500 00 6 00000         CAL     00,6     
      02625  0737 00 6 00000         PAC     ,6 
      02626  0636 00 6 02621         SCA     BC2,6    
      02627 -0500 00 6 00001         CAL     01,6     
      02630  0737 00 6 00000         PAC     ,6 
      02631  0774 00 7 00023         AXT     19,7     
      02632 -0500 00 0 11325         CAL     =O12     
      02633  0020 00 4 00001         TRA     1,4
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 22    
                  
      02634 -0625 00 0 07034  BC3    STL     EFLG     
      02635 -0500 00 6 00000         CAL     00,6     
      02636  0621 00 0 02621         STA     BC2
      02637 -0500 00 0 11325         CAL     =O12     
      02640  0020 00 4 00001         TRA     1,4
      02641  0600 00 0 07034  BC4    STZ     EFLG     
      02642  0534 00 6 07241         LXA     RECLEV,6 
      02643  1 77777 6 02644         TXI     *+1,6,-1 
      02644  0634 00 6 07241         SXA     RECLEV,6 
      02645  0535 00 6 07244         LAC     INPUT,6  
      02646  0756 00 5 00000         PCA     ,5 
      02647  0621 00 6 00000         STA     00,6     
      02650  0535 00 5 07244         LAC     INPUT,5  
      02651 -0500 00 6 00000         CAL     00,6     
      02652 -0737 00 6 00000         PDC     ,6 
      02653  0636 00 6 07244         SCA     INPUT,6  
      02654 -0500 00 6 00003         CAL     03,6     
      02655  0622 00 0 02622         STD     BC2+1    
      02656  0767 00 0 00022         ALS     18 
      02657  0622 00 0 02623         STD     BC2+2    
      02660 -0500 00 6 00002         CAL     02,6     
      02661  0602 00 0 02621         SLW     BC2
      02662 -0500 00 6 00001         CAL     01,6     
      02663 -0737 00 7 00000         PDC     ,7 
      02664  0737 00 6 00000         PAC     ,6 
      02665  0625 00 0 07034         STT     EFLG     
      02666 -0500 00 0 11321         CAL     =O3
      02667  0020 00 4 00001         TRA     1,4
      02670  0636 00 4 02733  SETFC  SCA     FC1,4    
      02671  0074 00 4 03106         TSX     GETFN,4  
      02672  0636 00 6 02766         SCA     GF4+1,6  
      02673  0636 00 7 02767         SCA     GF4+2,7  
      02674 -0500 00 2 07055         CAL     OCT3,2   
      02675  0602 00 0 07055         SLW     OCT3     
      02676 -0500 00 2 07065         CAL     SHFT,2   
      02677  0621 00 0 02740         STA     GETFC+1  
      02700  0771 00 0 00022         ARS     18 
      02701  0621 00 0 02760         STA     GF2+1    
      02702 -0500 00 2 07071         CAL     RETRN,2  
      02703  0621 00 0 02762         STA     GF3
      02704 -0625 00 0 07033         STL     VFLG     
      02705  0074 00 4 07325         TSX     OPEN,4   
      02706  3 00000 0 11450         PAR     =HR
      02707  3 00000 0 07337         PAR     FILNAM   
      02710  3 00000 0 07340         PAR     FILNAM+1 
      02711  3 00000 0 11442         PAR     =O400000000000 
      02712  3 00000 0 11442         PAR     =O400000000000 
      02713  3 00000 0 01314         PAR     TYPE8    
      02714  3 00000 0 07264         PAR     COPY     
      02715 -0625 00 0 07300         STL     FILFLG   
      02716  0074 00 4 07326         TSX     BUFFER,4 
      02717  3 00000 0 07337         PAR     FILNAM   
      02720  3 00000 0 07340         PAR     FILNAM+1 
      02721  3 00660 0 00014         PAR     BUF3,,432
      02722  0600 00 0 07240         STZ     CPLFLG   
      02723  3 77775 2 02733         TXH     FC1,2,-3 
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 23    
                  
      02724  0074 00 4 07327         TSX     RDWAIT,4 
      02725  3 00000 0 07337         PAR     FILNAM   
      02726  3 00000 0 07340         PAR     FILNAM+1 
      02727  3 00000 0 11316         PAR     =0 
      02730  3 00001 0 07544         PAR     BUF2,,1  
      02731  3 00000 0 02733         PAR     FC1
      02732  3 00000 0 07264         PAR     COPY     
      02733 -0774 00 4 00000  FC1    AXC     **,4     
      02734  0774 00 6 00001         AXT     1,6
      02735  0774 00 7 00001         AXT     1,7
      02736  0020 00 4 00001         TRA     1,4
      02737  2 00001 7 02757  GETFC  TIX     GF2,7,1  
      02740  0774 00 7 00000         AXT     **,7     
      02741  2 00001 6 02754         TIX     GF1+1,6,1
      02742  0774 00 6 00144         AXT     100,6    
      02743  0636 00 4 02753         SCA     GF1,4    
      02744  0074 00 4 07327         TSX     RDWAIT,4 
      02745  3 00000 0 07337         PAR     FILNAM   
      02746  3 00000 0 07340         PAR     FILNAM+1 
      02747  3 00000 0 11316         PAR     =0 
      02750  3 00144 0 07544         PAR     BUF2,,100
      02751  3 00000 0 03003         PAR     GF5
      02752  3 00000 0 07264         PAR     COPY     
      02753 -0774 00 4 00000  GF1    AXC     **,4     
      02754  0560 00 6 07710         LDQ     BUF2+100,6     
      02755 -0754 00 0 00000         ZAC  
      02756  0020 00 0 02760         TRA     GF2+1    
      02757  0443 00 0 11314  GF2    DLD     SYLBUF+2 
      02760 -0763 00 0 00000         LGL     ** 
      02761 -0600 00 0 11315         STQ     SYLBUF+3 
      02762  0020 00 0 00000  GF3    TRA     ** 
      02763  0636 00 4 02765         SCA     GF4,4    
      02764  0074 00 4 02772         TSX     CLOS,4   
      02765 -0774 00 4 00000  GF4    AXC     **,4     
      02766 -0774 00 6 00000         AXC     **,6     
      02767 -0774 00 7 00000         AXC     **,7     
      02770 -0500 00 0 11321         CAL     =O3
      02771  0020 00 4 00001         TRA     1,4
      02772  0636 00 4 03001  CLOS   SCA     CLO1,4   
      02773  0074 00 4 07324         TSX     CLOSE,4  
      02774  3 00000 0 07337         PAR     FILNAM   
      02775  3 00000 0 07340         PAR     FILNAM+1 
      02776  3 00000 0 03000         PAR     *+2
      02777  3 00000 0 07264         PAR     COPY     
      03000  0600 00 0 07300         STZ     FILFLG   
      03001 -0774 00 4 00000  CLO1   AXC     **,4     
      03002  0020 00 4 00001         TRA     1,4
      03003  0535 00 4 07264  GF5    LAC     COPY,4   
      03004 -0500 00 0 07055         CAL     OCT3     
      03005  0602 00 4 07544         SLW     BUF2,4   
      03006 -0500 00 0 11476         CAL     =O777777777777 
      03007  0602 00 4 07545         SLW     BUF2+1,4 
      03010  0020 00 0 02753         TRA     GF1
      03011 -0320 00 0 11372  GFGE   ANA     =O177    
      03012  0100 00 0 02737         TZE     GETFC    
      03013 -0340 00 0 11372         LAS     =O177    
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 24    
                  
      03014  0020 00 0 03016         TRA     *+2
      03015  0020 00 0 02737         TRA     GETFC    
      03016 -0340 00 0 11326         LAS     =O15     
      03017  0020 00 0 03044         TRA     GF8
      03020 -0500 00 0 11325         CAL     =O12     
      03021  0020 00 0 03044         TRA     GF8
      03022 -0320 00 0 11372  GFASCI ANA     =O177    
      03023  0020 00 0 03044         TRA     GF8
      03024  0737 00 1 00000  GFSIX  PAC     ,1 
      03025  3 77701 1 03027         TXH     *+2,1,-63
      03026  3 77700 1 03050         TXH     GF7,1,-64
      03027 -0500 60 0 00010         CAL*    CNVTBL   
      03030  0771 00 0 00020         ARS     16 
      03031  0020 00 0 03040         TRA     GF6
      03032 -0320 00 0 11372  GFTWLV ANA     =O177    
      03033  0737 00 1 00000         PAC     ,1 
      03034  3 77601 1 03036         TXH     *+2,1,-127     
      03035  3 77600 1 03050         TXH     GF7,1,-128     
      03036 -0500 60 0 00010         CAL*    CNVTBL   
      03037  0771 00 0 00020         ARS     16 
      03040 -0320 00 0 11372  GF6    ANA     =O177    
      03041 -0340 00 0 11372         LAS     =O177    
      03042  0020 00 0 03043         TRA     *+1
      03043  0020 00 0 02737         TRA     GETFC    
      03044 -0340 00 0 11321  GF8    LAS     =O3
      03045  0020 00 4 00001         TRA     1,4
      03046  0020 00 0 02763         TRA     GF3+1    
      03047  0020 00 4 00001         TRA     1,4
      03050  0774 00 7 00001  GF7    AXT     1,7
      03051 -0500 00 6 07710         CAL     BUF2+100,6     
      03052 -0340 00 0 11476         LAS     =O777777777777 
      03053  0020 00 0 03055         TRA     *+2
      03054  0020 00 0 02763         TRA     GF3+1    
      03055 -0500 00 0 11325         CAL     =O12     
      03056  0020 00 4 00001         TRA     1,4
      03057  0636 00 4 03103  GETBN  SCA     BN7,4    
      03060  0074 00 4 02257         TSX     GETCHA,4 
      03061  0520 00 0 07033         ZET     VFLG     
      03062  0020 00 0 03103         TRA     BN7
      03063 -3 77727 1 03103         TXL     BN7,1,-41
      03064  3 77730 1 03103         TXH     BN7,1,-40
      03065  0600 00 0 03105         STZ     BN6
      03066  0074 00 4 02257  BN1    TSX     GETCHA,4 
      03067  0520 00 0 07033         ZET     VFLG     
      03070  0020 00 0 03075         TRA     BN2
      03071 -3 77726 1 03075         TXL     BN2,1,-42
      03072 -3 77727 1 03102         TXL     BN3,1,-41
      03073 -3 77765 1 03075         TXL     BN2,1,-11
      03074 -3 77766 1 01320         TXL     TYPE9,1,-10    
      03075 -0765 00 0 00007  BN2    LGR     7  
      03076 -0500 00 0 03105         CAL     BN6
      03077 -0763 00 0 00007         LGL     7  
      03100  0602 00 0 03105         SLW     BN6
      03101  0020 00 0 03066         TRA     BN1
      03102 -0500 00 0 03105  BN3    CAL     BN6
      03103 -0774 00 4 00000  BN7    AXC     **,4     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 25    
                  
      03104  0020 00 4 00001         TRA     1,4
      03105  0 00000 0 00000  BN6    PZE  
      03106  0636 00 4 03175  GETFN  SCA     FN7,4    
      03107  0520 00 0 07300         ZET     FILFLG   
      03110  0074 00 4 02772         TSX     CLOS,4   
      03111  0600 00 0 07265         STZ     AFLG     
      03112  0600 00 0 07266         STZ     BFLG     
      03113  0074 00 4 02257         TSX     GETCHA,4 
      03114  0774 00 4 00020         AXT     16,4     
      03115 -0340 00 4 07055         LAS     TYCHA+16,4     
      03116  0020 00 0 03120         TRA     *+2
      03117  0020 00 0 03122         TRA     *+3
      03120  2 00002 4 03115         TIX     *-3,4,2  
      03121  0020 00 0 01320         TRA     TYPE9    
      03122 -0500 00 4 07056         CAL     TYCHA+17,4     
      03123  0737 00 2 00000         PAC     ,2 
      03124 -0500 00 2 07101  FN3    CAL     FNASUM,2 
      03125  0602 00 0 07337         SLW     FILNAM   
      03126  0602 00 0 07340         SLW     FILNAM+1 
      03127 -0340 00 0 11452         LAS     =H   FAP 
      03130  0020 00 0 03135         TRA     FN4-1    
      03131  0020 00 0 03133         TRA     *+2
      03132  0020 00 0 03135         TRA     FN4-1    
      03133 -0625 00 0 07025         STL     CAPFLG   
      03134  0020 00 0 03136         TRA     FN4
      03135  0600 00 0 07025         STZ     CAPFLG   
      03136  0074 00 4 02257  FN4    TSX     GETCHA,4 
      03137 -3 77737 1 03143         TXL     FN5-1,1,-33    
      03140 -3 77740 1 03136         TXL     FN4,1,-32
      03141 -3 77765 1 03143         TXL     FN5-1,1,-11    
      03142 -3 77766 1 03175         TXL     FN7,1,-10
      03143  0441 00 0 11454         LDI     =H 
      03144 -0500 60 0 00010  FN5    CAL*    CNVTBL   
      03145 -0765 00 0 00016         LGR     14 
      03146 -0046 00 0 00000         PIA  
      03147 -0763 00 0 00006         LGL     6  
      03150  0044 00 0 00000         PAI  
      03151  0074 00 4 02257         TSX     GETCHA,4 
      03152 -3 77737 1 03144         TXL     FN5,1,-33
      03153 -3 77740 1 03157         TXL     FN6,1,-32
      03154 -3 77765 1 03144         TXL     FN5,1,-11
      03155 -3 77766 1 03157         TXL     FN6,1,-10
      03156  0020 00 0 03144         TRA     FN5
      03157 -0520 00 0 07266  FN6    NZT     BFLG     
      03160  0020 00 0 03165         TRA     *+5
      03161 -0500 00 0 07340         CAL     FILNAM+1 
      03162  0602 00 0 07337         SLW     FILNAM   
      03163  0604 00 0 07340         STI     FILNAM+1 
      03164  0020 00 0 03137         TRA     FN4+1    
      03165  0520 00 0 07265         ZET     AFLG     
      03166  0020 00 0 03172         TRA     *+4
      03167  0604 00 0 07337         STI     FILNAM   
      03170 -0625 00 0 07265         STL     AFLG     
      03171  0020 00 0 03137         TRA     FN4+1    
      03172  0604 00 0 07340         STI     FILNAM+1 
      03173 -0625 00 0 07266         STL     BFLG     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 26    
                  
      03174  0020 00 0 03137         TRA     FN4+1    
      03175 -0774 00 4 00000  FN7    AXC     **,4     
      03176  0020 00 4 00001         TRA     1,4
      03177  0636 00 4 03276  INSERT SCA     PU5,4    
      03200 -0500 00 4 00001         CAL     1,4
      03201  0621 00 0 03265         STA     PU4
      03202  0522 00 0 03265  PU1    XEC     PU4
      03203  0737 00 1 00000         PAC     ,1 
      03204  0520 00 0 07235         ZET     INTFLG   
      03205  0020 00 0 01274         TRA     TYPE4    
      03206  0520 00 0 07033         ZET     VFLG     
      03207  0020 00 0 03215         TRA     PU7
      03210 -0340 00 0 07254         LAS     E  
      03211  0020 00 0 03213         TRA     *+2
      03212  0020 00 0 03276         TRA     PU5
      03213 -3 77743 1 03217         TXL     *+4,1,-29
      03214 -3 77744 1 03276         TXL     PU5,1,-28
      03215 -3 77774 1 03217  PU7    TXL     *+2,1,-4 
      03216 -3 77775 1 03276         TXL     PU5,1,-3 
      03217  0535 00 4 07247         LAC     ADDR2,4  
      03220 -0500 00 4 00000         CAL     00,4     
      03221 -0737 00 2 00000         PDC     ,2 
      03222  0622 00 5 00000         STD     00,5     
      03223  0756 00 5 00000         PCA     ,5 
      03224  0630 00 5 00000         STP     00,5     
      03225  0621 00 2 00000         STA     00,2     
      03226  0737 00 2 00000         PAC     ,2 
      03227 -0756 00 2 00000         PCD     ,2 
      03230  0622 00 4 00000         STD     00,4     
      03231 -0500 00 5 00000         CAL     00,5     
      03232  0737 00 5 00000         PAC     ,5 
      03233  0756 00 4 00000         PCA     ,4 
      03234  0621 00 2 00000         STA     00,2     
      03235  0600 00 2 00003         STZ     03,2     
      03236  0636 00 2 07024         SCA     DOT,2    
      03237  3 00000 5 03241         TXH     *+2,5,0  
      03240  0074 00 4 00724         TSX     MORMEM,4 
      03241  0756 00 5 00000         PCA     ,5 
      03242  0601 00 2 00001         STO     01,2     
      03243  0737 00 2 00000  PU2    PAC     ,2 
      03244  0500 00 5 00000         CLA     00,5     
      03245  0737 00 5 00000         PAC     ,5 
      03246  3 00000 5 03250         TXH     *+2,5,0  
      03247  0074 00 4 00724         TSX     MORMEM,4 
      03250  0600 00 2 00000         STZ     00,2     
      03251  0600 00 2 00001         STZ     01,2     
      03252  0600 00 2 00002         STZ     02,2     
      03253  0600 00 2 00003         STZ     03,2     
      03254  0774 00 3 00022         AXT     18,3     
      03255  0756 00 1 00000         PCA     ,1 
      03256 -0340 00 0 11321  PU3    LAS     =O3
      03257  0020 00 0 03261         TRA     *+2
      03260  0020 00 0 03273         TRA     PU8
      03261  0522 00 3 07174         XEC     ALS,3    
      03262  0522 00 3 07216         XEC     ORS,3    
      03263 -3 77765 1 03265         TXL     *+2,1,-11
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 27    
                  
      03264 -3 77766 1 03300         TXL     PU6,1,-10 (O12)
      03265  0074 00 4 00000  PU4    TSX     **,4     
      03266  0737 00 1 00000         PAC     ,1 
      03267  2 00001 3 03256         TIX     PU3,3,1  
      03270  0756 00 5 00000         PCA     ,5 
      03271  0621 00 2 00000         STA     00,2     
      03272  0020 00 0 03243         TRA     PU2
      03273 -0500 00 0 11325  PU8    CAL     =O12     
      03274  0522 00 3 07174         XEC     ALS,3    
      03275  0522 00 3 07216         XEC     ORS,3    
      03276 -0774 00 4 00000  PU5    AXC     **,4     
      03277  0020 00 4 00002         TRA     2,4
      03300  0535 00 4 07024  PU6    LAC     DOT,4    
      03301 -0756 00 2 00000         PCD     ,2 
      03302  0622 00 4 00001         STD     01,4     
      03303  0020 00 0 03202         TRA     PU1
      03304  0636 00 4 03376  BOPEN  SCA     BO4,4    
      03305  0602 00 0 03400         SLW     BO5
      03306  0535 00 4 07242         LAC     BUFER,4  
      03307 -0500 00 0 07024         CAL     DOT
      03310  0767 00 0 00022         ALS     18 
      03311 -0501 00 0 07251         ORA     ZER
      03312  0602 00 4 00001         SLW     01,4     
      03313  0535 00 4 07243         LAC     BBASE,4  
      03314 -3 00000 4 03323  BO1    TXL     BO2,4,0  
      03315  0500 00 0 03400         CLA     BO5
      03316  0402 00 4 00003         SUB     03,4     
      03317  0100 00 0 03371         TZE     BO3
      03320 -0500 00 4 00000         CAL     00,4     
      03321  0737 00 4 00000         PAC     ,4 
      03322  0020 00 0 03314         TRA     BO1
      03323  0636 00 5 07242  BO2    SCA     BUFER,5  
      03324 -0500 00 5 00000         CAL     00,5     
      03325  0737 00 5 00000         PAC     ,5 
      03326  3 00000 5 03330         TXH     *+2,5,0  
      03327  0074 00 4 00724         TSX     MORMEM,4 
      03330  0636 00 5 07251         SCA     ZER,5    
      03331 -0500 00 5 00000         CAL     00,5     
      03332  0737 00 5 00000         PAC     ,5 
      03333  3 00000 5 03335         TXH     *+2,5,0  
      03334  0074 00 4 00724         TSX     MORMEM,4 
      03335  0535 00 4 07242         LAC     BUFER,4  
      03336  0600 00 4 00001         STZ     01,4     
      03337  0600 00 4 00002         STZ     02,4     
      03340 -0500 00 0 03400         CAL     BO5
      03341  0602 00 4 00003         SLW     03,4     
      03342 -0500 00 0 07243         CAL     BBASE    
      03343  0602 00 4 00000         SLW     00,4     
      03344  0636 00 4 07243         SCA     BBASE,4  
      03345  0535 00 4 07251         LAC     ZER,4    
      03346  0636 00 4 07024         SCA     DOT,4    
      03347  0756 00 4 00000         PCA     ,4 
      03350 -0760 00 0 00003         SSM  
      03351  0601 00 4 00000         STO     00,4     
      03352 -0756 00 4 00000         PCD     ,4 
      03353  0622 00 4 00000         STD     00,4     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 28    
                  
      03354  0756 00 5 00000         PCA     ,5 
      03355  0621 00 4 00001         STA     01,4     
      03356 -0756 00 5 00000         PCD     ,5 
      03357  0622 00 4 00001         STD     01,4     
      03360 -0737 00 1 00000         PDC     ,1 
      03361 -0500 00 5 00000         CAL     00,5     
      03362  0737 00 5 00000         PAC     ,5 
      03363  3 00000 5 03365         TXH     *+2,5,0  
      03364  0074 00 4 00724         TSX     MORMEM,4 
      03365  0600 00 1 00000         STZ     00,1     
      03366 -0500 00 0 11424         CAL     =O024000000000 
      03367  0602 00 1 00001         SLW     01,1     
      03370  0020 00 0 03376         TRA     BO4
      03371 -0500 00 4 00001  BO3    CAL     01,4     
      03372  0621 00 0 07251         STA     ZER
      03373  0771 00 0 00022         ARS     18 
      03374  0621 00 0 07024         STA     DOT
      03375  0636 00 4 07242         SCA     BUFER,4  
      03376 -0774 00 4 00000  BO4    AXC     **,4     
      03377  0020 00 4 00001         TRA     1,4
      03400  0 00000 0 00000  BO5    PZE  
      03401 -0500 00 0 07024  SETDD  CAL     DOT
      03402  0602 00 0 07246         SLW     ADDR1    
      03403  0602 00 0 07247         SLW     ADDR2    
      03404 -0625 00 0 07265         STL     AFLG     
      03405  0020 00 4 00001         TRA     1,4
      03406  0535 00 1 07251  SETFL  LAC     ZER,1    
      03407 -0500 00 1 00000         CAL     00,1     
      03410 -0737 00 1 00000         PDC     ,1 
      03411  0636 00 1 07247         SCA     ADDR2,1  
      03412  0621 00 0 07246         STA     ADDR1    
      03413 -0625 00 0 07265         STL     AFLG     
      03414  0020 00 4 00001         TRA     1,4
      03415  0535 00 1 07246  CKWRAP LAC     ADDR1,1  
      03416  0535 00 2 07247         LAC     ADDR2,2  
      03417  0500 00 1 00000  CK1    CLA     00,1     
      03420 -0120 00 0 01304         TMI     TYPE6    
      03421  0737 00 1 00000         PAC     ,1 
      03422  0402 00 2 00000         SUB     00,2     
      03423 -0100 00 0 03417         TNZ     CK1
      03424  0020 00 4 00001         TRA     1,4
      03425  0636 00 4 03463  DELETE SCA     DEL3,4   
      03426 -0520 00 0 07265         NZT     AFLG     
      03427  0074 00 4 03401         TSX     SETDD,4  
      03430  0074 00 4 03415         TSX     CKWRAP,4 
      03431  0535 00 4 07246         LAC     ADDR1,4  
      03432 -0500 00 4 00000         CAL     00,4     
      03433 -0737 00 1 00000         PDC     ,1 
      03434  0535 00 2 07247         LAC     ADDR2,2  
      03435 -0500 00 2 00000         CAL     00,2     
      03436  0737 00 2 00000         PAC     ,2 
      03437  0621 00 1 00000         STA     00,1     
      03440 -0756 00 1 00000         PCD     ,1 
      03441  0622 00 2 00000         STD     00,2     
      03442  0636 00 2 07024         SCA     DOT,2    
      03443  0535 00 1 07246         LAC     ADDR1,1  
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 29    
                  
      03444 -0500 00 1 00000  DEL1   CAL     00,1     
      03445  0737 00 2 00000         PAC     ,2 
      03446 -0500 00 1 00001         CAL     01,1     
      03447  0621 00 1 00000         STA     00,1     
      03450 -0737 00 1 00000         PDC     ,1 
      03451  0756 00 2 00000         PCA     ,2 
      03452  0340 00 0 07024         CAS     DOT
      03453  0020 00 0 03455         TRA     *+2
      03454  0020 00 0 03460         TRA     DEL2     
      03455  0621 00 1 00000         STA     00,1     
      03456  0737 00 1 00000         PAC     ,1 
      03457  0020 00 0 03444         TRA     DEL1     
      03460  0756 00 5 00000  DEL2   PCA     ,5 
      03461  0621 00 1 00000         STA     00,1     
      03462  0535 00 5 07246         LAC     ADDR1,5  
      03463 -0774 00 4 00000  DEL3   AXC     **,4     
      03464  0020 00 4 00001         TRA     1,4
      03465  0520 00 0 07265  COP1   ZET     AFLG     
      03466  0020 00 0 03477         TRA     COP2     
      03467  0074 00 4 02257         TSX     GETCHA,4 
      03470 -0340 00 0 11325         LAS     =O12     
      03471  0020 00 0 03473         TRA     *+2
      03472  0020 00 0 03477         TRA     COP2     
      03473 -0340 00 0 11340         LAS     =O40     
      03474  0020 00 2 00001         TRA     1,2
      03475 -0500 00 0 11373         CAL     =O200    
      03476  0020 00 2 00001         TRA     1,2
      03477 -0625 00 0 07265  COP2   STL     AFLG     
      03500 -0500 00 0 11373         CAL     =O200    
      03501  0020 00 2 00001         TRA     1,2
      03502  0636 00 4 03601  PRINT  SCA     PR6,4    
      03503 -0500 00 4 00001         CAL     1,4
      03504  0621 00 0 03513         STA     PR7
      03505 -0774 00 3 00000         AXC     00,3     
      03506  0774 00 4 00030         AXT     24,4     
      03507  0634 00 4 03545         SXA     PR3,4    
      03510  0600 00 0 07344         STZ     BUF1     
      03511 -0625 00 0 07236         STL     RFLG     
      03512  0774 00 2 00000         AXT     00,2     
      03513  0074 00 4 00000  PR7    TSX     **,4     
      03514 -0340 00 0 11321         LAS     =O3
      03515  0020 00 0 03517         TRA     *+2
      03516  0020 00 0 03565         TRA     PR9
      03517  0602 00 2 11275         SLW     BUF7+299,2     
      03520  3 00454 2 01256         TXH     TYPE0,2,300    
      03521 -0340 00 0 11325         LAS     =O12     
      03522  1 00001 2 03513         TXI     PR7,2,1  
      03523  1 00001 2 03525         TXI     *+2,2,1  
      03524  1 00001 2 03513         TXI     PR7,2,1  
      03525  0634 00 2 02255         SXA     SIZ1,2   
      03526  0074 00 4 00005         TSX     INESC,4  
      03527  3 00000 0 11275         PAR     BUF7+299 
      03530  3 00000 0 02255         PAR     SIZ1     
      03531  3 00000 0 11275         PAR     BUF7+299 
      03532  3 00000 0 02256         PAR     SIZ2     
      03533  3 00000 0 11377         PAR     =300     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 30    
                  
      03534  0774 00 2 00000         AXT     00,2     
      03535 -0500 00 2 11275  PR2    CAL     BUF7+299,2     
      03536  0737 00 1 00000         PAC     ,1 
      03537 -0500 60 0 00010         CAL*    CNVTBL   
      03540 -0320 00 0 11372         ANA     =O177    
      03541 -0340 00 0 11372         LAS     =O177    
      03542  1 00001 2 03545         TXI     *+3,2,1  
      03543  1 00001 2 03535         TXI     PR2,2,1  
      03544  1 00001 2 03545         TXI     *+1,2,1  
      03545  0767 00 0 00000  PR3    ALS     ** 
      03546 -0602 00 3 07344         ORS     BUF1,3   
      03547  0534 00 4 03545         LXA     PR3,4    
      03550  1 77764 4 03551         TXI     *+1,4,-12
      03551 -3 77754 4 03561         TXL     PR5,4,-20
      03552  1 77777 3 03553         TXI     *+1,3,-1 
      03553  3 77747 3 03557         TXH     PR4,3,-25
      03554  0074 00 4 07333         TSX     WRFLXA,4 
      03555  0 00031 0 07344         PZE     BUF1,,25 
      03556 -0774 00 3 00000         AXC     00,3     
      03557  0600 00 3 07344  PR4    STZ     BUF1,3   
      03560  0774 00 4 00030         AXT     24,4     
      03561  0634 00 4 03545  PR5    SXA     PR3,4    
      03562 -3 77765 1 03535         TXL     PR2,1,-11
      03563  3 77766 1 03535         TXH     PR2,1,-10
      03564  0020 00 0 03512         TRA     PR7-1    
      03565  0535 00 4 03545  PR9    LAC     PR3,4    
      03566 -0500 00 0 11350         CAL     =O57     
      03567  0767 00 4 00000         ALS     00,4     
      03570 -0602 00 3 07344         ORS     BUF1,3   
      03571 -0340 00 0 11350         LAS     =O57     
      03572  1 00014 4 03566         TXI     PR9+1,4,12     
      03573  0020 00 0 03575         TRA     *+2
      03574  1 00014 4 03566         TXI     PR9+1,4,12     
      03575  1 77777 3 03576         TXI     *+1,3,-1 
      03576 -0636 00 3 03600         SCD     *+2,3    
      03577  0074 00 4 07333         TSX     WRFLXA,4 
      03600  0 00000 0 07344         PZE     BUF1,,** 
      03601 -0774 00 4 00000  PR6    AXC     **,4     
      03602  0600 00 0 07236         STZ     RFLG     
      03603  0020 00 4 00002         TRA     2,4
      03604  0636 00 4 03752  SUB    SCA     SUB4,4   
      03605  0535 00 4 02621         LAC     BC2,4    
      03606 -0500 00 4 00000         CAL     00,4     
      03607 -0737 00 4 00000         PDC     ,4 
      03610 -0500 00 4 00000         CAL     00,4     
      03611 -0737 00 4 00000         PDC     ,4 
      03612  0636 00 4 03705         SCA     S5,4     
      03613  0600 00 0 07544  SUBP1  STZ     BUF2     
      03614  0600 00 0 07545         STZ     BUF2+1   
      03615  0535 00 4 07237         LAC     JFLG,4   
      03616 -3 00000 4 03752         TXL     SUB4,4,0 
      03617 -3 00000 4 03645  S3     TXL     S4,4,0   
      03620 -0500 00 4 07742         CAL     BUF5-2,4 
      03621 -0320 00 0 11403         ANA     =O77777  
      03622 -0340 00 0 07545         LAS     BUF2+1   
      03623  0020 00 0 03626         TRA     S6 
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 31    
                  
      03624  0020 00 0 03635         TRA     S7 
      03625  1 00002 4 03617         TXI     S3,4,2   
      03626  0602 00 0 07545  S6     SLW     BUF2+1   
      03627  0443 00 4 07742         DLD     BUF5-2,4 
      03630  0771 00 0 00022         ARS     18 
      03631  0621 00 0 07544         STA     BUF2     
      03632  0636 00 4 07546         SCA     BUF2+2,4 
      03633 -0600 00 0 07547         STQ     BUF2+3   
      03634  1 00002 4 03617         TXI     S3,4,2   
      03635 -0500 00 4 07742  S7     CAL     BUF5-2,4 
      03636  0771 00 0 00022         ARS     18 
      03637 -0340 00 0 07544         LAS     BUF2     
      03640  1 00002 4 03617         TXI     S3,4,2   
      03641  0020 00 0 01320         TRA     TYPE9    
      03642 -0500 00 4 07742         CAL     BUF5-2,4 
      03643 -0320 00 0 11403         ANA     =O77777  
      03644  0020 00 0 03626         TRA     S6 
      03645  0535 00 4 07237  S4     LAC     JFLG,4   
      03646  1 00002 4 03647         TXI     *+1,4,2  
      03647  0636 00 4 07237         SCA     JFLG,4   
      03650  0443 00 4 07744         DLD     BUF5,4   
      03651  0535 00 4 07546         LAC     BUF2+2,4 
      03652 -0603 00 4 07742         DST     BUF5-2,4 
      03653 -0520 00 0 07032         NZT     SFLG     
      03654  0020 00 0 03705         TRA     S5 
      03655  0535 00 4 03705         LAC     S5,4     
      03656 -0500 00 4 00000         CAL     00,4     
      03657  0737 00 4 00000         PAC     ,4 
      03660  0636 00 4 03663         SCA     S1,4     
      03661 -0636 00 4 03663         SCD     S1,4     
      03662  0074 00 4 02527         TSX     SETBC,4  
      03663  0 00000 0 00000  S1     PZE     **,,**   
      03664  0600 00 0 07546         STZ     BUF2+2   
      03665 -0774 00 4 03756         AXC     S9,4     
      03666  0636 00 4 03755         SCA     S8+1,4   
      03667  0074 00 4 03502         TSX     PRINT,4  
      03670  0 00000 0 03754         PZE     S8 
      03671 -0625 00 0 07236         STL     RFLG     
      03672  0074 00 4 07322         TSX     RDFLXA,4 
      03673  0 00001 0 07344         PZE     BUF1,,1  
      03674  0600 00 0 07236         STZ     RFLG     
      03675 -0500 00 0 07344         CAL     BUF1     
      03676 -0340 00 0 11422         LAS     =O6200550060   
      03677  0020 00 0 03701         TRA     *+2
      03700  0020 00 0 03705         TRA     S5 
      03701 -0340 00 0 11423         LAS     =O16200550060  
      03702  0020 00 0 03613         TRA     SUBP1    
      03703  0020 00 0 03705         TRA     S5 
      03704  0020 00 0 03613         TRA     SUBP1    
      03705 -0774 00 4 00000  S5     AXC     **,4     
      03706 -0500 00 4 00000         CAL     00,4     
      03707  0737 00 4 00000         PAC     ,4 
      03710  0636 00 4 03717         SCA     S13,4    
      03711 -0636 00 4 03717         SCD     S13,4    
      03712  0636 00 4 07246         SCA     ADDR1,4  
      03713  0636 00 4 07247         SCA     ADDR2,4  
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 32    
                  
      03714 -0774 00 4 04011         AXC     S18,4    
      03715  0636 00 4 04010         SCA     S17+1,4  
      03716  0074 00 4 02527         TSX     SETBC,4  
      03717  0 00000 0 00000  S13    PZE     **,,**   
      03720  0600 00 0 07546         STZ     BUF2+2   
      03721 -0625 00 0 07033         STL     VFLG     
      03722  0074 00 4 03177         TSX     INSERT,4 
      03723  0 00000 0 04007         PZE     S17
      03724  0600 00 0 07033         STZ     VFLG     
      03725  0074 00 4 03425         TSX     DELETE,4 
      03726  0074 00 4 04153         TSX     FREIT,4  
      03727  0535 00 4 07237         LAC     JFLG,4   
      03730 -3 00000 4 03613  S16    TXL     SUBP1,4,0
      03731 -0500 00 4 07742         CAL     BUF5-2,4 
      03732 -0320 00 0 11403         ANA     =O77777  
      03733 -0340 00 0 07544         LAS     BUF2     
      03734  0020 00 0 03737         TRA     *+3
      03735  1 00002 4 03730         TXI     S16,4,2  
      03736  1 00002 4 03730         TXI     S16,4,2  
      03737 -0500 00 4 07743         CAL     BUF5-1,4 
      03740  0602 00 0 07547         SLW     BUF2+3   
      03741  0636 00 4 03747         SCA     SUBP2,4  
      03742  0074 00 4 04153         TSX     FREIT,4  
      03743  0535 00 4 07237         LAC     JFLG,4   
      03744  1 00002 4 03745         TXI     *+1,4,2  
      03745  0636 00 4 07237         SCA     JFLG,4   
      03746  0443 00 4 07744         DLD     BUF5,4   
      03747 -0774 00 4 00000  SUBP2  AXC     **,4     
      03750 -0603 00 4 07742         DST     BUF5-2,4 
      03751  1 00002 4 03730         TXI     S16,4,2  
      03752 -0774 00 4 00000  SUB4   AXC     **,4     
      03753  0020 00 4 00001         TRA     1,4
      03754  0636 00 4 04005  S8     SCA     S12,4    
      03755  0020 00 0 00000         TRA     ** 
      03756  0500 00 0 07546  S9     CLA     BUF2+2   
      03757  0400 00 0 11317         ADD     =1 
      03760  0601 00 0 07546         STO     BUF2+2   
      03761  0340 00 0 07544         CAS     BUF2     
      03762  0020 00 0 01320         TRA     TYPE9    
      03763  0020 00 0 03765         TRA     *+2
      03764  0020 00 0 04004         TRA     S11
      03765 -0774 00 4 03771         AXC     S10,4    
      03766  0636 00 4 03755         SCA     S8+1,4   
      03767 -0500 00 0 11327         CAL     =O16     
      03770  0020 00 0 04005         TRA     S12
      03771  0500 00 0 07546  S10    CLA     BUF2+2   
      03772  0340 00 0 07545         CAS     BUF2+1   
      03773  0020 00 0 01320         TRA     TYPE9    
      03774  0020 00 0 04000         TRA     *+4
      03775  0400 00 0 11317         ADD     =1 
      03776  0601 00 0 07546         STO     BUF2+2   
      03777  0020 00 0 04004         TRA     S11
      04000 -0774 00 4 04004         AXC     S11,4    
      04001  0636 00 4 03755         SCA     S8+1,4   
      04002 -0500 00 0 11330         CAL     =O17     
      04003  0020 00 0 04005         TRA     S12
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 33    
                  
      04004  0074 00 4 02604  S11    TSX     GETBC,4  
      04005 -0774 00 4 00000  S12    AXC     **,4     
      04006  0020 00 4 00001         TRA     1,4
      04007  0636 00 4 04104  S17    SCA     S21,4    
      04010  0020 00 0 00000         TRA     ** 
      04011  0500 00 0 07546  S18    CLA     BUF2+2   
      04012  0400 00 0 11317         ADD     =1 
      04013  0601 00 0 07546         STO     BUF2+2   
      04014  0340 00 0 07544         CAS     BUF2     
      04015  0020 00 0 01320         TRA     TYPE9    
      04016  0020 00 0 04020         TRA     *+2
      04017  0020 00 0 04103         TRA     S20
      04020  0634 00 0 04053         SXA     S19,0    
      04021 -0774 00 4 04053         AXC     S19,4    
      04022  0636 00 4 04010         SCA     S17+1,4  
      04023  0636 00 0 04032         SCA     S23,0    
      04024  0340 00 0 07545  S22    CAS     BUF2+1   
      04025  0020 00 0 01320         TRA     TYPE9    
      04026  0020 00 0 04040         TRA     S24
      04027  0400 00 0 11317         ADD     =1 
      04030  0601 00 0 07546         STO     BUF2+2   
      04031  0074 00 4 02604         TSX     GETBC,4  
      04032 -0774 00 4 00000  S23    AXC     **,4     
      04033  0602 00 4 07344         SLW     BUF1,4   
      04034  1 77777 4 04035         TXI     *+1,4,-1 
      04035  0636 00 4 04032         SCA     S23,4    
      04036  0500 00 0 07546         CLA     BUF2+2   
      04037  0020 00 0 04024         TRA     S22
      04040  0535 00 4 04032  S24    LAC     S23,4    
      04041 -0500 00 0 11321         CAL     =3 
      04042  0602 00 4 07344         SLW     BUF1,4   
      04043  0636 00 0 04032         SCA     S23,0    
      04044 -0520 00 0 07272  S28    NZT     EXFLG    
      04045  0020 00 0 04053         TRA     S19
      04046  0535 00 4 04032         LAC     S23,4    
      04047 -0500 00 4 07344         CAL     BUF1,4   
      04050 -0340 00 0 11321         LAS     =3 
      04051  0020 00 0 04053         TRA     S19
      04052  0020 00 0 04101         TRA     S20-2    
      04053  0774 00 4 00000  S19    AXT     **,4     
      04054 -0500 00 4 10107         CAL     BUF5+99,4
      04055  1 00001 4 04056         TXI     *+1,4,1  
      04056  0634 00 4 04053         SXA     S19,4    
      04057 -0340 00 0 11373         LAS     =O200    
      04060  0020 00 0 04063         TRA     *+3
      04061  0020 00 0 04106         TRA     S25
      04062  0020 00 0 04104         TRA     S21
      04063 -0340 00 0 11374         LAS     =O201    
      04064  0020 00 0 04066         TRA     *+2
      04065  0020 00 0 04126         TRA     S27
      04066 -0340 00 0 11403         LAS     =O77777  
      04067  0020 00 0 04104         TRA     S21
      04070  0020 00 0 04072         TRA     *+2
      04071  0020 00 0 04131         TRA     S32
      04072 -0520 00 0 07272         NZT     EXFLG    
      04073  0020 00 0 04101         TRA     S20-2    
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 34    
                  
      04074  0535 00 4 04032         LAC     S23,4    
      04075  1 77777 4 04076         TXI     *+1,4,-1 
      04076  0636 00 4 04032         SCA     S23,4    
      04077  0636 00 0 04053         SCA     S19,0    
      04100  0020 00 0 04044         TRA     S28
      04101 -0774 00 4 04103         AXC     S20,4    
      04102  0636 00 4 04010         SCA     S17+1,4  
      04103  0074 00 4 02604  S20    TSX     GETBC,4  
      04104 -0774 00 4 00000  S21    AXC     **,4     
      04105  0020 00 4 00001         TRA     1,4
      04106  0636 00 0 04116  S25    SCA     S26,0    
      04107 -0500 00 0 07545         CAL     BUF2+1   
      04110  0402 00 0 07544         SUB     BUF2     
      04111  0737 00 4 00000  S31    PAC     ,4 
      04112  1 77777 4 04113         TXI     *+1,4,-1 
      04113 -0634 00 4 04122         SXD     S30,4    
      04114 -0774 00 4 04116         AXC     S26,4    
      04115  0636 00 4 04010         SCA     S17+1,4  
      04116 -0774 00 4 00000  S26    AXC     **,4     
      04117 -0500 00 4 07344         CAL     BUF1,4   
      04120  1 77777 4 04121         TXI     *+1,4,-1 
      04121  0636 00 4 04116         SCA     S26,4    
      04122  3 00000 4 04104  S30    TXH     S21,4,** 
      04123 -0774 00 4 04053         AXC     S19,4    
      04124  0636 00 4 04010         SCA     S17+1,4  
      04125  0020 00 0 04053         TRA     S19
      04126  0535 00 4 04032  S27    LAC     S23,4    
      04127 -0500 00 4 07344         CAL     BUF1,4   
      04130  0020 00 0 04104         TRA     S21
      04131  0737 00 4 00000  S32    PAC     ,4 
      04132 -0500 00 4 11076         CAL     SCHARS-130,4   
      04133  0602 00 0 07550         SLW     BUF2+4   
      04134 -0535 00 4 07547         LDC     BUF2+3,4 
      04135 -3 00000 4 04053  S34    TXL     S19,4,0  
      04136 -0500 00 4 00001         CAL     1,4
      04137 -0340 00 0 07550         LAS     BUF2+4   
      04140  0020 00 0 04142         TRA     *+2
      04141  0020 00 0 04145         TRA     S33
      04142 -0500 00 4 00000         CAL     0,4
      04143  0737 00 4 00000         PAC     ,4 
      04144  0020 00 0 04135         TRA     S34
      04145 -0500 00 4 00002  S33    CAL     2,4
      04146  0402 00 0 07544         SUB     BUF2     
      04147  0621 00 0 04116         STA     S26
      04150 -0500 00 4 00003         CAL     3,4
      04151  0402 00 0 07544         SUB     BUF2     
      04152  0020 00 0 04111         TRA     S31
      04153  0636 00 4 04165  FREIT  SCA     FRE1,4   
      04154 -0535 00 4 07547         LDC     BUF2+3,4 
      04155 -3 00000 4 04165         TXL     FRE1,4,0 
      04156 -0500 00 4 00000  FRE0   CAL     0,4
      04157  0100 00 0 04162         TZE     *+3
      04160  0737 00 4 00000         PAC     ,4 
      04161  0020 00 0 04156         TRA     FRE0     
      04162  0756 00 5 00000         PCA     ,5 
      04163  0602 00 4 00000         SLW     0,4
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 35    
                  
      04164 -0535 00 5 07547         LDC     BUF2+3,5 
      04165 -0774 00 4 00000  FRE1   AXC     **,4     
      04166  0020 00 4 00001         TRA     1,4
      04167  0636 00 4 04216  WRITE1 SCA     WRX,4    
      04170  0535 00 4 07261         LAC     GOOD,4   
      04171 -0636 00 4 04176         SCD     *+5,4    
      04172  0074 00 4 07330         TSX     WRWAIT,4 
      04173  3 00000 0 07337         PAR     FILNAM   
      04174  3 00000 0 07340         PAR     FILNAM+1 
      04175  3 00000 0 11316         PAR     =0 
      04176  3 00000 0 07344         PAR     BUF1,,** 
      04177  3 00000 0 11442         PAR     =-0
      04200  3 00000 0 11442         PAR     =-0
      04201  0535 00 4 04216         LAC     WRX,4    
      04202  0020 00 4 00001         TRA     1,4
      04203  0636 00 4 04216  WRITE  SCA     WRX,4    
      04204 -0500 00 4 00001         CAL     1,4
      04205  0737 00 4 00000         PAC     ,4 
      04206 -0636 00 4 04213         SCD     *+5,4    
      04207  0074 00 4 07330         TSX     WRWAIT,4 
      04210  3 00000 0 07337         PAR     FILNAM   
      04211  3 00000 0 07340         PAR     FILNAM+1 
      04212  3 00000 0 11316         PAR     =0 
      04213  3 00000 0 07544         PAR     BUF2,,** 
      04214  3 00000 0 11442         PAR     =-0
      04215  3 00000 0 11442         PAR     =-0
      04216 -0774 00 4 00000  WRX    AXC     **,4     
      04217  0020 00 4 00002         TRA     2,4
      04220 -3 77774 1 04222  WRSXTW TXL     *+2,1,-4 
      04221 -3 77775 1 04304         TXL     WR12,1,-3
      04222 -3 77765 1 04224         TXL     *+2,1,-11
      04223 -3 77766 1 04252         TXL     WR7,1,-10
      04224 -0500 60 0 00010         CAL*    CNVTBL   
      04225  0771 00 0 00000  WR13   ARS     ** 
      04226 -0320 00 0 11375         ANA     =O377    
      04227 -0340 00 0 11372         LAS     =O177    
      04230  0020 00 0 04233         TRA     WR4-1    
      04231  0020 00 0 05661         TRA     WR2
      04232  0020 00 0 04234         TRA     WR4
      04233  0322 00 0 11400         ERA     =O600    
      04234  2 00001 3 04245  WR4    TIX     WR6,3,1  
      04235  1 77777 2 04236         TXI     *+1,2,-1 
      04236  3 77634 2 04244         TXH     WR5,2,-100     
      04237  0737 00 1 00000         PAC     ,1 
      04240  0074 00 4 04203         TSX     WRITE,4  
      04241  0 00000 0 00144         PZE     100
      04242  0756 00 1 00000         PCA     ,1 
      04243 -0774 00 2 00000         AXC     00,2     
      04244  0774 00 3 00000  WR5    AXT     **,3     
      04245 -0765 00 0 00000  WR6    LGR     ** 
      04246 -0500 00 2 07544         CAL     BUF2,2   
      04247 -0763 00 0 00000         LGL     ** 
      04250  0602 00 2 07544         SLW     BUF2,2   
      04251  0020 00 0 05661         TRA     WR2
      04252  0560 00 0 07055  WR7    LDQ     OCT3     
      04253 -0500 00 2 07544         CAL     BUF2,2   
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 36    
                  
      04254  0020 00 0 04256         TRA     *+2
      04255  0522 00 0 04247         XEC     WR6+2    
      04256  2 00001 3 04255         TIX     *-1,3,1  
      04257  0602 00 2 07544         SLW     BUF2,2   
      04260  0756 00 2 00000         PCA     ,2 
      04261 -0501 00 0 11475         ORA     =O777777000000 
      04262  0602 00 0 07544         SLW     BUF2     
      04263 -0320 00 0 11403         ANA     =O77777  
      04264  0400 00 0 11317         ADD     =1 
      04265  0361 00 0 07261         ACL     GOOD     
      04266 -0340 00 0 11363         LAS     =100     
      04267  0020 00 0 04300         TRA     WR8
      04270  0020 00 0 04271         TRA     *+1
      04271  0602 00 0 07261  WR11   SLW     GOOD     
      04272  0737 00 1 00000         PAC     ,1 
      04273 -0500 00 2 07544         CAL     BUF2,2   
      04274  0602 00 1 07343         SLW     BUF1-1,1 
      04275 -3 00000 2 05661         TXL     WR2,2,0  
      04276  1 00001 2 04277         TXI     *+1,2,1  
      04277  1 00001 1 04273         TXI     *-4,1,1  
      04300  0074 00 4 04167  WR8    TSX     WRITE1,4 
      04301  0756 00 2 00000         PCA     ,2 
      04302  0400 00 0 11317         ADD     =1 
      04303  0020 00 0 04271         TRA     WR11     
      04304  0074 00 4 04167  WR12   TSX     WRITE1,4 
      04305  0020 00 0 04323         TRA     WR10     
      04306 -3 77601 1 05661  WRGE   TXL     WR2,1,-127     
      04307 -3 77774 1 04234  WRASCI TXL     WR4,1,-4 
      04310  3 77775 1 04234         TXH     WR4,1,-3 
      04311  0560 00 0 07055         LDQ     OCT3     
      04312 -0500 00 2 07544         CAL     BUF2,2   
      04313  0020 00 0 04315         TRA     *+2
      04314  0522 00 0 04247         XEC     WR6+2    
      04315  2 00001 3 04314         TIX     *-1,3,1  
      04316  0602 00 2 07544         SLW     BUF2,2   
      04317  1 77777 2 04320         TXI     *+1,2,-1 
      04320  0636 00 2 04322         SCA     WR9,2    
      04321  0074 00 4 04203         TSX     WRITE,4  
      04322  0 00000 0 00000  WR9    PZE     ** 
      04323  0074 00 4 02772  WR10   TSX     CLOS,4   
      04324  0020 00 0 00765         TRA     ADDRES   
      04325                   CNVBD  DIVIDE  10,97    
      04330                          DIVIDE  10,98    
      04333                          DIVIDE  10,99    
      04336 -0600 00 0 07510         STQ     BUF1+100 
      04337  0020 00 1 00001         TRA     1,1
      04340  0636 00 4 04363  LENGTH SCA     LEN1,4   
      04341  0774 00 4 00000         AXT     0,4
      04342  0500 00 1 00000  CEQ1   CLA     00,1     
      04343 -0120 00 0 04346         TMI     CEQ2     
      04344 -0737 00 1 00000         PDC     ,1 
      04345  1 00001 4 04342         TXI     CEQ1,4,1 
      04346  0754 00 4 00000  CEQ2   PXA     ,4 
      04347  0131 00 0 00000         XCA  
      04350  0074 00 1 04325         TSX     CNVBD,1  
      04351 -0500 00 0 11366         CAL     =O160    
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 37    
                  
      04352  0602 00 0 07511         SLW     BUF1+101       BLANK 
      04353 -0500 00 0 11360         CAL     =O132    
      04354  0602 00 0 07504         SLW     BUF1+96        CR    
      04355 -0500 00 0 11357         CAL     =O123    
      04356  0602 00 0 07503         SLW     BUF1+95        EOF   
      04357 -0774 00 4 00007         AXC     7,4
      04360  0636 00 4 06315         SCA     CCL3,4   
      04361  0074 00 4 03502         TSX     PRINT,4  
      04362  0 00000 0 06315         PZE     CCL3     
      04363 -0774 00 4 00000  LEN1   AXC     **,4     
      04364  0020 00 4 00001         TRA     1,4
      04365  0636 00 4 04376  BORCR  SCA     BOR1,4   
      04366  0074 00 4 02257         TSX     GETCHA,4 
      04367 -0340 00 0 11340         LAS     =O40     
      04370  0020 00 0 01320         TRA     TYPE9    
      04371  0020 00 0 04376         TRA     BOR1     
      04372 -0340 00 0 11325         LAS     =O12     
      04373  0020 00 0 01320         TRA     TYPE9    
      04374  0020 00 0 04376         TRA     BOR1     
      04375  0020 00 0 01320         TRA     TYPE9    
      04376 -0774 00 4 00000  BOR1   AXC     **,4     
      04377  0020 00 4 00001         TRA     1,4
                                     INSERT  2QED     
      04400 -0500 60 0 00010  COMAND CAL*    CNVTBL   
      04401  0771 00 0 00033         ARS     27 
      04402 -0320 00 0 11337         ANA     =O37     
      04403  0737 00 4 00000         PAC     ,4 
      04404  0020 00 4 04405         TRA     *+1,4    
      04405  0020 00 0 04441         TRA     CUNKN    
      04406  0020 00 0 04442         TRA     CAPEND   
      04407  0020 00 0 04453         TRA     CBUFER   
      04410  0020 00 0 04460         TRA     CCHANG   
      04411  0020 00 0 04467         TRA     CDELET   
      04412  0020 00 0 06470         TRA     CRNCOM   
      04413  0020 00 0 04615         TRA     CUPDAT   
      04414  0020 00 0 04600         TRA     CINSRT   
      04415  0020 00 0 04761         TRA     CMOVE    
      04416  0020 00 0 05220         TRA     CPRINT   
      04417  0020 00 0 05370         TRA     CREAD    
      04420  0020 00 0 05412         TRA     CSUBST   
      04421  0020 00 0 05577         TRA     CVERIF   
      04422  0020 00 0 05601         TRA     CWRITE   
      04423  0020 00 0 06113         TRA     CNLCR    
      04424  0020 00 0 06126         TRA     CBLANK   
      04425  0020 00 0 06130         TRA     CQUIT    
      04426  0020 00 0 06325         TRA     CEQALS   
      04427  0020 00 0 06347         TRA     CDBUFR   
      04430  0020 00 0 05030         TRA     COPTON   
      04431  0020 00 0 04611         TRA     CLIST    
      04432  0020 00 0 06710         TRA     CSORT    
      04433  0020 00 0 04471         TRA     CSTRAP   
      04434  0020 00 0 06703         TRA     CCOMNT   
      04435  0020 00 0 04504         TRA     CCANON   
      04436  0020 00 0 05664         TRA     CAUDIT   
      04437  0020 00 0 06255         TRA     CCOLN    
      04440  0020 00 0 06146         TRA     CGLOB    
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 38    
                  
      04441  0020 00 0 01264  CUNKN  TRA     TYPE2    
      04442 -0520 00 0 07265  CAPEND NZT     AFLG     
      04443  0074 00 4 03406         TSX     SETFL,4  
      04444  0074 00 4 04365         TSX     BORCR,4  
      04445  0535 00 4 07247         LAC     ADDR2,4  
      04446 -0500 00 4 00000         CAL     00,4     
      04447  0621 00 0 07247         STA     ADDR2    
      04450  0074 00 4 03177         TSX     INSERT,4 
      04451  0 00000 0 02257         PZE     GETCHA   
      04452  0020 00 0 00765         TRA     ADDRES   
      04453  0520 00 0 07265  CBUFER ZET     AFLG     
      04454  0020 00 0 01264         TRA     TYPE2    
      04455  0074 00 4 03057         TSX     GETBN,4  
      04456  0074 00 4 03304         TSX     BOPEN,4  
      04457  0020 00 0 00765         TRA     ADDRES   
      04460  0074 00 4 04365  CCHANG TSX     BORCR,4  
      04461  0074 00 4 03425         TSX     DELETE,4 
      04462 -0500 00 0 07024         CAL     DOT
      04463  0602 00 0 07247         SLW     ADDR2    
      04464  0074 00 4 03177         TSX     INSERT,4 
      04465  0 00000 0 02257         PZE     GETCHA   
      04466  0020 00 0 00765         TRA     ADDRES   
      04467  0074 00 4 03425  CDELET TSX     DELETE,4 
      04470  0020 00 0 00765         TRA     ADDRES   
      04471  0520 00 0 07265  CSTRAP ZET     AFLG     
      04472  0020 00 0 01264         TRA     TYPE2    
      04473  0074 00 4 02257         TSX     GETCHA,4 
      04474  0737 00 2 00000         PAC     ,2 
      04475  0074 00 4 03057         TSX     GETBN,4  
      04476 -3 77765 1 04500         TXL     *+2,1,-11
      04477 -3 77766 1 01320         TXL     TYPE9,1,-10    
      04500 -3 77706 2 01320         TXL     TYPE9,2,-58    
      04501  3 77717 2 01320         TXH     TYPE9,2,-49    
      04502  0602 00 2 01243         SLW     TRAP1-49,2     
      04503  0020 00 0 00765         TRA     ADDRES   
      04504  0074 00 4 02257  CCANON TSX     GETCHA,4 
      04505  0074 00 4 04510         TSX     CAN02,4  
      04506  0020 00 0 00765         TRA     ADDRES   
      04507 -0774 00 1 00000  CAN01  AXC     **,1     
      04510  0636 00 1 04546  CAN02  SCA     CCAN9,1  
      04511  0636 00 4 04535         SCA     CCAN8,4  
      04512 -0520 00 0 07265         NZT     AFLG     
      04513  0074 00 4 03401         TSX     SETDD,4  
      04514  0074 00 4 03415         TSX     CKWRAP,4 
      04515  0535 00 4 07246         LAC     ADDR1,4  
      04516  0636 00 4 04522         SCA     CCAN1,4  
      04517  0535 00 4 07247         LAC     ADDR2,4  
      04520 -0636 00 4 04522         SCD     CCAN1,4  
      04521  0074 00 4 02527         TSX     SETBC,4  
      04522  0 00000 0 00000  CCAN1  PZE     **,,**   
      04523  0774 00 2 00000         AXT     00,2     
      04524  0074 00 4 02604         TSX     GETBC,4  
      04525 -0340 00 0 11321         LAS     =O3
      04526  0020 00 0 04540         TRA     CCAN2    
      04527  0020 00 0 04531         TRA     *+2
      04530  0020 00 0 04540         TRA     CCAN2    
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 39    
                  
      04531  0535 00 4 07024         LAC     DOT,4    
      04532 -0500 00 4 00000         CAL     00,4     
      04533 -0737 00 4 00000         PDC     ,4 
      04534  0636 00 4 07024         SCA     DOT,4    
      04535 -0774 00 4 00000  CCAN8  AXC     **,4     
      04536  0020 00 4 00001         TRA     1,4
      04537  0074 00 4 02604         TSX     GETBC,4  
      04540  0602 00 2 11275  CCAN2  SLW     BUF7+299,2     
      04541 -0340 00 0 11325         LAS     =O12     
      04542  1 00001 2 04537         TXI     CCAN2-1,2,1    
      04543  1 00001 2 04545         TXI     *+2,2,1  
      04544  1 00001 2 04537         TXI     CCAN2-1,2,1    
      04545  0634 00 2 02255         SXA     SIZ1,2   
      04546 -0774 00 1 00000  CCAN9  AXC     **,1     
      04547  0756 00 1 00000         PCA     ,1 
      04550  0074 00 4 00002         TSX     ZCMD,4   
      04551  0 00000 0 11275         PZE     BUF7+299 
      04552  0 00000 0 02255         PZE     SIZ1     
      04553  0 00000 0 11377         PZE     =300     
      04554  0534 00 2 02255  CCAN4  LXA     SIZ1,2   
      04555 -0500 00 0 11321         CAL     =O3
      04556  0602 00 2 11275         SLW     BUF7+299,2     
      04557  0636 00 0 04573         SCA     CCAN3,0  
      04560  0535 00 4 02621         LAC     BC2,4    
      04561 -0500 00 4 00000         CAL     00,4     
      04562 -0737 00 4 00000         PDC     ,4 
      04563  0636 00 4 07246         SCA     ADDR1,4  
      04564  0636 00 4 07247         SCA     ADDR2,4  
      04565 -0625 00 0 07033         STL     VFLG     
      04566  0074 00 4 03177         TSX     INSERT,4 
      04567  0 00000 0 04573         PZE     CCAN3    
      04570  0600 00 0 07033         STZ     VFLG     
      04571  0074 00 4 03425         TSX     DELETE,4 
      04572  0020 00 0 04523         TRA     CCAN1+1  
      04573  0774 00 1 00000  CCAN3  AXT     **,1     
      04574 -0500 00 1 11275         CAL     BUF7+299,1     
      04575  1 00001 1 04576         TXI     *+1,1,1  
      04576  0634 00 1 04573         SXA     CCAN3,1  
      04577  0020 00 4 00001         TRA     1,4
      04600 -0520 00 0 07265  CINSRT NZT     AFLG     
      04601  0074 00 4 03401         TSX     SETDD,4  
      04602  0074 00 4 04365         TSX     BORCR,4  
      04603  0074 00 4 03177         TSX     INSERT,4 
      04604  0 00000 0 02257         PZE     GETCHA   
      04605  0535 00 4 07024         LAC     DOT,4    
      04606 -0500 00 4 00000         CAL     00,4     
      04607  0621 00 0 07024         STA     DOT
      04610  0020 00 0 00765         TRA     ADDRES   
      04611  0074 00 4 02670  CLIST  TSX     SETFC,4  
      04612  0074 00 4 03502         TSX     PRINT,4  
      04613  0 00000 0 02737         PZE     GETFC    
      04614  0020 00 0 00765         TRA     ADDRES   
      04615  0520 00 0 07265  CUPDAT ZET     AFLG     
      04616  0020 00 0 01264         TRA     TYPE2    
      04617  0074 00 4 07303         TSX     WHOAMI,4 
      04620  0 00004 0 07544         PZE     BUF2,,4  
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 40    
                  
      04621  0074 00 4 07304         TSX     GETIME,4 
      04622  0602 00 0 07550         SLW     BUF2+4   
      04623 -0600 00 0 07551         STQ     BUF2+5   
      04624  0535 00 4 07242         LAC     BUFER,4  
      04625 -0500 00 4 00003         CAL     03,4     
      04626  0602 00 0 05027         SLW     MO2
      04627  0074 00 4 03057         TSX     GETBN,4  
      04630  0074 00 4 03304         TSX     BOPEN,4  
      04631  0074 00 4 03406         TSX     SETFL,4  
      04632  0535 00 4 07246         LAC     ADDR1,4  
      04633  0500 00 4 00000         CLA     00,4     
      04634 -0120 00 0 04640         TMI     *+4
      04635  0074 00 4 03425         TSX     DELETE,4 
      04636  0535 00 4 07251         LAC     ZER,4    
      04637  0636 00 4 07247         SCA     ADDR2,4  
      04640 -0774 00 2 00000         AXC     00,2     
      04641 -0500 00 0 07551         CAL     BUF2+5   
      04642  0074 00 4 04746         TSX     SPREAD,4 
      04643  0443 00 0 07350         DLD     BUF1+4   
      04644 -0603 00 0 07352         DST     BUF1+6   
      04645  0443 00 0 07346         DLD     BUF1+2   
      04646 -0603 00 0 07347         DST     BUF1+3   
      04647 -0500 00 0 11352         CAL     =O61     
      04650  0602 00 0 07346         SLW     BUF1+2   
      04651  0602 00 0 07351         SLW     BUF1+5   
      04652 -0500 00 0 11346         CAL     =O55     
      04653  0602 00 0 07354         SLW     BUF1+8   
      04654  0602 00 0 07367         SLW     BUF1+19  
      04655  0560 00 0 07550         LDQ     BUF2+4   
      04656                          DIVIDE  6,18     
      04661                          DIVIDE  10,18    
      04664                          DIVIDE  10,16    
      04667                          DIVIDE  6,15     
      04672                          DIVIDE  10,13    
      04675                          DIVIDE  6,12     
      04700                          DIVIDE  10,10    
      04703 -0600 00 0 07355         STQ     BUF1+9   
      04704 -0500 00 0 11335         CAL     =O35     
      04705  0602 00 0 07357         SLW     BUF1+11  
      04706  0602 00 0 07362         SLW     BUF1+14  
      04707 -0500 00 0 11333         CAL     =O33     
      04710  0602 00 0 07365         SLW     BUF1+17  
      04711 -0774 00 2 00024         AXC     20,2     
      04712 -0500 00 0 07544         CAL     BUF2     
      04713  0074 00 4 04746         TSX     SPREAD,4 
      04714 -0500 00 0 07545         CAL     BUF2+1   
      04715  0074 00 4 04746         TSX     SPREAD,4 
      04716 -0500 00 0 07546         CAL     BUF2+2   
      04717  0074 00 4 04746         TSX     SPREAD,4 
      04720 -0500 00 0 07547         CAL     BUF2+3   
      04721  0074 00 4 04746         TSX     SPREAD,4 
      04722  0636 00 0 04731         SCA     UPD1,0   
      04723  0074 00 4 03177         TSX     INSERT,4 
      04724  0 00000 0 04730         PZE     UPD1-1   
      04725 -0500 00 0 05027         CAL     MO2
      04726  0074 00 4 03304         TSX     BOPEN,4  
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 41    
                  
      04727  0020 00 0 00765         TRA     ADDRES   
      04730  0636 00 4 04744         SCA     UPD2,4   
      04731 -0774 00 4 00000  UPD1   AXC     **,4     
      04732 -0500 00 4 07344         CAL     BUF1,4   
      04733  1 77777 4 04734         TXI     *+1,4,-1 
      04734 -3 77717 4 04743         TXL     UPD2-1,4,-49   
      04735  0636 00 4 04731         SCA     UPD1,4   
      04736  0737 00 1 00000         PAC     ,1 
      04737 -0500 60 0 00010         CAL*    CNVTBL   
      04740  0771 00 0 00020         ARS     16 
      04741 -0320 00 0 11372         ANA     =O177    
      04742  0020 00 0 04744         TRA     UPD2     
      04743 -0500 00 0 11321         CAL     =3 
      04744 -0774 00 4 00000  UPD2   AXC     **,4     
      04745  0020 00 4 00001         TRA     1,4
      04746  0636 00 4 04744  SPREAD SCA     UPD2,4   
      04747  0774 00 4 00006         AXT     6,4
      04750 -0130 00 0 00000         XCL  
      04751 -0754 00 0 00000         ZAC  
      04752 -0763 00 0 00006         LGL     6  
      04753  0602 00 2 07344         SLW     BUF1,2   
      04754  1 77777 2 04755         TXI     *+1,2,-1 
      04755  2 00001 4 04751         TIX     *-4,4,1  
      04756 -0500 00 0 11346         CAL     =O55     
      04757  0602 00 2 07344         SLW     BUF1,2   
      04760  1 77777 2 04744         TXI     UPD2,2,-1
      04761 -0520 00 0 07265  CMOVE  NZT     AFLG     
      04762  0074 00 4 03401         TSX     SETDD,4  
      04763  0074 00 4 03415         TSX     CKWRAP,4 
      04764  0535 00 4 07242         LAC     BUFER,4  
      04765 -0500 00 4 00003         CAL     03,4     
      04766  0602 00 0 05027         SLW     MO2
      04767  0535 00 1 07246         LAC     ADDR1,1  
      04770  0636 00 1 05012         SCA     MO1,1    
      04771  0535 00 2 07247         LAC     ADDR2,2  
      04772  0636 00 2 05013         SCA     MO1+1,2  
      04773 -0500 00 1 00000         CAL     00,1     
      04774 -0737 00 4 00000         PDC     ,4 
      04775 -0500 00 2 00000         CAL     00,2     
      04776  0621 00 4 00000         STA     00,4     
      04777  0621 00 0 07024         STA     DOT
      05000  0737 00 4 00000         PAC     ,4 
      05001 -0500 00 1 00000         CAL     00,1     
      05002  0622 00 4 00000         STD     00,4     
      05003  0074 00 4 03057         TSX     GETBN,4  
      05004  0074 00 4 03304         TSX     BOPEN,4  
      05005  0074 00 4 03406         TSX     SETFL,4  
      05006  0535 00 4 07246         LAC     ADDR1,4  
      05007  0500 00 4 00000         CLA     00,4     
      05010 -0120 00 0 05012         TMI     *+2
      05011  0074 00 4 03425         TSX     DELETE,4 
      05012 -0774 00 1 00000  MO1    AXC     **,1     
      05013 -0774 00 2 00000         AXC     **,2     
      05014  0535 00 4 07251         LAC     ZER,4    
      05015 -0500 00 4 00000         CAL     00,4     
      05016  0622 00 1 00000         STD     00,1     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 42    
                  
      05017  0621 00 2 00000         STA     00,2     
      05020  0756 00 1 00000         PCA     ,1 
      05021  0621 00 4 00000         STA     00,4     
      05022 -0756 00 2 00000         PCD     ,2 
      05023  0622 00 4 00000         STD     00,4     
      05024 -0500 00 0 05027         CAL     MO2
      05025  0074 00 4 03304         TSX     BOPEN,4  
      05026  0020 00 0 00765         TRA     ADDRES   
      05027  0 00000 0 00000  MO2    PZE     ** 
      05030  0520 00 0 07265  COPTON ZET     AFLG     
      05031  0020 00 0 01264         TRA     TYPE2    
      05032  0074 00 2 03465  CO1    TSX     COP1,2   
      05033  0520 00 0 07265         ZET     AFLG     
      05034  0020 00 0 05212         TRA     CO2
      05035  0737 00 1 00000         PAC     ,1 
      05036 -0500 60 0 00010         CAL*    CNVTBL   
      05037  0771 00 0 00033         ARS     27 
      05040 -0320 00 0 11337         ANA     =O37     
      05041  0737 00 4 00000         PAC     ,4 
      05042  0020 60 4 05043         TRA*    COLST,4  
      05043  0 01320 0 01320  COLST  PZE     TYPE9,,TYPE9   
      05044  0 01320 0 05162         PZE     CO15,,TYPE9    
      05045  0 01320 0 05077         PZE     CO3,,TYPE9     
      05046  0 01320 0 05102         PZE     CO4,,TYPE9     
      05047  0 03425 0 05164         PZE     CO16,,DELETE   
      05050  0 01320 0 05105         PZE     CO5,,TYPE9     
      05051  0 01320 0 05110         PZE     CO6,,TYPE9     
      05052  0 01320 0 05113         PZE     CO7,,TYPE9     
      05053  0 01320 0 05166         PZE     CO17,,TYPE9    
      05054  0 05222 0 05140         PZE     CO14,,PRINT0   
      05055  0 01320 0 05117         PZE     CO8,,TYPE9     
      05056  0 01320 0 05122         PZE     CO9,,TYPE9     
      05057  0 01320 0 05206         PZE     CO18,,TYPE9    
      05060  0 01320 0 05124         PZE     CO10,,TYPE9    
      05061  0 01320 0 01320         PZE     TYPE9,,TYPE9   
      05062  0 01320 0 01320         PZE     TYPE9,,TYPE9   
      05063  0 01320 0 05210         PZE     CO19,,TYPE9    
      05064  0 06327 0 01320         PZE     TYPE9,,EQALS0  
      05065  0 01320 0 01320         PZE     TYPE9,,TYPE9   
      05066  0 01320 0 05127         PZE     CO11,,TYPE9    
      05067  0 01320 0 01320         PZE     TYPE9,,TYPE9   
      05070  0 01320 0 05133         PZE     CO12,,TYPE9    
      05071  0 01320 0 05136         PZE     CO13,,TYPE9    
      05072  0 01320 0 01320         PZE     TYPE9,,TYPE9   
      05073  0 04507 0 01320         PZE     TYPE9,,CAN01   
      05074  0 01320 0 01320         PZE     TYPE9,,TYPE9   
      05075  0 06257 0 01320         PZE     TYPE9,,COLN0   
      05076  0 01320 0 01320         PZE     TYPE9,,TYPE9   
      05077  0074 00 2 03465  CO3    TSX     COP1,2   
      05100  0602 00 0 07252         SLW     B  
      05101  0020 00 0 05032         TRA     CO1
      05102  0074 00 2 03465  CO4    TSX     COP1,2   
      05103  0602 00 0 07253         SLW     V  
      05104  0020 00 0 05032         TRA     CO1
      05105  0074 00 2 03465  CO5    TSX     COP1,2   
      05106  0602 00 0 07255         SLW     A  
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 43    
                  
      05107  0020 00 0 05032         TRA     CO1
      05110  0074 00 2 03465  CO6    TSX     COP1,2   
      05111  0602 00 0 07254         SLW     E  
      05112  0020 00 0 05032         TRA     CO1
      05113  0560 00 0 07232  CO7    LDQ     ZET1     
      05114 -0620 00 0 01447         SLQ     IO1
      05115 -0620 00 0 01464         SLQ     IO2
      05116  0020 00 0 05032         TRA     CO1
      05117  0074 00 2 03465  CO8    TSX     COP1,2   
      05120  0602 00 0 07260         SLW     R  
      05121  0020 00 0 05032         TRA     CO1
      05122 -0625 00 0 07025  CO9    STL     CAPFLG   
      05123  0020 00 0 05032         TRA     CO1
      05124  0074 00 2 03465  CO10   TSX     COP1,2   
      05125  0602 00 0 07256         SLW     W  
      05126  0020 00 0 05032         TRA     CO1
      05127  0560 00 0 07231  CO11   LDQ     NZT1     
      05130 -0620 00 0 01447         SLQ     IO1
      05131 -0620 00 0 01464         SLQ     IO2
      05132  0020 00 0 05032         TRA     CO1
      05133  0074 00 2 03465  CO12   TSX     COP1,2   
      05134  0602 00 0 07257         SLW     Q  
      05135  0020 00 0 05032         TRA     CO1
      05136  0600 00 0 07025  CO13   STZ     CAPFLG   
      05137  0020 00 0 05032         TRA     CO1
      05140  0074 00 2 03465  CO14   TSX     COP1,2   
      05141 -0501 00 0 11340         ORA     =O40     
      05142 -0340 00 0 11364         LAS     =O154    
      05143  0020 00 0 05152         TRA     CO14.1   
      05144  0020 00 0 05157         TRA     CO14.2   
      05145  0402 00 0 11361         SUB     =O141    
      05146 -0100 00 0 01320         TNZ     TYPE9    
      05147 -0625 00 0 07276         STL     PAFLG    
      05150  0600 00 0 07277         STZ     PLFLG    
      05151  0020 00 0 05032         TRA     CO1
      05152  0402 00 0 11365  CO14.1 SUB     =O156    
      05153 -0100 00 0 01320         TNZ     TYPE9    
      05154  0600 00 0 07276         STZ     PAFLG    
      05155  0600 00 0 07277         STZ     PLFLG    
      05156  0020 00 0 05032         TRA     CO1
      05157  0600 00 0 07276  CO14.2 STZ     PAFLG    
      05160 -0625 00 0 07277         STL     PLFLG    
      05161  0020 00 0 05032         TRA     CO1
      05162  0600 00 0 07271  CO15   STZ     FBDFLG   
      05163  0020 00 0 05032         TRA     CO1
      05164 -0625 00 0 07271  CO16   STL     FBDFLG   
      05165  0020 00 0 05032         TRA     CO1
      05166  0600 00 0 07270  CO17   STZ     FMODE    
      05167  0074 00 2 03465         TSX     COP1,2   
      05170 -0340 00 0 11354         LAS     =O70     
      05171  0020 00 0 05033         TRA     CO1+1    
      05172  0020 00 0 05033         TRA     CO1+1    
      05173 -0340 00 0 11351         LAS     =O60     
      05174  0020 00 0 05177         TRA     *+3
      05175  0020 00 0 05177         TRA     *+2
      05176  0020 00 0 05033         TRA     CO1+1    
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 44    
                  
      05177  0402 00 0 11351         SUB     =O60     
      05200 -0765 00 0 00003         LGR     3  
      05201 -0500 00 0 07270         CAL     FMODE    
      05202 -0763 00 0 00003         LGL     3  
      05203 -0320 00 0 11372         ANA     =O177    
      05204  0602 00 0 07270         SLW     FMODE    
      05205  0020 00 0 05167         TRA     CO17+1   
      05206 -0625 00 0 07267  CO18   STL     TRCFLG   
      05207  0020 00 0 05032         TRA     CO1
      05210  0600 00 0 07267  CO19   STZ     TRCFLG   
      05211  0020 00 0 05032         TRA     CO1
      05212  0074 00 4 00004  CO2    TSX     SETOPS,4 
      05213  0 00000 0 07253         PZE     V  
      05214  0 00000 0 07255         PZE     A  
      05215  0 00000 0 07256         PZE     W  
      05216  0 00000 0 07257         PZE     Q  
      05217  0020 00 0 00765         TRA     ADDRES   
      05220  0074 00 4 05222  CPRINT TSX     PRINT0,4 
      05221  0020 00 0 00765         TRA     ADDRES   
      05222  0636 00 4 05243  PRINT0 SCA     CPR10,4  
      05223 -0520 00 0 07265         NZT     AFLG     
      05224  0074 00 4 03401         TSX     SETDD,4  
      05225  0535 00 4 07246         LAC     ADDR1,4  
      05226  0636 00 4 05240         SCA     CPR1,4   
      05227  0535 00 4 07247         LAC     ADDR2,4  
      05230  0636 00 4 07024         SCA     DOT,4    
      05231 -0636 00 4 05240         SCD     CPR1,4   
      05232  0600 00 0 07237         STZ     JFLG     
      05233  0560 00 0 05252         LDQ     CPR3     
      05234 -0600 00 0 05251         STQ     CPR2     
      05235  0560 00 0 05323         LDQ     CPR6     
      05236 -0600 00 0 05322         STQ     CPR5     
      05237  0074 00 4 02527         TSX     SETBC,4  
      05240  0 00000 0 00000  CPR1   PZE     **,,**   
      05241  0074 00 4 03502         TSX     PRINT,4  
      05242  0 00000 0 05245         PZE     CPR9     
      05243 -0774 00 4 00000  CPR10  AXC     **,4     
      05244  0020 00 4 00001         TRA     1,4
      05245  0520 00 0 07277  CPR9   ZET     PLFLG    
      05246  0020 00 0 05322         TRA     CPR5     
      05247 -0520 00 0 07276         NZT     PAFLG    
      05250  0020 00 0 02604         TRA     GETBC    
      05251  0020 00 0 00000  CPR2   TRA     ** 
      05252  0020 00 0 05253  CPR3   TRA     *+1
      05253  0520 00 0 07034         ZET     EFLG     
      05254  0020 00 0 05307         TRA     CPR4     
      05255  0535 00 1 02621         LAC     BC2,1    
      05256  0520 00 1 00003         ZET     03,1     
      05257  0020 00 0 05263         TRA     CPR3.1   
      05260  0600 00 0 07237         STZ     JFLG     
      05261 -0500 00 0 11344         CAL     =O52     
      05262  0020 00 0 05274         TRA     CPR3.3   
      05263 -0520 00 0 07237  CPR3.1 NZT     JFLG     
      05264  0020 00 0 05270         TRA     CPR3.2   
      05265 -0500 00 0 07237         CAL     JFLG     
      05266  0402 00 1 00003         SUB     03,1     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 45    
                  
      05267 -0100 00 0 05277         TNZ     CPR3.4   
      05270 -0500 00 1 00003  CPR3.2 CAL     03,1     
      05271  0400 00 0 11317         ADD     =1 
      05272  0602 00 0 07237         SLW     JFLG     
      05273 -0500 00 0 11340         CAL     =O40     
      05274  0560 00 0 05307  CPR3.3 LDQ     CPR4     
      05275 -0600 00 0 05251         STQ     CPR2     
      05276  0020 00 4 00001         TRA     1,4
      05277  0560 00 0 05303  CPR3.4 LDQ     CPR3.5   
      05300 -0600 00 0 05251         STQ     CPR2     
      05301 -0500 00 0 11344         CAL     =O52     
      05302  0020 00 4 00001         TRA     1,4
      05303  0020 00 0 05304  CPR3.5 TRA     *+1
      05304  0600 00 0 07237         STZ     JFLG     
      05305 -0500 00 0 11325         CAL     =O12     
      05306  0020 00 0 05274         TRA     CPR3.3   
      05307  0020 00 0 05310  CPR4   TRA     *+1
      05310  0636 00 4 05320         SCA     CPR4.1,4 
      05311  0074 00 4 02604         TSX     GETBC,4  
      05312 -0340 00 0 11325         LAS     =O12     
      05313  0020 00 0 05320         TRA     CPR4.1   
      05314  0020 00 0 05316         TRA     *+2
      05315  0020 00 0 05320         TRA     CPR4.1   
      05316  0560 00 0 05252         LDQ     CPR3     
      05317 -0600 00 0 05251         STQ     CPR2     
      05320 -0774 00 4 00000  CPR4.1 AXC     **,4     
      05321  0020 00 4 00001         TRA     1,4
      05322  0020 00 0 00000  CPR5   TRA     ** 
      05323  0020 00 0 05324  CPR6   TRA     *+1
      05324  0520 00 0 07034         ZET     EFLG     
      05325  0020 00 0 05355         TRA     CPR8     
      05326  0535 00 1 02621         LAC     BC2,1    
      05327  0500 00 1 00003         CLA     03,1     
      05330  0100 00 0 05351         TZE     CPR7.2   
      05331  0120 00 0 05333         TPL     *+2
      05332 -0754 00 0 00000         ZAC  
      05333 -0130 00 0 00000         XCL  
      05334  0074 00 1 04325         TSX     CNVBD,1  
      05335  0560 00 0 05342         LDQ     CPR7     
      05336 -0600 00 0 05322         STQ     CPR5     
      05337  0636 00 0 05343         SCA     CPR7+1,0 
      05340 -0500 00 0 11343         CAL     =O47     
      05341  0020 00 4 00001         TRA     1,4
      05342  0020 00 0 05343  CPR7   TRA     *+1
      05343 -0774 00 1 00000         AXC     **,1     
      05344 -0500 00 1 07510         CAL     BUF1+100,1     
      05345  0361 00 0 11351         ACL     =O60     
      05346  1 00001 1 05347         TXI     *+1,1,1  
      05347  0636 00 1 05343         SCA     CPR7+1,1 
      05350 -3 00004 1 05354         TXL     CPR7.1,1,4     
      05351 -0500 00 0 11324  CPR7.2 CAL     =O11     
      05352  0560 00 0 05355         LDQ     CPR8     
      05353 -0600 00 0 05322         STQ     CPR5     
      05354  0020 00 4 00001  CPR7.1 TRA     1,4
      05355  0020 00 0 05356  CPR8   TRA     *+1
      05356  0636 00 4 05366         SCA     CPR8.1,4 
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 46    
                  
      05357  0074 00 4 02604         TSX     GETBC,4  
      05360 -0340 00 0 11325         LAS     =O12     
      05361  0020 00 0 05366         TRA     CPR8.1   
      05362  0020 00 0 05364         TRA     *+2
      05363  0020 00 0 05366         TRA     CPR8.1   
      05364  0560 00 0 05323         LDQ     CPR6     
      05365 -0600 00 0 05322         STQ     CPR5     
      05366 -0774 00 4 00000  CPR8.1 AXC     **,4     
      05367  0020 00 4 00001         TRA     1,4
      05370 -0520 00 0 07265  CREAD  NZT     AFLG     
      05371  0074 00 4 03406         TSX     SETFL,4  
      05372  0535 00 4 07247         LAC     ADDR2,4  
      05373 -0500 00 4 00000         CAL     00,4     
      05374  0621 00 0 07247         STA     ADDR2    
      05375  0074 00 4 02670         TSX     SETFC,4  
      05376  0074 00 4 03177  CRD2   TSX     INSERT,4 
      05377  0 00000 0 02737         PZE     GETFC    
      05400  0535 00 2 07251         LAC     ZER,2    
      05401 -0774 00 4 00001         AXC     1,4
      05402 -0500 00 2 00000         CAL     00,2     
      05403  0737 00 2 00000         PAC     ,2 
      05404  0756 00 4 00000  CRD1   PCA     ,4 
      05405  0602 00 2 00003         SLW     03,2     
      05406  0500 00 2 00000         CLA     00,2     
      05407 -0120 00 0 00765         TMI     ADDRES   
      05410  0737 00 2 00000         PAC     ,2 
      05411  1 77777 4 05404         TXI     CRD1,4,-1
      05412  0600 00 0 07032  CSUBST STZ     SFLG     
      05413 -0520 00 0 07265         NZT     AFLG     
      05414  0074 00 4 03401         TSX     SETDD,4  
      05415  0074 00 4 03415         TSX     CKWRAP,4 
      05416  0535 00 4 07247         LAC     ADDR2,4  
      05417 -0500 00 4 00000         CAL     00,4     
      05420  0621 00 0 05570         STA     SUB2     
      05421  0074 00 4 02257         TSX     GETCHA,4 
      05422 -0340 00 0 11325         LAS     =O12     
      05423  0020 00 0 05425         TRA     *+2
      05424  0020 00 0 01320         TRA     TYPE9    
      05425  0602 00 0 07273         SLW     SLCHR    
      05426 -0625 00 0 07263         STL     SUBFLG   
      05427  0074 00 4 01426         TSX     COMPIL,4 
      05430  0020 00 0 05531         TRA     SUBF     
      05431  0 00000 0 05502         PZE     SUBC     
      05432  0600 00 0 07272         STZ     EXFLG    
      05433 -0774 00 2 00000         AXC     00,2     
      05434  0074 00 4 02257  SUB3   TSX     GETCHA,4 
      05435  0520 00 0 07033         ZET     VFLG     
      05436  0020 00 0 05466         TRA     SUB31    
      05437  0535 00 4 07262         LAC     NSCHA,4  
      05440 -3 00000 4 05446         TXL     SUB34,4,0
      05441 -0340 00 4 11277         LAS     SCHARS-1,4     
      05442  1 00001 4 05440         TXI     *-2,4,1  
      05443  1 77577 4 05445         TXI     *+2,4,-129     
      05444  1 00001 4 05440         TXI     *-4,4,1  
      05445  0756 00 4 00000         PCA     ,4 
      05446 -0340 00 0 11341  SUB34  LAS     =O41     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 47    
                  
      05447  0020 00 0 05460         TRA     SUB32    
      05450  0020 00 0 05452         TRA     *+2
      05451  0020 00 0 05454         TRA     *+3
      05452 -0500 00 0 11374         CAL     =O201    
      05453 -0625 00 0 07272         STL     EXFLG    
      05454 -0340 00 0 11325         LAS     =O12     
      05455  0020 00 0 05463         TRA     SUB33    
      05456  0020 00 0 01320         TRA     TYPE9    
      05457  0020 00 0 05463         TRA     SUB33    
      05460 -0340 00 0 11342  SUB32  LAS     =O46     
      05461  0020 00 0 05463         TRA     SUB33    
      05462  0500 00 0 11373         CLA     =O200    
      05463 -0340 00 0 07273  SUB33  LAS     SLCHR    
      05464  0020 00 0 05466         TRA     *+2
      05465  0020 00 0 05470         TRA     *+3
      05466  0602 00 2 10107  SUB31  SLW     BUF5+99,2
      05467  1 00001 2 05434         TXI     SUB3,2,1 
      05470 -0500 00 0 11403         CAL     =O77777  
      05471  0602 00 2 10107         SLW     BUF5+99,2
      05472 -0500 00 0 07247         CAL     ADDR2    
      05473  0767 00 0 00022         ALS     18 
      05474 -0501 00 0 07246         ORA     ADDR1    
      05475  0602 00 0 05477         SLW     *+2
      05476  0074 00 4 02527         TSX     SETBC,4  
      05477  0 00000 0 00000         PZE     **,,**   
      05500 -0625 00 0 07234         STL     IFLG     
      05501  0600 00 0 07237         STZ     JFLG     
      05502  0600 00 0 07233  SUBC   STZ     FFLG     
      05503 -0520 00 0 07234         NZT     IFLG     
      05504  0020 00 0 05512         TRA     SUB1     
      05505  0600 00 0 07234         STZ     IFLG     
      05506 -0625 00 0 07233         STL     FFLG     
      05507  0600 00 0 07626         STZ     BUF2+50  
      05510  0520 00 0 07237         ZET     JFLG     
      05511  0074 00 4 03604         TSX     SUB,4    
      05512  0074 00 4 02604  SUB1   TSX     GETBC,4  
      05513  0737 00 1 00000         PAC     ,1 
      05514  0535 00 4 07626         LAC     BUF2+50,4
      05515  1 77777 4 05516         TXI     *+1,4,-1 
      05516  0636 00 4 07626         SCA     BUF2+50,4
      05517 -0636 00 0 07626         SCD     BUF2+50,0
      05520 -3 77774 1 05522         TXL     *+2,1,-4 
      05521 -3 77775 1 05570         TXL     SUB2,1,-3
      05522 -0774 00 2 07625         AXC     BUF2+50-1,2    
      05523 -3 77765 1 00014         TXL     BUF3,1,-11     
      05524  3 77766 1 00014         TXH     BUF3,1,-10     
      05525 -0625 00 0 07234         STL     IFLG     
      05526  0520 00 0 07235         ZET     INTFLG   
      05527  0020 00 0 01274         TRA     TYPE4    
      05530  0020 00 0 00014         TRA     BUF3     
      05531  0535 00 4 07237  SUBF   LAC     JFLG,4   
      05532 -3 00000 4 05555         TXL     SUB5,4,0 
      05533 -0500 00 4 07742         CAL     BUF5-2,4 
      05534 -0320 00 0 11403         ANA     =O77777  
      05535  0602 00 0 07264         SLW     COPY     
      05536 -0500 00 0 07626         CAL     BUF2+50  
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 48    
                  
      05537 -0320 00 0 11403         ANA     =O77777  
      05540 -0340 00 0 07264         LAS     COPY     
      05541  1 00002 4 05532         TXI     SUBF+1,4,2     
      05542  0020 00 0 05544         TRA     *+2
      05543  1 00002 4 05532         TXI     SUBF+1,4,2     
      05544 -0500 00 2 00001         CAL     1,2
      05545 -0320 00 0 11403         ANA     =O77777  
      05546  0602 00 0 07264         SLW     COPY     
      05547 -0500 00 4 07742         CAL     BUF5-2,4 
      05550  0771 00 0 00022         ARS     18 
      05551 -0340 00 0 07264         LAS     COPY     
      05552  0020 00 0 05561         TRA     SUB6     
      05553  0020 00 0 02121         TRA     FAIL     
      05554  0020 00 0 02121         TRA     FAIL     
      05555  0535 00 4 07237  SUB5   LAC     JFLG,4   
      05556  1 77776 4 05557         TXI     *+1,4,-2 
      05557 -3 77634 4 01256         TXL     TYPE0,4,-100   
      05560  0636 00 4 07237         SCA     JFLG,4   
      05561 -0500 00 2 00001  SUB6   CAL     1,2
      05562  0602 00 4 07743         SLW     BUF5-1,4 
      05563  0767 00 0 00022         ALS     18 
      05564  0602 00 4 07742         SLW     BUF5-2,4 
      05565 -0500 00 0 07626         CAL     BUF2+50  
      05566  0621 00 4 07742         STA     BUF5-2,4 
      05567  0020 00 2 00002         TRA     2,2
      05570 -0774 00 4 00000  SUB2   AXC     **,4     
      05571 -0500 00 4 00000         CAL     00,4     
      05572 -0737 00 4 00000         PDC     ,4 
      05573  0636 00 4 07024         SCA     DOT,4    
      05574  0520 00 0 07032         ZET     SFLG     
      05575  0074 00 4 01420         TSX     BLINE,4  
      05576  0020 00 0 00765         TRA     ADDRES   
      05577 -0625 00 0 07032  CVERIF STL     SFLG     
      05600  0020 00 0 05413         TRA     CSUBST+1 
      05601 -0520 00 0 07265  CWRITE NZT     AFLG     
      05602  0074 00 4 03406         TSX     SETFL,4  
      05603  0074 00 4 03415         TSX     CKWRAP,4 
      05604  0074 00 4 03106         TSX     GETFN,4  
      05605 -0500 00 2 07065         CAL     SHFT,2   
      05606  0621 00 0 04244         STA     WR5
      05607  0771 00 0 00022         ARS     18 
      05610  0621 00 0 04245         STA     WR6
      05611  0621 00 0 04247         STA     WR6+2    
      05612 -0500 00 2 07075         CAL     RETRN+4,2
      05613  0621 00 0 05663         STA     WR3
      05614  0771 00 0 00022         ARS     18 
      05615  0621 00 0 04225         STA     WR13     
      05616 -0500 00 2 07061         CAL     OCT3+4,2 
      05617  0602 00 0 07055         SLW     OCT3     
      05620  0535 00 4 07246         LAC     ADDR1,4  
      05621  0636 00 4 05637         SCA     WR1,4    
      05622  0535 00 4 07247         LAC     ADDR2,4  
      05623 -0636 00 4 05637         SCD     WR1,4    
      05624  0074 00 4 07325         TSX     OPEN,4   
      05625  3 00000 0 11473         PAR     =HW
      05626  3 00000 0 07337         PAR     FILNAM   
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 49    
                  
      05627  3 00000 0 07340         PAR     FILNAM+1 
      05630  3 00000 0 07270         PAR     FMODE    
      05631  3 00000 0 11442         PAR     =-0
      05632  3 00000 0 01314         PAR     TYPE8    
      05633  3 00000 0 07264         PAR     COPY     
      05634 -0625 00 0 07300         STL     FILFLG   
      05635  0600 00 0 07261         STZ     GOOD     
      05636  0074 00 4 02527         TSX     SETBC,4  
      05637  0 00000 0 00000  WR1    PZE     **,,**   
      05640  0074 00 4 07326         TSX     BUFFER,4 
      05641  3 00000 0 07337         PAR     FILNAM   
      05642  3 00000 0 07340         PAR     FILNAM+1 
      05643  3 00660 0 00014         PAR     BUF3,,432
      05644  0600 00 0 07240         STZ     CPLFLG   
      05645  0074 00 4 07331         TSX     TRFILE,4 
      05646  3 00000 0 07337         PAR     FILNAM   
      05647  3 00000 0 07340         PAR     FILNAM+1 
      05650  3 00000 0 11317         PAR     =1 
      05651  3 00000 0 05653         PAR     *+2
      05652  3 00000 0 07264         PAR     COPY     
      05653  3 77776 2 05656         TXH     *+3,2,-2 
      05654 -0774 00 2 00001         AXC     1,2
      05655  0020 00 0 05657         TRA     *+2
      05656 -0774 00 2 00000         AXC     00,2     
      05657  0522 00 0 04244         XEC     WR5
      05660  1 00001 3 05661         TXI     *+1,3,1  
      05661  0074 00 4 02604  WR2    TSX     GETBC,4  
      05662  0737 00 1 00000         PAC     ,1 
      05663  0020 00 0 00000  WR3    TRA     ** 
      05664  0520 00 0 07265  CAUDIT ZET     AFLG     
      05665  0020 00 0 01264         TRA     TYPE2    
      05666  0074 00 4 03057         TSX     GETBN,4  
      05667  0602 00 0 05027         SLW     MO2
      05670  0535 00 4 07251         LAC     ZER,4    
      05671 -0500 00 4 00000         CAL     00,4     
      05672  0737 00 4 00000         PAC     ,4 
      05673 -0130 00 0 00000         XCL  
      05674  0500 00 4 00000         CLA     00,4     
      05675 -0120 00 0 01300         TMI     TYPE5    
      05676 -0600 00 0 05700         STQ     *+2
      05677  0074 00 4 02527         TSX     SETBC,4  
      05700  0 00000 0 00000         PZE     **,,**   
      05701 -0500 00 0 05027         CAL     MO2
      05702  0074 00 4 03304         TSX     BOPEN,4  
      05703  0535 00 4 07251         LAC     ZER,4    
      05704 -0500 00 4 00000         CAL     00,4     
      05705  0737 00 4 00000         PAC     ,4 
      05706  0500 00 4 00000         CLA     00,4     
      05707 -0120 00 0 05712         TMI     *+3
      05710  0074 00 4 03406         TSX     SETFL,4  
      05711  0074 00 4 03425         TSX     DELETE,4 
      05712  0074 00 4 03406         TSX     SETFL,4  
      05713  0600 00 0 07237         STZ     JFLG     
      05714  0560 00 0 05724         LDQ     CAU2     
      05715 -0600 00 0 05723         STQ     CAU1     
      05716 -0625 00 0 07033         STL     VFLG     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 50    
                  
      05717  0074 00 4 03177         TSX     INSERT,4 
      05720  0 00000 0 05723         PZE     CAU1     
      05721  0600 00 0 07033         STZ     VFLG     
      05722  0020 00 0 00765         TRA     ADDRES   
      05723  0020 00 0 00000  CAU1   TRA     ** 
      05724  0020 00 0 05725  CAU2   TRA     *+1
      05725  0535 00 1 02621         LAC     BC2,1    
      05726  0520 00 1 00003         ZET     03,1     
      05727  0020 00 0 05741         TRA     CAU2.1   
      05730  0560 00 0 06020         LDQ     CAU3     
      05731 -0600 00 0 05723         STQ     CAU1     
      05732  0560 00 0 07237         LDQ     JFLG     
      05733  0074 00 1 04325         TSX     CNVBD,1  
      05734 -0500 00 0 11352         CAL     =O61     
      05735  0602 00 0 07504         SLW     BUF1+96  
      05736  0636 00 0 06021         SCA     CAU3+1,0 
      05737 -0500 00 0 11343         CAL     =O47     
      05740  0020 00 4 00001         TRA     1,4
      05741 -0500 00 0 07237  CAU2.1 CAL     JFLG     
      05742  0400 00 0 11317         ADD     =1 
      05743 -0340 00 1 00003         LAS     03,1     
      05744  0020 00 0 01300         TRA     TYPE5    
      05745  0020 00 0 06004         TRA     CAU2.2   
      05746  0560 00 0 06034         LDQ     CAU4     
      05747 -0600 00 0 05723         STQ     CAU1     
      05750 -0500 00 0 07237         CAL     JFLG     
      05751  0400 00 0 11317         ADD     =1 
      05752  0131 00 0 00000         XCA  
      05753  0074 00 1 04325         TSX     CNVBD,1  
      05754 -0500 00 0 11371         CAL     =O174    
      05755  0602 00 0 07504         SLW     BUF1+96  
      05756  0535 00 1 02621         LAC     BC2,1    
      05757 -0500 00 1 00003         CAL     03,1     
      05760  0402 00 0 11317         SUB     =1 
      05761  0602 00 0 07237         SLW     JFLG     
      05762  0131 00 0 00000         XCA  
      05763                          DIVIDE  10,91    
      05766                          DIVIDE  10,92    
      05771                          DIVIDE  10,93    
      05774 -0600 00 0 07502         STQ     BUF1+94  
      05775 -0500 00 0 11370         CAL     =O167    
      05776  0602 00 0 07503         SLW     BUF1+95  
      05777 -0500 00 0 11353         CAL     =O64     
      06000  0602 00 0 07476         SLW     BUF1+90  
      06001 -0500 00 0 11343         CAL     =O47     
      06002  0636 00 0 06035         SCA     CAU4+1,0 
      06003  0020 00 4 00001         TRA     1,4
      06004  0520 00 0 07034  CAU2.2 ZET     EFLG     
      06005  0020 00 0 02604         TRA     GETBC    
      06006 -0500 00 1 00003         CAL     03,1     
      06007  0602 00 0 07237         SLW     JFLG     
      06010  0636 00 4 06016         SCA     *+6,4    
      06011  0074 00 4 02604         TSX     GETBC,4  
      06012 -0340 00 0 11325         LAS     =O12     
      06013  0020 00 0 06011         TRA     *-2
      06014  0020 00 0 06016         TRA     *+2
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 51    
                  
      06015  0020 00 0 06011         TRA     *-4
      06016 -0774 00 4 00000         AXC     **,4     
      06017  0020 00 0 05724         TRA     CAU2     
      06020  0020 00 0 06021  CAU3   TRA     *+1
      06021 -0774 00 1 00000         AXC     **,1     
      06022 -0500 00 1 07510         CAL     BUF1+100,1     
      06023  0361 00 0 11351         ACL     =O60     
      06024  1 00001 1 06025         TXI     *+1,1,1  
      06025  0636 00 1 06021         SCA     CAU3+1,1 
      06026 -3 00005 1 06033         TXL     CAU3.1,1,5     
      06027  0560 00 0 06050         LDQ     CAU5     
      06030 -0600 00 0 05723         STQ     CAU1     
      06031  0600 00 0 07234         STZ     IFLG     
      06032 -0500 00 0 11325         CAL     =O12     
      06033  0020 00 4 00001  CAU3.1 TRA     1,4
      06034  0020 00 0 06035  CAU4   TRA     *+1
      06035 -0774 00 1 00000         AXC     **,1     
      06036 -0500 00 1 07510         CAL     BUF1+100,1     
      06037  0361 00 0 11351         ACL     =O60     
      06040 -0320 00 0 11372         ANA     =O177    
      06041  1 00001 1 06042         TXI     *+1,1,1  
      06042  0636 00 1 06035         SCA     CAU4+1,1 
      06043 -3 00013 1 06047         TXL     CAU4.1,1,11    
      06044  0560 00 0 05724         LDQ     CAU2     
      06045 -0600 00 0 05723         STQ     CAU1     
      06046 -0500 00 0 11325         CAL     =O12     
      06047  0020 00 4 00001  CAU4.1 TRA     1,4
      06050  0020 00 0 06051  CAU5   TRA     *+1
      06051  0636 00 4 06111         SCA     CAU5.3,4 
      06052  0520 00 0 07234         ZET     IFLG     
      06053  0020 00 0 06072         TRA     CAU5.1   
      06054  0074 00 4 02604         TSX     GETBC,4  
      06055 -0340 00 0 11331         LAS     =O30     
      06056  0020 00 0 06104         TRA     CAU5.2   
      06057  0020 00 0 06104         TRA     CAU5.2   
      06060 -0340 00 0 11325         LAS     =O12     
      06061  0020 00 0 06111         TRA     CAU5.3   
      06062  0020 00 0 06064         TRA     *+2
      06063  0020 00 0 06111         TRA     CAU5.3   
      06064  0535 00 1 02621         LAC     BC2,1    
      06065 -0520 00 1 00003         NZT     03,1     
      06066  0020 00 0 06111         TRA     CAU5.3   
      06067 -0500 00 0 11325         CAL     =O12     
      06070  0602 00 0 07234         SLW     IFLG     
      06071  0020 00 0 06111         TRA     CAU5.3   
      06072 -0500 00 0 07234  CAU5.1 CAL     IFLG     
      06073  0600 00 0 07234         STZ     IFLG     
      06074 -0340 00 0 11325         LAS     =O12     
      06075  0020 00 0 06111         TRA     CAU5.3   
      06076  0020 00 0 06100         TRA     *+2
      06077  0020 00 0 06111         TRA     CAU5.3   
      06100  0560 00 0 05724         LDQ     CAU2     
      06101 -0600 00 0 05723         STQ     CAU1     
      06102 -0500 00 0 11334         CAL     =O34     
      06103  0020 00 0 06111         TRA     CAU5.3   
      06104 -0340 00 0 11340  CAU5.2 LAS     =O40     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 52    
                  
      06105  0020 00 0 06111         TRA     CAU5.3   
      06106  0020 00 0 06111         TRA     CAU5.3   
      06107  0602 00 0 07234         SLW     IFLG     
      06110 -0500 00 0 11332         CAL     =O31     
      06111 -0774 00 4 00000  CAU5.3 AXC     **,4     
      06112  0020 00 4 00001         TRA     1,4
      06113  0520 00 0 07274  CNLCR  ZET     CFLG     
      06114  0020 00 0 06121         TRA     CNC1     
      06115  0535 00 4 07024         LAC     DOT,4    
      06116 -0500 00 4 00000         CAL     00,4     
      06117  0621 00 0 07024         STA     DOT
      06120  0020 00 0 05220         TRA     CPRINT   
      06121 -0520 00 0 07265  CNC1   NZT     AFLG     
      06122  0020 00 0 00765         TRA     ADDRES   
      06123 -0500 00 0 07247         CAL     ADDR2    
      06124  0602 00 0 07246         SLW     ADDR1    
      06125  0020 00 0 05220         TRA     CPRINT   
      06126  0074 00 4 02257  CBLANK TSX     GETCHA,4 
      06127  0020 00 0 04400         TRA     COMAND   
      06130  0520 00 0 07265  CQUIT  ZET     AFLG     
      06131  0020 00 0 01264         TRA     TYPE2    
      06132  0074 00 4 02257         TSX     GETCHA,4 
      06133 -0340 00 0 11325         LAS     =O12     
      06134  0020 00 0 01320         TRA     TYPE9    
      06135  0020 00 0 06137         TRA     *+2
      06136  0020 00 0 01264         TRA     TYPE2    
      06137  0074 00 4 01420         TSX     BLINE,4  
      06140  0520 00 0 07301         ZET     PMTFLG   
      06141  0074 00 4 07306         TSX     FORBID,4 
      06142  0074 00 4 07334         TSX     SETBCD,4 
      06143  0074 00 4 07314         TSX     CHNCOM,4 
      06144  0 00000 0 00001         PZE     1  
      06145  0020 00 0 01320         TRA     TYPE9    
      06146 -0520 00 0 07265  CGLOB  NZT     AFLG     
      06147  0074 00 4 03406         TSX     SETFL,4  
      06150  0074 00 4 02257         TSX     GETCHA,4 
      06151 -3 77765 1 06153         TXL     *+2,1,-11
      06152 -3 77766 1 01320         TXL     TYPE9,1,-10    
      06153 -0500 60 0 00010         CAL*    CNVTBL   
      06154  0771 00 0 00033         ARS     27 
      06155 -0320 00 0 11337         ANA     =O37     
      06156  0737 00 1 00000         PAC     ,1 
      06157  0402 00 0 11331         SUB     =24
      06160 -0100 00 0 06167         TNZ     CG6
      06161  0636 00 1 06164         SCA     *+3,1    
      06162  0074 00 4 02257         TSX     GETCHA,4 
      06163  0636 00 1 04507         SCA     CAN01,1  
      06164 -0774 00 1 00000         AXC     **,1     
      06165  0402 00 0 11325         SUB     =O12     
      06166  0100 00 0 01320         TZE     TYPE9    
      06167 -0500 00 1 05043  CG6    CAL     COLST,1  
      06170 -0737 00 4 00000         PDC     ,4 
      06171  0636 00 4 06244         SCA     CG3,4    
      06172  0074 00 4 02257         TSX     GETCHA,4 
      06173 -3 77765 1 06175         TXL     *+2,1,-11
      06174 -3 77766 1 01320         TXL     TYPE9,1,-10    
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 53    
                  
      06175  0602 00 0 07273         SLW     SLCHR    
      06176  0600 00 0 07263         STZ     SUBFLG   
      06177  0074 00 4 01426         TSX     COMPIL,4 
      06200  0020 00 0 06234         TRA     CGF
      06201  0 00000 0 06214         PZE     CGC
      06202  0535 00 4 07246         LAC     ADDR1,4  
      06203  0636 00 4 06211         SCA     CG1,4    
      06204  0535 00 4 07247         LAC     ADDR2,4  
      06205 -0636 00 4 06211       U SCD     CG1,4    
      06206 -0500 00 4 00000         CAL     00,4     
      06207  0621 00 0 06250         STA     CG4
      06210  0074 00 4 02527         TSX     SETBC,4  
      06211  0 00000 0 00000  CG1    PZE     **,,**   
      06212 -0625 00 0 07234         STL     IFLG     
      06213  0600 00 0 07237         STZ     JFLG     
      06214  0600 00 0 07233  CGC    STZ     FFLG     
      06215 -0520 00 0 07234         NZT     IFLG     
      06216  0020 00 0 06223         TRA     CG5
      06217  0600 00 0 07234         STZ     IFLG     
      06220 -0625 00 0 07233         STL     FFLG     
      06221  0520 00 0 07237         ZET     JFLG     
      06222  0020 00 0 06236         TRA     CG2
      06223  0074 00 4 02604  CG5    TSX     GETBC,4  
      06224  0737 00 1 00000         PAC     ,1 
      06225 -3 77774 1 06227         TXL     *+2,1,-4 
      06226 -3 77775 1 06250         TXL     CG4,1,-3 
      06227 -0774 00 2 07625         AXC     BUF2+50-1,2    
      06230 -3 77765 1 00014         TXL     BUF3,1,-11     
      06231  3 77766 1 00014         TXH     BUF3,1,-10     
      06232 -0625 00 0 07234         STL     IFLG     
      06233  0020 00 0 00014         TRA     BUF3     
      06234 -0625 00 0 07237  CGF    STL     JFLG     
      06235  0020 00 2 00002         TRA     2,2
      06236  0535 00 2 02621  CG2    LAC     BC2,2    
      06237 -0500 00 2 00000         CAL     00,2     
      06240 -0737 00 2 00000         PDC     ,2 
      06241  0636 00 2 07246         SCA     ADDR1,2  
      06242  0636 00 2 07247         SCA     ADDR2,2  
      06243 -0625 00 0 07265         STL     AFLG     
      06244  0074 00 4 00000  CG3    TSX     **,4     
      06245 -0625 00 0 07234         STL     IFLG     
      06246  0600 00 0 07237         STZ     JFLG     
      06247  0020 00 0 06214         TRA     CGC
      06250 -0774 00 2 00000  CG4    AXC     **,2     
      06251 -0500 00 2 00000         CAL     00,2     
      06252 -0737 00 2 00000         PDC     ,2 
      06253  0636 00 2 07024         SCA     DOT,2    
      06254  0020 00 0 00765         TRA     ADDRES   
      06255  0074 00 4 06257  CCOLN  TSX     COLN0,4  
      06256  0020 00 0 00765         TRA     ADDRES   
      06257  0636 00 4 06313  COLN0  SCA     CCL4,4   
      06260 -0520 00 0 07265         NZT     AFLG     
      06261  0074 00 4 03406         TSX     SETFL,4  
      06262 -0500 00 0 11370         CAL     =O167    
      06263  0602 00 0 07511         SLW     BUF1+101 
      06264  0535 00 4 07247         LAC     ADDR2,4  
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 54    
                  
      06265  0500 00 4 00000         CLA     00,4     
      06266  0120 00 0 06271         TPL     *+3
      06267 -0754 00 0 00000         ZAC  
      06270  0020 00 0 06300         TRA     CCL1     
      06271  0500 00 4 00003         CLA     03,4     
      06272 -0100 00 0 06300         TNZ     CCL1     
      06273 -0500 00 0 11360         CAL     =O132    
      06274  0602 00 0 07510         SLW     BUF1+100 
      06275 -0500 00 0 11357         CAL     =O123    
      06276  0602 00 0 07507         SLW     BUF1+99  
      06277  0020 00 0 06306         TRA     CCL2     
      06300  0131 00 0 00000  CCL1   XCA  
      06301  0074 00 1 04325         TSX     CNVBD,1  
      06302 -0500 00 0 11360         CAL     =O132    
      06303  0602 00 0 07504         SLW     BUF1+96  
      06304 -0500 00 0 11357         CAL     =O123    
      06305  0602 00 0 07503         SLW     BUF1+95  
      06306  0636 00 0 06315  CCL2   SCA     CCL3,0   
      06307  0074 00 4 03502         TSX     PRINT,4  
      06310  0 00000 0 06315         PZE     CCL3     
      06311 -0500 00 0 07247         CAL     ADDR2    
      06312  0602 00 0 07024         SLW     DOT
      06313 -0774 00 4 00000  CCL4   AXC     **,4     
      06314  0020 00 4 00001         TRA     1,4
      06315 -0774 00 1 00000  CCL3   AXC     **,1     
      06316  0500 00 1 07511         CLA     BUF1+101,1     
      06317  1 00001 1 06320         TXI     *+1,1,1  
      06320  0636 00 1 06315         SCA     CCL3,1   
      06321  0361 00 0 11351         ACL     =O60     
      06322 -0320 00 0 11372         ANA     =O177    
      06323  0100 00 0 06315         TZE     CCL3     
      06324  0020 00 4 00001         TRA     1,4
      06325  0074 00 4 06327  CEQALS TSX     EQALS0,4 
      06326  0020 00 0 00765         TRA     ADDRES   
      06327  0636 00 4 06345  EQALS0 SCA     EQALS1,4 
      06330 -0520 00 0 07265         NZT     AFLG     
      06331  0074 00 4 03406         TSX     SETFL,4  
      06332  0535 00 1 07247         LAC     ADDR2,1  
      06333  0636 00 1 07024         SCA     DOT,1    
      06334 -0500 00 0 11356         CAL     =O120    
      06335  0602 00 0 07520         SLW     BUF1+108 
      06336  0602 00 0 07517         SLW     BUF1+107 
      06337  0602 00 0 07516         SLW     BUF1+106 
      06340  0602 00 0 07515         SLW     BUF1+105 
      06341  0602 00 0 07514         SLW     BUF1+104 
      06342  0602 00 0 07513         SLW     BUF1+103 
      06343  0602 00 0 07512         SLW     BUF1+102 
      06344  0074 00 4 04340         TSX     LENGTH,4 
      06345 -0774 00 4 00000  EQALS1 AXC     **,4     
      06346  0020 00 4 00001         TRA     1,4
      06347  0520 00 0 07265  CDBUFR ZET     AFLG     
      06350  0020 00 0 01264         TRA     TYPE2    
      06351  0535 00 4 07243         LAC     BBASE,4  
      06352  0636 00 4 06364         SCA     DBU1,4   
      06353  0535 00 4 07242         LAC     BUFER,4  
      06354 -0500 00 0 07251         CAL     ZER
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 55    
                  
      06355  0602 00 4 00001         SLW     01,4     
      06356 -0500 00 0 11367         CAL     =O162    
      06357  0602 00 0 07520         SLW     BUF1+108 
      06360  0602 00 0 07512         SLW     BUF1+102 
      06361 -0500 00 4 00003         CAL     03,4     
      06362  0602 00 0 07547         SLW     BUF2+3   
      06363  0020 00 0 06374         TRA     DBU2     
      06364 -0774 00 4 00000  DBU1   AXC     **,4     
      06365 -3 00000 4 00765         TXL     ADDRES,4,0     
      06366 -0500 00 4 00000         CAL     00,4     
      06367  0621 00 0 06364         STA     DBU1     
      06370 -0500 00 4 00003         CAL     03,4     
      06371 -0340 00 0 07547         LAS     BUF2+3   
      06372  0020 00 0 06374         TRA     DBU2     
      06373  0020 00 0 06364         TRA     DBU1     
      06374 -0130 00 0 00000  DBU2   XCL  
      06375 -0754 00 0 00000         ZAC  
      06376 -0763 00 0 00010         LGL     8  
      06377  0361 00 0 11356         ACL     =O120    
      06400  0602 00 0 07517         SLW     BUF1+107 
      06401 -0754 00 0 00000         ZAC  
      06402 -0763 00 0 00007         LGL     7  
      06403  0361 00 0 11356         ACL     =O120    
      06404  0602 00 0 07516         SLW     BUF1+106 
      06405 -0754 00 0 00000         ZAC  
      06406 -0763 00 0 00007         LGL     7  
      06407  0361 00 0 11356         ACL     =O120    
      06410  0602 00 0 07515         SLW     BUF1+105 
      06411 -0754 00 0 00000         ZAC  
      06412 -0763 00 0 00007         LGL     7  
      06413  0361 00 0 11356         ACL     =O120    
      06414  0602 00 0 07514         SLW     BUF1+104 
      06415 -0754 00 0 00000         ZAC  
      06416 -0763 00 0 00007         LGL     7  
      06417  0361 00 0 11356         ACL     =O120    
      06420  0602 00 0 07513         SLW     BUF1+103 
      06421 -0500 60 4 00001         CAL*    01,4     
      06422 -0737 00 1 00000         PDC     ,1 
      06423  0074 00 4 04340         TSX     LENGTH,4 
      06424  0020 00 0 06364         TRA     DBU1     
      06425 -0500 00 0 11351  ICOM   CAL     =O60     
      06426 -0765 00 0 00006         LGR     6  
      06427 -0600 00 0 07512         STQ     BUF1+102 
      06430 -0500 00 0 07345         CAL     BUF1+1   
      06431  0602 00 0 07513         SLW     BUF1+103 
      06432 -0500 00 0 11433         CAL     =HFROM   
      06433  0602 00 0 07511         SLW     BUF1+101 
      06434 -0500 00 0 11451         CAL     =O555560606060 
      06435  0602 00 0 07514         SLW     BUF1+104 
      06436  0074 00 4 07334         TSX     SETBCD,4 
      06437  0074 00 4 07323         TSX     WRFLX,4  
      06440  0 00004 0 07511         PZE     BUF1+101,,4    
      06441 -0625 00 0 07302         STL     ICFLG    
      06442 -0520 00 0 07271         NZT     FBDFLG   
      06443  0020 00 0 06467         TRA     CRNCOM-1 
      06444  0074 00 4 07323         TSX     WRFLX,4  
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 56    
                  
      06445  0 00003 0 06455         PZE     MES5,,3  
      06446  0074 00 4 07332         TSX     WRMESS,4 
      06447  0 00000 0 07512         PZE     BUF1+102 
      06450  0 00000 0 07513         PZE     BUF1+103 
      06451  0 00007 0 06460         PZE     MES6,,7  
      06452  0600 00 0 07302         STZ     ICFLG    
      06453  0074 00 4 07335         TSX     SETFUL,4 
      06454  0020 00 0 02266         TRA     GC0
      06455  663163306021     MES5   BCI     3,WITH APOLOGIES.    
      06456  474643462731     
      06457  256233606060     
      06460 +106162157155     MES6   OCT     106162157155,040121105104,040167151164 
      06461 +040121105104     
      06462 +040167151164     
      06463 +150040141160            OCT     150040141160,157154157147,151145163056,003040040040
      06464 +157154157147     
      06465 +151145163056     
      06466 +003040040040     
      06467  0020 00 0 06472         TRA     *+3
      06470  0520 00 0 07265  CRNCOM ZET     AFLG     
      06471  0020 00 0 01264         TRA     TYPE2    
      06472  0074 00 4 07307         TSX     GETCLS,4 
      06473  0 00001 0 07344         PZE     BUF1,,1  
      06474  0074 00 4 07307         TSX     GETCLS,4 
      06475  0 00002 0 07370         PZE     BUF1+20,,2     
      06476  0074 00 4 07307         TSX     GETCLS,4 
      06477  0 00003 0 07414         PZE     BUF1+40,,3     
      06500  0074 00 4 07307         TSX     GETCLS,4 
      06501  0 00004 0 07440         PZE     BUF1+60,,4     
      06502  0074 00 4 07307         TSX     GETCLS,4 
      06503  0 00005 0 07464         PZE     BUF1+80,,5     
      06504  0074 00 4 07311         TSX     GETCLC,4 
      06505  0602 00 0 07510         SLW     BUF1+100 
      06506  0520 00 0 07301         ZET     PMTFLG   
      06507  0074 00 4 07306         TSX     FORBID,4 
      06510  0520 00 0 07302         ZET     ICFLG    
      06511  0020 00 0 06574         TRA     CRCIC    
      06512  0535 00 4 07242         LAC     BUFER,4  
      06513 -0500 00 4 00003         CAL     03,4     
      06514  0602 00 0 06634         SLW     CRC1     
      06515  0074 00 4 03057         TSX     GETBN,4  
      06516  0074 00 4 03304         TSX     BOPEN,4  
      06517  0535 00 4 07251         LAC     ZER,4    
      06520 -0500 00 4 00000         CAL     00,4     
      06521  0601 00 0 06523         STO     *+2
      06522  0074 00 4 02527         TSX     SETBC,4  
      06523  0 00000 0 00000         PZE     **,,**   
      06524 -0774 00 4 00001         AXC     1,4
      06525 -0636 00 4 06604         SCD     CRC8,4   
      06526  0074 00 4 02604  CRC2   TSX     GETBC,4  
      06527 -0340 00 0 11321         LAS     =3 
      06530  0020 00 0 06532         TRA     *+2
      06531  0020 00 0 06635         TRA     CRC1+1   
      06532 -0340 00 0 11325         LAS     =O12     
      06533  0020 00 0 06535         TRA     *+2
      06534  0020 00 0 06526         TRA     CRC2     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 57    
                  
      06535 -0340 00 0 11340         LAS     =O40     
      06536  0020 00 0 06540         TRA     *+2
      06537  0020 00 0 06526         TRA     CRC2     
      06540 -0774 00 2 00000         AXC     00,2     
      06541  0560 00 0 11454         LDQ     =H 
      06542 -0600 00 2 07511         STQ     BUF1+101,2     
      06543  0737 00 1 00000  CRC4   PAC     ,1 
      06544 -0500 60 0 00010         CAL*    CNVTBL   
      06545  0771 00 0 00010         ARS     8  
      06546  0560 00 2 07511         LDQ     BUF1+101,2     
      06547 -0773 00 0 00006         RQL     6  
      06550 -0765 00 0 00006         LGR     6  
      06551 -0773 00 0 00006         RQL     6  
      06552 -0600 00 2 07511         STQ     BUF1+101,2     
      06553  0074 00 4 02604         TSX     GETBC,4  
      06554 -0340 00 0 11325         LAS     =O12     
      06555  0020 00 0 06557         TRA     *+2
      06556  1 77777 2 06563         TXI     CRC3,2,-1
      06557 -0340 00 0 11340         LAS     =O40     
      06560  0020 00 0 06543         TRA     CRC4     
      06561  1 77777 2 06563         TXI     CRC3,2,-1
      06562  0020 00 0 06543         TRA     CRC4     
      06563 -0340 00 0 11325  CRC3   LAS     =O12     
      06564  0020 00 0 06566         TRA     *+2
      06565  0020 00 0 06601         TRA     CRC5     
      06566 -0340 00 0 11340         LAS     =O40     
      06567  0020 00 0 06541         TRA     CRC4-2   
      06570  0020 00 0 06572         TRA     *+2
      06571  0020 00 0 06541         TRA     CRC4-2   
      06572  0074 00 4 02604         TSX     GETBC,4  
      06573  0020 00 0 06563         TRA     CRC3     
      06574  0774 00 4 00001  CRCIC  AXT     1,4
      06575 -0634 00 4 06604         SXD     CRC8,4   
      06576 -0500 00 0 11456         CAL     =H WRITE 
      06577  0602 00 0 07511         SLW     BUF1+101 
      06600 -0774 00 2 00003         AXC     3,2
      06601  0560 00 0 11476  CRC5   LDQ     =O777777777777 
      06602 -0600 00 2 07511         STQ     BUF1+101,2     
      06603  0074 00 4 07310         TSX     SETCLS,4 
      06604  0 00000 0 07511  CRC8   PZE     BUF1+101,,**   
      06605 -0535 00 4 06604         LDC     CRC8,4   
      06606  1 77777 4 06607         TXI     *+1,4,-1 
      06607 -0636 00 4 06604         SCD     CRC8,4   
      06610  0520 00 0 07302         ZET     ICFLG    
      06611  0020 00 0 06637         TRA     CRC1.1   
      06612  3 77773 4 06526         TXH     CRC2,4,-5
      06613  0074 00 4 07310         TSX     SETCLS,4 
      06614  0 00000 0 06625         PZE     CRC6,,0  
      06615  0074 00 4 07310         TSX     SETCLS,4 
      06616  0 00005 0 06631         PZE     CRC7,,5  
      06617 -0500 00 0 11410         CAL     =O5000001
      06620  0074 00 4 07312         TSX     SETCLC,4 
      06621 -0500 00 0 06625         CAL     CRC6     
      06622  0560 00 0 06626         LDQ     CRC6+1   
      06623  0074 00 4 07313         TSX     NEXCOM,4 
      06624  0020 00 0 06524         TRA     CRC2-2   
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 58    
                  
      06625  606062216525     CRC6   BCI     3,  SAVEQEDXXX     T 
      06626  502524676767     
      06627  606060606063     
      06630 -377777777777            OCT     777777777777   
      06631  512562644425     CRC7   BCI     2,RESUMEQEDXXX 
      06632  502524676767     
      06633 -377777777777            OCT     777777777777   
      06634  0 00000 0 00000  CRC1   PZE  
      06635 -0500 00 0 06634         CAL     CRC1     
      06636  0074 00 4 03304         TSX     BOPEN,4  
      06637 -0535 00 1 06604  CRC1.1 LDC     CRC8,1   
      06640  3 77776 1 06654         TXH     CRC9,1,-2
      06641  0074 00 4 07310         TSX     SETCLS,4 
      06642  0 00000 0 06625         PZE     CRC6,,0  
      06643 -0636 00 1 06645         SCD     *+2,1    
      06644  0074 00 4 07310         TSX     SETCLS,4 
      06645  0 00000 0 06631         PZE     CRC7,,** 
      06646 -0756 00 1 00000         PCD     ,1 
      06647 -0501 00 0 11317         ORA     =1 
      06650  0074 00 4 07312         TSX     SETCLC,4 
      06651 -0500 00 0 06625         CAL     CRC6     
      06652  0560 00 0 06626         LDQ     CRC6+1   
      06653  0074 00 4 07313         TSX     NEXCOM,4 
      06654  0074 00 4 07335  CRC9   TSX     SETFUL,4 
      06655  0074 00 4 01420         TSX     BLINE,4  
      06656  0074 00 4 07310         TSX     SETCLS,4 
      06657  0 00001 0 07344         PZE     BUF1,,1  
      06660  0074 00 4 07310         TSX     SETCLS,4 
      06661  0 00002 0 07370         PZE     BUF1+20,,2     
      06662  0074 00 4 07310         TSX     SETCLS,4 
      06663  0 00003 0 07414         PZE     BUF1+40,,3     
      06664  0074 00 4 07310         TSX     SETCLS,4 
      06665  0 00004 0 07440         PZE     BUF1+60,,4     
      06666  0074 00 4 07310         TSX     SETCLS,4 
      06667  0 00005 0 07464         PZE     BUF1+80,,5     
      06670 -0500 00 0 07510         CAL     BUF1+100 
      06671  0074 00 4 07312         TSX     SETCLC,4 
      06672 -0520 00 0 07301         NZT     PMTFLG   
      06673  0020 00 0 06677         TRA     CRC9.1   
      06674  0074 00 4 07305         TSX     PERMIT,4 
      06675  3 00000 0 07026         PAR     PPPMT    
      06676  3 00000 0 07027         PAR     PPPMT+1  
      06677 -0520 00 0 07302  CRC9.1 NZT     ICFLG    
      06700  0020 00 0 00765         TRA     ADDRES   
      06701  0600 00 0 07302         STZ     ICFLG    
      06702  0020 00 0 02266         TRA     GC0
      06703  0074 00 4 02257  CCOMNT TSX     GETCHA,4 
      06704 -0340 00 0 11325         LAS     =O12     
      06705  0020 00 0 06703         TRA     CCOMNT   
      06706  0020 00 0 00765         TRA     ADDRES   
      06707  0020 00 0 06703         TRA     CCOMNT   
      06710 -0520 00 0 07265  CSORT  NZT     AFLG     
      06711  0074 00 4 03406         TSX     SETFL,4  
      06712  0074 00 4 03415         TSX     CKWRAP,4 
      06713  0636 00 3 07022         SCA     CSRT3,3  
      06714  0535 00 1 07246         LAC     ADDR1,1  
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 59    
                  
      06715 -0500 00 1 00001  NEWI   CAL     1,1
      06716  0737 00 2 00000         PAC     ,2 
      06717  0771 00 0 00022         ARS     18 
      06720  0602 00 0 07013         SLW     ENDI     
      06721  0756 00 1 00000         PCA     ,1 
      06722  0737 00 3 00000         PAC     ,3 
      06723  0756 00 3 00000  INCJ   PCA     ,3 
      06724  0402 00 0 07247         SUB     ADDR2    
      06725  0100 00 0 07014         TZE     INCI     
      06726 -0500 00 3 00000         CAL     0,3
      06727  0737 00 3 00000         PAC     ,3 
      06730 -0500 00 3 00001         CAL     1,3
      06731  0737 00 4 00000         PAC     ,4 
      06732 -0500 00 4 00001         CAL     1,4
      06733 -0340 00 2 00001         LAS     1,2
      06734  0020 00 0 06723         TRA     INCJ     
      06735  0020 00 0 06750         TRA     CSRT2    
      06736 -0500 00 3 00001  CSRT1  CAL     1,3
      06737  0560 00 1 00001         LDQ     1,1
      06740 -0600 00 3 00001         STQ     1,3
      06741  0602 00 1 00001         SLW     1,1
      06742  0600 00 1 00003         STZ     3,1
      06743  0600 00 3 00003         STZ     3,3
      06744  0737 00 2 00000         PAC     ,2 
      06745  0771 00 0 00022         ARS     18 
      06746  0602 00 0 07013         SLW     ENDI     
      06747  0020 00 0 06723         TRA     INCJ     
      06750  0636 00 2 07010  CSRT2  SCA     CSRT4,2  
      06751 -0500 00 4 00002         CAL     2,4
      06752 -0340 00 2 00002         LAS     2,2
      06753  0020 00 0 07010         TRA     CSRT4    
      06754  0020 00 0 06756         TRA     *+2
      06755  0020 00 0 06736         TRA     CSRT1    
      06756 -0500 00 4 00003         CAL     3,4
      06757 -0340 00 2 00003         LAS     3,2
      06760  0020 00 0 07010         TRA     CSRT4    
      06761  0020 00 0 06763         TRA     *+2
      06762  0020 00 0 06736         TRA     CSRT1    
      06763 -0500 00 2 00000         CAL     0,2
      06764  0771 00 0 00017         ARS     15 
      06765  0602 00 0 07012         SLW     CSRTT    
      06766 -0500 00 4 00000         CAL     0,4
      06767  0737 00 4 00000         PAC     ,4 
      06770  0771 00 0 00017         ARS     15 
      06771 -0340 00 0 07012         LAS     CSRTT    
      06772  0020 00 0 07010         TRA     CSRT4    
      06773  0020 00 0 06775         TRA     *+2
      06774  0020 00 0 06736         TRA     CSRT1    
      06775  0756 00 2 00000         PCA     ,2 
      06776 -0340 00 0 07013         LAS     ENDI     
      06777  0020 00 0 07001         TRA     *+2
      07000  0020 00 0 07010         TRA     CSRT4    
      07001 -0500 00 2 00000         CAL     0,2
      07002  0737 00 2 00000         PAC     ,2 
      07003 -0500 00 4 00001         CAL     1,4
      07004 -0340 00 2 00001         LAS     1,2
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 60    
                  
      07005  0020 00 0 07010         TRA     CSRT4    
      07006  0020 00 0 06751         TRA     CSRT2+1  
      07007  0020 00 0 06736         TRA     CSRT1    
      07010 -0774 00 2 00000  CSRT4  AXC     **,2     
      07011  0020 00 0 06723         TRA     INCJ     
      07012  0 00000 0 00000  CSRTT 
      07013  0 00000 0 00000  ENDI  
      07014  0756 00 1 00000  INCI   PCA     ,1 
      07015  0402 00 0 07247         SUB     ADDR2    
      07016  0100 00 0 07022         TZE     CSRT3    
      07017 -0500 00 1 00000         CAL     0,1
      07020  0737 00 1 00000         PAC     ,1 
      07021  0020 00 0 06715         TRA     NEWI     
      07022 -0774 00 3 00000  CSRT3  AXC     **,3     
      07023  0020 00 0 00765         TRA     ADDRES   
      07024  0 00000 0 00000  DOT   
      07025  0 00000 0 00000  CAPFLG
      07026                   PPPMT  BSS     2  
      07030                   TFLG   BSS     2  
      07032  0 00000 0 00000  SFLG  
      07033  0 00000 0 00000  VFLG  
      07034  0 00000 0 00000  EFLG  
      07035 +000000000101     TYCHA  OCT     101,1,141,1,107,2,147,2,123,3,163,3,124,4,164,4    
      07036 +000000000001     
      07037 +000000000141     
      07040 +000000000001     
      07041 +000000000107     
      07042 +000000000002     
      07043 +000000000147     
      07044 +000000000002     
      07045 +000000000123     
      07046 +000000000003     
      07047 +000000000163     
      07050 +000000000003     
      07051 +000000000124     
      07052 +000000000004     
      07053 +000000000164     
      07054 +000000000004     
      07055 +000000000000     OCT3   OCT     00,003003003003,003003003003,777777000000,777777000000   
      07056 +003003003003     
      07057 +003003003003     
      07060 -377777000000     
      07061 -377777000000     
      07062 +003000000000            OCT     003000000000,003000000000,575757575757,005700570057
      07063 +003000000000     
      07064 -175757575757     
      07065 +005700570057     
                       07065  SHFT   SYN     *-1
      07066  0 00011 0 00004         PZE     4,,9     
      07067  0 00011 0 00004         PZE     4,,9     
      07070  0 00006 0 00006         PZE     6,,6     
      07071  0 00014 0 00003         PZE     3,,12    
                       07071  RETRN  SYN     *-1
      07072  0 00000 0 03022         PZE     GFASCI   
      07073  0 00000 0 03011         PZE     GFGE     
      07074  0 00000 0 03024         PZE     GFSIX    
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 61    
                  
      07075  0 00000 0 03032         PZE     GFTWLV   
      07076  0 00000 0 04307         PZE     WRASCI   
      07077  0 00000 0 04306         PZE     WRGE     
      07100  0 00010 0 04220         PZE     WRSXTW,,8
      07101  0 00000 0 04220         PZE     WRSXTW,,0
                       07101  FNASUM SYN     *-1
      07102  602162233131            BCI     4, ASCII ERROR   FAP(MEMO) 
      07103  602551514651     
      07104  606060262147     
      07105  744425444634     
                       07106         DUP     1,5
      07106 -0500 00 6 00001         CAL     01,6     
      07107 -0500 00 6 00001  
      07110 -0500 00 6 00001  
      07111 -0500 00 6 00001  
      07112 -0500 00 6 00001  
                       07113         DUP     1,5
      07113 -0500 00 6 00002         CAL     02,6     
      07114 -0500 00 6 00002  
      07115 -0500 00 6 00002  
      07116 -0500 00 6 00002  
      07117 -0500 00 6 00002  
                       07120         DUP     1,5
      07120 -0500 00 6 00003         CAL     03,6     
      07121 -0500 00 6 00003  
      07122 -0500 00 6 00003  
      07123 -0500 00 6 00003  
      07124 -0500 00 6 00003  
                       07125         DUP     1,3
      07125 -0500 00 6 00000         CAL     00,6     
      07126 -0500 00 6 00000  
      07127 -0500 00 6 00000  
                       07130  CAL    SYN     *  
                       07130         DUP     5,3
      07130  0771 00 0 00034         ARS     28 
      07131  0771 00 0 00025         ARS     21 
      07132  0771 00 0 00016         ARS     14 
      07133  0771 00 0 00007         ARS     7  
      07134  0774 00 0 00000         AXT     00,0     
      07135  0771 00 0 00034  
      07136  0771 00 0 00025  
      07137  0771 00 0 00016  
      07140  0771 00 0 00007  
      07141  0774 00 0 00000  
      07142  0771 00 0 00034  
      07143  0771 00 0 00025  
      07144  0771 00 0 00016  
      07145  0771 00 0 00007  
      07146  0774 00 0 00000  
      07147  0771 00 0 00035         ARS     29 
      07150  0771 00 0 00026         ARS     22 
      07151  0771 00 0 00017         ARS     15 
                       07152  ARS    SYN     *  
                       07152         DUP     5,3
      07152  0767 00 0 00034         ALS     28 
      07153  0767 00 0 00025         ALS     21 
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 62    
                  
      07154  0767 00 0 00016         ALS     14 
      07155  0767 00 0 00007         ALS     7  
      07156  0774 00 0 00000         AXT     00,0     
      07157  0767 00 0 00034  
      07160  0767 00 0 00025  
      07161  0767 00 0 00016  
      07162  0767 00 0 00007  
      07163  0774 00 0 00000  
      07164  0767 00 0 00034  
      07165  0767 00 0 00025  
      07166  0767 00 0 00016  
      07167  0767 00 0 00007  
      07170  0774 00 0 00000  
      07171  0767 00 0 00035         ALS     29 
      07172  0767 00 0 00026         ALS     22 
      07173  0767 00 0 00017         ALS     15 
                       07174  ALS    SYN     *  
                       07174         DUP     1,5
      07174 -0602 00 2 00001         ORS     01,2     
      07175 -0602 00 2 00001  
      07176 -0602 00 2 00001  
      07177 -0602 00 2 00001  
      07200 -0602 00 2 00001  
                       07201         DUP     1,5
      07201 -0602 00 2 00002         ORS     02,2     
      07202 -0602 00 2 00002  
      07203 -0602 00 2 00002  
      07204 -0602 00 2 00002  
      07205 -0602 00 2 00002  
                       07206         DUP     1,5
      07206 -0602 00 2 00003         ORS     03,2     
      07207 -0602 00 2 00003  
      07210 -0602 00 2 00003  
      07211 -0602 00 2 00003  
      07212 -0602 00 2 00003  
                       07213         DUP     1,3
      07213 -0602 00 2 00000         ORS     00,2     
      07214 -0602 00 2 00000  
      07215 -0602 00 2 00000  
                       07216  ORS    SYN     *  
      07216  0020 00 0 00014  TRA1   TRA     BUF3     
      07217  0020 00 0 02121  TRA2   TRA     FAIL     
      07220  0020 00 0 02241  TRA3   TRA     XCHG     
      07221  0074 00 4 02137  TSX1   TSX     NODE,4   
      07222  0074 00 4 02172  TSX2   TSX     CNODE,4  
      07223  0074 00 2 00001  TSX3   TSX     1,2
      07224  0074 00 4 02036  TSX4   TSX     START,4  
      07225  0074 00 4 02076  TSX5   TSX     FINISH,4 
      07226 -3 00000 1 02121  TXL1   TXL     FAIL,1,**
      07227 -3 77765 1 00017  TXL2   TXL     BUF3+3,1,-11   
      07230  3 00000 1 02121  TXH1   TXH     FAIL,1,**
      07231 -0520 00 0 07233  NZT1   NZT     FFLG     
      07232  0520 00 0 00000  ZET1   ZET     0  
      07233  0 00000 0 00000  FFLG  
      07234  0 00000 0 00000  IFLG  
      07235  0 00000 0 00000  INTFLG
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 63    
                  
      07236  0 00000 0 00000  RFLG  
      07237  0 00000 0 00000  JFLG  
      07240  0 00000 0 00000  CPLFLG
      07241  0 00000 0 00000  RECLEV
      07242  0 00000 0 00000  BUFER 
      07243  0 00000 0 00000  BBASE 
      07244  0 00000 0 00000  INPUT 
      07245  0 00000 0 00000  IBASE 
      07246  0 00000 0 00000  ADDR1 
      07247  0 00000 0 00000  ADDR2 
      07250  0 00000 0 00000  ADDR3 
      07251  0 00000 0 00000  ZER   
      07252 +000000000200     B      OCT     200
      07253 +000000000200     V      OCT     200
      07254 +000000000200     E      OCT     200
      07255 +000000000043     A      OCT     43 
      07256 +000000000200     W      OCT     200
      07257 +000000000100     Q      OCT     100
      07260 +000000000200     R      OCT     200
      07261  0 00000 0 00000  GOOD  
      07262  0 00000 0 00000  NSCHA 
      07263  0 00000 0 00000  SUBFLG
      07264  0 00000 0 00000  COPY  
      07265  0 00000 0 00000  AFLG  
      07266  0 00000 0 00000  BFLG  
      07267  0 00000 0 00000  TRCFLG
      07270  0 00000 0 00000  FMODE 
      07271  0 00000 0 00000  FBDFLG
      07272  0 00000 0 00000  EXFLG 
      07273  0 00000 0 00000  SLCHR 
      07274  0 00000 0 00000  CFLG  
      07275  0 00000 0 00000  DFLG  
      07276  0 00000 0 00000  PAFLG 
      07277  0 00000 0 00000  PLFLG 
      07300  0 00000 0 00000  FILFLG
      07301  0 00000 0 00000  PMTFLG
      07302  0 00000 0 00000  ICFLG 
      07303  0101 00 0 11466  WHOAMI TIA     =HWHOAMI 
      07304  0101 00 0 11440  GETIME TIA     =HGETIME 
      07305  0101 00 0 11425  PERMIT TIA     =HALLOW  
      07306  0101 00 0 11432  FORBID TIA     =HFORBID 
      07307  0101 00 0 11436  GETCLS TIA     =HGETCLS 
      07310  0101 00 0 11462  SETCLS TIA     =HSETCLS 
      07311  0101 00 0 11435  GETCLC TIA     =HGETCLC 
      07312  0101 00 0 11461  SETCLC TIA     =HSETCLC 
      07313  0101 00 0 11443  NEXCOM TIA     =HNEXCOM 
      07314  0101 00 0 11427  CHNCOM TIA     =HCHNCOM 
      07315  0101 00 0 11437  GETCOM TIA     =HGETCOM 
      07316  0101 00 0 11460  SETBRK TIA     =HSETBRK 
      07317  0101 00 0 11434  GETBRK TIA     =HGETBRK 
      07320  0101 00 0 11441  GETMEM TIA     =HGETMEM 
      07321  0101 00 0 11431  DORMNT TIA     =HDORMNT 
      07322  0101 00 0 11446  RDFLXA TIA     =HRDFLXA 
      07323  0101 00 0 11470  WRFLX  TIA     =HWRFLX  
      07324  0101 00 0 11430  CLOSE  TIA     =HCLOSE  
      07325  0101 00 0 11444  OPEN   TIA     =HOPEN   
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 64    
                  
      07326  0101 00 0 11426  BUFFER TIA     =HBUFFER 
      07327  0101 00 0 11447  RDWAIT TIA     =HRDWAIT 
      07330  0101 00 0 11472  WRWAIT TIA     =HWRWAIT 
      07331  0101 00 0 11465  TRFILE TIA     =HTRFILE 
      07332  0101 00 0 11471  WRMESS TIA     =HWRMESS 
      07333  0101 00 0 11467  WRFLXA TIA     =HWRFLXA 
      07334  0101 00 0 11457  SETBCD TIA     =HSETBCD 
      07335  0101 00 0 11463  SETFUL TIA     =HSETFUL 
      07336  0101 00 0 11464  SETMEM TIA     =HSETMEM 
      07337 +000000000000     FILNAM OCT     00,0     
      07340 +000000000000     
      07341  0774 00 0 00000         EVEN 
      07342                   AC     BSS     2  
      07344                   BUF1   BSS     128
      07544                   BUF2   BSS     128
                       00014  BUF3   SYN     QED
      07744                   BUF5   BSS     128
      10144                   BUF6   BSS     302
      10622                   BUF7   BSS     302
      11300                   SCHARS BSS     10 
      11312 +000000000000     SYLBUF OCT     00,0,0,0 
      11313 +000000000000     
      11314 +000000000000     
      11315 +000000000000     
                                     END  
                  
        LITERALS  
      11316  000000000000     
      11317  000000000001     
      11320  000000000002     
      11321  000000000003     
      11322  000000000004     
      11323  000000000006     
      11324  000000000011     
      11325  000000000012     
      11326  000000000015     
      11327  000000000016     
      11330  000000000017     
      11331  000000000030     
      11332  000000000031     
      11333  000000000033     
      11334  000000000034     
      11335  000000000035     
      11336  000000000036     
      11337  000000000037     
      11340  000000000040     
      11341  000000000041     
      11342  000000000046     
      11343  000000000047     
      11344  000000000052     
      11345  000000000054     
      11346  000000000055     
      11347  000000000056     
      11350  000000000057     
      11351  000000000060     
      11352  000000000061     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 65    
                  
      11353  000000000064     
      11354  000000000070     
      11355  000000000077     
      11356  000000000120     
      11357  000000000123     
      11360  000000000132     
      11361  000000000141     
      11362  000000000142     
      11363  000000000144     
      11364  000000000154     
      11365  000000000156     
      11366  000000000160     
      11367  000000000162     
      11370  000000000167     
      11371  000000000174     
      11372  000000000177     
      11373  000000000200     
      11374  000000000201     
      11375  000000000377     
      11376  000000000400     
      11377  000000000454     
      11400  000000000600     
      11401  000000000624     
      11402  000000077774     
      11403  000000077777     
      11404  000000100000     
      11405  000000200000     
      11406  000000600060     
      11407  000005000000     
      11410  000005000001     
      11411  000100600060     
      11412  000200600060     
      11413  000300600060     
      11414  000400600060     
      11415  000500600060     
      11416  000600600060     
      11417  000700600060     
      11420  001000600060     
      11421  001100600060     
      11422  006200550060     
      11423  016200550060     
      11424  024000000000     
      11425  214343466660     
      11426  226426262551     
      11427  233045234644     
      11430  234346622560     
      11431  244651444563     
      11432  264651223124     
      11433  265146446060     
      11434  272563225142     
      11435  272563234323     
      11436  272563234362     
      11437  272563234644     
      11440  272563314425     
      11441  272563442544     
      11442  400000000000     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 66    
                  
      11443  452567234644     
      11444  464725456060     
      11445  475146263143     
      11446  512426436721     
      11447  512466213163     
      11450  516060606060     
      11451  555560606060     
      11452  606060262147     
      11453  606060502524     
      11454  606060606060     
      11455  606064622551     
      11456  606651316325     
      11457  622563222324     
      11460  622563225142     
      11461  622563234323     
      11462  622563234362     
      11463  622563266443     
      11464  622563442544     
      11465  635126314325     
      11466  663046214431     
      11467  665126436721     
      11470  665126436760     
      11471  665144256262     
      11472  665166213163     
      11473  666060606060     
      11474  742631223460     
      11475  777777000000     
      11476  777777777777     
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      11477 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
       7255      A  5106, 5214
       7252      B  2374, 5100
       7254      E  3210, 5111
       7257      Q  5134, 5216
       7260      R  2377, 5120
       7253      V  2371, 5103, 5213
       7256      W  5125, 5215
       7342     AC   675,  676,  677,  706,  707,  710
       3663     S1  3660, 3661
       3617     S3  3625, 3634, 3640
       3645     S4  3617
       3705     S5  3612, 3654, 3655, 3700, 3703
       3626     S6  3623, 3644
       3635     S7  3624
       3754     S8  3666, 3670, 3766, 4001
       3756     S9  3665
       1461    AD1  1450
       7174    ALS  3261, 3274, 7174
       1511    AN1  1437
       7152    ARS  2456, 2613, 7152
       2612    BC1  2606
       2621    BC2  1057, 2462, 2464, 2540, 2542, 2544, 2573, 2576, 2600, 2617, 2626, 2636, 2655, 2657, 2661, 3605, 4560
                    5255, 5326, 5725, 5756, 6064, 6236
       2634    BC3  2623
       2641    BC4  1064, 1071, 2471, 2605
       3066    BN1  3101
       3075    BN2  3070, 3071, 3073
       3102    BN3  3072
       3105    BN6  3065, 3076, 3100, 3102
       3103    BN7  3057, 3062, 3063, 3064
       3314    BO1  3322
       3323    BO2  3314
       3371    BO3  3317
       3376    BO4  3304, 3370
       3400    BO5  3305, 3315, 3340
       7130    CAL  2455, 2612, 7130
       6211    CG1  6203, 6205
       6236    CG2  6222
       6244    CG3  6171
       6250    CG4  6207, 6226
       6223    CG5  6216
       6167    CG6  6160
       6214    CGC  6201, 6247
       6234    CGF  6200
       1463    CH1  1451, 1455, 1461, 1531
       1500    CH2  1471
       3417    CK1  3423
       5032    CO1  5101, 5104, 5107, 5112, 5116, 5121, 5123, 5126, 5132, 5135, 5137, 5151, 5156, 5161, 5163, 5165, 5171
                    5172, 5176, 5207, 5211
       5212    CO2  5034
       5077    CO3  5045
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       5102    CO4  5046
       5105    CO5  5050
       5110    CO6  5051
       5113    CO7  5052
       5117    CO8  5055
       5122    CO9  5056
       1635    COR  1563
       7024    DOT  1031, 1100, 1251, 3236, 3300, 3307, 3346, 3374, 3401, 3442, 3452, 4462, 4531, 4534, 4605, 4607, 4777
                    5230, 5573, 6115, 6117, 6253, 6312, 6333
       2733    FC1   152, 2670, 2723, 2731
       3124    FN3      
       3136    FN4  3130, 3132, 3134, 3140, 3164, 3171, 3174
       3144    FN5  3137, 3141, 3152, 3154, 3156
       3157    FN6  3153, 3155
       3175    FN7  3106, 3142
       2266    GC0  6454, 6702
       2300    GC1  2321, 2323
       2350    GC4  2524, 2526
       2345    GC5   721, 2262, 2265
       2415    GC6  2403
       2503    GC8  2444
       2753    GF1  2741, 2743, 3010
       2757    GF2  2701, 2737, 2756
       2762    GF3  2703, 3046, 3054
       2765    GF4  2672, 2673, 2763
       3003    GF5  2751
       3040    GF6  3031
       3050    GF7  3026, 3035
       3044    GF8  3017, 3021, 3023
       1412    IL1  1401
       1375    IL2  1365, 1370, 1372
         74    IN1   102
        102    IN2    65
        155    IN3   145
       1447    IO1  5114, 5130
       1464    IO2  5115, 5131
       1474    LP1  1454, 1460
        750    MM1   724,  731
        753    MM2   734
        742    MM3   750
        755    MM4   735
       5012    MO1  4770, 4772
       5027    MO2  4626, 4725, 4766, 5024, 5667, 5701
       2141    NO1  1571, 2147, 2152, 2241, 2243
       2147    NO2  2142
       2157    NO3  2145
       1542    OP0  1700, 1712, 1746, 2006
       1544    OP1  1541, 1545, 1603
       1557    OP2  1544
       1504    OR1  1453
       7216    ORS  3262, 3275, 7216
        157    PM1   234
        216    PM2   223,  225,  226
        227    PM3   221
        232    PM4   160
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        235    PM5   155,  156
        240    PMN   200,  205,  222,  250,  260,  262
       3535    PR2  3543, 3562, 3563
       3545    PR3  3507, 3547, 3561, 3565
       3557    PR4  3553
       3561    PR5  3551
       3601    PR6  3502
       3513    PR7  3504, 3522, 3524, 3564
       3565    PR9  3516, 3572, 3574
       3202    PU1  3303
       3243    PU2  3272
       3256    PU3  3267
       3265    PU4  3201, 3202
       3276    PU5  3177, 3212, 3214, 3216
       3300    PU6  3264
       3215    PU7  3207
       3273    PU8  3260
         14    QED     0,  674, 7744
       2567    RE1  2527, 2562
       1514    RP0  1452
       1523    RP1  1457
       1533    RP2  1520, 1522, 1525, 1527
       3771    S10  3765
       4004    S11  3764, 3777, 4000
       4005    S12  3754, 3770, 4003
       3717    S13  3710, 3711
       3730    S16  3735, 3736, 3751
       4007    S17  3715, 3723, 4022, 4102, 4115, 4124
       4011    S18  3714
       4053    S19  4020, 4021, 4045, 4051, 4056, 4077, 4123, 4125, 4135
       4103    S20  4017, 4052, 4073, 4101
       4104    S21  4007, 4062, 4067, 4122, 4130
       4024    S22  4037
       4032    S23  4023, 4035, 4040, 4043, 4046, 4074, 4076, 4126
       4040    S24  4026
       4106    S25  4061
       4116    S26  4106, 4114, 4121, 4147
       4126    S27  4065
       4044    S28  4100
       4122    S30  4113
       4111    S31  4152
       4131    S32  4071
       4145    S33  4141
       4135    S34  4144
       1530    SL1  1443
       1526    ST1  1456
       3604    SUB  5511
       5637    WR1  5621, 5623
       5661    WR2  4231, 4251, 4275, 4306
       5663    WR3  5613
       4234    WR4  4230, 4232, 4307, 4310
       4244    WR5  4236, 5606, 5657
       4245    WR6  4234, 4255, 4314, 5610, 5611
       4252    WR7  4223
       4300    WR8  4267
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 4     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       4322    WR9  4320
       4216    WRX  4167, 4201, 4203
       7251    ZER   142,  773, 1073, 1155, 1253, 1350, 2474, 3311, 3330, 3345, 3372, 3406, 4636, 5014, 5400, 5670, 5703
                    6354, 6517
       1161   AAN1  1171
        775   ADR1  1013, 1224, 1227, 1255
       1222   ADV2  1014, 1020, 1022
       1225   ADV3  1146, 1217, 1221
       7265   AFLG   770, 1223, 1226, 3111, 3165, 3170, 3404, 3413, 3426, 3465, 3477, 4442, 4453, 4471, 4512, 4600, 4615
                    4761, 5030, 5033, 5223, 5370, 5413, 5601, 5664, 6121, 6130, 6146, 6243, 6260, 6330, 6347, 6470, 6710
       1173   AREL  1066, 1077, 1102, 1156, 1164
       7266   BFLG   771, 1230, 1235, 3112, 3157, 3173
       4376   BOR1  4365, 4371, 4374
       7344   BUF1    16,   17, 2267, 2270, 2302, 3510, 3546, 3555, 3557, 3570, 3600, 3673, 3675, 4033, 4042, 4047, 4117
                    4127, 4176, 4274, 4327, 4332, 4335, 4336, 4352, 4354, 4356, 4643, 4644, 4645, 4646, 4650, 4651, 4653
                    4654, 4660, 4663, 4666, 4671, 4674, 4677, 4702, 4703, 4705, 4706, 4710, 4732, 4753, 4757, 5344, 5735
                    5755, 5765, 5770, 5773, 5774, 5776, 6000, 6022, 6036, 6263, 6274, 6276, 6303, 6305, 6316, 6335, 6336
                    6337, 6340, 6341, 6342, 6343, 6357, 6360, 6400, 6404, 6410, 6414, 6420, 6427, 6430, 6431, 6433, 6435
                    6440, 6447, 6450, 6473, 6475, 6477, 6501, 6503, 6505, 6542, 6546, 6552, 6577, 6602, 6604, 6657, 6661
                    6663, 6665, 6667, 6670
       7544   BUF2  1052, 1433, 1542, 1551, 1553, 1600, 1624, 1637, 1652, 1655, 1662, 1667, 1701, 1705, 1710, 1715, 1723
                    1741, 1751, 1755, 2013, 2015, 2032, 2034, 2071, 2115, 2143, 2153, 2155, 2157, 2170, 2201, 2203, 2205
                    2246, 2247, 2252, 2730, 2750, 2754, 3005, 3007, 3051, 3613, 3614, 3622, 3626, 3631, 3632, 3633, 3637
                    3651, 3664, 3720, 3733, 3740, 3756, 3760, 3761, 3771, 3772, 3776, 4011, 4013, 4014, 4024, 4030, 4036
                    4107, 4110, 4133, 4134, 4137, 4146, 4151, 4154, 4164, 4213, 4246, 4250, 4253, 4257, 4262, 4273, 4312
                    4316, 4620, 4622, 4623, 4641, 4655, 4712, 4714, 4716, 4720, 5507, 5514, 5516, 5517, 5522, 5536, 5565
                    6227, 6362, 6371
         14   BUF3   162,  164,  166,  170,  172,  174,  202,  207,  211,  213,  230,  232,  255, 1053, 1054, 1056, 1573
                    1617, 1621, 1623, 1626, 1627, 1633, 1641, 1642, 1646, 1650, 1666, 1671, 1672, 1673, 1675, 1722, 1725
                    1726, 1727, 1733, 1735, 1736, 1743, 1744, 1754, 1767, 1773, 2000, 2010, 2012, 2021, 2025, 2027, 2721
                    5523, 5524, 5530, 5643, 6230, 6231, 6233, 7216, 7227, 7744
       7744   BUF5  3620, 3627, 3635, 3642, 3650, 3652, 3731, 3737, 3746, 3750, 4054, 5466, 5471, 5533, 5547, 5562, 5564
                    5566
      10144   BUF6   132,  134,  136, 2314, 2325, 2327, 2333, 2337, 2346
      10622   BUF7  3517, 3527, 3531, 3535, 4540, 4551, 4556, 4574
       1712   CAN1  1703, 1704, 1711
       1701   CAND  1564
       5723   CAU1  5715, 5720, 5731, 5747, 6030, 6045, 6101
       5724   CAU2  5714, 6017, 6044, 6100
       6020   CAU3  5730, 5736, 6025
       6034   CAU4  5746, 6002, 6042
       6050   CAU5  6027
       1766   CCH1  1757, 1760, 1762, 1764
       1771   CCH2  2035
       2004   CCH3  2002, 2003, 2016, 2030
       2017   CCHC  1763
       2031   CCHL  1765
       1747   CCHR  1566
       2007   CCHZ  1761
       6300   CCL1  6270, 6272
       6306   CCL2  6277
       6315   CCL3  4360, 4362, 6306, 6310, 6320, 6323
       6313   CCL4  6257
       1567   CEOF  1426, 1536, 1560
       4342   CEQ1  4345
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 5     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       4346   CEQ2  4343
       7274   CFLG  2343, 2411, 2413, 2416, 2420, 6113
       1603   CLFP  1562
       3001   CLO1  2772
       2772   CLOS  1377, 2764, 3110, 4323
       6121   CNC1  6114
       2175   CNO1  1570, 2200, 2253
       2237   CNO3  2172, 2207, 2211
       2214   CNO4  2235
       2232   CNO5  2222, 2236
       5124   CO10  5060
       5127   CO11  5066
       5133   CO12  5070
       5136   CO13  5071
       5140   CO14  5054
       5162   CO15  5044
       5164   CO16  5047
       5166   CO17  5053, 5205
       5206   CO18  5057
       5210   CO19  5063
       3465   COP1  5032, 5077, 5102, 5105, 5110, 5117, 5124, 5133, 5140, 5167
       3477   COP2  3466, 3472
       7264   COPY    37,   46,  130, 1466, 1500, 1511, 1515, 1524, 1550, 1607, 1612, 2102, 2107, 2161, 2164, 2714, 2732
                    2752, 2777, 3003, 5535, 5540, 5546, 5551, 5633, 5652
       1667   COR1  1654, 1663
       5240   CPR1  5226, 5231
       5251   CPR2  5234, 5275, 5300, 5317
       5252   CPR3  5233, 5316
       5307   CPR4  5254, 5274
       5322   CPR5  5236, 5246, 5336, 5353, 5365
       5323   CPR6  5235, 5364
       5342   CPR7  5335, 5337, 5347
       5355   CPR8  5325, 5352
       5245   CPR9  5242
       6634   CRC1  6514, 6531, 6635
       6526   CRC2  6534, 6537, 6612, 6624
       6563   CRC3  6556, 6561, 6573
       6543   CRC4  6560, 6562, 6567, 6571
       6601   CRC5  6565
       6625   CRC6    20, 6614, 6621, 6622, 6642, 6651, 6652
       6631   CRC7    21, 6616, 6645
       6604   CRC8  6525, 6575, 6605, 6607, 6637
       6654   CRC9  6640
       5404   CRD1  5411
       5376   CRD2   151
       1602   CRTP  1561
       1713   CSTR  1565
       6364   DBU1  6352, 6367, 6373, 6424
       6374   DBU2  6363, 6372
       3444   DEL1  3457
       3460   DEL2  3454
       3463   DEL3  3425
       7275   DFLG   767, 1015, 1017, 1021, 1131, 1174, 1225
       7034   EFLG  2536, 2602, 2604, 2634, 2641, 2665, 5253, 5324, 6004
       7013   ENDI  6720, 6746, 6776
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 6     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2121   FAIL  2165, 2166, 5553, 5554, 7217, 7226, 7230
       7233   FFLG  1041, 1045, 5502, 5506, 6214, 6220, 7231
       4156   FRE0  4161
       4165   FRE1  4153, 4155
       2422   GC10  2352
       2425   GC11   723, 1342, 2354
       2402   GC12  2356, 2441
       2366   GC13  2360
       2442   GC14  2361, 2373
       2371   GC15  2363, 2365, 2367
       2444   GC16  2364, 2376
       2506   GC17  2370, 2401
       2505   GC81  2447, 2501
       3011   GFGE  7073
       7261   GOOD  4170, 4265, 4271, 5635
       6425   ICOM  2275
       7234   IFLG  1037, 1042, 1044, 1055, 1060, 1434, 1436, 1502, 1512, 5500, 5503, 5505, 5525, 6031, 6052, 6070, 6072
                    6073, 6107, 6212, 6215, 6217, 6232, 6245
         56   INAR    27,   36
       7014   INCI  6725
       6723   INCJ  6734, 6747, 7011
        713   INT1   700,  703
        715   INT2   712
       7237   JFLG  1040, 1435, 1470, 1472, 1475, 1477, 1505, 1507, 1533, 3615, 3645, 3647, 3727, 3743, 3745, 5232, 5260
                    5263, 5265, 5272, 5304, 5501, 5510, 5531, 5555, 5560, 5713, 5732, 5741, 5750, 5761, 6007, 6213, 6221
                    6234, 6246
       4363   LEN1  4340
       1416   MES1  1362, 1413
        263   MES2   122
        764   MES3   757
       6455   MES5  6445
       6460   MES6  6451
       6715   NEWI  7021
       2137   NODE  7221
       1103   NUMB  1123, 1126, 1154
       7231   NZT1  2007, 5127
       7055   OCT3  2674, 2675, 3004, 4252, 4311, 5616, 5617
       7325   OPEN    30, 2705, 5624
       1200   REL1  1205
       1207   REL2  1175, 1214
       1216   REL3  1177
       1220   REL4  1201, 1210
       7236   RFLG   711,  717, 2263, 2342, 3511, 3602, 3671, 3674
       7032   SFLG  3653, 5412, 5574, 5577
       7065   SHFT  2676, 5605, 7066
       2255   SIZ1  2264, 2313, 2317, 2326, 3525, 3530, 4545, 4552, 4554
       2256   SIZ2  2330, 2334, 2340, 3532
       1036   SRC1  1033, 1034
       1041   SRC2  1030
       1057   SRC3  1027
       1067   SRC4  1051
       5512   SUB1  5504
       5570   SUB2  5420, 5521
       5434   SUB3  5467
       3752   SUB4  3604, 3616
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 7     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       5555   SUB5  5532
       5561   SUB6  5552
       5502   SUBC  5431
       5531   SUBF  5430, 5541, 5543
       7030   TFLG   715, 1341, 2353, 2431, 2436, 2437, 2440, 2510, 2511, 2512
       7216   TRA1  1631, 1644, 1665, 1731, 1752
       7217   TRA2  1721, 2011
       7220   TRA3  1577, 2202, 2251
       1335   TRAP  1261, 1265, 1271, 1275, 1301, 1305, 1311, 1315, 1321
       1361   TRP1  1337, 1346
       1360   TRP2  1345, 1355
       7221   TSX1  1766, 2026
       7222   TSX2  1674, 1742
       7223   TSX3  2140, 2174
       7224   TSX4  1622
       7225   TSX5  1620
       7230   TXH1  1772
       7226   TXL1  1777, 2024
       7227   TXL2  2020
       1237   UNK1  1231
       1243   UNK2  1236
       1252   UNK3  1245
       4731   UPD1  4722, 4724, 4735
       4744   UPD2  4730, 4734, 4742, 4746, 4760
       7033   VFLG   720, 1447, 1464, 1530, 2257, 2355, 2442, 2704, 3061, 3067, 3206, 3721, 3724, 4565, 4570, 5435, 5716
                    5721
       4323   WR10  4305
       4271   WR11  4303
       4304   WR12  4221
       4225   WR13  5615
       4306   WRGE  7077
       2254   XCH2  1576
       2241   XCHG  7220
          2   ZCMD  4550
       7232   ZET1  5113
       1147  AANUM  1011
       1012  ABLNK  1010
       7246  ADDR1  1233, 1240, 3402, 3412, 3415, 3431, 3443, 3462, 3712, 4515, 4563, 4632, 4767, 5006, 5225, 5474, 5620
                    6124, 6202, 6241, 6714
       7247  ADDR2   143, 1234, 1237, 1242, 3217, 3403, 3411, 3416, 3434, 3713, 4445, 4447, 4463, 4517, 4564, 4637, 4771
                    5227, 5372, 5374, 5416, 5472, 5622, 6123, 6204, 6242, 6264, 6311, 6332, 6724, 7015
       7250  ADDR3   774, 1127, 1145, 1173, 1216, 1220, 1232, 1241, 1250, 1254
       1073  ALAST  1006
       1126  ANUMB  1005
       1014  APLUS  1002
       1023  ASRCH  1004
       1230  AUNKN  1001
       7243  BBASE   104, 3313, 3342, 3344, 6351
       1420  BLINE  5575, 6137, 6655
       3304  BOPEN   106,  141,  147, 1347, 1356, 2451, 2502, 4456, 4630, 4726, 5004, 5025, 5702, 6516, 6636
       4365  BORCR  4444, 4460, 4602
       7242  BUFER   103, 1343, 2445, 3306, 3323, 3335, 3375, 4624, 4764, 6353, 6512
       4507  CAN01  5073, 6163
       4510  CAN02  4505
          3  CANON  2332
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 8     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       4522  CCAN1  4516, 4520, 4572
       4540  CCAN2  4526, 4530, 4542, 4544
       4573  CCAN3  4557, 4567, 4576
       4554  CCAN4      
       4535  CCAN8  4511
       4546  CCAN9  4510
       6255  CCOLN  4437
       6146  CGLOB  4440
       1537  CILAD  1462, 1506, 1521, 1602, 1604, 1716
       4611  CLIST  4431
       7324  CLOSE    47, 2773
       4761  CMOVE  4415
       6113  CNLCR  4423
       2172  CNODE  7222
       4325  CNVBD  4350, 5334, 5733, 5753, 6301
       6257  COLN0  5075, 6255
       5043  COLST  5042, 6167
       5243  CPR10  5222
       6130  CQUIT  4425
       6574  CRCIC  6511
       5370  CREAD  4417
       6710  CSORT  4432
       6736  CSRT1  6755, 6762, 6774, 7007
       6750  CSRT2  6735, 7006
       7022  CSRT3  6713, 7016
       7010  CSRT4  6750, 6753, 6760, 6772, 7000, 7005
       7012  CSRTT  6765, 6771
       4441  CUNKN  4405
       7272  EXFLG  4044, 4072, 5432, 5453
       2135  FAIL1  2125, 2126
       7270  FMODE  5166, 5201, 5204, 5630
       4153  FREIT  3726, 3742
       2353  GC10R  2422, 2424
       2604  GETBC  1046, 1374, 2521, 4004, 4031, 4103, 4524, 4537, 5250, 5311, 5357, 5512, 5661, 6005, 6011, 6054, 6223
                    6526, 6553, 6572
       3057  GETBN  2450, 4455, 4475, 4627, 5003, 5666, 6515
       2737  GETFC  2677, 3012, 3015, 3043, 4613, 5377
       3106  GETFN  2671, 5604
       3024  GFSIX  7074
       7245  IBASE   110, 1406, 2434, 2513
       7302  ICFLG  6441, 6452, 6510, 6610, 6677, 6701
          5  INESC  3526
       7244  INPUT   107, 1403, 1411, 2530, 2551, 2645, 2650, 2653
       7262  NSCHA  1445, 1611, 1616, 5437
       1124  NUMB1  1104, 1111, 1112, 1120, 1121, 1122
       1133  NUMB2  1137
       1140  NUMB3  1132, 1144
       1145  NUMB4  1133, 1140
       7276  PAFLG  5147, 5154, 5157, 5247
       7277  PLFLG  5150, 5155, 5160, 5245
       7026  PPPMT    44,   53,   54, 6675, 6676
       3502  PRINT  1373, 3667, 4361, 4612, 5241, 6307
       7071  RETRN  2702, 5612, 7072
       2527  SETBC  1035, 1353, 2477, 3662, 3716, 4521, 5237, 5476, 5636, 5677, 6210, 6522
       3401  SETDD  3427, 4513, 4601, 4762, 5224, 5414
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 9     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2670  SETFC   154, 4611, 5375
       3406  SETFL   150, 4443, 4631, 5005, 5371, 5602, 5710, 5712, 6147, 6261, 6331, 6711
       7273  SLCHR  1024, 1441, 1517, 5425, 5463, 6175
       2036  START  7224
       5466  SUB31  5436
       5460  SUB32  5447
       5463  SUB33  5455, 5457, 5461
       5446  SUB34  5440
       3613  SUBP1  3702, 3704, 3730
       3747  SUBP2  3741
       1324  TRAP1  1260, 4502
       1325  TRAP2  1264
       1326  TRAP3  1270
       1327  TRAP4  1274
       1330  TRAP5  1300
       1331  TRAP6  1304
       1332  TRAP7  1310
       1333  TRAP8  1314
       1334  TRAP9  1320
       7035  TYCHA  3115, 3122
       1256  TYPE0     0, 1615, 2105, 2151, 2177, 2316, 3520, 5557
       1260  TYPE1  1070, 1165, 1172
       1264  TYPE2  1153, 4441, 4454, 4472, 4616, 5031, 5665, 6131, 6136, 6350, 6471
       1270  TYPE3  1537
       1274  TYPE4   716,  766, 3205, 5527
       1300  TYPE5  1136, 1141, 1206, 1215, 5675, 5744
       1304  TYPE6  3420
       1310  TYPE7  2565
       1314  TYPE8  2713, 5632
       1320  TYPE9  3074, 3121, 3641, 3762, 3773, 4015, 4025, 4370, 4373, 4375, 4477, 4500, 4501, 5043, 5044, 5045, 5046
                    5050, 5051, 5052, 5053, 5055, 5056, 5057, 5060, 5061, 5062, 5063, 5064, 5065, 5066, 5067, 5070, 5071
                    5072, 5073, 5074, 5075, 5076, 5146, 5153, 5424, 5456, 6134, 6145, 6152, 6166, 6174
       7323  WRFLX   121,  756, 1412, 1421, 6437, 6444
       4203  WRITE  4240, 4321
       1100 ACURNT  1007
        765 ADDRES   127, 1072, 1357, 1415, 4324, 4452, 4457, 4466, 4470, 4503, 4506, 4610, 4614, 4727, 5026, 5217, 5221
                    5407, 5576, 5722, 6122, 6254, 6256, 6326, 6365, 6700, 6706, 7023
       1436 ADVANC  1556, 1610, 1634
       1015 AMINUS  1003
       7326 BUFFER  2716, 5640
       4442 CAPEND  4406
       7025 CAPFLG  2351, 3133, 3135, 5122, 5136
       5741 CAU2.1  5727
       6004 CAU2.2  5745
       6033 CAU3.1  6026
       6047 CAU4.1  6043
       6072 CAU5.1  6053
       6104 CAU5.2  6056, 6057
       6111 CAU5.3  6051, 6061, 6063, 6066, 6071, 6075, 6077, 6103, 6105, 6106
       5664 CAUDIT  4436
       6126 CBLANK  4424
       4453 CBUFER  4407
       4504 CCANON  4435
       4460 CCHANG  4410
       6703 CCOMNT  4434, 6705, 6707
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 10    
                        POST PROCESSOR ASSEMBLY DATA  
                  
       6347 CDBUFR  4427
       4467 CDELET  4411
       6325 CEQALS  4426
       7314 CHNCOM  6143
       4600 CINSRT  4414
       3415 CKWRAP  3430, 4514, 4763, 5415, 5603, 6712
         10 CNVTBL    23,  252,  775, 1106, 1150, 2310, 3027, 3036, 3144, 3537, 4224, 4400, 4737, 5036, 6153, 6544
       5152 CO14.1  5143
       5157 CO14.2  5144
       4400 COMAND  1247, 6127
       1426 COMPIL  1026, 5427, 6177
       5030 COPTON  4430
       7240 CPLFLG  1444, 1446, 1535, 1574, 2722, 5644
       5263 CPR3.1  5257
       5270 CPR3.2  5264
       5274 CPR3.3  5262, 5306
       5277 CPR3.4  5267
       5303 CPR3.5  5277
       5320 CPR4.1  5310, 5313, 5315
       5354 CPR7.1  5350
       5351 CPR7.2  5330
       5366 CPR8.1  5356, 5361, 5363
       5220 CPRINT  4416, 6120, 6125
       6637 CRC1.1  6611
       6677 CRC9.1  6673
       6470 CRNCOM  4412, 6443
       4471 CSTRAP  4433
       5412 CSUBST  4420, 5600
       4615 CUPDAT  4413
       5577 CVERIF  4421
       5601 CWRITE  4422
       3425 DELETE  3725, 4461, 4467, 4571, 4635, 5011, 5047, 5711
       7321 DORMNT   753
          7 EKEDIT  2336
       6327 EQALS0  5064, 6325
       6345 EQALS1  6327
       7271 FBDFLG  5162, 5164, 6442
       7300 FILFLG  1376, 2715, 3000, 3107, 5634
       7337 FILNAM   177,  204, 2707, 2710, 2717, 2720, 2725, 2726, 2745, 2746, 2774, 2775, 3125, 3126, 3161, 3162, 3163
                    3167, 3172, 4173, 4174, 4210, 4211, 5626, 5627, 5641, 5642, 5646, 5647
       2105 FINIS1  2114
       2115 FINIS2  2111
       2117 FINIS3  2100
       2076 FINISH  7225
       7101 FNASUM  3124, 7102
       7306 FORBID  6141, 6507
          0 FREEDT   115
       2473 GC16.1  2463, 2465
       2474 GC16.2  2453, 2454, 2461, 2466, 2470, 2472
       7317 GETBRK   702
       2520 GETBUF  2261
       2257 GETCHA   772, 1012, 1065, 1076, 1101, 1105, 1147, 1222, 1252, 1440, 1514, 2443, 2504, 2517, 2525, 3060, 3066
                    3113, 3136, 3151, 3467, 4366, 4451, 4465, 4473, 4504, 4604, 5421, 5434, 6126, 6132, 6150, 6162, 6172
                    6703
       7311 GETCLC  6504
1     FAP ASSEMBLY LISTING ... ... ...          FILE    0QED   FAP               06/22/70 1518.5 PAGE 11    
                        POST PROCESSOR ASSEMBLY DATA  
                  
       7307 GETCLS  6472, 6474, 6476, 6500, 6502
       7315 GETCOM   123,  175,  215
       7304 GETIME  4621
       7320 GETMEM    56,  725
       3022 GFASCI  7072
       3032 GFTWLV  7075
       1363 ILLADD  1257, 1263, 1267, 1273, 1277, 1303, 1307, 1313, 1317, 1323
          1 INITDT    24
       3177 INSERT   144, 3722, 4450, 4464, 4566, 4603, 4723, 5376, 5717
       7235 INTFLG   674,  762,  765, 1340, 1363, 2467, 3204, 5526
        674 INTRUP   120,  705
       4340 LENGTH  6344, 6423
        724 MORMEM  2061, 2227, 2557, 3240, 3247, 3327, 3334, 3364
       7313 NEXCOM  6623, 6653
       1540 OPONST  1427, 1473, 1476, 1503, 1510, 1513, 1534, 1555, 1606, 1636, 1677, 1714, 1745, 1747, 2005
          6 OUTESC  2324
       7305 PERMIT    52, 6674
       7301 PMTFLG    55, 6140, 6506, 6672
       5222 PRINT0  5054, 5220
       7322 RDFLXA  2266, 3672
       7327 RDWAIT    40, 2724, 2744
       7241 RECLEV   113, 1067, 1371, 1400, 1402, 2260, 2404, 2433, 2452, 2506, 2516, 2560, 2566, 2642, 2644
      11300 SCHARS  1613, 4132, 5441
       7334 SETBCD  6142, 6436
       7316 SETBRK   117,  704
       7312 SETCLC  6620, 6650, 6671
       7310 SETCLS  6603, 6613, 6615, 6641, 6644, 6656, 6660, 6662, 6664, 6666
       7335 SETFUL   116,  701, 1375, 6453, 6654
       7336 SETMEM    72,  737
          4 SETOPS  5212
       4746 SPREAD  4642, 4713, 4715, 4717, 4721
       2056 START0  2046
       2065 START1  2041
       2074 START2  2040
       2071 START3  2052
       2047 START4  2055
       7263 SUBFLG  1025, 2036, 2076, 2121, 2206, 5426, 6176
      11312 SYLBUF  2757, 2761
       7267 TRCFLG  1364, 5206, 5210
       7331 TRFILE  5645
       7303 WHOAMI    15, 4617
       4307 WRASCI  7076
       7333 WRFLXA  3554, 3577
       4167 WRITE1  4300, 4304
       7332 WRMESS  6446
       4220 WRSXTW  7100, 7101
       7330 WRWAIT  4172, 4207
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1                                                                                06/22/70 1519.9 PAGE 1     
                  
                       00356         ENTRY   SETOPS   
                              *      SETOPS IS CALLED:
                              *      TSX     SETOPS,4 
                              *      PZE     ESCAPE   
                              *      PZE     ERASE    
                              *      PZE     WORD     
                              *      PZE     KILL     
                              *     
                              *      ESCAPE, ERASE, WORD, AND KILL ARE LOCATIONS CONTAINING     
                              *      ALTERNATE CHARACTERS FOR BOX-C, BOX-E, BOX-W AND BOX-K RESP.     
                              *     
                       00204         ENTRY   EKEDIT   
                              *     
                              *      EKEDIT IS CALLED:
                              *      TSX     EKEDIT,4 
                              *      PZE     BUF+BUFSIZ-1   
                              *      PZE     CHRCNT   
                              *      PZE     BUFSIZ   
                              *     
                              *      BUF+BUFSIZ-1 IS THE HIGHEST CORE LOCATION OF   
                              *      AN ARRAY. THIS LOCATION CONTAINS THE FIRST CHARACTER.
                              *      CHRCNT IS THE CHARACTER COUNT. THE LAST CHARACTER MUST     
                              *      BE A CARRIAGE RETURN.  
                              *      BUFSIZ IS THE SIZE OF THE BUFFER.  
                              *     
                              *      ERASE AND KILL EDITING WILL BE PERFORMED ON THE CHARACTERS 
                              *      IN THE BUFFER. ON RETURN, THE BUFFER WILL CONTAIN THE EDITED     
                              *      CHARACTERS. CHRCNT WILL CONTAIN THE NEW COUNT. 
                              *     
                       00003         ENTRY   CANON    
                              *     
                              *      CANON IS CALLED WITH THE SAME PARAMETERS AS EKEDIT.  
                              *     
                              *      ON RETURN, THE BUFFER WILL CONTAIN THE CANONICALIZED LINE. 
                              *      CHRCNT WILL CONTAIN THE SIZE OF THIS LINE.     
                              *     
                              TEST   MACRO   X  
                                     IFF     TFLG,1,1 
                                     TXH     $TYPE0,X,300   
                                     END     TEST     
                              *     
                  
        TRANSFER VECTOR 
      00000  637047250060     TYPE0 
                  
        LINKAGE DIRECTOR
      00001  000000000000     
      00002  622563464762     
                  
                       00001  TFLG   SET     1  
                              *     
      00003  0636 00 1 00175  CANON  SCA     XR,1     
      00004  0636 00 2 00176         SCA     XR+1,2   
      00005  0636 00 3 00177         SCA     XR+2,3   
      00006  0636 00 4 00200         SCA     XR+3,4   
      00007 -0500 00 4 00001         CAL     1,4
1                                                                                06/22/70 1519.9 PAGE 2     
                  
      00010  0621 00 0 00016         STA     GET
      00011  0621 00 0 00071         STA     GET1     
      00012  0621 00 0 00042         STA     PUT
      00013  0774 00 2 00000         AXT     0,2
      00014  0774 00 3 00000         AXT     0,3
                              *     
                              *      PASS1 WILL PLACE THE VALUE OF THE CHARACTER    
                              *      POSITION IN THE DECREMENT OF ALL CHARACTERS. BACK SPACE,   
                              *      RETURN, AND CARRIAGE RETURN ARE REMOVED. 
                              *     
      00015  0774 00 4 00000         AXT     0,4
      00016 -0500 00 2 00000  GET    CAL     **,2     
      00017                          TEST    3  
      00020  1 00001 2 00021         TXI     *+1,2,1  
      00021                          TEST    2  
      00022 -0340 00 0 00377         LAS     =O12          CARRIAGE RETURN    
      00023  0020 00 0 00033         TRA     G1 
      00024  0020 00 0 00046         TRA     PAS2     
      00025 -0340 00 0 00375         LAS     =O10          BACK SPACE   
      00026  1 00001 4 00042         TXI     PUT,4,1  
      00027  0020 00 0 00031         TRA     *+2
      00030  1 00001 4 00042         TXI     PUT,4,1  
      00031 -3 00000 4 00016         TXL     GET,4,0  
      00032  1 77777 4 00016         TXI     GET,4,-1 
      00033 -0340 00 0 00400  G1     LAS     =O15          RETURN 
      00034  1 00001 4 00037         TXI     *+3,4,1  
      00035  0020 00 0 00015         TRA     GET-1    
      00036  1 00001 4 00042         TXI     PUT,4,1  
      00037 -0340 00 0 00405         LAS     =O40          SPACE  
      00040  0020 00 0 00042         TRA     PUT
      00041 -0500 00 0 00406         CAL     =O777    
      00042  0602 00 3 00000  PUT    SLW     **,3     
      00043 -0754 00 4 00000         PXD     ,4 
      00044 -0602 60 0 00042         ORS*    PUT
      00045  1 00001 3 00016         TXI     GET,3,1  
                              *     
                              *      PASS 2 WILL SORT THE CHARACTERS IN ORDER 
                              *      WHILE MOVING THEM TO THE END OF THE BUFFER     
                              *     
      00046 -0500 00 0 00407  PAS2   CAL     =O77777077777  
      00047  0522 00 0 00042         XEC     PUT
      00050  1 00001 3 00051         TXI     *+1,3,1  
      00051  0522 00 0 00042         XEC     PUT
      00052                          TEST    3  
      00053  0754 00 3 00000         PXA     ,3 
      00054  0535 00 4 00200         LAC     XR+3,4   
      00055  0402 60 4 00003         SUB*    3,4
      00056  0734 00 3 00000         PAX     ,3 
      00057  0634 00 3 00111         SXA     PAS3,3   
      00060  0774 00 2 00000         AXT     0,2
      00061  0754 00 2 00000  P2.1   PXA     ,2 
      00062  0734 00 4 00000         PAX     ,4 
      00063  1 00001 4 00064         TXI     *+1,4,1  
      00064                          TEST    3  
      00065  0522 00 0 00016         XEC     GET
      00066 -0340 00 0 00407         LAS     =O77777077777  
1                                                                                06/22/70 1519.9 PAGE 3     
                  
      00067  0020 00 0 00071         TRA     *+2
      00070  0020 00 0 00111         TRA     PAS3     
      00071 -0500 00 4 00000  GET1   CAL     **,4     
      00072                          TEST    4  
      00073 -0340 00 0 00407         LAS     =O77777077777  
      00074  0020 00 0 00076         TRA     *+2
      00075  0020 00 0 00105         TRA     P2.2     
      00076 -0340 60 0 00016         LAS*    GET
      00077  1 00001 4 00071         TXI     GET1,4,1 
      00100  1 00001 4 00071         TXI     GET1,4,1 
      00101  0560 60 0 00016         LDQ*    GET
      00102  0602 60 0 00016         SLW*    GET
      00103 -0600 60 0 00071         STQ*    GET1     
      00104  1 00001 4 00071         TXI     GET1,4,1 
      00105  0522 00 0 00016  P2.2   XEC     GET
      00106  0522 00 0 00042         XEC     PUT
      00107  1 00001 2 00110         TXI     *+1,2,1  
      00110  1 00001 3 00061         TXI     P2.1,3,1 
                              *     
                              *      PASS 3 WILL MOVE THE CHARACTERS BACK TO THE TOP
                              *      OF THE BUFFER WHILE INSERTING NEEDED BACK SPACES.    
                              *      OVER-STRUCK SPACES ARE REMOVED ALSO. THE CARRIAGE RETURN   
                              *      IS REINSTATED AT THE END     
                              *     
      00111  0774 00 2 00000  PAS3   AXT     **,2     
      00112  0522 00 0 00042         XEC     PUT
      00113  0600 00 0 00203         STZ     POSIT    
      00114  0774 00 3 00000         AXT     0,3
      00115  0522 00 0 00016  P3.1   XEC     GET
      00116                          TEST    3  
      00117 -0340 00 0 00407         LAS     =O77777077777  
      00120  0020 00 0 00122         TRA     *+2
      00121  0020 00 0 00157         TRA     P3.4     
      00122  0771 00 0 00022         ARS     18 
      00123 -0340 00 0 00203         LAS     POSIT    
      00124  0020 00 0 00126         TRA     *+2
      00125  0020 00 0 00137         TRA     P3.2     
      00126  0602 00 0 00203         SLW     POSIT    
      00127  0522 00 0 00016         XEC     GET
      00130 -0320 00 0 00406         ANA     =O777    
      00131 -0340 00 0 00406         LAS     =O777    
      00132  1 00001 2 00135         TXI     *+3,2,1  
      00133 -0500 00 0 00405         CAL     =O40          SPACE  
      00134  1 00001 2 00135         TXI     *+1,2,1  
      00135  0522 00 0 00042         XEC     PUT
      00136  1 00001 3 00115         TXI     P3.1,3,1 
      00137 -0500 00 0 00375  P3.2   CAL     =O10          BACK SPACE   
      00140  0522 00 0 00042         XEC     PUT
      00141  0522 00 0 00016         XEC     GET
      00142 -0320 00 0 00406         ANA     =O777    
      00143  1 77777 3 00144         TXI     *+1,3,-1 
      00144 -0340 60 0 00042         LAS*    PUT
      00145  1 00002 3 00150         TXI     *+3,3,2  
      00146  1 00001 3 00156         TXI     P3.3,3,1 
      00147  1 00002 3 00150         TXI     *+1,3,2  
      00150 -0340 00 0 00406         LAS     =O777    
1                                                                                06/22/70 1519.9 PAGE 4     
                  
      00151  1 00001 2 00154         TXI     *+3,2,1  
      00152  1 77777 3 00156         TXI     P3.3,3,-1
      00153  1 00001 2 00154         TXI     *+1,2,1  
      00154  0522 00 0 00042         XEC     PUT
      00155  1 00001 3 00115         TXI     P3.1,3,1 
      00156  1 00001 2 00115  P3.3   TXI     P3.1,2,1 
      00157 -3 00000 3 00171  P3.4   TXL     P3.5,3,0 
      00160  1 77777 3 00161         TXI     *+1,3,-1 
      00161 -0500 60 0 00042         CAL*    PUT
      00162 -0340 00 0 00405         LAS     =O40          SPACE  
      00163  1 00001 3 00171         TXI     P3.5,3,1 
      00164  0020 00 0 00157         TRA     P3.4     
      00165 -0340 00 0 00376         LAS     =O11          TAB    
      00166  1 00001 3 00171         TXI     P3.5,3,1 
      00167  0020 00 0 00157         TRA     P3.4     
      00170  1 00001 3 00171         TXI     P3.5,3,1 
      00171 -0500 00 0 00377  P3.5   CAL     =O12          CARRIAGE RETURN    
      00172  0522 00 0 00042         XEC     PUT
      00173  1 00001 3 00174         TXI     *+1,3,1  
      00174  0754 00 3 00000         PXA     ,3 
      00175 -0774 00 1 00000  XR     AXC     **,1     
      00176 -0774 00 2 00000         AXC     **,2     
      00177 -0774 00 3 00000         AXC     **,3     
      00200 -0774 00 4 00000         AXC     **,4     
      00201  0602 60 4 00002         SLW*    2,4
      00202  0020 00 4 00004         TRA     4,4
                              *     
                              *     
      00203  0 00000 0 00000  POSIT 
      00204  0636 00 1 00175  EKEDIT SCA     XR,1     
      00205  0636 00 2 00176         SCA     XR+1,2   
      00206  0636 00 3 00177         SCA     XR+2,3   
      00207  0636 00 4 00200         SCA     XR+3,4   
      00210 -0500 00 4 00001         CAL     1,4
      00211  0621 00 0 00217         STA     EGET     
      00212  0621 00 0 00253         STA     EPUT     
      00213  0400 00 0 00374         ADD     =1 
      00214  0621 00 0 00260         STA     EGET1    
      00215  0774 00 2 00000         AXT     0,2
      00216  0774 00 3 00000         AXT     0,3
      00217 -0500 00 2 00000  EGET   CAL     **,2     
      00220                          TEST    3  
      00221  1 00001 2 00222         TXI     *+1,2,1  
      00222 -0340 00 0 00401         LAS     =O31     
      00223  0020 00 0 00225         TRA     *+2
      00224  0020 00 0 00352         TRA     ABS
      00225 -0340 00 0 00372         LAS     V  
      00226  0020 00 0 00230         TRA     *+2
      00227  0020 00 0 00352         TRA     ABS
      00230 -0340 00 0 00403         LAS     =O35          (KIL)  
      00231  0020 00 0 00237         TRA     EK1
      00232  0020 00 0 00276         TRA     KILL     
      00233 -0340 00 0 00402         LAS     =O32          (EAS)  
      00234  0020 00 0 00242         TRA     EK2
      00235  0020 00 0 00261         TRA     ERAS     
      00236  0020 00 0 00242         TRA     EK2
1                                                                                06/22/70 1519.9 PAGE 5     
                  
      00237 -0340 00 0 00404  EK1    LAS     =O37          (WRD)  
      00240  0020 00 0 00242         TRA     EK2
      00241  0020 00 0 00264         TRA     WORD     
      00242 -0340 00 0 00370  EK2    LAS     E  
      00243  0020 00 0 00245         TRA     *+2
      00244  0020 00 0 00261         TRA     ERAS     
      00245 -0340 00 0 00371         LAS     W  
      00246  0020 00 0 00250         TRA     *+2
      00247  0020 00 0 00264         TRA     WORD     
      00250 -0340 00 0 00367         LAS     K  
      00251  0020 00 0 00253         TRA     *+2
      00252  0020 00 0 00276         TRA     KILL     
      00253  0602 00 3 00000  EPUT   SLW     **,3     
      00254 -0340 00 0 00377         LAS     =O12          CARRIAGE RETURN    
      00255  1 00001 3 00217         TXI     EGET,3,1 
      00256  1 00001 3 00174         TXI     XR-1,3,1 
      00257  1 00001 3 00217         TXI     EGET,3,1 
      00260 -0500 00 3 00000  EGET1  CAL     **,3     
                              *     
      00261  0074 00 4 00302  ERAS   TSX     FOR,4    
      00262  0074 00 4 00312         TSX     BAK,4    
      00263  0020 00 0 00217         TRA     EGET     
                              *     
      00264  0074 00 4 00302  WORD   TSX     FOR,4    
      00265  0074 00 4 00312         TSX     BAK,4    
      00266  0522 00 0 00260         XEC     EGET1    
      00267 -0340 00 0 00405         LAS     =O40          SPACE  
      00270  0020 00 0 00264         TRA     WORD     
      00271  0020 00 0 00217         TRA     EGET     
      00272 -0340 00 0 00376         LAS     =O11          TAB    
      00273  0020 00 0 00264         TRA     WORD     
      00274  0020 00 0 00217         TRA     EGET     
      00275  0020 00 0 00264         TRA     WORD     
                              *     
      00276  0074 00 4 00302  KILL   TSX     FOR,4    
      00277  0074 00 4 00312         TSX     BAK,4    
      00300  0774 00 3 00000         AXT     0,3
      00301  0020 00 0 00217         TRA     EGET     
                              *     
      00302  0600 00 0 00373  FOR    STZ     MFLG     
      00303  0522 00 0 00217         XEC     EGET     
      00304 -0340 00 0 00375         LAS     =O10          BACK SPACE   
      00305  0020 00 4 00001         TRA     1,4
      00306  0020 00 0 00310         TRA     *+2
      00307  0020 00 4 00001         TRA     1,4
      00310 -0625 00 0 00373         STL     MFLG     
      00311  1 00002 2 00303         TXI     FOR+1,2,2
                              *     
      00312 -3 00000 3 00217  BAK    TXL     EGET,3,0 
      00313  0522 00 0 00260         XEC     EGET1    
      00314 -0340 00 0 00375         LAS     =O10          BACK SPACE   
      00315  0020 00 0 00322         TRA     BAK1     
      00316  0020 00 0 00320         TRA     *+2
      00317  0020 00 0 00322         TRA     BAK1     
      00320 -0625 00 0 00373         STL     MFLG     
      00321  1 77776 3 00312         TXI     BAK,3,-2 
1                                                                                06/22/70 1519.9 PAGE 6     
                  
      00322  0520 00 0 00373  BAK1   ZET     MFLG     
      00323  0020 00 4 00001         TRA     1,4
      00324  1 77777 3 00325         TXI     *+1,3,-1 
      00325 -0340 00 0 00405         LAS     =O40          SPACE  
      00326  0020 00 0 00333         TRA     BAK3     
      00327  0020 00 0 00341         TRA     BAK2     
      00330 -0340 00 0 00376         LAS     =O11          TAB    
      00331  0020 00 0 00333         TRA     BAK3     
      00332  0020 00 0 00341         TRA     BAK2     
      00333 -3 00000 3 00217  BAK3   TXL     EGET,3,0 
      00334  0522 00 0 00260         XEC     EGET1    
      00335 -0340 00 0 00375         LAS     =O10          BACK SPACE   
      00336  0020 00 4 00001         TRA     1,4
      00337  1 77776 3 00333         TXI     BAK3,3,-2
      00340  0020 00 4 00001         TRA     1,4
      00341 -3 00000 3 00217  BAK2   TXL     EGET,3,0 
      00342  0522 00 0 00260         XEC     EGET1    
      00343 -0340 00 0 00405         LAS     =O40          SPACE  
      00344  0020 00 4 00001         TRA     1,4
      00345  1 77777 3 00341         TXI     BAK2,3,-1
      00346 -0340 00 0 00376         LAS     =O11          TAB    
      00347  0020 00 4 00001         TRA     1,4
      00350  1 77777 3 00341         TXI     BAK2,3,-1
      00351  0020 00 4 00001         TRA     1,4
                              *     
      00352  0522 00 0 00253  ABS    XEC     EPUT     
      00353  1 00001 3 00354         TXI     *+1,3,1  
      00354  0522 00 0 00217         XEC     EGET     
      00355  1 00001 2 00253         TXI     EPUT,2,1 
                              *     
      00356 -0500 60 4 00001  SETOPS CAL*    1,4
      00357  0602 00 0 00372         SLW     V  
      00360 -0500 60 4 00002         CAL*    2,4
      00361  0602 00 0 00370         SLW     E  
      00362 -0500 60 4 00003         CAL*    3,4
      00363  0602 00 0 00371         SLW     W  
      00364 -0500 60 4 00004         CAL*    4,4
      00365  0602 00 0 00367         SLW     K  
      00366  0020 00 4 00005         TRA     5,4
                              *     
      00367 +000000000100     K      OCT     100           COMMERCIAL AT
      00370 +000000000043     E      OCT     43            NUMBER 
      00371 +000000000200     W      OCT     200           NOT PRE-DEFINED    
      00372 +000000000200     V      OCT     200           NOT PRE-DEFINED    
      00373  0 00000 0 00000  MFLG  
                                     END  
                  
        LITERALS  
      00374  000000000001     
      00375  000000000010     
      00376  000000000011     
      00377  000000000012     
      00400  000000000015     
      00401  000000000031     
      00402  000000000032     
      00403  000000000035     
1                                                                                06/22/70 1519.9 PAGE 7     
                  
      00404  000000000037     
      00405  000000000040     
      00406  000000000777     
      00407  077777077777     
1                                                                                06/22/70 1519.9 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        410 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        370      E   242,  361
        367      K   250,  365
        372      V   225,  357
        371      W   245,  363
         33     G1    23
        175     XR     3,    4,    5,    6,   54,  204,  205,  206,  207,  256
        352    ABS   224,  227
        312    BAK   262,  265,  277,  321
        237    EK1   231
        242    EK2   234,  236,  240
        302    FOR   261,  264,  276,  311
         16    GET    10,   31,   32,   35,   45,   65,   76,  101,  102,  105,  115,  127,  141
         42    PUT    12,   26,   30,   36,   40,   44,   47,   51,  106,  112,  135,  140,  144,  154,  161,  172
        322   BAK1   315,  317
        341   BAK2   327,  332,  345,  350
        333   BAK3   326,  331,  337
        217   EGET   211,  255,  257,  263,  271,  274,  301,  303,  312,  333,  341,  354
        253   EPUT   212,  352,  355
        261   ERAS   235,  244
         71   GET1    11,   77,  100,  103,  104
        276   KILL   232,  252
        373   MFLG   302,  310,  320,  322
         61   P2.1   110
        105   P2.2    75
        115   P3.1   136,  155,  156
        137   P3.2   125
        156   P3.3   146,  152
        157   P3.4   121,  164,  167
        171   P3.5   157,  163,  166,  170
         46   PAS2    24
        111   PAS3    57,   70
          1   TFLG     3
        264   WORD   241,  247,  270,  273,  275
          3  CANON     0
        260  EGET1   214,  266,  313,  334,  342
        203  POSIT   113,  123,  126
          0  TYPE0    17,   21,   52,   64,   72,  116,  220
        204 EKEDIT     0
        356 SETOPS     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1                                                                                06/22/70 1520.3 PAGE 1     
                  
                       00400         ENTRY   DEVTBL   
                              *      DEVTBL IS CALLED:
                              *      TSX     DEVTBL,4 
                              *      PZE     DEVM37   
                              *      PZE     DEV50C   
                              *      PZE     DEV50M   
                              *      PZE     DEVM35   
                              *     
                              *      ALL PARAMETERS ARE BASE LOCATIONS OF 128 WORD DEVICE 
                              *      TABLES. THE DEVICE TABLES ARE OUTSIDE THE ESCAPE     
                              *      ROUTINE SINCE THEY ARE ONLY REFERENCED ONCE. AFTER   
                              *      THE CALL TO DEVTBL, THE SPACE IN THE DEVICE TABLES   
                              *      CAN BE USED FOR OTHER THINGS.
                              *     
                              *      DEVTBL CALLS WHOAMI TO DETERMINE THE USERS DEVICE. IT THEN 
                              *      COPIES THE CORRECT DEVICE TABLE INTO ITS INTERNAL DEVICE   
                              *      TABLE. THIS DEVICE TABLE IS LOCATED AT DEVTBL. THIS MEANS  
                              *      THAT DEVTBL CAN ONLY BE CALLED ONCE. AFTER THAT THE  
                              *      ENTRY DEVTBL IS THE BASE LOCATION OF THE CORRECT DEVICE TABLE.   
                              *     
                       00003         ENTRY   OUTESC   
                              *     
                              *      OUTESC IS CALLED:
                              *      TSX     OUTESC,4 
                              *      PZE     IBUF+IBSIZ-1   
                              *      PZE     ICCNT    
                              *      PZE     OBUF+OBSIZ-1   
                              *      PZE     OCCNT    
                              *      PZE     OBSIZ    
                              *     
                              *      IBUF CONTAINS THE CHARACTERS THAT ARE TO HAVE ESCAPES
                              *      REMOVED. OBUF WILL CONTAIN THE CHARACTERS WITH 
                              *      THE ESCAPES REMOVED. OBUF AND IBUF CAN BE THE SAME.  
                              *      ICCNT CONTAINS THE NUMBER OF CHARACTERS IN IBUF.     
                              *      OCCNT IS SET TO THE NUMBER OF CHARACTERS IN OBUF.    
                              *      THE LAST CHARACTER IN IBUF MUST BE A CARRIAGE RETURN.
                              *     
                       00157         ENTRY   INESC    
                              *     
                              *      INESC IS CALLED THE SAME WAY AS OUTESC.  
                              *     
                              *      INESC WILL PUT ESCAPES IN OBUF AND SET OCCNT.  
                              *     
                              *      THE DEVICE TABLE MACRO FOLLOWS:    
                              *DEVTBL        MACRO         A,B,C,D,E,F  
                              *      VFD     O8/A,O8/B,2/C,2/D,O8/E,O8/F
                              *      END     DEVTBL   
                              *     
                              *      THE DEVICE TABLE DRIVES THE ESCAPE PROGRAM     
                              *      THE FORM OF THE DEVICE TABLE IS:   
                              *      A,B,C
                              *     
                              *      A IS 8 BITS VALUE:     
                              *              0-177 STRICT CONVERSION OF CHARACTERS  
                              *              200 NOT ALLOWED
                              *              201 CMFLEX TO ESCAPE NEXT  
1                                                                                06/22/70 1520.3 PAGE 2     
                  
                              *              202 ALPHABET FOR M35,33 TO BE CASED    
                              *              203 CARRIAGE RETURN  
                              *     
                              *      B IS 8 BITS: VALUE     
                              *              0-177 STRICT CONVERSION OF ESC CHARS   
                              *              200 NOT ALLOWED
                              *              201 CFLEX
                              *              202 LOWER SHIFT
                              *              203 UPPER SHIFT
                              *              204 0-7 FOR OCTAL ESC
                              *     
                              *      C IS 2 BITS: VALUE     
                              *              0 ( FOR LBK    
                              *              1 ) FOR RBK    
                              *              2 0-9 FOR LOCAL SHIFT
                              *              3 UNKNOWN
                              *     
                              TEST   MACRO   X  
                                     IFF     TFLG,1,1 
                                     TXH     $TYPE0,X,300   
                                     END     TEST     
                              *     
                  
        TRANSFER VECTOR 
      00000  637047250060     TYPE0 
                  
        LINKAGE DIRECTOR
      00001  000000000000     
      00002  242565632243     
                  
                       00001  TFLG   SET     1  
                              *     
      00003  0636 00 1 00037  OUTESC SCA     XR,1     
      00004  0636 00 2 00040         SCA     XR+1,2   
      00005  0636 00 3 00041         SCA     XR+2,3   
      00006  0636 00 4 00042         SCA     XR+3,4   
      00007 -0500 00 4 00001         CAL     1,4
      00010  0621 00 0 00015         STA     GET
      00011 -0500 00 4 00003         CAL     3,4
      00012  0621 00 0 00026         STA     PUT
      00013  0774 00 2 00000         AXT     0,2           GET COUNT    
      00014  0774 00 3 00000         AXT     0,3           PUT COUNT    
                              *     
      00015 -0500 00 2 00000  GET    CAL     **,2     
      00016                          TEST    3  
      00017  1 00001 2 00020         TXI     *+1,2,1  
      00020  0737 00 1 00000         PAC     ,1 
      00021 -0500 00 1 00400         CAL     DEVTBL,1 
      00022  0771 00 0 00034         ARS     28 
      00023 -0340 00 0 00635         LAS     =O200    
      00024  0737 00 4 00000         PAC     ,4 
      00025  0020 00 4 77627         TRA     SWITCH-129,4   
      00026  0602 00 3 00000  PUT    SLW     **,3     
      00027  1 00001 3 00015         TXI     GET,3,1  
                              *     
      00030  0020 00 0 00062  SWITCH TRA     CMFLX    
1                                                                                06/22/70 1520.3 PAGE 3     
                  
      00031  0020 00 0 00045         TRA     ALPH     
      00032  0020 00 0 00033         TRA     CRET     
                              *     
      00033  0756 00 1 00000  CRET   PCA     ,1 
      00034  0522 00 0 00026         XEC     PUT
      00035  1 00001 3 00036         TXI     *+1,3,1  
      00036  0754 00 3 00000         PXA     ,3 
      00037 -0774 00 1 00000  XR     AXC     **,1     
      00040 -0774 00 2 00000         AXC     **,2     
      00041 -0774 00 3 00000         AXC     **,3     
      00042 -0774 00 4 00000         AXC     **,4     
      00043  0602 60 4 00004         SLW*    4,4
      00044  0020 00 4 00006         TRA     6,4
                              *     
      00045  0520 00 0 00607  ALPH   ZET     FLIP     
      00046  0020 00 0 00053         TRA     ALP1     
      00047  0756 00 1 00000         PCA     ,1 
      00050 -0520 00 0 00606         NZT     CAPFLG   
      00051  0400 00 0 00624         ADD     =O40     
      00052  0020 00 0 00026         TRA     PUT
      00053  0500 00 0 00607  ALP1   CLA     FLIP     
      00054  0402 00 0 00612         SUB     =1 
      00055  0601 00 0 00607         STO     FLIP     
      00056  0756 00 1 00000         PCA     ,1 
      00057  0520 00 0 00606         ZET     CAPFLG   
      00060  0400 00 0 00624         ADD     =O40     
      00061  0020 00 0 00026         TRA     PUT
                              *     
      00062  0522 00 0 00015  CMFLX  XEC     GET
      00063  0737 00 1 00000         PAC     ,1 
      00064 -0500 00 1 00400         CAL     DEVTBL,1 
      00065  0771 00 0 00024         ARS     20 
      00066 -0320 00 0 00637         ANA     =O377    
      00067 -0340 00 0 00635         LAS     =O200    
      00070  0737 00 4 00000         PAC     ,4 
      00071  0020 00 4 77675         TRA     SW1-129,4
      00072 -0340 00 0 00623         LAS     =O12     
      00073  1 00001 2 00026         TXI     PUT,2,1  
      00074  0020 00 0 00016         TRA     GET+1    
      00075  1 00001 2 00026         TXI     PUT,2,1  
                              *     
      00076  1 00001 2 00137  SW1    TXI     CFXCFX,2,1     
      00077  0020 00 0 00102         TRA     CLOWER   
      00100  0020 00 0 00104         TRA     CUPPER   
      00101  1 00001 2 00106         TXI     COCTL,2,1
                              *     
      00102  0600 00 0 00606  CLOWER STZ     CAPFLG   
      00103  1 00001 2 00015         TXI     GET,2,1  
      00104 -0625 00 0 00606  CUPPER STL     CAPFLG   
      00105  1 00001 2 00015         TXI     GET,2,1  
                              *     
      00106  0522 00 0 00015  COCTL  XEC     GET
      00107  1 00060 1 00110         TXI     *+1,1,48 
      00110  0074 00 4 00115         TSX     CHECK,4  
      00111  0522 00 0 00015         XEC     GET
      00112  0074 00 4 00115         TSX     CHECK,4  
1                                                                                06/22/70 1520.3 PAGE 4     
                  
      00113 -0320 00 0 00634         ANA     =O177    
      00114  0020 00 0 00026         TRA     PUT
      00115  1 77777 4 00116  CHECK  TXI     *+1,4,-1 
      00116  0636 00 4 00134         SCA     CH1,4    
      00117 -0340 00 0 00627         LAS     =O70     
      00120  0020 00 0 00135         TRA     CH2
      00121  0020 00 0 00135         TRA     CH2
      00122 -0340 00 0 00625         LAS     =O57     
      00123  0020 00 0 00126         TRA     *+3
      00124  0020 00 0 00135         TRA     CH2
      00125  0020 00 0 00135         TRA     CH2
      00126  0402 00 0 00626         SUB     =O60     
      00127  0602 00 0 00375         SLW     T1 
      00130  0756 00 1 00000         PCA     ,1 
      00131  0767 00 0 00003         ALS     3  
      00132 -0501 00 0 00375         ORA     T1 
      00133  0737 00 1 00000         PAC     ,1 
      00134  1 00001 2 00000  CH1    TXI     **,2,1   
      00135  0756 00 1 00000  CH2    PCA     ,1 
      00136  0020 00 0 00026         TRA     PUT
                              *     
      00137  0522 00 0 00015  CFXCFX XEC     GET
      00140  0737 00 1 00000         PAC     ,1 
      00141 -0500 00 1 00400         CAL     DEVTBL,1 
      00142  0771 00 0 00022         ARS     18 
      00143 -0320 00 0 00614         ANA     =O3
      00144  0737 00 4 00000         PAC     ,4 
      00145  0522 00 4 00147         XEC     SW2,4    
      00146  1 00001 2 00026         TXI     PUT,2,1  
                              *     
      00147 -0500 00 0 00630  SW2    CAL     =O133    
      00150 -0500 00 0 00631         CAL     =O135    
      00151  1 00060 1 00155         TXI     FLIPIT,1,48    
      00152  0020 00 0 00153         TRA     *+1           UNK    
      00153 -0500 00 0 00376         CAL     ESC           BACK SLASH   
      00154  0020 00 0 00026         TRA     PUT
                              *     
      00155  0636 00 1 00607  FLIPIT SCA     FLIP,1   
      00156  1 00001 2 00015         TXI     GET,2,1  
                              *     
                              *     
                              *     
                              *      INESC HAS 18 BITS IN DEVTBL OF FORM D,E,F
                              *     
                              *     
                              *      D IS 2 BITS NOT USED   
                              *     
                              *      E IS 8 BITS VALUE:     
                              *              0-177 STRICT CONVERSION IF NEED ESC    
                              *     
                              *      F IS 8 BITS VALUE:     
                              *              0-177 STRICT CONVERSION    
                              *              200 NOT ALLOWED
                              *              201 ESCAPED FROM D   
                              *              202 UPPER CASE ALPHABETIC ON M33,35    
                              *              203 LOWER CASE ALPHABETIC ON M33,35    
1                                                                                06/22/70 1520.3 PAGE 5     
                  
                              *              204 OCTAL ESCAPE     
                              *              205 CARRIAGE RETURN  
                              *              206 SPACE
                              *              207 TAB  
                              *              210 NONPRINTING CHARS
                              *              211 BACKSPACE  
                              *     
      00157  0636 00 1 00037  INESC  SCA     XR,1     
      00160  0636 00 2 00040         SCA     XR+1,2   
      00161  0636 00 3 00041         SCA     XR+2,3   
      00162  0636 00 4 00042         SCA     XR+3,4   
      00163 -0500 00 4 00001         CAL     1,4
      00164  0621 00 0 00015         STA     GET
      00165 -0500 00 4 00003         CAL     3,4
      00166  0621 00 0 00026         STA     PUT
      00167 -0500 60 4 00005         CAL*    5,4
      00170  0734 00 3 00000         PAX     ,3 
      00171 -0500 60 4 00002         CAL*    2,4
      00172  0734 00 2 00000         PAX     ,2 
      00173  0600 00 0 00374         STZ     BFLG     
      00174  0500 00 0 00612         CLA     =1 
      00175  0601 00 0 00373         STO     POSIT    
      00176  1 77777 3 00177  INES1  TXI     *+1,3,-1 
      00177  1 77777 2 00200         TXI     *+1,2,-1 
      00200                          TEST    3  
      00201  0522 00 0 00015         XEC     GET
      00202  0522 00 0 00026         XEC     PUT
      00203  3 00000 2 00176         TXH     INES1,2,0
      00204  0754 00 3 00000         PXA     ,3 
      00205  0734 00 2 00000         PAX     ,2 
      00206  0774 00 3 00000         AXT     0,3
      00207  0522 00 0 00015  IGET   XEC     GET
      00210                          TEST    3  
      00211  1 00001 2 00212         TXI     *+1,2,1  
      00212  0737 00 1 00000  IN1    PAC     ,1 
      00213 -0500 00 1 00400         CAL     DEVTBL,1 
      00214 -0320 00 0 00637         ANA     =O377    
      00215 -0340 00 0 00635         LAS     =O200    
      00216  0737 00 4 00000         PAC     ,4 
      00217  0020 00 4 00022         TRA     ISWIT-129,4    
      00220  0600 00 0 00374  IN2    STZ     BFLG     
      00221  0522 00 0 00026         XEC     PUT
      00222  1 00001 3 00207         TXI     IGET,3,1 
                              *     
      00223  0020 00 0 00314  ISWIT  TRA     ICMFLX   
      00224  0020 00 0 00323         TRA     IUCASE   
      00225  0020 00 0 00336         TRA     ILCASE   
      00226  0020 00 0 00351         TRA     IOCTL    
      00227  0020 00 0 00302         TRA     ICRET    
      00230  0020 00 0 00246         TRA     IBLANK   
      00231  0020 00 0 00274         TRA     ITAB     
      00232  0020 00 0 00234         TRA     INOSP    
      00233  0020 00 0 00241         TRA     IBKSP    
                              *     
      00234  0500 00 0 00373  INOSP  CLA     POSIT    
      00235  0400 00 0 00622         ADD     =9 
1                                                                                06/22/70 1520.3 PAGE 6     
                  
      00236  0601 00 0 00373         STO     POSIT    
      00237  0756 00 1 00000         PCA     ,1 
      00240  0020 00 0 00220         TRA     IN2
                              *     
      00241  0500 00 0 00373  IBKSP  CLA     POSIT    
      00242  0400 00 0 00621         ADD     =8 
      00243  0601 00 0 00373         STO     POSIT    
      00244  0756 00 1 00000         PCA     ,1 
      00245  0020 00 0 00220         TRA     IN2
                              *     
      00246  0754 00 3 00000  IBLANK PXA     ,3 
      00247  0400 00 0 00373         ADD     POSIT    
      00250  0131 00 0 00000         XCA  
      00251 -0754 00 0 00000         ZAC  
      00252  0221 00 0 00623         DVP     =10
      00253  0100 00 0 00262         TZE     IB1
      00254  0520 00 0 00374         ZET     BFLG     
      00255  0020 00 0 00260         TRA     *+3
      00256  0634 00 3 00374         SXA     BFLG,3   
      00257 -0636 00 4 00374         SCD     BFLG,4   
      00260 -0500 00 0 00624         CAL     =O40          BLANK  
      00261  0020 00 0 00221         TRA     IN2+1    
      00262  0520 00 0 00374  IB1    ZET     BFLG     
      00263  0020 00 0 00266         TRA     *+3
      00264 -0500 00 0 00624         CAL     =O40     
      00265  0020 00 0 00220         TRA     IN2
      00266 -0636 00 0 00374         SCD     BFLG,0   
      00267  0754 00 3 00000         PXA     ,3 
      00270  0402 00 0 00374         SUB     BFLG     
      00271  0400 00 0 00373         ADD     POSIT    
      00272  0601 00 0 00373         STO     POSIT    
      00273  0534 00 3 00374         LXA     BFLG,3   
      00274  0754 00 3 00000  ITAB   PXA     ,3 
      00275 -0760 00 0 00003         SSM  
      00276  0400 00 0 00640         ADD     =300     
      00277  0601 00 0 00373         STO     POSIT    
      00300 -0500 00 0 00622         CAL     =O11          TAB    
      00301  0020 00 0 00220         TRA     IN2
                              *     
      00302 -3 00000 3 00033  ICRET  TXL     CRET,3,0 
      00303  1 77777 3 00304         TXI     *+1,3,-1 
      00304 -0500 60 0 00026         CAL*    PUT
      00305 -0340 00 0 00624         LAS     =O40          SPACE  
      00306  1 00001 3 00033         TXI     CRET,3,1 
      00307  0020 00 0 00302         TRA     ICRET    
      00310 -0340 00 0 00622         LAS     =O11          TAB    
      00311  1 00001 3 00033         TXI     CRET,3,1 
      00312  0020 00 0 00302         TRA     ICRET    
      00313  1 00001 3 00033         TXI     CRET,3,1 
                              *     
      00314  0600 00 0 00374  ICMFLX STZ     BFLG     
      00315 -0500 00 0 00376         CAL     ESC           BACK SLASH   
      00316  0522 00 0 00026         XEC     PUT
      00317 -0500 00 1 00400         CAL     DEVTBL,1 
      00320  0771 00 0 00010         ARS     8  
      00321 -0320 00 0 00637         ANA     =O377    
1                                                                                06/22/70 1520.3 PAGE 7     
                  
      00322  1 00001 3 00212         TXI     IN1,3,1  
                              *     
      00323  0756 00 1 00000  IUCASE PCA     ,1 
      00324  0520 00 0 00610         ZET     XCAP     
      00325  0020 00 0 00220         TRA     IN2
      00326 -0500 00 0 00376         CAL     ESC           BACK SLASH   
      00327  0522 00 0 00026         XEC     PUT
      00330  1 00001 3 00331         TXI     *+1,3,1  
      00331 -0500 00 0 00633         CAL     =O165    
      00332  0522 00 0 00026         XEC     PUT
      00333  0756 00 1 00000         PCA     ,1 
      00334 -0625 00 0 00610         STL     XCAP     
      00335  1 00001 3 00220         TXI     IN2,3,1  
                              *     
      00336  0756 00 1 00000  ILCASE PCA     ,1 
      00337 -0520 00 0 00610         NZT     XCAP     
      00340  0020 00 0 00220         TRA     IN2
      00341 -0500 00 0 00376         CAL     ESC           BACK SLASH   
      00342  0522 00 0 00026         XEC     PUT
      00343  1 00001 3 00344         TXI     *+1,3,1  
      00344 -0500 00 0 00632         CAL     =O154    
      00345  0522 00 0 00026         XEC     PUT
      00346  0756 00 1 00000         PCA     ,1 
      00347  0600 00 0 00610         STZ     XCAP     
      00350  1 00001 3 00220         TXI     IN2,3,1  
                              *     
      00351 -0500 00 0 00376  IOCTL  CAL     ESC           BACK SLASH   
      00352  0522 00 0 00026         XEC     PUT
      00353  1 00001 3 00354         TXI     *+1,3,1  
      00354  0756 00 1 00000         PCA     ,1 
      00355  0602 00 0 00375         SLW     T1 
      00356  0771 00 0 00006         ARS     6  
      00357  0400 00 0 00626         ADD     =O60     
      00360  0522 00 0 00026         XEC     PUT
      00361  1 00001 3 00362         TXI     *+1,3,1  
      00362 -0500 00 0 00375         CAL     T1 
      00363  0771 00 0 00003         ARS     3  
      00364 -0320 00 0 00620         ANA     =O7
      00365  0400 00 0 00626         ADD     =O60     
      00366  0522 00 0 00026         XEC     PUT
      00367 -0500 00 0 00375         CAL     T1 
      00370 -0320 00 0 00620         ANA     =O7
      00371  0400 00 0 00626         ADD     =O60     
      00372  1 00001 3 00220         TXI     IN2,3,1  
                              *     
      00373  0 00000 0 00001  POSIT  PZE     1  
      00374  0 00000 0 00000  BFLG   PZE  
      00375  0 00000 0 00000  T1     PZE  
                              *     
      00376  0 00000 0 00000  ESC   
      00377  0 00000 0 00000  P2    
      00400  0636 00 4 00604  DEVTBL SCA     DEVRET,4 
      00401  0074 00 4 00445         TSX     WHOAMI,4 
      00402  0 00004 0 00446         PZE     WHOAMI+1,,4    
      00403 -0500 00 0 00451         CAL     WHOAMI+4 
      00404  0602 00 0 00375         SLW     T1 
1                                                                                06/22/70 1520.3 PAGE 8     
                  
      00405  0771 00 0 00036         ARS     30 
      00406  0535 00 4 00604         LAC     DEVRET,4 
      00407  0560 00 4 00001         LDQ     1,4
      00410 -0340 00 0 00617         LAS     =6            M35    
      00411  0020 00 0 00413         TRA     *+2
      00412  0560 00 4 00004         LDQ     4,4
      00413 -0340 00 0 00616         LAS     =5            M35(TWX)     
      00414  0020 00 0 00416         TRA     *+2
      00415  0560 00 4 00004         LDQ     4,4
      00416 -0340 00 0 00615         LAS     =4            M35(TWX)     
      00417  0020 00 0 00421         TRA     *+2
      00420  0560 00 4 00004         LDQ     4,4
      00421 -0340 00 0 00620         LAS     =7            M37    
      00422  0020 00 0 00424         TRA     *+2
      00423  0560 00 4 00001         LDQ     1,4
      00424 -0340 00 0 00611         LAS     =0            M37    
      00425  0020 00 0 00427         TRA     *+2
      00426  0560 00 4 00001         LDQ     1,4
      00427 -0340 00 0 00613         LAS     =2            1050C  
      00430  0020 00 0 00432         TRA     *+2
      00431  0560 00 4 00003         LDQ     3,4
      00432 -0340 00 0 00621         LAS     =8            1050M  
      00433  0020 00 0 00435         TRA     *+2
      00434  0560 00 4 00003         LDQ     3,4
      00435 -0340 00 0 00622         LAS     =9            ARDS   
      00436  0020 00 0 00440         TRA     *+2
      00437  0560 00 4 00001         LDQ     1,4
      00440 -0130 00 0 00000         XCL                   ELSE M37     
      00441  0400 00 0 00636         ADD     =130     
      00442  0621 00 0 00600         STA     DEVTBL+128     
      00443  0774 00 4 00202         AXT     130,4    
      00444  0020 00 0 00600         TRA     DEVTBL+128     
      00445  0101 00 0 00641  WHOAMI TIA     =HWHOAMI 
                       00600         ORG     DEVTBL+128     
      00600 -0500 00 4 00000         CAL     **,4     
      00601  0602 00 4 00600         SLW     DEVTBL+128,4   
      00602  2 00001 4 00600         TIX     *-2,4,1  
      00603 -0500 00 0 00375         CAL     T1 
      00604 -0774 00 4 00000  DEVRET AXC     **,4     
      00605  0020 00 4 00005         TRA     5,4
                              *     
      00606  0 00000 0 00000  CAPFLG PZE  
      00607  0 00000 0 00000  FLIP   PZE  
      00610  0 00000 0 00000  XCAP   PZE  
                                     END  
                  
        LITERALS  
      00611  000000000000     
      00612  000000000001     
      00613  000000000002     
      00614  000000000003     
      00615  000000000004     
      00616  000000000005     
      00617  000000000006     
      00620  000000000007     
      00621  000000000010     
1                                                                                06/22/70 1520.3 PAGE 9     
                  
      00622  000000000011     
      00623  000000000012     
      00624  000000000040     
      00625  000000000057     
      00626  000000000060     
      00627  000000000070     
      00630  000000000133     
      00631  000000000135     
      00632  000000000154     
      00633  000000000165     
      00634  000000000177     
      00635  000000000200     
      00636  000000000202     
      00637  000000000377     
      00640  000000000454     
      00641  663046214431     
1                                                                                06/22/70 1520.3 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        642 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        377     P2      
        375     T1   127,  132,  355,  362,  367,  404,  603
         37     XR     3,    4,    5,    6,  157,  160,  161,  162
        134    CH1   116
        135    CH2   120,  121,  124,  125
        376    ESC   153,  315,  326,  341,  351
         15    GET    10,   27,   62,   74,  103,  105,  106,  111,  137,  156,  164,  201,  207
        262    IB1   253
        212    IN1   322
        220    IN2   240,  245,  261,  265,  301,  325,  335,  340,  350,  372
         26    PUT    12,   34,   52,   61,   73,   75,  114,  136,  146,  154,  166,  202,  221,  304,  316,  327,  332
                     342,  345,  352,  360,  366
         76    SW1    71
        147    SW2   145
         53   ALP1    46
         45   ALPH    31
        374   BFLG   173,  220,  254,  256,  257,  262,  266,  270,  273,  314
         33   CRET    32,  302,  306,  311,  313
        607   FLIP    45,   53,   55,  155
        207   IGET   222
        274   ITAB   231
          1   TFLG     3
        610   XCAP   324,  334,  337,  347
        115  CHECK   110,  112
         62  CMFLX    30
        106  COCTL   101
        241  IBKSP   233
        302  ICRET   227,  307,  312
        176  INES1   203
        157  INESC     0
        234  INOSP   232
        351  IOCTL   226
        223  ISWIT   217
        373  POSIT   175,  234,  236,  241,  243,  247,  271,  272,  277
          0  TYPE0    16,  200,  210
        606 CAPFLG    50,   57,  102,  104
        137 CFXCFX    76
        102 CLOWER    77
        104 CUPPER   100
        604 DEVRET   400,  406
        400 DEVTBL     0,   21,   64,  141,  213,  317,  442,  444,  600,  601
        155 FLIPIT   151
        246 IBLANK   230
        314 ICMFLX   223
        336 ILCASE   225
        323 IUCASE   224
          3 OUTESC     0
         30 SWITCH    25
        445 WHOAMI   401,  402,  403
1                                                                                06/22/70 1520.3 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1                                                                                06/22/70 1521.0 PAGE 1     
                  
                       00002         ENTRY   CNVTBL   
                              CNV    MACRO   A,B,C,D,E,F    
                                     VFD     4/A,5/B,4/0,O7/C,O8/D,1/E,O7/F   
                                     END     CNV
                              *     
                  
        LINKAGE DIRECTOR
      00000  000000000000     
      00001  234565632243     
                  
                       00002  CNVTBL SYN     *  
                              *              A C  T-A A-S A-T     
      00002                          CNV     0,00,060,177,0,177 000     
      00003                          CNV     0,00,061,177,0,177 001     
      00004                          CNV     0,00,062,177,0,177 002     
      00005                          CNV     0,00,063,177,0,177 003     
      00006                          CNV     0,00,064,177,0,177 004     
      00007                          CNV     0,00,065,177,1,115 005     
      00010                          CNV     0,00,066,177,1,176 006     
      00011                          CNV     0,00,067,177,1,113 007     
      00012                          CNV     0,00,070,035,0,135 010     
      00013                          CNV     0,00,071,072,0,072 011     
      00014                          CNV     0,14,030,055,0,055 012     
      00015                          CNV     0,00,075,177,1,172 013     
      00016                          CNV     0,00,047,052,0,052 014     
      00017                          CNV     0,00,177,177,1,136 015     
      00020                          CNV     0,00,177,177,1,133 016     
      00021                          CNV     0,00,177,177,1,132 017     
      00022                          CNV     0,00,053,177,0,177 020     
      00023                          CNV     0,00,101,177,0,177 021     
      00024                          CNV     0,00,102,177,1,110 022     
      00025                          CNV     0,00,103,177,0,177 023     
      00026                          CNV     0,00,104,177,1,111 024     
      00027                          CNV     0,00,105,177,1,161 025     
      00030                          CNV     0,00,106,177,0,177 026     
      00031                          CNV     0,00,107,177,0,177 027     
      00032                          CNV     0,00,110,177,0,012 030     
      00033                          CNV     0,00,111,177,0,032 031     
      00034                          CNV     0,00,031,177,0,036 032     
      00035                          CNV     0,00,056,177,1,154 033     
      00036                          CNV     0,00,051,177,0,037 034     
      00037                          CNV     0,00,072,177,0,056 035     
      00040                          CNV     0,00,032,177,0,075 036     
      00041                          CNV     0,00,034,177,0,076 037     
      00042                          CNV     7,15,055,060,0,060 040     
      00043                          CNV     0,00,112,177,1,114 041     
      00044                          CNV     0,23,113,177,0,137 042     
      00045                          CNV     0,00,114,177,1,104 043     
      00046                          CNV     5,00,115,053,0,053 044     
      00047                          CNV     0,00,116,177,1,105 045     
      00050                          CNV     0,00,117,020,0,120 046     
      00051                          CNV     8,00,120,014,0,014 047     
      00052                          CNV     0,00,121,074,0,074 050     
      00053                          CNV     0,00,122,034,0,034 051     
      00054                          CNV     0,00,014,054,0,054 052     
      00055                          CNV     1,00,044,020,0,020 053     
1                                                                                06/22/70 1521.0 PAGE 2     
                  
      00056                          CNV     0,00,052,073,0,073 054     
      00057                          CNV     2,00,012,040,0,040 055     
      00060                          CNV     6,00,035,033,0,033 056     
      00061                          CNV     3,00,177,061,0,061 057     
      00062                          CNV     4,00,040,000,0,000 060     
      00063                          CNV     4,00,057,001,0,001 061     
      00064                          CNV     4,00,123,002,0,002 062     
      00065                          CNV     4,00,124,003,0,003 063     
      00066                          CNV     4,00,125,004,0,004 064     
      00067                          CNV     4,00,126,005,0,005 065     
      00070                          CNV     4,00,127,006,0,006 066     
      00071                          CNV     4,00,130,007,0,007 067     
      00072                          CNV     4,00,131,010,0,010 070     
      00073                          CNV     4,00,132,011,0,011 071     
      00074                          CNV     0,26,011,035,0,035 072     
      00075                          CNV     0,00,054,177,1,103 073     
      00076                          CNV     0,00,050,177,1,152 074     
      00077                          CNV     0,17,036,013,0,013 075     
      00100                          CNV     0,00,037,177,1,155 076     
      00101                          CNV     0,00,177,177,0,156 077     
      00102                          CNV     0,00,174,177,1,106 100     
      00103                          CNV     0,01,135,021,0,021 101     
      00104                          CNV     0,02,134,022,0,022 102     
      00105                          CNV     0,03,073,023,0,023 103     
      00106                          CNV     0,04,043,024,0,024 104     
      00107                          CNV     0,05,045,025,0,025 105     
      00110                          CNV     0,06,100,026,0,026 106     
      00111                          CNV     0,27,177,027,0,027 107     
      00112                          CNV     0,00,022,030,0,030 110     
      00113                          CNV     0,07,024,031,0,031 111     
      00114                          CNV     0,00,136,041,0,041 112     
      00115                          CNV     0,21,007,042,0,042 113     
      00116                          CNV     0,20,041,043,0,043 114     
      00117                          CNV     0,08,177,044,0,044 115     
      00120                          CNV     0,00,177,045,0,045 116     
      00121                          CNV     0,19,177,046,0,046 117     
      00122                          CNV     0,09,046,047,0,047 120     
      00123                          CNV     0,16,141,050,0,050 121     
      00124                          CNV     0,10,142,051,0,051 122     
      00125                          CNV     0,11,143,062,0,062 123     
      00126                          CNV     0,22,144,063,0,063 124     
      00127                          CNV     0,25,145,064,0,064 125     
      00130                          CNV     0,12,146,065,0,065 126     
      00131                          CNV     0,13,147,066,0,066 127     
      00132                          CNV     0,18,150,067,0,067 130     
      00133                          CNV     0,00,151,070,0,070 131     
      00134                          CNV     0,24,017,071,0,071 132     
      00135                          CNV     0,00,016,177,1,153 133     
      00136                          CNV     0,00,176,177,1,102 134     
      00137                          CNV     0,00,010,177,1,101 135     
      00140                          CNV     0,00,015,177,1,112 136     
      00141                          CNV     0,00,042,177,1,140 137     
      00142                          CNV     0,00,137,177,0,160 140     
      00143                          CNV     0,01,152,021,0,121 141     
      00144                          CNV     0,02,153,022,0,122 142     
      00145                          CNV     0,03,154,023,0,123 143     
1                                                                                06/22/70 1521.0 PAGE 3     
                  
      00146                          CNV     0,04,155,024,0,124 144     
      00147                          CNV     0,05,156,025,0,125 145     
      00150                          CNV     0,06,157,026,0,126 146     
      00151                          CNV     0,27,160,027,0,127 147     
      00152                          CNV     0,00,161,030,0,130 150     
      00153                          CNV     0,07,162,031,0,131 151     
      00154                          CNV     0,00,074,041,0,141 152     
      00155                          CNV     0,21,133,042,0,142 153     
      00156                          CNV     0,20,033,043,0,143 154     
      00157                          CNV     0,08,076,044,0,144 155     
      00160                          CNV     0,00,077,045,0,145 156     
      00161                          CNV     0,19,177,046,0,146 157     
      00162                          CNV     0,09,140,047,0,147 160     
      00163                          CNV     0,16,177,050,0,150 161     
      00164                          CNV     0,10,163,051,0,151 162     
      00165                          CNV     0,11,164,062,0,162 163     
      00166                          CNV     0,22,165,063,0,163 164     
      00167                          CNV     0,25,166,064,0,164 165     
      00170                          CNV     0,12,167,065,0,165 166     
      00171                          CNV     0,13,170,066,0,166 167     
      00172                          CNV     0,18,171,067,0,167 170     
      00173                          CNV     0,00,172,070,0,170 171     
      00174                          CNV     0,24,013,071,0,171 172     
      00175                          CNV     0,00,173,177,1,173 173     
      00176                          CNV     0,00,175,177,1,100 174     
      00177                          CNV     0,00,177,177,1,174 175     
      00200                          CNV     0,00,177,177,1,134 176     
      00201                          CNV     0,00,177,177,0,177 177     
                                     END  
1                                                                                06/22/70 1521.0 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        202 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          2 CNVTBL     0,    2
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            IS CALLED WITH THE Z TYPE IN AC:                                    06/22/70 1521.1 PAGE 1     
                  
                       00004         ENTRY   ZCMD     
                              *      TSX     ZCMD,4   
                              *      PZE     BUF+BUFSIZ-1   
                              *      PZE     CHRCNT   
                              *      PZE     BUFSIZ   
                              *     
                              TEST   MACRO   X  
                                     IFF     TFLG,1,1 
                                     TXH     $TYPE0,X,300   
                                     END     TEST     
                              *     
                  
        TRANSFER VECTOR 
      00000  232145464560     CANON 
      00001  637047250060     TYPE0 
                  
        LINKAGE DIRECTOR
      00002  000000000000     
      00003  712344246060     
                  
                       00001  TFLG   SET     1  
                              *     
      00004  0636 00 1 00035  ZCMD   SCA     XR,1     
      00005  0636 00 4 00036         SCA     XR+1,4   
      00006 -0774 00 1 00000         AXC     0,1
      00007 -0340 00 0 00173         LAS     =O62          2
      00010  0020 00 0 00015         TRA     Z1 
      00011  1 77776 1 00015         TXI     Z1,1,-2  
      00012 -0340 00 0 00172         LAS     =O61          1
      00013  0020 00 0 00015         TRA     Z1 
      00014  1 77777 1 00015         TXI     Z1,1,-1  
      00015 -0500 00 4 00001  Z1     CAL     1,4
      00016  0621 00 0 00044         STA     GET
      00017  0621 00 0 00047         STA     PUT
      00020  0602 00 0 00026         SLW     Z2 
      00021 -0500 00 4 00002         CAL     2,4
      00022  0602 00 0 00027         SLW     Z2+1     
      00023 -0500 00 4 00003         CAL     3,4
      00024  0602 00 0 00030         SLW     Z2+2     
      00025  0074 00 4 00000         TSX     $CANON,4 
      00026  0 00000 0 00000  Z2     PZE     ** 
      00027  0 00000 0 00000         PZE     ** 
      00030  0 00000 0 00000         PZE     ** 
      00031  0020 00 1 00032         TRA     *+1,1    
      00032  0020 00 0 00035         TRA     Z0CMD    
      00033  0020 00 0 00040         TRA     Z1CMD    
      00034  0020 00 0 00110         TRA     Z2CMD    
                              *     
                       00035  Z0CMD  SYN     *  
      00035 -0774 00 1 00000  XR     AXC     **,1     
      00036 -0774 00 4 00000         AXC     **,4     
      00037  0020 00 4 00004         TRA     4,4
                              *     
                       00040  Z1CMD  SYN     *  
      00040  0774 00 4 00000         AXT     0,4
      00041  0774 00 1 00000         AXT     0,1
1            IS CALLED WITH THE Z TYPE IN AC:                                    06/22/70 1521.1 PAGE 2     
                  
      00042 -0500 00 0 00167         CAL     =9 
      00043  0602 00 0 00165         SLW     POSIT    
      00044 -0500 00 1 00000  GET    CAL     **,1     
      00045                          TEST    4  
      00046  1 00001 1 00047         TXI     *+1,1,1  
      00047  0602 00 4 00000  PUT    SLW     **,4     
      00050 -0340 00 0 00171         LAS     =O40     
      00051  1 00001 4 00062         TXI     Z1.1,4,1 
      00052  0020 00 0 00071         TRA     Z1.2     
      00053 -0340 00 0 00170         LAS     =O12          CR     
      00054  1 00001 4 00062         TXI     Z1.1,4,1 
      00055  1 00001 4 00161         TXI     Z12RET,4,1     
      00056 -0340 00 0 00167         LAS     =O11          TAB    
      00057  1 00001 4 00062         TXI     Z1.1,4,1 
      00060  0020 00 0 00106         TRA     Z1.3     
      00061  1 00001 4 00062         TXI     Z1.1,4,1 
                              *     
      00062  0600 00 0 00164  Z1.1   STZ     BFLG     
      00063  0500 00 0 00165         CLA     POSIT    
      00064 -0100 00 0 00066         TNZ     *+2
      00065 -0500 00 0 00170         CAL     =10
      00066  0402 00 0 00166         SUB     =1 
      00067  0601 00 0 00165         STO     POSIT    
      00070  0020 00 0 00044         TRA     GET
                              *     
      00071  0520 00 0 00164  Z1.2   ZET     BFLG     
      00072  0020 00 0 00100         TRA     Z1.2.1   
      00073  0634 00 4 00164         SXA     BFLG,4   
      00074 -0636 00 1 00164         SCD     BFLG,1   
      00075  0520 00 0 00165         ZET     POSIT    
      00076  1 00001 4 00063         TXI     Z1.1+1,4,1     
      00077  1 00001 4 00062         TXI     Z1.1,4,1 
      00100  0520 00 0 00165  Z1.2.1 ZET     POSIT    
      00101  1 00001 4 00063         TXI     Z1.1+1,4,1     
      00102  0534 00 4 00164         LXA     BFLG,4   
      00103 -0500 00 0 00167         CAL     =O11          TAB    
      00104  0522 00 0 00047         XEC     PUT
      00105  1 00001 4 00062         TXI     Z1.1,4,1 
                              *     
      00106  0600 00 0 00165  Z1.3   STZ     POSIT    
      00107  1 00001 4 00062         TXI     Z1.1,4,1 
                              *     
      00110 -0500 60 0 00030  Z2CMD  CAL*    Z2+2          BUFSIZ 
      00111  0734 00 4 00000         PAX     ,4 
      00112 -0500 60 0 00027         CAL*    Z2+1          CHRCNT 
      00113  0734 00 1 00000         PAX     ,1 
      00114  1 77777 1 00115  Z2C1   TXI     *+1,1,-1 
      00115  1 77777 4 00116         TXI     *+1,4,-1 
      00116  0522 00 0 00044         XEC     GET
      00117                          TEST    4  
      00120  0522 00 0 00047         XEC     PUT
      00121  3 00000 1 00114         TXH     Z2C1,1,0 
      00122  0754 00 4 00000         PXA     ,4 
      00123  0734 00 1 00000         PAX     ,1 
      00124  0774 00 4 00000         AXT     0,4
      00125 -0500 00 0 00167         CAL     =9 
1            IS CALLED WITH THE Z TYPE IN AC:                                    06/22/70 1521.1 PAGE 3     
                  
      00126  0602 00 0 00165         SLW     POSIT    
      00127  0522 00 0 00044  Z2.1   XEC     GET
      00130                          TEST    4  
      00131  1 00001 1 00132         TXI     *+1,1,1  
      00132  0522 00 0 00047         XEC     PUT
      00133 -0340 00 0 00170         LAS     =O12          CR     
      00134  1 00001 4 00142         TXI     Z2.2,4,1 
      00135  1 00001 4 00161         TXI     Z12RET,4,1     
      00136 -0340 00 0 00167         LAS     =O11          TAB    
      00137  1 00001 4 00142         TXI     Z2.2,4,1 
      00140  0020 00 0 00150         TRA     Z2.3     
      00141  1 00001 4 00142         TXI     Z2.2,4,1 
      00142  0500 00 0 00165  Z2.2   CLA     POSIT    
      00143 -0100 00 0 00145         TNZ     *+2
      00144  0500 00 0 00170         CLA     =10
      00145  0402 00 0 00166         SUB     =1 
      00146  0601 00 0 00165         STO     POSIT    
      00147  0020 00 0 00127         TRA     Z2.1     
                              *     
      00150 -0500 00 0 00171  Z2.3   CAL     =O40          SP     
      00151                          TEST    4  
      00152  0522 00 0 00047         XEC     PUT
      00153 -0520 00 0 00165         NZT     POSIT    
      00154  1 00001 4 00142         TXI     Z2.2,4,1 
      00155  0500 00 0 00165         CLA     POSIT    
      00156  0402 00 0 00166         SUB     =1 
      00157  0601 00 0 00165         STO     POSIT    
      00160  1 00001 4 00150         TXI     Z2.3,4,1 
                              *     
      00161  0754 00 4 00000  Z12RET PXA     ,4 
      00162  0602 60 0 00027         SLW*    Z2+1          CHRCNT 
      00163  0020 00 0 00035         TRA     XR 
                              *     
      00164  0 00000 0 00000  BFLG  
      00165  0 00000 0 00000  POSIT 
                                     END  
                  
        LITERALS  
      00166  000000000001     
      00167  000000000011     
      00170  000000000012     
      00171  000000000040     
      00172  000000000061     
      00173  000000000062     
1            IS CALLED WITH THE Z TYPE IN AC:                                    06/22/70 1521.1 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        174 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         35     XR     4,    5,  163
         15     Z1    10,   11,   13,   14
         26     Z2    20,   22,   24,  110,  112,  162
         44    GET    16,   70,  116,  127
         47    PUT    17,  104,  120,  132,  152
        164   BFLG    62,   71,   73,   74,  102
          1   TFLG     4
         62   Z1.1    51,   54,   57,   61,   76,   77,  101,  105,  107
         71   Z1.2    52
        106   Z1.3    60
        114   Z2C1   121
        127   Z2.1   147
        142   Z2.2   134,  137,  141,  154
        150   Z2.3   140,  160
          4   ZCMD     0
          0  CANON    25
        165  POSIT    43,   63,   67,   75,  100,  106,  126,  142,  146,  153,  155,  157
          1  TYPE0    45,  117,  130,  151
         35  Z0CMD    32,   35
         40  Z1CMD    33,   40
        110  Z2CMD    34
        161 Z12RET    55,  135
        100 Z1.2.1    72
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1                                                                                06/22/70 1521.7 PAGE 1     
                  
                       00004         ENTRY   INITDT   
                       00014         ENTRY   FREEDT   
                  
        TRANSFER VECTOR 
      00000  242565632243     DEVTBL
                  
      00001  0774 00 0 00000  *EVEN*
                  
        LINKAGE DIRECTOR
      00002  000000000000     
      00003  314531632463     
                  
      00004  0636 00 4 00012  INITDT SCA     DT1,4    
      00005  0074 00 4 00000         TSX     $DEVTBL,4
      00006  0 00000 0 00036         PZE     D1 
      00007  0 00000 0 00240         PZE     D2 
      00010  0 00000 0 00442         PZE     D3 
      00011  0 00000 0 00644         PZE     D4 
      00012 -0774 00 4 00000  DT1    AXC     **,4     
      00013  0020 00 4 00001         TRA     1,4
                              *     
      00014  0636 00 1 00032  FREEDT SCA     DT2,1    
      00015  0636 00 4 00033         SCA     DT2+1,4  
      00016  0774 00 4 00202         AXT     130,4    
      00017 -0774 00 2 00036         AXC     D1,2     
      00020  1 77774 2 00021  DT3    TXI     *+1,2,-4 
      00021  0756 00 2 00000         PCA     ,2 
      00022  0602 00 2 77774         SLW     -4,2     
      00023  0600 00 2 77775         STZ     -3,2     
      00024  0600 00 2 77776         STZ     -2,2     
      00025  0600 00 2 77777         STZ     -1,2     
      00026  2 00001 4 00020         TIX     DT3,4,1  
      00027  0756 00 5 00000         PCA     ,5 
      00030  0602 00 2 77774         SLW     -4,2     
      00031 -0774 00 5 00036         AXC     D1,5     
      00032 -0774 00 1 00000  DT2    AXC     **,1     
      00033 -0774 00 4 00000         AXC     **,4     
      00034  0020 00 4 00001         TRA     1,4
                              *     
      00035  0774 00 0 00000         EVEN 
                              *     
                              DEV    MACRO   A,B,C,D,E,F    
                                     VFD     O8/A,O8/B,2/C,2/0,O8/E,O8/F
                                     END     DEV
                              *     
                       00036  D1     SYN     *  
                              *      M37 DEVICE TABLE 
      00036 +000000000134            OCT     134,0    
      00037 +000000000000     
      00040                          DEV     000,000,3,0,000,204 000    
      00041                          DEV     001,001,3,0,001,204 001    
      00042                          DEV     002,002,3,0,002,204 002    
      00043                          DEV     003,003,3,0,003,204 003    
      00044                          DEV     004,004,3,0,004,204 004    
      00045                          DEV     005,005,3,0,005,210 005    
      00046                          DEV     006,006,3,0,006,210 006    
1                                                                                06/22/70 1521.7 PAGE 2     
                  
      00047                          DEV     007,007,3,0,007,210 007    
      00050                          DEV     010,010,3,0,010,211 010    
      00051                          DEV     011,011,3,0,011,207 011    
      00052                          DEV     203,012,3,0,012,205 012    
      00053                          DEV     162,201,3,0,013,210 013    
      00054                          DEV     014,014,3,0,014,210 014    
      00055                          DEV     015,015,3,0,015,015 015    
      00056                          DEV     016,016,3,0,016,210 016    
      00057                          DEV     017,017,3,0,017,210 017    
      00060                          DEV     020,020,3,0,020,204 020    
      00061                          DEV     021,021,3,0,021,204 021    
      00062                          DEV     022,022,3,0,022,210 022    
      00063                          DEV     023,023,3,0,023,204 023    
      00064                          DEV     024,024,3,0,024,210 024    
      00065                          DEV     025,025,3,0,025,210 025    
      00066                          DEV     026,026,3,0,026,204 026    
      00067                          DEV     027,027,3,0,027,204 027    
      00070                          DEV     030,030,3,0,142,201 030    
      00071                          DEV     031,031,3,0,143,201 031    
      00072                          DEV     032,032,3,0,145,201 032    
      00073                          DEV     033,033,3,0,033,210 033    
      00074                          DEV     034,034,3,0,146,201 034    
      00075                          DEV     035,035,3,0,153,201 035    
      00076                          DEV     036,036,3,0,162,201 036    
      00077                          DEV     037,037,3,0,167,201 037    
      00100                          DEV     040,040,3,0,040,040 040    
      00101                          DEV     041,041,3,0,041,041 041    
      00102                          DEV     042,042,3,0,042,042 042    
      00103                          DEV     043,043,3,0,043,043 043    
      00104                          DEV     044,044,3,0,044,044 044    
      00105                          DEV     045,045,3,0,045,045 045    
      00106                          DEV     046,046,3,0,046,046 046    
      00107                          DEV     047,047,3,0,047,047 047    
      00110                          DEV     050,050,3,0,050,050 050    
      00111                          DEV     051,051,3,0,051,051 051    
      00112                          DEV     052,052,3,0,052,052 052    
      00113                          DEV     053,053,3,0,053,053 053    
      00114                          DEV     054,054,3,0,054,054 054    
      00115                          DEV     055,055,3,0,055,055 055    
      00116                          DEV     056,056,3,0,056,056 056    
      00117                          DEV     057,057,3,0,057,057 057    
      00120                          DEV     060,204,3,0,060,060 060    
      00121                          DEV     061,204,3,0,061,061 061    
      00122                          DEV     062,204,3,0,062,062 062    
      00123                          DEV     063,204,3,0,063,063 063    
      00124                          DEV     064,204,3,0,064,064 064    
      00125                          DEV     065,204,3,0,065,065 065    
      00126                          DEV     066,204,3,0,066,066 066    
      00127                          DEV     067,204,3,0,067,067 067    
      00130                          DEV     070,070,3,0,070,070 070    
      00131                          DEV     071,071,3,0,071,071 071    
      00132                          DEV     072,072,3,0,072,072 072    
      00133                          DEV     073,073,3,0,073,073 073    
      00134                          DEV     074,074,3,0,074,074 074    
      00135                          DEV     075,075,3,0,075,075 075    
      00136                          DEV     076,076,3,0,076,076 076    
1                                                                                06/22/70 1521.7 PAGE 3     
                  
      00137                          DEV     077,077,3,0,077,077 077    
      00140                          DEV     100,100,3,0,100,100 100    
      00141                          DEV     101,101,3,0,101,101 101    
      00142                          DEV     102,030,3,0,102,102 102    
      00143                          DEV     103,031,3,0,103,103 103    
      00144                          DEV     104,104,3,0,104,104 104    
      00145                          DEV     105,032,3,0,105,105 105    
      00146                          DEV     106,034,3,0,106,106 106    
      00147                          DEV     107,107,3,0,107,107 107    
      00150                          DEV     110,110,3,0,110,110 110    
      00151                          DEV     111,111,3,0,111,111 111    
      00152                          DEV     112,112,3,0,112,112 112    
      00153                          DEV     113,035,3,0,113,113 113    
      00154                          DEV     114,114,3,0,114,114 114    
      00155                          DEV     115,115,3,0,115,115 115    
      00156                          DEV     116,116,3,0,116,116 116    
      00157                          DEV     117,117,3,0,117,117 117    
      00160                          DEV     120,120,3,0,120,120 120    
      00161                          DEV     121,121,3,0,121,121 121    
      00162                          DEV     122,036,3,0,122,122 122    
      00163                          DEV     123,123,3,0,123,123 123    
      00164                          DEV     124,124,3,0,124,124 124    
      00165                          DEV     125,125,3,0,125,125 125    
      00166                          DEV     126,126,3,0,126,126 126    
      00167                          DEV     127,037,3,0,127,127 127    
      00170                          DEV     130,136,3,0,130,130 130    
      00171                          DEV     131,131,3,0,131,131 131    
      00172                          DEV     132,132,3,0,132,132 132    
      00173                          DEV     133,133,3,0,133,133 133    
      00174                          DEV     201,134,3,0,134,204 134    
      00175                          DEV     135,135,3,0,135,135 135    
      00176                          DEV     136,136,3,0,136,136 136    
      00177                          DEV     137,137,3,0,137,137 137    
      00200                          DEV     140,140,3,0,140,140 140    
      00201                          DEV     141,141,3,0,141,141 141    
      00202                          DEV     142,030,3,0,142,142 142    
      00203                          DEV     143,031,3,0,143,143 143    
      00204                          DEV     144,144,3,0,144,144 144    
      00205                          DEV     145,032,3,0,145,145 145    
      00206                          DEV     146,034,3,0,146,146 146    
      00207                          DEV     147,147,3,0,147,147 147    
      00210                          DEV     150,150,3,0,150,150 150    
      00211                          DEV     151,151,3,0,151,151 151    
      00212                          DEV     152,152,3,0,152,152 152    
      00213                          DEV     153,035,3,0,153,153 153    
      00214                          DEV     154,154,3,0,154,154 154    
      00215                          DEV     155,155,3,0,155,155 155    
      00216                          DEV     156,156,3,0,156,156 156    
      00217                          DEV     157,157,3,0,157,157 157    
      00220                          DEV     160,160,3,0,160,160 160    
      00221                          DEV     161,161,3,0,161,161 161    
      00222                          DEV     162,036,3,0,162,162 162    
      00223                          DEV     163,163,3,0,163,163 163    
      00224                          DEV     164,164,3,0,164,164 164    
      00225                          DEV     165,165,3,0,165,165 165    
      00226                          DEV     166,166,3,0,166,166 166    
1                                                                                06/22/70 1521.7 PAGE 4     
                  
      00227                          DEV     167,037,3,0,167,167 167    
      00230                          DEV     170,136,3,0,170,170 170    
      00231                          DEV     171,171,3,0,171,171 171    
      00232                          DEV     172,172,3,0,172,172 172    
      00233                          DEV     173,173,3,0,173,173 173    
      00234                          DEV     174,174,3,0,174,174 174    
      00235                          DEV     175,175,3,0,175,175 175    
      00236                          DEV     176,176,3,0,176,176 176    
      00237                          DEV     177,177,3,0,177,204 177    
                       00240  D2     SYN     *  
                              *      1050C DEVICE TABLE     
      00240 +000000000134            OCT     134,0    
      00241 +000000000000     
      00242                          DEV     000,000,3,0,002,204 000    
      00243                          DEV     001,001,3,0,001,204 001    
      00244                          DEV     002,002,3,0,002,204 002    
      00245                          DEV     003,003,3,0,003,204 003    
      00246                          DEV     004,004,3,0,004,204 004    
      00247                          DEV     005,005,3,0,005,204 005    
      00250                          DEV     006,006,3,0,006,204 006    
      00251                          DEV     007,007,3,0,007,204 007    
      00252                          DEV     010,010,3,0,010,211 010    
      00253                          DEV     011,011,3,0,011,207 011    
      00254                          DEV     203,012,3,0,012,205 012    
      00255                          DEV     013,013,3,0,013,210 013    
      00256                          DEV     014,014,3,0,014,204 014    
      00257                          DEV     015,015,3,0,015,204 015    
      00260                          DEV     016,016,3,0,016,210 016    
      00261                          DEV     017,017,3,0,017,210 017    
      00262                          DEV     020,020,3,0,020,204 020    
      00263                          DEV     021,021,3,0,021,204 021    
      00264                          DEV     022,022,3,0,022,204 022    
      00265                          DEV     023,023,3,0,023,204 023    
      00266                          DEV     024,024,3,0,024,204 024    
      00267                          DEV     025,025,3,0,025,204 025    
      00270                          DEV     026,026,3,0,026,204 026    
      00271                          DEV     027,027,3,0,027,204 027    
      00272                          DEV     030,030,3,0,142,201 030    
      00273                          DEV     031,031,3,0,143,201 031    
      00274                          DEV     032,032,3,0,145,201 032    
      00275                          DEV     033,033,3,0,033,204 033    
      00276                          DEV     034,034,3,0,146,201 034    
      00277                          DEV     035,035,3,0,153,201 035    
      00300                          DEV     036,036,3,0,162,201 036    
      00301                          DEV     037,037,3,0,167,201 037    
      00302                          DEV     040,040,3,0,040,206 040    
      00303                          DEV     041,041,3,0,041,041 041    
      00304                          DEV     042,042,3,0,042,042 042    
      00305                          DEV     043,043,3,0,043,043 043    
      00306                          DEV     044,044,3,0,044,044 044    
      00307                          DEV     045,045,3,0,045,045 045    
      00310                          DEV     046,046,3,0,046,046 046    
      00311                          DEV     047,140,3,0,047,047 047    
      00312                          DEV     050,173,0,0,050,050 050    
      00313                          DEV     051,175,1,0,051,051 051    
      00314                          DEV     052,052,3,0,052,052 052    
1                                                                                06/22/70 1521.7 PAGE 5     
                  
      00315                          DEV     053,053,3,0,053,053 053    
      00316                          DEV     054,054,3,0,054,054 054    
      00317                          DEV     055,055,3,0,055,055 055    
      00320                          DEV     056,056,3,0,056,056 056    
      00321                          DEV     057,057,3,0,057,057 057    
      00322                          DEV     060,204,3,0,060,060 060    
      00323                          DEV     061,204,3,0,061,061 061    
      00324                          DEV     062,204,3,0,062,062 062    
      00325                          DEV     063,204,3,0,063,063 063    
      00326                          DEV     064,204,3,0,064,064 064    
      00327                          DEV     065,204,3,0,065,065 065    
      00330                          DEV     066,204,3,0,066,066 066    
      00331                          DEV     067,204,3,0,067,067 067    
      00332                          DEV     070,070,3,0,070,070 070    
      00333                          DEV     071,071,3,0,071,071 071    
      00334                          DEV     072,072,3,0,072,072 072    
      00335                          DEV     073,073,3,0,073,073 073    
      00336                          DEV     074,074,3,0,154,201 074    
      00337                          DEV     075,075,3,0,075,075 075    
      00340                          DEV     076,076,3,0,147,201 076    
      00341                          DEV     077,077,3,0,077,077 077    
      00342                          DEV     100,100,3,0,100,100 100    
      00343                          DEV     101,101,3,0,101,101 101    
      00344                          DEV     102,030,3,0,102,102 102    
      00345                          DEV     103,031,3,0,103,103 103    
      00346                          DEV     104,104,3,0,104,104 104    
      00347                          DEV     105,032,3,0,105,105 105    
      00350                          DEV     106,034,3,0,106,106 106    
      00351                          DEV     107,076,3,0,107,107 107    
      00352                          DEV     110,110,3,0,110,110 110    
      00353                          DEV     111,111,3,0,111,111 111    
      00354                          DEV     112,112,3,0,112,112 112    
      00355                          DEV     113,035,3,0,113,113 113    
      00356                          DEV     114,074,3,0,114,114 114    
      00357                          DEV     115,115,3,0,115,115 115    
      00360                          DEV     116,136,3,0,116,116 116    
      00361                          DEV     117,117,3,0,117,117 117    
      00362                          DEV     120,120,3,0,120,120 120    
      00363                          DEV     121,121,3,0,121,121 121    
      00364                          DEV     122,036,3,0,122,122 122    
      00365                          DEV     123,123,3,0,123,123 123    
      00366                          DEV     124,176,3,0,124,124 124    
      00367                          DEV     125,125,3,0,125,125 125    
      00370                          DEV     126,126,3,0,126,126 126    
      00371                          DEV     127,037,3,0,127,127 127    
      00372                          DEV     130,136,3,0,130,130 130    
      00373                          DEV     131,131,3,0,131,131 131    
      00374                          DEV     132,132,3,0,132,132 132    
      00375                          DEV     133,133,3,0,173,201 133    
      00376                          DEV     201,201,3,0,134,204 134    
      00377                          DEV     135,135,3,0,175,201 135    
      00400                          DEV     136,136,3,0,136,136 136    
      00401                          DEV     137,137,3,0,137,137 137    
      00402                          DEV     140,140,3,0,047,201 140    
      00403                          DEV     141,141,3,0,141,141 141    
      00404                          DEV     142,030,3,0,142,142 142    
1                                                                                06/22/70 1521.7 PAGE 6     
                  
      00405                          DEV     143,031,3,0,143,143 143    
      00406                          DEV     144,144,3,0,144,144 144    
      00407                          DEV     145,032,3,0,145,145 145    
      00410                          DEV     146,034,3,0,146,146 146    
      00411                          DEV     147,076,3,0,147,147 147    
      00412                          DEV     150,150,3,0,150,150 150    
      00413                          DEV     151,151,3,0,151,151 151    
      00414                          DEV     152,152,3,0,152,152 152    
      00415                          DEV     153,035,3,0,153,153 153    
      00416                          DEV     154,074,3,0,154,154 154    
      00417                          DEV     155,155,3,0,155,155 155    
      00420                          DEV     156,136,3,0,156,156 156    
      00421                          DEV     157,157,3,0,157,157 157    
      00422                          DEV     160,160,3,0,160,160 160    
      00423                          DEV     161,161,3,0,161,161 161    
      00424                          DEV     162,036,3,0,162,162 162    
      00425                          DEV     163,163,3,0,163,163 163    
      00426                          DEV     164,176,3,0,164,164 164    
      00427                          DEV     165,165,3,0,165,165 165    
      00430                          DEV     166,166,3,0,166,166 166    
      00431                          DEV     167,037,3,0,167,167 167    
      00432                          DEV     170,136,3,0,170,170 170    
      00433                          DEV     171,171,3,0,171,171 171    
      00434                          DEV     172,172,3,0,172,172 172    
      00435                          DEV     173,173,3,0,050,201 173    
      00436                          DEV     174,174,3,0,174,174 174    
      00437                          DEV     175,175,3,0,051,201 175    
      00440                          DEV     176,176,3,0,164,201 176    
      00441                          DEV     177,177,3,0,177,204 177    
                       00442  D3     SYN     *  
                              *      1050M DEVICE TABLE     
      00442 +000000000134            OCT     134,0    
      00443 +000000000000     
      00444                          DEV     000,000,3,0,002,204 000    
      00445                          DEV     001,001,3,0,001,204 001    
      00446                          DEV     002,002,3,0,002,204 002    
      00447                          DEV     003,003,3,0,003,204 003    
      00450                          DEV     004,004,3,0,004,204 004    
      00451                          DEV     005,005,3,0,005,204 005    
      00452                          DEV     006,006,3,0,006,204 006    
      00453                          DEV     007,007,3,0,007,204 007    
      00454                          DEV     010,010,3,0,010,211 010    
      00455                          DEV     011,011,3,0,011,207 011    
      00456                          DEV     203,012,3,0,012,205 012    
      00457                          DEV     013,013,3,0,013,210 013    
      00460                          DEV     014,014,3,0,014,204 014    
      00461                          DEV     015,015,3,0,015,204 015    
      00462                          DEV     016,016,3,0,016,210 016    
      00463                          DEV     017,017,3,0,017,210 017    
      00464                          DEV     020,020,3,0,020,204 020    
      00465                          DEV     021,021,3,0,021,204 021    
      00466                          DEV     022,022,3,0,022,204 022    
      00467                          DEV     023,023,3,0,023,204 023    
      00470                          DEV     024,024,3,0,024,204 024    
      00471                          DEV     025,025,3,0,025,204 025    
      00472                          DEV     026,026,3,0,026,204 026    
1                                                                                06/22/70 1521.7 PAGE 7     
                  
      00473                          DEV     027,027,3,0,027,204 027    
      00474                          DEV     030,030,3,0,142,201 030    
      00475                          DEV     031,031,3,0,143,201 031    
      00476                          DEV     032,032,3,0,145,201 032    
      00477                          DEV     033,033,3,0,033,204 033    
      00500                          DEV     034,034,3,0,146,201 034    
      00501                          DEV     035,035,3,0,153,201 035    
      00502                          DEV     036,036,3,0,162,201 036    
      00503                          DEV     037,037,3,0,167,201 037    
      00504                          DEV     040,040,3,0,040,206 040    
      00505                          DEV     041,041,3,0,041,041 041    
      00506                          DEV     042,042,3,0,042,042 042    
      00507                          DEV     043,043,3,0,043,043 043    
      00510                          DEV     044,044,3,0,044,044 044    
      00511                          DEV     045,045,3,0,045,045 045    
      00512                          DEV     046,046,3,0,046,046 046    
      00513                          DEV     047,140,3,0,047,047 047    
      00514                          DEV     050,173,0,0,050,050 050    
      00515                          DEV     051,175,1,0,051,051 051    
      00516                          DEV     052,052,3,0,052,052 052    
      00517                          DEV     053,053,3,0,053,053 053    
      00520                          DEV     054,054,3,0,054,054 054    
      00521                          DEV     055,055,3,0,055,055 055    
      00522                          DEV     056,041,3,0,056,056 056    
      00523                          DEV     057,057,3,0,057,057 057    
      00524                          DEV     060,204,3,0,060,060 060    
      00525                          DEV     061,204,3,0,061,061 061    
      00526                          DEV     062,204,3,0,062,062 062    
      00527                          DEV     063,204,3,0,063,063 063    
      00530                          DEV     064,204,3,0,064,064 064    
      00531                          DEV     065,204,3,0,065,065 065    
      00532                          DEV     066,204,3,0,066,066 066    
      00533                          DEV     067,204,3,0,067,067 067    
      00534                          DEV     070,070,3,0,070,070 070    
      00535                          DEV     071,071,3,0,071,071 071    
      00536                          DEV     072,072,3,0,072,072 072    
      00537                          DEV     073,073,3,0,073,073 073    
      00540                          DEV     074,133,3,0,074,074 074    
      00541                          DEV     075,075,3,0,075,075 075    
      00542                          DEV     076,135,3,0,076,076 076    
      00543                          DEV     077,077,3,0,077,077 077    
      00544                          DEV     100,100,3,0,100,100 100    
      00545                          DEV     101,101,3,0,101,101 101    
      00546                          DEV     102,030,3,0,102,102 102    
      00547                          DEV     103,031,3,0,103,103 103    
      00550                          DEV     104,104,3,0,104,104 104    
      00551                          DEV     105,032,3,0,105,105 105    
      00552                          DEV     106,034,3,0,106,106 106    
      00553                          DEV     107,076,3,0,107,107 107    
      00554                          DEV     110,110,3,0,110,110 110    
      00555                          DEV     111,111,3,0,111,111 111    
      00556                          DEV     112,112,3,0,112,112 112    
      00557                          DEV     113,035,3,0,113,113 113    
      00560                          DEV     114,074,3,0,114,114 114    
      00561                          DEV     115,115,3,0,115,115 115    
      00562                          DEV     116,136,3,0,116,116 116    
1                                                                                06/22/70 1521.7 PAGE 8     
                  
      00563                          DEV     117,117,3,0,117,117 117    
      00564                          DEV     120,120,3,0,120,120 120    
      00565                          DEV     121,121,3,0,121,121 121    
      00566                          DEV     122,036,3,0,122,122 122    
      00567                          DEV     123,123,3,0,123,123 123    
      00570                          DEV     124,176,3,0,124,124 124    
      00571                          DEV     125,125,3,0,125,125 125    
      00572                          DEV     126,126,3,0,126,126 126    
      00573                          DEV     127,037,3,0,127,127 127    
      00574                          DEV     130,136,3,0,130,130 130    
      00575                          DEV     131,131,3,0,131,131 131    
      00576                          DEV     132,132,3,0,132,132 132    
      00577                          DEV     133,133,3,0,074,201 133    
      00600                          DEV     201,201,3,0,134,204 134    
      00601                          DEV     135,135,3,0,076,201 135    
      00602                          DEV     136,136,3,0,136,136 136    
      00603                          DEV     137,137,3,0,137,137 137    
      00604                          DEV     140,140,3,0,047,201 140    
      00605                          DEV     141,141,3,0,141,141 141    
      00606                          DEV     142,030,3,0,142,142 142    
      00607                          DEV     143,031,3,0,143,143 143    
      00610                          DEV     144,144,3,0,144,144 144    
      00611                          DEV     145,032,3,0,145,145 145    
      00612                          DEV     146,034,3,0,146,146 146    
      00613                          DEV     147,076,3,0,147,147 147    
      00614                          DEV     150,150,3,0,150,150 150    
      00615                          DEV     151,151,3,0,151,151 151    
      00616                          DEV     152,152,3,0,152,152 152    
      00617                          DEV     153,035,3,0,153,153 153    
      00620                          DEV     154,074,3,0,154,154 154    
      00621                          DEV     155,155,3,0,155,155 155    
      00622                          DEV     156,136,3,0,156,156 156    
      00623                          DEV     157,157,3,0,157,157 157    
      00624                          DEV     160,160,3,0,160,160 160    
      00625                          DEV     161,161,3,0,161,161 161    
      00626                          DEV     162,036,3,0,162,162 162    
      00627                          DEV     163,163,3,0,163,163 163    
      00630                          DEV     164,176,3,0,164,164 164    
      00631                          DEV     165,165,3,0,165,165 165    
      00632                          DEV     166,166,3,0,166,166 166    
      00633                          DEV     167,037,3,0,167,167 167    
      00634                          DEV     170,136,3,0,170,170 170    
      00635                          DEV     171,171,3,0,171,171 171    
      00636                          DEV     172,172,3,0,172,172 172    
      00637                          DEV     173,173,3,0,050,201 173    
      00640                          DEV     174,174,3,0,174,174 174    
      00641                          DEV     175,175,3,0,051,201 175    
      00642                          DEV     176,176,3,0,164,201 176    
      00643                          DEV     177,177,3,0,177,204 177    
                       00644  D4     SYN     *  
                              *      M35 DEVICE TABLE 
      00644 +000000000134            OCT     134,0    
      00645 +000000000000     
      00646                          DEV     000,000,3,0,002,204 000    
      00647                          DEV     001,001,3,0,001,204 001    
      00650                          DEV     002,002,3,0,002,204 002    
1                                                                                06/22/70 1521.7 PAGE 9     
                  
      00651                          DEV     003,003,3,0,003,204 003    
      00652                          DEV     004,004,3,0,004,204 004    
      00653                          DEV     005,005,3,0,005,204 005    
      00654                          DEV     006,006,3,0,006,204 006    
      00655                          DEV     007,007,3,0,007,210 007    
      00656                          DEV     010,010,3,0,055,201 010    
      00657                          DEV     011,011,3,0,011,207 011    
      00660                          DEV     203,012,3,0,012,205 012    
      00661                          DEV     013,013,3,0,013,210 013    
      00662                          DEV     014,014,3,0,014,204 014    
      00663                          DEV     015,015,3,0,015,204 015    
      00664                          DEV     016,016,3,0,016,210 016    
      00665                          DEV     017,017,3,0,017,210 017    
      00666                          DEV     020,020,3,0,020,204 020    
      00667                          DEV     021,021,3,0,021,204 021    
      00670                          DEV     022,022,3,0,022,204 022    
      00671                          DEV     023,023,3,0,023,204 023    
      00672                          DEV     024,024,3,0,024,204 024    
      00673                          DEV     025,025,3,0,025,204 025    
      00674                          DEV     026,026,3,0,026,204 026    
      00675                          DEV     027,027,3,0,027,204 027    
      00676                          DEV     030,030,3,0,142,201 030    
      00677                          DEV     031,031,3,0,143,201 031    
      00700                          DEV     032,032,3,0,145,201 032    
      00701                          DEV     033,033,3,0,033,204 033    
      00702                          DEV     034,034,3,0,146,201 034    
      00703                          DEV     035,035,3,0,153,201 035    
      00704                          DEV     036,036,3,0,162,201 036    
      00705                          DEV     037,037,3,0,167,201 037    
      00706                          DEV     040,040,3,0,040,206 040    
      00707                          DEV     041,041,3,0,041,041 041    
      00710                          DEV     042,042,3,0,042,042 042    
      00711                          DEV     043,043,3,0,043,043 043    
      00712                          DEV     044,044,3,0,044,044 044    
      00713                          DEV     045,045,3,0,045,136 045    
      00714                          DEV     046,046,3,0,046,046 046    
      00715                          DEV     047,140,3,0,047,047 047    
      00716                          DEV     050,173,0,0,050,050 050    
      00717                          DEV     051,175,1,0,051,051 051    
      00720                          DEV     052,052,3,0,052,052 052    
      00721                          DEV     053,053,3,0,053,053 053    
      00722                          DEV     054,054,3,0,054,054 054    
      00723                          DEV     055,010,3,0,055,055 055    
      00724                          DEV     056,041,3,0,056,056 056    
      00725                          DEV     057,057,3,0,057,057 057    
      00726                          DEV     060,204,3,0,060,060 060    
      00727                          DEV     061,204,2,0,061,061 061    
      00730                          DEV     062,204,2,0,062,062 062    
      00731                          DEV     063,204,2,0,063,063 063    
      00732                          DEV     064,204,2,0,064,064 064    
      00733                          DEV     065,204,2,0,065,065 065    
      00734                          DEV     066,204,2,0,066,066 066    
      00735                          DEV     067,204,2,0,067,067 067    
      00736                          DEV     070,070,2,0,070,070 070    
      00737                          DEV     071,071,2,0,071,071 071    
      00740                          DEV     072,072,3,0,072,072 072    
1                                                                                06/22/70 1521.7 PAGE 10    
                  
      00741                          DEV     073,073,3,0,073,073 073    
      00742                          DEV     074,074,3,0,074,074 074    
      00743                          DEV     075,075,3,0,075,075 075    
      00744                          DEV     076,076,3,0,076,076 076    
      00745                          DEV     077,077,3,0,077,077 077    
      00746                          DEV     100,100,3,0,100,100 100    
      00747                          DEV     202,101,3,0,101,202 101    
      00750                          DEV     202,030,3,0,102,202 102    
      00751                          DEV     202,031,3,0,103,202 103    
      00752                          DEV     202,104,3,0,104,202 104    
      00753                          DEV     202,032,3,0,105,202 105    
      00754                          DEV     202,034,3,0,106,202 106    
      00755                          DEV     202,076,3,0,107,202 107    
      00756                          DEV     202,110,3,0,110,202 110    
      00757                          DEV     202,111,3,0,111,202 111    
      00760                          DEV     202,112,3,0,112,202 112    
      00761                          DEV     202,035,3,0,113,202 113    
      00762                          DEV     202,202,3,0,114,202 114    
      00763                          DEV     202,115,3,0,115,202 115    
      00764                          DEV     202,136,3,0,116,202 116    
      00765                          DEV     202,117,3,0,117,202 117    
      00766                          DEV     202,120,3,0,120,202 120    
      00767                          DEV     202,121,3,0,121,202 121    
      00770                          DEV     202,036,3,0,122,202 122    
      00771                          DEV     202,123,3,0,123,202 123    
      00772                          DEV     202,176,3,0,124,202 124    
      00773                          DEV     202,203,3,0,125,202 125    
      00774                          DEV     202,126,3,0,126,202 126    
      00775                          DEV     202,037,3,0,127,202 127    
      00776                          DEV     202,136,3,0,130,202 130    
      00777                          DEV     202,131,3,0,131,202 131    
      01000                          DEV     202,132,3,0,132,202 132    
      01001                          DEV     133,133,3,0,173,133 133    
      01002                          DEV     201,201,3,0,134,204 134    
      01003                          DEV     135,135,3,0,175,135 135    
      01004                          DEV     045,136,3,0,170,201 136    
      01005                          DEV     137,137,3,0,137,137 137    
      01006                          DEV     140,140,3,0,047,201 140    
      01007                          DEV     202,141,3,0,141,203 141    
      01010                          DEV     202,030,3,0,142,203 142    
      01011                          DEV     202,031,3,0,143,203 143    
      01012                          DEV     202,144,3,0,144,203 144    
      01013                          DEV     202,032,3,0,145,203 145    
      01014                          DEV     202,034,3,0,146,203 146    
      01015                          DEV     202,076,3,0,147,203 147    
      01016                          DEV     202,150,3,0,150,203 150    
      01017                          DEV     202,151,3,0,151,203 151    
      01020                          DEV     202,152,3,0,152,203 152    
      01021                          DEV     202,035,3,0,153,203 153    
      01022                          DEV     202,202,3,0,154,203 154    
      01023                          DEV     202,155,3,0,155,203 155    
      01024                          DEV     202,136,3,0,156,203 156    
      01025                          DEV     202,157,3,0,157,203 157    
      01026                          DEV     202,160,3,0,160,203 160    
      01027                          DEV     202,161,3,0,161,203 161    
      01030                          DEV     202,036,3,0,162,203 162    
1                                                                                06/22/70 1521.7 PAGE 11    
                  
      01031                          DEV     202,163,3,0,163,203 163    
      01032                          DEV     202,176,3,0,164,203 164    
      01033                          DEV     202,203,3,0,165,203 165    
      01034                          DEV     202,166,3,0,166,203 166    
      01035                          DEV     202,037,3,0,167,203 167    
      01036                          DEV     202,136,3,0,170,203 170    
      01037                          DEV     202,171,3,0,171,203 171    
      01040                          DEV     202,172,3,0,172,203 172    
      01041                          DEV     173,173,3,0,050,201 173    
      01042                          DEV     174,174,3,0,174,174 174    
      01043                          DEV     175,175,3,0,051,201 175    
      01044                          DEV     176,176,3,0,164,201 176    
      01045                          DEV     177,177,3,0,177,204 177    
                                     END  
1                                                                                06/22/70 1521.7 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1046 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         36     D1     6,   17,   31,   36
        240     D2     7,  240
        442     D3    10,  442
        644     D4    11,  644
         12    DT1     4
         32    DT2    14,   15
         20    DT3    26
          0 DEVTBL     5
         14 FREEDT     0
          4 INITDT     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




REMARK   BCD 09/18/68 2319.5    4783         00000    
1                                                                                                PAGE 1     
                           FILE NAME -- MAIN0 FAP                                   
                  
                  
                                             DUMMY ROUTINE FOR MAD PROGRAMS   
                  
                  
  BINARY CARD NO. DUMMY000    
            PROGRAM CARD
                  
        TRANSFER VECTOR 
                  
  BINARY CARD NO. DUMMY001    
      00000  263151626360     FIRST 
      00001  244651444563     DORMNT
                  
      00002  0074 00 4 00000         TSX     $FIRST,4      CALL MAD PROGRAM   
      00003  3 00000 0 00000         PTH     0             PASS ABSOLUTE ZERO 
      00004  0074 00 4 00001         TSX     $DORMNT,4     STOP IF RETURN     
                                     END  
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          5 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          0  FIRST     2
          1 DORMNT     4
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1     MAD PROGRAM LISTING ... ... ...                 FILE   REMRK   MAD            02/07/68    2321.4
-                 
                      REMARK COMMAND FOR NEW FILE SYSTEM                                               LM00001    
                           D.R. WIDRIG  FEB. 1966                                                      LM00002    
                                                                                                       LM00003    
                      LOADING INSTRUCTIONS                                                             LM00004    
                           MAD REMARK (LIST)                                                           LM00005    
                           FAP (MAIN) (LIST)                                                           LM00006    
                           NCLOAD (MAIN) REMARK                                                        LM00007    
                           SAVE REMARK                                                                 LM00008    
                                                                                                       LM00009    
                  EXTERNAL FUNCTION (BUFF)                                                        *001 LM00010    
                  ENTRY TO FIRST.                                                                 *002 LM00011    
                  ENTRY TO REMARK.                                                                *003 LM00012    
                                                                                                       LM00013    
                  NORMAL MODE IS INTEGER                                                          *004 LM00014    
                                                                                                       LM00015    
                  VECTOR VALUES MESS1 = $COMMAND FORM IS ... REMARK NAME1 -NAME2-$,               *005 LM00016    
                1      777777777777K                                                              *005 LM00017    
                  VECTOR VALUES MESS2 = $NAME2 IS TAKEN AS 'BCD' IF OMITTED$,                     *006 LM00018    
                1      777777777777K                                                              *006 LM00019    
                  VECTOR VALUES MESS3 = $REMARKS MUST BE CARD-IMAGE AND LESS THAN FIVE            *007 LM00020    
                1 RECORDS LONG$,777777777777K                                                     *007 LM00021    
                  VECTOR VALUES LINE(1)...LINE(14) = $      $                                     *008 LM00022    
                  VECTOR VALUES USER = $  USER$                                                   *009 LM00023    
                  VECTOR VALUES REMARK = $REMARK$                                                 *010 LM00024    
                                                                                                       LM00025    
                  VECTOR VALUES FENCE = 777777777777K                                             *011 LM00026    
                  VECTOR VALUES LINMK = 777777K                                                   *012 LM00027    
                  VECTOR VALUES MXWORD = 2160                                                     *013 LM00028    
                                                                                                       LM00029    
                      GET COMMAND ARGUMENTS                                                            LM00030    
                                                                                                       LM00031    
                  WHENEVER COMARG.(1,N1) .E. FENCE                                                *014 LM00032    
                       PRNTP.(MESS1)                                                              *015 LM00033    
                       PRNTP.(MESS2)                                                              *016 LM00034    
      GRIPE            PRNTP.(MESS3)                                                              *017 LM00035    
                       CHNCOM.(0)                                                                 *018 LM00036    
                  OR WHENEVER COMARG.(2,N2) .E. FENCE                                             *019 LM00037    
                       N2 = $   BCD$                                                              *020 LM00038    
                  END OF CONDITIONAL                                                              *021 LM00039    
                                                                                                       LM00040    
                      SET ERROR RETURN AND CHECK REMARK FILE                                           LM00041    
                                                                                                       LM00042    
                  FERRTN.(ERR1)                                                                   *022 LM00043    
                  FSTATE.(N1,N2,LTH...1)                                                          *023 LM00044    
                  WHENEVER (LTH.G.MXWORD) .OR. (((LTH/14)*14).NE.LTH), TRANSFER TO GRIPE          *024 LM00045    
                                                                                                       LM00046    
                      SO FAR SO GOOD, NOW SET BUFFERS                                                  LM00047    
                                                                                                       LM00048    
                  BUFF1 = 1K5 - GMEM.(DUMMY)                                                      *025 LM00049    
                  BUFF2 = BUFF1 - 432                                                             *026 LM00050    
                  EXMEM.(LTH+432)                                                                 *027 LM00051    
                                                                                                       LM00052    
                      READ IN REMARK FILE                                                              LM00053    
                                                                                                       LM00054    
                  OPEN.($R$,N1,N2,DUMMY)                                                          *028 LM00055    
                  RDFILE.(N1,N2,1,BUFF(BUFF2)...LTH)                                              *029 LM00056    
                  CLOSE.(N1,N2)                                                                   *030 LM00057    
                                                                                                       LM00058    
                      MAKE SURE IT IS CARD-IMAGE                                                       LM00059    
                                                                                                       LM00060    
                  WHENEVER ((BUFF(BUFF2).RS.18) .E. LINMK), TRANSFER TO GRIPE                     *031 LM00061    
                                                                                                       LM00062    
                      MOVE TO PUBLIC FILE AND WRITE HEADER                                             LM00063    
                                                                                                       LM00064    
                  TSSFIL.                                                                         *032 LM00065    
                  OPEN.($W$,USER,REMARK,0)                                                        *033 LM00066    
                  BUFFER.(USER,REMARK,BUFF(BUFF1)...432)                                          *034 LM00067    
                  WRWAIT.(USER,REMARK,0,LINE(14)...14)                                            *035 LM00068    
                                                                                                       LM00069    
                      GET IDENTIFICATION                                                               LM00070    
                                                                                                       LM00071    
                  GETTM.(LINE(8),LINE(7))                                                         *036 LM00072    
                  WHOAMI.(LINE(12)...2)                                                           *037 LM00073    
                  WRFILE.(USER,REMARK,0,LINE(14)...14)                                            *038 LM00074    
                                                                                                       LM00075    
                      NOW APPEND USER'S REMARK                                                         LM00076    
                                                                                                       LM00077    
                  WRFILE.(USER,REMARK,0,BUFF(BUFF2)...LTH)                                        *039 LM00078    
                  CLOSE.(USER,REMARK)                                                             *040 LM00079    
                                                                                                       LM00080    
                      MOVE BACK TO USER'S DIRECTORY                                                    LM00081    
                                                                                                       LM00082    
                  USRFIL.                                                                         *041 LM00083    
                  CHNCOM.(0)                                                                      *042 LM00084    
                                                                                                       LM00085    
                      ERROR, ANNOUNCE IT                                                               LM00086    
                                                                                                       LM00087    
      ERR1        PRNTER.(61K)                                                                    *043 LM00088    
                  CLOSE.($ALL$,-0,NERR1)                                                          *044 LM00089    
      NERR1       CHNCOM.(1)                                                                      *045 LM00090    
                                                                                                       LM00091    
                  END OF FUNCTION                                                                 *046 LM00092    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00365 TRANSFER VECTOR LENGTH  00023 PROGRAM BEGINS    00130
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      REMARK 00134   0        FIRST  00131   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BUFF1  00027   1        FENCE  00032 A 1        LTH    00053   1        MXWORD 00106 A 1        NERR1  00026   4  
      BUFF2  00030   1        GRIPE  00025   4        MESS1  00063 A 1        N1     00107   1        REMARK 00111 A 1  
      DUMMY  00031   1        LINE   00051 A 1        MESS2  00072 A 1        N2     00110   1        USER   00112 A 1  
      ERR1   00024   4        LINMK  00052 A 1        MESS3  00105 A 1                                                  
0FUNCTION DICTIONARY    
      BUFFER 00000   1        CHNCOM 00001   1        CLOSE  00002   1        COMARG 00003   1        EXIT   00004   1  
      EXMEM  00005   1        FERRTN 00006   1        FSTATE 00007   1        GETTM  00010   1        GMEM   00011   1  
      OPEN   00012   1        PRNTER 00013   1        PRNTP  00014   1        RDFILE 00015   1        TSSFIL 00016   1  
      USRFIL 00017   1        WHOAMI 00020   1        WRFILE 00021   1        WRWAIT 00022   1                          
0ABSOLUTE CONSTANTS     
 00123 +214343606060     00120 +000000000061     00127 -266060606060     00117 +000000000022     00125 -116060606060    
 00121 +000000000660     00122 +000000100000     00116 +000000000016     00126 -206060222324     00115 +000000000002    
 00113 +000000000000     00114 +000000000001     00124 +233000000000                                                    
0STATEMENT DICTIONARY   
 00024 TXL -300334000332       00025 TXL -300151000147       00026 TXL -300344000342                                    
0PROGRAM    
                 EXTERNAL FUNCTION (BUFF)                                           001  LM00010
                 E'O FIRST.                                                         002  LM00011
 00130 TRA +0 02000 0 00133    00131 SXA +0 63400 2 00345    00132 TSX +0 07400 2 00345                                 
                 E'O REMARK.                                                        003  LM00012
 00133 TRA +0 02000 0 00136    00134 SXA +0 63400 2 00345    00135 TSX +0 07400 2 00345                                 
                 N'R                                                                004  LM00014
                 V'S MESS1 = $COMMAND FORM IS ... REMARK NAME1 -NAME2-$,            005  LM00016
                1     777777777777K                                                 005  LM00017
 00054     -3 77777 7 77777    00055     -0 42502 4 06060    00056     +2 50160 4 04521    00057     -1 14260 4 52144   
 00060     +3 36051 2 54421    00061     -2 03162 6 03333    00062     +2 46026 4 65144    00063     +2 34644 4 42145   
                 V'S MESS2 = $NAME2 IS TAKEN AS 'BCD' IF OMITTED$,                  006  LM00018
                1     777777777777K                                                 006  LM00019
 00064     -3 77777 7 77777    00065     -2 36325 2 46060    00066     +3 12660 4 64431    00067     +1 42223 2 41460   
 00070     +2 54560 2 16260    00071     +3 16260 6 32142    00072     -0 52144 2 50260                                 
                 V'S MESS3 = $REMARKS MUST BE CARD-IMAGE AND LESS THAN FIVE         007  LM00020
                1RECORDS LONG$,777777777777K                                        007  LM00021
 00073     -3 77777 7 77777    00074     -2 26043 4 64527    00075     -1 12523 4 65124    00076     +3 16525 6 06060   
 00077     -2 33021 4 56026    00100     -2 04325 6 26260    00101     +2 72560 2 14524    00102     -1 12440 3 14421   
 00103     -2 02225 6 02321    00104     -2 26044 6 46263    00105     -1 12544 2 15142                                 
                 V'S LINE(1)...LINE(14) = $      $                                  008  LM00022
 00033     -2 06060 6 06060    00034     -2 06060 6 06060    00035     -2 06060 6 06060    00036     -2 06060 6 06060   
 00037     -2 06060 6 06060    00040     -2 06060 6 06060    00041     -2 06060 6 06060    00042     -2 06060 6 06060   
 00043     -2 06060 6 06060    00044     -2 06060 6 06060    00045     -2 06060 6 06060    00046     -2 06060 6 06060   
 00047     -2 06060 6 06060    00050     -2 06060 6 06060                                                               
                 V'S USER = $  USER$                                                009  LM00023
 00112     -2 06064 6 22551                                                                                             
                 V'S REMARK = $REMARK$                                              010  LM00024
 00111     -1 12544 2 15142                                                                                             
                 V'S FENCE = 777777777777K                                          011  LM00026
 00032     -3 77777 7 77777                                                                                             
                 V'S LINMK = 777777K                                                012  LM00027
 00052     +0 00000 7 77777                                                                                             
                 V'S MXWORD = 2160                                                  013  LM00028
 00106     +0 00000 0 04160                                                                                             
                 W'R COMARG.(1,N1) .E. FENCE                                        014  LM00032
 00136 TSX +0 07400 4 00003    00137 TXH +3 00000 0 00114    00140 TXH +3 00000 0 00107    00141 SUB +0 40200 0 00032   
 00142 TNZ -0 10000 0 00154                                                                                             
                      PRNTP.(MESS1)                                                 015  LM00033
 00143 TSX +0 07400 4 00014    00144 TXH +3 00000 0 00063                                                               
                      PRNTP.(MESS2)                                                 016  LM00034
 00145 TSX +0 07400 4 00014    00146 TXH +3 00000 0 00072                                                               
      GRIPE           PRNTP.(MESS3)                                                 017  LM00035
 00147 TSX +0 07400 4 00014    00150 TXH +3 00000 0 00105                                                               
                      CHNCOM.(0)                                                    018  LM00036
 00151 TSX +0 07400 4 00001    00152 TXH +3 00000 0 00113                                                               
                 O'R COMARG.(2,N2) .E. FENCE                                        019  LM00037
 00153 TRA +0 02000 0 00163    00154 TSX +0 07400 4 00003    00155 TXH +3 00000 0 00115    00156 TXH +3 00000 0 00110   
 00157 SUB +0 40200 0 00032    00160 TNZ -0 10000 0 00163                                                               
                      N2 = $   BCD$                                                 020  LM00038
 00161 CLA +0 50000 0 00126    00162 STO +0 60100 0 00110                                                               
                 E'L                                                                021  LM00039
                 FERRTN.(ERR1)                                                      022  LM00043
 00163 TSX +0 07400 4 00006    00164 TXH +3 00000 0 00024                                                               
                 FSTATE.(N1,N2,LTH...1)                                             023  LM00044
 00165 TSX +0 07400 4 00007    00166 TXH +3 00000 0 00107    00167 TXH +3 00000 0 00110    00170 TIX +2 00114 0 00053   
                 W'R (LTH.G.MXWORD) .OR. (((LTH/14)*14).NE.LTH), T'O GRIPE          024  LM00045
 00171 LDQ +0 56000 0 00053    00172 PXD -0 75400 0 00000    00173 LLS +0 76300 0 00000    00174 DVP +0 22100 0 00116   
 00175 MPY +0 20000 0 00116    00176 XCA +0 13100 0 00000    00177 SUB +0 40200 0 00053    00200 TNZ -0 10000 0 00205   
 00201 CLA +0 50000 0 00053    00202 SUB +0 40200 0 00106    00203 TZE +0 10000 0 00206    00204 TMI -0 12000 0 00206   
 00205 TRA +0 02000 0 00025                                                                                             
                 BUFF1 = 1K5 - GMEM.(DUMMY)                                         025  LM00049
 00206 TSX +0 07400 4 00011    00207 TXH +3 00000 0 00031    00210 CHS +0 76000 0 00002    00211 ADD +0 40000 0 00122   
 00212 STO +0 60100 0 00027                                                                                             
                 BUFF2 = BUFF1 - 432                                                026  LM00050
 00213 CLA +0 50000 0 00027    00214 SUB +0 40200 0 00121    00215 STO +0 60100 0 00030                                 
                 EXMEM.(LTH+432)                                                    027  LM00051
 00216 CLA +0 50000 0 00053    00217 ADD +0 40000 0 00121    00220 STO +0 60100 0 00362    00221 TSX +0 07400 4 00005   
 00222 TXH +3 00000 0 00362                                                                                             
                 OPEN.($R$,N1,N2,DUMMY)                                             028  LM00055
 00223 TSX +0 07400 4 00012    00224 TXH +3 00000 0 00125    00225 TXH +3 00000 0 00107    00226 TXH +3 00000 0 00110   
 00227 TXH +3 00000 0 00031                                                                                             
                 RDFILE.(N1,N2,1,BUFF(BUFF2)...LTH)                                 029  LM00056
 00230 CLA +0 50000 0 00030    00231 SUB +0 40200 0 00232    00232 TXH +3 00000 0 00024    00233 STA +0 62100 0 00240   
 00234 TSX +0 07400 4 00015    00235 TXH +3 00000 0 00107    00236 TXH +3 00000 0 00110    00237 TXH +3 00000 0 00114   
 00240 TIX +2 00053 0 00000                                                                                             
                 CLOSE.(N1,N2)                                                      030  LM00057
 00241 TSX +0 07400 4 00002    00242 TXH +3 00000 0 00107    00243 TXH +3 00000 0 00110                                 
                 W'R ((BUFF(BUFF2).RS.18) .E. LINMK), T'O GRIPE                     031  LM00061
 00244 LXA +0 53400 1 00030    00245 CAL -0 50000 0 00117    00246 STA +0 62100 0 00250    00247 CAL -0 50000 1 00024   
 00250 LGR -0 76500 0 00000    00251 SLW +0 60200 0 00362    00252 CLA +0 50000 0 00362    00253 SUB +0 40200 0 00052   
 00254 TNZ -0 10000 0 00256    00255 TRA +0 02000 0 00025                                                               
                 TSSFIL.                                                            032  LM00065
 00256 TSX +0 07400 4 00016                                                                                             
                 OPEN.($W$,USER,REMARK,0)                                           033  LM00066
 00257 TSX +0 07400 4 00012    00260 TXH +3 00000 0 00127    00261 TXH +3 00000 0 00112    00262 TXH +3 00000 0 00111   
 00263 TXH +3 00000 0 00113                                                                                             
                 BUFFER.(USER,REMARK,BUFF(BUFF1)...432)                             034  LM00067
 00264 CLA +0 50000 0 00027    00265 SUB +0 40200 0 00266    00266 TXH +3 00000 0 00024    00267 STA +0 62100 0 00273   
 00270 TSX +0 07400 4 00000    00271 TXH +3 00000 0 00112    00272 TXH +3 00000 0 00111    00273 TIX +2 00121 0 00000   
                 WRWAIT.(USER,REMARK,0,LINE(14)...14)                               035  LM00068
 00274 TSX +0 07400 4 00022    00275 TXH +3 00000 0 00112    00276 TXH +3 00000 0 00111    00277 TXH +3 00000 0 00113   
 00300 TIX +2 00116 0 00033                                                                                             
                 GETTM.(LINE(8),LINE(7))                                            036  LM00072
 00301 TSX +0 07400 4 00010    00302 TXH +3 00000 0 00041    00303 TXH +3 00000 0 00042                                 
                 WHOAMI.(LINE(12)...2)                                              037  LM00073
 00304 TSX +0 07400 4 00020    00305 TIX +2 00115 0 00035                                                               
                 WRFILE.(USER,REMARK,0,LINE(14)...14)                               038  LM00074
 00306 TSX +0 07400 4 00021    00307 TXH +3 00000 0 00112    00310 TXH +3 00000 0 00111    00311 TXH +3 00000 0 00113   
 00312 TIX +2 00116 0 00033                                                                                             
                 WRFILE.(USER,REMARK,0,BUFF(BUFF2)...LTH)                           039  LM00078
 00313 CLA +0 50000 0 00030    00314 SUB +0 40200 0 00315    00315 TXH +3 00000 0 00024    00316 STA +0 62100 0 00323   
 00317 TSX +0 07400 4 00021    00320 TXH +3 00000 0 00112    00321 TXH +3 00000 0 00111    00322 TXH +3 00000 0 00113   
 00323 TIX +2 00053 0 00000                                                                                             
                 CLOSE.(USER,REMARK)                                                040  LM00079
 00324 TSX +0 07400 4 00002    00325 TXH +3 00000 0 00112    00326 TXH +3 00000 0 00111                                 
                 USRFIL.                                                            041  LM00083
 00327 TSX +0 07400 4 00017                                                                                             
                 CHNCOM.(0)                                                         042  LM00084
 00330 TSX +0 07400 4 00001    00331 TXH +3 00000 0 00113                                                               
      ERR1       PRNTER.(61K)                                                       043  LM00088
 00332 TSX +0 07400 4 00013    00333 TXH +3 00000 0 00120                                                               
                 CLOSE.($ALL$,-0,NERR1)                                             044  LM00089
 00334 CLS +0 50200 0 00113    00335 STO +0 60100 0 00362    00336 TSX +0 07400 4 00002    00337 TXH +3 00000 0 00123   
 00340 TXH +3 00000 0 00362    00341 TXH +3 00000 0 00026                                                               
      NERR1      CHNCOM.(1)                                                         045  LM00090
 00342 TSX +0 07400 4 00001    00343 TXH +3 00000 0 00114                                                               
                 E'N                                                                046  LM00092
 00344 TSX +0 07400 4 00004    00345 TXH +3 00000 0 00000    00346 SXD -0 63400 1 00345    00347 SXA +0 63400 4 00356   
 00350 CLA +0 50000 4 00001    00351 STO +0 60100 0 00232    00352 STA +0 62100 0 00247    00353 STO +0 60100 0 00266   
 00354 STO +0 60100 0 00315    00355 TRA +0 02000 2 00001    00356 AXT +0 77400 4 00000    00357 LXA +0 53400 2 00345   
 00360 LXD -0 53400 1 00345    00361 TRA +0 02000 4 00001                                                               




REVOKE   BCD 09/18/68 2319.5    3663         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   REVOK   MAD            02/08/68    1227.3
-                 
                 ..   REVOKE COMMAND.                                                                  LM00001    
                                                                                                       LM00002    
                 ..  DOES GARBAGE COLLECTION, BUT                                                      LM00003    
                 ..  DOESN'T CHASE-DOWN LINKS TO                                                       LM00004    
                 ..  UNLINK EXISTING LINKS TO                                                          LM00005    
                 ..  FILE BEING REVOKED.                                                               LM00006    
                                                                                                       LM00007    
                 ..  J. H. SALTZER, AUGUST, 1965.                                                      LM00008    
                   (MODIFIED AND MAINTAINED BY D.E. OPPERT)                                            LM00009    
                      (SEPT-NOV, 1965)                                                                 LM00010    
                                                                                                       LM00011    
                                                                                                       LM00012    
                  NORMAL MODE IS INTEGER                                                          *001 LM00013    
                  VECTOR VALUES DVEC(6) = 777777000005K                                           *002 LM00014    
                  VECTOR VALUES FENCE = 777777777777K                                             *003 LM00015    
                  VECTOR VALUES DVEC(1)...DVEC(5) = $REVOKE$                                      *004 LM00016    
                  VECTOR VALUES P = $PERMIT$                                                      *005 LM00017    
                  VECTOR VALUES F = $  FILE$                                                      *006 LM00018    
                  DIMENSION VEC(5), RVEC(6)                                                       *007 LM00019    
                  DIMENSION RBUFF(432)                                                            *008 LM00020    
                                                                                                       LM00021    
                 ..  CHECK ARGUMENTS.                                                                  LM00022    
                                                                                                       LM00023    
                  THROUGH GETARG, FOR I = 5, -1, I .L. 2                                          *009 LM00024    
                    VEC(I) = COMARG.(6-I)                                                         *010 LM00025    
      GETARG        WHENEVER VEC(I) .E. FENCE, TRANSFER TO BADARG                                 *011 LM00026    
                  WHENEVER COMARG.(5) .NE. FENCE, TRANSFER TO BADARG                              *012 LM00027    
                  WHENEVER VEC(3) .NE. $     *$ .AND. VEC(3) .NE. $REVOKE$                        *013 LM00028    
                    VEC(3) = REPROB.(VEC(3))                                                      *014 LM00029    
                  END OF CONDITIONAL                                                              *015 LM00030    
                                                                                                       LM00031    
                  OPEN.($RW$, P, F, 040K)                                                         *016 LM00032    
                  BUFFER.(P, F, RBUFF(432)...432)                                                 *017 LM00033    
                  PNTR = 1                                                                        *018 LM00034    
      LOOP        RDWAIT.(P, F, PNTR, RVEC(6)...6, EOF)                                           *019 LM00035    
                  THROUGH CPR, FOR I = 5, -1, I .L. 2                                             *020 LM00036    
      CPR           WHENEVER VEC(I) .NE. RVEC(I), TRANSFER TO SCAN                                *021 LM00037    
                                                                                                       LM00038    
                   FOUND THE FILE TO BE DELETED FROM P F                                               LM00039    
                                                                                                       LM00040    
      PA          RDWAIT. (P, F, PNTR+6, RVEC(6)...6, EOF2)                                       *022 LM00041    
                  WRWAIT. (P, F, PNTR,   RVEC(6)...6)                                             *023 LM00042    
                                                                                                       LM00043    
                  PNTR = PNTR + 6                                                                 *024 LM00044    
                  TRANSFER TO PA                                                                  *025 LM00045    
                                                                                                       LM00046    
                   AN ENTRY IN P F HAS BEEN REMOVED.                                                   LM00047    
                   LOOP ENTITLED PA WILL BE XEC'D UNTIL                                                LM00048    
                   END OF FILE IS REACHED.  FILE                                                       LM00049    
                   MUST THEN BE TRUNCATED.                                                             LM00050    
                                                                                                       LM00051    
      EOF2        TRFILE. (P, F, PNTR)                                                            *026 LM00052    
                                                                                                       LM00053    
                                                                                                       LM00054    
      EOF         CLOSE.(P, F)                                                                    *027 LM00055    
                  CHNCOM.(0)                                                                      *028 LM00056    
                                                                                                       LM00057    
                                                                                                       LM00058    
      SCAN        PNTR = PNTR + 6                                                                 *029 LM00059    
                  TRANSFER TO LOOP                                                                *030 LM00060    
                                                                                                       LM00061    
                                                                                                       LM00062    
      BADARG      PRINT COMMENT $REVOKE NAME1 NAME2 PROBNO PROGNO$                                *031 LM00063    
                  CHNCOM.(0)                                                                      *032 LM00064    
                                                                                                       LM00065    
                  END OF PROGRAM                                                                  *033 LM00066    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01135 TRANSFER VECTOR LENGTH  00014 PROGRAM BEGINS    00750
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BADARG 00015   4        EOF    00017   4        I      00034   1        PNTR   00035   1        RVEC   00726 A 1  
      CPR    00014   4        FENCE  00032 A 1        LOOP   00020   4        P      00036 A 1        SCAN   00022   4  
      DVEC   00031 A 1        F      00033 A 1        PA     00021   4        RBUFF  00717 A 1        VEC    00734 A 1  
      EOF2   00016   4        GETARG 00014   4                                                                          
0FUNCTION DICTIONARY    
      BUFFER 00000   1        CHNCOM 00001   1        CLOSE  00002   1        COMARG 00003   1        EXIT   00004   1  
      .PCOMT 00005   1        .SETUP 00006   1        OPEN   00007   1        RDWAIT 00010   1        REPROB 00011   1  
      TRFILE 00012   1        WRWAIT 00013   1                                                                          
0ABSOLUTE CONSTANTS     
 00735 +000000000000     00743 +000000000660     00742 +000000000040     00746 -116660606060     00747 -206060606054    
 00745 -112565464225     00741 +000000000006     00737 +000000000002     00740 +000000000005     00736 +000000000001    
 00744 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00015 TXL -301127001117       00016 TXL -301106001102       00017 TXL -301111001106       00020 TXL -301037001031      
 00021 TXL -301071001060       00022 TXL -301116001113                                                                  
0PROGRAM    
                 NORMAL MODE IS INTEGER                                             001  LM00013
                 VECTOR VALUES DVEC(6) = 777777000005K                              002  LM00014
 00750 TSX +0 07400 4 00006    00023     -3 77777 0 00005                                                               
                 VECTOR VALUES FENCE = 777777777777K                                003  LM00015
 00032     -3 77777 7 77777                                                                                             
                 VECTOR VALUES DVEC(1)...DVEC(5) = $REVOKE$                         004  LM00016
 00024     -1 12565 4 64225    00025     -1 12565 4 64225    00026     -1 12565 4 64225    00027     -1 12565 4 64225   
 00030     -1 12565 4 64225                                                                                             
                 VECTOR VALUES P = $PERMIT$                                         005  LM00017
 00036     -0 72551 4 43163                                                                                             
                 VECTOR VALUES F = $  FILE$                                         006  LM00018
 00033     -2 06026 3 14325                                                                                             
                 DIMENSION VEC(5), RVEC(6)                                          007  LM00019
                 DIMENSION RBUFF(432)                                               008  LM00020
                 THROUGH GETARG, FOR I = 5, -1, I .L. 2                             009  LM00024
 00751 CLA +0 50000 0 00740    00752 STO +0 60100 0 00034    00753 TRA +0 02000 0 00757    00754 CLS +0 50200 0 00736   
 00755 ADD +0 40000 0 00034    00756 STO +0 60100 0 00034    00757 CLA +0 50000 0 00034    00760 SUB +0 40200 0 00737   
 00761 TZE +0 10000 0 00763    00762 TMI -0 12000 0 01000                                                               
                   VEC(I) = COMARG.(6-I)                                            010  LM00025
 00763 CLA +0 50000 0 00741    00764 SUB +0 40200 0 00034    00765 STO +0 60100 0 01132    00766 TSX +0 07400 4 00003   
 00767 TXH +3 00000 0 01132    00770 LXA +0 53400 1 00034    00771 STO +0 60100 1 00734                                 
      GETARG       WHENEVER VEC(I) .E. FENCE, TRANSFER TO BADARG                    011  LM00026
 00772 LXA +0 53400 1 00034    00773 CLA +0 50000 1 00734    00774 SUB +0 40200 0 00032    00775 TNZ -0 10000 0 00777   
 00776 TRA +0 02000 0 00015    00777 TRA +0 02000 0 00754                                                               
                 WHENEVER COMARG.(5) .NE. FENCE, TRANSFER TO BADARG                 012  LM00027
 01000 TSX +0 07400 4 00003    01001 TXH +3 00000 0 00740    01002 SUB +0 40200 0 00032    01003 TZE +0 10000 0 01005   
 01004 TRA +0 02000 0 00015                                                                                             
                 W'R VEC(3) .NE. $     *$ .AND. VEC(3) .NE. $REVOKE$                013  LM00028
 01005 CLA +0 50000 0 00731    01006 SUB +0 40200 0 00745    01007 TZE +0 10000 0 01016    01010 CLA +0 50000 0 00731   
 01011 SUB +0 40200 0 00747    01012 TZE +0 10000 0 01016                                                               
                   VEC(3) = REPROB.(VEC(3))                                         014  LM00029
 01013 TSX +0 07400 4 00011    01014 TXH +3 00000 0 00731    01015 STO +0 60100 0 00731                                 
                 END OF CONDITIONAL                                                 015  LM00030
                 OPEN.($RW$, P, F, 040K)                                            016  LM00032
 01016 TSX +0 07400 4 00007    01017 TXH +3 00000 0 00746    01020 TXH +3 00000 0 00036    01021 TXH +3 00000 0 00033   
 01022 TXH +3 00000 0 00742                                                                                             
                 BUFFER.(P, F, RBUFF(432)...432)                                    017  LM00033
 01023 TSX +0 07400 4 00000    01024 TXH +3 00000 0 00036    01025 TXH +3 00000 0 00033    01026 TIX +2 00743 0 00037   
                 PNTR = 1                                                           018  LM00034
 01027 CLA +0 50000 0 00736    01030 STO +0 60100 0 00035                                                               
      LOOP       RDWAIT.(P, F, PNTR, RVEC(6)...6, EOF)                              019  LM00035
 01031 TSX +0 07400 4 00010    01032 TXH +3 00000 0 00036    01033 TXH +3 00000 0 00033    01034 TXH +3 00000 0 00035   
 01035 TIX +2 00741 0 00720    01036 TXH +3 00000 0 00017                                                               
                 THROUGH CPR, FOR I = 5, -1, I .L. 2                                020  LM00036
 01037 CLA +0 50000 0 00740    01040 STO +0 60100 0 00034    01041 TRA +0 02000 0 01045    01042 CLS +0 50200 0 00736   
 01043 ADD +0 40000 0 00034    01044 STO +0 60100 0 00034    01045 CLA +0 50000 0 00034    01046 SUB +0 40200 0 00737   
 01047 TZE +0 10000 0 01051    01050 TMI -0 12000 0 01060                                                               
      CPR          WHENEVER VEC(I) .NE. RVEC(I), TRANSFER TO SCAN                   021  LM00037
 01051 LXA +0 53400 1 00034    01052 LXA +0 53400 2 00034    01053 CLA +0 50000 1 00734    01054 SUB +0 40200 2 00726   
 01055 TZE +0 10000 0 01057    01056 TRA +0 02000 0 00022    01057 TRA +0 02000 0 01042                                 
      PA         RDWAIT. (P, F, PNTR+6, RVEC(6)...6, EOF2)                          022  LM00041
 01060 CLA +0 50000 0 00035    01061 ADD +0 40000 0 00741    01062 STO +0 60100 0 01132    01063 TSX +0 07400 4 00010   
 01064 TXH +3 00000 0 00036    01065 TXH +3 00000 0 00033    01066 TXH +3 00000 0 01132    01067 TIX +2 00741 0 00720   
 01070 TXH +3 00000 0 00016                                                                                             
                 WRWAIT. (P, F, PNTR,   RVEC(6)...6)                                023  LM00042
 01071 TSX +0 07400 4 00013    01072 TXH +3 00000 0 00036    01073 TXH +3 00000 0 00033    01074 TXH +3 00000 0 00035   
 01075 TIX +2 00741 0 00720                                                                                             
                 PNTR = PNTR + 6                                                    024  LM00044
 01076 CLA +0 50000 0 00035    01077 ADD +0 40000 0 00741    01100 STO +0 60100 0 00035                                 
                 T'O PA                                                             025  LM00045
 01101 TRA +0 02000 0 00021                                                                                             
      EOF2       TRFILE. (P, F, PNTR)                                               026  LM00052
 01102 TSX +0 07400 4 00012    01103 TXH +3 00000 0 00036    01104 TXH +3 00000 0 00033    01105 TXH +3 00000 0 00035   
      EOF        CLOSE.(P, F)                                                       027  LM00055
 01106 TSX +0 07400 4 00002    01107 TXH +3 00000 0 00036    01110 TXH +3 00000 0 00033                                 
                 CHNCOM.(0)                                                         028  LM00056
 01111 TSX +0 07400 4 00001    01112 TXH +3 00000 0 00735                                                               
      SCAN       PNTR = PNTR + 6                                                    029  LM00059
 01113 CLA +0 50000 0 00035    01114 ADD +0 40000 0 00741    01115 STO +0 60100 0 00035                                 
                 T'O LOOP                                                           030  LM00060
 01116 TRA +0 02000 0 00020                                                                                             
      BADARG     PRINT COMMENT $REVOKE NAME1 NAME2 PROBNO PROGNO$                   031  LM00063
 01117 TSX +0 07400 4 00005    01120     +0 00000 0 00006    01121     -1 12565 4 64225    01122     -2 04521 4 42501   
 01123     -2 04521 4 42502    01124     -2 04751 4 62245    01125     -0 66047 5 14627    01126     -0 54660 6 06060   
                 CHNCOM.(0)                                                         032  LM00064
 01127 TSX +0 07400 4 00001    01130 TXH +3 00000 0 00735                                                               
                 END OF PROGRAM                                                     033  LM00066
 01131 TSX +0 07400 4 00004                                                                                             
1                                                                                                PAGE 1     
                           FILE NAME -- REPRB FAP                                   
                  
                  
                              *     
                       00002         ENTRY   REPROB        REFORMAT PROBLEM NUMBER. 
                              *      J.H. SALTZER     
                              *      (MAINTAINED BY D.E. OPPERT)  
                              *      (SEPT - OCT, 1965)     
                              *     
                              *     
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  512547514622     
                  
      00002  0560 60 4 00001  REPROB LDQ*    1,4           GET PROBLEM NUMBER WITH LEADING BLANKS.    
      00003  0774 00 1 00000         AXT     0,1           COUNT BLANKS.
      00004 -0754 00 0 00000  LP     ZAC                   CLEAR FOR COMPARISON.    
      00005 -0763 00 0 00006         LGL     6             GET NEXT CHARACTER.
      00006 -0340 00 0 00024         LAS     =H00000       COMPARE WITH ONE BLANK.  
      00007  0020 00 0 00011         TRA     FND           NOT BLANK, GO.     
      00010  1 00001 1 00004         TXI     LP,1,1        YES, COUNT IT.     
      00011 -0501 00 0 00025  FND    ORA     =H0000 0      NON-BLANK FOUND, ADD PRECEDING BLANK.
      00012 -2 00001 1 00015  LOOP   TNX     DONE,1,1      SEE HOW MANY ZEROS TO ADD.     
      00013  0767 00 0 00006         ALS     6             MOVE IN A ZERO.    
      00014  0020 00 0 00012         TRA     LOOP     
      00015  0140 00 0 00016  DONE   TOV     *+1           TURN OFF OVERFLOW INDICATOR.   
      00016 -0763 00 0 00006         LGL     6  
      00017 -0140 00 0 00016         TNO     *-1           ..     
      00020  0602 00 0 00023         SLW     TEMP     
      00021  0500 00 0 00023         CLA     TEMP     
      00022  0020 00 4 00001         TRA     1,4           RETURN TO MAD PROGRAM    
      00023  0 00000 0 00000  TEMP                         TEMPORARY STORAGE FOR RESULT.  
                                     END  
                  
        LITERALS  
      00024  000000000060     
      00025  000000006000     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         26 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          4     LP    10
         11    FND     7
         15   DONE    12
         12   LOOP    14
         23   TEMP    20,   21
          2 REPROB     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




RQUEST   BCD 02/09/69 0028.9   12794         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  RQUEST   MAD            01/25/69    2140.7
-                 
                  .. THE REQUEST COMMAND 'RQUEST'.                                                     LM00001    
                  .. REWRITTEN BY ROGER ROACH 3/25/68 TO BELIEVE IN THE LISTF                          LM00002    
                  .. STAR '*' CONVENTIONS.                                                             LM00003    
                  .. LAST MODIFIED 04/16/68 BY D.A. ANDERSON                                           LM00004    
                                                                                                       LM00005    
                  NORMAL MODE IS INTEGER                                                          *001 LM00006    
                  BOOLEAN CARRYI, SCANI, ONCE, FIRST, CLOSEI,GOOD                                 *002 LM00007    
                  DIMENSION COMBUF(20),LINE(15),ENTRY(9),BUFF(431)                                *003 LM00008    
                  EQUIVALENCE (COMBUF(20),FENCE),(ENTRY(9),N1),(ENTRY(8),N2)                      *004 LM00009    
                  EQUIVALENCE (ENTRY(1),N3),(ENTRY,N4)                                            *005 LM00010    
                  VECTOR VALUES CARRYI = 0B                                                       *006 LM00011    
                  VECTOR VALUES CLOSEI = 0B                                                       *007 LM00012    
                  VECTOR VALUES ONCE = 1B                                                         *008 LM00013    
                  VECTOR VALUES FIRST = 1B                                                        *009 LM00014    
                  VECTOR VALUES GOOD = 0B                                                         *010 LM00015    
                  VECTOR VALUES ANSWER = $YES$                                                    *011 LM00016    
                  VECTOR VALUES D = 2                                                             *012 LM00017    
                  VECTOR VALUES FENCE = 777777777777K                                             *013 LM00018    
                  VECTOR VALUES B = 605757575757K                                                 *014 LM00019    
                  VECTOR VALUES CB = 736057575757K                                                *015 LM00020    
                  VECTOR VALUES OR = 465157575757K                                                *016 LM00021    
                  VECTOR VALUES OUT = $OUTPUT$                                                    *017 LM00022    
                  VECTOR VALUES RQ = $RQUEST$                                                     *018 LM00023    
                  VECTOR VALUES TABLE = 14,$ PRINT$,$PRNDEL$,$SSPRNT$,$SSPRDL$,$BPUNCH$,          *019 LM00024    
                1  $BPUDEL$,$DPUNCH$,$DPUDEL$,$7PUNCH$,$7PUDEL$,$DELETE$,                         *019 LM00025    
                2  $  PLOT$,$PLODEL$,$ CARRY$                                                     *019 LM00026    
                                                                                                       LM00027    
                  INITIALIZE THE COMMAND BUFFERS AND TEST FOR NO ARGUMENTS.                            LM00028    
                                                                                                       LM00029    
                  GCLS.(COMBUF,0)                                                                 *020 LM00030    
                  RQ = COMBUF(0)                                                                  *021 LM00031    
                  WHENEVER COMBUF(1).E. FENCE                                                     *022 LM00032    
                    PRMESS.(COMBUF,$ CMMD NAME1 NAME2 ...ETC$)                                    *023 LM00033    
                    PRMESS.($  WHERE CMMD MAY BY ANY OF THE FOLLOWING -$)                         *024 LM00034    
                    THROUGH LOOP0, FOR I=1,1,I.G.TABLE-1                                          *025 LM00035    
                    PRMESA.(TABLE(I),CB)                                                          *026 LM00036    
      LOOP0         WHENEVER I.E. I/9*9, PRMESS.                                                  *027 LM00037    
                    PRMESS.(OR,TABLE(TABLE))                                                      *028 LM00038    
                    CHNCOM.(0)                                                                    *029 LM00039    
                  END OF CONDITIONAL                                                              *030 LM00040    
                                                                                                       LM00041    
                                                                                                       LM00042    
      LOOP1       THROUGH LOOP1, FOR I=1,1,COMBUF(1).E.TABLE(I).OR.I.G.TABLE                      *031 LM00043    
                  WHENEVER I .G. TABLE                                                            *032 LM00044    
                    PRMESS.(COMBUF(1),$ IS NOT A RQUEST$)                                         *033 LM00045    
                    CHNCOM.(0)                                                                    *034 LM00046    
                  END OF CONDITIONAL                                                              *035 LM00047    
                                                                                                       LM00048    
                                                                                                       LM00049    
                  WHOAMI.(LINE(3)...4)                                                            *036 LM00050    
                  FERRTN.(IOERR)                                                                  *037 LM00051    
                  LINE(15) = COMBUF(1)                                                            *038 LM00052    
                  FSTATE.(OUT,RQ,ENTRY(7)...8,FERR,FCODE)                                         *039 LM00053    
                  WHENEVER ENTRY(5).NE.1                                                          *040 LM00054    
                    PRMESS.($THE RQUEST FILE IS BUSY.  RETYPE RQUEST LATER.$)                     *041 LM00055    
                    CHNCOM.(0)                                                                    *042 LM00056    
                  OR WHENEVER ENTRY(6) .A. 1 .NE. 0                                               *043 LM00057    
                    CHFILE.(OUT,RQ,1,-0,-0)                                                       *044 LM00058    
                    DELFIL.(OUT,RQ)                                                               *045 LM00059    
                  END OF CONDITIONAL                                                              *046 LM00060    
                                                                                                       LM00061    
                                                                                                       LM00062    
      OK          WHENEVER COMBUF(1) .E. $ CARRY$                                                 *047 LM00063    
                    CARRYI = 1B                                                                   *048 LM00064    
                    D = 6                                                                         *049 LM00065    
                  END OF CONDITIONAL                                                              *050 LM00066    
                                                                                                       LM00067    
                                                                                                       LM00068    
                  THROUGH LOOP2,FOR I = 2,D,COMBUF(I).E.FENCE.OR.I.G.18                           *051 LM00069    
                  WHENEVER COMBUF(I+1).E.FENCE                                                    *052 LM00070    
                    PRMESS.(COMBUF(I),$ IS AN INCOMPLETE REQUEST. $)                              *053 LM00071    
                    TRANSFER TO GOHOME                                                            *054 LM00072    
                  END OF CONDITIONAL                                                              *055 LM00073    
                                                                                                       LM00074    
                                                                                                       LM00075    
                  MASK1 = NAMASK.(COMBUF(I))                                                      *056 LM00076    
                  MASK2 = NAMASK.(COMBUF(I+1))                                                    *057 LM00077    
                  WHENEVER MASK1.A.MASK2 .E. FENCE                                                *058 LM00078    
                    SCANI = 0B                                                                    *059 LM00079    
                    N1 = COMBUF(I)                                                                *060 LM00080    
                    N2 = COMBUF(I+1)                                                              *061 LM00081    
                    FSTATE.(N1,N2,ENTRY(7)...8,IOERR2,ERCODE)                                     *062 LM00082    
                  OTHERWISE                                                                       *063 LM00083    
                    SCANI = 1B                                                                    *064 LM00084    
                    WHENEVER ONCE                                                                 *065 LM00085    
                      ONCE = 0B                                                                   *066 LM00086    
                      UPDATE.                                                                     *067 LM00087    
                      SCNFIL.($U.F.D.(FILE)$)                                                     *068 LM00088    
                    END OF CONDITIONAL                                                            *069 LM00089    
                    ISCAN.(COMBUF(I),COMBUF(I+1))                                                 *070 LM00090    
                    SCAN.(ENTRY(9)...7,NOPE)                                                      *071 LM00091    
                  END OF CONDITIONAL                                                              *072 LM00092    
                                                                                                       LM00093    
                                                                                                       LM00094    
                  TRANSFER TO FTEST                                                               *073 LM00095    
                                                                                                       LM00096    
                                                                                                       LM00097    
      LOOP2       CONTINUE                                                                        *074 LM00098    
      GOHOME      WRTBUF.                                                                         *075 LM00099    
      EGRETS      WHENEVER CLOSEI, CLOSE.($ALL$,-0)                                               *076 LM00100    
                  RESETF.                                                                         *077 LM00101    
                  CHNCOM.(0)                                                                      *078 LM00102    
                                                                                                       LM00103    
                                                                                                       LM00104    
      FERR        WHENEVER FCODE .E. 3 , TRANSFER TO OK                                           *079 LM00105    
      IOERR       PRNTER.(61K)                                                                    *080 LM00106    
                  TRANSFER TO EGRETS                                                              *081 LM00107    
                                                                                                       LM00108    
                                                                                                       LM00109    
      IOERR2      WHENEVER ERCODE .E. 3                                                           *082 LM00110    
      NOPE          PRMESS.(COMBUF(I),B,COMBUF(I+1),$ NOT FOUND,$)                                *083 LM00111    
                    WHENEVER CARRYI .AND. (COMBUF(I+2).E.FENCE.OR.COMBUF(I+3).E.                  *084 LM00112    
                1     FENCE.OR.COMBUF(I+4).E.FENCE.OR.COMBUF(I+5).E.FENCE),D=20                   *084 LM00113    
                    WHENEVER .NOT.SCANI, TRANSFER TO ASK                                          *085 LM00114    
                    TRANSFER TO LOOP2                                                             *086 LM00115    
                  OTHERWISE                                                                       *087 LM00116    
                    PRNTER.(61K)                                                                  *088 LM00117    
                    TRANSFER TO LOOP2                                                             *089 LM00118    
                  END OF CONDITIONAL                                                              *090 LM00119    
                                                                                                       LM00120    
                                                                                                       LM00121    
      FTEST       WHENEVER (.NOT.SCANI.AND.ENTRY(6).A.20K.NE.0).OR.                               *091 LM00122    
                1   (SCANI.AND.(ENTRY(5).RS.28).A.20K.NE.0)                                       *091 LM00123    
                      PRMESA.(N1,B,N2,$ IS IN 'PRIVATE' MODE.$)                                   *092 LM00124    
      ASK             PRMESA.($DO YOU STILL WANT REQUEST,$)                                       *093 LM00125    
                      WHENEVER LINE.NE.$(FIB)$, RDFLXC.(ANSWER,6)                                 *094 LM00126    
                      WHENEVER ANSWER.NE.$YES$, TRANSFER TO NEXT                                  *095 LM00127    
                  END OF CONDITIONAL                                                              *096 LM00128    
                  WHENEVER FIRST                                                                  *097 LM00129    
                    FIRST = 0B                                                                    *098 LM00130    
                    OPEN.($W$,OUT,RQ)                                                             *099 LM00131    
                    BUFFER.(OUT,RQ,BUFF(431)...432)                                               *100 LM00132    
                    SETBUF.(LINE(14)...11,GOOD,WRCARD.,PANIC)                                     *101 LM00133    
                  END OF CONDITIONAL                                                              *102 LM00134    
                  WHENEVER CARRYI                                                                 *103 LM00135    
                    ATTNAM.(ENTRY(3)...2)                                                         *104 LM00136    
                    ENTRY(1) = N1                                                                 *105 LM00137    
                    ENTRY = N2                                                                    *106 LM00138    
                    THROUGH LOOP3, FOR J=1,1,J.G.4.OR.COMBUF(I+1+J).E.FENCE                       *107 LM00139    
                    WHENEVER COMBUF(I+J+1).E.$     *$, TRANSFER TO LOOP3                          *108 LM00140    
                    ENTRY(4-J) = COMBUF(I+1+J)                                                    *109 LM00141    
      LOOP3         CONTINUE                                                                      *110 LM00142    
                    WHENEVER COMBUF(I+J+1) .E. FENCE, D = 20                                      *111 LM00143    
                    MASK3 = NAMASK.(N3)                                                           *112 LM00144    
                    MASK4 = NAMASK.(N4)                                                           *113 LM00145    
                    MASK3P = COM.(MASK3)                                                          *114 LM00146    
                    MASK4P = COM.(MASK4)                                                          *115 LM00147    
                    N3 = (N1.A.MASK3P).V.(N3.A.MASK3)                                             *116 LM00148    
                    N4 = (N2.A.MASK4P).V.(N4.A.MASK4)                                             *117 LM00149    
                    FILBUF.(ENTRY(9)...2,ENTRY(3)...4)                                            *118 LM00150    
                    WRTBUF.                                                                       *119 LM00151    
                  OTHERWISE                                                                       *120 LM00152    
                    FILBUF.(ENTRY(9)...2)                                                         *121 LM00153    
                  END OF CONDITIONAL                                                              *122 LM00154    
                                                                                                       LM00155    
      NEXT        WHENEVER SCANI                                                                  *123 LM00156    
                    SCAN.(ENTRY(9)...7,LOOP2)                                                     *124 LM00157    
                    TRANSFER TO FTEST                                                             *125 LM00158    
                  OTHERWISE                                                                       *126 LM00159    
                    TRANSFER TO LOOP2                                                             *127 LM00160    
                  END OF CONDITIONAL                                                              *128 LM00161    
                                                                                                       LM00162    
      PANIC       PRMESS.($MACHINE OR SYSTEM ERROR. IGNORING$,N1,N2)                              *129 LM00163    
                  TRANSFER TO NEXT                                                                *130 LM00164    
                                                                                                       LM00165    
                  INTERNAL FUNCTION                                                               *131 LM00166    
                  ENTRY TO WRCARD.                                                                *132 LM00167    
                                                                                                       LM00168    
                  WRWAIT.(OUT,RQ,0,LINE(15)...14)                                                 *133 LM00169    
                  GOOD = 0B                                                                       *134 LM00170    
                  CLOSEI = 1B                                                                     *135 LM00171    
                  FUNCTION RETURN                                                                 *136 LM00172    
                                                                                                       LM00173    
                  END OF FUNCTION                                                                 *137 LM00174    
                                                                                                       LM00175    
                  END OF PROGRAM                                                                  *138 LM00176    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   02155 TRANSFER VECTOR LENGTH  00034 PROGRAM BEGINS    01166
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ANSWER 00112 A 1        ENTRY  00074 A 1        IOERR  00103   4        MASK3P 01030   1        NOPE   00107   4  
      ASK    00075   4        ERCODE 01000   1        I      01004   1        MASK3  01031   1        OK     00110   4  
      B      00113 A 1        FCODE  01001   1        J      01005   1        MASK4P 01032   1        ONCE   01034 A 2  
      BUFF   00773 A 1        FENCE  00036 A 1        LINE   01025 A 1        MASK4  01033   1        OR     01035 A 1  
      CARRYI 00774 A 2        FERR   00077   4        LOOP0  00035   4        N1     00063   1        OUT    01036 A 1  
      CB     00775 A 1        FIRST  01002 A 2        LOOP1  00035   4        N2     00064   1        PANIC  00111   4  
      CLOSEI 00776 A 2        FTEST  00100   4        LOOP2  00104   4        N3     00073   1        RQ     01037 A 1  
      COMBUF 00062 A 1        GOHOME 00101   4        LOOP3  00105   4        N4     00074   1        SCANI  01040   2  
      D      00777 A 1        GOOD   01003 A 2        MASK1  01026   1        NEXT   00106   4        TABLE  01057 A 1  
      EGRETS 00076   4        IOERR2 00102   4        MASK2  01027   1                                                  
0FUNCTION DICTIONARY    
      ATTNAM 00000   1        BUFFER 00001   1        CHFILE 00002   1        CHNCOM 00003   1        CLOSE  00004   1  
      COM    00005   1        DELFIL 00006   1        EXIT   00007   1        FERRTN 00010   1        FILBUF 00011   1  
      FSTATE 00012   1        GCLS   00013   1        ISCAN  00014   1        .SETUP 00015   1        NAMASK 00016   1  
      OPEN   00017   1        PRMESA 00020   1        PRMESS 00021   1        PRNTER 00022   1        RDFLXC 00023   1  
      RESETF 00024   1        SCAN   00025   1        SCNFIL 00026   1        SETBUF 00027   1        UPDATE 00030   1  
      WHOAMI 00031   1        WRTBUF 00032   1        WRWAIT 00033   1        WRCARD 00034   1                          
0ABSOLUTE CONSTANTS     
 01073 +000000000016     01113 +314527606060     01133 -203127454651     01106 +255151465133     01163 -306263254460    
 01110 +256046516062     01115 -042123303145     01143 -206060606054     01072 +000000000013     01101 +000000000660    
 01160 -266060606060     01161 -302562606060     01164 -342631223460     01153 -237360606060     01146 -206621456360    
 01145 -206263314343     01105 +244660704664     01120 -062425336060     01103 +216325146044     01126 -201447513165    
 01136 -203162603145     01074 +000000000020     01077 +000000000034     01076 +000000000024     01065 +000000000005    
 01122 -066445247360     01141 -204546636026     01100 +000000000061     01063 +000000000003     01102 +214343606060    
 01067 +000000000007     01165 -342631432534     01156 -243326332433     01151 -233360606060     01125 -112550642562    
 01124 -074325632560     01134 -203145234644     01135 -203162602145     01075 +000000000022     01062 +000000000002    
 01066 +000000000006     01130 -202321515170     01147 -232551336060     01111 +256263604321     01123 -072560515064    
 01142 -206051256370     01127 -202264627033     01112 +314325603162     01154 -242562636026     01150 -233025605150    
 01070 +000000000010     01064 +000000000004     01155 -242562636060     01152 -236021605150     01137 -203162604546    
 01071 +000000000011     01157 -263145276040     01132 -202646434346     01121 -062660633025     01162 -306021457060    
 01140 -204421706022     01107 +256023444424     01144 -206066302551     01114 +333333256323     01117 -052144250260    
 01116 -052144250160     01131 -202344442460     01060 +000000000000     01061 +000000000001     01104 +233000000000    
0STATEMENT DICTIONARY   
 00075 TXL -301716001710       00076 TXL -301554001545       00077 TXL -301563001557       00100 TXL -301700001654      
 00101 TXL -301545001544       00102 TXL -301571001566       00103 TXL -301565001563       00104 TXL -301544001543      
 00105 TXL -302025002024       00106 TXL -302101002077       00107 TXL -301610001571       00110 TXL -301377001374      
 00111 TXL -302120002107                                                                                                
0PROGRAM    
                 N'R                                                                001  LM00006
                 BOOLEAN CARRYI, SCANI, ONCE, FIRST, CLOSEI,GOOD                    002  LM00007
                 D'N COMBUF(20),LINE(15),ENTRY(9),BUFF(431)                         003  LM00008
                 E'E (COMBUF(20),FENCE),(ENTRY(9),N1),(ENTRY(8),N2)                 004  LM00009
                 E'E (ENTRY(1),N3),(ENTRY,N4)                                       005  LM00010
                 V'S CARRYI = 0B                                                    006  LM00011
 01166 TSX +0 07400 4 00015    00774     +0 00000 0 00000                                                               
                 V'S CLOSEI = 0B                                                    007  LM00012
 00776     +0 00000 0 00000                                                                                             
                 V'S ONCE = 1B                                                      008  LM00013
 01034     +0 00000 0 00001                                                                                             
                 V'S FIRST = 1B                                                     009  LM00014
 01002     +0 00000 0 00001                                                                                             
                 V'S GOOD = 0B                                                      010  LM00015
 01003     +0 00000 0 00000                                                                                             
                 V'S ANSWER = $YES$                                                 011  LM00016
 00112     -3 02562 6 06060                                                                                             
                 V'S D = 2                                                          012  LM00017
 00777     +0 00000 0 00002                                                                                             
                 V'S FENCE = 777777777777K                                          013  LM00018
 00036     -3 77777 7 77777                                                                                             
                 V'S B = 605757575757K                                              014  LM00019
 00113     -2 05757 5 75757                                                                                             
                 V'S CB = 736057575757K                                             015  LM00020
 00775     -3 36057 5 75757                                                                                             
                 V'S OR = 465157575757K                                             016  LM00021
 01035     -0 65157 5 75757                                                                                             
                 V'S OUT = $OUTPUT$                                                 017  LM00022
 01036     -0 66463 4 76463                                                                                             
                 V'S RQ = $RQUEST$                                                  018  LM00023
 01037     -1 15064 2 56263                                                                                             
                 V'S TABLE = 14,$ PRINT$,$PRNDEL$,$SSPRNT$,$SSPRDL$,$BPUNCH$,       019  LM00024
                1 $BPUDEL$,$DPUNCH$,$DPUDEL$,$7PUNCH$,$7PUDEL$,$DELETE$,            019  LM00025
                2 $  PLOT$,$PLODEL$,$ CARRY$                                        019  LM00026
 01041     -2 02321 5 15170    01042     -0 74346 2 42543    01043     -2 06047 4 34663    01044     +2 42543 2 56325   
 01045     +0 74764 2 42543    01046     +0 74764 4 52330    01047     +2 44764 2 42543    01050     +2 44764 4 52330   
 01051     +2 24764 2 42543    01052     +2 24764 4 52330    01053     -2 26247 5 12443    01054     -2 26247 5 14563   
 01055     -0 75145 2 42543    01056     -2 04751 3 14563    01057     +0 00000 0 00016                                 
                 GCLS.(COMBUF,0)                                                    020  LM00030
 01167 TSX +0 07400 4 00013    01170 TXH +3 00000 0 00062    01171 TXH +3 00000 0 01060                                 
                 RQ = COMBUF(0)                                                     021  LM00031
 01172 CLA +0 50000 0 00062    01173 STO +0 60100 0 01037                                                               
                 W'R COMBUF(1).E. FENCE                                             022  LM00032
 01174 CLA +0 50000 0 00061    01175 SUB +0 40200 0 00036    01176 TNZ -0 10000 0 01264                                 
                   PRMESS.(COMBUF,$ CMMD NAME1 NAME2 ...ETC$)                       023  LM00033
 01177 TSX +0 07400 4 00021    01200 TXH +3 00000 0 00062    01201 TXH +3 00000 0 01131    01202 TXH +3 00000 0 01116   
 01203 TXH +3 00000 0 01117    01204 TXH +3 00000 0 01114                                                               
                   PRMESS.($  WHERE CMMD MAY BY ANY OF THE FOLLOWING -$)            024  LM00034
 01205 TSX +0 07400 4 00021    01206 TXH +3 00000 0 01144    01207 TXH +3 00000 0 01107    01210 TXH +3 00000 0 01140   
 01211 TXH +3 00000 0 01162    01212 TXH +3 00000 0 01121    01213 TXH +3 00000 0 01132    01214 TXH +3 00000 0 01157   
                   T'H LOOP0, FOR I=1,1,I.G.TABLE-1                                 025  LM00035
 01215 CLA +0 50000 0 01061    01216 STO +0 60100 0 01004    01217 TRA +0 02000 0 01223    01220 CLA +0 50000 0 01004   
 01221 ADD +0 40000 0 01061    01222 STO +0 60100 0 01004    01223 CLA +0 50000 0 01057    01224 SUB +0 40200 0 01061   
 01225 CHS +0 76000 0 00002    01226 ADD +0 40000 0 01004    01227 TZE +0 10000 0 01231    01230 TPL +0 12000 0 01253   
                   PRMESA.(TABLE(I),CB)                                             026  LM00036
 01231 CLA +0 50000 0 01004    01232 SUB +0 40200 0 01233    01233 TXH +3 00000 0 01057    01234 STA +0 62100 0 01236   
 01235 TSX +0 07400 4 00020    01236 TXH +3 00000 0 00000    01237 TXH +3 00000 0 00775                                 
      LOOP0        W'R I.E. I/9*9, PRMESS.                                          027  LM00037
 01240 LDQ +0 56000 0 01004    01241 PXD -0 75400 0 00000    01242 LLS +0 76300 0 00000    01243 DVP +0 22100 0 01071   
 01244 MPY +0 20000 0 01071    01245 XCA +0 13100 0 00000    01246 CHS +0 76000 0 00002    01247 ADD +0 40000 0 01004   
 01250 TNZ -0 10000 0 01252    01251 TSX +0 07400 4 00021    01252 TRA +0 02000 0 01220                                 
                   PRMESS.(OR,TABLE(TABLE))                                         028  LM00038
 01253 CLA +0 50000 0 01057    01254 SUB +0 40200 0 01255    01255 TXH +3 00000 0 01057    01256 STA +0 62100 0 01261   
 01257 TSX +0 07400 4 00021    01260 TXH +3 00000 0 01035    01261 TXH +3 00000 0 00000                                 
                   CHNCOM.(0)                                                       029  LM00039
 01262 TSX +0 07400 4 00003    01263 TXH +3 00000 0 01060                                                               
                 E'L                                                                030  LM00040
      LOOP1      T'H LOOP1, FOR I=1,1,COMBUF(1).E.TABLE(I).OR.I.G.TABLE             031  LM00043
 01264 CLA +0 50000 0 01061    01265 STO +0 60100 0 01004    01266 TRA +0 02000 0 01272    01267 CLA +0 50000 0 01004   
 01270 ADD +0 40000 0 01061    01271 STO +0 60100 0 01004    01272 CLA +0 50000 0 01004    01273 SUB +0 40200 0 01057   
 01274 TZE +0 10000 0 01276    01275 TPL +0 12000 0 01303    01276 LXA +0 53400 2 01004    01277 CLA +0 50000 0 00061   
 01300 SUB +0 40200 2 01057    01301 TZE +0 10000 0 01303    01302 TRA +0 02000 0 01267                                 
                 W'R I .G. TABLE                                                    032  LM00044
 01303 CLA +0 50000 0 01004    01304 SUB +0 40200 0 01057    01305 TZE +0 10000 0 01316    01306 TMI -0 12000 0 01316   
                   PRMESS.(COMBUF(1),$ IS NOT A RQUEST$)                            033  LM00045
 01307 TSX +0 07400 4 00021    01310 TXH +3 00000 0 00061    01311 TXH +3 00000 0 01137    01312 TXH +3 00000 0 01152   
 01313 TXH +3 00000 0 01155                                                                                             
                   CHNCOM.(0)                                                       034  LM00046
 01314 TSX +0 07400 4 00003    01315 TXH +3 00000 0 01060                                                               
                 E'L                                                                035  LM00047
                 WHOAMI.(LINE(3)...4)                                               036  LM00050
 01316 TSX +0 07400 4 00031    01317 TIX +2 01064 0 01022                                                               
                 FERRTN.(IOERR)                                                     037  LM00051
 01320 TSX +0 07400 4 00010    01321 TXH +3 00000 0 00103                                                               
                 LINE(15) = COMBUF(1)                                               038  LM00052
 01322 CLA +0 50000 0 00061    01323 STO +0 60100 0 01006                                                               
                 FSTATE.(OUT,RQ,ENTRY(7)...8,FERR,FCODE)                            039  LM00053
 01324 TSX +0 07400 4 00012    01325 TXH +3 00000 0 01036    01326 TXH +3 00000 0 01037    01327 TIX +2 01070 0 00065   
 01330 TXH +3 00000 0 00077    01331 TXH +3 00000 0 01001                                                               
                 W'R ENTRY(5).NE.1                                                  040  LM00054
 01332 CLA +0 50000 0 00067    01333 SUB +0 40200 0 01061    01334 TZE +0 10000 0 01351                                 
                   PRMESS.($THE RQUEST FILE IS BUSY.  RETYPE RQUEST LATER.$)        041  LM00055
 01335 TSX +0 07400 4 00021    01336 TXH +3 00000 0 01150    01337 TXH +3 00000 0 01154    01340 TXH +3 00000 0 01112   
 01341 TXH +3 00000 0 01127    01342 TXH +3 00000 0 01142    01343 TXH +3 00000 0 01123    01344 TXH +3 00000 0 01111   
 01345 TXH +3 00000 0 01147                                                                                             
                   CHNCOM.(0)                                                       042  LM00056
 01346 TSX +0 07400 4 00003    01347 TXH +3 00000 0 01060                                                               
                 O'R ENTRY(6) .A. 1 .NE. 0                                          043  LM00057
 01350 TRA +0 02000 0 01374    01351 CAL -0 50000 0 00066    01352 ANA -0 32000 0 01061    01353 SLW +0 60200 0 02151   
 01354 CLA +0 50000 0 02151    01355 SUB +0 40200 0 01060    01356 TZE +0 10000 0 01374                                 
                   CHFILE.(OUT,RQ,1,-0,-0)                                          044  LM00058
 01357 CLS +0 50200 0 01060    01360 STO +0 60100 0 02151    01361 CLS +0 50200 0 01060    01362 STO +0 60100 0 02152   
 01363 TSX +0 07400 4 00002    01364 TXH +3 00000 0 01036    01365 TXH +3 00000 0 01037    01366 TXH +3 00000 0 01061   
 01367 TXH +3 00000 0 02152    01370 TXH +3 00000 0 02151                                                               
                   DELFIL.(OUT,RQ)                                                  045  LM00059
 01371 TSX +0 07400 4 00006    01372 TXH +3 00000 0 01036    01373 TXH +3 00000 0 01037                                 
                 E'L                                                                046  LM00060
      OK         W'R COMBUF(1) .E. $ CARRY$                                         047  LM00063
 01374 CLA +0 50000 0 00061    01375 SUB +0 40200 0 01130    01376 TNZ -0 10000 0 01403                                 
                   CARRYI = 1B                                                      048  LM00064
 01377 CLA +0 50000 0 01061    01400 STO +0 60100 0 00774                                                               
                   D = 6                                                            049  LM00065
 01401 CLA +0 50000 0 01066    01402 STO +0 60100 0 00777                                                               
                 E'L                                                                050  LM00066
                 T'H LOOP2,FOR I = 2,D,COMBUF(I).E.FENCE.OR.I.G.18                  051  LM00069
 01403 CLA +0 50000 0 01062    01404 STO +0 60100 0 01004    01405 TRA +0 02000 0 01411    01406 CLA +0 50000 0 01004   
 01407 ADD +0 40000 0 00777    01410 STO +0 60100 0 01004    01411 CLA +0 50000 0 01004    01412 SUB +0 40200 0 01075   
 01413 TZE +0 10000 0 01415    01414 TPL +0 12000 0 01544    01415 LXA +0 53400 1 01004    01416 CLA +0 50000 1 00062   
 01417 SUB +0 40200 0 00036    01420 TZE +0 10000 0 01544                                                               
                 W'R COMBUF(I+1).E.FENCE                                            052  LM00070
 01421 CLA +0 50000 0 01004    01422 ADD +0 40000 0 01061    01423 PAX +0 73400 1 00000    01424 CLA +0 50000 1 00062   
 01425 SUB +0 40200 0 00036    01426 TNZ -0 10000 0 01443                                                               
                   PRMESS.(COMBUF(I),$ IS AN INCOMPLETE REQUEST. $)                 053  LM00071
 01427 CLA +0 50000 0 01004    01430 SUB +0 40200 0 01431    01431 TXH +3 00000 0 00062    01432 STA +0 62100 0 01434   
 01433 TSX +0 07400 4 00021    01434 TXH +3 00000 0 00000    01435 TXH +3 00000 0 01135    01436 TXH +3 00000 0 01134   
 01437 TXH +3 00000 0 01124    01440 TXH +3 00000 0 01125    01441 TXH +3 00000 0 01151                                 
                   T'O GOHOME                                                       054  LM00072
 01442 TRA +0 02000 0 00101                                                                                             
                 E'L                                                                055  LM00073
                 MASK1 = NAMASK.(COMBUF(I))                                         056  LM00076
 01443 CLA +0 50000 0 01004    01444 SUB +0 40200 0 01445    01445 TXH +3 00000 0 00062    01446 STA +0 62100 0 01450   
 01447 TSX +0 07400 4 00016    01450 TXH +3 00000 0 00000    01451 STO +0 60100 0 01026                                 
                 MASK2 = NAMASK.(COMBUF(I+1))                                       057  LM00077
 01452 CLA +0 50000 0 01004    01453 ADD +0 40000 0 01061    01454 SUB +0 40200 0 01455    01455 TXH +3 00000 0 00062   
 01456 STA +0 62100 0 01460    01457 TSX +0 07400 4 00016    01460 TXH +3 00000 0 00000    01461 STO +0 60100 0 01027   
                 W'R MASK1.A.MASK2 .E. FENCE                                        058  LM00078
 01462 CAL -0 50000 0 01026    01463 ANA -0 32000 0 01027    01464 SLW +0 60200 0 02152    01465 CLA +0 50000 0 02152   
 01466 SUB +0 40200 0 00036    01467 TNZ -0 10000 0 01511                                                               
                   SCANI = 0B                                                       059  LM00079
 01470 CLA +0 50000 0 01060    01471 STO +0 60100 0 01040                                                               
                   N1 = COMBUF(I)                                                   060  LM00080
 01472 LXA +0 53400 2 01004    01473 CLA +0 50000 2 00062    01474 STO +0 60100 0 00063                                 
                   N2 = COMBUF(I+1)                                                 061  LM00081
 01475 CLA +0 50000 0 01004    01476 ADD +0 40000 0 01061    01477 PAX +0 73400 2 00000    01500 CLA +0 50000 2 00062   
 01501 STO +0 60100 0 00064                                                                                             
                   FSTATE.(N1,N2,ENTRY(7)...8,IOERR2,ERCODE)                        062  LM00082
 01502 TSX +0 07400 4 00012    01503 TXH +3 00000 0 00063    01504 TXH +3 00000 0 00064    01505 TIX +2 01070 0 00065   
 01506 TXH +3 00000 0 00102    01507 TXH +3 00000 0 01000                                                               
                 O'E                                                                063  LM00083
 01510 TRA +0 02000 0 01542                                                                                             
                   SCANI = 1B                                                       064  LM00084
 01511 CLA +0 50000 0 01061    01512 STO +0 60100 0 01040                                                               
                   W'R ONCE                                                         065  LM00085
 01513 NZT -0 52000 0 01034    01514 TRA +0 02000 0 01523                                                               
                     ONCE = 0B                                                      066  LM00086
 01515 CLA +0 50000 0 01060    01516 STO +0 60100 0 01034                                                               
                     UPDATE.                                                        067  LM00087
 01517 TSX +0 07400 4 00030                                                                                             
                     SCNFIL.($U.F.D.(FILE)$)                                        068  LM00088
 01520 TSX +0 07400 4 00026    01521 TXH +3 00000 0 01156    01522 TXH +3 00000 0 01165                                 
                   E'L                                                              069  LM00089
                   ISCAN.(COMBUF(I),COMBUF(I+1))                                    070  LM00090
 01523 CLA +0 50000 0 01004    01524 ADD +0 40000 0 01061    01525 SUB +0 40200 0 01526    01526 TXH +3 00000 0 00062   
 01527 STA +0 62100 0 01536    01530 CLA +0 50000 0 01004    01531 SUB +0 40200 0 01532    01532 TXH +3 00000 0 00062   
 01533 STA +0 62100 0 01535    01534 TSX +0 07400 4 00014    01535 TXH +3 00000 0 00000    01536 TXH +3 00000 0 00000   
                   SCAN.(ENTRY(9)...7,NOPE)                                         071  LM00091
 01537 TSX +0 07400 4 00025    01540 TIX +2 01067 0 00063    01541 TXH +3 00000 0 00107                                 
                 E'L                                                                072  LM00092
                 T'O FTEST                                                          073  LM00095
 01542 TRA +0 02000 0 00100                                                                                             
      LOOP2      CONTINUE                                                           074  LM00098
 01543 TRA +0 02000 0 01406                                                                                             
      GOHOME     WRTBUF.                                                            075  LM00099
 01544 TSX +0 07400 4 00032                                                                                             
      EGRETS     W'R CLOSEI, CLOSE.($ALL$,-0)                                       076  LM00100
 01545 NZT -0 52000 0 00776    01546 TRA +0 02000 0 01554    01547 CLS +0 50200 0 01060    01550 STO +0 60100 0 02152   
 01551 TSX +0 07400 4 00004    01552 TXH +3 00000 0 01102    01553 TXH +3 00000 0 02152                                 
                 RESETF.                                                            077  LM00101
 01554 TSX +0 07400 4 00024                                                                                             
                 CHNCOM.(0)                                                         078  LM00102
 01555 TSX +0 07400 4 00003    01556 TXH +3 00000 0 01060                                                               
      FERR       W'R FCODE .E. 3 , T'O OK                                           079  LM00105
 01557 CLA +0 50000 0 01001    01560 SUB +0 40200 0 01063    01561 TNZ -0 10000 0 01563    01562 TRA +0 02000 0 00110   
      IOERR      PRNTER.(61K)                                                       080  LM00106
 01563 TSX +0 07400 4 00022    01564 TXH +3 00000 0 01100                                                               
                 T'O EGRETS                                                         081  LM00107
 01565 TRA +0 02000 0 00076                                                                                             
      IOERR2     W'R ERCODE .E. 3                                                   082  LM00110
 01566 CLA +0 50000 0 01000    01567 SUB +0 40200 0 01063    01570 TNZ -0 10000 0 01651                                 
      NOPE         PRMESS.(COMBUF(I),B,COMBUF(I+1),$ NOT FOUND,$)                   083  LM00111
 01571 CLA +0 50000 0 01004    01572 ADD +0 40000 0 01061    01573 SUB +0 40200 0 01574    01574 TXH +3 00000 0 00062   
 01575 STA +0 62100 0 01605    01576 CLA +0 50000 0 01004    01577 SUB +0 40200 0 01600    01600 TXH +3 00000 0 00062   
 01601 STA +0 62100 0 01603    01602 TSX +0 07400 4 00021    01603 TXH +3 00000 0 00000    01604 TXH +3 00000 0 00113   
 01605 TXH +3 00000 0 00000    01606 TXH +3 00000 0 01141    01607 TXH +3 00000 0 01122                                 
                   W'R CARRYI .AND. (COMBUF(I+2).E.FENCE.OR.COMBUF(I+3).E.          084  LM00112
                1    FENCE.OR.COMBUF(I+4).E.FENCE.OR.COMBUF(I+5).E.FENCE),D=20      084  LM00113
 01610 CLA +0 50000 0 01004    01611 ADD +0 40000 0 01065    01612 PAX +0 73400 1 00000    01613 CLA +0 50000 1 00062   
 01614 SUB +0 40200 0 00036    01615 TZE +0 10000 0 01640    01616 CLA +0 50000 0 01004    01617 ADD +0 40000 0 01064   
 01620 PAX +0 73400 1 00000    01621 CLA +0 50000 1 00062    01622 SUB +0 40200 0 00036    01623 TZE +0 10000 0 01640   
 01624 CLA +0 50000 0 01004    01625 ADD +0 40000 0 01063    01626 PAX +0 73400 1 00000    01627 CLA +0 50000 1 00062   
 01630 SUB +0 40200 0 00036    01631 TZE +0 10000 0 01640    01632 CLA +0 50000 0 01004    01633 ADD +0 40000 0 01062   
 01634 PAX +0 73400 1 00000    01635 CLA +0 50000 1 00062    01636 SUB +0 40200 0 00036    01637 TNZ -0 10000 0 01644   
 01640 NZT -0 52000 0 00774    01641 TRA +0 02000 0 01644    01642 CLA +0 50000 0 01076    01643 STO +0 60100 0 00777   
                   W'R .NOT.SCANI, T'O ASK                                          085  LM00114
 01644 ZET +0 52000 0 01040    01645 TRA +0 02000 0 01647    01646 TRA +0 02000 0 00075                                 
                   T'O LOOP2                                                        086  LM00115
 01647 TRA +0 02000 0 00104                                                                                             
                 O'E                                                                087  LM00116
 01650 TRA +0 02000 0 01654                                                                                             
                   PRNTER.(61K)                                                     088  LM00117
 01651 TSX +0 07400 4 00022    01652 TXH +3 00000 0 01100                                                               
                   T'O LOOP2                                                        089  LM00118
 01653 TRA +0 02000 0 00104                                                                                             
                 E'L                                                                090  LM00119
      FTEST      W'R (.NOT.SCANI.AND.ENTRY(6).A.20K.NE.0).OR.                       091  LM00122
                1  (SCANI.AND.(ENTRY(5).RS.28).A.20K.NE.0)                          091  LM00123
 01654 CAL -0 50000 0 01077    01655 STA +0 62100 0 01657    01656 CAL -0 50000 0 00067    01657 LGR -0 76500 0 00000   
 01660 ANA -0 32000 0 01074    01661 SLW +0 60200 0 02152    01662 CLA +0 50000 0 02152    01663 SUB +0 40200 0 01060   
 01664 TZE +0 10000 0 01667    01665 ZET +0 52000 0 01040    01666 TRA +0 02000 0 01700    01667 CAL -0 50000 0 00066   
 01670 ANA -0 32000 0 01074    01671 SLW +0 60200 0 02152    01672 CLA +0 50000 0 02152    01673 SUB +0 40200 0 01060   
 01674 TZE +0 10000 0 01677    01675 NZT -0 52000 0 01040    01676 TRA +0 02000 0 01700    01677 TRA +0 02000 0 01730   
                     PRMESA.(N1,B,N2,$ IS IN 'PRIVATE' MODE.$)                      092  LM00124
 01700 TSX +0 07400 4 00020    01701 TXH +3 00000 0 00063    01702 TXH +3 00000 0 00113    01703 TXH +3 00000 0 00064   
 01704 TXH +3 00000 0 01136    01705 TXH +3 00000 0 01126    01706 TXH +3 00000 0 01103    01707 TXH +3 00000 0 01120   
      ASK            PRMESA.($DO YOU STILL WANT REQUEST,$)                          093  LM00125
 01710 TSX +0 07400 4 00020    01711 TXH +3 00000 0 01105    01712 TXH +3 00000 0 01145    01713 TXH +3 00000 0 01146   
 01714 TXH +3 00000 0 01125    01715 TXH +3 00000 0 01153                                                               
                     W'R LINE.NE.$(FIB)$, RDFLXC.(ANSWER,6)                         094  LM00126
 01716 CLA +0 50000 0 01025    01717 SUB +0 40200 0 01164    01720 TZE +0 10000 0 01724    01721 TSX +0 07400 4 00023   
 01722 TXH +3 00000 0 00112    01723 TXH +3 00000 0 01066                                                               
                     W'R ANSWER.NE.$YES$, T'O NEXT                                  095  LM00127
 01724 CLA +0 50000 0 00112    01725 SUB +0 40200 0 01161    01726 TZE +0 10000 0 01730    01727 TRA +0 02000 0 00106   
                 E'L                                                                096  LM00128
                 W'R FIRST                                                          097  LM00129
 01730 NZT -0 52000 0 01002    01731 TRA +0 02000 0 01751                                                               
                   FIRST = 0B                                                       098  LM00130
 01732 CLA +0 50000 0 01060    01733 STO +0 60100 0 01002                                                               
                   OPEN.($W$,OUT,RQ)                                                099  LM00131
 01734 TSX +0 07400 4 00017    01735 TXH +3 00000 0 01160    01736 TXH +3 00000 0 01036    01737 TXH +3 00000 0 01037   
                   BUFFER.(OUT,RQ,BUFF(431)...432)                                  100  LM00132
 01740 TSX +0 07400 4 00001    01741 TXH +3 00000 0 01036    01742 TXH +3 00000 0 01037    01743 TIX +2 01101 0 00114   
                   SETBUF.(LINE(14)...11,GOOD,WRCARD.,PANIC)                        101  LM00133
 01744 TSX +0 07400 4 00027    01745 TIX +2 01072 0 01007    01746 TXH +3 00000 0 01003    01747 TXH +3 00000 0 00034   
 01750 TXH +3 00000 0 00111                                                                                             
                 E'L                                                                102  LM00134
                 W'R CARRYI                                                         103  LM00135
 01751 NZT -0 52000 0 00774    01752 TRA +0 02000 0 02075                                                               
                   ATTNAM.(ENTRY(3)...2)                                            104  LM00136
 01753 TSX +0 07400 4 00000    01754 TIX +2 01062 0 00071                                                               
                   ENTRY(1) = N1                                                    105  LM00137
 01755 CLA +0 50000 0 00063    01756 STO +0 60100 0 00073                                                               
                   ENTRY = N2                                                       106  LM00138
 01757 CLA +0 50000 0 00064    01760 STO +0 60100 0 00074                                                               
                   T'H LOOP3, FOR J=1,1,J.G.4.OR.COMBUF(I+1+J).E.FENCE              107  LM00139
 01761 CLA +0 50000 0 01061    01762 STO +0 60100 0 01005    01763 TRA +0 02000 0 01767    01764 CLA +0 50000 0 01005   
 01765 ADD +0 40000 0 01061    01766 STO +0 60100 0 01005    01767 CLA +0 50000 0 01004    01770 ADD +0 40000 0 01061   
 01771 ADD +0 40000 0 01005    01772 PAX +0 73400 1 00000    01773 CLA +0 50000 1 00062    01774 SUB +0 40200 0 00036   
 01775 TZE +0 10000 0 02025    01776 CLA +0 50000 0 01005    01777 SUB +0 40200 0 01064    02000 TZE +0 10000 0 02002   
 02001 TPL +0 12000 0 02025                                                                                             
                   W'R COMBUF(I+J+1).E.$     *$, T'O LOOP3                          108  LM00140
 02002 CLA +0 50000 0 01004    02003 ADD +0 40000 0 01005    02004 ADD +0 40000 0 01061    02005 PAX +0 73400 1 00000   
 02006 CLA +0 50000 1 00062    02007 SUB +0 40200 0 01143    02010 TNZ -0 10000 0 02012    02011 TRA +0 02000 0 00105   
                   ENTRY(4-J) = COMBUF(I+1+J)                                       109  LM00141
 02012 CLA +0 50000 0 01004    02013 ADD +0 40000 0 01061    02014 ADD +0 40000 0 01005    02015 STO +0 60100 0 02152   
 02016 CLA +0 50000 0 01064    02017 SUB +0 40200 0 01005    02020 PAX +0 73400 1 00000    02021 LXA +0 53400 2 02152   
 02022 CLA +0 50000 2 00062    02023 STO +0 60100 1 00074                                                               
      LOOP3        CONTINUE                                                         110  LM00142
 02024 TRA +0 02000 0 01764                                                                                             
                   W'R COMBUF(I+J+1) .E. FENCE, D = 20                              111  LM00143
 02025 CLA +0 50000 0 01004    02026 ADD +0 40000 0 01005    02027 ADD +0 40000 0 01061    02030 PAX +0 73400 1 00000   
 02031 CLA +0 50000 1 00062    02032 SUB +0 40200 0 00036    02033 TNZ -0 10000 0 02036    02034 CLA +0 50000 0 01076   
 02035 STO +0 60100 0 00777                                                                                             
                   MASK3 = NAMASK.(N3)                                              112  LM00144
 02036 TSX +0 07400 4 00016    02037 TXH +3 00000 0 00073    02040 STO +0 60100 0 01031                                 
                   MASK4 = NAMASK.(N4)                                              113  LM00145
 02041 TSX +0 07400 4 00016    02042 TXH +3 00000 0 00074    02043 STO +0 60100 0 01033                                 
                   MASK3P = COM.(MASK3)                                             114  LM00146
 02044 TSX +0 07400 4 00005    02045 TXH +3 00000 0 01031    02046 STO +0 60100 0 01030                                 
                   MASK4P = COM.(MASK4)                                             115  LM00147
 02047 TSX +0 07400 4 00005    02050 TXH +3 00000 0 01033    02051 STO +0 60100 0 01032                                 
                   N3 = (N1.A.MASK3P).V.(N3.A.MASK3)                                116  LM00148
 02052 CAL -0 50000 0 00073    02053 ANA -0 32000 0 01031    02054 SLW +0 60200 0 02152    02055 CAL -0 50000 0 00063   
 02056 ANA -0 32000 0 01030    02057 ORA -0 50100 0 02152    02060 SLW +0 60200 0 00073                                 
                   N4 = (N2.A.MASK4P).V.(N4.A.MASK4)                                117  LM00149
 02061 CAL -0 50000 0 00074    02062 ANA -0 32000 0 01033    02063 SLW +0 60200 0 02152    02064 CAL -0 50000 0 00064   
 02065 ANA -0 32000 0 01032    02066 ORA -0 50100 0 02152    02067 SLW +0 60200 0 00074                                 
                   FILBUF.(ENTRY(9)...2,ENTRY(3)...4)                               118  LM00150
 02070 TSX +0 07400 4 00011    02071 TIX +2 01062 0 00063    02072 TIX +2 01064 0 00071                                 
                   WRTBUF.                                                          119  LM00151
 02073 TSX +0 07400 4 00032                                                                                             
                 O'E                                                                120  LM00152
 02074 TRA +0 02000 0 02077                                                                                             
                   FILBUF.(ENTRY(9)...2)                                            121  LM00153
 02075 TSX +0 07400 4 00011    02076 TIX +2 01062 0 00063                                                               
                 E'L                                                                122  LM00154
      NEXT       W'R SCANI                                                          123  LM00156
 02077 NZT -0 52000 0 01040    02100 TRA +0 02000 0 02106                                                               
                   SCAN.(ENTRY(9)...7,LOOP2)                                        124  LM00157
 02101 TSX +0 07400 4 00025    02102 TIX +2 01067 0 00063    02103 TXH +3 00000 0 00104                                 
                   T'O FTEST                                                        125  LM00158
 02104 TRA +0 02000 0 00100                                                                                             
                 O'E                                                                126  LM00159
 02105 TRA +0 02000 0 02107                                                                                             
                   T'O LOOP2                                                        127  LM00160
 02106 TRA +0 02000 0 00104                                                                                             
                 E'L                                                                128  LM00161
      PANIC      PRMESS.($MACHINE OR SYSTEM ERROR. IGNORING$,N1,N2)                 129  LM00163
 02107 TSX +0 07400 4 00021    02110 TXH +3 00000 0 01115    02111 TXH +3 00000 0 01110    02112 TXH +3 00000 0 01163   
 02113 TXH +3 00000 0 01106    02114 TXH +3 00000 0 01133    02115 TXH +3 00000 0 01113    02116 TXH +3 00000 0 00063   
 02117 TXH +3 00000 0 00064                                                                                             
                 T'O NEXT                                                           130  LM00164
 02120 TRA +0 02000 0 00106                                                                                             
                 INTERNAL FUNCTION                                                  131  LM00166
 02121 TRA +0 02000 0 02150                                                                                             
                 E'O WRCARD.                                                        132  LM00167
 02122 TRA +0 02000 0 02125    00034 TTR +0 02100 0 02123    02123 SXA +0 63400 2 02140    02124 TSX +0 07400 2 02140   
                 WRWAIT.(OUT,RQ,0,LINE(15)...14)                                    133  LM00169
 02125 TSX +0 07400 4 00033    02126 TXH +3 00000 0 01036    02127 TXH +3 00000 0 01037    02130 TXH +3 00000 0 01060   
 02131 TIX +2 01073 0 01006                                                                                             
                 GOOD = 0B                                                          134  LM00170
 02132 CLA +0 50000 0 01060    02133 STO +0 60100 0 01003                                                               
                 CLOSEI = 1B                                                        135  LM00171
 02134 CLA +0 50000 0 01061    02135 STO +0 60100 0 00776                                                               
                 F'N                                                                136  LM00172
 02136 TRA +0 02000 0 02144                                                                                             
                 E'N                                                                137  LM00174
 02137 TSX +0 07400 4 00007    02140 TXH +3 00000 0 00000    02141 SXD -0 63400 1 02140    02142 SXA +0 63400 4 02144   
 02143 TRA +0 02000 2 00001    02144 AXT +0 77400 4 00000    02145 LXA +0 53400 2 02140    02146 LXD -0 53400 1 02140   
 02147 TRA +0 02000 4 00001                                                                                             
                 E'M                                                                138  LM00176
 02150 TSX +0 07400 4 00007                                                                                             
1      CARDRQ   04/16/68  D.A. ANDERSON                                          01/25/69 2137.5 PAGE 1     
                  
                       00002         ENTRY   SETBUF        (BUF(M)...M,GOOD,FULL,BAD)     
                       00035         ENTRY   FILBUF        LIST   (PZE,PTH,PTW,EFA) 
                       00156         ENTRY   WRTBUF   
                  
                  
                  
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  622563226426     
                  
      00002  0634 00 1 00031  SETBUF SXA     IX1,1    
      00003 -0500 00 4 00001         CAL     1,4
      00004 -0737 00 1 00000         PDC     ,1 
      00005 -0320 00 0 00242         ANA     =O700000000000 
      00006 -0340 00 0 00240         LAS     =O200000000000 
      00007  0020 00 0 00011         TRA     *+2
      00010  0020 00 0 00033         TRA     PTW
      00011  0756 00 1 00000         PCA     ,1 
      00012  0621 00 0 00053  PTWR   STA     OUTX     
      00013  0401 00 4 00001         ADM     1,4
      00014  0621 00 0 00216         STA     OUTADR   
      00015 -0500 00 4 00002         CAL     2,4
      00016  0621 00 0 00227         STA     GOOD     
      00017 -0500 00 4 00003         CAL     3,4
      00020  0621 00 0 00232         STA     WRITE    
      00021 -0500 00 4 00004         CAL     4,4
      00022  0621 00 0 00155         STA     BAD
      00023  0600 60 0 00227         STZ*    GOOD     
      00024 -0500 00 0 00053         CAL     OUTX     
      00025  0767 00 0 00001         ALS     1  
      00026  0401 00 0 00053         ADM     OUTX     
      00027  0767 00 0 00022         ALS     18 
      00030  0622 00 0 00111         STD     BADTST   
      00031  0774 00 1 00000  IX1    AXT     **,1     
      00032  0020 00 4 00005         TRA     5,4
                  
      00033 -0500 00 1 00000  PTW    CAL     ,1 
      00034  0020 00 0 00012         TRA     PTWR     
1      CARDRQ   04/16/68  D.A. ANDERSON                                          01/25/69 2137.5 PAGE 2     
                  
      00035  0636 00 1 00152  FILBUF SCA     XR1,1    
      00036  0636 00 2 00151         SCA     XR2,2    
      00037  0636 00 4 00147         SCA     XR4,4    
      00040  0760 00 0 00016         EAXM 
      00041  0636 00 3 00150         SCA     XR3,3    
      00042  0636 00 5 00146         SCA     XR5,5    
      00043  0636 00 6 00145         SCA     XR6,6    
      00044  0636 00 7 00144         SCA     XR7,7    
      00045  0604 00 0 00233         STI     SI 
      00046  0600 00 0 00230         STZ     BADFLG   
                  
      00047  0535 00 5 00147  AGAIN  LAC     XR4,5    
      00050 -0774 00 4 00055         AXC     NXTARG-1,4     
      00051  0520 60 0 00227         ZET*    GOOD     
      00052  0020 00 0 00132         TRA     RSTREG   
      00053  0774 00 1 00000  OUTX   AXT     **,1     
      00054 -0774 00 2 00044         AXC     36,2     
      00055  0441 00 0 00235         LDI     =0 
                  
      00056  1 77777 5 00057  NXTARG TXI     *+1,5,-1 
      00057  0500 00 5 00000         CLA     ,5 
      00060  0340 00 0 00240         CAS     =O200000000000 
      00061  0020 00 0 00102         TRA     2OR3     
      00062  0020 00 0 00056         TRA     NXTARG   
      00063 -0500 00 5 00000         CAL     ,5 
      00064 -0320 00 0 00243         ANA     =O777777000000 
      00065  0100 00 0 00070         TZE     *+3
      00066  0322 00 0 00231         ERA     EFA
      00067 -0100 00 0 00136         TNZ     OUT
      00070 -0500 00 5 00000         CAL     ,5 
      00071  0771 00 0 00017         ARS     15 
      00072 -0320 00 0 00236         ANA     =7 
      00073  0100 00 0 00076         TZE     *+3
      00074  0734 00 6 00000         PAX     ,6 
      00075 -0500 00 6 00154         CAL     RETURN,6 
      00076  0401 00 5 00000         ADM     ,5 
      00077  0737 00 6 00000         PAC     ,6 
      00100  0774 00 7 00001         AXT     1,7
      00101  0020 00 0 00112         TRA     ADDBL    
      00102 -0737 00 7 00000  2OR3   PDC     ,7 
      00103  0737 00 6 00000         PAC     ,6 
      00104  0340 00 0 00241         CAS     =O300000000000 
      00105  0756 00 7 00000         PCA     ,7 
      00106  0020 00 0 00110         TRA     *+2
      00107 -0500 00 7 00000         CAL     ,7 
      00110  0734 00 7 00000         PAX     ,7 
      00111  3 00000 7 00211  BADTST TXH     BADRET,7,**    
      00112 -0500 00 0 00237  ADDBL  CAL     =O60     
      00113  0074 00 4 00215         TSX     STC,4    
      00114  0 00000 0 00176                 TOOBIG   
      00115  0560 00 6 00000         LDQ     ,6 
      00116  0774 00 3 00006         AXT     6,3
                  
      00117 -0754 00 0 00000  LOOP   ZAC  
      00120 -0763 00 0 00006         LGL     6  
      00121 -0340 00 0 00237         LAS     =O60     
1      CARDRQ   04/16/68  D.A. ANDERSON                                          01/25/69 2137.5 PAGE 3     
                  
      00122  0020 00 0 00124         TRA     *+2
      00123  0020 00 0 00126         TRA     NDLOP    
      00124  0074 00 4 00215         TSX     STC,4    
      00125  0 00000 0 00176                 TOOBIG   
      00126  2 00001 3 00117  NDLOP  TIX     LOOP,3,1 
      00127  1 77777 6 00130         TXI     *+1,6,-1 
      00130  2 00001 7 00112         TIX     ADDBL,7,1
      00131  0020 00 0 00056         TRA     NXTARG   
                  
      00132  0441 00 0 00234  RSTREG LDI     SAVSI    
      00133  0774 00 1 00000  SAVX1  AXT     **,1     
      00134  0774 00 2 00000  SAVX2  AXT     **,2     
      00135  0020 00 4 00001         TRA     1,4
                  
      00136  0634 00 1 00133  OUT    SXA     SAVX1,1  
      00137  0634 00 2 00134         SXA     SAVX2,2  
      00140  0604 00 0 00234         STI     SAVSI    
      00141  0636 00 5 00154         SCA     RETURN,5 
      00142 -0625 60 0 00227         STL*    GOOD     
      00143  0441 00 0 00233  RESTOR LDI     SI 
      00144 -0774 00 7 00000  XR7    AXC     **,7     
      00145 -0774 00 6 00000  XR6    AXC     **,6     
      00146 -0774 00 5 00000  XR5    AXC     **,5     
      00147 -0774 00 4 00000  XR4    AXC     **,4     
      00150 -0774 00 3 00000  XR3    AXC     **,3     
      00151 -0774 00 2 00000  XR2    AXC     **,2     
      00152 -0774 00 1 00000  XR1    AXC     **,1     
      00153 -0520 00 0 00230         NZT     BADFLG   
      00154  0020 00 0 00000  RETURN TRA     ** 
      00155  0020 00 0 00000  BAD    TRA     ** 
                  
      00156 -0520 60 0 00227  WRTBUF NZT*    GOOD     
      00157  0020 00 4 00001         TRA     1,4
      00160  0634 00 4 00172         SXA     PX4,4    
      00161  0634 00 2 00173         SXA     PX2,2    
      00162  0634 00 1 00174         SXA     PX1,1    
      00163  0634 00 7 00171         SXA     PX7,7    
      00164  0604 00 0 00233         STI     SI 
      00165  0074 00 7 00204         TSX     PAD,7    
      00166  0074 00 4 00232         TSX     WRITE,4  
      00167  0600 60 0 00227         STZ*    GOOD     
      00170  0441 00 0 00233         LDI     SI 
      00171  0774 00 7 00000  PX7    AXT     **,7     
      00172  0774 00 4 00000  PX4    AXT     **,4     
      00173  0774 00 2 00000  PX2    AXT     **,2     
      00174  0774 00 1 00000  PX1    AXT     **,1     
      00175  0020 00 4 00001         TRA     1,4
                  
      00176 -0520 60 0 00227  TOOBIG NZT*    GOOD     
      00177  0020 00 0 00213         TRA     BADRST   
      00200  0074 00 7 00204         TSX     PAD,7    
      00201  0074 00 4 00232         TSX     WRITE,4  
      00202  0600 60 0 00227         STZ*    GOOD     
      00203  0020 00 0 00047         TRA     AGAIN    
1      CARDRQ   04/16/68  D.A. ANDERSON                                          01/25/69 2137.5 PAGE 4     
                  
      00204  0074 00 4 00132  PAD    TSX     RSTREG,4 
      00205 -0500 00 0 00237         CAL     =O60     
      00206  0074 00 4 00215         TSX     STC,4    
      00207  0 00000 7 00001                 1,7
      00210  0020 00 0 00205         TRA     *-3
                  
      00211  0520 60 0 00227  BADRET ZET*    GOOD     
      00212  0074 00 7 00204         TSX     PAD,7    
      00213 -0625 00 0 00230  BADRST STL     BADFLG   
      00214  0020 00 0 00143         TRA     RESTOR   
                  
      00215  3 00000 2 00223  STC    TXH     ENTCHR,2,0     
      00216  0604 00 1 00000  OUTADR STI     **,1     
      00217  2 00001 1 00221         TIX     *+2,1,1  
      00220  0020 60 4 00001         TRA*    1,4
      00221  0441 00 0 00235         LDI     =0 
      00222 -0774 00 2 00044         AXC     36,2     
      00223  1 00006 2 00224  ENTCHR TXI     *+1,2,6  
      00224  0767 00 2 00000         ALS     ,2 
      00225  0043 00 0 00000         OAI  
      00226  0020 00 4 00002         TRA     2,4
1      CARDRQ   04/16/68  D.A. ANDERSON                                          01/25/69 2137.5 PAGE 5     
                  
      00227  0 00000 0 00000  GOOD   PZE     ** 
      00230  0 00000 0 00000  BADFLG
      00231  0761 00 0 00000  EFA    NOP  
      00232  0021 00 0 00000  WRITE  TTR     ** 
      00233  0 00000 0 00000  SI    
      00234  0 00000 0 00000  SAVSI 
                  
                                     END  
                  
        LITERALS  
      00235  000000000000     
      00236  000000000007     
      00237  000000000060     
      00240  200000000000     
      00241  300000000000     
      00242  700000000000     
      00243  777777000000     
1      CARDRQ   04/16/68  D.A. ANDERSON                                          01/25/69 2137.5 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        244 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        233     SI    45,  143,  164,  170
        155    BAD    22
        231    EFA    66
         31    IX1     2
        136    OUT    67
        204    PAD   165,  200,  212
         33    PTW    10
        174    PX1   162
        173    PX2   161
        172    PX4   160
        171    PX7   163
        215    STC   113,  124,  206
        152    XR1    35
        151    XR2    36
        150    XR3    41
        147    XR4    37,   47
        146    XR5    42
        145    XR6    43
        144    XR7    44
        102   2OR3    61
        227   GOOD    16,   23,   51,  142,  156,  167,  176,  202,  211
        117   LOOP   126
         53   OUTX    12,   24,   26
         12   PTWR    34
        112  ADDBL   101,  130
         47  AGAIN   203
        126  NDLOP   123
        234  SAVSI   132,  140
        133  SAVX1   136
        134  SAVX2   137
        232  WRITE    20,  166,  201
        230 BADFLG    46,  153,  213
        211 BADRET   111
        213 BADRST   177
        111 BADTST    30
        223 ENTCHR   215
         35 FILBUF     0
         56 NXTARG    50,   62,  131
        216 OUTADR    14
        143 RESTOR   214
        154 RETURN    75,  141
        132 RSTREG    52,  204
          2 SETBUF     0
        176 TOOBIG   114,  125
        156 WRTBUF     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




RUNCOM   BCD 05/12/69 2020.2   13312         00000    
1       M1416-3845  PETER R. BOS -- RUNCOM COMMAND REGENERATED 2/13/68           04/23/69 2323.3 PAGE 1     
                  
                                     PCC     ON 
                                     LBL     RUNCOM   
                                     PCC     OFF
                  
                                     EXTERN  GETCLS,CHNCOM,NEXCOM,FSTATE,WRFLX,SCHAIN,BRAKE     
                                     EXTERN  .SETUP   
                                     UNLIST     
 M                            CALL   MACRO   SUBR,ARGS,CRS                                                        
                  
                  
                              *     
                              *  USAGE IS ...   RUNCOM NAME1 -ARGS-     
                              *  WHERE THE NAME OF THE MACRO-COMMAND FILE IS EITHER 
                              *  NAME1 RUNCOM OR NAME1 BCD, AND ARGS ARE ARGUMENTS TO     
                              *  BE SUBSTITUTED.
                              *     
                  
                  
        TRANSFER VECTOR 
      00000  272563234362     GETCLS
      00001  233045234644     CHNCOM
      00002  452567234644     NEXCOM
      00003  266263216325     FSTATE
      00004  665126436760     WRFLX 
      00005  622330213145     SCHAIN
      00006  225121422560     BRAKE 
      00007  336225636447     .SETUP
                  
      00010  0074 00 4 00007         TSX     .SETUP,4      LOAD DUMMY FROM XLIBE    
      00011                          CALL    GETCLS((CBUFF,0,0)) GET COMMAND BUFFER 
      00011  0074 00 4 00000         TSX     GETCLS,4                                                         .003
      00012  0 00000 0 00121         PZE     CBUFF,0,0                                                        .003
      00013 -0500 00 0 00122         CAL     CBUFF+1       FILE NAME1   
      00014  0602 00 0 00147         SLW     FILNAM        ..     
      00015  0322 00 0 00216         ERA     =O777777777777 IF NO ARGUMENTS TO COMMAND,   
      00016 -0100 00 0 00027         TNZ     START         ..     
      00017                          TYPE    6(USAGE IS...  RUNCOM NAME1 -ARGS-)    
      00017  0074 00 4 00004         TSX     WRFLX,4                                                          .004
      00020  3 00006 0 00152         PAR     ..002,,6                                                         .004
      00021                          TYPE    6(MACRO FILE NAME2 IS RUNCOM OR BCD)   
      00021  0074 00 4 00004         TSX     WRFLX,4                                                          .004
      00022  3 00006 0 00160         PAR     ..005,,6                                                         .004
      00023                          TYPE    6(ARGS ARE ARGUMENTS TO BE SUBSTITUTED)
      00023  0074 00 4 00004         TSX     WRFLX,4                                                          .004
      00024  3 00006 0 00166         PAR     ..008,,6                                                         .004
      00025                          CALL    CHNCOM(0)     EXIT   
      00025  0074 00 4 00001         TSX     CHNCOM,4                                                         .003
      00026  0 00000 0 00000         PZE     0                                                                .003
                  
      00027                   START  CALL    FSTATE(FILNAM,RUNCOM,=-0,NFL1)   
      00027  0074 00 4 00003         TSX     FSTATE,4                                                         .003
      00030  3 00000 0 00147         PAR     FILNAM                                                           .003
      00031  3 00000 0 00150         PAR     RUNCOM                                                           .003
      00032  3 00000 0 00214         PAR     =-0                                                              .003
      00033  3 00000 0 00035         PAR     NFL1                                                             .003
      00034  0020 00 0 00054         TRA     OKFIL         FILE FOUND, SKIP   
1       M1416-3845  PETER R. BOS -- RUNCOM COMMAND REGENERATED 2/13/68           04/23/69 2323.3 PAGE 2     
                  
      00035                   NFL1   CALL    FSTATE(FILNAM,BCD,=-0,NFL2)
      00035  0074 00 4 00003         TSX     FSTATE,4                                                         .003
      00036  3 00000 0 00147         PAR     FILNAM                                                           .003
      00037  3 00000 0 00151         PAR     BCD                                                              .003
      00040  3 00000 0 00214         PAR     =-0                                                              .003
      00041  3 00000 0 00045         PAR     NFL2                                                             .003
      00042 -0500 00 0 00151         CAL     BCD           FILE NAME2 IS BCD, SET UP FOR SCHAIN 
      00043  0602 00 0 00146         SLW     FILNAM-1      ..     
      00044  0020 00 0 00054         TRA     OKFIL         SKIP   
      00045 -0500 00 0 00147  NFL2   CAL     FILNAM        FILE NOT FOUND, COMPLAIN 
      00046  0602 00 0 00175         SLW     YULOSE+1      ..     
      00047                          TYPE    8( FILE ****** RUNCOM NOT FOUND, NO EXECUTION),YULOSE    
      00047  0074 00 4 00004         TSX     WRFLX,4                                                          .004
      00050  3 00010 0 00174         PAR     YULOSE,,8                                                        .004
      00051  0074 00 4 00006         TSX     BRAKE,4       WHOA...
      00052                          CALL    CHNCOM((0,0,0)) EXIT 
      00052  0074 00 4 00001         TSX     CHNCOM,4                                                         .003
      00053  0 00000 0 00000         PZE     0,0,0                                                            .003
                  
      00054 -0774 00 4 00002  OKFIL  AXC     2,4           GO LOOK FOR FENCE. 
      00055 -0500 00 4 00121         CAL     CBUFF,4       ..     
      00056  0322 00 0 00216         ERA     =O777777777777 ..    
      00057  0100 00 0 00062         TZE     *+3           ..     
      00060  1 77777 4 00061         TXI     *+1,4,-1      ..     
      00061  3 77755 4 00055         TXH     *-4,4,-19     LOOP TILL 20 WORDS CHECKED     
      00062  0756 00 4 00000         PCA     0,4           NUMBER OF ARGS TO AC     
      00063  0734 00 4 00000         PAX     0,4           BACK TO X4   
      00064 -3 00002 4 00070         TXL     NOARG,4,2     IF NO SUBS. ARGS, SKIP   
      00065  1 00120 4 00066         TXI     *+1,4,CBUFF-1 GET ADDRESS OF LAST ARG  
      00066 -0634 00 4 00100         SXD     CHAIN+2,4     INSERT IN CALL     
      00067  0020 00 0 00072         TRA     RUN            AND SKIP    
      00070 -0500 00 0 00101  NOARG  CAL     SKP           SET UP DUMMY INSTRUCTION 
      00071  0602 00 0 00100         SLW     CHAIN+2       ..     
                  
      00072 -0500 00 0 00147  RUN    CAL     FILNAM        TYPE COMMENT..     
      00073  0602 00 0 00204         SLW     XXSTRT        ..     
      00074                          TYPE    3(****** STARTED),XXSTRT   
      00074  0074 00 4 00004         TSX     WRFLX,4                                                          .004
      00075  3 00003 0 00204         PAR     XXSTRT,,3                                                        .004
                  
      00076                   CHAIN  CALL    SCHAIN(FILNAM,(CBUFF+2,...,-))   
      00076  0074 00 4 00005         TSX     SCHAIN,4                                                         .003
      00077  3 00000 0 00147         PAR     FILNAM                                                           .003
      00100  2 00000 0 00123         BLK     CBUFF+2,...,-                                                    .003
      00101  0020 00 0 00102  SKP    TRA     *+1           DUMMY INS.   
                  
      00102  0602 00 0 00145         SLW     ...FIL        SAVE POSSIBLE SAVED FILE NAME  
      00103 -0500 00 0 00147         CAL     FILNAM        SET UP OTHER COMMENT     
      00104  0602 00 0 00207         SLW     XXFINI   
      00105                          TYPE    4(****** HAS BEEN RUN),XXFINI    
      00105  0074 00 4 00004         TSX     WRFLX,4                                                          .004
      00106  3 00004 0 00207         PAR     XXFINI,,4                                                        .004
      00107 -0500 00 0 00145         CAL     ...FIL        CHECK FOR SAVED FILE     
      00110  0100 00 0 00117         TZE     XIT           NO, GO TO CHNCOM   
      00111  0771 00 0 00022         ARS     18            MIGHT BE, CHECK FOR '...XXX'   
      00112  0322 00 0 00213         ERA     =O333333      ..     
1       M1416-3845  PETER R. BOS -- RUNCOM COMMAND REGENERATED 2/13/68           04/23/69 2323.3 PAGE 3     
                  
      00113 -0100 00 0 00117         TNZ     XIT           NO, EXIT     
      00114 -0500 00 0 00215         CAL     =HRESTOR      YES, RESTORE CORE IMAGE  
      00115  0560 00 0 00145         LDQ     ...FIL        ..     
      00116  0074 00 4 00002         TSX     NEXCOM,4      VIA NEXCOM   
                  
      00117                   XIT    CALL    CHNCOM(0)     EXIT VIA CHNCOM    
      00117  0074 00 4 00001         TSX     CHNCOM,4                                                         .003
      00120  0 00000 0 00000         PZE     0                                                                .003
                  
                  
      00121                   CBUFF  BSS     20            COMMAND BUFFER     
      00145  0 00000 0 00000  ...FIL PZE  
      00146  516445234644            BCI     1,RUNCOM 
      00147  0 00000 0 00000  FILNAM PZE  
                  
      00150  516445234644     RUNCOM BCI     1,RUNCOM 
      00151  606060222324     BCD    BCI     1,   BCD 
                  
                                     END  
                                              REMOTE SEQUENCES    
      00152  646221272560     ..002  BCI     6,USAGE IS...  RUNCOM NAME1 -ARGS-                               .002
      00153  316233333360     
      00154  605164452346     
      00155  446045214425     
      00156  016040215127     
      00157  624060606060     
      00160  442123514660     ..005  BCI     6,MACRO FILE NAME2 IS RUNCOM OR BCD                              .002
      00161  263143256045     
      00162  214425026031     
      00163  626051644523     
      00164  464460465160     
      00165  222324606060     
      00166  215127626021     ..008  BCI     6,ARGS ARE ARGUMENTS TO BE SUBSTITUTED                           .002
      00167  512560215127     
      00170  644425456362     
      00171  606346602225     
      00172  606264226263     
      00173  316364632524     
      00174  602631432560     YULOSE BCI     8, FILE ****** RUNCOM NOT FOUND, NO EXECUTION                    .002
      00175  545454545454     
      00176  605164452346     
      00177  446045466360     
      00200  264664452473     
      00201  604546602567     
      00202  252364633146     
      00203  456060606060     
      00204  545454545454     XXSTRT BCI     3,****** STARTED                                                 .002
      00205  606263215163     
      00206  252460606060     
      00207  545454545454     XXFINI BCI     4,****** HAS BEEN RUN                                            .002
      00210  603021626022     
      00211  252545605164     
      00212  456060606060     
1       M1416-3845  PETER R. BOS -- RUNCOM COMMAND REGENERATED 2/13/68           04/23/69 2323.3 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        217 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        151    BCD    37,   42
          1    ..A    12,   20,   22,   24,   26,   30,   31,   32,   33,   36,   37,   40,   41,   50,   53,   75,   77
                     100,  106,  120
          0    ..D    12,   20,   22,   24,   26,   30,   31,   32,   33,   36,   37,   40,   41,   50,   53,   75,   77
                     100,  106,  120
          0    ...   100
          0    ..T    12,   20,   22,   24,   26,   30,   31,   32,   33,   36,   37,   40,   41,   50,   53,   75,   77
                     100,  106,  120
         72    RUN    67
        101    SKP    70
        117    XIT   110,  113
          0   ..OP    12,   20,   22,   24,   26,   30,   31,   32,   33,   36,   37,   40,   41,   50,   53,   75,   77
                     100,  106,  120
         35   NFL1    33
         45   NFL2    41
          6  BRAKE    51
        121  CBUFF    12,   13,   55,   65,  100
         76  CHAIN    66,   71
        152  ..002    20
        160  ..005    22
        166  ..008    24
          1  ..PZE    12,   20,   22,   24,   26,   30,   36,   50,   53,   75,   77,  106,  120
         70  NOARG    64
         54  OKFIL    34,   44
         27  START    16
          4  WRFLX    17,   21,   23,   47,   74,  105
          1 CHNCOM    25,   52,  117
        147 FILNAM    14,   30,   36,   43,   45,   72,   77,  103
          3 FSTATE    27,   35
          0 GETCLS    11
        145 ...FIL   102,  107,  115
          7 .SETUP    10
          2 NEXCOM   116
        150 RUNCOM    31
          5 SCHAIN    76
        207 XXFINI   104,  106
        204 XXSTRT    73,   75
        174 YULOSE    46,   50
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 1     
                  
                              *      SAVES COMMAND LISTS AND COUNTERS.  
                              *      READS A BCD FILE, JUSTIFIES THE ARGUMENTS, SUBSTITUTES DUMMIES   
                              *      WITH ACTUAL VALUES.    
                              *      LOADS 3 COMMANDS, BRACKETTED BY 'SAVE' AND 'RESUME'. 
                              *      STARTS EXECUTION OF THE CHAIN.     
                              *      ON RETURN LOADS 3 MORE COMMANDS, AND SO FORTH, UNTIL THE FILE OF 
                              *      COMMANDS IS EXHAUSTED. 
                              *      RESTORE PREVIOUS COMMAND BUFFERS AND COUNTERS, RETURN TO CALLER. 
                              * CALLING SEQUENCE
                              * MAD  A = SCHAIN.(FIL, ANY MAD LIST OR NOTHING)
                              *      WHERE FIL IS A 2 WORDS VECT.VAL. GIVING THE NAMES OF THE FILE OF 
                              *      COMMANDS   
                              *      RETURNS A=0 IF EXECUTION WITHOUT ERROR (AS FAR AS SCHAIN CAN KNOW
                              *      OR A=ERROR CODE  
                              *      OR A=...XXX  WHICH IS THE NAME OF A FILE ...XXX SAVED REPRESENTIN
                              *      THE LAST CORE IMAGE LEFT BY THE LAST COMMAND IN THE CHAIN. 
                              *      A MAD LIST IS E.G. B, C(3), D(I)...D(J), W(-7), ETC...     
                              *      WITH THE EXCEPTION OF FILE NAMES, NO ARGUMENT NEED BE RIGHT JUSTI
                              * COMPUTATION CENTER            LOUIS POUZIN    
                              *      MAY 64     
                              *     
                                             MODIFIED FOR NEW FILE SYSTEM  JUNE 65  EMK   
                  
                              *      SWITCHES TO COMMON FILE A    
                              SWUS   MACRO   A  
                                     CAL     A  
                                     TSX     SWCF,3   
                              SWUS   END  
                  
                  
                              *      SAVES MACHINE REGISTERS
                              SAV    MACRO
                                     STI     IND
                                     SXA     X1,1     
                                     SXA     X2,2     
                                     SXA     X3,3     
                                     SXD     X4,4     
                                     AXT     -1,2     
                                     AXT     ,3 
                                     SXA     XMOD,2   
                                     LMTM 
                                     NZT     XMOD     
                                     SXA     X3,3     
                                     SXA     X5,5     
                                     SXA     X6,6     
                                     SXA     X7,7     
                              SAV    END  
                  
                  
                              *      RESTORES MACHINE REGISTERS   
                              RSTOR  MACRO
                                     LDI     IND
                              X3     AXT     **,3     
                              X5     AXT     **,5     
                              X6     AXT     **,6     
                              X7     AXT     **,7     
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 2     
                  
                                     NZT     XMOD     
                                     EMTM 
                              X1     AXT     **,1     
                              X2     AXT     **,2     
                                     LXD     X4,4     
                              RSTOR  END  
                              TEMP1  MACRO   A,B           UNTIL T MODE FILES ARE KEPT IN COMMON FILES
                                     ZET     FAIL     
                                     NZT     LCF
                                     TRA     B  
                                     TSX     $CHFILE,4
                                     PTH     RESTOR+1 
                                     PTH     RESTOR+2 
                                     PTH     =1 
                                     PTH     =-0           DO NOT ALTER 
                                     PTH     =-0           ..     
                                     PTH     *+1           ERROR RETURN 
                              B      SYN     *  
                              TEMP1  END  
                  
                  
                  
                  
                  
                  
  BINARY CARD NO. SCHAIN00    
                       00035         ENTRY   SCHAIN   
                  
        TRANSFER VECTOR 
                  
  BINARY CARD NO. SCHAIN01    
      00000  274521446060     GNAM  
      00001  272563232645     GETCFN
      00002  234643636060     COLT  
      00003  266263216325     FSTATE
      00004  622525426060     SEEK  
      00005  444665250160     MOVE1 
      00006  444665250260     MOVE2 
      00007  514164626360     RJUST 
      00010  444665250360     MOVE3 
      00011  272563234362     GETCLS
      00012  272563234323     GETCLC
      00013  242543256325     DELETE
      00014  665126436760     WRFLX 
      00015  622563254626     SETEOF
      00016  655125212460     VREAD 
      00017  644547214243     UNPAKL
      00020  712543606060     ZEL   
      00021  622563234362     SETCLS
      00022  276345214460     GTNAM 
      00023  464725456060     OPEN  
                  
  BINARY CARD NO. SCHAIN02    
      00024  665126314325     WRFILE
      00025  234346622560     CLOSE 
      00026  622563234323     SETCLC
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 3     
                  
      00027  233026314325     CHFILE
      00030  233045234644     CHNCOM
      00031  234644263143     COMFIL
      00032  244651444563     DORMNT
                  
            LINKAGE DIRECTOR  
      00033  000000000000     
      00034  622330213145     
                  
                       00660  DBUF   EQU     432
                  
                  
                       00033  X4     SYN     *-2
                  
                       00035  SCHAIN SYN     *  
      00035                          SAV  
      00035  0604 00 0 01120         STI     IND                                                              .001
      00036  0634 00 1 00677         SXA     X1,1                                                             .001
      00037  0634 00 2 00700         SXA     X2,2                                                             .001
      00040  0634 00 3 00671         SXA     X3,3                                                             .001
      00041 -0634 00 4 00033         SXD     X4,4                                                             .001
      00042  0774 00 2 77777         AXT     -1,2                                                             .001
      00043  0774 00 3 00000         AXT     ,3                                                               .001
      00044  0634 00 2 01121         SXA     XMOD,2                                                           .001
      00045  0760 00 0 00016         LMTM                                                                     .001
      00046 -0520 00 0 01121         NZT     XMOD                                                             .001
      00047  0634 00 3 00671         SXA     X3,3                                                             .001
                  
  BINARY CARD NO. SCHAIN03    
      00050  0634 00 5 00672         SXA     X5,5                                                             .001
      00051  0634 00 6 00673         SXA     X6,6                                                             .001
      00052  0634 00 7 00674         SXA     X7,7                                                             .001
      00053  0057 00  777777         RIR     /  
      00054  0600 00 0 01123         STZ     FAIL     
      00055  0634 00 0 00165         ZSA     BL            CLEAR READING COUNTER    
      00056  0055 00  000200         SIR     COMSW         IN CASE 1ST COMMAND SWITCHES U.F.D.  
      00057  0774 00 4 00024         AXT     CL,4     
      00060 -0500 00 0 01663         CAL     =H 
      00061  0602 00 4 01203         SLW     ARG1+CL,4
      00062  2 00001 4 00061         TIX     *-1,4,1  
      00063  0074 00 4 00000         TSX     $GNAM,4       GET FILE NAMES     
      00064  0 00000 0 00033         PZE     X4 
      00065  0 00000 0 01131         PZE     FIL
      00066  0074 00 4 00001         TSX     $GETCFN,4
      00067  0602 00 0 01125         SLW     HCF           HOME COMMON FILE   
      00070  0602 00 0 01124         SLW     CCF           CURRENT COMMON FILE SWITCHED   
      00071  0602 00 0 01127         SLW     PCF           PREVIOUS LOCAL COMMON FILE     
      00072  0602 00 0 01126         SLW     LCF
      00073  0074 00 4 00002         TSX     $COLT,4  
                  
  BINARY CARD NO. SCHAIN04    
      00074  0 00000 0 00033         PZE     X4 
      00075 -0734 00 1 00000         PDX     ,1            LENGTH OF CALLING SEQUENCE     
      00076  0636 00 4 00703         SCA     AH,4          SAVE RETURN  
      00077  0636 00 4 00115         SCA     AB,4          LST ADDRESS AFTER CALLING SEQUENCE   
      00100  0074 00 4 00003         TSX     $FSTATE,4
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 4     
                  
      00101  3 00000 0 01131         PTH     FIL
      00102  3 00000 0 01132         PTH     FIL+1    
      00103  3 00010 0 01110         PTH     ARRAY,,8 
      00104  3 00000 0 00705         PTH     ZZ+1          ERROR RETURN 
      00105 -0500 00 0 01132         CAL     FIL+1         SET NAMES BACKWARD 
      00106  0602 00 0 01130         SLW     FIL-1         FOR MAD CALL TO VREAD    
      00107  0074 00 4 00004         TSX     $SEEK,4  
      00110  0 00000 0 01131         PZE     FIL
      00111  0074 00 4 00005         TSX     $MOVE1,4 
      00112  2 01250 0 01226         TIX     ACTARG,,ACTARG+CL-2  
      00113  0774 00 2 00000         AXT     ,2            INIT ARGUMENTS WORD COUNT
      00114  0020 00 0 00131         TRA     AE            CHECK IF ANY ARGUMENT    
      00115 -0500 00 1 00000  AB     CAL     **,1          FROM 2ND TO LAST ARGUMENT
      00116  0602 00 0 00120         SLW     AC 
      00117  0074 00 4 00006         TSX     $MOVE2,4 
                  
  BINARY CARD NO. SCHAIN05    
      00120  0 00000 0 00000  AC     ***     **,,**        SUCCESSIVE ARGUMENTS FROM CALL TO SCHAIN   
      00121  0601 00 0 01277  AK     STO     K  
      00122  1 77777 2 00123         TXI     *+1,2,-1      WORD COUNTER 
      00123  0402 00 0 01663         SUB     =H 
      00124  0100 00 0 00127         TZE     BT            SKIP IF ALL BLANK  
      00125  0074 00 4 00007         TSX     $RJUST,4 
      00126  0 00000 0 01277         PZE     K  
      00127 -1 00131 0 00132  BT     STR     AD,,AE   
      00130  0020 00 0 00121         TRA     AK 
      00131  2 00001 1 00115  AE     TIX     AB,1,1   
      00132 -0634 00 2 00343  AD     SXD     SS,2          ARGUMENT LIST EXHAUSTED  
      00133  0074 00 4 00010         TSX     $MOVE3,4 
                  
                  
                              *      SAVE COMMAND LISTS BUFFERS AND COUNTERS. 
                  
      00134  0774 00 1 00001         AXT     1,1
      00135  0774 00 2 01504         AXT     CBUF,2   
      00136  0634 00 2 00141  U      SXA     *+3,2    
      00137 -0634 00 1 00141         SXD     *+2,1    
      00140  0074 00 4 00011         TSX     $GETCLS,4
      00141  0 00000 0 00000         PZE     **,,**   
      00142  1 00024 2 00143         TXI     *+1,2,CL 
      00143  1 00001 1 00144         TXI     *+1,1,1  
                  
  BINARY CARD NO. SCHAIN06    
      00144 -3 00005 1 00136         TXL     U,1,CN   
      00145  0074 00 4 00012         TSX     $GETCLC,4
      00146  0602 00 0 01122         SLW     CLC
      00147 -0100 00 0 00157         TNZ     A  
      00150  0074 00 4 00013         TSX     $DELETE,4
      00151  0 00000 0 01036         PZE     FIL1     
      00152  0100 00 0 00157         TZE     A  
      00153  0601 00 0 01123         STO     FAIL     
      00154  0074 00 4 00014         TSX     $WRFLX,4 
      00155  0 00003 0 01045         PZE     MES1,,3  
      00156  0020 00 0 00670         TRA     OUT
                       00157  A      SYN     *  
      00157  0074 00 4 00015         TSX     $SETEOF,4
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 5     
                  
      00160  0 00000 0 00630         PZE     EOF           RETURN WHEN FILE ENDS    
      00161  0774 00 2 00002         AXT     FC,2          BEGIN WITH COMMAND NO. 2  (USUALLY)  
                       00162  B      SYN     *  
                       00162  BE     SYN     *  
      00162  0074 00 4 00016         TSX     $VREAD,4 
      00163  3 00000 0 01131         PAR     FIL
      00164  2 01276 0 01251         TIX     AG,,AG+RL-1    
      00165  0774 00 4 00000  BL     AXT     **,4          READING COUNTER    
      00166  1 00001 4 00167         TXI     *+1,4,1  
      00167  0634 00 4 00165         SXA     *-2,4    
                  
  BINARY CARD NO. SCHAIN07    
      00170  0120 00 0 00174         TPL     BS            SKIP IF VARIABLE LENGTH RECORD 
      00171 -0340 00 0 01654         LAS     =12           CARD IMAGE NOT LONGER THAN 12 WORDS  
      00172 -0500 00 0 01654         CAL     =12
      00173  0761 00 0 00000         NOP  
      00174 -0340 00 0 01655  BS     LAS     =22           BCD RECORD NOT LONGER THAN 22 WORDS  
      00175 -0500 00 0 01655         CAL     =22
      00176  0761 00 0 00000         NOP  
      00177 -0130 00 0 00000         XCL                   IGNORE SIGN  
      00200  0200 00 0 01653         MPY     =6             CHARACTER COUNT   
      00201 -0763 00 0 00066         LGL     36+18    
      00202  0760 00 0 00006         COM                   -COUNT-1     
      00203  0622 00 0 00272         STD     AA 
      00204  0622 00 0 00245         STD     GG 
                  
                  
                              *      TEST FOR 1ST CHARACTER IN THE LINE 
                  
      00205  0074 00 4 00017         TSX     $UNPAKL,4     UNPACKS LINE 
      00206  2 01276 0 01251         TIX     AG,,AG+RL-1    
      00207  2 01503 0 01300         TIX     K+1,,K+6*RL    
      00210  0500 00 0 01300         CLA     K+1
      00211  0402 00 0 01660         SUB     =H*00000 
      00212  0100 00 0 00162         TZE     B  
      00213  0500 00 0 01300         CLA     K+1
                  
  BINARY CARD NO. SCHAIN08    
      00214  0402 00 0 01657         SUB     =H$00000 
      00215 -0100 00 0 00236         TNZ     F  
      00216  0056 00  000100         RNT     COMSET   
      00217  0020 00 0 00232         TRA     BB 
      00220  0056 00  000040         RNT     LKHED    
      00221 -3 00002 2 00232         TXL     BB,2,FC  
      00222  0054 00  000020         RFT     PRINT    
      00223  0020 00 0 00232         TRA     BB            KEEP PRINTING
      00224  0055 00  000021         SIR     NDLOT+PRINT    
      00225  0057 00  000040         RIR     LKHED    
      00226 -0500 00 0 01157  BQ     CAL     ARG1          CHECKS CURRENT COMMAND   
      00227  0020 00 0 00443         TRA     J-1           GO CHECK CN-1 TH.  
                       00230  BA     SYN     *  
      00230  0056 00  000020         RNT     PRINT    
      00231  0020 00 0 00367         TRA     BC            GO ON WITH NEXT COMMAND  
      00232  0055 00  000020  BB     SIR     PRINT    
      00233  0074 00 4 00014         TSX     $WRFLX,4 
      00234  0 00014 0 01251         PZE     AG,,12   
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 6     
                  
      00235  0020 00 0 00162         TRA     B             NEXT LINE FROM FILE
                  
                  
                              *      TEST OF 1ST WORD 
                  
                       00236  F      SYN     *  
      00236  0774 00 6 00024         AXT     CL,6     
      00237 -0500 00 0 01663         CAL     =H 
                  
  BINARY CARD NO. SCHAIN09    
      00240  0602 00 6 01157         SLW     ARG+CL,6      BLANK OUT ARGUMENT LIST  
      00241  2 00001 6 00240         TIX     *-1,6,1  
      00242  0774 00 6 00000         AXT     0,6           WORD INDEX   
      00243  0774 00 7 77777         AXT     -1,7          CHARACTER INDEX    
      00244  0020 00 0 00246         TRA     *+2
      00245 -3 00000 7 00311  GG     TXL     L,7,**        -CHAR COUNT - 1    
      00246 -0500 00 7 01277         CAL     K,7
      00247 -0340 00 0 01661         LAS     =O570000000000 
      00250  0020 00 0 00252         TRA     G-4
      00251 -0500 00 0 01662         CAL     =H 00000 
      00252 -0340 00 0 01662         LAS     =H 00000 
      00253  0020 00 0 00265         TRA     C  
      00254  1 77777 7 00245         TXI     GG,7,-1  
      00255  0020 00 0 00265         TRA     C  
      00256 -0500 00 7 01277  G      CAL     K,7
      00257 -0340 00 0 01661         LAS     =O570000000000 
      00260  0020 00 0 00262         TRA     C-3
      00261 -0500 00 0 01662         CAL     =H 00000 
      00262 -0340 00 0 01662         LAS     =H 00000      ANY BLANK FIELD IS A DELIMITER 
      00263  0020 00 0 00265         TRA     *+2           BETWEEN ARGUMENTS  
                  
  BINARY CARD NO. SCHAIN10    
      00264  1 77777 6 00274         TXI     D,6,-1   
      00265 -0130 00 0 00000  C      XCL  
      00266 -0500 00 6 01133         CAL     ARG,6    
      00267 -0763 00 0 00006         LGL     6             AT MOST 6 RIGHTMOST CHARACTERS ARE KEPT    
      00270  0602 00 6 01133         SLW     ARG,6    
      00271  1 77777 7 00272         TXI     *+1,7,-1 
      00272  3 00000 7 00256  AA     TXH     G,7,**        LOOP IF MORE CHARACTERS  
      00273  1 77777 6 00274         TXI     *+1,6,-1 
      00274 -3 77776 6 00307  D      TXL     H,6,-2        SKIP UNLESS 1ST WORD     
                              *      INSERT HERE CHECK OF ALWAYS PERMITTED KEYWORDS 
      00275  0057 00  000020         RIR     PRINT    
      00276 -0500 00 0 01133         CAL     ARG
      00277  0056 00  000002         RNT     TCHAIN        SKIP WHEN 'CHAIN' ALREADY OCCURRED   
      00300 -0340 00 0 01035         LAS     CHAIN    
      00301  0020 00 0 00303         TRA     *+2
      00302  0020 00 0 00304         TRA     AJ 
      00303  0020 00 0 00307         TRA     H  
      00304  0054 00  000100  AJ     RFT     COMSET        SKIP IF NO EXECUTABLE COMMAND YET    
      00305  0020 00 0 00727         TRA     ERROR    
      00306  0055 00  000006         SIR     TCHAIN+ARGLIS  
                              *      INSERT HERE CHECK OF KEYWORDS ALLOWED AFTER 'CHAIN' ONLY   
      00307 -3 77755 6 00311  H      TXL     L,6,-CL+1     SKIP WHEN ONLY FENCE LEFT
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 7     
                  
  BINARY CARD NO. SCHAIN11    
      00310  1 77777 7 00245         TXI     GG,7,-1       NEXT WORD    
                  
      00311 -3 00000 6 00162  L      TXL     B,6,0         NEXT LINE IF ALL BLANK   
      00312 -0500 00 0 01072         CAL     FENCE    
      00313  0602 00 6 01133         SLW     ARG,6         SET FENCE    
      00314  0056 00  000004         RNT     ARGLIS   
      00315  0020 00 0 00327         TRA     P             NOT A 'CHAIN' KEYWORD    
                  
                  
                              *      SETS DUMMY ARGUMENTS LIST    
                  
      00316 -0634 00 6 00324         SXD     N,6
      00317 -0634 00 6 00344         SXD     S,6
      00320  0774 00 1 00000         AXT     0,1
      00321 -0500 00 1 01133  M      CAL     ARG,1         FENCE IS NOT TRANSMITTED 
      00322  0602 00 1 01203         SLW     ARLIS,1  
      00323  1 77777 1 00324         TXI     *+1,1,-1 
      00324  3 00000 1 00321  N      TXH     M,1,**        ** = -NR. OF DUMMIES     
      00325  0057 00  000004         RIR     ARGLIS   
      00326  0020 00 0 00162         TRA     B             NEXT COMMAND 
                  
                  
                              *      SUBSTITUTES DUMMY ARGUMENTS  
                  
                       00327  P      SYN     *  
      00327 -0634 00 6 00350         SXD     S1,6     
      00330  0056 00  000002         RNT     TCHAIN   
      00331  0020 00 0 00351         TRA     W1            NO DUMMY ARGUMENTS 
      00332 -0534 00 4 00343         LXD     SS,4     
      00333 -3 00000 4 00351         TXL     W1,4,0        SKIP WHEN NO ACTUAL ARGUMENTS  
                  
  BINARY CARD NO. SCHAIN12    
      00334  0774 00 1 00000         AXT     0,1           IX1 = ARGUMENT IN COMMAND
      00335 -0500 00 1 01133  R      CAL     ARG,1    
      00336  0774 00 4 00000         AXT     0,4           IX4 = DUMMY IN CHAIN PSEUDO    
      00337 -0340 00 4 01204  Q      LAS     ARLIS+1,4
      00340  1 77777 4 00343         TXI     SS,4,-1       NEXT DUMMY ARGUMENT
      00341  1 77777 1 00346         TXI     BU,1,-1       GO TO SUBSTITUTION 
      00342  1 77777 4 00343         TXI     SS,4,-1       NEXT DUMMY ARGUMENT
      00343 -3 00000 4 00345  SS     TXL     *+2,4,**      SKIP WHEN NO MORE ACTUAL ARGUMENTS. **=-WC 
      00344  3 00000 4 00337  S      TXH     Q,4,**        NEXT ARGUMENT IN 'CHAIN'   ** = -NR OF DUMM
      00345  1 77777 1 00350         TXI     *+3,1,-1 
      00346 -0500 00 4 01226  BU     CAL     ACTARG,4      GET ACTUAL VALUE   
      00347  0602 00 1 01132         SLW     ARG-1,1       AND SUBSTITUTES IN COMMAND LIST
      00350  3 00000 1 00335  S1     TXH     R,1,**        NEXT ARGUMENT IN COMMAND.  ** = -N-1 ARG   
                  
                  
                              *      CHECKS IF (NIL) OR (END) PSEUDO-COMMAND  
                       00351  W1     SYN     *  
      00351  0500 00 0 01133         CLA     ARG
      00352  0402 00 0 01033         SUB     NIL
      00353  0100 00 0 00162         TZE     B             NIL IGNORED. TO NEXT COMMAND   
      00354  0500 00 0 01133         CLA     ARG
      00355  0402 00 0 01034         SUB     END
      00356  0100 00 0 00630         TZE     EOF           FORCES END OF PROCESS    
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 8     
                  
      00357  0054 00  000040         RFT     LKHED         SKIP WHEN LOOK UP NEXT COMMAND 
                  
  BINARY CARD NO. SCHAIN13    
      00360  0020 00 0 00432         TRA     AF 
      00361  0074 00 4 00707         TSX     SWUFD,4       CHECK FOR A SWITCHING COMMAND  
      00362 -3 00000 3 00366         TXL     BN,3,0        SKIP IF NO   
      00363  0055 00  000200         SIR     COMSW         IT MIGHT     
      00364  3 00002 3 00366         TXH     BN,3,AQ-COMF-1          IT IS COMFIL   
      00365  0055 00  000400         SIR     COPY          ANOTHER IMPLICIT SWITCHING COMMAND   
      00366  0055 00  000140  BN     SIR     COMSET+LKHED   
                              *      SET CURRENT COMMAND. SQUEEZES 'NIL'S AND REPLACES 'END'S.  
                       00367  BC     SYN     *  
      00367  0560 00 0 01072         LDQ     FENCE         FENCE  
      00370  0774 00 4 00024         AXT     CL,4     
      00371  0774 00 1 00025         AXT     CL+1,1   
      00372 -0500 00 4 01157  BG     CAL     ARG+CL,4 
      00373 -0340 00 0 01033         LAS     NIL
      00374  0020 00 0 00376         TRA     *+2
      00375  0020 00 0 00403         TRA     BM 
      00376 -0340 00 0 01034         LAS     END
      00377  0020 00 0 00401         TRA     *+2
      00400 -0130 00 0 00000         XCL                   END REPLACED BY A FENCE  
      00401  1 77777 1 00402         TXI     *+1,1,-1 
      00402  0602 00 1 01203         SLW     ARG1+CL,1
      00403  2 00001 4 00372  BM     TIX     BG,4,1   
                              *      CHECKS IF COMMAND MAY SWITCH U.F.D.
                  
  BINARY CARD NO. SCHAIN14    
      00404  0056 00  000200         RNT     COMSW    
      00405  0020 00 0 00162         TRA     B             TO NEXT COMMAND    
      00406  0054 00  000400         RFT     COPY     
      00407  0020 00 0 00426         TRA     AM 
      00410  0500 00 0 01157         CLA     ARG1     
      00411  0402 00 0 00755         SUB     COMF     
      00412 -0100 00 0 00430         TNZ     AN            SKIP IF NOT 'COMFIL'     
      00413 -0534 00 1 00350         LXD     S1,1     
      00414  0600 00 0 01126         STZ     LCF
      00415  3 77776 1 00424         TXH     AL,1,-2       SKIP IF NO ARGUMENT
      00416 -0500 00 0 01160         CAL     ARG1+1        1ST ARGUMENT 
      00417  0322 00 0 01072         ERA     FENCE    
      00420  0100 00 0 00424         TZE     AL            SKIP IF FENCE
      00421  0074 00 4 00020         TSX     $ZEL,4   
      00422  0 00000 0 01160         PZE     ARG1+1   
      00423  0601 00 0 01126         STO     LCF           NEW COMMON FILE    
      00424  0057 00  000040  AL     RIR     LKHED    
      00425  0020 00 0 00162         TRA     B             TO NEXT COMMAND    
      00426  0600 00 0 01126  AM     STZ     LCF
      00427  0057 00  000400         RIR     COPY     
                  
  BINARY CARD NO. SCHAIN15    
      00430  0057 00  000200  AN     RIR     COMSW    
      00431  0020 00 0 00162         TRA     B             TO NEXT COMMAND    
                       00432  AF     SYN     *  
      00432  0074 00 4 00707         TSX     SWUFD,4       IS IT A SWITCHING COMMAND
      00433  3 00002 3 00440         TXH     AT,3,AQ-COMF-1 COMFIL IS NEXT    
      00434 -3 00000 3 00442         TXL     AS,3,0        NO SWITCHING IN NEXT     
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 9     
                  
      00435 -0520 00 0 01126         NZT     LCF
      00436  0020 00 0 00464         TRA     W  
      00437  0055 00  000400         SIR     COPY     
      00440  0055 00  000201  AT     SIR     NDLOT+COMSW    
      00441  0020 00 0 00464         TRA     W  
      00442 -3 00002 2 00464  AS     TXL     W,2,CN-3      NO COMFIL SWITCHING IN NEXT COMMAND  
      00443  3 00003 2 00464         TXH     W,2,CN-2 
                              *      SPECIAL PROCEDURE FOR THE (CN-2)TH COMMAND     
                       00444  J      SYN     *  
      00444  0774 00 3 00037         AXT     AY-AX,3  
      00445 -0340 00 3 01033         LAS     AY,3          DOES NEXT LET CORE IMAGE.  LAC = ARG 
      00446  0020 00 0 00450         TRA     *+2
      00447  0020 00 0 00452         TRA     AZ            YES    
      00450  2 00001 3 00445         TIX     *-3,3,1  
      00451  0020 00 0 00464         TRA     W             NO     
                       00452  AZ     SYN     *  
      00452  0054 00  000030         RFT     PRINT+EF 
      00453  0020 00 0 00462         TRA     X  
                  
  BINARY CARD NO. SCHAIN16    
      00454  0774 00 3 00014         AXT     AW-AV,3  
      00455 -0340 00 3 00774         LAS     AW,3          DOES NEXT EXPECT CORE IMAGE    
      00456  0020 00 0 00460         TRA     *+2
      00457  0020 00 0 00462         TRA     X             YES    
      00460  2 00001 3 00455         TIX     *-3,3,1  
      00461  0020 00 0 00463         TRA     X+1
      00462  0055 00  002000  X      SIR     CORE     
      00463  0055 00  000001         SIR     NDLOT    
                              *      LOADS COMMAND LIST     
                  
      00464 -0634 00 2 00466  W      SXD     *+2,2    
      00465  0074 00 4 00021         TSX     $SETCLS,4
      00466  0 00000 0 01157         PZE     ARG1,,** 
      00467  1 00001 2 00470         TXI     *+1,2,1       NEXT COMMAND 
      00470  3 00004 2 00473         TXH     AP,2,CN-1     SKIP IF LAST-1 COMMAND   
      00471  0056 00  000001         RNT     NDLOT    
      00472  0020 00 0 00367         TRA     BC            TO NEXT COMMAND    
                       00473  AP     SYN     *  
      00473                          SWUS    LCF
      00473 -0500 00 0 01126         CAL     LCF                                                              .001
      00474  0074 00 3 00717         TSX     SWCF,3                                                           .001
      00475 -0500 00 0 01126         CAL     LCF
      00476  0402 00 0 01127         SUB     PCF
      00477  0100 00 0 00501         TZE     *+2           SKIP IF SAME COMFIL FOR CHAIN  
                  
  BINARY CARD NO. SCHAIN17    
      00500  0057 00  005000         RIR     NAM+NAM1      TO GET NEW NAMES   
      00501  0054 00  001000         RFT     NAM
      00502  0020 00 0 00510         TRA     Y  
                  
                  
                              *      GETS A FILE NAME FOR TEMPORARY STORAGE   
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 10    
                  
      00503  0074 00 4 00022         TSX     $GTNAM,4 
      00504  0 00000 0 01037         PZE     SAVED    
      00505  0055 00  001000         SIR     NAM
      00506  0601 00 0 01070         STO     SAVE+1   
      00507  0601 00 0 01074         STO     RESUME+1 
                  
                  
                              *      SETS BRACKET COMMANDS  
                  
                       00510  Y      SYN     *  
      00510  0074 00 4 00021         TSX     $SETCLS,4
      00511  0 00001 0 01067         PZE     SAVE,,1  
      00512  0056 00  002000         RNT     CORE     
      00513  0020 00 0 00551         TRA     Z  
      00514  0054 00  004000         RFT     NAM1     
      00515  0020 00 0 00545         TRA     T             SKIP IF NAME ASSIGNED    
      00516  0074 00 4 00023         TSX     $OPEN,4       CREATE DUMMY FILE  
      00517  3 00000 0 01664         PTH     =H     W 
      00520  3 00000 0 01074         PTH     RESUME+1 
      00521  3 00000 0 01075         PTH     RESUME+2 
      00522  3 00000 0 01651         PTH     =1            TEMPORARY FILE     
      00523  3 00000 0 01652         PTH     =2            DISK   
                  
  BINARY CARD NO. SCHAIN18    
      00524  0074 00 4 00024         TSX     $WRFILE,4
      00525  3 00000 0 01074         PTH     RESUME+1 
      00526  3 00000 0 01075         PTH     RESUME+2 
      00527  3 00000 0 01650         PTH     =0            CONTINUE WRITING.  
      00530  3 00024 0 01157         PTH     ARG1,,CL 
      00531  3 00000 0 01656         PTH     =-0           EOF ON WRITE 
      00532  3 00000 0 01656         PTH     =-0           EOFCT ON WRITE     
      00533  3 00000 0 00705         PTH     ZZ+1     
      00534  0074 00 4 00025         TSX     $CLOSE,4 
      00535  3 00000 0 01074         PTH     RESUME+1 
      00536  3 00000 0 01075         PTH     RESUME+2 
      00537  3 00000 0 00705         PTH     ZZ+1     
      00540  0074 00 4 00022         TSX     $GTNAM,4 
      00541  0 00000 0 01037         PZE     SAVED    
      00542  0055 00  004000         SIR     NAM1     
      00543  0601 00 0 01100         STO     SAVE1+1       SET NAMES FOR CORE IMAGE 
      00544  0601 00 0 01104         STO     RESTOR+1 
                       00545  T      SYN     *  
      00545 -0634 00 2 00547         SXD     *+2,2    
      00546  0074 00 4 00021         TSX     $SETCLS,4
      00547  0 00000 0 01077         PZE     SAVE1,,**     SAVE CORE IMAGE    
                  
  BINARY CARD NO. SCHAIN19    
      00550  1 00001 2 00551         TXI     *+1,2,1  
                       00551  Z      SYN     *  
      00551 -0634 00 2 00553         SXD     *+2,2    
      00552  0074 00 4 00021         TSX     $SETCLS,4
      00553  0 00000 0 01073         PZE     RESUME,,**     
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 11    
                  
                              *      STARTS CHAIN     
                  
      00554 -0754 00 2 00000         PXD     ,2 
      00555  0400 00 0 01651         ADD     =1 
      00556  0074 00 4 00026         TSX     $SETCLC,4
      00557                          TEMP1
      00557  0520 00 0 01123         ZET     FAIL                                                             .001
      00560 -0520 00 0 01126         NZT     LCF                                                              .001
      00561  0020 00 0 00571         TRA     ..002                                                            .001
      00562  0074 00 4 00027         TSX     $CHFILE,4                                                        .001
      00563  3 00000 0 01104         PTH     RESTOR+1                                                         .001
      00564  3 00000 0 01105         PTH     RESTOR+2                                                         .001
      00565  3 00000 0 01651         PTH     =1                                                               .001
      00566  3 00000 0 01656         PTH     =-0           DO NOT ALTER                                       .001
      00567  3 00000 0 01656         PTH     =-0           ..                                                 .001
      00570  3 00000 0 00571         PTH     *+1                                                              .001
                       00571  ..002  SYN     *                                                                .001
      00571  0600 00 0 01123         STZ     FAIL          RESET POSSIBLE FILE NAME 
      00572  0074 00 4 00030         TSX     $CHNCOM,4
      00573  3 00000 0 01651         PAR     =1            KEEP CORE IMAGE    
                  
                  
                              *      RETURN  AFTER CHAIN EXECUTED 
                  
                  
  BINARY CARD NO. SCHAIN20    
      00574  0056 00  002000         RNT     CORE     
      00575  0020 00 0 00605         TRA     BJ+1     
      00576  0074 00 4 00003         TSX     $FSTATE,4
      00577  3 00000 0 01104         PTH     RESTOR+1 
      00600  3 00000 0 01105         PTH     RESTOR+2 
      00601  3 00010 0 01110         PTH     ARRAY,,8 
      00602  3 00000 0 00604         PTH     BJ 
      00603  0020 00 0 00607         TRA     BP 
      00604  0057 00  002000  BJ     RIR     CORE          NO FILE FOR CORE IMAGE   
      00605  0074 00 4 00013         TSX     $DELETE,4
      00606  0 00000 0 01074         PZE     RESUME+1      DELETE CHAIN CORE IMAGE  
                       00607  BP     SYN     *  
      00607  0054 00  000010         RFT     EF 
      00610  0020 00 0 00635         TRA     E  
      00611 -0500 00 0 01126         CAL     LCF
      00612  0602 00 0 01127         SLW     PCF           LOCAL COMFIL BECOMES PREVIOUS  
      00613                          SWUS    HCF
      00613 -0500 00 0 01125         CAL     HCF                                                              .001
      00614  0074 00 3 00717         TSX     SWCF,3                                                           .001
      00615  0057 00  000001         RIR     NDLOT    
      00616  0774 00 2 00002         AXT     FC,2     
      00617  0056 00  002000         RNT     CORE     
                  
  BINARY CARD NO. SCHAIN21    
      00620  0020 00 0 00230         TRA     BA            TO NEXT BATCH
      00621 -0634 00 2 00623         SXD     *+2,2    
      00622  0074 00 4 00021         TSX     $SETCLS,4
      00623  0 00000 0 01103         PZE     RESTOR,,**    RESTORE CORE IMAGE 
      00624 -0500 00 0 01104         CAL     RESTOR+1 
      00625  0602 00 0 01123         SLW     FAIL          CORE IMAGE FLAG    
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 12    
                  
      00626  0057 00  002000         RIR     CORE     
      00627  1 00001 2 00230         TXI     BA,2,1        TO NEXT BATCH
                              *      WHEN END OF FILE 
      00630  0055 00  000011  EOF    SIR     EF+NDLOT 
      00631  0056 00  000100         RNT     COMSET   
      00632  0020 00 0 00635         TRA     E  
      00633  0054 00  000040         RFT     LKHED    
      00634  0020 00 0 00226         TRA     BQ            GO CHECK CORE IMAGE LEFT BY COMMAND  
                  
                  
                              *      RESTORE COMMAND LISTS AND COUNTERS 
                  
                       00635  E      SYN     *  
      00635  0774 00 1 00001         AXT     1,1
      00636  0774 00 2 01504         AXT     CBUF,2   
      00637  0634 00 2 00642  V      SXA     *+3,2    
      00640 -0634 00 1 00642         SXD     *+2,1    
      00641  0074 00 4 00021         TSX     $SETCLS,4
      00642  0 00000 0 00000         PZE     **,,**   
      00643  1 00024 2 00644         TXI     *+1,2,CL 
                  
  BINARY CARD NO. SCHAIN22    
      00644  1 00001 1 00645         TXI     *+1,1,1  
      00645 -3 00005 1 00637         TXL     V,1,CN   
      00646 -0500 00 0 01122         CAL     CLC
      00647  0074 00 4 00026         TSX     $SETCLC,4
      00650                          SWUS    LCF
      00650 -0500 00 0 01126         CAL     LCF                                                              .001
      00651  0074 00 3 00717         TSX     SWCF,3                                                           .001
      00652  0056 00  002000         RNT     CORE     
      00653  0020 00 0 00670         TRA     E1            NO CORE IMAGE LEFT 
      00654  0074 00 4 00013         TSX     $DELETE,4
      00655  0 00000 0 01074         PZE     RESUME+1      DELETE CHAIN SAVED FILE  
      00656 -0100 00 0 00667         TNZ     BR            ERROR  
      00657  0074 00 4 00027         TSX     $CHFILE,4
      00660  3 00000 0 01104         PTH     RESTOR+1 
      00661  3 00000 0 01105         PTH     RESTOR+2 
      00662  3 00000 0 01651         PTH     =1            TEMPORARY MODE     
      00663  3 00000 0 01074         PTH     RESUME+1 
      00664  3 00000 0 01075         PTH     RESUME+2 
      00665  3 00000 0 00667         PTH     BR            TO A LOWER NAME IN THE LIST    
      00666 -0500 00 0 01074         CAL     RESUME+1      OF TEMPORARY FILES 
      00667  0602 00 0 01123  BR     SLW     FAIL          SET ERROR CODE OR FILE NAME    
                       00670  E1     SYN     *  
                  
                  
                              *      END OF PROCESS   
                  
                       00670  OUT    SYN     *  
      00670                          RSTOR
                  
  BINARY CARD NO. SCHAIN23    
      00670  0441 00 0 01120         LDI     IND                                                              .001
      00671  0774 00 3 00000  X3     AXT     **,3                                                             .001
      00672  0774 00 5 00000  X5     AXT     **,5                                                             .001
      00673  0774 00 6 00000  X6     AXT     **,6                                                             .001
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 13    
                  
      00674  0774 00 7 00000  X7     AXT     **,7                                                             .001
      00675 -0520 00 0 01121         NZT     XMOD                                                             .001
      00676 -0760 00 0 00016         EMTM                                                                     .001
      00677  0774 00 1 00000  X1     AXT     **,1                                                             .001
      00700  0774 00 2 00000  X2     AXT     **,2                                                             .001
      00701 -0534 00 4 00033         LXD     X4,4                                                             .001
      00702  0500 00 0 01123         CLA     FAIL     
      00703  0020 00 0 00000  AH     TRA     ** 
                  
      00704  0500 00 0 01651  ZZ     CLA     =1 
      00705  0601 00 0 01123         STO     FAIL     
      00706  0020 00 0 00670         TRA     E1 
                              *      SWUFD S/R.  CHECKS WHETHER A COMMAND MAY SWITCH U.F.D.     
      00707 -0500 00 0 01133  SWUFD  CAL     ARG
      00710  0774 00 3 00003         AXT     AQ-COMF,3
      00711 -0340 00 3 00760  AR     LAS     AQ,3          NEXT MIGHT SWITCH FILE DIRECTORY     
      00712  0020 00 0 00714         TRA     *+2
      00713  0020 00 4 00001         TRA     1,4           YES    
                  
  BINARY CARD NO. SCHAIN24    
      00714  2 00001 3 00711         TIX     AR,3,1   
      00715  0774 00 3 00000         AXT     ,3            NO     
      00716  0020 00 4 00001         TRA     1,4           RETURN WITH IX3 SETTING  
                  
                              *      SWCF S/R. SWITCHES TO SPECIFIED COMMON FILE    
      00717 -0340 00 0 01124  SWCF   LAS     CCF           IS IT NEW COMMON FILE    
      00720  0020 00 0 00722         TRA     *+2
      00721  0020 00 3 00001         TRA     1,3           YES. IGNORE CALL   
      00722  0602 00 0 01124         SLW     CCF           SAVE NEW COMMON FILE NO. 
      00723  0057 00  002000         RIR     CORE          COMFIL LEAVES NO CORE IMAGE    
      00724  0074 00 4 00031         TSX     $COMFIL,4
      00725  3 00000 0 00741         BRN     BUSY     
      00726  0020 00 3 00001         TRA     1,3
                              *      ERROR PROCEDURES 
      00727  0602 00 0 01040  ERROR  SLW     MES
      00730  0074 00 4 00014         TSX     $WRFLX,4 
      00731  0 00005 0 01040         PZE     MES,,5   
      00732  0020 00 0 00704         TRA     ZZ 
      00733 -0500 00 0 01157  BD     CAL     ARG1     
      00734  0602 00 0 01050         SLW     MES2     
      00735  0074 00 4 00014         TSX     $WRFLX,4 
      00736  0 00005 0 01050         PZE     MES2,,5       ILLEGAL COMMON FILE
      00737 -0500 00 0 01157         CAL     ARG1     
                  
  BINARY CARD NO. SCHAIN25    
      00740  0020 00 0 00705         TRA     ZZ+1     
      00741  0636 00 4 00754  BUSY   SCA     BF,4     
      00742  0602 00 0 01055         SLW     MES3     
      00743 -0600 00 0 01056         STQ     MES3+1   
      00744 -0500 00 0 01061         CAL     MES3+4   
      00745 -0320 00 0 01665         ANA     =O777777777700 
      00746 -0501 00 0 01124         ORA     CCF           SET COMFIL NO.     
      00747  0602 00 0 01061         SLW     MES3+4   
      00750  0074 00 4 00014         TSX     $WRFLX,4 
      00751  0 00012 0 01055         PZE     MES3,,10 
      00752  0074 00 4 00032         TSX     $DORMNT,4
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 14    
                  
      00753 -0500 00 0 01124         CAL     CCF
      00754  0020 00 0 00000  BF     TRA     **            TRY AGAIN    
                              *      THESE COMMANDS MAY SWITCH TO ANOTHER U.F.D.    
                  
                  
      00755  234644263143     COMF   BCI     1,COMFIL 
      00756  512544215142            BCI     1,REMARK 
      00757  606060434627            BCI     1,   LOG 
                       00760  AQ     SYN     *  
                       00760  AV     SYN     *             THESE COMMANDS EXPECT A CORE IMAGE   
      00760  262147242227            BCI     1,FAPDBG 
      00761  462363472163            BCI     1,OCTPAT 
      00762  462363635121            BCI     1,OCTTRA 
      00763  604623634342            BCI     1, OCTLK 
                  
  BINARY CARD NO. SCHAIN26    
      00764  626346472163            BCI     1,STOPAT 
      00765  604721632330            BCI     1, PATCH 
      00766  606060635121            BCI     1,   TRA 
      00767  606060604744            BCI     1,    PM 
      00770  606060646225            BCI     1,   USE 
      00771  606263215163            BCI     1, START 
      00772  606062216525            BCI     1,  SAVE 
      00773  626351212325            BCI     1,STRACE 
                       00774  AW     SYN     *  
                       00774  AX     SYN     *             THESE COMMANDS LET A CORE IMAGE
      00774  262147242227            BCI     1,FAPDBG 
      00775  606043212524            BCI     1,  LAED 
      00776  606043462124            BCI     1,  LOAD 
      00777  604324212262            BCI     1, LDABS 
      01000  462363472163            BCI     1,OCTPAT 
      01001  462363635121            BCI     1,OCTTRA 
      01002  604623634342            BCI     1, OCTLK 
      01003  626346472163            BCI     1,STOPAT 
      01004  604721632330            BCI     1, PATCH 
      01005  606060635121            BCI     1,   TRA 
      01006  606060604744            BCI     1,    PM 
      01007  606060646225            BCI     1,   USE 
                  
  BINARY CARD NO. SCHAIN27    
      01010  606263215163            BCI     1, START 
      01011  512562634651            BCI     1,RESTOR 
      01012  512562644425            BCI     1,RESUME 
      01013  606060606051            BCI     1,     R 
      01014  606062216525            BCI     1,  SAVE 
      01015  606543462124            BCI     1, VLOAD 
      01016  452343462124            BCI     1,NCLOAD 
      01017  434621242746            BCI     1,LOADGO 
      01020  626351212325            BCI     1,STRACE 
      01021  516445234644            BCI     1,RUNCOM 
      01022  236325626301            BCI     1,CTEST1 
      01023  236325626302            BCI     1,CTEST2 
      01024  236325626303            BCI     1,CTEST3 
      01025  236325626304            BCI     1,CTEST4 
      01026  236325626305            BCI     1,CTEST5 
      01027  236325626306            BCI     1,CTEST6 
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 15    
                  
      01030  236325626307            BCI     1,CTEST7 
      01031  236325626310            BCI     1,CTEST8 
      01032  236325626311            BCI     1,CTEST9 
                       01033  AY     SYN     *  
      01033  607445314334     NIL    BCI     1, (NIL) 
                  
  BINARY CARD NO. SCHAIN28    
      01034  607425452434     END    BCI     1, (END) 
      01035  602330213145     CHAIN  BCI     1, CHAIN 
      01036  333333000001     FIL1   BCI     2,...001 SAVED 
      01037  606221652524     
      01040  606060606060     MES    BCI     5,      ...ILLEGAL OCCURENCE     
      01041  333333314343     
      01042  252721436046     
      01043  232364512545     
      01044  232560606060     
      01045  604546602567     MES1   BCI     3, NO EXECUTION
      01046  252364633146     
      01047  456060606060     
      01050  234644444645     MES2   BCI     5,COMMON FILE        UNKNOWN     
      01051  602631432560     
      01052  606060606060     
      01053  606445424546     
      01054  664560606060     
      01055  606060606060     MES3   BCI ,             IS USING COMFIL 0, TYPE 'START' TO TRY AGAIN   
      01056  606060606060     
      01057  603162606462     
                  
  BINARY CARD NO. SCHAIN29    
      01060  314527602346     
      01061  442631436000     
      01062  736063704725     
      01063  601462632151     
      01064  631460634660     
      01065  635170602127     
      01066  213145606060     
      01067  606062216525     SAVE   VFD     H36/SAVE,36/,H36/T,O36//   
      01070  000000000000     
      01071  606060606063     
      01072  777777777777     
      01073  512562644425     RESUME VFD     H36/RESUME,36/,H36/SAVED,O36//   
      01074  000000000000     
      01075  606221652524     
      01076  777777777777     
      01077  606062216525     SAVE1  VFD     H36/SAVE,36/,H36/T,O36//   
      01100  000000000000     
      01101  606060606063     
      01102  777777777777     
      01103  512562634651     RESTOR VFD     H36/RESTOR,36/,H36/SAVED,O36//   
                  
  BINARY CARD NO. SCHAIN30    
      01104  000000000000     
      01105  606221652524     
      01106  777777777777     
                       00002  FC     EQU     2             FIRST COMMAND LIST AVAILABLE FOR USER'S    
                       00005  CN     EQU     5             NUMBER OF COMMAND LISTS  
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 16    
                  
                       00024  CL     EQU     20            COMMAND BUFFER LENGTH    
                       00026  RL     EQU     22            BCD RECORD BUFFER LENGTH 
                      000001  NDLOT  BOOL    1             ON = CLOSE SUB-CHAIN     
                      000002  TCHAIN BOOL    2             ON = 'CHAIN' OCCURRED    
                      000004  ARGLIS BOOL    4             ON = WHILE PROCESSING 'CHAIN' PSEUDO 
                      000010  EF     BOOL    10            ON = END FILE OCCURED    
                      000020  PRINT  BOOL    20            ON = WHILE PRINT ON-LINE 
                      000040  LKHED  BOOL    40            ON = NEXT COMMAND TO BE READ   
                      000100  COMSET BOOL    100           ON = SOME EXECUTABLE COMMAND READ    
                      000200  COMSW  BOOL    200           ON = NEXT COMMAND MAY SWITCH DIRECTORY     
                      000400  COPY   BOOL    400           ON = NEXT COMMAND SWITCHES IMPLICITLY UFD  
                      001000  NAM    BOOL    1000          ON = FILE NAME ASSIGNED TO 'SCHAIN'  
                      002000  CORE   BOOL    2000          ON = CORE IMAGE TO BE SAVED    
                      004000  NAM1   BOOL    4000          ON = FILE NAME ASSIGNED TO CORE IMAGE
                      010000  FILOST BOOL    10000         ON = SOURCE FILE STATUS LOST   
      01107 +000000000660     BUFSIZ DEC     432
      01110                   ARRAY  BSS     8  
      01120                   IND    BSS     1             SAVE INDICATORS    
      01121                   XMOD   BSS     1             0 FOR 3 IX'S MODE. 77777 FOR 7 IX'S MODE   
      01122                   CLC    BSS     1             SAVE COMMAND COUNTERS    
      01123                   FAIL   BSS     1             ZERO IF NO ERROR   
      01124                   CCF    BSS     1             CURRENT COMMON FILE
      01125                   HCF    BSS     1             HOME COMMON FILE   
      01126                   LCF    BSS     1             LOCAL COMMON FILE, IN THE SUBCHAIN   
      01127                   PCF    BSS     1             PREVIOUS LOCAL COMMON FILE     
      01130                   BK     BSS     3             FILE NAMES   
                       01131  FIL    SYN     BK+1     
      01133                   ARG    BSS     CL            COMMAND JUST READ  
      01157                   ARG1   BSS     CL            COMMAND TO BE LOADED     
      01203                   ARLIS  BSS     CL-1          CHAIN PSEUDO COMMAND     
      01226                   ACTARG BSS     CL-1          ACTUAL VALUES OF ARGUMENTS     
      01251                   AG     BSS     RL            READ INPUT BUFFER  
      01277                   K      BSS     6*RL+1        UNPACKED LINE BUFFER     
      01504                   CBUF   BSS     CL*CN         SAVE COMMAND LISTS 
                       01037  SAVED  SYN     FIL1+1   
                       01072  FENCE  SYN     SAVE+3   
                                     END  
                  
        LITERALS  
                  
  BINARY CARD NO. SCHAIN31    
      01650  000000000000     
      01651  000000000001     
      01652  000000000002     
      01653  000000000006     
      01654  000000000014     
      01655  000000000026     
      01656  400000000000     
      01657  530000000000     
      01660  540000000000     
      01661  570000000000     
      01662  600000000000     
      01663  606060606060     
      01664  606060606066     
      01665  777777777700     
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1666 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        157      A   147,  152,  157
        162      B   162,  212,  235,  311,  326,  353,  405,  425,  431
        265      C   253,  255,  260
        274      D   264
        635      E   610,  632,  635
        236      F   215,  236
        256      G   250,  272
        307      H   274,  303
        444      J   227,  444
       1277      K   121,  126,  207,  210,  213,  246,  256
        311      L   245,  307
        321      M   324
        324      N   316
        327      P   315,  327
        337      Q   344
        335      R   350
        344      S   317
        545      T   515,  545
        136      U   144
        637      V   645
        464      W   436,  441,  442,  443,  451
        462      X   453,  457,  461
        510      Y   502,  510
        551      Z   513,  551
        272     AA   203
        115     AB    77,  131
        120     AC   116
        132     AD   127
        131     AE   114,  127
        432     AF   360,  432
       1251     AG   164,  206,  234
        703     AH    76
        304     AJ   302
        121     AK   130
        424     AL   415,  420
        426     AM   407
        430     AN   412
        473     AP   470,  473
        760     AQ   364,  433,  710,  711,  760
        711     AR   714
        442     AS   434
        440     AT   433
        760     AV   454,  760
        774     AW   454,  455,  774
        774     AX   444,  774
       1033     AY   444,  445, 1033
        452     AZ   447,  452
        230     BA   230,  620,  627
        232     BB   217,  221,  223
        367     BC   231,  367,  472
        733     BD      
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        162     BE   162
        754     BF   741
        372     BG   403
        604     BJ   575,  602
       1130     BK  1133
        165     BL    55
        403     BM   375
        366     BN   362,  364
        607     BP   603,  607
        226     BQ   634
        667     BR   656,  665
        174     BS   170
        127     BT   124
        346     BU   341
         24     CL    57,   61,  112,  142,  236,  240,  307,  370,  371,  372,  402,  530,  643, 1107, 1133, 1157, 1203
                    1226, 1504
          5     CN   144,  442,  443,  470,  645, 1107, 1504
        670     E1   653,  670,  706
         10     EF   452,  607,  630, 1107
          2     FC   161,  221,  616, 1107
        245     GG   204,  254,  310
         26     RL   164,  206,  207, 1107, 1251, 1277
        350     S1   327,  413
        343     SS   132,  332,  340,  342
        351     W1   331,  333,  351
        677     X1    36
        700     X2    37
        671     X3    40,   47
         33     X4    35,   41,   64,   74,  701
        672     X5    50
        673     X6    51
        674     X7    52
        704     ZZ   104,  533,  537,  732,  740
       1133    ARG   240,  266,  270,  276,  313,  321,  335,  347,  351,  354,  372,  707
       1124    CCF    70,  717,  722,  746,  753
       1122    CLC   146,  646
       1034    END   355,  376
        630    EOF   160,  356
       1131    FIL    65,  101,  102,  105,  106,  110,  163, 1133
       1125    HCF    67,  613
       1120    IND    35,  670
       1126    LCF    72,  414,  423,  426,  435,  473,  475,  560,  611,  650
       1040    MES   727,  731
       1000    NAM   500,  501,  505, 1107
       1033    NIL   352,  373
        670    OUT   156,  670
       1127    PCF    71,  476,  612
         20    ZEL   421
       1157   ARG1    61,  226,  402,  410,  416,  422,  466,  530,  733,  737
        741   BUSY   725
       1504   CBUF   135,  636
          2   COLT    73
        755   COMF   364,  411,  433,  710
        400   COPY   365,  406,  427,  437, 1107
       2000   CORE   462,  512,  574,  604,  617,  626,  652,  723, 1107
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        660   DBUF    35
       1123   FAIL    54,  153,  557,  571,  625,  667,  702,  705
       1036   FIL1   151, 1650
          0   GNAM    63
       1045   MES1   155
       1050   MES2   734,  736
       1055   MES3   742,  743,  744,  747,  751
       4000   NAM1   500,  514,  542, 1107
         23   OPEN   516
       1067   SAVE   506,  511, 1650
          4   SEEK   107
        717   SWCF   474,  614,  651
       1121   XMOD    44,   46,  675
       1203  ARLIS   322,  337
       1110  ARRAY   103,  601
       1035  CHAIN   300
         25  CLOSE   534
        200  COMSW    56,  363,  404,  430,  440, 1107
        727  ERROR   305
       1072  FENCE   312,  367,  417, 1650
         22  GTNAM   503,  540
        571  ..002   561,  571
         40  LKHED   220,  225,  357,  366,  424,  633, 1107
          5  MOVE1   111
          6  MOVE2   117
         10  MOVE3   133
          1  NDLOT   224,  440,  463,  471,  615,  630, 1107
         20  PRINT   222,  224,  230,  232,  275,  452, 1107
          7  RJUST   125
       1077  SAVE1   543,  547
       1037  SAVED   504,  541, 1650
        707  SWUFD   361,  432
         16  VREAD   162
         14  WRFLX   154,  233,  730,  735,  750
       1226 ACTARG   112,  346
          4 ARGLIS   306,  314,  325, 1107
       1107 BUFSIZ      
         27 CHFILE   562,  657
         30 CHNCOM   572
         31 COMFIL   724
        100 COMSET   216,  304,  366,  631, 1107
         13 DELETE   150,  605,  654
         32 DORMNT   752
      10000 FILOST  1107
          3 FSTATE   100,  576
          1 GETCFN    66
         12 GETCLC   145
         11 GETCLS   140
       1103 RESTOR   544,  563,  564,  577,  600,  623,  624,  660,  661
       1073 RESUME   507,  520,  521,  525,  526,  535,  536,  553,  606,  655,  663,  664,  666
         35 SCHAIN     0,   35
         26 SETCLC   556,  647
         21 SETCLS   465,  510,  546,  552,  622,  641
         15 SETEOF   157
          2 TCHAIN   277,  306,  330, 1107
1            SCHAIN  SETS AND EXECUTES A CHAIN OF COMMANDS.                      04/23/69 2323.0 PAGE 4     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         17 UNPAKL   205
         24 WRFILE   524
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




RUNOFF   BCD 09/18/68 2319.7   82115         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   RMAIN   MAD            02/08/68    1243.2
-                 
                 ..  MAIN PROGRAM TO CALL RUNOFF COMMAND.                                              LM00001    
                                                                                                       LM00002    
                 ..  J. H. SALTZER, DECEMBER, 1965.                                                    LM00003    
                                                                                                       LM00004    
                 ..  DECLARATIONS.                                                                     LM00005    
                                                                                                       LM00006    
                  NORMAL MODE IS INTEGER                                                          *001 LM00007    
                  INSERT FILE RCOM                                                                *002 LM00008    
                                                                                                  *002 LM00001    
                 ..  RUNOFF COMMON PACKAGE.                                                       *002 LM00002    
                                                                                                  *002 LM00003    
                  NORMAL MODE IS INTEGER                                                          *003 LM00004    
                                                                                                       LM00005    
                  PROGRAM COMMON NOSTOP, NOWAIT, FSTPAG, PRINAM, OUTFIL                           *004 LM00006    
                  PROGRAM COMMON HDLTH, HEAD(360), HDPOS                                          *005 LM00007    
                  PROGRAM COMMON LINE(360)                                                        *006 LM00008    
                  PROGRAM COMMON PGE, PAGENO, PGPOS, FTSW, PGMOD                                  *007 LM00009    
                  PROGRAM COMMON PREFIX(25), PRLTH                                                *008 LM00010    
                  PROGRAM COMMON RMARG                                                            *009 LM00011    
                  PROGRAM COMMON WRD, SIZE, COUNT, WORD(360)                                      *010 LM00012    
                  PROGRAM COMMON BEGIN, FILL, ADJST, NCHARS, LENGTH                               *011 LM00013    
                  PROGRAM COMMON LMARG, LINECT, BOTLIN, CNTR, FILSW                               *012 LM00014    
                  PROGRAM COMMON FLAGSW, DBLSPC, HEDPGE, PIX                                      *013 LM00015    
                  PROGRAM COMMON MROW, TBTLIN, TBTPAG                                             *014 LM00016    
                  PROGRAM COMMON TPGPOS, TFTSW, TPGE, TPRF(25)                                    *015 LM00017    
                  PROGRAM COMMON TPRLTH, THDPOS, TPAGNO, TPGMOD                                   *016 LM00018    
                  PROGRAM COMMON BOTPAG, FLAG(3)                                                  *017 LM00019    
                  PROGRAM COMMON BLANK, BCKSPC, RETURN(3)                                         *018 LM00020    
                  PROGRAM COMMON TAB, PERIOD, QUES, EXCLAM                                        *019 LM00021    
                  PROGRAM COMMON COLON, HYPHEN, NULL                                              *020 LM00022    
                                                                                                       LM00023    
                  BOOLEAN NOSTOP, NOWAIT, FTSW, PGE, OUTFIL                                       *021 LM00024    
                  BOOLEAN ADJST                                                                   *022 LM00025    
                  BOOLEAN WRD, FILL, BEGIN, CNTR, FILSW, FLAGSW                                   *023 LM00026    
                  BOOLEAN DBLSPC, HEDPGE, PIX, TPGE, TFTSW                                        *024 LM00027    
                                                                                                       LM00028    
                 ..  END OF RUNOFF COMMON PACKAGE                                                      LM00029    
                                                                                                       LM00030    
                  VECTOR VALUES FENCE = 777777777777K                                             *025 LM00009    
                                                                                                       LM00010    
                 ..  DEFAULT ARGUMENT VALUES                                                           LM00011    
                                                                                                       LM00012    
                  VECTOR VALUES NOSTOP = 1B                                                       *026 LM00013    
                  VECTOR VALUES NOWAIT = 0B                                                       *027 LM00014    
                  VECTOR VALUES FSTPAG = 0                                                        *028 LM00015    
                  VECTOR VALUES OUTFIL = 0B                                                       *029 LM00016    
                                                                                                       LM00017    
                 ..  COLLECT COMMAND ARGUMENTS.  FIRST ARGUMENT IS                                     LM00018    
                 ..  NAME OF FILE TO BE READ.                                                          LM00019    
                                                                                                       LM00020    
                  SETBRK.(CHNCOM.)                                                                *030 LM00021    
                  PRINAM = COMARG.(1)                                                             *031 LM00022    
                  WHENEVER PRINAM .E. FENCE                                                       *032 LM00023    
      BADARG           PRINT COMMENT $0U1S1A1G1E0:$                                               *033 LM00024    
                       PRINT COMMENT $0 0 0 0 0 0R0U0N0O0F0F0 1N1A1M1E0 0-0P0A0                   *034 LM00025    
                1 G0E0 1N0-0 0-0S0T0O0P0-$                                                        *034 LM00026    
                       CHNCOM.(0)                                                                 *035 LM00027    
                  END OF CONDITIONAL                                                              *036 LM00028    
                                                                                                       LM00029    
                  THROUGH GETARG, FOR I = 2, 1, COMARG.(I) .E. FENCE                              *037 LM00030    
                1                               .OR. I .G. 20                                     *037 LM00031    
                       ARG = COMARG.(I)                                                           *038 LM00032    
                                                                                                       LM00033    
                       WHENEVER ARG .E. $  STOP$                                                  *039 LM00034    
                            NOSTOP = 0B                                                           *040 LM00035    
                                                                                                       LM00036    
                       OR WHENEVER ARG .E. $NOWAIT$                                               *041 LM00037    
                            NOWAIT = 1B                                                           *042 LM00038    
                            NOSTOP = 1B                                                           *043 LM00039    
                                                                                                       LM00040    
                       OR WHENEVER ARG .E. $  PAGE$                                               *044 LM00041    
                            ARG = COMARG.(I+1)                                                    *045 LM00042    
                            WHENEVER ARG .E. FENCE, TRANSFER TO BADARG                            *046 LM00043    
                            I = I + 1                                                             *047 LM00044    
                            FSTPAG = BIN.(ARG)                                                    *048 LM00045    
                                                                                                       LM00046    
                       OR WHENEVER ARG .E. $ PRINT$                                               *049 LM00047    
                            OUTFIL = 1B                                                           *050 LM00048    
                            NOWAIT = 1B                                                           *051 LM00049    
                                                                                                       LM00050    
                       OR WHENEVER ARG .E. $  BALL$                                               *052 LM00051    
                            ARG = COMARG.(I+1)                                                    *053 LM00052    
                            WHENEVER ARG .E. FENCE, TRANSFER TO BADARG                            *054 LM00053    
                            I = I + 1                                                             *055 LM00054    
                            CHBALL.(ARG,2,BADARG)                                                 *056 LM00055    
                                                                                                       LM00056    
                       OTHERWISE                                                                  *057 LM00057    
                            TRANSFER TO BADARG                                                    *058 LM00058    
                                                                                                       LM00059    
      GETARG           END OF CONDITIONAL                                                         *059 LM00060    
                                                                                                       LM00061    
                  RUNOFF.                                                                         *060 LM00062    
                  CHNCOM.(0)                                                                      *061 LM00063    
                                                                                                       LM00064    
                  END OF PROGRAM                                                                  *062 LM00065    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00215 TRANSFER VECTOR LENGTH  00011 PROGRAM BEGINS    00030 FIRST UNUSED COMMON/ERASABLE  75207
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ADJST  75311  C2        FENCE  00014 A 1        I      00015   1        PGE    76130  C2        TBTLIN 75274  C1  
      ARG    00013   1        FILL   75312  C2        LENGTH 75307  C1        PGMOD  76124  C1        TBTPAG 75273  C1  
      BADARG 00012   4        FILSW  75302  C2        LINECT 75305  C1        PGPOS  76126  C1        TFTSW  75271  C2  
      BCKSPC 75223  C1        FLAG   75230 AC1        LINE   76701 AC1        PIX    75276  C2        THDPOS 75234  C1  
      BEGIN  75313  C2        FLAGSW 75301  C2        LMARG  75306  C1        PREFIX 76123 AC1        TPAGNO 75233  C1  
      BLANK  75224  C1        FSTPAG 77457 AC1        MROW   75275  C1        PRINAM 77456  C1        TPGE   75270  C2  
      BOTLIN 75304  C1        FTSW   76125  C2        NCHARS 75310  C1        PRLTH  76071  C1        TPGMOD 75232  C1  
      BOTPAG 75231  C1        GETARG 00011   4        NOSTOP 77461 AC2        QUES   75214  C1        TPGPOS 75272  C1  
      CNTR   75303  C2        HDLTH  77454  C1        NOWAIT 77460 AC2        RETURN 75222 AC1        TPRF   75267 AC1  
      COLON  75212  C1        HDPOS  76702  C1        NULL   75210  C1        RMARG  76070  C1        TPRLTH 75235  C1  
      COUNT  76065  C1        HEAD   77453 AC1        OUTFIL 77455 AC2        SIZE   76066  C1        WORD   76064 AC1  
      DBLSPC 75300  C2        HEDPGE 75277  C2        PAGENO 76127  C1        TAB    75216  C1        WRD    76067  C2  
      EXCLAM 75213  C1        HYPHEN 75211  C1        PERIOD 75215  C1                                                  
0FUNCTION DICTIONARY    
      BIN    00000   1        CHBALL 00001   1        CHNCOM 00002   1        COMARG 00003   1        EXIT   00004   1  
      .PCOMT 00005   1        .SETUP 00006   1        RUNOFF 00007   1        SETBRK 00010   1                          
0ABSOLUTE CONSTANTS     
 00025 -206022214343     00024 -204751314563     00026 -206047212725     00023 -054666213163     00027 -206062634647    
 00021 +000000000024     00020 +000000000002     00016 +000000000000     00017 +000000000001     00022 +233000000000    
0STATEMENT DICTIONARY   
 00012 TXL -300045000041                                                                                                
0PROGRAM    
                 NORMAL MODE IS INTEGER                                             001  LM00007
                 INSERT FILE RCOM                                                   002  LM00008
                 NORMAL MODE IS INTEGER                                             003  LM00004
                 PROGRAM COMMON NOSTOP, NOWAIT, FSTPAG, PRINAM, OUTFIL              004  LM00006
                 PROGRAM COMMON HDLTH, HEAD(360), HDPOS                             005  LM00007
                 PROGRAM COMMON LINE(360)                                           006  LM00008
                 PROGRAM COMMON PGE, PAGENO, PGPOS, FTSW, PGMOD                     007  LM00009
                 PROGRAM COMMON PREFIX(25), PRLTH                                   008  LM00010
                 PROGRAM COMMON RMARG                                               009  LM00011
                 PROGRAM COMMON WRD, SIZE, COUNT, WORD(360)                         010  LM00012
                 PROGRAM COMMON BEGIN, FILL, ADJST, NCHARS, LENGTH                  011  LM00013
                 PROGRAM COMMON LMARG, LINECT, BOTLIN, CNTR, FILSW                  012  LM00014
                 PROGRAM COMMON FLAGSW, DBLSPC, HEDPGE, PIX                         013  LM00015
                 PROGRAM COMMON MROW, TBTLIN, TBTPAG                                014  LM00016
                 PROGRAM COMMON TPGPOS, TFTSW, TPGE, TPRF(25)                       015  LM00017
                 PROGRAM COMMON TPRLTH, THDPOS, TPAGNO, TPGMOD                      016  LM00018
                 PROGRAM COMMON BOTPAG, FLAG(3)                                     017  LM00019
                 PROGRAM COMMON BLANK, BCKSPC, RETURN(3)                            018  LM00020
                 PROGRAM COMMON TAB, PERIOD, QUES, EXCLAM                           019  LM00021
                 PROGRAM COMMON COLON, HYPHEN, NULL                                 020  LM00022
                 BOOLEAN NOSTOP, NOWAIT, FTSW, PGE, OUTFIL                          021  LM00024
                 BOOLEAN ADJST                                                      022  LM00025
                 BOOLEAN WRD, FILL, BEGIN, CNTR, FILSW, FLAGSW                      023  LM00026
                 BOOLEAN DBLSPC, HEDPGE, PIX, TPGE, TFTSW                           024  LM00027
                 VECTOR VALUES FENCE = 777777777777K                                025  LM00009
 00030 TSX +0 07400 4 00006    00014     -3 77777 7 77777                                                               
                 VECTOR VALUES NOSTOP = 1B                                          026  LM00013
 77461     +0 00000 0 00001                                                                                             
                 VECTOR VALUES NOWAIT = 0B                                          027  LM00014
 77460     +0 00000 0 00000                                                                                             
                 VECTOR VALUES FSTPAG = 0                                           028  LM00015
 77457     +0 00000 0 00000                                                                                             
                 VECTOR VALUES OUTFIL = 0B                                          029  LM00016
 77455     +0 00000 0 00000                                                                                             
                 SETBRK.(CHNCOM.)                                                   030  LM00021
 00031 TSX +0 07400 4 00010    00032 TXH +3 00000 0 00002                                                               
                 PRINAM = COMARG.(1)                                                031  LM00022
 00033 TSX +0 07400 4 00003    00034 TXH +3 00000 0 00017    00035 STO +0 60100 0 77456                                 
                 WHENEVER PRINAM .E. FENCE                                          032  LM00023
 00036 CLA +0 50000 0 77456    00037 SUB +0 40200 0 00014    00040 TNZ -0 10000 0 00064                                 
      BADARG          PRINT COMMENT $0U1S1A1G1E0:$                                  033  LM00024
 00041 TSX +0 07400 4 00005    00042     +0 00000 0 00002    00043     +0 06401 6 20121    00044     +0 12701 2 50035   
                      PRINT COMMENT $0 0 0 0 0 0R0U0N0O0F0F0 1N1A1M1E0 0-0P0A0      034  LM00025
                1G0E0 1N0-0 0-0S0T0O0P0-$                                           034  LM00026
 00045 TSX +0 07400 4 00005    00046     +0 00000 0 00013    00047     +0 06000 6 00060    00050     +0 06000 6 00051   
 00051     +0 06400 4 50046    00052     +0 02600 2 60060    00053     +0 14501 2 10144    00054     +0 12500 6 00040   
 00055     +0 04700 2 10027    00056     +0 02500 6 00145    00057     +0 04000 6 00040    00060     +0 06200 6 30046   
 00061     +0 04700 4 06060                                                                                             
                      CHNCOM.(0)                                                    035  LM00027
 00062 TSX +0 07400 4 00002    00063 TXH +3 00000 0 00016                                                               
                 END OF CONDITIONAL                                                 036  LM00028
                 THROUGH GETARG, FOR I = 2, 1, COMARG.(I) .E. FENCE                 037  LM00030
                1                              .OR. I .G. 20                        037  LM00031
 00064 CLA +0 50000 0 00020    00065 STO +0 60100 0 00015    00066 TRA +0 02000 0 00072    00067 CLA +0 50000 0 00015   
 00070 ADD +0 40000 0 00017    00071 STO +0 60100 0 00015    00072 CLA +0 50000 0 00015    00073 SUB +0 40200 0 00021   
 00074 TZE +0 10000 0 00076    00075 TPL +0 12000 0 00206    00076 TSX +0 07400 4 00003    00077 TXH +3 00000 0 00015   
 00100 SUB +0 40200 0 00014    00101 TZE +0 10000 0 00206                                                               
                      ARG = COMARG.(I)                                              038  LM00032
 00102 TSX +0 07400 4 00003    00103 TXH +3 00000 0 00015    00104 STO +0 60100 0 00013                                 
                      WHENEVER ARG .E. $  STOP$                                     039  LM00034
 00105 CLA +0 50000 0 00013    00106 SUB +0 40200 0 00027    00107 TNZ -0 10000 0 00113                                 
                           NOSTOP = 0B                                              040  LM00035
 00110 CLA +0 50000 0 00016    00111 STO +0 60100 0 77461                                                               
                      OR WHENEVER ARG .E. $NOWAIT$                                  041  LM00037
 00112 TRA +0 02000 0 00205    00113 CLA +0 50000 0 00013    00114 SUB +0 40200 0 00023    00115 TNZ -0 10000 0 00123   
                           NOWAIT = 1B                                              042  LM00038
 00116 CLA +0 50000 0 00017    00117 STO +0 60100 0 77460                                                               
                           NOSTOP = 1B                                              043  LM00039
 00120 CLA +0 50000 0 00017    00121 STO +0 60100 0 77461                                                               
                      OR WHENEVER ARG .E. $  PAGE$                                  044  LM00041
 00122 TRA +0 02000 0 00205    00123 CLA +0 50000 0 00013    00124 SUB +0 40200 0 00026    00125 TNZ -0 10000 0 00147   
                           ARG = COMARG.(I+1)                                       045  LM00042
 00126 CLA +0 50000 0 00015    00127 ADD +0 40000 0 00017    00130 STO +0 60100 0 00212    00131 TSX +0 07400 4 00003   
 00132 TXH +3 00000 0 00212    00133 STO +0 60100 0 00013                                                               
                           WHENEVER ARG .E. FENCE, TRANSFER TO BADARG               046  LM00043
 00134 CLA +0 50000 0 00013    00135 SUB +0 40200 0 00014    00136 TNZ -0 10000 0 00140    00137 TRA +0 02000 0 00012   
                           I = I + 1                                                047  LM00044
 00140 CLA +0 50000 0 00015    00141 ADD +0 40000 0 00017    00142 STO +0 60100 0 00015                                 
                           FSTPAG = BIN.(ARG)                                       048  LM00045
 00143 TSX +0 07400 4 00000    00144 TXH +3 00000 0 00013    00145 STO +0 60100 0 77457                                 
                      OR WHENEVER ARG .E. $ PRINT$                                  049  LM00047
 00146 TRA +0 02000 0 00205    00147 CLA +0 50000 0 00013    00150 SUB +0 40200 0 00024    00151 TNZ -0 10000 0 00157   
                           OUTFIL = 1B                                              050  LM00048
 00152 CLA +0 50000 0 00017    00153 STO +0 60100 0 77455                                                               
                           NOWAIT = 1B                                              051  LM00049
 00154 CLA +0 50000 0 00017    00155 STO +0 60100 0 77460                                                               
                      OR WHENEVER ARG .E. $  BALL$                                  052  LM00051
 00156 TRA +0 02000 0 00205    00157 CLA +0 50000 0 00013    00160 SUB +0 40200 0 00025    00161 TNZ -0 10000 0 00204   
                           ARG = COMARG.(I+1)                                       053  LM00052
 00162 CLA +0 50000 0 00015    00163 ADD +0 40000 0 00017    00164 STO +0 60100 0 00212    00165 TSX +0 07400 4 00003   
 00166 TXH +3 00000 0 00212    00167 STO +0 60100 0 00013                                                               
                           WHENEVER ARG .E. FENCE, TRANSFER TO BADARG               054  LM00053
 00170 CLA +0 50000 0 00013    00171 SUB +0 40200 0 00014    00172 TNZ -0 10000 0 00174    00173 TRA +0 02000 0 00012   
                           I = I + 1                                                055  LM00054
 00174 CLA +0 50000 0 00015    00175 ADD +0 40000 0 00017    00176 STO +0 60100 0 00015                                 
                           CHBALL.(ARG,2,BADARG)                                    056  LM00055
 00177 TSX +0 07400 4 00001    00200 TXH +3 00000 0 00013    00201 TXH +3 00000 0 00020    00202 TXH +3 00000 0 00012   
                      OTHERWISE                                                     057  LM00057
 00203 TRA +0 02000 0 00205                                                                                             
                           TRANSFER TO BADARG                                       058  LM00058
 00204 TRA +0 02000 0 00012                                                                                             
      GETARG          END OF CONDITIONAL                                            059  LM00060
 00205 TRA +0 02000 0 00067                                                                                             
                 RUNOFF.                                                            060  LM00062
 00206 TSX +0 07400 4 00007                                                                                             
                 CHNCOM.(0)                                                         061  LM00063
 00207 TSX +0 07400 4 00002    00210 TXH +3 00000 0 00016                                                               
                 END OF PROGRAM                                                     062  LM00065
 00211 TSX +0 07400 4 00004                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  RUNOFF   MAD            02/08/68    1243.3
-                 
                  EXTERNAL FUNCTION                                                               *001 LM00001    
                                                                                                       LM00002    
                 ..  RUN OFF AND RIGHT JUSTIFY MEMORANDUM FILE.                                        LM00003    
                                                                                                       LM00004    
                 ..  J. H. SALTZER, NOVEMBER, 1964.                                                    LM00005    
                                                                                                       LM00006    
                 ..  DECLARATIONS.                                                                     LM00007    
                                                                                                       LM00008    
                  INSERT FILE RCOM                                                                *002 LM00009    
                                                                                                  *002 LM00001    
                 ..  RUNOFF COMMON PACKAGE.                                                       *002 LM00002    
                                                                                                  *002 LM00003    
                  NORMAL MODE IS INTEGER                                                          *003 LM00004    
                                                                                                       LM00005    
                  PROGRAM COMMON NOSTOP, NOWAIT, FSTPAG, PRINAM, OUTFIL                           *004 LM00006    
                  PROGRAM COMMON HDLTH, HEAD(360), HDPOS                                          *005 LM00007    
                  PROGRAM COMMON LINE(360)                                                        *006 LM00008    
                  PROGRAM COMMON PGE, PAGENO, PGPOS, FTSW, PGMOD                                  *007 LM00009    
                  PROGRAM COMMON PREFIX(25), PRLTH                                                *008 LM00010    
                  PROGRAM COMMON RMARG                                                            *009 LM00011    
                  PROGRAM COMMON WRD, SIZE, COUNT, WORD(360)                                      *010 LM00012    
                  PROGRAM COMMON BEGIN, FILL, ADJST, NCHARS, LENGTH                               *011 LM00013    
                  PROGRAM COMMON LMARG, LINECT, BOTLIN, CNTR, FILSW                               *012 LM00014    
                  PROGRAM COMMON FLAGSW, DBLSPC, HEDPGE, PIX                                      *013 LM00015    
                  PROGRAM COMMON MROW, TBTLIN, TBTPAG                                             *014 LM00016    
                  PROGRAM COMMON TPGPOS, TFTSW, TPGE, TPRF(25)                                    *015 LM00017    
                  PROGRAM COMMON TPRLTH, THDPOS, TPAGNO, TPGMOD                                   *016 LM00018    
                  PROGRAM COMMON BOTPAG, FLAG(3)                                                  *017 LM00019    
                  PROGRAM COMMON BLANK, BCKSPC, RETURN(3)                                         *018 LM00020    
                  PROGRAM COMMON TAB, PERIOD, QUES, EXCLAM                                        *019 LM00021    
                  PROGRAM COMMON COLON, HYPHEN, NULL                                              *020 LM00022    
                                                                                                       LM00023    
                  BOOLEAN NOSTOP, NOWAIT, FTSW, PGE, OUTFIL                                       *021 LM00024    
                  BOOLEAN ADJST                                                                   *022 LM00025    
                  BOOLEAN WRD, FILL, BEGIN, CNTR, FILSW, FLAGSW                                   *023 LM00026    
                  BOOLEAN DBLSPC, HEDPGE, PIX, TPGE, TFTSW                                        *024 LM00027    
                                                                                                       LM00028    
                 ..  END OF RUNOFF COMMON PACKAGE                                                      LM00029    
                                                                                                       LM00030    
                  BOOLEAN NLINE                                                                   *025 LM00010    
                  NORMAL MODE IS INTEGER                                                          *026 LM00011    
                                                                                                       LM00012    
                 ..  CHARACTERS RECOGNIZED BY RUNOFF.                                                  LM00013    
                                                                                                       LM00014    
                  VECTOR VALUES PERIOD = 0033K                                                    *027 LM00015    
                  VECTOR VALUES QUES = 0156K                                                      *028 LM00016    
                  VECTOR VALUES EXCLAM = 0153K                                                    *029 LM00017    
                  VECTOR VALUES BLANK = 0060K                                                     *030 LM00018    
                  VECTOR VALUES HYPHEN = 0040K                                                    *031 LM00019    
                  VECTOR VALUES COLON = 0035K                                                     *032 LM00020    
                  VECTOR VALUES TAB = 0072K                                                       *033 LM00021    
                  VECTOR VALUES NULL = 0057K                                                      *034 LM00022    
                  VECTOR VALUES BCKSPC = 0135K                                                    *035 LM00023    
                  VECTOR VALUES RETURN = 0055K, 0055K, 0055K                                      *036 LM00024    
                                                                                                       LM00025    
                 ..  DEFAULT PARAMETER VALUES.                                                         LM00026    
                                                                                                       LM00027    
                  VECTOR VALUES TPRF(1) = $00000P00000A00000G00000E00000 $                        *037 LM00028    
                  VECTOR VALUES HDLTH = 0                                                         *038 LM00029    
                  VECTOR VALUES THDPOS = $PPOSED$                                                 *039 LM00030    
                  VECTOR VALUES TPGPOS = $MARGIN$                                                 *040 LM00031    
                  VECTOR VALUES TFTSW = 0B                                                        *041 LM00032    
                  VECTOR VALUES TPRLTH = 5                                                        *042 LM00033    
                  VECTOR VALUES TPGE = 0B                                                         *043 LM00034    
                  VECTOR VALUES TPAGNO = 2                                                        *044 LM00035    
                  VECTOR VALUES TPGMOD = $ARABIC$                                                 *045 LM00036    
                  VECTOR VALUES FLAG(1) = $00000 00000 00000*$                                    *046 LM00037    
                  VECTOR VALUES RMARG = 60                                                        *047 LM00038    
                  VECTOR VALUES LMARG = 0                                                         *048 LM00039    
                  VECTOR VALUES TBTLIN = 60                                                       *049 LM00040    
                  VECTOR VALUES TBTPAG = 66                                                       *050 LM00041    
                  VECTOR VALUES ADJST = 1B                                                        *051 LM00042    
                  VECTOR VALUES FILL = 1B                                                         *052 LM00043    
                                                                                                       LM00044    
                 ..  INITIAL VALUES OF INTERNAL VARIABLES.                                             LM00045    
                                                                                                       LM00046    
                  VECTOR VALUES PIX = 0B                                                          *053 LM00047    
                  VECTOR VALUES FLAGSW = 0B                                                       *054 LM00048    
                  VECTOR VALUES LIT = 0B                                                          *055 LM00049    
                                                                                                       LM00050    
                  ENTRY TO RUNOFF.                                                                *056 LM00051    
                                                                                                       LM00052    
                  SETUP.                                                                          *057 LM00053    
                  SEEK.(PRINAM, $(MEMO)$ , EOF)                                                   *058 LM00054    
                  WHENEVER .NOT.NOWAIT                                                            *059 LM00055    
                  PRINT COMMENT $0L1O1A1D0 1P1A1P1E1R0,0 1H1I1T0 1R1E1T1U1R1N$                    *060 LM00056    
                  WAIT.                                                                           *061 LM00057    
                  END OF CONDITIONAL                                                              *062 LM00058    
                                                                                                       LM00059    
                 .. GET NEXT CHARACTER, BUILD UP WORD                                                  LM00060    
                                                                                                       LM00061    
      GTNXT       CHAR = NXCHAR.(NLINE, EOF)                                                      *063 LM00062    
                                                                                                       LM00063    
                  WHENEVER NLINE                                                                  *064 LM00064    
                                                                                                       LM00065    
                 .. DISCOVER NATURE OF NEXT INPUT LINE.                                                LM00066    
                                                                                                       LM00067    
      RENEW         WHENEVER LIT                                                                  *065 LM00068    
                      LIT = 0B                                                                    *066 LM00069    
                    OR WHENEVER CHAR .E. PERIOD                                                   *067 LM00070    
                      TRANSFER TO CONTRL                                                          *068 LM00071    
                    END OF CONDITIONAL                                                            *069 LM00072    
                    SETCHR.(RETURN)                                                               *070 LM00073    
                  END OF CONDITIONAL                                                              *071 LM00074    
                                                                                                       LM00075    
      PROCED      SETCHR.(CHAR)                                                                   *072 LM00076    
                  TRANSFER TO GTNXT                                                               *073 LM00077    
                                                                                                       LM00078    
                 .. CONTROL WORD SECTION.                                                              LM00079    
                                                                                                       LM00080    
       CONTRL     CWD = GET.(0)                                                                   *074 LM00081    
                                                                                                       LM00082    
                  WHENEVER CWD .E. $   END$                                                       *075 LM00083    
       EOF          SETWRD.                                                                       *076 LM00084    
                    SETLIN.                                                                       *077 LM00085    
                    SETPAG.                                                                       *078 LM00086    
                    SETDWN.                                                                       *079 LM00087    
                    CHNCOM.(0)                                                                    *080 LM00088    
                                                                                                       LM00089    
                  OR WHENEVER CWD .E. $   CWD$                                                    *081 LM00090    
                    TRANSFER TO CONTRL                                                            *082 LM00091    
                                                                                                       LM00092    
                  OR WHENEVER CWD .E. $APPEND$ .OR. CWD .E. $    AP$                              *083 LM00093    
                    ENDRD.(PRINAM, $(MEMO)$)                                                      *084 LM00094    
                    PRINAM = GET.(0)                                                              *085 LM00095    
                    SEEK.(PRINAM, $(MEMO)$, EOF)                                                  *086 LM00096    
                    TRANSFER TO GTNXT                                                             *087 LM00097    
                                                                                                       LM00098    
                  OR WHENEVER CWD .E. $ SPACE$ .OR. CWD .E. $    SP$                              *088 LM00099    
                    TEM = NUM.(0)                                                                 *089 LM00100    
                    WHENEVER TEM .E. 0, TEM = 1                                                   *090 LM00101    
                    SETWRD.                                                                       *091 LM00102    
                    SETLIN.                                                                       *092 LM00103    
                    WHENEVER TEM + LINECT .L. BOTLIN                                              *093 LM00104    
                      THROUGH SPCLP, FOR I = 1, 1, I .G. TEM                                      *094 LM00105    
        SPCLP           PACK.(RETURN, 1)                                                          *095 LM00106    
                      LINECT = LINECT + TEM                                                       *096 LM00107    
                      BRKLIN.                                                                     *097 LM00108    
                    OTHERWISE                                                                     *098 LM00109    
                      SETPAG.                                                                     *099 LM00110    
                    END OF CONDITIONAL                                                            *100 LM00111    
                                                                                                       LM00112    
                  OR WHENEVER CWD .E. $ BREAK$ .OR. CWD .E. $    BR$                              *101 LM00113    
                    BRKLIN.                                                                       *102 LM00114    
                                                                                                       LM00115    
                  OR WHENEVER CWD .E. $CENTER$ .OR. CWD .E. $    CE$                              *103 LM00116    
                    BRKLIN.                                                                       *104 LM00117    
                    BEGIN = 1B                                                                    *105 LM00118    
                    CNTR = 1B                                                                     *106 LM00119    
                    FILSW = FILL                                                                  *107 LM00120    
                    FILL = 0B                                                                     *108 LM00121    
                                                                                                       LM00122    
                  OR WHENEVER CWD .E. $ITERAL$ .OR. CWD .E. $    LI$                              *109 LM00123    
                    LIT = 1B                                                                      *110 LM00124    
                                                                                                       LM00125    
                  OR WHENEVER CWD .E. $  FLAG$ .OR. CWD .E. $    FL$                              *111 LM00126    
                    FLAGSW = 1B                                                                   *112 LM00127    
                                                                                                       LM00128    
                  OR WHENEVER CWD .E. $  LINE$                                                    *113 LM00129    
                    CWD = GET.(0)                                                                 *114 LM00130    
                    RMARG = NUM.(0)                                                               *115 LM00131    
                  OR WHENEVER CWD .E. $    LL$                                                    *116 LM00132    
                    RMARG = NUM.(0)                                                               *117 LM00133    
                                                                                                       LM00134    
                  OR WHENEVER CWD .E. $INDENT$ .OR. CWD .E. $    IN$                              *118 LM00135    
                    LMARG = NUM.(0)                                                               *119 LM00136    
                                                                                                       LM00137    
                  OR WHENEVER CWD .E. $UNDENT$ .OR. CWD .E. $    UN$                              *120 LM00138    
                    BRKLIN.                                                                       *121 LM00139    
                    NS = LMARG - NUM.(0)                                                          *122 LM00140    
                    WHENEVER NS .L. 0, NS = 0                                                     *123 LM00141    
                    LINE(1) = NULL                                                                *124 LM00142    
                    THROUGH UNDLP, FOR LENGTH = 1, 1, LENGTH .GE. NS+1                            *125 LM00143    
       UNDLP          LINE(LENGTH+1) = BLANK                                                      *126 LM00144    
                    NCHARS = NS                                                                   *127 LM00145    
                                                                                                       LM00146    
                                                                                                       LM00147    
                  OR WHENEVER CWD .E. $NOJUST$ .OR. CWD .E. $    NJ$                              *128 LM00148    
                    BRKLIN.                                                                       *129 LM00149    
                    ADJST = 0B                                                                    *130 LM00150    
                                                                                                       LM00151    
                  OR WHENEVER CWD .E. $ADJUST$ .OR. CWD .E. $    AD$                              *131 LM00152    
                    BRKLIN.                                                                       *132 LM00153    
                    ADJST = 1B                                                                    *133 LM00154    
                                                                                                       LM00155    
                  OR WHENEVER CWD .E. $  FILL$ .OR. CWD .E. $    FI$                              *134 LM00156    
                    BRKLIN.                                                                       *135 LM00157    
                    FILL = 1B                                                                     *136 LM00158    
                                                                                                       LM00159    
                  OR WHENEVER CWD .E. $NOFILL$ .OR. CWD .E. $    NF$                              *137 LM00160    
                    BRKLIN.                                                                       *138 LM00161    
                    FILL = 0B                                                                     *139 LM00162    
                                                                                                       LM00163    
                  OR WHENEVER CWD .E. $SINGLE$ .OR. CWD .E. $    SS$                              *140 LM00164    
                    BRKLIN.                                                                       *141 LM00165    
                    DBLSPC = 0B                                                                   *142 LM00166    
                                                                                                       LM00167    
                  OR WHENEVER CWD .E. $DOUBLE$ .OR. CWD .E. $    DS$                              *143 LM00168    
                    BRKLIN.                                                                       *144 LM00169    
                    DBLSPC = 1B                                                                   *145 LM00170    
                                                                                                       LM00171    
                  OR WHENEVER CWD .E. $ PAPER$                                                    *146 LM00172    
                    CWD = GET.(0)                                                                 *147 LM00173    
                    WHENEVER CWD .E. $LENGTH$                                                     *148 LM00174    
      PL              TBTPAG = NUM.(0)                                                            *149 LM00175    
                      TBTLIN = TBTPAG - 6                                                         *150 LM00176    
                    END OF CONDITIONAL                                                            *151 LM00177    
                                                                                                       LM00178    
                  OR WHENEVER CWD .E. $ SHORT$ .OR. CWD .E. $    SH$                              *152 LM00179    
                    BOTLIN = BOTLIN - NUM.(0)                                                     *153 LM00180    
                                                                                                       LM00181    
                  OR WHENEVER CWD .E. $    PL$                                                    *154 LM00182    
                    TRANSFER TO PL                                                                *155 LM00183    
                                                                                                       LM00184    
                  OR WHENEVER CWD .E. $EADING$                                                    *156 LM00185    
                    CWD = GET.(0)                                                                 *157 LM00186    
                    TRANSFER TO HM                                                                *158 LM00187    
                                                                                                       LM00188    
                  OR WHENEVER CWD .E. $    HM$                                                    *159 LM00189    
      HM            THDPOS = GET.(0)                                                              *160 LM00190    
                                                                                                       LM00191    
                  OR WHENEVER CWD .E. $PAGING$                                                    *161 LM00192    
                    CWD = GET.(0)                                                                 *162 LM00193    
                    TRANSFER TO PM                                                                *163 LM00194    
                                                                                                       LM00195    
                  OR WHENEVER CWD .E. $    PM$                                                    *164 LM00196    
      PM            TPGE = 1B                                                                     *165 LM00197    
                    CWD = GET.(0)                                                                 *166 LM00198    
                    WHENEVER CWD .E. $ $                                                          *167 LM00199    
                      TRANSFER TO DONEP                                                           *168 LM00200    
                    OR WHENEVER CWD .E. $MARGIN$                                                  *169 LM00201    
                      TPGPOS = CWD                                                                *170 LM00202    
                    OR WHENEVER CWD .E. $FACING$                                                  *171 LM00203    
                      TPGPOS = CWD                                                                *172 LM00204    
                    OR WHENEVER CWD .E. $CENTER$                                                  *173 LM00205    
                      TPGPOS = CWD                                                                *174 LM00206    
                    OR WHENEVER CWD .E. $   TOP$                                                  *175 LM00207    
                      TFTSW = 0B                                                                  *176 LM00208    
                    OR WHENEVER CWD .E. $BOTTOM$                                                  *177 LM00209    
                      TFTSW = 1B                                                                  *178 LM00210    
                    OR WHENEVER CWD .E. $   OFF$                                                  *179 LM00211    
                      TPGE = 0B                                                                   *180 LM00212    
                    OR WHENEVER CWD .E. $ARABIC$                                                  *181 LM00213    
                      TPGMOD = CWD                                                                *182 LM00214    
                    OR WHENEVER CWD .E. $ROMANU$                                                  *183 LM00215    
                      TPGMOD = CWD                                                                *184 LM00216    
                    OR WHENEVER CWD .E. $ROMANL$                                                  *185 LM00217    
                      TPGMOD = CWD                                                                *186 LM00218    
                    OR WHENEVER CWD .E. $  SKIP$                                                  *187 LM00219    
                      TPAGNO = TPAGNO + NUM.(0)                                                   *188 LM00220    
                    OR WHENEVER CWD .E. $   SET$                                                  *189 LM00221    
                      TPAGNO = NUM.(0)                                                            *190 LM00222    
                    OR WHENEVER CWD .E. $PREFIX$                                                  *191 LM00223    
                      QUOTE = NXCHAR.(NLINE, EOF)                                                 *192 LM00224    
                      THROUGH PRFLP, FOR I = 1, 1, NLINE                                          *193 LM00225    
                        TPRF(I) = NXCHAR. (NLINE, EOF)                                            *194 LM00226    
      PRFLP             WHENEVER TPRF(I) .E. QUOTE, TRANSFER TO PRFSTP                            *195 LM00227    
                      TRANSFER TO RENEW                                                           *196 LM00228    
                                                                                                       LM00229    
      PRFSTP          TPRLTH = I-1                                                                *197 LM00230    
                    END OF CONDITIONAL                                                            *198 LM00231    
                    TRANSFER TO PM                                                                *199 LM00232    
      DONEP         CONTINUE                                                                      *200 LM00233    
                                                                                                       LM00234    
                  OR WHENEVER CWD .E. $  PAGE$ .OR. CWD .E. $    PA$                              *201 LM00235    
                    TPGE = 1B                                                                     *202 LM00236    
                    TEM = NUM.(0)                                                                 *203 LM00237    
                    WHENEVER TEM .NE. 0                                                           *204 LM00238    
                      SETWRD.                                                                     *205 LM00239    
                      SETLIN.                                                                     *206 LM00240    
                      TPAGNO = TEM                                                                *207 LM00241    
                      SETPAG.                                                                     *208 LM00242    
                    END OF CONDITIONAL                                                            *209 LM00243    
                                                                                                       LM00244    
                  OR WHENEVER CWD .E. $   ODD$ .OR. CWD .E. $    OP$                              *210 LM00245    
                    SETWRD.                                                                       *211 LM00246    
                    SETLIN.                                                                       *212 LM00247    
                    TPAGNO = (TPAGNO/2)*2 + 1                                                     *213 LM00248    
                    SETPAG.                                                                       *214 LM00249    
                                                                                                       LM00250    
                  OR WHENEVER CWD .E. $ BEGIN$ .OR. CWD .E. $    BP$                              *215 LM00251    
                    SETWRD.                                                                       *216 LM00252    
                    SETLIN.                                                                       *217 LM00253    
                    SETPAG.                                                                       *218 LM00254    
                                                                                                       LM00255    
                  OR WHENEVER CWD .E. $HEADER$ .OR. CWD .E. $    HE$                              *219 LM00256    
                    NLINE = 0B                                                                    *220 LM00257    
                    THROUGH HDLP, FOR I = 1, 1, NLINE                                             *221 LM00258    
        HDLP          HEAD(I) = NXCHAR.(NLINE, EOF)                                               *222 LM00259    
                    CHAR = HEAD(I-1)                                                              *223 LM00260    
                    HDLTH = I - 2                                                                 *224 LM00261    
                    TRANSFER TO RENEW                                                             *225 LM00262    
                                                                                                       LM00263    
                  OR WHENEVER CWD .E. $FIGURE$                                                    *226 LM00264    
                    MROW = FRAME.(0)                                                              *227 LM00265    
                    WHENEVER LINECT + MROW .LE. BOTLIN                                            *228 LM00266    
                      PRPIX.                                                                      *229 LM00267    
                      LINECT = LINECT + MROW                                                      *230 LM00268    
                      PIX = 0B                                                                    *231 LM00269    
                    OTHERWISE                                                                     *232 LM00270    
                      PIX = 1B                                                                    *233 LM00271    
                    END OF CONDITIONAL                                                            *234 LM00272    
                                                                                                       LM00273    
                  OR WHENEVER CWD .E. $DEFINE$                                                    *235 LM00274    
                    SYMSTO.(GET.(0), PAGENO)                                                      *236 LM00275    
                                                                                                       LM00276    
                  OR WHENEVER CWD .E. $   USE$                                                    *237 LM00277    
                    SETWRD.                                                                       *238 LM00278    
                    SIZE = NUMCON.(SYMGET.(GET.(0),0,$ARABIC$),WORD(1))+1                         *239 LM00279    
                    COUNT = SIZE                                                                  *240 LM00280    
                    WORD(1) = BLANK                                                               *241 LM00281    
                    WRD = 1B                                                                      *242 LM00282    
                    TRANSFER TO GTNXT                                                             *243 LM00283    
                                                                                                       LM00284    
                                                                                                       LM00285    
                  END OF CONDITIONAL                                                              *244 LM00286    
                                                                                                       LM00287    
                  NLINE = 0B                                                                      *245 LM00288    
                  THROUGH SKPLP, FOR I = 0, 0, NLINE                                              *246 LM00289    
       SKPLP        CHAR = NXCHAR.(NLINE, EOF)                                                    *247 LM00290    
                  WHENEVER CNTR, TRANSFER TO PROCED                                               *248 LM00291    
                  TRANSFER TO RENEW                                                               *249 LM00292    
                                                                                                       LM00293    
                  END OF FUNCTION                                                                 *250 LM00294    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01340 TRANSFER VECTOR LENGTH  00026 PROGRAM BEGINS    00157 FIRST UNUSED COMMON/ERASABLE  75207
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      RUNOFF 00160   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ADJST  75311 AC2        FILSW  75302  C2        LINE   76701 AC1        PIX    75276 AC2        SPCLP  00026   4  
      BCKSPC 75223 AC1        FLAG   75230 AC1        LIT    00044 A 2        PL     00034   4        TAB    75216 AC1  
      BEGIN  75313  C2        FLAGSW 75301 AC2        LMARG  75306 AC1        PM     00035   4        TBTLIN 75274 AC1  
      BLANK  75224 AC1        FSTPAG 77457  C1        MROW   75275  C1        PREFIX 76123 AC1        TBTPAG 75273 AC1  
      BOTLIN 75304  C1        FTSW   76125  C2        NCHARS 75310  C1        PRFLP  00026   4        TEM    00050   1  
      BOTPAG 75231  C1        GTNXT  00032   4        NLINE  00045   2        PRFSTP 00036   4        TFTSW  75271 AC2  
      CHAR   00041   1        HDLP   00026   4        NOSTOP 77461  C2        PRINAM 77456  C1        THDPOS 75234 AC1  
      CNTR   75303  C2        HDLTH  77454 AC1        NOWAIT 77460  C2        PRLTH  76071  C1        TPAGNO 75233 AC1  
      COLON  75212 AC1        HDPOS  76702  C1        NS     00046   1        PROCED 00037   4        TPGE   75270 AC2  
      CONTRL 00027   4        HEAD   77453 AC1        NULL   75210 AC1        QUES   75214 AC1        TPGMOD 75232 AC1  
      COUNT  76065  C1        HEDPGE 75277  C2        OUTFIL 77455  C2        QUOTE  00047   1        TPGPOS 75272 AC1  
      CWD    00042   1        HM     00033   4        PAGENO 76127  C1        RENEW  00040   4        TPRF   75267 AC1  
      DBLSPC 75300  C2        HYPHEN 75211 AC1        PERIOD 75215 AC1        RETURN 75222 AC1        TPRLTH 75235 AC1  
      DONEP  00030   4        I      00043   1        PGE    76130  C2        RMARG  76070 AC1        UNDLP  00026   4  
      EOF    00031   4        LENGTH 75307  C1        PGMOD  76124  C1        SIZE   76066  C1        WORD   76064 AC1  
      EXCLAM 75213 AC1        LINECT 75305  C1        PGPOS  76126  C1        SKPLP  00026   4        WRD    76067  C2  
      FILL   75312 AC2                                                                                                  
0FUNCTION DICTIONARY    
      BRKLIN 00000   1        CHNCOM 00001   1        ENDRD  00002   1        EXIT   00003   1        FRAME  00004   1  
      GET    00005   1        .PCOMT 00006   1        NUMCON 00007   1        NUM    00010   1        NXCHAR 00011   1  
      PACK   00012   1        PRPIX  00013   1        SEEK   00014   1        SETCHR 00015   1        SETDWN 00016   1  
      SETLIN 00017   1        SETPAG 00020   1        SETUP  00021   1        SETWRD 00022   1        SYMGET 00023   1  
      SYMSTO 00024   1        WAIT   00025   1                                                                          
0ABSOLUTE CONSTANTS     
 00150 -206060646225     00063 +242526314525     00067 +263127645125     00070 +302521242551     00126 -206060603025    
 00103 -202225273145     00120 -206060602247     00053 +000000000002     00114 -206060462424     00135 -206060604647    
 00111 -206047212725     00136 -206060604721     00100 -075125263167     00146 -206060622563     00151 -206062423147    
 00101 -114644214543     00102 -114644214564     00057 +215121223123     00115 -206060462626     00060 +224663634644    
 00147 -206060634647     00066 +262123314527     00074 -042151273145     00141 -206060606060     00140 -206060604744    
 00077 -072127314527     00127 -206060603044     00065 +252124314527     00137 -206060604743     00152 -206230465163    
 00142 -206060606230     00054 +000000000006     00073 -032545276330     00105 -204721472551     00064 +244664224325    
 00123 -206060602462     00154 -223145274325     00144 -206060606262     00075 -054626314343     00133 -206060604526    
 00106 -206026314343     00124 -206060602631     00055 +212441646263     00116 -206060602124     00076 -054641646263    
 00134 -206060604541     00155 -244524254563     00145 -206060606445     00071 +314524254563     00130 -206060603145    
 00132 -206060604343     00110 -206043314525     00107 -206026432127     00125 -206060602643     00072 +316325512143    
 00131 -206060604331     00061 +232545632551     00122 -206060602325     00104 -202251252142     00121 -206060602251    
 00153 -206247212325     00143 -206060606247     00056 +214747254524     00117 -206060602147     00112 -206060236624    
 00113 -206060254524     00051 +000000000000     00156 -344425444634     00052 +000000000001     00062 +233000000000    
0STATEMENT DICTIONARY   
 00027 TXL -300233000230       00030 TXL -301071001071       00031 TXL -300237000236       00032 TXL -300210000204      
 00033 TXL -300677000674       00034 TXL -300634000631       00035 TXL -300715000713       00036 TXL -301070001065      
 00037 TXL -300227000225       00040 TXL -300214000212                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION                                                  001  LM00001
                 INSERT FILE RCOM                                                   002  LM00009
                 NORMAL MODE IS INTEGER                                             003  LM00004
                 PROGRAM COMMON NOSTOP, NOWAIT, FSTPAG, PRINAM, OUTFIL              004  LM00006
                 PROGRAM COMMON HDLTH, HEAD(360), HDPOS                             005  LM00007
                 PROGRAM COMMON LINE(360)                                           006  LM00008
                 PROGRAM COMMON PGE, PAGENO, PGPOS, FTSW, PGMOD                     007  LM00009
                 PROGRAM COMMON PREFIX(25), PRLTH                                   008  LM00010
                 PROGRAM COMMON RMARG                                               009  LM00011
                 PROGRAM COMMON WRD, SIZE, COUNT, WORD(360)                         010  LM00012
                 PROGRAM COMMON BEGIN, FILL, ADJST, NCHARS, LENGTH                  011  LM00013
                 PROGRAM COMMON LMARG, LINECT, BOTLIN, CNTR, FILSW                  012  LM00014
                 PROGRAM COMMON FLAGSW, DBLSPC, HEDPGE, PIX                         013  LM00015
                 PROGRAM COMMON MROW, TBTLIN, TBTPAG                                014  LM00016
                 PROGRAM COMMON TPGPOS, TFTSW, TPGE, TPRF(25)                       015  LM00017
                 PROGRAM COMMON TPRLTH, THDPOS, TPAGNO, TPGMOD                      016  LM00018
                 PROGRAM COMMON BOTPAG, FLAG(3)                                     017  LM00019
                 PROGRAM COMMON BLANK, BCKSPC, RETURN(3)                            018  LM00020
                 PROGRAM COMMON TAB, PERIOD, QUES, EXCLAM                           019  LM00021
                 PROGRAM COMMON COLON, HYPHEN, NULL                                 020  LM00022
                 BOOLEAN NOSTOP, NOWAIT, FTSW, PGE, OUTFIL                          021  LM00024
                 BOOLEAN ADJST                                                      022  LM00025
                 BOOLEAN WRD, FILL, BEGIN, CNTR, FILSW, FLAGSW                      023  LM00026
                 BOOLEAN DBLSPC, HEDPGE, PIX, TPGE, TFTSW                           024  LM00027
                 BOOLEAN NLINE                                                      025  LM00010
                 NORMAL MODE IS INTEGER                                             026  LM00011
                 VECTOR VALUES PERIOD = 0033K                                       027  LM00015
 75215     +0 00000 0 00033                                                                                             
                 VECTOR VALUES QUES = 0156K                                         028  LM00016
 75214     +0 00000 0 00156                                                                                             
                 VECTOR VALUES EXCLAM = 0153K                                       029  LM00017
 75213     +0 00000 0 00153                                                                                             
                 VECTOR VALUES BLANK = 0060K                                        030  LM00018
 75224     +0 00000 0 00060                                                                                             
                 VECTOR VALUES HYPHEN = 0040K                                       031  LM00019
 75211     +0 00000 0 00040                                                                                             
                 VECTOR VALUES COLON = 0035K                                        032  LM00020
 75212     +0 00000 0 00035                                                                                             
                 VECTOR VALUES TAB = 0072K                                          033  LM00021
 75216     +0 00000 0 00072                                                                                             
                 VECTOR VALUES NULL = 0057K                                         034  LM00022
 75210     +0 00000 0 00057                                                                                             
                 VECTOR VALUES BCKSPC = 0135K                                       035  LM00023
 75223     +0 00000 0 00135                                                                                             
                 VECTOR VALUES RETURN = 0055K, 0055K, 0055K                         036  LM00024
 75220     +0 00000 0 00055    75221     +0 00000 0 00055    75222     +0 00000 0 00055                                 
                 VECTOR VALUES TPRF(1) = $00000P00000A00000G00000E00000 $           037  LM00028
 75262     +0 00000 0 00060    75263     +0 00000 0 00025    75264     +0 00000 0 00027    75265     +0 00000 0 00021   
 75266     +0 00000 0 00047                                                                                             
                 VECTOR VALUES HDLTH = 0                                            038  LM00029
 77454     +0 00000 0 00000                                                                                             
                 VECTOR VALUES THDPOS = $PPOSED$                                    039  LM00030
 75234     -0 74746 6 22524                                                                                             
                 VECTOR VALUES TPGPOS = $MARGIN$                                    040  LM00031
 75272     -0 42151 2 73145                                                                                             
                 VECTOR VALUES TFTSW = 0B                                           041  LM00032
 75271     +0 00000 0 00000                                                                                             
                 VECTOR VALUES TPRLTH = 5                                           042  LM00033
 75235     +0 00000 0 00005                                                                                             
                 VECTOR VALUES TPGE = 0B                                            043  LM00034
 75270     +0 00000 0 00000                                                                                             
                 VECTOR VALUES TPAGNO = 2                                           044  LM00035
 75233     +0 00000 0 00002                                                                                             
                 VECTOR VALUES TPGMOD = $ARABIC$                                    045  LM00036
 75232     +2 15121 2 23123                                                                                             
                 VECTOR VALUES FLAG(1) = $00000 00000 00000*$                       046  LM00037
 75225     +0 00000 0 00054    75226     +0 00000 0 00060    75227     +0 00000 0 00060                                 
                 VECTOR VALUES RMARG = 60                                           047  LM00038
 76070     +0 00000 0 00074                                                                                             
                 VECTOR VALUES LMARG = 0                                            048  LM00039
 75306     +0 00000 0 00000                                                                                             
                 VECTOR VALUES TBTLIN = 60                                          049  LM00040
 75274     +0 00000 0 00074                                                                                             
                 VECTOR VALUES TBTPAG = 66                                          050  LM00041
 75273     +0 00000 0 00102                                                                                             
                 VECTOR VALUES ADJST = 1B                                           051  LM00042
 75311     +0 00000 0 00001                                                                                             
                 VECTOR VALUES FILL = 1B                                            052  LM00043
 75312     +0 00000 0 00001                                                                                             
                 VECTOR VALUES PIX = 0B                                             053  LM00047
 75276     +0 00000 0 00000                                                                                             
                 VECTOR VALUES FLAGSW = 0B                                          054  LM00048
 75301     +0 00000 0 00000                                                                                             
                 VECTOR VALUES LIT = 0B                                             055  LM00049
 00044     +0 00000 0 00000                                                                                             
                 ENTRY TO RUNOFF.                                                   056  LM00051
 00157 TRA +0 02000 0 00162    00160 SXA +0 63400 2 01325    00161 TSX +0 07400 2 01325                                 
                 SETUP.                                                             057  LM00053
 00162 TSX +0 07400 4 00021                                                                                             
                 SEEK.(PRINAM, $(MEMO)$ , EOF)                                      058  LM00054
 00163 TSX +0 07400 4 00014    00164 TXH +3 00000 0 77456    00165 TXH +3 00000 0 00156    00166 TXH +3 00000 0 00031   
                 WHENEVER .NOT.NOWAIT                                               059  LM00055
 00167 ZET +0 52000 0 77460    00170 TRA +0 02000 0 00204                                                               
                 PRINT COMMENT $0L1O1A1D0 1P1A1P1E1R0,0 1H1I1T0 1R1E1T1U1R1N$       060  LM00056
 00171 TSX +0 07400 4 00006    00172     +0 00000 0 00010    00173     +0 04301 4 60121    00174     +0 12400 6 00147   
 00175     +0 12101 4 70125    00176     +0 15100 7 30060    00177     +0 13001 3 10163    00200     +0 06001 5 10125   
 00201     +0 16301 6 40151    00202     +0 14560 6 06060                                                               
                 WAIT.                                                              061  LM00057
 00203 TSX +0 07400 4 00025                                                                                             
                 END OF CONDITIONAL                                                 062  LM00058
      GTNXT      CHAR = NXCHAR.(NLINE, EOF)                                         063  LM00062
 00204 TSX +0 07400 4 00011    00205 TXH +3 00000 0 00045    00206 TXH +3 00000 0 00031    00207 STO +0 60100 0 00041   
                 WHENEVER NLINE                                                     064  LM00064
 00210 NZT -0 52000 0 00045    00211 TRA +0 02000 0 00225                                                               
      RENEW        WHENEVER LIT                                                     065  LM00068
 00212 NZT -0 52000 0 00044    00213 TRA +0 02000 0 00217                                                               
                     LIT = 0B                                                       066  LM00069
 00214 CLA +0 50000 0 00051    00215 STO +0 60100 0 00044                                                               
                   OR WHENEVER CHAR .E. PERIOD                                      067  LM00070
 00216 TRA +0 02000 0 00223    00217 CLA +0 50000 0 00041    00220 SUB +0 40200 0 75215    00221 TNZ -0 10000 0 00223   
                     TRANSFER TO CONTRL                                             068  LM00071
 00222 TRA +0 02000 0 00027                                                                                             
                   END OF CONDITIONAL                                               069  LM00072
                   SETCHR.(RETURN)                                                  070  LM00073
 00223 TSX +0 07400 4 00015    00224 TXH +3 00000 0 75222                                                               
                 END OF CONDITIONAL                                                 071  LM00074
      PROCED     SETCHR.(CHAR)                                                      072  LM00076
 00225 TSX +0 07400 4 00015    00226 TXH +3 00000 0 00041                                                               
                 TRANSFER TO GTNXT                                                  073  LM00077
 00227 TRA +0 02000 0 00032                                                                                             
       CONTRL    CWD = GET.(0)                                                      074  LM00081
 00230 TSX +0 07400 4 00005    00231 TXH +3 00000 0 00051    00232 STO +0 60100 0 00042                                 
                 WHENEVER CWD .E. $   END$                                          075  LM00083
 00233 CLA +0 50000 0 00042    00234 SUB +0 40200 0 00113    00235 TNZ -0 10000 0 00245                                 
       EOF         SETWRD.                                                          076  LM00084
 00236 TSX +0 07400 4 00022                                                                                             
                   SETLIN.                                                          077  LM00085
 00237 TSX +0 07400 4 00017                                                                                             
                   SETPAG.                                                          078  LM00086
 00240 TSX +0 07400 4 00020                                                                                             
                   SETDWN.                                                          079  LM00087
 00241 TSX +0 07400 4 00016                                                                                             
                   CHNCOM.(0)                                                       080  LM00088
 00242 TSX +0 07400 4 00001    00243 TXH +3 00000 0 00051                                                               
                 OR WHENEVER CWD .E. $   CWD$                                       081  LM00090
 00244 TRA +0 02000 0 01301    00245 CLA +0 50000 0 00042    00246 SUB +0 40200 0 00112    00247 TNZ -0 10000 0 00252   
                   TRANSFER TO CONTRL                                               082  LM00091
 00250 TRA +0 02000 0 00027                                                                                             
                 OR WHENEVER CWD .E. $APPEND$ .OR. CWD .E. $    AP$                 083  LM00093
 00251 TRA +0 02000 0 01301    00252 CLA +0 50000 0 00042    00253 SUB +0 40200 0 00117    00254 TZE +0 10000 0 00260   
 00255 CLA +0 50000 0 00042    00256 SUB +0 40200 0 00056    00257 TNZ -0 10000 0 00274                                 
                   ENDRD.(PRINAM, $(MEMO)$)                                         084  LM00094
 00260 TSX +0 07400 4 00002    00261 TXH +3 00000 0 77456    00262 TXH +3 00000 0 00156                                 
                   PRINAM = GET.(0)                                                 085  LM00095
 00263 TSX +0 07400 4 00005    00264 TXH +3 00000 0 00051    00265 STO +0 60100 0 77456                                 
                   SEEK.(PRINAM, $(MEMO)$, EOF)                                     086  LM00096
 00266 TSX +0 07400 4 00014    00267 TXH +3 00000 0 77456    00270 TXH +3 00000 0 00156    00271 TXH +3 00000 0 00031   
                   TRANSFER TO GTNXT                                                087  LM00097
 00272 TRA +0 02000 0 00032                                                                                             
                 OR WHENEVER CWD .E. $ SPACE$ .OR. CWD .E. $    SP$                 088  LM00099
 00273 TRA +0 02000 0 01301    00274 CLA +0 50000 0 00042    00275 SUB +0 40200 0 00143    00276 TZE +0 10000 0 00302   
 00277 CLA +0 50000 0 00042    00300 SUB +0 40200 0 00153    00301 TNZ -0 10000 0 00346                                 
                   TEM = NUM.(0)                                                    089  LM00100
 00302 TSX +0 07400 4 00010    00303 TXH +3 00000 0 00051    00304 STO +0 60100 0 00050                                 
                   WHENEVER TEM .E. 0, TEM = 1                                      090  LM00101
 00305 CLA +0 50000 0 00050    00306 SUB +0 40200 0 00051    00307 TNZ -0 10000 0 00312    00310 CLA +0 50000 0 00052   
 00311 STO +0 60100 0 00050                                                                                             
                   SETWRD.                                                          091  LM00102
 00312 TSX +0 07400 4 00022                                                                                             
                   SETLIN.                                                          092  LM00103
 00313 TSX +0 07400 4 00017                                                                                             
                   WHENEVER TEM + LINECT .L. BOTLIN                                 093  LM00104
 00314 CLA +0 50000 0 00050    00315 ADD +0 40000 0 75305    00316 SUB +0 40200 0 75304    00317 TZE +0 10000 0 00344   
 00320 TPL +0 12000 0 00344                                                                                             
                     THROUGH SPCLP, FOR I = 1, 1, I .G. TEM                         094  LM00105
 00321 CLA +0 50000 0 00052    00322 STO +0 60100 0 00043    00323 TRA +0 02000 0 00327    00324 CLA +0 50000 0 00043   
 00325 ADD +0 40000 0 00052    00326 STO +0 60100 0 00043    00327 CLA +0 50000 0 00043    00330 SUB +0 40200 0 00050   
 00331 TZE +0 10000 0 00333    00332 TPL +0 12000 0 00337                                                               
        SPCLP          PACK.(RETURN, 1)                                             095  LM00106
 00333 TSX +0 07400 4 00012    00334 TXH +3 00000 0 75222    00335 TXH +3 00000 0 00052    00336 TRA +0 02000 0 00324   
                     LINECT = LINECT + TEM                                          096  LM00107
 00337 CLA +0 50000 0 75305    00340 ADD +0 40000 0 00050    00341 STO +0 60100 0 75305                                 
                     BRKLIN.                                                        097  LM00108
 00342 TSX +0 07400 4 00000                                                                                             
                   OTHERWISE                                                        098  LM00109
 00343 TRA +0 02000 0 00345                                                                                             
                     SETPAG.                                                        099  LM00110
 00344 TSX +0 07400 4 00020                                                                                             
                   END OF CONDITIONAL                                               100  LM00111
                 OR WHENEVER CWD .E. $ BREAK$ .OR. CWD .E. $    BR$                 101  LM00113
 00345 TRA +0 02000 0 01301    00346 CLA +0 50000 0 00042    00347 SUB +0 40200 0 00121    00350 TZE +0 10000 0 00354   
 00351 CLA +0 50000 0 00042    00352 SUB +0 40200 0 00104    00353 TNZ -0 10000 0 00356                                 
                   BRKLIN.                                                          102  LM00114
 00354 TSX +0 07400 4 00000                                                                                             
                 OR WHENEVER CWD .E. $CENTER$ .OR. CWD .E. $    CE$                 103  LM00116
 00355 TRA +0 02000 0 01301    00356 CLA +0 50000 0 00042    00357 SUB +0 40200 0 00122    00360 TZE +0 10000 0 00364   
 00361 CLA +0 50000 0 00042    00362 SUB +0 40200 0 00061    00363 TNZ -0 10000 0 00376                                 
                   BRKLIN.                                                          104  LM00117
 00364 TSX +0 07400 4 00000                                                                                             
                   BEGIN = 1B                                                       105  LM00118
 00365 CLA +0 50000 0 00052    00366 STO +0 60100 0 75313                                                               
                   CNTR = 1B                                                        106  LM00119
 00367 CLA +0 50000 0 00052    00370 STO +0 60100 0 75303                                                               
                   FILSW = FILL                                                     107  LM00120
 00371 CLA +0 50000 0 75312    00372 STO +0 60100 0 75302                                                               
                   FILL = 0B                                                        108  LM00121
 00373 CLA +0 50000 0 00051    00374 STO +0 60100 0 75312                                                               
                 OR WHENEVER CWD .E. $ITERAL$ .OR. CWD .E. $    LI$                 109  LM00123
 00375 TRA +0 02000 0 01301    00376 CLA +0 50000 0 00042    00377 SUB +0 40200 0 00131    00400 TZE +0 10000 0 00404   
 00401 CLA +0 50000 0 00042    00402 SUB +0 40200 0 00072    00403 TNZ -0 10000 0 00407                                 
                   LIT = 1B                                                         110  LM00124
 00404 CLA +0 50000 0 00052    00405 STO +0 60100 0 00044                                                               
                 OR WHENEVER CWD .E. $  FLAG$ .OR. CWD .E. $    FL$                 111  LM00126
 00406 TRA +0 02000 0 01301    00407 CLA +0 50000 0 00042    00410 SUB +0 40200 0 00125    00411 TZE +0 10000 0 00415   
 00412 CLA +0 50000 0 00042    00413 SUB +0 40200 0 00107    00414 TNZ -0 10000 0 00420                                 
                   FLAGSW = 1B                                                      112  LM00127
 00415 CLA +0 50000 0 00052    00416 STO +0 60100 0 75301                                                               
                 OR WHENEVER CWD .E. $  LINE$                                       113  LM00129
 00417 TRA +0 02000 0 01301    00420 CLA +0 50000 0 00042    00421 SUB +0 40200 0 00110    00422 TNZ -0 10000 0 00432   
                   CWD = GET.(0)                                                    114  LM00130
 00423 TSX +0 07400 4 00005    00424 TXH +3 00000 0 00051    00425 STO +0 60100 0 00042                                 
                   RMARG = NUM.(0)                                                  115  LM00131
 00426 TSX +0 07400 4 00010    00427 TXH +3 00000 0 00051    00430 STO +0 60100 0 76070                                 
                 OR WHENEVER CWD .E. $    LL$                                       116  LM00132
 00431 TRA +0 02000 0 01301    00432 CLA +0 50000 0 00042    00433 SUB +0 40200 0 00132    00434 TNZ -0 10000 0 00441   
                   RMARG = NUM.(0)                                                  117  LM00133
 00435 TSX +0 07400 4 00010    00436 TXH +3 00000 0 00051    00437 STO +0 60100 0 76070                                 
                 OR WHENEVER CWD .E. $INDENT$ .OR. CWD .E. $    IN$                 118  LM00135
 00440 TRA +0 02000 0 01301    00441 CLA +0 50000 0 00042    00442 SUB +0 40200 0 00130    00443 TZE +0 10000 0 00447   
 00444 CLA +0 50000 0 00042    00445 SUB +0 40200 0 00071    00446 TNZ -0 10000 0 00453                                 
                   LMARG = NUM.(0)                                                  119  LM00136
 00447 TSX +0 07400 4 00010    00450 TXH +3 00000 0 00051    00451 STO +0 60100 0 75306                                 
                 OR WHENEVER CWD .E. $UNDENT$ .OR. CWD .E. $    UN$                 120  LM00138
 00452 TRA +0 02000 0 01301    00453 CLA +0 50000 0 00042    00454 SUB +0 40200 0 00145    00455 TZE +0 10000 0 00461   
 00456 CLA +0 50000 0 00042    00457 SUB +0 40200 0 00155    00460 TNZ -0 10000 0 00524                                 
                   BRKLIN.                                                          121  LM00139
 00461 TSX +0 07400 4 00000                                                                                             
                   NS = LMARG - NUM.(0)                                             122  LM00140
 00462 TSX +0 07400 4 00010    00463 TXH +3 00000 0 00051    00464 CHS +0 76000 0 00002    00465 ADD +0 40000 0 75306   
 00466 STO +0 60100 0 00046                                                                                             
                   WHENEVER NS .L. 0, NS = 0                                        123  LM00141
 00467 CLA +0 50000 0 00046    00470 SUB +0 40200 0 00051    00471 TZE +0 10000 0 00475    00472 TPL +0 12000 0 00475   
 00473 CLA +0 50000 0 00051    00474 STO +0 60100 0 00046                                                               
                   LINE(1) = NULL                                                   124  LM00142
 00475 CLA +0 50000 0 75210    00476 STO +0 60100 0 76700                                                               
                   THROUGH UNDLP, FOR LENGTH = 1, 1, LENGTH .GE. NS+1               125  LM00143
 00477 CLA +0 50000 0 00052    00500 STO +0 60100 0 75307    00501 TRA +0 02000 0 00505    00502 CLA +0 50000 0 75307   
 00503 ADD +0 40000 0 00052    00504 STO +0 60100 0 75307    00505 CLA +0 50000 0 00046    00506 ADD +0 40000 0 00052   
 00507 CHS +0 76000 0 00002    00510 ADD +0 40000 0 75307    00511 TZE +0 10000 0 00521    00512 TPL +0 12000 0 00521   
       UNDLP         LINE(LENGTH+1) = BLANK                                         126  LM00144
 00513 CLA +0 50000 0 75307    00514 ADD +0 40000 0 00052    00515 PAX +0 73400 1 00000    00516 CLA +0 50000 0 75224   
 00517 STO +0 60100 1 76701    00520 TRA +0 02000 0 00502                                                               
                   NCHARS = NS                                                      127  LM00145
 00521 CLA +0 50000 0 00046    00522 STO +0 60100 0 75310                                                               
                 OR WHENEVER CWD .E. $NOJUST$ .OR. CWD .E. $    NJ$                 128  LM00148
 00523 TRA +0 02000 0 01301    00524 CLA +0 50000 0 00042    00525 SUB +0 40200 0 00134    00526 TZE +0 10000 0 00532   
 00527 CLA +0 50000 0 00042    00530 SUB +0 40200 0 00076    00531 TNZ -0 10000 0 00536                                 
                   BRKLIN.                                                          129  LM00149
 00532 TSX +0 07400 4 00000                                                                                             
                   ADJST = 0B                                                       130  LM00150
 00533 CLA +0 50000 0 00051    00534 STO +0 60100 0 75311                                                               
                 OR WHENEVER CWD .E. $ADJUST$ .OR. CWD .E. $    AD$                 131  LM00152
 00535 TRA +0 02000 0 01301    00536 CLA +0 50000 0 00042    00537 SUB +0 40200 0 00116    00540 TZE +0 10000 0 00544   
 00541 CLA +0 50000 0 00042    00542 SUB +0 40200 0 00055    00543 TNZ -0 10000 0 00550                                 
                   BRKLIN.                                                          132  LM00153
 00544 TSX +0 07400 4 00000                                                                                             
                   ADJST = 1B                                                       133  LM00154
 00545 CLA +0 50000 0 00052    00546 STO +0 60100 0 75311                                                               
                 OR WHENEVER CWD .E. $  FILL$ .OR. CWD .E. $    FI$                 134  LM00156
 00547 TRA +0 02000 0 01301    00550 CLA +0 50000 0 00042    00551 SUB +0 40200 0 00124    00552 TZE +0 10000 0 00556   
 00553 CLA +0 50000 0 00042    00554 SUB +0 40200 0 00106    00555 TNZ -0 10000 0 00562                                 
                   BRKLIN.                                                          135  LM00157
 00556 TSX +0 07400 4 00000                                                                                             
                   FILL = 1B                                                        136  LM00158
 00557 CLA +0 50000 0 00052    00560 STO +0 60100 0 75312                                                               
                 OR WHENEVER CWD .E. $NOFILL$ .OR. CWD .E. $    NF$                 137  LM00160
 00561 TRA +0 02000 0 01301    00562 CLA +0 50000 0 00042    00563 SUB +0 40200 0 00133    00564 TZE +0 10000 0 00570   
 00565 CLA +0 50000 0 00042    00566 SUB +0 40200 0 00075    00567 TNZ -0 10000 0 00574                                 
                   BRKLIN.                                                          138  LM00161
 00570 TSX +0 07400 4 00000                                                                                             
                   FILL = 0B                                                        139  LM00162
 00571 CLA +0 50000 0 00051    00572 STO +0 60100 0 75312                                                               
                 OR WHENEVER CWD .E. $SINGLE$ .OR. CWD .E. $    SS$                 140  LM00164
 00573 TRA +0 02000 0 01301    00574 CLA +0 50000 0 00042    00575 SUB +0 40200 0 00144    00576 TZE +0 10000 0 00602   
 00577 CLA +0 50000 0 00042    00600 SUB +0 40200 0 00154    00601 TNZ -0 10000 0 00606                                 
                   BRKLIN.                                                          141  LM00165
 00602 TSX +0 07400 4 00000                                                                                             
                   DBLSPC = 0B                                                      142  LM00166
 00603 CLA +0 50000 0 00051    00604 STO +0 60100 0 75300                                                               
                 OR WHENEVER CWD .E. $DOUBLE$ .OR. CWD .E. $    DS$                 143  LM00168
 00605 TRA +0 02000 0 01301    00606 CLA +0 50000 0 00042    00607 SUB +0 40200 0 00123    00610 TZE +0 10000 0 00614   
 00611 CLA +0 50000 0 00042    00612 SUB +0 40200 0 00064    00613 TNZ -0 10000 0 00620                                 
                   BRKLIN.                                                          144  LM00169
 00614 TSX +0 07400 4 00000                                                                                             
                   DBLSPC = 1B                                                      145  LM00170
 00615 CLA +0 50000 0 00052    00616 STO +0 60100 0 75300                                                               
                 OR WHENEVER CWD .E. $ PAPER$                                       146  LM00172
 00617 TRA +0 02000 0 01301    00620 CLA +0 50000 0 00042    00621 SUB +0 40200 0 00105    00622 TNZ -0 10000 0 00640   
                   CWD = GET.(0)                                                    147  LM00173
 00623 TSX +0 07400 4 00005    00624 TXH +3 00000 0 00051    00625 STO +0 60100 0 00042                                 
                   WHENEVER CWD .E. $LENGTH$                                        148  LM00174
 00626 CLA +0 50000 0 00042    00627 SUB +0 40200 0 00073    00630 TNZ -0 10000 0 00637                                 
      PL             TBTPAG = NUM.(0)                                               149  LM00175
 00631 TSX +0 07400 4 00010    00632 TXH +3 00000 0 00051    00633 STO +0 60100 0 75273                                 
                     TBTLIN = TBTPAG - 6                                            150  LM00176
 00634 CLA +0 50000 0 75273    00635 SUB +0 40200 0 00054    00636 STO +0 60100 0 75274                                 
                   END OF CONDITIONAL                                               151  LM00177
                 OR WHENEVER CWD .E. $ SHORT$ .OR. CWD .E. $    SH$                 152  LM00179
 00637 TRA +0 02000 0 01301    00640 CLA +0 50000 0 00042    00641 SUB +0 40200 0 00142    00642 TZE +0 10000 0 00646   
 00643 CLA +0 50000 0 00042    00644 SUB +0 40200 0 00152    00645 TNZ -0 10000 0 00654                                 
                   BOTLIN = BOTLIN - NUM.(0)                                        153  LM00180
 00646 TSX +0 07400 4 00010    00647 TXH +3 00000 0 00051    00650 CHS +0 76000 0 00002    00651 ADD +0 40000 0 75304   
 00652 STO +0 60100 0 75304                                                                                             
                 OR WHENEVER CWD .E. $    PL$                                       154  LM00182
 00653 TRA +0 02000 0 01301    00654 CLA +0 50000 0 00042    00655 SUB +0 40200 0 00137    00656 TNZ -0 10000 0 00661   
                   TRANSFER TO PL                                                   155  LM00183
 00657 TRA +0 02000 0 00034                                                                                             
                 OR WHENEVER CWD .E. $EADING$                                       156  LM00185
 00660 TRA +0 02000 0 01301    00661 CLA +0 50000 0 00042    00662 SUB +0 40200 0 00065    00663 TNZ -0 10000 0 00671   
                   CWD = GET.(0)                                                    157  LM00186
 00664 TSX +0 07400 4 00005    00665 TXH +3 00000 0 00051    00666 STO +0 60100 0 00042                                 
                   TRANSFER TO HM                                                   158  LM00187
 00667 TRA +0 02000 0 00033                                                                                             
                 OR WHENEVER CWD .E. $    HM$                                       159  LM00189
 00670 TRA +0 02000 0 01301    00671 CLA +0 50000 0 00042    00672 SUB +0 40200 0 00127    00673 TNZ -0 10000 0 00700   
      HM           THDPOS = GET.(0)                                                 160  LM00190
 00674 TSX +0 07400 4 00005    00675 TXH +3 00000 0 00051    00676 STO +0 60100 0 75234                                 
                 OR WHENEVER CWD .E. $PAGING$                                       161  LM00192
 00677 TRA +0 02000 0 01301    00700 CLA +0 50000 0 00042    00701 SUB +0 40200 0 00077    00702 TNZ -0 10000 0 00710   
                   CWD = GET.(0)                                                    162  LM00193
 00703 TSX +0 07400 4 00005    00704 TXH +3 00000 0 00051    00705 STO +0 60100 0 00042                                 
                   TRANSFER TO PM                                                   163  LM00194
 00706 TRA +0 02000 0 00035                                                                                             
                 OR WHENEVER CWD .E. $    PM$                                       164  LM00196
 00707 TRA +0 02000 0 01301    00710 CLA +0 50000 0 00042    00711 SUB +0 40200 0 00140    00712 TNZ -0 10000 0 01072   
      PM           TPGE = 1B                                                        165  LM00197
 00713 CLA +0 50000 0 00052    00714 STO +0 60100 0 75270                                                               
                   CWD = GET.(0)                                                    166  LM00198
 00715 TSX +0 07400 4 00005    00716 TXH +3 00000 0 00051    00717 STO +0 60100 0 00042                                 
                   WHENEVER CWD .E. $ $                                             167  LM00199
 00720 CLA +0 50000 0 00042    00721 SUB +0 40200 0 00141    00722 TNZ -0 10000 0 00725                                 
                     TRANSFER TO DONEP                                              168  LM00200
 00723 TRA +0 02000 0 00030                                                                                             
                   OR WHENEVER CWD .E. $MARGIN$                                     169  LM00201
 00724 TRA +0 02000 0 01070    00725 CLA +0 50000 0 00042    00726 SUB +0 40200 0 00074    00727 TNZ -0 10000 0 00733   
                     TPGPOS = CWD                                                   170  LM00202
 00730 CLA +0 50000 0 00042    00731 STO +0 60100 0 75272                                                               
                   OR WHENEVER CWD .E. $FACING$                                     171  LM00203
 00732 TRA +0 02000 0 01070    00733 CLA +0 50000 0 00042    00734 SUB +0 40200 0 00066    00735 TNZ -0 10000 0 00741   
                     TPGPOS = CWD                                                   172  LM00204
 00736 CLA +0 50000 0 00042    00737 STO +0 60100 0 75272                                                               
                   OR WHENEVER CWD .E. $CENTER$                                     173  LM00205
 00740 TRA +0 02000 0 01070    00741 CLA +0 50000 0 00042    00742 SUB +0 40200 0 00061    00743 TNZ -0 10000 0 00747   
                     TPGPOS = CWD                                                   174  LM00206
 00744 CLA +0 50000 0 00042    00745 STO +0 60100 0 75272                                                               
                   OR WHENEVER CWD .E. $   TOP$                                     175  LM00207
 00746 TRA +0 02000 0 01070    00747 CLA +0 50000 0 00042    00750 SUB +0 40200 0 00147    00751 TNZ -0 10000 0 00755   
                     TFTSW = 0B                                                     176  LM00208
 00752 CLA +0 50000 0 00051    00753 STO +0 60100 0 75271                                                               
                   OR WHENEVER CWD .E. $BOTTOM$                                     177  LM00209
 00754 TRA +0 02000 0 01070    00755 CLA +0 50000 0 00042    00756 SUB +0 40200 0 00060    00757 TNZ -0 10000 0 00763   
                     TFTSW = 1B                                                     178  LM00210
 00760 CLA +0 50000 0 00052    00761 STO +0 60100 0 75271                                                               
                   OR WHENEVER CWD .E. $   OFF$                                     179  LM00211
 00762 TRA +0 02000 0 01070    00763 CLA +0 50000 0 00042    00764 SUB +0 40200 0 00115    00765 TNZ -0 10000 0 00771   
                     TPGE = 0B                                                      180  LM00212
 00766 CLA +0 50000 0 00051    00767 STO +0 60100 0 75270                                                               
                   OR WHENEVER CWD .E. $ARABIC$                                     181  LM00213
 00770 TRA +0 02000 0 01070    00771 CLA +0 50000 0 00042    00772 SUB +0 40200 0 00057    00773 TNZ -0 10000 0 00777   
                     TPGMOD = CWD                                                   182  LM00214
 00774 CLA +0 50000 0 00042    00775 STO +0 60100 0 75232                                                               
                   OR WHENEVER CWD .E. $ROMANU$                                     183  LM00215
 00776 TRA +0 02000 0 01070    00777 CLA +0 50000 0 00042    01000 SUB +0 40200 0 00102    01001 TNZ -0 10000 0 01005   
                     TPGMOD = CWD                                                   184  LM00216
 01002 CLA +0 50000 0 00042    01003 STO +0 60100 0 75232                                                               
                   OR WHENEVER CWD .E. $ROMANL$                                     185  LM00217
 01004 TRA +0 02000 0 01070    01005 CLA +0 50000 0 00042    01006 SUB +0 40200 0 00101    01007 TNZ -0 10000 0 01013   
                     TPGMOD = CWD                                                   186  LM00218
 01010 CLA +0 50000 0 00042    01011 STO +0 60100 0 75232                                                               
                   OR WHENEVER CWD .E. $  SKIP$                                     187  LM00219
 01012 TRA +0 02000 0 01070    01013 CLA +0 50000 0 00042    01014 SUB +0 40200 0 00151    01015 TNZ -0 10000 0 01023   
                     TPAGNO = TPAGNO + NUM.(0)                                      188  LM00220
 01016 TSX +0 07400 4 00010    01017 TXH +3 00000 0 00051    01020 ADD +0 40000 0 75233    01021 STO +0 60100 0 75233   
                   OR WHENEVER CWD .E. $   SET$                                     189  LM00221
 01022 TRA +0 02000 0 01070    01023 CLA +0 50000 0 00042    01024 SUB +0 40200 0 00146    01025 TNZ -0 10000 0 01032   
                     TPAGNO = NUM.(0)                                               190  LM00222
 01026 TSX +0 07400 4 00010    01027 TXH +3 00000 0 00051    01030 STO +0 60100 0 75233                                 
                   OR WHENEVER CWD .E. $PREFIX$                                     191  LM00223
 01031 TRA +0 02000 0 01070    01032 CLA +0 50000 0 00042    01033 SUB +0 40200 0 00100    01034 TNZ -0 10000 0 01070   
                     QUOTE = NXCHAR.(NLINE, EOF)                                    192  LM00224
 01035 TSX +0 07400 4 00011    01036 TXH +3 00000 0 00045    01037 TXH +3 00000 0 00031    01040 STO +0 60100 0 00047   
                     THROUGH PRFLP, FOR I = 1, 1, NLINE                             193  LM00225
 01041 CLA +0 50000 0 00052    01042 STO +0 60100 0 00043    01043 TRA +0 02000 0 01047    01044 CLA +0 50000 0 00043   
 01045 ADD +0 40000 0 00052    01046 STO +0 60100 0 00043    01047 ZET +0 52000 0 00045    01050 TRA +0 02000 0 01064   
                       TPRF(I) = NXCHAR. (NLINE, EOF)                               194  LM00226
 01051 TSX +0 07400 4 00011    01052 TXH +3 00000 0 00045    01053 TXH +3 00000 0 00031    01054 LXA +0 53400 1 00043   
 01055 STO +0 60100 1 75267                                                                                             
      PRFLP            WHENEVER TPRF(I) .E. QUOTE, TRANSFER TO PRFSTP               195  LM00227
 01056 LXA +0 53400 1 00043    01057 CLA +0 50000 1 75267    01060 SUB +0 40200 0 00047    01061 TNZ -0 10000 0 01063   
 01062 TRA +0 02000 0 00036    01063 TRA +0 02000 0 01044                                                               
                     TRANSFER TO RENEW                                              196  LM00228
 01064 TRA +0 02000 0 00040                                                                                             
      PRFSTP         TPRLTH = I-1                                                   197  LM00230
 01065 CLA +0 50000 0 00043    01066 SUB +0 40200 0 00052    01067 STO +0 60100 0 75235                                 
                   END OF CONDITIONAL                                               198  LM00231
                   TRANSFER TO PM                                                   199  LM00232
 01070 TRA +0 02000 0 00035                                                                                             
      DONEP        CONTINUE                                                         200  LM00233
                 OR WHENEVER CWD .E. $  PAGE$ .OR. CWD .E. $    PA$                 201  LM00235
 01071 TRA +0 02000 0 01301    01072 CLA +0 50000 0 00042    01073 SUB +0 40200 0 00136    01074 TZE +0 10000 0 01100   
 01075 CLA +0 50000 0 00042    01076 SUB +0 40200 0 00111    01077 TNZ -0 10000 0 01116                                 
                   TPGE = 1B                                                        202  LM00236
 01100 CLA +0 50000 0 00052    01101 STO +0 60100 0 75270                                                               
                   TEM = NUM.(0)                                                    203  LM00237
 01102 TSX +0 07400 4 00010    01103 TXH +3 00000 0 00051    01104 STO +0 60100 0 00050                                 
                   WHENEVER TEM .NE. 0                                              204  LM00238
 01105 CLA +0 50000 0 00050    01106 SUB +0 40200 0 00051    01107 TZE +0 10000 0 01115                                 
                     SETWRD.                                                        205  LM00239
 01110 TSX +0 07400 4 00022                                                                                             
                     SETLIN.                                                        206  LM00240
 01111 TSX +0 07400 4 00017                                                                                             
                     TPAGNO = TEM                                                   207  LM00241
 01112 CLA +0 50000 0 00050    01113 STO +0 60100 0 75233                                                               
                     SETPAG.                                                        208  LM00242
 01114 TSX +0 07400 4 00020                                                                                             
                   END OF CONDITIONAL                                               209  LM00243
                 OR WHENEVER CWD .E. $   ODD$ .OR. CWD .E. $    OP$                 210  LM00245
 01115 TRA +0 02000 0 01301    01116 CLA +0 50000 0 00042    01117 SUB +0 40200 0 00135    01120 TZE +0 10000 0 01124   
 01121 CLA +0 50000 0 00042    01122 SUB +0 40200 0 00114    01123 TNZ -0 10000 0 01140                                 
                   SETWRD.                                                          211  LM00246
 01124 TSX +0 07400 4 00022                                                                                             
                   SETLIN.                                                          212  LM00247
 01125 TSX +0 07400 4 00017                                                                                             
                   TPAGNO = (TPAGNO/2)*2 + 1                                        213  LM00248
 01126 LDQ +0 56000 0 75233    01127 PXD -0 75400 0 00000    01130 LLS +0 76300 0 00000    01131 DVP +0 22100 0 00053   
 01132 MPY +0 20000 0 00053    01133 XCA +0 13100 0 00000    01134 ADD +0 40000 0 00052    01135 STO +0 60100 0 75233   
                   SETPAG.                                                          214  LM00249
 01136 TSX +0 07400 4 00020                                                                                             
                 OR WHENEVER CWD .E. $ BEGIN$ .OR. CWD .E. $    BP$                 215  LM00251
 01137 TRA +0 02000 0 01301    01140 CLA +0 50000 0 00042    01141 SUB +0 40200 0 00120    01142 TZE +0 10000 0 01146   
 01143 CLA +0 50000 0 00042    01144 SUB +0 40200 0 00103    01145 TNZ -0 10000 0 01152                                 
                   SETWRD.                                                          216  LM00252
 01146 TSX +0 07400 4 00022                                                                                             
                   SETLIN.                                                          217  LM00253
 01147 TSX +0 07400 4 00017                                                                                             
                   SETPAG.                                                          218  LM00254
 01150 TSX +0 07400 4 00020                                                                                             
                 OR WHENEVER CWD .E. $HEADER$ .OR. CWD .E. $    HE$                 219  LM00256
 01151 TRA +0 02000 0 01301    01152 CLA +0 50000 0 00042    01153 SUB +0 40200 0 00126    01154 TZE +0 10000 0 01160   
 01155 CLA +0 50000 0 00042    01156 SUB +0 40200 0 00070    01157 TNZ -0 10000 0 01212                                 
                   NLINE = 0B                                                       220  LM00257
 01160 CLA +0 50000 0 00051    01161 STO +0 60100 0 00045                                                               
                   THROUGH HDLP, FOR I = 1, 1, NLINE                                221  LM00258
 01162 CLA +0 50000 0 00052    01163 STO +0 60100 0 00043    01164 TRA +0 02000 0 01170    01165 CLA +0 50000 0 00043   
 01166 ADD +0 40000 0 00052    01167 STO +0 60100 0 00043    01170 ZET +0 52000 0 00045    01171 TRA +0 02000 0 01200   
        HDLP         HEAD(I) = NXCHAR.(NLINE, EOF)                                  222  LM00259
 01172 TSX +0 07400 4 00011    01173 TXH +3 00000 0 00045    01174 TXH +3 00000 0 00031    01175 LXA +0 53400 1 00043   
 01176 STO +0 60100 1 77453    01177 TRA +0 02000 0 01165                                                               
                   CHAR = HEAD(I-1)                                                 223  LM00260
 01200 CLA +0 50000 0 00043    01201 SUB +0 40200 0 00052    01202 PAX +0 73400 2 00000    01203 CLA +0 50000 2 77453   
 01204 STO +0 60100 0 00041                                                                                             
                   HDLTH = I - 2                                                    224  LM00261
 01205 CLA +0 50000 0 00043    01206 SUB +0 40200 0 00053    01207 STO +0 60100 0 77454                                 
                   TRANSFER TO RENEW                                                225  LM00262
 01210 TRA +0 02000 0 00040                                                                                             
                 OR WHENEVER CWD .E. $FIGURE$                                       226  LM00264
 01211 TRA +0 02000 0 01301    01212 CLA +0 50000 0 00042    01213 SUB +0 40200 0 00067    01214 TNZ -0 10000 0 01237   
                   MROW = FRAME.(0)                                                 227  LM00265
 01215 TSX +0 07400 4 00004    01216 TXH +3 00000 0 00051    01217 STO +0 60100 0 75275                                 
                   WHENEVER LINECT + MROW .LE. BOTLIN                               228  LM00266
 01220 CLA +0 50000 0 75305    01221 ADD +0 40000 0 75275    01222 SUB +0 40200 0 75304    01223 TZE +0 10000 0 01225   
 01224 TPL +0 12000 0 01234                                                                                             
                     PRPIX.                                                         229  LM00267
 01225 TSX +0 07400 4 00013                                                                                             
                     LINECT = LINECT + MROW                                         230  LM00268
 01226 CLA +0 50000 0 75305    01227 ADD +0 40000 0 75275    01230 STO +0 60100 0 75305                                 
                     PIX = 0B                                                       231  LM00269
 01231 CLA +0 50000 0 00051    01232 STO +0 60100 0 75276                                                               
                   OTHERWISE                                                        232  LM00270
 01233 TRA +0 02000 0 01236                                                                                             
                     PIX = 1B                                                       233  LM00271
 01234 CLA +0 50000 0 00052    01235 STO +0 60100 0 75276                                                               
                   END OF CONDITIONAL                                               234  LM00272
                 OR WHENEVER CWD .E. $DEFINE$                                       235  LM00274
 01236 TRA +0 02000 0 01301    01237 CLA +0 50000 0 00042    01240 SUB +0 40200 0 00063    01241 TNZ -0 10000 0 01251   
                   SYMSTO.(GET.(0), PAGENO)                                         236  LM00275
 01242 TSX +0 07400 4 00005    01243 TXH +3 00000 0 00051    01244 STO +0 60100 0 01335    01245 TSX +0 07400 4 00024   
 01246 TXH +3 00000 0 01335    01247 TXH +3 00000 0 76127                                                               
                 OR WHENEVER CWD .E. $   USE$                                       237  LM00277
 01250 TRA +0 02000 0 01301    01251 CLA +0 50000 0 00042    01252 SUB +0 40200 0 00150    01253 TNZ -0 10000 0 01301   
                   SETWRD.                                                          238  LM00278
 01254 TSX +0 07400 4 00022                                                                                             
                   SIZE = NUMCON.(SYMGET.(GET.(0),0,$ARABIC$),WORD(1))+1            239  LM00279
 01255 TSX +0 07400 4 00005    01256 TXH +3 00000 0 00051    01257 STO +0 60100 0 01335    01260 TSX +0 07400 4 00023   
 01261 TXH +3 00000 0 01335    01262 TXH +3 00000 0 00051    01263 TXH +3 00000 0 00057    01264 STO +0 60100 0 01335   
 01265 TSX +0 07400 4 00007    01266 TXH +3 00000 0 01335    01267 TXH +3 00000 0 76063    01270 ADD +0 40000 0 00052   
 01271 STO +0 60100 0 76066                                                                                             
                   COUNT = SIZE                                                     240  LM00280
 01272 CLA +0 50000 0 76066    01273 STO +0 60100 0 76065                                                               
                   WORD(1) = BLANK                                                  241  LM00281
 01274 CLA +0 50000 0 75224    01275 STO +0 60100 0 76063                                                               
                   WRD = 1B                                                         242  LM00282
 01276 CLA +0 50000 0 00052    01277 STO +0 60100 0 76067                                                               
                   TRANSFER TO GTNXT                                                243  LM00283
 01300 TRA +0 02000 0 00032                                                                                             
                 END OF CONDITIONAL                                                 244  LM00286
                 NLINE = 0B                                                         245  LM00288
 01301 CLA +0 50000 0 00051    01302 STO +0 60100 0 00045                                                               
                 THROUGH SKPLP, FOR I = 0, 0, NLINE                                 246  LM00289
 01303 CLA +0 50000 0 00051    01304 STO +0 60100 0 00043    01305 TRA +0 02000 0 01311    01306 CLA +0 50000 0 00043   
 01307 ADD +0 40000 0 00051    01310 STO +0 60100 0 00043    01311 ZET +0 52000 0 00045    01312 TRA +0 02000 0 01320   
       SKPLP       CHAR = NXCHAR.(NLINE, EOF)                                       247  LM00290
 01313 TSX +0 07400 4 00011    01314 TXH +3 00000 0 00045    01315 TXH +3 00000 0 00031    01316 STO +0 60100 0 00041   
 01317 TRA +0 02000 0 01306                                                                                             
                 WHENEVER CNTR, TRANSFER TO PROCED                                  248  LM00291
 01320 NZT -0 52000 0 75303    01321 TRA +0 02000 0 01323    01322 TRA +0 02000 0 00037                                 
                 TRANSFER TO RENEW                                                  249  LM00292
 01323 TRA +0 02000 0 00040                                                                                             
                 END OF FUNCTION                                                    250  LM00294
 01324 TSX +0 07400 4 00003    01325 TXH +3 00000 0 00000    01326 SXD -0 63400 1 01325    01327 SXA +0 63400 4 01331   
 01330 TRA +0 02000 2 00001    01331 AXT +0 77400 4 00000    01332 LXA +0 53400 2 01325    01333 LXD -0 53400 1 01325   
 01334 TRA +0 02000 4 00001                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  NXCHAR   MAD            02/08/68    1243.8
-                 
                 .. SUBROUTINE TO GET NEXT CHARACTER FROM INPUT STREAM.                                LM00001    
                    IF NEW LINE ENCOUNTERED, SETS NLINE TO 1B.                                         LM00002    
                    IF EOF ENCOUNTERED, TRANSFERS TO EOF                                               LM00003    
                                                                                                       LM00004    
                 .. USES .A., .V., .LS. OPERATORS.                                                     LM00005    
                    TRANSLATE APPROPRIATELY.                                                           LM00006    
                                                                                                       LM00007    
                 ..  J. H. SALTZER, NOVEMBER, 1964                                                     LM00008    
                                                                                                       LM00009    
                  EXTERNAL FUNCTION (NLINE, EOF)                                                  *001 LM00010    
                                                                                                       LM00011    
                  VECTOR VALUES BLANK = 0060K                                                     *002 LM00012    
                  VECTOR VALUES NULL = 0057K                                                      *003 LM00013    
                  VECTOR VALUES RETURN = 0055K                                                    *004 LM00014    
                  NORMAL MODE IS INTEGER                                                          *005 LM00015    
                  STATEMENT LABEL EOF                                                             *006 LM00016    
                  BOOLEAN NLINE                                                                   *007 LM00017    
                  DIMENSION LINE(360)                                                             *008 LM00018    
                                                                                                       LM00019    
                  ENTRY TO NXCHAR.                                                                *009 LM00020    
                  NLINE = 0B                                                                      *010 LM00021    
      PUSH        COUNT = COUNT + 1                                                               *011 LM00022    
                  WHENEVER COUNT .G. LENGTH, TRANSFER TO RENEW                                    *012 LM00023    
                  FUNCTION RETURN LINE(COUNT)                                                     *013 LM00024    
                                                                                                       LM00025    
      RENEW       LENGTH = READ.(LINE, 360, EOF)                                                  *014 LM00026    
       REDUCE     WHENEVER LINE(LENGTH) .E. BLANK                                                 *015 LM00027    
                1      .OR. LINE(LENGTH) .E. RETURN                                               *015 LM00028    
                1      .OR. LINE(LENGTH) .E. NULL                                                 *015 LM00029    
                    LENGTH = LENGTH -1                                                            *016 LM00030    
                    WHENEVER LENGTH .E. 0, TRANSFER TO RENEW                                      *017 LM00031    
                    TRANSFER TO REDUCE                                                            *018 LM00032    
                  END OF CONDITIONAL                                                              *019 LM00033    
                  NLINE = 1B                                                                      *020 LM00034    
                  COUNT = 0                                                                       *021 LM00035    
                  TRANSFER TO PUSH                                                                *022 LM00036    
                                                                                                       LM00037    
                 .. ENTRY TO GET NEXT 6-CHARACTER WORD FROM THIS LINE.                                 LM00038    
                                                                                                       LM00039    
                  ENTRY TO GET.                                                                   *023 LM00040    
                  WORD = $ $                                                                      *024 LM00041    
                  SCAN.                                                                           *025 LM00042    
      GULP        COUNT = COUNT + 1                                                               *026 LM00043    
                  WHENEVER COUNT .G. LENGTH .OR. LINE(COUNT) .E. BLANK,                           *027 LM00044    
                1      FUNCTION RETURN WORD                                                       *027 LM00045    
                  WORD = (WORD .LS. 6) .V. (LINE(COUNT) .A. 77K)                                  *028 LM00046    
                  TRANSFER TO GULP                                                                *029 LM00047    
                                                                                                       LM00048    
                 .. ENTRY TO GET DECIMAL INTEGER FROM INPUT STREAM.                                    LM00049    
                                                                                                       LM00050    
                  ENTRY TO NUM.                                                                   *030 LM00051    
                  INT = 0                                                                         *031 LM00052    
                  SCAN.                                                                           *032 LM00053    
       MULP       COUNT = COUNT+1                                                                 *033 LM00054    
                  WHENEVER COUNT .G. LENGTH .OR. LINE(COUNT) .E. BLANK,                           *034 LM00055    
                1      FUNCTION RETURN INT                                                        *034 LM00056    
                  WHENEVER LINE(COUNT) .LE. 9, INT = INT*10 + LINE(COUNT)                         *035 LM00057    
                  TRANSFER TO MULP                                                                *036 LM00058    
                                                                                                       LM00059    
                 ..  FUNCTION TO SCAN FOR NON BNALK CHARACTER.                                         LM00060    
                                                                                                       LM00061    
                  INTERNAL FUNCTION                                                               *037 LM00062    
                  ENTRY TO SCAN.                                                                  *038 LM00063    
       SCANLP     WHENEVER LINE(COUNT+1) .NE. BLANK .OR. COUNT+1 .G. LENGTH                       *039 LM00064    
                1      , FUNCTION RETURN                                                          *039 LM00065    
                  COUNT = COUNT+1                                                                 *040 LM00066    
                  TRANSFER TO SCANLP                                                              *041 LM00067    
                  END OF FUNCTION                                                                 *042 LM00068    
                                                                                                       LM00069    
                                                                                                       LM00070    
                  END OF FUNCTION                                                                 *043 LM00071    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01032 TRANSFER VECTOR LENGTH  00002 PROGRAM BEGINS    00603
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      NUM    00716   0        GET    00660   0        NXCHAR 00604   0                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BLANK  00012 A 1        INT    00014   1        MULP   00005   4        REDUCE 00007   4        SCANLP 00011   4  
      COUNT  00013   1        LENGTH 00015   1        NULL   00567 A 1        RENEW  00010   4        WORD   00571   1  
      GULP   00004   4        LINE   00566 A 1        PUSH   00006   4        RETURN 00570 A 1                          
0FUNCTION DICTIONARY    
      EXIT   00000   1        READ   00001   1        SCAN   00002   1                                                  
0ABSOLUTE CONSTANTS     
 00576 +000000000012     00575 +000000000011     00574 +000000000006     00577 +000000000077     00602 -206060606060    
 00600 +000000000550     00572 +000000000000     00573 +000000000001     00601 +233000000000                            
0STATEMENT DICTIONARY   
 00004 TXL -300670000665       00005 TXL -300726000723       00006 TXL -300613000610       00007 TXL -300642000630      
 00010 TXL -300630000623       00011 TXL -300774000760                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION (NLINE, EOF)                                     001  LM00010
                 VECTOR VALUES BLANK = 0060K                                        002  LM00012
 00012     +0 00000 0 00060                                                                                             
                 VECTOR VALUES NULL = 0057K                                         003  LM00013
 00567     +0 00000 0 00057                                                                                             
                 VECTOR VALUES RETURN = 0055K                                       004  LM00014
 00570     +0 00000 0 00055                                                                                             
                 NORMAL MODE IS INTEGER                                             005  LM00015
                 STATEMENT LABEL EOF                                                006  LM00016
                 BOOLEAN NLINE                                                      007  LM00017
                 DIMENSION LINE(360)                                                008  LM00018
                 ENTRY TO NXCHAR.                                                   009  LM00020
 00603 TRA +0 02000 0 00606    00604 SXA +0 63400 2 01012    00605 TSX +0 07400 2 01012                                 
                 NLINE = 0B                                                         010  LM00021
 00606 CLA +0 50000 0 00572    00607 STO +0 60100 0 00024                                                               
      PUSH       COUNT = COUNT + 1                                                  011  LM00022
 00610 CLA +0 50000 0 00013    00611 ADD +0 40000 0 00573    00612 STO +0 60100 0 00013                                 
                 WHENEVER COUNT .G. LENGTH, TRANSFER TO RENEW                       012  LM00023
 00613 CLA +0 50000 0 00013    00614 SUB +0 40200 0 00015    00615 TZE +0 10000 0 00620    00616 TMI -0 12000 0 00620   
 00617 TRA +0 02000 0 00010                                                                                             
                 FUNCTION RETURN LINE(COUNT)                                        013  LM00024
 00620 LXA +0 53400 2 00013    00621 CLA +0 50000 2 00566    00622 TRA +0 02000 0 01023                                 
      RENEW      LENGTH = READ.(LINE, 360, EOF)                                     014  LM00026
 00623 TSX +0 07400 4 00001    00624 TXH +3 00000 0 00566    00625 TXH +3 00000 0 00600    00626 TXH +3 00000 0 00024   
 00627 STO +0 60100 0 00015                                                                                             
       REDUCE    WHENEVER LINE(LENGTH) .E. BLANK                                    015  LM00027
                1     .OR. LINE(LENGTH) .E. RETURN                                  015  LM00028
                1     .OR. LINE(LENGTH) .E. NULL                                    015  LM00029
 00630 LXA +0 53400 1 00015    00631 CLA +0 50000 1 00566    00632 SUB +0 40200 0 00567    00633 TZE +0 10000 0 00642   
 00634 CLA +0 50000 1 00566    00635 SUB +0 40200 0 00570    00636 TZE +0 10000 0 00642    00637 CLA +0 50000 1 00566   
 00640 SUB +0 40200 0 00012    00641 TNZ -0 10000 0 00652                                                               
                   LENGTH = LENGTH -1                                               016  LM00030
 00642 CLA +0 50000 0 00015    00643 SUB +0 40200 0 00573    00644 STO +0 60100 0 00015                                 
                   WHENEVER LENGTH .E. 0, TRANSFER TO RENEW                         017  LM00031
 00645 CLA +0 50000 0 00015    00646 SUB +0 40200 0 00572    00647 TNZ -0 10000 0 00651    00650 TRA +0 02000 0 00010   
                   TRANSFER TO REDUCE                                               018  LM00032
 00651 TRA +0 02000 0 00007                                                                                             
                 END OF CONDITIONAL                                                 019  LM00033
                 NLINE = 1B                                                         020  LM00034
 00652 CLA +0 50000 0 00573    00653 STO +0 60100 0 00024                                                               
                 COUNT = 0                                                          021  LM00035
 00654 CLA +0 50000 0 00572    00655 STO +0 60100 0 00013                                                               
                 TRANSFER TO PUSH                                                   022  LM00036
 00656 TRA +0 02000 0 00006                                                                                             
                 ENTRY TO GET.                                                      023  LM00040
 00657 TRA +0 02000 0 00662    00660 SXA +0 63400 2 01012    00661 TSX +0 07400 2 01012                                 
                 WORD = $ $                                                         024  LM00041
 00662 CLA +0 50000 0 00602    00663 STO +0 60100 0 00571                                                               
                 SCAN.                                                              025  LM00042
 00664 TSX +0 07400 4 00002                                                                                             
      GULP       COUNT = COUNT + 1                                                  026  LM00043
 00665 CLA +0 50000 0 00013    00666 ADD +0 40000 0 00573    00667 STO +0 60100 0 00013                                 
                 WHENEVER COUNT .G. LENGTH .OR. LINE(COUNT) .E. BLANK,              027  LM00044
                1     FUNCTION RETURN WORD                                          027  LM00045
 00670 LXA +0 53400 1 00013    00671 CLA +0 50000 1 00566    00672 SUB +0 40200 0 00012    00673 TZE +0 10000 0 00700   
 00674 CLA +0 50000 0 00013    00675 SUB +0 40200 0 00015    00676 TZE +0 10000 0 00702    00677 TMI -0 12000 0 00702   
 00700 CLA +0 50000 0 00571    00701 TRA +0 02000 0 01023                                                               
                 WORD = (WORD .LS. 6) .V. (LINE(COUNT) .A. 77K)                     028  LM00046
 00702 LXA +0 53400 1 00013    00703 CAL -0 50000 1 00566    00704 ANA -0 32000 0 00577    00705 SLW +0 60200 0 01027   
 00706 CAL -0 50000 0 00574    00707 STA +0 62100 0 00711    00710 CAL -0 50000 0 00571    00711 ALS +0 76700 0 00000   
 00712 ORA -0 50100 0 01027    00713 SLW +0 60200 0 00571                                                               
                 TRANSFER TO GULP                                                   029  LM00047
 00714 TRA +0 02000 0 00004                                                                                             
                 ENTRY TO NUM.                                                      030  LM00051
 00715 TRA +0 02000 0 00720    00716 SXA +0 63400 2 01012    00717 TSX +0 07400 2 01012                                 
                 INT = 0                                                            031  LM00052
 00720 CLA +0 50000 0 00572    00721 STO +0 60100 0 00014                                                               
                 SCAN.                                                              032  LM00053
 00722 TSX +0 07400 4 00002                                                                                             
       MULP      COUNT = COUNT+1                                                    033  LM00054
 00723 CLA +0 50000 0 00013    00724 ADD +0 40000 0 00573    00725 STO +0 60100 0 00013                                 
                 WHENEVER COUNT .G. LENGTH .OR. LINE(COUNT) .E. BLANK,              034  LM00055
                1     FUNCTION RETURN INT                                           034  LM00056
 00726 LXA +0 53400 1 00013    00727 CLA +0 50000 1 00566    00730 SUB +0 40200 0 00012    00731 TZE +0 10000 0 00736   
 00732 CLA +0 50000 0 00013    00733 SUB +0 40200 0 00015    00734 TZE +0 10000 0 00740    00735 TMI -0 12000 0 00740   
 00736 CLA +0 50000 0 00014    00737 TRA +0 02000 0 01023                                                               
                 WHENEVER LINE(COUNT) .LE. 9, INT = INT*10 + LINE(COUNT)            035  LM00057
 00740 LXA +0 53400 1 00013    00741 CLA +0 50000 1 00566    00742 SUB +0 40200 0 00575    00743 TZE +0 10000 0 00745   
 00744 TPL +0 12000 0 00753    00745 LDQ +0 56000 0 00014    00746 MPY +0 20000 0 00576    00747 LXA +0 53400 2 00013   
 00750 XCA +0 13100 0 00000    00751 ADD +0 40000 2 00566    00752 STO +0 60100 0 00014                                 
                 TRANSFER TO MULP                                                   036  LM00058
 00753 TRA +0 02000 0 00005                                                                                             
                 INTERNAL FUNCTION                                                  037  LM00062
 00754 TRA +0 02000 0 01011                                                                                             
                 ENTRY TO SCAN.                                                     038  LM00063
 00755 TRA +0 02000 0 00760    00002 TTR +0 02100 0 00756    00756 SXA +0 63400 2 01001    00757 TSX +0 07400 2 01001   
       SCANLP    WHENEVER LINE(COUNT+1) .NE. BLANK .OR. COUNT+1 .G. LENGTH          039  LM00064
                1     , FUNCTION RETURN                                             039  LM00065
 00760 CLA +0 50000 0 00013    00761 ADD +0 40000 0 00573    00762 SUB +0 40200 0 00015    00763 TZE +0 10000 0 00765   
 00764 TPL +0 12000 0 00773    00765 CLA +0 50000 0 00013    00766 ADD +0 40000 0 00573    00767 PAX +0 73400 1 00000   
 00770 CLA +0 50000 1 00566    00771 SUB +0 40200 0 00012    00772 TZE +0 10000 0 00774    00773 TRA +0 02000 0 01005   
                 COUNT = COUNT+1                                                    040  LM00066
 00774 CLA +0 50000 0 00013    00775 ADD +0 40000 0 00573    00776 STO +0 60100 0 00013                                 
                 TRANSFER TO SCANLP                                                 041  LM00067
 00777 TRA +0 02000 0 00011                                                                                             
                 END OF FUNCTION                                                    042  LM00068
 01000 TSX +0 07400 4 00000    01001 TXH +3 00000 0 00000    01002 SXD -0 63400 1 01001    01003 SXA +0 63400 4 01005   
 01004 TRA +0 02000 2 00001    01005 AXT +0 77400 4 00000    01006 LXA +0 53400 2 01001    01007 LXD -0 53400 1 01001   
 01010 TRA +0 02000 4 00001                                                                                             
                 END OF FUNCTION                                                    043  LM00071
 01011 TSX +0 07400 4 00000    01012 TXH +3 00000 0 00000    01013 SXD -0 63400 1 01012    01014 SXA +0 63400 4 01023   
 01015 CLA +0 50000 4 00001    01016 STA +0 62100 0 00607    01017 STA +0 62100 0 00653    01020 CLA +0 50000 4 00002   
 01021 STO +0 60100 0 00626    01022 TRA +0 02000 2 00001    01023 AXT +0 77400 4 00000    01024 LXA +0 53400 2 01012   
 01025 LXD -0 53400 1 01012    01026 TRA +0 02000 4 00001                                                               
1     MAD PROGRAM LISTING ... ... ...                 FILE  SETTYP   MAD            02/08/68    1243.8
-                 
                 ..  GALLEY SETUP ROUTINES.                                                            LM00001    
                 ..                                                                                    LM00002    
                 ..  J. H. SALTZER, DECEMBER, 1965.                                                    LM00003    
                                                                                                       LM00004    
                  EXTERNAL FUNCTION(CHAR)                                                         *001 LM00005    
                                                                                                       LM00006    
                  INSERT FILE RCOM                                                                *002 LM00007    
                                                                                                  *002 LM00001    
                 ..  RUNOFF COMMON PACKAGE.                                                       *002 LM00002    
                                                                                                  *002 LM00003    
                  NORMAL MODE IS INTEGER                                                          *003 LM00004    
                                                                                                       LM00005    
                  PROGRAM COMMON NOSTOP, NOWAIT, FSTPAG, PRINAM, OUTFIL                           *004 LM00006    
                  PROGRAM COMMON HDLTH, HEAD(360), HDPOS                                          *005 LM00007    
                  PROGRAM COMMON LINE(360)                                                        *006 LM00008    
                  PROGRAM COMMON PGE, PAGENO, PGPOS, FTSW, PGMOD                                  *007 LM00009    
                  PROGRAM COMMON PREFIX(25), PRLTH                                                *008 LM00010    
                  PROGRAM COMMON RMARG                                                            *009 LM00011    
                  PROGRAM COMMON WRD, SIZE, COUNT, WORD(360)                                      *010 LM00012    
                  PROGRAM COMMON BEGIN, FILL, ADJST, NCHARS, LENGTH                               *011 LM00013    
                  PROGRAM COMMON LMARG, LINECT, BOTLIN, CNTR, FILSW                               *012 LM00014    
                  PROGRAM COMMON FLAGSW, DBLSPC, HEDPGE, PIX                                      *013 LM00015    
                  PROGRAM COMMON MROW, TBTLIN, TBTPAG                                             *014 LM00016    
                  PROGRAM COMMON TPGPOS, TFTSW, TPGE, TPRF(25)                                    *015 LM00017    
                  PROGRAM COMMON TPRLTH, THDPOS, TPAGNO, TPGMOD                                   *016 LM00018    
                  PROGRAM COMMON BOTPAG, FLAG(3)                                                  *017 LM00019    
                  PROGRAM COMMON BLANK, BCKSPC, RETURN(3)                                         *018 LM00020    
                  PROGRAM COMMON TAB, PERIOD, QUES, EXCLAM                                        *019 LM00021    
                  PROGRAM COMMON COLON, HYPHEN, NULL                                              *020 LM00022    
                                                                                                       LM00023    
                  BOOLEAN NOSTOP, NOWAIT, FTSW, PGE, OUTFIL                                       *021 LM00024    
                  BOOLEAN ADJST                                                                   *022 LM00025    
                  BOOLEAN WRD, FILL, BEGIN, CNTR, FILSW, FLAGSW                                   *023 LM00026    
                  BOOLEAN DBLSPC, HEDPGE, PIX, TPGE, TFTSW                                        *024 LM00027    
                                                                                                       LM00028    
                 ..  END OF RUNOFF COMMON PACKAGE                                                      LM00029    
                                                                                                       LM00030    
                                                                                                  *002 LM00008    
                  DIMENSION TBUF(360)                                                             *025 LM00009    
                  BOOLEAN FIRST, NLINE                                                            *026 LM00010    
                                                                                                       LM00011    
                 ..  WRITEAROUNDS TO ALLOW INTERNAL AND                                                LM00012    
                 ..  EXTERNAL USE OF FUNCTIONS.                                                        LM00013    
                                                                                                       LM00014    
                  ENTRY TO SETUP.                                                                 *027 LM00015    
                    FIRST = 1B                                                                    *028 LM00016    
                    COUNT = 0                                                                     *029 LM00017    
                    HEDPGE = 1B                                                                   *030 LM00018    
                    LENGTH = 0                                                                    *031 LM00019    
                    NCHARS = 0                                                                    *032 LM00020    
                    SETPK.(PRINAM, OUTFIL)                                                        *033 LM00021    
                    INHDFT.                                                                       *034 LM00022    
                    THROUGH STLP, FOR LINECT = 0, 1, LINECT .G. 11                                *035 LM00023    
      STLP            PACK.(RETURN, 1)                                                            *036 LM00024    
                    WRD = 0B                                                                      *037 LM00025    
                    FUNCTION RETURN                                                               *038 LM00026    
                                                                                                       LM00027    
                  ENTRY TO SETDWN.                                                                *039 LM00028    
                    PKOFF.                                                                        *040 LM00029    
                    FUNCTION RETURN                                                               *041 LM00030    
                                                                                                       LM00031    
                  ENTRY TO SETCHR.                                                                *042 LM00032    
                    WHENEVER CHAR .E. RETURN                                                      *043 LM00033    
                      WHENEVER CNTR, BREAK.                                                       *044 LM00034    
                      NLINE = 1B                                                                  *045 LM00035    
                      FUNCTION RETURN                                                             *046 LM00036    
                    END OF CONDITIONAL                                                            *047 LM00037    
                    WHENEVER NLINE                                                                *048 LM00038    
                      NLINE = 0B                                                                  *049 LM00039    
                      WHENEVER FIRST, TRANSFER TO SKIP                                            *050 LM00040    
                                                                                                       LM00041    
                 .. IF NEW LINE IS CONTINUATION OF OLD, PATCH BROKEN WORD.                             LM00042    
                                                                                                       LM00043    
                    WHENEVER CHAR .NE. BLANK .AND. CHAR .NE. TAB .AND. FILL                       *051 LM00044    
                       WHENEVER .NOT.WRD                                                          *052 LM00045    
                         CONTINUE                                                                 *053 LM00046    
                       OR WHENEVER WORD(COUNT) .E. HYPHEN                                         *054 LM00047    
                         COUNT = COUNT - 1                                                        *055 LM00048    
                         SIZE = SIZE - 1                                                          *056 LM00049    
                       OTHERWISE                                                                  *057 LM00050    
                         WHENEVER WORD(COUNT) .E. PERIOD                                          *058 LM00051    
                1            .OR. WORD(COUNT) .E. QUES                                            *058 LM00052    
                2            .OR. WORD(COUNT) .E. EXCLAM                                          *058 LM00053    
                2            .OR. WORD(COUNT) .E. COLON                                           *058 LM00054    
                3            .OR. WORD(COUNT-1) .E. PERIOD                                        *058 LM00055    
                4            .OR. WORD(COUNT-1) .E. QUES                                          *058 LM00056    
                5            .OR. WORD(COUNT-1) .E. EXCLAM                                        *058 LM00057    
                6            .OR. WORD(COUNT-2) .E. PERIOD                                        *058 LM00058    
                7            .OR. WORD(COUNT-2) .E. QUES                                          *058 LM00059    
                8            .OR. WORD(COUNT-2) .E. EXCLAM                                        *058 LM00060    
                9                , ADCHR.(BLANK)                                                  *058 LM00061    
                         ADCHR.(BLANK)                                                            *059 LM00062    
                       END OF CONDITIONAL                                                         *060 LM00063    
                    OTHERWISE                                                                     *061 LM00064    
                                                                                                       LM00065    
                 .. NEW LINE STARTS NEW PARAGRAPH, PROCESS LAST LINE.                                  LM00066    
                                                                                                       LM00067    
                      BREAK.                                                                      *062 LM00068    
      SKIP            FIRST = 0B                                                                  *063 LM00069    
                      BEGIN = 0B                                                                  *064 LM00070    
                    END OF CONDITIONAL                                                            *065 LM00071    
                    END OF CONDITIONAL                                                            *066 LM00072    
                    ADCHR.(CHAR)                                                                  *067 LM00073    
                    FUNCTION RETURN                                                               *068 LM00074    
                                                                                                       LM00075    
                  ENTRY TO SETWRD.                                                                *069 LM00076    
                    ADLP.                                                                         *070 LM00077    
                    FUNCTION RETURN                                                               *071 LM00078    
                                                                                                       LM00079    
                  ENTRY TO SETLIN.                                                                *072 LM00080    
                    INSERT.                                                                       *073 LM00081    
                    FUNCTION RETURN                                                               *074 LM00082    
                                                                                                       LM00083    
                  ENTRY TO BRKLIN.                                                                *075 LM00084    
                    BREAK.                                                                        *076 LM00085    
                    FUNCTION RETURN                                                               *077 LM00086    
                                                                                                       LM00087    
                  ENTRY TO SETPAG.                                                                *078 LM00088    
                    PGOUT.                                                                        *079 LM00089    
                    FUNCTION RETURN                                                               *080 LM00090    
                                                                                                       LM00091    
                  INTERNAL FUNCTION(CHR)                                                          *081 LM00092    
                  ENTRY TO ADCHR.                                                                 *082 LM00093    
                    WHENEVER CHR .E. BLANK .AND. WRD                                              *083 LM00094    
                      ADLP.                                                                       *084 LM00095    
                      BEGIN = 0B                                                                  *085 LM00096    
                    OR WHENEVER CHR .NE. BLANK                                                    *086 LM00097    
                      WRD = 1B                                                                    *087 LM00098    
                    END OF CONDITIONAL                                                            *088 LM00099    
                    WHENEVER CHR .E. BCKSPC                                                       *089 LM00100    
                      SIZE = SIZE - 1                                                             *090 LM00101    
                    OTHERWISE                                                                     *091 LM00102    
                      SIZE = SIZE + 1                                                             *092 LM00103    
                    END OF CONDITIONAL                                                            *093 LM00104    
                    COUNT = COUNT + 1                                                             *094 LM00105    
                    WORD(COUNT) = CHR                                                             *095 LM00106    
                    FUNCTION RETURN                                                               *096 LM00107    
                                                                                                       LM00108    
                  END OF FUNCTION                                                                 *097 LM00109    
                                                                                                       LM00110    
                  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          LM00111    
                                                                                                       LM00112    
                 ..          SUBROUTINES.                                                              LM00113    
                                                                                                       LM00114    
      ADLP       .. FUNCTION TO MOVE WORD INTO LINE.                                                   LM00115    
                                                                                                       LM00116    
                  INTERNAL FUNCTION                                                               *098 LM00117    
                  ENTRY TO ADLP.                                                                  *099 LM00118    
                    WHENEVER COUNT .LE. 0, FUNCTION RETURN                                        *100 LM00119    
                    WHENEVER SIZE + NCHARS .G. RMARG .AND. FILL                                   *101 LM00120    
                      WHENEVER ADJST,ADJUST.(LINE,LENGTH,RMARG,NCHARS)                            *102 LM00121    
                      INSERT.                                                                     *103 LM00122    
                    END OF CONDITIONAL                                                            *104 LM00123    
                    WHENEVER LENGTH .E. 0 .AND. LMARG .G. 0                                       *105 LM00124    
                      THROUGH MARGLP, FOR I = 1, 1, I .G. LMARG                                   *106 LM00125    
                        LENGTH = LENGTH + 1                                                       *107 LM00126    
                        LINE(LENGTH) = BLANK                                                      *108 LM00127    
       MARGLP           NCHARS = NCHARS + 1                                                       *109 LM00128    
                    END OF CONDITIONAL                                                            *110 LM00129    
                    THROUGH ADL1, FOR I = 1, 1, I .G. COUNT                                       *111 LM00130    
                      WHENEVER WORD(I) .E. BLANK .AND. BEGIN, TRANSFER TO ADL1                    *112 LM00131    
                      WHENEVER WORD(I) .E. BCKSPC                                                 *113 LM00132    
                        NCHARS = NCHARS - 1                                                       *114 LM00133    
                      OTHERWISE                                                                   *115 LM00134    
                        NCHARS = NCHARS + 1                                                       *116 LM00135    
                      END OF CONDITIONAL                                                          *117 LM00136    
                      LENGTH = LENGTH+1                                                           *118 LM00137    
                      LINE(LENGTH) = WORD(I)                                                      *119 LM00138    
       ADL1           CONTINUE                                                                    *120 LM00139    
                    COUNT = 0                                                                     *121 LM00140    
                    SIZE = 0                                                                      *122 LM00141    
                    WRD = 0B                                                                      *123 LM00142    
                    FUNCTION RETURN                                                               *124 LM00143    
                  END OF FUNCTION                                                                 *125 LM00144    
                                                                                                       LM00145    
      INSERT     .. FUNCTION TO ADD LINE TO PAGE.                                                      LM00146    
                                                                                                       LM00147    
                  INTERNAL FUNCTION                                                               *126 LM00148    
                  ENTRY TO INSERT.                                                                *127 LM00149    
                    WHENEVER LENGTH .LE. LMARG, FUNCTION RETURN                                   *128 LM00150    
                    WHENEVER LINECT .GE. BOTLIN, PGOUT.                                           *129 LM00151    
                    WHENEVER CNTR                                                                 *130 LM00152    
                      CENTER.(LINE,LENGTH,RMARG,NCHARS)                                           *131 LM00153    
                      CNTR = 0B                                                                   *132 LM00154    
                      WHENEVER FILSW, FILL = 1B                                                   *133 LM00155    
                    END OF CONDITIONAL                                                            *134 LM00156    
                    LINECT = LINECT + 1                                                           *135 LM00157    
                    PACK.(LINE(1), LENGTH)                                                        *136 LM00158    
                  WHENEVER FLAGSW                                                                 *137 LM00159    
                      THROUGH PKEND, FOR I = 1, 1, I .G. RMARG-NCHARS                             *138 LM00160    
        PKEND           PACK.(BLANK, 1)                                                           *139 LM00161    
                      PACK.(FLAG(1), 3)                                                           *140 LM00162    
                      FLAGSW = 0B                                                                 *141 LM00163    
                    END OF CONDITIONAL                                                            *142 LM00164    
                    PACK.(RETURN, 1)                                                              *143 LM00165    
                    WHENEVER DBLSPC .AND. LINECT .L. BOTLIN                                       *144 LM00166    
                      LINECT = LINECT+1                                                           *145 LM00167    
                      PACK.(RETURN, 1)                                                            *146 LM00168    
                    END OF CONDITIONAL                                                            *147 LM00169    
                    LENGTH = 0                                                                    *148 LM00170    
                    NCHARS = 0                                                                    *149 LM00171    
                    BEGIN = 1B                                                                    *150 LM00172    
                    FUNCTION RETURN                                                               *151 LM00173    
                  END OF FUNCTION                                                                 *152 LM00174    
                                                                                                       LM00175    
      PGOUT      .. FUNCTION TO PRINT OUT PAGE, BEGIN NEXT PAGE.                                       LM00176    
                                                                                                       LM00177    
                  INTERNAL FUNCTION                                                               *153 LM00178    
                  ENTRY TO PGOUT.                                                                 *154 LM00179    
       PPGE         WHENEVER PAGENO .L. FSTPAG, TRANSFER TO PREPAR                                *155 LM00180    
                    WHENEVER LINECT .L. 7                                                         *156 LM00181    
                1      .OR. (LINECT .L. 13 .AND. HEDPGE)                                          *156 LM00182    
                2      , TRANSFER TO PREPAR                                                       *156 LM00183    
                  WHENEVER OUTFIL .AND. .NOT. FTSW                                                *157 LM00184    
                      PACK.(EJECT,1)                                                              *158 LM00185    
                      TRANSFER TO GAZABE                                                          *159 LM00186    
                  END OF CONDITIONAL                                                              *160 LM00187    
                    THROUGH RESTOR, FOR I = LINECT+1, 1, I .GE. BOTPAG-3                          *161 LM00188    
      RESTOR          PACK.(RETURN, 1)                                                            *162 LM00189    
                    SETFT.(TBUF, TLTH)                                                            *163 LM00190    
                    PACK.(TBUF(1), TLTH)                                                          *164 LM00191    
                    PACK.(RETURN,1)                                                               *165 LM00192    
                    WHENEVER OUTFIL                                                               *166 LM00193    
                      PACK.(EJECT,1)                                                              *167 LM00194    
                    OTHERWISE                                                                     *168 LM00195    
                      PACK.(RETURN, 2)                                                            *169 LM00196    
                      WHENEVER NOSTOP, PACK.(RETURN, 1)                                           *170 LM00197    
                    END OF CONDITIONAL                                                            *171 LM00198    
      ....       ...............MOVE SOMEPLACE ELSE...........                                         LM00199    
                    VECTOR VALUES EJECT = 52K                                                     *172 LM00200    
      ....       .........................                                                             LM00201    
      GAZABE        PRPAGE.                                                                       *173 LM00202    
                    WHENEVER .NOT. NOSTOP, WAIT.                                                  *174 LM00203    
                                                                                                       LM00204    
      PREPAR        RSPAGE.                                                                       *175 LM00205    
                    HEDPGE = 0B                                                                   *176 LM00206    
                    INHDFT.                                                                       *177 LM00207    
                    TPAGNO = TPAGNO + 1                                                           *178 LM00208    
                    PACK.(RETURN, 3)                                                              *179 LM00209    
                    SETHD.(TBUF, TLTH)                                                            *180 LM00210    
                    PACK.(TBUF(1), TLTH)                                                          *181 LM00211    
                    PACK.(RETURN, 3)                                                              *182 LM00212    
                    LINECT = 6                                                                    *183 LM00213    
                    WHENEVER PIX                                                                  *184 LM00214    
                      PRPIX.                                                                      *185 LM00215    
                      LINECT = LINECT+MROW                                                        *186 LM00216    
                      PIX = 0B                                                                    *187 LM00217    
                      WHENEVER LINECT .G. BOTLIN, TRANSFER TO PPGE                                *188 LM00218    
                    END OF CONDITIONAL                                                            *189 LM00219    
                    FUNCTION RETURN                                                               *190 LM00220    
                    END OF FUNCTION                                                               *191 LM00221    
                                                                                                       LM00222    
      BREAK      .. FUNCTION TO BREAK UP OUTPUT LINES.                                                 LM00223    
                                                                                                       LM00224    
                  INTERNAL FUNCTION                                                               *192 LM00225    
                  ENTRY TO BREAK.                                                                 *193 LM00226    
                    ADLP.                                                                         *194 LM00227    
                    INSERT.                                                                       *195 LM00228    
                 .. DON'T PUT FIRST LINE OF NEW PARAGRAPH AT BOTTOM OF PAGE.                           LM00229    
                    WHENEVER LINECT + 1 .GE. BOTLIN                                               *196 LM00230    
                1       .OR.(LINECT + 2 .GE. BOTLIN .AND. DBLSPC)                                 *196 LM00231    
                2           , PGOUT.                                                              *196 LM00232    
                    BEGIN = 0B                                                                    *197 LM00233    
                    FUNCTION RETURN                                                               *198 LM00234    
                  END OF FUNCTION                                                                 *199 LM00235    
                                                                                                       LM00236    
      INHDFT     ..  FUNCTION TO SET PAGING AND HEADING MODES.                                         LM00237    
                                                                                                       LM00238    
                  INTERNAL FUNCTION                                                               *200 LM00239    
                  ENTRY TO INHDFT.                                                                *201 LM00240    
                    PGPOS = TPGPOS                                                                *202 LM00241    
                    FTSW = TFTSW                                                                  *203 LM00242    
                    PGE = TPGE                                                                    *204 LM00243    
                    THROUGH TPFLP, FOR I = 1, 1, I .G. TPRLTH                                     *205 LM00244    
      TPFLP           PREFIX(I) = TPRF(I)                                                         *206 LM00245    
                    PRLTH = TPRLTH                                                                *207 LM00246    
                    HDPOS = THDPOS                                                                *208 LM00247    
                    PAGENO = TPAGNO                                                               *209 LM00248    
                    PGMOD = TPGMOD                                                                *210 LM00249    
                    BOTLIN = TBTLIN                                                               *211 LM00250    
                    BOTPAG = TBTPAG                                                               *212 LM00251    
                    FUNCTION RETURN                                                               *213 LM00252    
                                                                                                       LM00253    
                  END OF FUNCTION                                                                 *214 LM00254    
                                                                                                       LM00255    
                  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          LM00256    
                                                                                                       LM00257    
                  END OF FUNCTION                                                                 *215 LM00258    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01762 TRANSFER VECTOR LENGTH  00014 PROGRAM BEGINS    00617 FIRST UNUSED COMMON/ERASABLE  75207
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      SETPAG 01055   0        BRKLIN 01050   0        SETLIN 01043   0        SETWRD 01036   0        SETCHR 00667   0  
      SETDWN 00662   0        SETUP  00620   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ADJST  75311  C2        FIRST  00031   2        LMARG  75306  C1        PKEND  00022   4        TBTPAG 75273  C1  
      ADL1   00023   4        FLAG   75230 AC1        MARGLP 00022   4        PPGE   00025   4        TBUF   00604 A 1  
      BCKSPC 75223  C1        FLAGSW 75301  C2        MROW   75275  C1        PREFIX 76123 AC1        TFTSW  75271  C2  
      BEGIN  75313  C2        FSTPAG 77457  C1        NCHARS 75310  C1        PREPAR 00026   4        THDPOS 75234  C1  
      BLANK  75224  C1        FTSW   76125  C2        NLINE  00033   2        PRINAM 77456  C1        TLTH   00605   1  
      BOTLIN 75304  C1        GAZABE 00024   4        NOSTOP 77461  C2        PRLTH  76071  C1        TPAGNO 75233  C1  
      BOTPAG 75231  C1        HDLTH  77454  C1        NOWAIT 77460  C2        QUES   75214  C1        TPFLP  00022   4  
      CNTR   75303  C2        HDPOS  76702  C1        NULL   75210  C1        RESTOR 00022   4        TPGE   75270  C2  
      COLON  75212  C1        HEAD   77453 AC1        OUTFIL 77455  C2        RETURN 75222 AC1        TPGMOD 75232  C1  
      COUNT  76065  C1        HEDPGE 75277  C2        PAGENO 76127  C1        RMARG  76070  C1        TPGPOS 75272  C1  
      DBLSPC 75300  C2        HYPHEN 75211  C1        PERIOD 75215  C1        SIZE   76066  C1        TPRF   75267 AC1  
      EJECT  00030 A 1        I      00032   1        PGE    76130  C2        SKIP   00027   4        TPRLTH 75235  C1  
      EXCLAM 75213  C1        LENGTH 75307  C1        PGMOD  76124  C1        STLP   00022   4        WORD   76064 AC1  
      FILL   75312  C2        LINECT 75305  C1        PGPOS  76126  C1        TAB    75216  C1        WRD    76067  C2  
      FILSW  75302  C2        LINE   76701 AC1        PIX    75276  C2        TBTLIN 75274  C1                          
0FUNCTION DICTIONARY    
      ADJUST 00000   1        CENTER 00001   1        EXIT   00002   1        PACK   00003   1        PKOFF  00004   1  
      PRPAGE 00005   1        PRPIX  00006   1        RSPAGE 00007   1        SETFT  00010   1        SETHD  00011   1  
      SETPK  00012   1        WAIT   00013   1        ADCHR  00014   1        ADLP   00015   1        BREAK  00016   1  
      INHDFT 00017   1        INSERT 00020   1        PGOUT  00021   1                                                  
0ABSOLUTE CONSTANTS     
 00612 +000000000006     00613 +000000000007     00615 +000000000015     00611 +000000000003     00610 +000000000002    
 00614 +000000000013     00606 +000000000000     00607 +000000000001     00616 +233000000000                            
0STATEMENT DICTIONARY   
 00023 TXL -301271001270       00024 TXL -301545001544       00025 TXL -301451001444       00026 TXL -301551001550      
 00027 TXL -301030001026                                                                                                
0PROGRAM    
                 EXTERNAL FUNCTION(CHAR)                                            001  LM00005
                 INSERT FILE RCOM                                                   002  LM00007
                 NORMAL MODE IS INTEGER                                             003  LM00004
                 PROGRAM COMMON NOSTOP, NOWAIT, FSTPAG, PRINAM, OUTFIL              004  LM00006
                 PROGRAM COMMON HDLTH, HEAD(360), HDPOS                             005  LM00007
                 PROGRAM COMMON LINE(360)                                           006  LM00008
                 PROGRAM COMMON PGE, PAGENO, PGPOS, FTSW, PGMOD                     007  LM00009
                 PROGRAM COMMON PREFIX(25), PRLTH                                   008  LM00010
                 PROGRAM COMMON RMARG                                               009  LM00011
                 PROGRAM COMMON WRD, SIZE, COUNT, WORD(360)                         010  LM00012
                 PROGRAM COMMON BEGIN, FILL, ADJST, NCHARS, LENGTH                  011  LM00013
                 PROGRAM COMMON LMARG, LINECT, BOTLIN, CNTR, FILSW                  012  LM00014
                 PROGRAM COMMON FLAGSW, DBLSPC, HEDPGE, PIX                         013  LM00015
                 PROGRAM COMMON MROW, TBTLIN, TBTPAG                                014  LM00016
                 PROGRAM COMMON TPGPOS, TFTSW, TPGE, TPRF(25)                       015  LM00017
                 PROGRAM COMMON TPRLTH, THDPOS, TPAGNO, TPGMOD                      016  LM00018
                 PROGRAM COMMON BOTPAG, FLAG(3)                                     017  LM00019
                 PROGRAM COMMON BLANK, BCKSPC, RETURN(3)                            018  LM00020
                 PROGRAM COMMON TAB, PERIOD, QUES, EXCLAM                           019  LM00021
                 PROGRAM COMMON COLON, HYPHEN, NULL                                 020  LM00022
                 BOOLEAN NOSTOP, NOWAIT, FTSW, PGE, OUTFIL                          021  LM00024
                 BOOLEAN ADJST                                                      022  LM00025
                 BOOLEAN WRD, FILL, BEGIN, CNTR, FILSW, FLAGSW                      023  LM00026
                 BOOLEAN DBLSPC, HEDPGE, PIX, TPGE, TFTSW                           024  LM00027
                 DIMENSION TBUF(360)                                                025  LM00009
                 BOOLEAN FIRST, NLINE                                               026  LM00010
                 ENTRY TO SETUP.                                                    027  LM00015
 00617 TRA +0 02000 0 00622    00620 SXA +0 63400 2 01743    00621 TSX +0 07400 2 01743                                 
                   FIRST = 1B                                                       028  LM00016
 00622 CLA +0 50000 0 00607    00623 STO +0 60100 0 00031                                                               
                   COUNT = 0                                                        029  LM00017
 00624 CLA +0 50000 0 00606    00625 STO +0 60100 0 76065                                                               
                   HEDPGE = 1B                                                      030  LM00018
 00626 CLA +0 50000 0 00607    00627 STO +0 60100 0 75277                                                               
                   LENGTH = 0                                                       031  LM00019
 00630 CLA +0 50000 0 00606    00631 STO +0 60100 0 75307                                                               
                   NCHARS = 0                                                       032  LM00020
 00632 CLA +0 50000 0 00606    00633 STO +0 60100 0 75310                                                               
                   SETPK.(PRINAM, OUTFIL)                                           033  LM00021
 00634 TSX +0 07400 4 00012    00635 TXH +3 00000 0 77456    00636 TXH +3 00000 0 77455                                 
                   INHDFT.                                                          034  LM00022
 00637 TSX +0 07400 4 00017                                                                                             
                   THROUGH STLP, FOR LINECT = 0, 1, LINECT .G. 11                   035  LM00023
 00640 CLA +0 50000 0 00606    00641 STO +0 60100 0 75305    00642 TRA +0 02000 0 00646    00643 CLA +0 50000 0 75305   
 00644 ADD +0 40000 0 00607    00645 STO +0 60100 0 75305    00646 CLA +0 50000 0 75305    00647 SUB +0 40200 0 00614   
 00650 TZE +0 10000 0 00652    00651 TPL +0 12000 0 00656                                                               
      STLP           PACK.(RETURN, 1)                                               036  LM00024
 00652 TSX +0 07400 4 00003    00653 TXH +3 00000 0 75222    00654 TXH +3 00000 0 00607    00655 TRA +0 02000 0 00643   
                   WRD = 0B                                                         037  LM00025
 00656 CLA +0 50000 0 00606    00657 STO +0 60100 0 76067                                                               
                   FUNCTION RETURN                                                  038  LM00026
 00660 TRA +0 02000 0 01754                                                                                             
                 ENTRY TO SETDWN.                                                   039  LM00028
 00661 TRA +0 02000 0 00664    00662 SXA +0 63400 2 01743    00663 TSX +0 07400 2 01743                                 
                   PKOFF.                                                           040  LM00029
 00664 TSX +0 07400 4 00004                                                                                             
                   FUNCTION RETURN                                                  041  LM00030
 00665 TRA +0 02000 0 01754                                                                                             
                 ENTRY TO SETCHR.                                                   042  LM00032
 00666 TRA +0 02000 0 00671    00667 SXA +0 63400 2 01743    00670 TSX +0 07400 2 01743                                 
                   WHENEVER CHAR .E. RETURN                                         043  LM00033
 00671 CLA +0 50000 0 00000    00672 SUB +0 40200 0 75222    00673 TNZ -0 10000 0 00702                                 
                     WHENEVER CNTR, BREAK.                                          044  LM00034
 00674 NZT -0 52000 0 75303    00675 TRA +0 02000 0 00677    00676 TSX +0 07400 4 00016                                 
                     NLINE = 1B                                                     045  LM00035
 00677 CLA +0 50000 0 00607    00700 STO +0 60100 0 00033                                                               
                     FUNCTION RETURN                                                046  LM00036
 00701 TRA +0 02000 0 01754                                                                                             
                   END OF CONDITIONAL                                               047  LM00037
                   WHENEVER NLINE                                                   048  LM00038
 00702 NZT -0 52000 0 00033    00703 TRA +0 02000 0 01032                                                               
                     NLINE = 0B                                                     049  LM00039
 00704 CLA +0 50000 0 00606    00705 STO +0 60100 0 00033                                                               
                     WHENEVER FIRST, TRANSFER TO SKIP                               050  LM00040
 00706 NZT -0 52000 0 00031    00707 TRA +0 02000 0 00711    00710 TRA +0 02000 0 00027                                 
                   WHENEVER CHAR .NE. BLANK .AND. CHAR .NE. TAB .AND. FILL          051  LM00044
 00711 NZT -0 52000 0 75312    00712 TRA +0 02000 0 01025    00713 CLA +0 50000 0 00000    00714 SUB +0 40200 0 75216   
 00715 TZE +0 10000 0 01025    00716 CLA +0 50000 0 00000    00717 SUB +0 40200 0 75224    00720 TZE +0 10000 0 01025   
                      WHENEVER .NOT.WRD                                             052  LM00045
 00721 ZET +0 52000 0 76067    00722 TRA +0 02000 0 00724                                                               
                        CONTINUE                                                    053  LM00046
                      OR WHENEVER WORD(COUNT) .E. HYPHEN                            054  LM00047
 00723 TRA +0 02000 0 01024    00724 LXA +0 53400 1 76065    00725 CLA +0 50000 1 76064    00726 SUB +0 40200 0 75211   
 00727 TNZ -0 10000 0 00737                                                                                             
                        COUNT = COUNT - 1                                           055  LM00048
 00730 CLA +0 50000 0 76065    00731 SUB +0 40200 0 00607    00732 STO +0 60100 0 76065                                 
                        SIZE = SIZE - 1                                             056  LM00049
 00733 CLA +0 50000 0 76066    00734 SUB +0 40200 0 00607    00735 STO +0 60100 0 76066                                 
                      OTHERWISE                                                     057  LM00050
 00736 TRA +0 02000 0 01024                                                                                             
                        WHENEVER WORD(COUNT) .E. PERIOD                             058  LM00051
                1           .OR. WORD(COUNT) .E. QUES                               058  LM00052
                2           .OR. WORD(COUNT) .E. EXCLAM                             058  LM00053
                2           .OR. WORD(COUNT) .E. COLON                              058  LM00054
                3           .OR. WORD(COUNT-1) .E. PERIOD                           058  LM00055
                4           .OR. WORD(COUNT-1) .E. QUES                             058  LM00056
                5           .OR. WORD(COUNT-1) .E. EXCLAM                           058  LM00057
                6           .OR. WORD(COUNT-2) .E. PERIOD                           058  LM00058
                7           .OR. WORD(COUNT-2) .E. QUES                             058  LM00059
                8           .OR. WORD(COUNT-2) .E. EXCLAM                           058  LM00060
                9               , ADCHR.(BLANK)                                     058  LM00061
 00737 CLA +0 50000 0 76065    00740 SUB +0 40200 0 00610    00741 PAX +0 73400 1 00000    00742 CLA +0 50000 1 76064   
 00743 SUB +0 40200 0 75213    00744 TZE +0 10000 0 01020    00745 CLA +0 50000 0 76065    00746 SUB +0 40200 0 00610   
 00747 PAX +0 73400 1 00000    00750 CLA +0 50000 1 76064    00751 SUB +0 40200 0 75214    00752 TZE +0 10000 0 01020   
 00753 CLA +0 50000 0 76065    00754 SUB +0 40200 0 00610    00755 PAX +0 73400 1 00000    00756 CLA +0 50000 1 76064   
 00757 SUB +0 40200 0 75215    00760 TZE +0 10000 0 01020    00761 CLA +0 50000 0 76065    00762 SUB +0 40200 0 00607   
 00763 PAX +0 73400 1 00000    00764 CLA +0 50000 1 76064    00765 SUB +0 40200 0 75213    00766 TZE +0 10000 0 01020   
 00767 CLA +0 50000 0 76065    00770 SUB +0 40200 0 00607    00771 PAX +0 73400 1 00000    00772 CLA +0 50000 1 76064   
 00773 SUB +0 40200 0 75214    00774 TZE +0 10000 0 01020    00775 CLA +0 50000 0 76065    00776 SUB +0 40200 0 00607   
 00777 PAX +0 73400 1 00000    01000 CLA +0 50000 1 76064    01001 SUB +0 40200 0 75215    01002 TZE +0 10000 0 01020   
 01003 LXA +0 53400 1 76065    01004 CLA +0 50000 1 76064    01005 SUB +0 40200 0 75212    01006 TZE +0 10000 0 01020   
 01007 CLA +0 50000 1 76064    01010 SUB +0 40200 0 75213    01011 TZE +0 10000 0 01020    01012 CLA +0 50000 1 76064   
 01013 SUB +0 40200 0 75214    01014 TZE +0 10000 0 01020    01015 CLA +0 50000 1 76064    01016 SUB +0 40200 0 75215   
 01017 TNZ -0 10000 0 01022    01020 TSX +0 07400 4 00014    01021 TXH +3 00000 0 75224                                 
                        ADCHR.(BLANK)                                               059  LM00062
 01022 TSX +0 07400 4 00014    01023 TXH +3 00000 0 75224                                                               
                      END OF CONDITIONAL                                            060  LM00063
                   OTHERWISE                                                        061  LM00064
 01024 TRA +0 02000 0 01032                                                                                             
                     BREAK.                                                         062  LM00068
 01025 TSX +0 07400 4 00016                                                                                             
      SKIP           FIRST = 0B                                                     063  LM00069
 01026 CLA +0 50000 0 00606    01027 STO +0 60100 0 00031                                                               
                     BEGIN = 0B                                                     064  LM00070
 01030 CLA +0 50000 0 00606    01031 STO +0 60100 0 75313                                                               
                   END OF CONDITIONAL                                               065  LM00071
                   END OF CONDITIONAL                                               066  LM00072
                   ADCHR.(CHAR)                                                     067  LM00073
 01032 TSX +0 07400 4 00014    01033 TXH +3 00000 0 00000                                                               
                   FUNCTION RETURN                                                  068  LM00074
 01034 TRA +0 02000 0 01754                                                                                             
                 ENTRY TO SETWRD.                                                   069  LM00076
 01035 TRA +0 02000 0 01040    01036 SXA +0 63400 2 01743    01037 TSX +0 07400 2 01743                                 
                   ADLP.                                                            070  LM00077
 01040 TSX +0 07400 4 00015                                                                                             
                   FUNCTION RETURN                                                  071  LM00078
 01041 TRA +0 02000 0 01754                                                                                             
                 ENTRY TO SETLIN.                                                   072  LM00080
 01042 TRA +0 02000 0 01045    01043 SXA +0 63400 2 01743    01044 TSX +0 07400 2 01743                                 
                   INSERT.                                                          073  LM00081
 01045 TSX +0 07400 4 00020                                                                                             
                   FUNCTION RETURN                                                  074  LM00082
 01046 TRA +0 02000 0 01754                                                                                             
                 ENTRY TO BRKLIN.                                                   075  LM00084
 01047 TRA +0 02000 0 01052    01050 SXA +0 63400 2 01743    01051 TSX +0 07400 2 01743                                 
                   BREAK.                                                           076  LM00085
 01052 TSX +0 07400 4 00016                                                                                             
                   FUNCTION RETURN                                                  077  LM00086
 01053 TRA +0 02000 0 01754                                                                                             
                 ENTRY TO SETPAG.                                                   078  LM00088
 01054 TRA +0 02000 0 01057    01055 SXA +0 63400 2 01743    01056 TSX +0 07400 2 01743                                 
                   PGOUT.                                                           079  LM00089
 01057 TSX +0 07400 4 00021                                                                                             
                   FUNCTION RETURN                                                  080  LM00090
 01060 TRA +0 02000 0 01754                                                                                             
                 INTERNAL FUNCTION(CHR)                                             081  LM00092
 01061 TRA +0 02000 0 01142                                                                                             
                 ENTRY TO ADCHR.                                                    082  LM00093
 01062 TRA +0 02000 0 01065    00014 TTR +0 02100 0 01063    01063 SXA +0 63400 2 01125    01064 TSX +0 07400 2 01125   
                   WHENEVER CHR .E. BLANK .AND. WRD                                 083  LM00094
 01065 NZT -0 52000 0 76067    01066 TRA +0 02000 0 01076    01067 CLA +0 50000 0 00000    01070 SUB +0 40200 0 75224   
 01071 TNZ -0 10000 0 01076                                                                                             
                     ADLP.                                                          084  LM00095
 01072 TSX +0 07400 4 00015                                                                                             
                     BEGIN = 0B                                                     085  LM00096
 01073 CLA +0 50000 0 00606    01074 STO +0 60100 0 75313                                                               
                   OR WHENEVER CHR .NE. BLANK                                       086  LM00097
 01075 TRA +0 02000 0 01103    01076 CLA +0 50000 0 00000    01077 SUB +0 40200 0 75224    01100 TZE +0 10000 0 01103   
                     WRD = 1B                                                       087  LM00098
 01101 CLA +0 50000 0 00607    01102 STO +0 60100 0 76067                                                               
                   END OF CONDITIONAL                                               088  LM00099
                   WHENEVER CHR .E. BCKSPC                                          089  LM00100
 01103 CLA +0 50000 0 00000    01104 SUB +0 40200 0 75223    01105 TNZ -0 10000 0 01112                                 
                     SIZE = SIZE - 1                                                090  LM00101
 01106 CLA +0 50000 0 76066    01107 SUB +0 40200 0 00607    01110 STO +0 60100 0 76066                                 
                   OTHERWISE                                                        091  LM00102
 01111 TRA +0 02000 0 01115                                                                                             
                     SIZE = SIZE + 1                                                092  LM00103
 01112 CLA +0 50000 0 76066    01113 ADD +0 40000 0 00607    01114 STO +0 60100 0 76066                                 
                   END OF CONDITIONAL                                               093  LM00104
                   COUNT = COUNT + 1                                                094  LM00105
 01115 CLA +0 50000 0 76065    01116 ADD +0 40000 0 00607    01117 STO +0 60100 0 76065                                 
                   WORD(COUNT) = CHR                                                095  LM00106
 01120 LXA +0 53400 1 76065    01121 CLA +0 50000 0 00000    01122 STO +0 60100 1 76064                                 
                   FUNCTION RETURN                                                  096  LM00107
 01123 TRA +0 02000 0 01136                                                                                             
                 END OF FUNCTION                                                    097  LM00109
 01124 TSX +0 07400 4 00002    01125 TXH +3 00000 0 00000    01126 SXD -0 63400 1 01125    01127 SXA +0 63400 4 01136   
 01130 CLA +0 50000 4 00001    01131 STA +0 62100 0 01067    01132 STA +0 62100 0 01076    01133 STA +0 62100 0 01103   
 01134 STA +0 62100 0 01121    01135 TRA +0 02000 2 00001    01136 AXT +0 77400 4 00000    01137 LXA +0 53400 2 01125   
 01140 LXD -0 53400 1 01125    01141 TRA +0 02000 4 00001                                                               
                 INTERNAL FUNCTION                                                  098  LM00117
 01142 TRA +0 02000 0 01311                                                                                             
                 ENTRY TO ADLP.                                                     099  LM00118
 01143 TRA +0 02000 0 01146    00015 TTR +0 02100 0 01144    01144 SXA +0 63400 2 01301    01145 TSX +0 07400 2 01301   
                   WHENEVER COUNT .LE. 0, FUNCTION RETURN                           100  LM00119
 01146 CLA +0 50000 0 76065    01147 SUB +0 40200 0 00606    01150 TZE +0 10000 0 01152    01151 TPL +0 12000 0 01153   
 01152 TRA +0 02000 0 01305                                                                                             
                   WHENEVER SIZE + NCHARS .G. RMARG .AND. FILL                      101  LM00120
 01153 NZT -0 52000 0 75312    01154 TRA +0 02000 0 01172    01155 CLA +0 50000 0 76066    01156 ADD +0 40000 0 75310   
 01157 SUB +0 40200 0 76070    01160 TZE +0 10000 0 01172    01161 TMI -0 12000 0 01172                                 
                     WHENEVER ADJST,ADJUST.(LINE,LENGTH,RMARG,NCHARS)               102  LM00121
 01162 NZT -0 52000 0 75311    01163 TRA +0 02000 0 01171    01164 TSX +0 07400 4 00000    01165 TXH +3 00000 0 76701   
 01166 TXH +3 00000 0 75307    01167 TXH +3 00000 0 76070    01170 TXH +3 00000 0 75310                                 
                     INSERT.                                                        103  LM00122
 01171 TSX +0 07400 4 00020                                                                                             
                   END OF CONDITIONAL                                               104  LM00123
                   WHENEVER LENGTH .E. 0 .AND. LMARG .G. 0                          105  LM00124
 01172 CLA +0 50000 0 75306    01173 SUB +0 40200 0 00606    01174 TZE +0 10000 0 01225    01175 TMI -0 12000 0 01225   
 01176 CLA +0 50000 0 75307    01177 SUB +0 40200 0 00606    01200 TNZ -0 10000 0 01225                                 
                     THROUGH MARGLP, FOR I = 1, 1, I .G. LMARG                      106  LM00125
 01201 CLA +0 50000 0 00607    01202 STO +0 60100 0 00032    01203 TRA +0 02000 0 01207    01204 CLA +0 50000 0 00032   
 01205 ADD +0 40000 0 00607    01206 STO +0 60100 0 00032    01207 CLA +0 50000 0 00032    01210 SUB +0 40200 0 75306   
 01211 TZE +0 10000 0 01213    01212 TPL +0 12000 0 01225                                                               
                       LENGTH = LENGTH + 1                                          107  LM00126
 01213 CLA +0 50000 0 75307    01214 ADD +0 40000 0 00607    01215 STO +0 60100 0 75307                                 
                       LINE(LENGTH) = BLANK                                         108  LM00127
 01216 LXA +0 53400 1 75307    01217 CLA +0 50000 0 75224    01220 STO +0 60100 1 76701                                 
       MARGLP          NCHARS = NCHARS + 1                                          109  LM00128
 01221 CLA +0 50000 0 75310    01222 ADD +0 40000 0 00607    01223 STO +0 60100 0 75310    01224 TRA +0 02000 0 01204   
                   END OF CONDITIONAL                                               110  LM00129
                   THROUGH ADL1, FOR I = 1, 1, I .G. COUNT                          111  LM00130
 01225 CLA +0 50000 0 00607    01226 STO +0 60100 0 00032    01227 TRA +0 02000 0 01233    01230 CLA +0 50000 0 00032   
 01231 ADD +0 40000 0 00607    01232 STO +0 60100 0 00032    01233 CLA +0 50000 0 00032    01234 SUB +0 40200 0 76065   
 01235 TZE +0 10000 0 01237    01236 TPL +0 12000 0 01271                                                               
                     WHENEVER WORD(I) .E. BLANK .AND. BEGIN, TRANSFER TO ADL1       112  LM00131
 01237 NZT -0 52000 0 75313    01240 TRA +0 02000 0 01246    01241 LXA +0 53400 1 00032    01242 CLA +0 50000 1 76064   
 01243 SUB +0 40200 0 75224    01244 TNZ -0 10000 0 01246    01245 TRA +0 02000 0 00023                                 
                     WHENEVER WORD(I) .E. BCKSPC                                    113  LM00132
 01246 LXA +0 53400 1 00032    01247 CLA +0 50000 1 76064    01250 SUB +0 40200 0 75223    01251 TNZ -0 10000 0 01256   
                       NCHARS = NCHARS - 1                                          114  LM00133
 01252 CLA +0 50000 0 75310    01253 SUB +0 40200 0 00607    01254 STO +0 60100 0 75310                                 
                     OTHERWISE                                                      115  LM00134
 01255 TRA +0 02000 0 01261                                                                                             
                       NCHARS = NCHARS + 1                                          116  LM00135
 01256 CLA +0 50000 0 75310    01257 ADD +0 40000 0 00607    01260 STO +0 60100 0 75310                                 
                     END OF CONDITIONAL                                             117  LM00136
                     LENGTH = LENGTH+1                                              118  LM00137
 01261 CLA +0 50000 0 75307    01262 ADD +0 40000 0 00607    01263 STO +0 60100 0 75307                                 
                     LINE(LENGTH) = WORD(I)                                         119  LM00138
 01264 LXA +0 53400 1 75307    01265 LXA +0 53400 2 00032    01266 CLA +0 50000 2 76064    01267 STO +0 60100 1 76701   
       ADL1          CONTINUE                                                       120  LM00139
 01270 TRA +0 02000 0 01230                                                                                             
                   COUNT = 0                                                        121  LM00140
 01271 CLA +0 50000 0 00606    01272 STO +0 60100 0 76065                                                               
                   SIZE = 0                                                         122  LM00141
 01273 CLA +0 50000 0 00606    01274 STO +0 60100 0 76066                                                               
                   WRD = 0B                                                         123  LM00142
 01275 CLA +0 50000 0 00606    01276 STO +0 60100 0 76067                                                               
                   FUNCTION RETURN                                                  124  LM00143
 01277 TRA +0 02000 0 01305                                                                                             
                 END OF FUNCTION                                                    125  LM00144
 01300 TSX +0 07400 4 00002    01301 TXH +3 00000 0 00000    01302 SXD -0 63400 1 01301    01303 SXA +0 63400 4 01305   
 01304 TRA +0 02000 2 00001    01305 AXT +0 77400 4 00000    01306 LXA +0 53400 2 01301    01307 LXD -0 53400 1 01301   
 01310 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  126  LM00148
 01311 TRA +0 02000 0 01440                                                                                             
                 ENTRY TO INSERT.                                                   127  LM00149
 01312 TRA +0 02000 0 01315    00020 TTR +0 02100 0 01313    01313 SXA +0 63400 2 01430    01314 TSX +0 07400 2 01430   
                   WHENEVER LENGTH .LE. LMARG, FUNCTION RETURN                      128  LM00150
 01315 CLA +0 50000 0 75307    01316 SUB +0 40200 0 75306    01317 TZE +0 10000 0 01321    01320 TPL +0 12000 0 01322   
 01321 TRA +0 02000 0 01434                                                                                             
                   WHENEVER LINECT .GE. BOTLIN, PGOUT.                              129  LM00151
 01322 CLA +0 50000 0 75305    01323 SUB +0 40200 0 75304    01324 TZE +0 10000 0 01326    01325 TMI -0 12000 0 01327   
 01326 TSX +0 07400 4 00021                                                                                             
                   WHENEVER CNTR                                                    130  LM00152
 01327 NZT -0 52000 0 75303    01330 TRA +0 02000 0 01344                                                               
                     CENTER.(LINE,LENGTH,RMARG,NCHARS)                              131  LM00153
 01331 TSX +0 07400 4 00001    01332 TXH +3 00000 0 76701    01333 TXH +3 00000 0 75307    01334 TXH +3 00000 0 76070   
 01335 TXH +3 00000 0 75310                                                                                             
                     CNTR = 0B                                                      132  LM00154
 01336 CLA +0 50000 0 00606    01337 STO +0 60100 0 75303                                                               
                     WHENEVER FILSW, FILL = 1B                                      133  LM00155
 01340 NZT -0 52000 0 75302    01341 TRA +0 02000 0 01344    01342 CLA +0 50000 0 00607    01343 STO +0 60100 0 75312   
                   END OF CONDITIONAL                                               134  LM00156
                   LINECT = LINECT + 1                                              135  LM00157
 01344 CLA +0 50000 0 75305    01345 ADD +0 40000 0 00607    01346 STO +0 60100 0 75305                                 
                   PACK.(LINE(1), LENGTH)                                           136  LM00158
 01347 TSX +0 07400 4 00003    01350 TXH +3 00000 0 76700    01351 TXH +3 00000 0 75307                                 
                 WHENEVER FLAGSW                                                    137  LM00159
 01352 NZT -0 52000 0 75301    01353 TRA +0 02000 0 01401                                                               
                     THROUGH PKEND, FOR I = 1, 1, I .G. RMARG-NCHARS                138  LM00160
 01354 CLA +0 50000 0 00607    01355 STO +0 60100 0 00032    01356 TRA +0 02000 0 01362    01357 CLA +0 50000 0 00032   
 01360 ADD +0 40000 0 00607    01361 STO +0 60100 0 00032    01362 CLA +0 50000 0 76070    01363 SUB +0 40200 0 75310   
 01364 CHS +0 76000 0 00002    01365 ADD +0 40000 0 00032    01366 TZE +0 10000 0 01370    01367 TPL +0 12000 0 01374   
        PKEND          PACK.(BLANK, 1)                                              139  LM00161
 01370 TSX +0 07400 4 00003    01371 TXH +3 00000 0 75224    01372 TXH +3 00000 0 00607    01373 TRA +0 02000 0 01357   
                     PACK.(FLAG(1), 3)                                              140  LM00162
 01374 TSX +0 07400 4 00003    01375 TXH +3 00000 0 75227    01376 TXH +3 00000 0 00611                                 
                     FLAGSW = 0B                                                    141  LM00163
 01377 CLA +0 50000 0 00606    01400 STO +0 60100 0 75301                                                               
                   END OF CONDITIONAL                                               142  LM00164
                   PACK.(RETURN, 1)                                                 143  LM00165
 01401 TSX +0 07400 4 00003    01402 TXH +3 00000 0 75222    01403 TXH +3 00000 0 00607                                 
                   WHENEVER DBLSPC .AND. LINECT .L. BOTLIN                          144  LM00166
 01404 CLA +0 50000 0 75305    01405 SUB +0 40200 0 75304    01406 TZE +0 10000 0 01420    01407 TPL +0 12000 0 01420   
 01410 NZT -0 52000 0 75300    01411 TRA +0 02000 0 01420                                                               
                     LINECT = LINECT+1                                              145  LM00167
 01412 CLA +0 50000 0 75305    01413 ADD +0 40000 0 00607    01414 STO +0 60100 0 75305                                 
                     PACK.(RETURN, 1)                                               146  LM00168
 01415 TSX +0 07400 4 00003    01416 TXH +3 00000 0 75222    01417 TXH +3 00000 0 00607                                 
                   END OF CONDITIONAL                                               147  LM00169
                   LENGTH = 0                                                       148  LM00170
 01420 CLA +0 50000 0 00606    01421 STO +0 60100 0 75307                                                               
                   NCHARS = 0                                                       149  LM00171
 01422 CLA +0 50000 0 00606    01423 STO +0 60100 0 75310                                                               
                   BEGIN = 1B                                                       150  LM00172
 01424 CLA +0 50000 0 00607    01425 STO +0 60100 0 75313                                                               
                   FUNCTION RETURN                                                  151  LM00173
 01426 TRA +0 02000 0 01434                                                                                             
                 END OF FUNCTION                                                    152  LM00174
 01427 TSX +0 07400 4 00002    01430 TXH +3 00000 0 00000    01431 SXD -0 63400 1 01430    01432 SXA +0 63400 4 01434   
 01433 TRA +0 02000 2 00001    01434 AXT +0 77400 4 00000    01435 LXA +0 53400 2 01430    01436 LXD -0 53400 1 01430   
 01437 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  153  LM00178
 01440 TRA +0 02000 0 01624                                                                                             
                 ENTRY TO PGOUT.                                                    154  LM00179
 01441 TRA +0 02000 0 01444    00021 TTR +0 02100 0 01442    01442 SXA +0 63400 2 01614    01443 TSX +0 07400 2 01614   
       PPGE        WHENEVER PAGENO .L. FSTPAG, TRANSFER TO PREPAR                   155  LM00180
 01444 CLA +0 50000 0 76127    01445 SUB +0 40200 0 77457    01446 TZE +0 10000 0 01451    01447 TPL +0 12000 0 01451   
 01450 TRA +0 02000 0 00026                                                                                             
                   WHENEVER LINECT .L. 7                                            156  LM00181
                1     .OR. (LINECT .L. 13 .AND. HEDPGE)                             156  LM00182
                2     , TRANSFER TO PREPAR                                          156  LM00183
 01451 NZT -0 52000 0 75277    01452 TRA +0 02000 0 01457    01453 CLA +0 50000 0 75305    01454 SUB +0 40200 0 00615   
 01455 TZE +0 10000 0 01457    01456 TMI -0 12000 0 01463    01457 CLA +0 50000 0 75305    01460 SUB +0 40200 0 00613   
 01461 TZE +0 10000 0 01464    01462 TPL +0 12000 0 01464    01463 TRA +0 02000 0 00026                                 
                 WHENEVER OUTFIL .AND. .NOT. FTSW                                   157  LM00184
 01464 ZET +0 52000 0 76125    01465 TRA +0 02000 0 01474    01466 NZT -0 52000 0 77455    01467 TRA +0 02000 0 01474   
                     PACK.(EJECT,1)                                                 158  LM00185
 01470 TSX +0 07400 4 00003    01471 TXH +3 00000 0 00030    01472 TXH +3 00000 0 00607                                 
                     TRANSFER TO GAZABE                                             159  LM00186
 01473 TRA +0 02000 0 00024                                                                                             
                 END OF CONDITIONAL                                                 160  LM00187
                   THROUGH RESTOR, FOR I = LINECT+1, 1, I .GE. BOTPAG-3             161  LM00188
 01474 CLA +0 50000 0 75305    01475 ADD +0 40000 0 00607    01476 STO +0 60100 0 00032    01477 TRA +0 02000 0 01503   
 01500 CLA +0 50000 0 00032    01501 ADD +0 40000 0 00607    01502 STO +0 60100 0 00032    01503 CLA +0 50000 0 75231   
 01504 SUB +0 40200 0 00611    01505 CHS +0 76000 0 00002    01506 ADD +0 40000 0 00032    01507 TZE +0 10000 0 01515   
 01510 TPL +0 12000 0 01515                                                                                             
      RESTOR         PACK.(RETURN, 1)                                               162  LM00189
 01511 TSX +0 07400 4 00003    01512 TXH +3 00000 0 75222    01513 TXH +3 00000 0 00607    01514 TRA +0 02000 0 01500   
                   SETFT.(TBUF, TLTH)                                               163  LM00190
 01515 TSX +0 07400 4 00010    01516 TXH +3 00000 0 00604    01517 TXH +3 00000 0 00605                                 
                   PACK.(TBUF(1), TLTH)                                             164  LM00191
 01520 TSX +0 07400 4 00003    01521 TXH +3 00000 0 00603    01522 TXH +3 00000 0 00605                                 
                   PACK.(RETURN,1)                                                  165  LM00192
 01523 TSX +0 07400 4 00003    01524 TXH +3 00000 0 75222    01525 TXH +3 00000 0 00607                                 
                   WHENEVER OUTFIL                                                  166  LM00193
 01526 NZT -0 52000 0 77455    01527 TRA +0 02000 0 01534                                                               
                     PACK.(EJECT,1)                                                 167  LM00194
 01530 TSX +0 07400 4 00003    01531 TXH +3 00000 0 00030    01532 TXH +3 00000 0 00607                                 
                   OTHERWISE                                                        168  LM00195
 01533 TRA +0 02000 0 01544                                                                                             
                     PACK.(RETURN, 2)                                               169  LM00196
 01534 TSX +0 07400 4 00003    01535 TXH +3 00000 0 75222    01536 TXH +3 00000 0 00610                                 
                     WHENEVER NOSTOP, PACK.(RETURN, 1)                              170  LM00197
 01537 NZT -0 52000 0 77461    01540 TRA +0 02000 0 01544    01541 TSX +0 07400 4 00003    01542 TXH +3 00000 0 75222   
 01543 TXH +3 00000 0 00607                                                                                             
                   END OF CONDITIONAL                                               171  LM00198
                   VECTOR VALUES EJECT = 52K                                        172  LM00200
 00030     +0 00000 0 00052                                                                                             
      GAZABE       PRPAGE.                                                          173  LM00202
 01544 TSX +0 07400 4 00005                                                                                             
                   WHENEVER .NOT. NOSTOP, WAIT.                                     174  LM00203
 01545 ZET +0 52000 0 77461    01546 TRA +0 02000 0 01550    01547 TSX +0 07400 4 00013                                 
      PREPAR       RSPAGE.                                                          175  LM00205
 01550 TSX +0 07400 4 00007                                                                                             
                   HEDPGE = 0B                                                      176  LM00206
 01551 CLA +0 50000 0 00606    01552 STO +0 60100 0 75277                                                               
                   INHDFT.                                                          177  LM00207
 01553 TSX +0 07400 4 00017                                                                                             
                   TPAGNO = TPAGNO + 1                                              178  LM00208
 01554 CLA +0 50000 0 75233    01555 ADD +0 40000 0 00607    01556 STO +0 60100 0 75233                                 
                   PACK.(RETURN, 3)                                                 179  LM00209
 01557 TSX +0 07400 4 00003    01560 TXH +3 00000 0 75222    01561 TXH +3 00000 0 00611                                 
                   SETHD.(TBUF, TLTH)                                               180  LM00210
 01562 TSX +0 07400 4 00011    01563 TXH +3 00000 0 00604    01564 TXH +3 00000 0 00605                                 
                   PACK.(TBUF(1), TLTH)                                             181  LM00211
 01565 TSX +0 07400 4 00003    01566 TXH +3 00000 0 00603    01567 TXH +3 00000 0 00605                                 
                   PACK.(RETURN, 3)                                                 182  LM00212
 01570 TSX +0 07400 4 00003    01571 TXH +3 00000 0 75222    01572 TXH +3 00000 0 00611                                 
                   LINECT = 6                                                       183  LM00213
 01573 CLA +0 50000 0 00612    01574 STO +0 60100 0 75305                                                               
                   WHENEVER PIX                                                     184  LM00214
 01575 NZT -0 52000 0 75276    01576 TRA +0 02000 0 01612                                                               
                     PRPIX.                                                         185  LM00215
 01577 TSX +0 07400 4 00006                                                                                             
                     LINECT = LINECT+MROW                                           186  LM00216
 01600 CLA +0 50000 0 75305    01601 ADD +0 40000 0 75275    01602 STO +0 60100 0 75305                                 
                     PIX = 0B                                                       187  LM00217
 01603 CLA +0 50000 0 00606    01604 STO +0 60100 0 75276                                                               
                     WHENEVER LINECT .G. BOTLIN, TRANSFER TO PPGE                   188  LM00218
 01605 CLA +0 50000 0 75305    01606 SUB +0 40200 0 75304    01607 TZE +0 10000 0 01612    01610 TMI -0 12000 0 01612   
 01611 TRA +0 02000 0 00025                                                                                             
                   END OF CONDITIONAL                                               189  LM00219
                   FUNCTION RETURN                                                  190  LM00220
 01612 TRA +0 02000 0 01620                                                                                             
                   END OF FUNCTION                                                  191  LM00221
 01613 TSX +0 07400 4 00002    01614 TXH +3 00000 0 00000    01615 SXD -0 63400 1 01614    01616 SXA +0 63400 4 01620   
 01617 TRA +0 02000 2 00001    01620 AXT +0 77400 4 00000    01621 LXA +0 53400 2 01614    01622 LXD -0 53400 1 01614   
 01623 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  192  LM00225
 01624 TRA +0 02000 0 01663                                                                                             
                 ENTRY TO BREAK.                                                    193  LM00226
 01625 TRA +0 02000 0 01630    00016 TTR +0 02100 0 01626    01626 SXA +0 63400 2 01653    01627 TSX +0 07400 2 01653   
                   ADLP.                                                            194  LM00227
 01630 TSX +0 07400 4 00015                                                                                             
                   INSERT.                                                          195  LM00228
 01631 TSX +0 07400 4 00020                                                                                             
                   WHENEVER LINECT + 1 .GE. BOTLIN                                  196  LM00230
                1      .OR.(LINECT + 2 .GE. BOTLIN .AND. DBLSPC)                    196  LM00231
                2          , PGOUT.                                                 196  LM00232
 01632 NZT -0 52000 0 75300    01633 TRA +0 02000 0 01641    01634 CLA +0 50000 0 75305    01635 ADD +0 40000 0 00610   
 01636 SUB +0 40200 0 75304    01637 TZE +0 10000 0 01646    01640 TPL +0 12000 0 01646    01641 CLA +0 50000 0 75305   
 01642 ADD +0 40000 0 00607    01643 SUB +0 40200 0 75304    01644 TZE +0 10000 0 01646    01645 TMI -0 12000 0 01647   
 01646 TSX +0 07400 4 00021                                                                                             
                   BEGIN = 0B                                                       197  LM00233
 01647 CLA +0 50000 0 00606    01650 STO +0 60100 0 75313                                                               
                   FUNCTION RETURN                                                  198  LM00234
 01651 TRA +0 02000 0 01657                                                                                             
                 END OF FUNCTION                                                    199  LM00235
 01652 TSX +0 07400 4 00002    01653 TXH +3 00000 0 00000    01654 SXD -0 63400 1 01653    01655 SXA +0 63400 4 01657   
 01656 TRA +0 02000 2 00001    01657 AXT +0 77400 4 00000    01660 LXA +0 53400 2 01653    01661 LXD -0 53400 1 01653   
 01662 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  200  LM00239
 01663 TRA +0 02000 0 01742                                                                                             
                 ENTRY TO INHDFT.                                                   201  LM00240
 01664 TRA +0 02000 0 01667    00017 TTR +0 02100 0 01665    01665 SXA +0 63400 2 01732    01666 TSX +0 07400 2 01732   
                   PGPOS = TPGPOS                                                   202  LM00241
 01667 CLA +0 50000 0 75272    01670 STO +0 60100 0 76126                                                               
                   FTSW = TFTSW                                                     203  LM00242
 01671 CLA +0 50000 0 75271    01672 STO +0 60100 0 76125                                                               
                   PGE = TPGE                                                       204  LM00243
 01673 CLA +0 50000 0 75270    01674 STO +0 60100 0 76130                                                               
                   THROUGH TPFLP, FOR I = 1, 1, I .G. TPRLTH                        205  LM00244
 01675 CLA +0 50000 0 00607    01676 STO +0 60100 0 00032    01677 TRA +0 02000 0 01703    01700 CLA +0 50000 0 00032   
 01701 ADD +0 40000 0 00607    01702 STO +0 60100 0 00032    01703 CLA +0 50000 0 00032    01704 SUB +0 40200 0 75235   
 01705 TZE +0 10000 0 01707    01706 TPL +0 12000 0 01714                                                               
      TPFLP          PREFIX(I) = TPRF(I)                                            206  LM00245
 01707 LXA +0 53400 1 00032    01710 LXA +0 53400 2 00032    01711 CLA +0 50000 2 75267    01712 STO +0 60100 1 76123   
 01713 TRA +0 02000 0 01700                                                                                             
                   PRLTH = TPRLTH                                                   207  LM00246
 01714 CLA +0 50000 0 75235    01715 STO +0 60100 0 76071                                                               
                   HDPOS = THDPOS                                                   208  LM00247
 01716 CLA +0 50000 0 75234    01717 STO +0 60100 0 76702                                                               
                   PAGENO = TPAGNO                                                  209  LM00248
 01720 CLA +0 50000 0 75233    01721 STO +0 60100 0 76127                                                               
                   PGMOD = TPGMOD                                                   210  LM00249
 01722 CLA +0 50000 0 75232    01723 STO +0 60100 0 76124                                                               
                   BOTLIN = TBTLIN                                                  211  LM00250
 01724 CLA +0 50000 0 75274    01725 STO +0 60100 0 75304                                                               
                   BOTPAG = TBTPAG                                                  212  LM00251
 01726 CLA +0 50000 0 75273    01727 STO +0 60100 0 75231                                                               
                   FUNCTION RETURN                                                  213  LM00252
 01730 TRA +0 02000 0 01736                                                                                             
                 END OF FUNCTION                                                    214  LM00254
 01731 TSX +0 07400 4 00002    01732 TXH +3 00000 0 00000    01733 SXD -0 63400 1 01732    01734 SXA +0 63400 4 01736   
 01735 TRA +0 02000 2 00001    01736 AXT +0 77400 4 00000    01737 LXA +0 53400 2 01732    01740 LXD -0 53400 1 01732   
 01741 TRA +0 02000 4 00001                                                                                             
                 END OF FUNCTION                                                    215  LM00258
 01742 TSX +0 07400 4 00002    01743 TXH +3 00000 0 00000    01744 SXD -0 63400 1 01743    01745 SXA +0 63400 4 01754   
 01746 CLA +0 50000 4 00001    01747 STA +0 62100 0 00671    01750 STA +0 62100 0 00713    01751 STA +0 62100 0 00716   
 01752 STO +0 60100 0 01033    01753 TRA +0 02000 2 00001    01754 AXT +0 77400 4 00000    01755 LXA +0 53400 2 01743   
 01756 LXD -0 53400 1 01743    01757 TRA +0 02000 4 00001                                                               
1     MAD PROGRAM LISTING ... ... ...                 FILE  ADJUST   MAD            02/08/68    1244.0
-                 
                 ..  SUBROUTINE TO FILL OUT A LINE WITH BLANKS.                                        LM00001    
                     (TYPE JUSTIFICATION.)                                                             LM00002    
                                                                                                       LM00003    
                 ..  J. H. SALTZER, NOVEMBER, 1964                                                     LM00004    
                                                                                                       LM00005    
                  EXTERNAL FUNCTION (LINE, LENGTH, RMARG, NCHARS)                                 *001 LM00006    
                                                                                                       LM00007    
                  NORMAL MODE IS INTEGER                                                          *002 LM00008    
                  BOOLEAN FIRST, CHR                                                              *003 LM00009    
                  VECTOR VALUES BLANK = 0060K                                                     *004 LM00010    
                                                                                                       LM00011    
                  ENTRY TO ADJUST.                                                                *005 LM00012    
                  WHENEVER NCHARS .GE. RMARG, FUNCTION RETURN                                     *006 LM00013    
                                                                                                       LM00014    
                 .. MAKE SURE LINE IS FILLABLE.                                                        LM00015    
                                                                                                       LM00016    
                  CHR = 0B                                                                        *007 LM00017    
                  FSTCH = 1                                                                       *008 LM00018    
                  THROUGH CKSP, FOR I = 1, 1, I .G. LENGTH                                        *009 LM00019    
                    WHENEVER LINE(I) .NE. BLANK .AND. (.NOT.CHR)                                  *010 LM00020    
                      FSTCH = I                                                                   *011 LM00021    
                      CHR = 1B                                                                    *012 LM00022    
                    END OF CONDITIONAL                                                            *013 LM00023    
       CKSP         WHENEVER LINE(I) .E. BLANK .AND. CHR, TRANSFER TO OK                          *014 LM00024    
                  FUNCTION RETURN                                                                 *015 LM00025    
                                                                                                       LM00026    
       OK         FIRST = 1B                                                                      *016 LM00027    
                                                                                                       LM00028    
                 .. SCAN LINE BACKWARDS, INSERT SPACES WHERE THERE ARE SPACES                          LM00029    
                                                                                                       LM00030    
                  TMARG = RMARG + LENGTH - NCHARS                                                 *017 LM00031    
       LOOP       PNTR = TMARG                                                                    *018 LM00032    
                  DEL = -1                                                                        *019 LM00033    
                  LNOW = LENGTH                                                                   *020 LM00034    
                  THROUGH BACKLP, FOR J = LENGTH, -1, J .L. FSTCH                                 *021 LM00035    
       EN1          LINE(PNTR) = LINE(J)                                                          *022 LM00036    
                    PNTR = PNTR + DEL                                                             *023 LM00037    
                    WHENEVER LINE(J) .E. BLANK .AND. (FIRST .OR. (J/2)*2 .E. J)                   *024 LM00038    
                         LINE(PNTR) = BLANK                                                       *025 LM00039    
                         PNTR = PNTR + DEL                                                        *026 LM00040    
                         LENGTH = LENGTH + 1                                                      *027 LM00041    
                         NCHARS = NCHARS + 1                                                      *028 LM00042    
                         WHENEVER NCHARS .GE. RMARG, FUNCTION RETURN                              *029 LM00043    
                    END OF CONDITIONAL                                                            *030 LM00044    
       BACKLP       WHENEVER DEL .G. 0, TRANSFER TO FORLP                                         *031 LM00045    
                                                                                                       LM00046    
                 .. IF NOTHING WAS ACCOMPLISHED, GIVE UP.                                              LM00047    
                                                                                                       LM00048    
                  WHENEVER LENGTH .E. LNOW, FUNCTION RETURN                                       *032 LM00049    
                                                                                                       LM00050    
                 .. NOW SCAN FORWARDS.                                                                 LM00051    
                                                                                                       LM00052    
                  FIRST = 0B                                                                      *033 LM00053    
                  DEL = +1                                                                        *034 LM00054    
                  BEGIN = PNTR + 1                                                                *035 LM00055    
                  PNTR = FSTCH                                                                    *036 LM00056    
                  THROUGH FORLP, FOR J = BEGIN, +1, J .G. TMARG                                   *037 LM00057    
                    TRANSFER TO EN1                                                               *038 LM00058    
       FORLP        CONTINUE                                                                      *039 LM00059    
                  TRANSFER TO LOOP                                                                *040 LM00060    
                                                                                                       LM00061    
                 .. SUBROUTINE TO CENTER A LINE.                                                       LM00062    
                                                                                                       LM00063    
                  ENTRY TO CENTER.                                                                *041 LM00064    
                  WHENEVER NCHARS .GE. RMARG-1, FUNCTION RETURN                                   *042 LM00065    
                  DEL = (RMARG-NCHARS)/2                                                          *043 LM00066    
                  THROUGH CTRLP, FOR I = LENGTH, -1, I .L. 1                                      *044 LM00067    
       CTRLP        LINE(I+DEL) = LINE(I)                                                         *045 LM00068    
                  THROUGH FILLUP, FOR I = 1, 1, I .G. DEL                                         *046 LM00069    
       FILLUP       LINE(I) = BLANK                                                               *047 LM00070    
                  LENGTH = LENGTH + DEL                                                           *048 LM00071    
                  NCHARS = NCHARS + DEL                                                           *049 LM00072    
                  FUNCTION RETURN                                                                 *050 LM00073    
                                                                                                       LM00074    
                  END OF FUNCTION                                                                 *051 LM00075    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00377 TRANSFER VECTOR LENGTH  00001 PROGRAM BEGINS    00025
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      CENTER 00233   0        ADJUST 00026   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BACKLP 00001   4        CKSP   00001   4        FILLUP 00001   4        I      00014   1        OK     00005   4  
      BEGIN  00006   1        CTRLP  00001   4        FIRST  00012   2        J      00015   1        PNTR   00017   1  
      BLANK  00007 A 1        DEL    00011   1        FORLP  00003   4        LNOW   00016   1        TMARG  00020   1  
      CHR    00010   2        EN1    00002   4        FSTCH  00013   1        LOOP   00004   4                          
0FUNCTION DICTIONARY    
      EXIT   00000   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00023 +000000000002     00021 +000000000000     00022 +000000000001     00024 +233000000000                            
0STATEMENT DICTIONARY   
 00002 TXL -300130000124       00003 TXL -300231000230       00004 TXL -300106000104       00005 TXL -300100000076      
0PROGRAM    
                 EXTERNAL FUNCTION (LINE, LENGTH, RMARG, NCHARS)                    001  LM00006
                 NORMAL MODE IS INTEGER                                             002  LM00008
                 BOOLEAN FIRST, CHR                                                 003  LM00009
                 VECTOR VALUES BLANK = 0060K                                        004  LM00010
 00007     +0 00000 0 00060                                                                                             
                 ENTRY TO ADJUST.                                                   005  LM00012
 00025 TRA +0 02000 0 00030    00026 SXA +0 63400 2 00320    00027 TSX +0 07400 2 00320                                 
                 WHENEVER NCHARS .GE. RMARG, FUNCTION RETURN                        006  LM00013
 00030 CLA +0 50000 0 00024    00031 SUB +0 40200 0 00024    00032 TZE +0 10000 0 00034    00033 TMI -0 12000 0 00035   
 00034 TRA +0 02000 0 00371                                                                                             
                 CHR = 0B                                                           007  LM00017
 00035 CLA +0 50000 0 00021    00036 STO +0 60100 0 00010                                                               
                 FSTCH = 1                                                          008  LM00018
 00037 CLA +0 50000 0 00022    00040 STO +0 60100 0 00013                                                               
                 THROUGH CKSP, FOR I = 1, 1, I .G. LENGTH                           009  LM00019
 00041 CLA +0 50000 0 00022    00042 STO +0 60100 0 00014    00043 TRA +0 02000 0 00047    00044 CLA +0 50000 0 00014   
 00045 ADD +0 40000 0 00022    00046 STO +0 60100 0 00014    00047 CLA +0 50000 0 00014    00050 SUB +0 40200 0 00024   
 00051 TZE +0 10000 0 00053    00052 TPL +0 12000 0 00075                                                               
                   WHENEVER LINE(I) .NE. BLANK .AND. (.NOT.CHR)                     010  LM00020
 00053 ZET +0 52000 0 00010    00054 TRA +0 02000 0 00065    00055 LXA +0 53400 1 00014    00056 CLA +0 50000 1 00024   
 00057 SUB +0 40200 0 00007    00060 TZE +0 10000 0 00065                                                               
                     FSTCH = I                                                      011  LM00021
 00061 CLA +0 50000 0 00014    00062 STO +0 60100 0 00013                                                               
                     CHR = 1B                                                       012  LM00022
 00063 CLA +0 50000 0 00022    00064 STO +0 60100 0 00010                                                               
                   END OF CONDITIONAL                                               013  LM00023
       CKSP        WHENEVER LINE(I) .E. BLANK .AND. CHR, TRANSFER TO OK             014  LM00024
 00065 NZT -0 52000 0 00010    00066 TRA +0 02000 0 00074    00067 LXA +0 53400 1 00014    00070 CLA +0 50000 1 00024   
 00071 SUB +0 40200 0 00007    00072 TNZ -0 10000 0 00074    00073 TRA +0 02000 0 00005    00074 TRA +0 02000 0 00044   
                 FUNCTION RETURN                                                    015  LM00025
 00075 TRA +0 02000 0 00371                                                                                             
       OK        FIRST = 1B                                                         016  LM00027
 00076 CLA +0 50000 0 00022    00077 STO +0 60100 0 00012                                                               
                 TMARG = RMARG + LENGTH - NCHARS                                    017  LM00031
 00100 CLA +0 50000 0 00024    00101 ADD +0 40000 0 00024    00102 SUB +0 40200 0 00024    00103 STO +0 60100 0 00020   
       LOOP      PNTR = TMARG                                                       018  LM00032
 00104 CLA +0 50000 0 00020    00105 STO +0 60100 0 00017                                                               
                 DEL = -1                                                           019  LM00033
 00106 CLS +0 50200 0 00022    00107 STO +0 60100 0 00011                                                               
                 LNOW = LENGTH                                                      020  LM00034
 00110 CLA +0 50000 0 00024    00111 STO +0 60100 0 00016                                                               
                 THROUGH BACKLP, FOR J = LENGTH, -1, J .L. FSTCH                    021  LM00035
 00112 CLA +0 50000 0 00024    00113 STO +0 60100 0 00015    00114 TRA +0 02000 0 00120    00115 CLS +0 50200 0 00022   
 00116 ADD +0 40000 0 00015    00117 STO +0 60100 0 00015    00120 CLA +0 50000 0 00015    00121 SUB +0 40200 0 00013   
 00122 TZE +0 10000 0 00124    00123 TMI -0 12000 0 00200                                                               
       EN1         LINE(PNTR) = LINE(J)                                             022  LM00036
 00124 LXA +0 53400 1 00017    00125 LXA +0 53400 2 00015    00126 CLA +0 50000 2 00024    00127 STO +0 60100 1 00024   
                   PNTR = PNTR + DEL                                                023  LM00037
 00130 CLA +0 50000 0 00017    00131 ADD +0 40000 0 00011    00132 STO +0 60100 0 00017                                 
                   WHENEVER LINE(J) .E. BLANK .AND. (FIRST .OR. (J/2)*2 .E. J)      024  LM00038
 00133 LDQ +0 56000 0 00015    00134 PXD -0 75400 0 00000    00135 LLS +0 76300 0 00000    00136 DVP +0 22100 0 00023   
 00137 MPY +0 20000 0 00023    00140 XCA +0 13100 0 00000    00141 SUB +0 40200 0 00015    00142 TZE +0 10000 0 00145   
 00143 NZT -0 52000 0 00012    00144 TRA +0 02000 0 00172    00145 LXA +0 53400 1 00015    00146 CLA +0 50000 1 00024   
 00147 SUB +0 40200 0 00007    00150 TNZ -0 10000 0 00172                                                               
                        LINE(PNTR) = BLANK                                          025  LM00039
 00151 LXA +0 53400 1 00017    00152 CLA +0 50000 0 00007    00153 STO +0 60100 1 00024                                 
                        PNTR = PNTR + DEL                                           026  LM00040
 00154 CLA +0 50000 0 00017    00155 ADD +0 40000 0 00011    00156 STO +0 60100 0 00017                                 
                        LENGTH = LENGTH + 1                                         027  LM00041
 00157 CLA +0 50000 0 00024    00160 ADD +0 40000 0 00022    00161 STO +0 60100 0 00024                                 
                        NCHARS = NCHARS + 1                                         028  LM00042
 00162 CLA +0 50000 0 00024    00163 ADD +0 40000 0 00022    00164 STO +0 60100 0 00024                                 
                        WHENEVER NCHARS .GE. RMARG, FUNCTION RETURN                 029  LM00043
 00165 CLA +0 50000 0 00024    00166 SUB +0 40200 0 00024    00167 TZE +0 10000 0 00171    00170 TMI -0 12000 0 00172   
 00171 TRA +0 02000 0 00371                                                                                             
                   END OF CONDITIONAL                                               030  LM00044
       BACKLP      WHENEVER DEL .G. 0, TRANSFER TO FORLP                            031  LM00045
 00172 CLA +0 50000 0 00011    00173 SUB +0 40200 0 00021    00174 TZE +0 10000 0 00177    00175 TMI -0 12000 0 00177   
 00176 TRA +0 02000 0 00003    00177 TRA +0 02000 0 00115                                                               
                 WHENEVER LENGTH .E. LNOW, FUNCTION RETURN                          032  LM00049
 00200 CLA +0 50000 0 00024    00201 SUB +0 40200 0 00016    00202 TNZ -0 10000 0 00204    00203 TRA +0 02000 0 00371   
                 FIRST = 0B                                                         033  LM00053
 00204 CLA +0 50000 0 00021    00205 STO +0 60100 0 00012                                                               
                 DEL = +1                                                           034  LM00054
 00206 CLA +0 50000 0 00022    00207 STO +0 60100 0 00011                                                               
                 BEGIN = PNTR + 1                                                   035  LM00055
 00210 CLA +0 50000 0 00017    00211 ADD +0 40000 0 00022    00212 STO +0 60100 0 00006                                 
                 PNTR = FSTCH                                                       036  LM00056
 00213 CLA +0 50000 0 00013    00214 STO +0 60100 0 00017                                                               
                 THROUGH FORLP, FOR J = BEGIN, +1, J .G. TMARG                      037  LM00057
 00215 CLA +0 50000 0 00006    00216 STO +0 60100 0 00015    00217 TRA +0 02000 0 00223    00220 CLA +0 50000 0 00015   
 00221 ADD +0 40000 0 00022    00222 STO +0 60100 0 00015    00223 CLA +0 50000 0 00015    00224 SUB +0 40200 0 00020   
 00225 TZE +0 10000 0 00227    00226 TPL +0 12000 0 00231                                                               
                   TRANSFER TO EN1                                                  038  LM00058
 00227 TRA +0 02000 0 00002                                                                                             
       FORLP       CONTINUE                                                         039  LM00059
 00230 TRA +0 02000 0 00220                                                                                             
                 TRANSFER TO LOOP                                                   040  LM00060
 00231 TRA +0 02000 0 00004                                                                                             
                 ENTRY TO CENTER.                                                   041  LM00064
 00232 TRA +0 02000 0 00235    00233 SXA +0 63400 2 00320    00234 TSX +0 07400 2 00320                                 
                 WHENEVER NCHARS .GE. RMARG-1, FUNCTION RETURN                      042  LM00065
 00235 CLA +0 50000 0 00024    00236 SUB +0 40200 0 00022    00237 CHS +0 76000 0 00002    00240 ADD +0 40000 0 00024   
 00241 TZE +0 10000 0 00243    00242 TMI -0 12000 0 00244    00243 TRA +0 02000 0 00371                                 
                 DEL = (RMARG-NCHARS)/2                                             043  LM00066
 00244 CLA +0 50000 0 00024    00245 SUB +0 40200 0 00024    00246 LRS +0 76500 0 00043    00247 DVP +0 22100 0 00023   
 00250 STQ -0 60000 0 00011                                                                                             
                 THROUGH CTRLP, FOR I = LENGTH, -1, I .L. 1                         044  LM00067
 00251 CLA +0 50000 0 00024    00252 STO +0 60100 0 00014    00253 TRA +0 02000 0 00257    00254 CLS +0 50200 0 00022   
 00255 ADD +0 40000 0 00014    00256 STO +0 60100 0 00014    00257 CLA +0 50000 0 00014    00260 SUB +0 40200 0 00022   
 00261 TZE +0 10000 0 00263    00262 TMI -0 12000 0 00272                                                               
       CTRLP       LINE(I+DEL) = LINE(I)                                            045  LM00068
 00263 CLA +0 50000 0 00014    00264 ADD +0 40000 0 00011    00265 PAX +0 73400 1 00000    00266 LXA +0 53400 2 00014   
 00267 CLA +0 50000 2 00024    00270 STO +0 60100 1 00024    00271 TRA +0 02000 0 00254                                 
                 THROUGH FILLUP, FOR I = 1, 1, I .G. DEL                            046  LM00069
 00272 CLA +0 50000 0 00022    00273 STO +0 60100 0 00014    00274 TRA +0 02000 0 00300    00275 CLA +0 50000 0 00014   
 00276 ADD +0 40000 0 00022    00277 STO +0 60100 0 00014    00300 CLA +0 50000 0 00014    00301 SUB +0 40200 0 00011   
 00302 TZE +0 10000 0 00304    00303 TPL +0 12000 0 00310                                                               
       FILLUP      LINE(I) = BLANK                                                  047  LM00070
 00304 LXA +0 53400 1 00014    00305 CLA +0 50000 0 00007    00306 STO +0 60100 1 00024    00307 TRA +0 02000 0 00275   
                 LENGTH = LENGTH + DEL                                              048  LM00071
 00310 CLA +0 50000 0 00024    00311 ADD +0 40000 0 00011    00312 STO +0 60100 0 00024                                 
                 NCHARS = NCHARS + DEL                                              049  LM00072
 00313 CLA +0 50000 0 00024    00314 ADD +0 40000 0 00011    00315 STO +0 60100 0 00024                                 
                 FUNCTION RETURN                                                    050  LM00073
 00316 TRA +0 02000 0 00371                                                                                             
                 END OF FUNCTION                                                    051  LM00075
 00317 TSX +0 07400 4 00000    00320 TXH +3 00000 0 00000    00321 SXD -0 63400 1 00320    00322 SXA +0 63400 4 00371   
 00323 CLA +0 50000 4 00001    00324 STA +0 62100 0 00056    00325 STA +0 62100 0 00070    00326 STA +0 62100 0 00126   
 00327 STA +0 62100 0 00127    00330 STA +0 62100 0 00146    00331 STA +0 62100 0 00153    00332 STA +0 62100 0 00267   
 00333 STA +0 62100 0 00270    00334 STA +0 62100 0 00306    00335 CLA +0 50000 4 00002    00336 STA +0 62100 0 00050   
 00337 STA +0 62100 0 00101    00340 STA +0 62100 0 00110    00341 STA +0 62100 0 00112    00342 STA +0 62100 0 00157   
 00343 STA +0 62100 0 00161    00344 STA +0 62100 0 00200    00345 STA +0 62100 0 00251    00346 STA +0 62100 0 00310   
 00347 STA +0 62100 0 00312    00350 CLA +0 50000 4 00003    00351 STA +0 62100 0 00031    00352 STA +0 62100 0 00100   
 00353 STA +0 62100 0 00166    00354 STA +0 62100 0 00235    00355 STA +0 62100 0 00244    00356 CLA +0 50000 4 00004   
 00357 STA +0 62100 0 00030    00360 STA +0 62100 0 00102    00361 STA +0 62100 0 00162    00362 STA +0 62100 0 00164   
 00363 STA +0 62100 0 00165    00364 STA +0 62100 0 00240    00365 STA +0 62100 0 00245    00366 STA +0 62100 0 00313   
 00367 STA +0 62100 0 00315    00370 TRA +0 02000 2 00001    00371 AXT +0 77400 4 00000    00372 LXA +0 53400 2 00320   
 00373 LXD -0 53400 1 00320    00374 TRA +0 02000 4 00001                                                               
1     MAD PROGRAM LISTING ... ... ...                 FILE    HDFT   MAD            02/08/68    1244.5
-                 
                 ..  ROUTINE TO SET UP HEADER AND FOOTER HFLINES.                                      LM00001    
                 ..                                                                                    LM00002    
                 ..  J. H. SALTZER, DECEMBER, 1965                                                     LM00003    
                                                                                                       LM00004    
                  EXTERNAL FUNCTION(HFLINE, HFLTH)                                                *001 LM00005    
                                                                                                       LM00006    
                  NORMAL MODE IS INTEGER                                                          *002 LM00007    
                  BOOLEAN EVENPG                                                                  *003 LM00008    
                  VECTOR VALUES BLANK = 0060K                                                     *004 LM00009    
                  INSERT FILE RCOM                                                                *005 LM00010    
                                                                                                  *005 LM00001    
                 ..  RUNOFF COMMON PACKAGE.                                                       *005 LM00002    
                                                                                                  *005 LM00003    
                  NORMAL MODE IS INTEGER                                                          *006 LM00004    
                                                                                                       LM00005    
                  PROGRAM COMMON NOSTOP, NOWAIT, FSTPAG, PRINAM, OUTFIL                           *007 LM00006    
                  PROGRAM COMMON HDLTH, HEAD(360), HDPOS                                          *008 LM00007    
                  PROGRAM COMMON LINE(360)                                                        *009 LM00008    
                  PROGRAM COMMON PGE, PAGENO, PGPOS, FTSW, PGMOD                                  *010 LM00009    
                  PROGRAM COMMON PREFIX(25), PRLTH                                                *011 LM00010    
                  PROGRAM COMMON RMARG                                                            *012 LM00011    
                  PROGRAM COMMON WRD, SIZE, COUNT, WORD(360)                                      *013 LM00012    
                  PROGRAM COMMON BEGIN, FILL, ADJST, NCHARS, LENGTH                               *014 LM00013    
                  PROGRAM COMMON LMARG, LINECT, BOTLIN, CNTR, FILSW                               *015 LM00014    
                  PROGRAM COMMON FLAGSW, DBLSPC, HEDPGE, PIX                                      *016 LM00015    
                  PROGRAM COMMON MROW, TBTLIN, TBTPAG                                             *017 LM00016    
                  PROGRAM COMMON TPGPOS, TFTSW, TPGE, TPRF(25)                                    *018 LM00017    
                  PROGRAM COMMON TPRLTH, THDPOS, TPAGNO, TPGMOD                                   *019 LM00018    
                  PROGRAM COMMON BOTPAG, FLAG(3)                                                  *020 LM00019    
                  PROGRAM COMMON BLANK, BCKSPC, RETURN(3)                                         *021 LM00020    
                  PROGRAM COMMON TAB, PERIOD, QUES, EXCLAM                                        *022 LM00021    
                  PROGRAM COMMON COLON, HYPHEN, NULL                                              *023 LM00022    
                                                                                                       LM00023    
                  BOOLEAN NOSTOP, NOWAIT, FTSW, PGE, OUTFIL                                       *024 LM00024    
                  BOOLEAN ADJST                                                                   *025 LM00025    
                  BOOLEAN WRD, FILL, BEGIN, CNTR, FILSW, FLAGSW                                   *026 LM00026    
                  BOOLEAN DBLSPC, HEDPGE, PIX, TPGE, TFTSW                                        *027 LM00027    
                                                                                                       LM00028    
                 ..  END OF RUNOFF COMMON PACKAGE                                                      LM00029    
                                                                                                       LM00030    
                                                                                                  *005 LM00011    
                  ENTRY TO SETHD.                                                                 *028 LM00012    
                    I = 1                                                                         *029 LM00013    
                    HFLTH = 0                                                                     *030 LM00014    
                    EVENPG = (PAGENO/2)*2 .E. PAGENO                                              *031 LM00015    
                    WHENEVER HDLTH .E. 0, TRANSFER TO PAGET                                       *032 LM00016    
                                                                                                       LM00017    
                 ..  SET Z TO POSITION OF HEADER.                                                      LM00018    
                                                                                                       LM00019    
                    WHENEVER HDPOS .E. $CENTER$                                                   *033 LM00020    
                      Z = (RMARG - HDLTH) / 2                                                     *034 LM00021    
                    OR WHENEVER HDPOS .E. $FACING$ .AND. EVENPG                                   *035 LM00022    
                      Z = 0                                                                       *036 LM00023    
                    OR WHENEVER HDPOS .E. $MARGIN$ .OR. HDPOS .E. $FACING$                        *037 LM00024    
                      Z = RMARG - HDLTH                                                           *038 LM00025    
                    OR WHENEVER HDPOS .E. $PPOSED$                                                *039 LM00026    
                      WHENEVER EVENPG .AND. PGPOS .E. $FACING$                                    *040 LM00027    
                        Z = RMARG - HDLTH                                                         *041 LM00028    
                      OTHERWISE                                                                   *042 LM00029    
                        Z = 0                                                                     *043 LM00030    
                      END OF CONDITIONAL                                                          *044 LM00031    
                    END OF CONDITIONAL                                                            *045 LM00032    
                                                                                                       LM00033    
                 ..  PACK BLANKS AHEAD OF THE HEADER.                                                  LM00034    
                                                                                                       LM00035    
                    THROUGH PADHD, FOR I = 1, 1, I .G. Z                                          *046 LM00036    
      PADHD           HFLINE(I) = BLANK                                                           *047 LM00037    
                                                                                                       LM00038    
                 ..  NOW INSERT THE HEADER.                                                            LM00039    
                                                                                                       LM00040    
                    THROUGH INHEAD, FOR I = Z+1, 1, I .G. (Z+HDLTH)                               *048 LM00041    
      INHEAD          HFLINE(I) = HEAD(I-Z)                                                       *049 LM00042    
                    HFLTH = I-1                                                                   *050 LM00043    
                                                                                                       LM00044    
                 ..  GO GET THE PAGE NUMBER, IF ANY.                                                   LM00045    
                                                                                                       LM00046    
      PAGET         WHENEVER .NOT.FTSW, TRANSFER TO FOOT                                          *051 LM00047    
                    FUNCTION RETURN                                                               *052 LM00048    
                                                                                                       LM00049    
                  ENTRY TO SETFT.                                                                 *053 LM00050    
                    HFLTH = 0                                                                     *054 LM00051    
                    WHENEVER .NOT.FTSW, FUNCTION RETURN                                           *055 LM00052    
                    I = 1                                                                         *056 LM00053    
                    EVENPG = (PAGENO/2)*2 .NE. PAGENO                                             *057 LM00054    
                                                                                                       LM00055    
      FOOT          WHENEVER .NOT. PGE, FUNCTION RETURN                                           *058 LM00056    
                    NMLTH = NUMCON.(PAGENO, PREFIX(PRLTH), PGMOD) + PRLTH                         *059 LM00057    
                                                                                                       LM00058    
                 ..  SET Z TO POSITION OF PAGE NUMBER.                                                 LM00059    
                                                                                                       LM00060    
                    WHENEVER PGPOS .E. $CENTER$                                                   *060 LM00061    
                      Z = (RMARG-NMLTH)/2                                                         *061 LM00062    
                    OR WHENEVER PGPOS .E. $FACING$ .AND. EVENPG                                   *062 LM00063    
                      Z = 0                                                                       *063 LM00064    
                    OTHERWISE                                                                     *064 LM00065    
                      Z = RMARG - NMLTH                                                           *065 LM00066    
                    END OF CONDITIONAL                                                            *066 LM00067    
                                                                                                       LM00068    
                 ..  PACK BLANKS IF NOT ALREADY THERE.                                                 LM00069    
                                                                                                       LM00070    
                    THROUGH PADFT, FOR I = I, 1, I .G. Z                                          *067 LM00071    
      PADFT           HFLINE(I) = BLANK                                                           *068 LM00072    
                                                                                                       LM00073    
                 ..  INSERT PAGE NUMBER.                                                               LM00074    
                                                                                                       LM00075    
                    THROUGH INPAGE, FOR I = Z+1, 1, I .G. (Z+NMLTH)                               *069 LM00076    
      INPAGE          HFLINE(I) = PREFIX(I-Z)                                                     *070 LM00077    
                                                                                                       LM00078    
                    WHENEVER HFLTH .L. I-1, HFLTH = I-1                                           *071 LM00079    
                    FUNCTION RETURN                                                               *072 LM00080    
                                                                                                       LM00081    
                  END OF FUNCTION                                                                 *073 LM00082    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00363 TRANSFER VECTOR LENGTH  00002 PROGRAM BEGINS    00021 FIRST UNUSED COMMON/ERASABLE  75207
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      SETFT  00173   0        SETHD  00022   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ADJST  75311  C2        FLAG   75230 AC1        LINECT 75305  C1        PERIOD 75215  C1        TBTLIN 75274  C1  
      BCKSPC 75223  C1        FLAGSW 75301  C2        LINE   76701 AC1        PGE    76130  C2        TBTPAG 75273  C1  
      BEGIN  75313  C2        FOOT   00003   4        LMARG  75306  C1        PGMOD  76124  C1        TFTSW  75271  C2  
      BLANK  75224 AC1        FSTPAG 77457  C1        MROW   75275  C1        PGPOS  76126  C1        THDPOS 75234  C1  
      BOTLIN 75304  C1        FTSW   76125  C2        NCHARS 75310  C1        PIX    75276  C2        TPAGNO 75233  C1  
      BOTPAG 75231  C1        HDLTH  77454  C1        NMLTH  00007   1        PREFIX 76123 AC1        TPGE   75270  C2  
      CNTR   75303  C2        HDPOS  76702  C1        NOSTOP 77461  C2        PRINAM 77456  C1        TPGMOD 75232  C1  
      COLON  75212  C1        HEAD   77453 AC1        NOWAIT 77460  C2        PRLTH  76071  C1        TPGPOS 75272  C1  
      COUNT  76065  C1        HEDPGE 75277  C2        NULL   75210  C1        QUES   75214  C1        TPRF   75267 AC1  
      DBLSPC 75300  C2        HYPHEN 75211  C1        OUTFIL 77455  C2        RETURN 75222 AC1        TPRLTH 75235  C1  
      EVENPG 00005   2        INHEAD 00002   4        PADFT  00002   4        RMARG  76070  C1        WORD   76064 AC1  
      EXCLAM 75213  C1        INPAGE 00002   4        PADHD  00002   4        SIZE   76066  C1        WRD    76067  C2  
      FILL   75312  C2        I      00006   1        PAGENO 76127  C1        TAB    75216  C1        Z      00010   1  
      FILSW  75302  C2        LENGTH 75307  C1        PAGET  00004   4                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1        NUMCON 00001   1                                                                          
0ABSOLUTE CONSTANTS     
 00020 -074746622524     00017 -042151273145     00016 +262123314527     00014 +232545632551     00013 +000000000002    
 00011 +000000000000     00012 +000000000001     00015 +233000000000                                                    
0STATEMENT DICTIONARY   
 00003 TXL -300223000220       00004 TXL -300171000166                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION(HFLINE, HFLTH)                                   001  LM00005
                 NORMAL MODE IS INTEGER                                             002  LM00007
                 BOOLEAN EVENPG                                                     003  LM00008
                 VECTOR VALUES BLANK = 0060K                                        004  LM00009
 75224     +0 00000 0 00060                                                                                             
                 INSERT FILE RCOM                                                   005  LM00010
                 NORMAL MODE IS INTEGER                                             006  LM00004
                 PROGRAM COMMON NOSTOP, NOWAIT, FSTPAG, PRINAM, OUTFIL              007  LM00006
                 PROGRAM COMMON HDLTH, HEAD(360), HDPOS                             008  LM00007
                 PROGRAM COMMON LINE(360)                                           009  LM00008
                 PROGRAM COMMON PGE, PAGENO, PGPOS, FTSW, PGMOD                     010  LM00009
                 PROGRAM COMMON PREFIX(25), PRLTH                                   011  LM00010
                 PROGRAM COMMON RMARG                                               012  LM00011
                 PROGRAM COMMON WRD, SIZE, COUNT, WORD(360)                         013  LM00012
                 PROGRAM COMMON BEGIN, FILL, ADJST, NCHARS, LENGTH                  014  LM00013
                 PROGRAM COMMON LMARG, LINECT, BOTLIN, CNTR, FILSW                  015  LM00014
                 PROGRAM COMMON FLAGSW, DBLSPC, HEDPGE, PIX                         016  LM00015
                 PROGRAM COMMON MROW, TBTLIN, TBTPAG                                017  LM00016
                 PROGRAM COMMON TPGPOS, TFTSW, TPGE, TPRF(25)                       018  LM00017
                 PROGRAM COMMON TPRLTH, THDPOS, TPAGNO, TPGMOD                      019  LM00018
                 PROGRAM COMMON BOTPAG, FLAG(3)                                     020  LM00019
                 PROGRAM COMMON BLANK, BCKSPC, RETURN(3)                            021  LM00020
                 PROGRAM COMMON TAB, PERIOD, QUES, EXCLAM                           022  LM00021
                 PROGRAM COMMON COLON, HYPHEN, NULL                                 023  LM00022
                 BOOLEAN NOSTOP, NOWAIT, FTSW, PGE, OUTFIL                          024  LM00024
                 BOOLEAN ADJST                                                      025  LM00025
                 BOOLEAN WRD, FILL, BEGIN, CNTR, FILSW, FLAGSW                      026  LM00026
                 BOOLEAN DBLSPC, HEDPGE, PIX, TPGE, TFTSW                           027  LM00027
                 ENTRY TO SETHD.                                                    028  LM00012
 00021 TRA +0 02000 0 00024    00022 SXA +0 63400 2 00336    00023 TSX +0 07400 2 00336                                 
                   I = 1                                                            029  LM00013
 00024 CLA +0 50000 0 00012    00025 STO +0 60100 0 00006                                                               
                   HFLTH = 0                                                        030  LM00014
 00026 CLA +0 50000 0 00011    00027 STO +0 60100 0 00000                                                               
                   EVENPG = (PAGENO/2)*2 .E. PAGENO                                 031  LM00015
 00030 LDQ +0 56000 0 76127    00031 PXD -0 75400 0 00000    00032 LLS +0 76300 0 00000    00033 DVP +0 22100 0 00013   
 00034 MPY +0 20000 0 00013    00035 XCA +0 13100 0 00000    00036 SUB +0 40200 0 76127    00037 TZE +0 10000 0 00042   
 00040 PXD -0 75400 0 00000    00041 TRA +0 02000 0 00043    00042 CLA +0 50000 0 00012    00043 STO +0 60100 0 00005   
                   WHENEVER HDLTH .E. 0, TRANSFER TO PAGET                          032  LM00016
 00044 CLA +0 50000 0 77454    00045 SUB +0 40200 0 00011    00046 TNZ -0 10000 0 00050    00047 TRA +0 02000 0 00004   
                   WHENEVER HDPOS .E. $CENTER$                                      033  LM00020
 00050 CLA +0 50000 0 76702    00051 SUB +0 40200 0 00014    00052 TNZ -0 10000 0 00061                                 
                     Z = (RMARG - HDLTH) / 2                                        034  LM00021
 00053 CLA +0 50000 0 76070    00054 SUB +0 40200 0 77454    00055 LRS +0 76500 0 00043    00056 DVP +0 22100 0 00013   
 00057 STQ -0 60000 0 00010                                                                                             
                   OR WHENEVER HDPOS .E. $FACING$ .AND. EVENPG                      035  LM00022
 00060 TRA +0 02000 0 00121    00061 NZT -0 52000 0 00005    00062 TRA +0 02000 0 00071    00063 CLA +0 50000 0 76702   
 00064 SUB +0 40200 0 00016    00065 TNZ -0 10000 0 00071                                                               
                     Z = 0                                                          036  LM00023
 00066 CLA +0 50000 0 00011    00067 STO +0 60100 0 00010                                                               
                   OR WHENEVER HDPOS .E. $MARGIN$ .OR. HDPOS .E. $FACING$           037  LM00024
 00070 TRA +0 02000 0 00121    00071 CLA +0 50000 0 76702    00072 SUB +0 40200 0 00016    00073 TZE +0 10000 0 00077   
 00074 CLA +0 50000 0 76702    00075 SUB +0 40200 0 00017    00076 TNZ -0 10000 0 00103                                 
                     Z = RMARG - HDLTH                                              038  LM00025
 00077 CLA +0 50000 0 76070    00100 SUB +0 40200 0 77454    00101 STO +0 60100 0 00010                                 
                   OR WHENEVER HDPOS .E. $PPOSED$                                   039  LM00026
 00102 TRA +0 02000 0 00121    00103 CLA +0 50000 0 76702    00104 SUB +0 40200 0 00020    00105 TNZ -0 10000 0 00121   
                     WHENEVER EVENPG .AND. PGPOS .E. $FACING$                       040  LM00027
 00106 CLA +0 50000 0 76126    00107 SUB +0 40200 0 00016    00110 TNZ -0 10000 0 00117    00111 NZT -0 52000 0 00005   
 00112 TRA +0 02000 0 00117                                                                                             
                       Z = RMARG - HDLTH                                            041  LM00028
 00113 CLA +0 50000 0 76070    00114 SUB +0 40200 0 77454    00115 STO +0 60100 0 00010                                 
                     OTHERWISE                                                      042  LM00029
 00116 TRA +0 02000 0 00121                                                                                             
                       Z = 0                                                        043  LM00030
 00117 CLA +0 50000 0 00011    00120 STO +0 60100 0 00010                                                               
                     END OF CONDITIONAL                                             044  LM00031
                   END OF CONDITIONAL                                               045  LM00032
                   THROUGH PADHD, FOR I = 1, 1, I .G. Z                             046  LM00036
 00121 CLA +0 50000 0 00012    00122 STO +0 60100 0 00006    00123 TRA +0 02000 0 00127    00124 CLA +0 50000 0 00006   
 00125 ADD +0 40000 0 00012    00126 STO +0 60100 0 00006    00127 CLA +0 50000 0 00006    00130 SUB +0 40200 0 00010   
 00131 TZE +0 10000 0 00133    00132 TPL +0 12000 0 00137                                                               
      PADHD          HFLINE(I) = BLANK                                              047  LM00037
 00133 LXA +0 53400 1 00006    00134 CLA +0 50000 0 75224    00135 STO +0 60100 1 00000    00136 TRA +0 02000 0 00124   
                   THROUGH INHEAD, FOR I = Z+1, 1, I .G. (Z+HDLTH)                  048  LM00041
 00137 CLA +0 50000 0 00010    00140 ADD +0 40000 0 00012    00141 STO +0 60100 0 00006    00142 TRA +0 02000 0 00146   
 00143 CLA +0 50000 0 00006    00144 ADD +0 40000 0 00012    00145 STO +0 60100 0 00006    00146 CLA +0 50000 0 00010   
 00147 ADD +0 40000 0 77454    00150 CHS +0 76000 0 00002    00151 ADD +0 40000 0 00006    00152 TZE +0 10000 0 00154   
 00153 TPL +0 12000 0 00163                                                                                             
      INHEAD         HFLINE(I) = HEAD(I-Z)                                          049  LM00042
 00154 CLA +0 50000 0 00006    00155 SUB +0 40200 0 00010    00156 LXA +0 53400 1 00006    00157 PAX +0 73400 2 00000   
 00160 CLA +0 50000 2 77453    00161 STO +0 60100 1 00000    00162 TRA +0 02000 0 00143                                 
                   HFLTH = I-1                                                      050  LM00043
 00163 CLA +0 50000 0 00006    00164 SUB +0 40200 0 00012    00165 STO +0 60100 0 00000                                 
      PAGET        WHENEVER .NOT.FTSW, TRANSFER TO FOOT                             051  LM00047
 00166 ZET +0 52000 0 76125    00167 TRA +0 02000 0 00171    00170 TRA +0 02000 0 00003                                 
                   FUNCTION RETURN                                                  052  LM00048
 00171 TRA +0 02000 0 00355                                                                                             
                 ENTRY TO SETFT.                                                    053  LM00050
 00172 TRA +0 02000 0 00175    00173 SXA +0 63400 2 00336    00174 TSX +0 07400 2 00336                                 
                   HFLTH = 0                                                        054  LM00051
 00175 CLA +0 50000 0 00011    00176 STO +0 60100 0 00000                                                               
                   WHENEVER .NOT.FTSW, FUNCTION RETURN                              055  LM00052
 00177 ZET +0 52000 0 76125    00200 TRA +0 02000 0 00202    00201 TRA +0 02000 0 00355                                 
                   I = 1                                                            056  LM00053
 00202 CLA +0 50000 0 00012    00203 STO +0 60100 0 00006                                                               
                   EVENPG = (PAGENO/2)*2 .NE. PAGENO                                057  LM00054
 00204 LDQ +0 56000 0 76127    00205 PXD -0 75400 0 00000    00206 LLS +0 76300 0 00000    00207 DVP +0 22100 0 00013   
 00210 MPY +0 20000 0 00013    00211 XCA +0 13100 0 00000    00212 SUB +0 40200 0 76127    00213 TNZ -0 10000 0 00216   
 00214 PXD -0 75400 0 00000    00215 TRA +0 02000 0 00217    00216 CLA +0 50000 0 00012    00217 STO +0 60100 0 00005   
      FOOT         WHENEVER .NOT. PGE, FUNCTION RETURN                              058  LM00056
 00220 ZET +0 52000 0 76130    00221 TRA +0 02000 0 00223    00222 TRA +0 02000 0 00355                                 
                   NMLTH = NUMCON.(PAGENO, PREFIX(PRLTH), PGMOD) + PRLTH            059  LM00057
 00223 CLA +0 50000 0 76071    00224 SUB +0 40200 0 00225    00225 TXH +3 00000 0 76123    00226 STA +0 62100 0 00231   
 00227 TSX +0 07400 4 00001    00230 TXH +3 00000 0 76127    00231 TXH +3 00000 0 00000    00232 TXH +3 00000 0 76124   
 00233 ADD +0 40000 0 76071    00234 STO +0 60100 0 00007                                                               
                   WHENEVER PGPOS .E. $CENTER$                                      060  LM00061
 00235 CLA +0 50000 0 76126    00236 SUB +0 40200 0 00014    00237 TNZ -0 10000 0 00246                                 
                     Z = (RMARG-NMLTH)/2                                            061  LM00062
 00240 CLA +0 50000 0 76070    00241 SUB +0 40200 0 00007    00242 LRS +0 76500 0 00043    00243 DVP +0 22100 0 00013   
 00244 STQ -0 60000 0 00010                                                                                             
                   OR WHENEVER PGPOS .E. $FACING$ .AND. EVENPG                      062  LM00063
 00245 TRA +0 02000 0 00261    00246 NZT -0 52000 0 00005    00247 TRA +0 02000 0 00256    00250 CLA +0 50000 0 76126   
 00251 SUB +0 40200 0 00016    00252 TNZ -0 10000 0 00256                                                               
                     Z = 0                                                          063  LM00064
 00253 CLA +0 50000 0 00011    00254 STO +0 60100 0 00010                                                               
                   OTHERWISE                                                        064  LM00065
 00255 TRA +0 02000 0 00261                                                                                             
                     Z = RMARG - NMLTH                                              065  LM00066
 00256 CLA +0 50000 0 76070    00257 SUB +0 40200 0 00007    00260 STO +0 60100 0 00010                                 
                   END OF CONDITIONAL                                               066  LM00067
                   THROUGH PADFT, FOR I = I, 1, I .G. Z                             067  LM00071
 00261 CLA +0 50000 0 00006    00262 STO +0 60100 0 00006    00263 TRA +0 02000 0 00267    00264 CLA +0 50000 0 00006   
 00265 ADD +0 40000 0 00012    00266 STO +0 60100 0 00006    00267 CLA +0 50000 0 00006    00270 SUB +0 40200 0 00010   
 00271 TZE +0 10000 0 00273    00272 TPL +0 12000 0 00277                                                               
      PADFT          HFLINE(I) = BLANK                                              068  LM00072
 00273 LXA +0 53400 1 00006    00274 CLA +0 50000 0 75224    00275 STO +0 60100 1 00000    00276 TRA +0 02000 0 00264   
                   THROUGH INPAGE, FOR I = Z+1, 1, I .G. (Z+NMLTH)                  069  LM00076
 00277 CLA +0 50000 0 00010    00300 ADD +0 40000 0 00012    00301 STO +0 60100 0 00006    00302 TRA +0 02000 0 00306   
 00303 CLA +0 50000 0 00006    00304 ADD +0 40000 0 00012    00305 STO +0 60100 0 00006    00306 CLA +0 50000 0 00010   
 00307 ADD +0 40000 0 00007    00310 CHS +0 76000 0 00002    00311 ADD +0 40000 0 00006    00312 TZE +0 10000 0 00314   
 00313 TPL +0 12000 0 00323                                                                                             
      INPAGE         HFLINE(I) = PREFIX(I-Z)                                        070  LM00077
 00314 CLA +0 50000 0 00006    00315 SUB +0 40200 0 00010    00316 LXA +0 53400 1 00006    00317 PAX +0 73400 2 00000   
 00320 CLA +0 50000 2 76123    00321 STO +0 60100 1 00000    00322 TRA +0 02000 0 00303                                 
                   WHENEVER HFLTH .L. I-1, HFLTH = I-1                              071  LM00079
 00323 CLA +0 50000 0 00006    00324 SUB +0 40200 0 00012    00325 CHS +0 76000 0 00002    00326 ADD +0 40000 0 00000   
 00327 TZE +0 10000 0 00334    00330 TPL +0 12000 0 00334    00331 CLA +0 50000 0 00006    00332 SUB +0 40200 0 00012   
 00333 STO +0 60100 0 00000                                                                                             
                   FUNCTION RETURN                                                  072  LM00080
 00334 TRA +0 02000 0 00355                                                                                             
                 END OF FUNCTION                                                    073  LM00082
 00335 TSX +0 07400 4 00000    00336 TXH +3 00000 0 00000    00337 SXD -0 63400 1 00336    00340 SXA +0 63400 4 00355   
 00341 CLA +0 50000 4 00001    00342 STA +0 62100 0 00135    00343 STA +0 62100 0 00161    00344 STA +0 62100 0 00275   
 00345 STA +0 62100 0 00321    00346 CLA +0 50000 4 00002    00347 STA +0 62100 0 00027    00350 STA +0 62100 0 00165   
 00351 STA +0 62100 0 00176    00352 STA +0 62100 0 00326    00353 STA +0 62100 0 00333    00354 TRA +0 02000 2 00001   
 00355 AXT +0 77400 4 00000    00356 LXA +0 53400 2 00336    00357 LXD -0 53400 1 00336    00360 TRA +0 02000 4 00001   
1     MAD PROGRAM LISTING ... ... ...                 FILE  NUMCON   MAD            02/08/68    1245.5
-                 
                 ..  BINARY NUMBER TO CHARACTER STRING CONVERSION.                                     LM00001    
                                                                                                       LM00002    
                 ..  CALLING SEQUENCE...                                                               LM00003    
                 ..      Z = NUMCON.(INT, LOC, MODE)                                                   LM00004    
                     WHERE                                                                             LM00005    
                 ..      INT IS THE NUMBER TO BE CONVERTED                                             LM00006    
                 ..   LOC(1) IS FIRST LOCATION TO RECEIVE OUTPUT.                                      LM00007    
                      MODE IS ARABIC FOR ARABIC                                                        LM00008    
                              ROMANU FOR UPPER CASE ROMAN                                              LM00009    
                              ROMANL FOR LOWER CASE ROMAN.                                             LM00010    
                 ..        Z IS LENGTH OF OUTPUT STRING.                                               LM00011    
                                                                                                       LM00012    
                  EXTERNAL FUNCTION(INT, LOC, MODE)                                               *001 LM00013    
                                                                                                       LM00014    
                    NORMAL MODE IS INTEGER                                                        *002 LM00015    
                    VECTOR VALUES PLACE(1) = $00000I$, $00000V$, $00000X$,                        *003 LM00016    
                1      $00000L$, $00000C$, $00000D$, $00000M$                                     *003 LM00017    
                    VECTOR VALUES NMODES = 3                                                      *004 LM00018    
                    VECTOR VALUES XMODE(1) = $ARABIC$,$ROMANU$,$ROMANL$                           *005 LM00019    
                    VECTOR VALUES CONV(1) = ARABIC, ROMANU, ROMANL                                *006 LM00020    
                  DIMENSION OBUF(16)                                                              *007 LM00021    
                                                                                                       LM00022    
                  ENTRY TO NUMCON.                                                                *008 LM00023    
                    Q = 0                                                                         *009 LM00024    
                    K = INT                                                                       *010 LM00025    
                    CASEBT = 0                                                                    *011 LM00026    
                    THROUGH DSPTCH, FOR I = 1, 1, I .G. NMODES                                    *012 LM00027    
      DSPTCH          WHENEVER XMODE(I) .E. MODE, TRANSFER TO CONV(I)                             *013 LM00028    
                    FUNCTION RETURN                                                               *014 LM00029    
                                                                                                       LM00030    
      . . . .    ..  CONVERT TO ARABIC NUMBERS . . . . . .                                             LM00031    
                                                                                                       LM00032    
      ARABIC        OUT.(K - (K/10)*10)                                                           *015 LM00033    
                    K = K/10                                                                      *016 LM00034    
                    WHENEVER K .G. 0, TRANSFER TO ARABIC                                          *017 LM00035    
                    TRANSFER TO DONE                                                              *018 LM00036    
                                                                                                       LM00037    
      . . . .    ..  CONVERT TO ROMAN NUMERALS . . . . . .                                             LM00038    
                                                                                                       LM00039    
      ROMANL        CASEBT = $000010$                                                             *019 LM00040    
                                                                                                       LM00041    
      ROMANU      THROUGH SCAN, FOR J = 1, 2, K .E. 0                                             *020 LM00042    
                    R1 = K-(K/5)*5                                                                *021 LM00043    
                    K = K/5                                                                       *022 LM00044    
                    R2 = K-(K/2)*2                                                                *023 LM00045    
                    K = K/2                                                                       *024 LM00046    
                                                                                                       LM00047    
                    WHENEVER R1 .E. 4                                                             *025 LM00048    
                      WHENEVER R2 .E. 0                                                           *026 LM00049    
                        OUT.(PLACE(J+1))                                                          *027 LM00050    
                      OTHERWISE                                                                   *028 LM00051    
                        OUT.(PLACE(J+2))                                                          *029 LM00052    
                      END OF CONDITIONAL                                                          *030 LM00053    
                      OUT.(PLACE(J))                                                              *031 LM00054    
                    OTHERWISE                                                                     *032 LM00055    
                      THROUGH COUNT, FOR I = 1, 1, I .G. R1                                       *033 LM00056    
      COUNT             OUT.(PLACE(J))                                                            *034 LM00057    
                      WHENEVER R2 .E. 1, OUT.(PLACE(J+1))                                         *035 LM00058    
      SCAN          END OF CONDITIONAL                                                            *036 LM00059    
                                                                                                       LM00060    
      DONE          THROUGH OUTPUT, FOR K = 1, 1, K .G. Q                                         *037 LM00061    
      OUTPUT          LOC(K) = OBUF(Q-K+1)                                                        *038 LM00062    
                    FUNCTION RETURN Q                                                             *039 LM00063    
                                                                                                       LM00064    
                    INTERNAL FUNCTION(X)                                                          *040 LM00065    
                      ENTRY TO OUT.                                                               *041 LM00066    
                        Q = Q + 1                                                                 *042 LM00067    
                        OBUF(Q) = X .V. CASEBT                                                    *043 LM00068    
                        FUNCTION RETURN                                                           *044 LM00069    
                    END OF FUNCTION                                                               *045 LM00070    
                                                                                                       LM00071    
                  END OF FUNCTION                                                                 *046 LM00072    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00405 TRANSFER VECTOR LENGTH  00001 PROGRAM BEGINS    00070
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      NUMCON 00071   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ARABIC 00003   4        DONE   00010   4        K      00016   1        PLACE  00050 A 1        ROMANL 00011   4  
      CASEBT 00013   1        DSPTCH 00002   4        NMODES 00017 A 1        Q      00051   1        ROMANU 00012   4  
      CONV   00007 A 4        I      00014   1        OBUF   00040 A 1        R1     00052   1        SCAN   00002   4  
      COUNT  00002   4        J      00015   1        OUTPUT 00002   4        R2     00053   1        XMODE  00057 A 1  
0FUNCTION DICTIONARY    
      EXIT   00000   1        OUT    00001   1                                                                          
0ABSOLUTE CONSTANTS     
 00063 +000000000004     00064 +000000000005     00062 +000000000002     00066 +000000000100     00065 +000000000012    
 00060 +000000000000     00061 +000000000001     00067 +233000000000                                                    
0STATEMENT DICTIONARY   
 00003 TXL -300136000123       00010 TXL -300322000310       00011 TXL -300153000151       00012 TXL -300164000153      
0PROGRAM    
                 EXTERNAL FUNCTION(INT, LOC, MODE)                                  001  LM00013
                   NORMAL MODE IS INTEGER                                           002  LM00015
                   VECTOR VALUES PLACE(1) = $00000I$, $00000V$, $00000X$,           003  LM00016
                1     $00000L$, $00000C$, $00000D$, $00000M$                        003  LM00017
 00041     +0 00000 0 00044    00042     +0 00000 0 00024    00043     +0 00000 0 00023    00044     +0 00000 0 00043   
 00045     +0 00000 0 00067    00046     +0 00000 0 00065    00047     +0 00000 0 00031                                 
                   VECTOR VALUES NMODES = 3                                         004  LM00018
 00017     +0 00000 0 00003                                                                                             
                   VECTOR VALUES XMODE(1) = $ARABIC$,$ROMANU$,$ROMANL$              005  LM00019
 00054     -1 14644 2 14543    00055     -1 14644 2 14564    00056     +2 15121 2 23123                                 
                   VECTOR VALUES CONV(1) = ARABIC, ROMANU, ROMANL                   006  LM00020
 00004 TXL -3 00000 0 00011    00005 TXL -3 00000 0 00012    00006 TXL -3 00000 0 00003                                 
                 DIMENSION OBUF(16)                                                 007  LM00021
                 ENTRY TO NUMCON.                                                   008  LM00023
 00070 TRA +0 02000 0 00073    00071 SXA +0 63400 2 00364    00072 TSX +0 07400 2 00364                                 
                   Q = 0                                                            009  LM00024
 00073 CLA +0 50000 0 00060    00074 STO +0 60100 0 00051                                                               
                   K = INT                                                          010  LM00025
 00075 CLA +0 50000 0 00024    00076 STO +0 60100 0 00016                                                               
                   CASEBT = 0                                                       011  LM00026
 00077 CLA +0 50000 0 00060    00100 STO +0 60100 0 00013                                                               
                   THROUGH DSPTCH, FOR I = 1, 1, I .G. NMODES                       012  LM00027
 00101 CLA +0 50000 0 00061    00102 STO +0 60100 0 00014    00103 TRA +0 02000 0 00107    00104 CLA +0 50000 0 00014   
 00105 ADD +0 40000 0 00061    00106 STO +0 60100 0 00014    00107 CLA +0 50000 0 00014    00110 SUB +0 40200 0 00017   
 00111 TZE +0 10000 0 00113    00112 TPL +0 12000 0 00122                                                               
      DSPTCH         WHENEVER XMODE(I) .E. MODE, TRANSFER TO CONV(I)                013  LM00028
 00113 LXA +0 53400 1 00014    00114 CLA +0 50000 1 00057    00115 SUB +0 40200 0 00024    00116 TNZ -0 10000 0 00121   
 00117 LXA +0 53400 2 00014    00120 TRA +0 02000 2 00007    00121 TRA +0 02000 0 00104                                 
                   FUNCTION RETURN                                                  014  LM00029
 00122 TRA +0 02000 0 00376                                                                                             
      ARABIC       OUT.(K - (K/10)*10)                                              015  LM00033
 00123 LDQ +0 56000 0 00016    00124 PXD -0 75400 0 00000    00125 LLS +0 76300 0 00000    00126 DVP +0 22100 0 00065   
 00127 MPY +0 20000 0 00065    00130 XCA +0 13100 0 00000    00131 CHS +0 76000 0 00002    00132 ADD +0 40000 0 00016   
 00133 STO +0 60100 0 00402    00134 TSX +0 07400 4 00001    00135 TXH +3 00000 0 00402                                 
                   K = K/10                                                         016  LM00034
 00136 LDQ +0 56000 0 00016    00137 PXD -0 75400 0 00000    00140 LLS +0 76300 0 00000    00141 DVP +0 22100 0 00065   
 00142 STQ -0 60000 0 00016                                                                                             
                   WHENEVER K .G. 0, TRANSFER TO ARABIC                             017  LM00035
 00143 CLA +0 50000 0 00016    00144 SUB +0 40200 0 00060    00145 TZE +0 10000 0 00150    00146 TMI -0 12000 0 00150   
 00147 TRA +0 02000 0 00003                                                                                             
                   TRANSFER TO DONE                                                 018  LM00036
 00150 TRA +0 02000 0 00010                                                                                             
      ROMANL       CASEBT = $000010$                                                019  LM00040
 00151 CLA +0 50000 0 00066    00152 STO +0 60100 0 00013                                                               
      ROMANU     THROUGH SCAN, FOR J = 1, 2, K .E. 0                                020  LM00042
 00153 CLA +0 50000 0 00061    00154 STO +0 60100 0 00015    00155 TRA +0 02000 0 00161    00156 CLA +0 50000 0 00015   
 00157 ADD +0 40000 0 00062    00160 STO +0 60100 0 00015    00161 CLA +0 50000 0 00016    00162 SUB +0 40200 0 00060   
 00163 TZE +0 10000 0 00310                                                                                             
                   R1 = K-(K/5)*5                                                   021  LM00043
 00164 LDQ +0 56000 0 00016    00165 PXD -0 75400 0 00000    00166 LLS +0 76300 0 00000    00167 DVP +0 22100 0 00064   
 00170 MPY +0 20000 0 00064    00171 XCA +0 13100 0 00000    00172 CHS +0 76000 0 00002    00173 ADD +0 40000 0 00016   
 00174 STO +0 60100 0 00052                                                                                             
                   K = K/5                                                          022  LM00044
 00175 LDQ +0 56000 0 00016    00176 PXD -0 75400 0 00000    00177 LLS +0 76300 0 00000    00200 DVP +0 22100 0 00064   
 00201 STQ -0 60000 0 00016                                                                                             
                   R2 = K-(K/2)*2                                                   023  LM00045
 00202 LDQ +0 56000 0 00016    00203 PXD -0 75400 0 00000    00204 LLS +0 76300 0 00000    00205 DVP +0 22100 0 00062   
 00206 MPY +0 20000 0 00062    00207 XCA +0 13100 0 00000    00210 CHS +0 76000 0 00002    00211 ADD +0 40000 0 00016   
 00212 STO +0 60100 0 00053                                                                                             
                   K = K/2                                                          024  LM00046
 00213 LDQ +0 56000 0 00016    00214 PXD -0 75400 0 00000    00215 LLS +0 76300 0 00000    00216 DVP +0 22100 0 00062   
 00217 STQ -0 60000 0 00016                                                                                             
                   WHENEVER R1 .E. 4                                                025  LM00048
 00220 CLA +0 50000 0 00052    00221 SUB +0 40200 0 00063    00222 TNZ -0 10000 0 00254                                 
                     WHENEVER R2 .E. 0                                              026  LM00049
 00223 CLA +0 50000 0 00053    00224 SUB +0 40200 0 00060    00225 TNZ -0 10000 0 00236                                 
                       OUT.(PLACE(J+1))                                             027  LM00050
 00226 CLA +0 50000 0 00015    00227 ADD +0 40000 0 00061    00230 SUB +0 40200 0 00231    00231 TXH +3 00000 0 00050   
 00232 STA +0 62100 0 00234    00233 TSX +0 07400 4 00001    00234 TXH +3 00000 0 00000                                 
                     OTHERWISE                                                      028  LM00051
 00235 TRA +0 02000 0 00245                                                                                             
                       OUT.(PLACE(J+2))                                             029  LM00052
 00236 CLA +0 50000 0 00015    00237 ADD +0 40000 0 00062    00240 SUB +0 40200 0 00241    00241 TXH +3 00000 0 00050   
 00242 STA +0 62100 0 00244    00243 TSX +0 07400 4 00001    00244 TXH +3 00000 0 00000                                 
                     END OF CONDITIONAL                                             030  LM00053
                     OUT.(PLACE(J))                                                 031  LM00054
 00245 CLA +0 50000 0 00015    00246 SUB +0 40200 0 00247    00247 TXH +3 00000 0 00050    00250 STA +0 62100 0 00252   
 00251 TSX +0 07400 4 00001    00252 TXH +3 00000 0 00000                                                               
                   OTHERWISE                                                        032  LM00055
 00253 TRA +0 02000 0 00307                                                                                             
                     THROUGH COUNT, FOR I = 1, 1, I .G. R1                          033  LM00056
 00254 CLA +0 50000 0 00061    00255 STO +0 60100 0 00014    00256 TRA +0 02000 0 00262    00257 CLA +0 50000 0 00014   
 00260 ADD +0 40000 0 00061    00261 STO +0 60100 0 00014    00262 CLA +0 50000 0 00014    00263 SUB +0 40200 0 00052   
 00264 TZE +0 10000 0 00266    00265 TPL +0 12000 0 00275                                                               
      COUNT            OUT.(PLACE(J))                                               034  LM00057
 00266 CLA +0 50000 0 00015    00267 SUB +0 40200 0 00270    00270 TXH +3 00000 0 00050    00271 STA +0 62100 0 00273   
 00272 TSX +0 07400 4 00001    00273 TXH +3 00000 0 00000    00274 TRA +0 02000 0 00257                                 
                     WHENEVER R2 .E. 1, OUT.(PLACE(J+1))                            035  LM00058
 00275 CLA +0 50000 0 00053    00276 SUB +0 40200 0 00061    00277 TNZ -0 10000 0 00307    00300 CLA +0 50000 0 00015   
 00301 ADD +0 40000 0 00061    00302 SUB +0 40200 0 00303    00303 TXH +3 00000 0 00050    00304 STA +0 62100 0 00306   
 00305 TSX +0 07400 4 00001    00306 TXH +3 00000 0 00000                                                               
      SCAN         END OF CONDITIONAL                                               036  LM00059
 00307 TRA +0 02000 0 00156                                                                                             
      DONE         THROUGH OUTPUT, FOR K = 1, 1, K .G. Q                            037  LM00061
 00310 CLA +0 50000 0 00061    00311 STO +0 60100 0 00016    00312 TRA +0 02000 0 00316    00313 CLA +0 50000 0 00016   
 00314 ADD +0 40000 0 00061    00315 STO +0 60100 0 00016    00316 CLA +0 50000 0 00016    00317 SUB +0 40200 0 00051   
 00320 TZE +0 10000 0 00322    00321 TPL +0 12000 0 00332                                                               
      OUTPUT         LOC(K) = OBUF(Q-K+1)                                           038  LM00062
 00322 CLA +0 50000 0 00051    00323 SUB +0 40200 0 00016    00324 ADD +0 40000 0 00061    00325 LXA +0 53400 1 00016   
 00326 PAX +0 73400 2 00000    00327 CLA +0 50000 2 00040    00330 STO +0 60100 1 00024    00331 TRA +0 02000 0 00313   
                   FUNCTION RETURN Q                                                039  LM00063
 00332 CLA +0 50000 0 00051    00333 TRA +0 02000 0 00376                                                               
                   INTERNAL FUNCTION(X)                                             040  LM00065
 00334 TRA +0 02000 0 00363                                                                                             
                     ENTRY TO OUT.                                                  041  LM00066
 00335 TRA +0 02000 0 00340    00001 TTR +0 02100 0 00336    00336 SXA +0 63400 2 00351    00337 TSX +0 07400 2 00351   
                       Q = Q + 1                                                    042  LM00067
 00340 CLA +0 50000 0 00051    00341 ADD +0 40000 0 00061    00342 STO +0 60100 0 00051                                 
                       OBUF(Q) = X .V. CASEBT                                       043  LM00068
 00343 CAL -0 50000 0 00024    00344 ORA -0 50100 0 00013    00345 LXA +0 53400 1 00051    00346 SLW +0 60200 1 00040   
                       FUNCTION RETURN                                              044  LM00069
 00347 TRA +0 02000 0 00357                                                                                             
                   END OF FUNCTION                                                  045  LM00070
 00350 TSX +0 07400 4 00000    00351 TXH +3 00000 0 00000    00352 SXD -0 63400 1 00351    00353 SXA +0 63400 4 00357   
 00354 CLA +0 50000 4 00001    00355 STA +0 62100 0 00343    00356 TRA +0 02000 2 00001    00357 AXT +0 77400 4 00000   
 00360 LXA +0 53400 2 00351    00361 LXD -0 53400 1 00351    00362 TRA +0 02000 4 00001                                 
                 END OF FUNCTION                                                    046  LM00072
 00363 TSX +0 07400 4 00000    00364 TXH +3 00000 0 00000    00365 SXD -0 63400 1 00364    00366 SXA +0 63400 4 00376   
 00367 CLA +0 50000 4 00001    00370 STA +0 62100 0 00075    00371 CLA +0 50000 4 00002    00372 STA +0 62100 0 00330   
 00373 CLA +0 50000 4 00003    00374 STA +0 62100 0 00115    00375 TRA +0 02000 2 00001    00376 AXT +0 77400 4 00000   
 00377 LXA +0 53400 2 00364    00400 LXD -0 53400 1 00364    00401 TRA +0 02000 4 00001                                 
1     MAD PROGRAM LISTING ... ... ...                 FILE  FRAME1   MAD            02/08/68    1244.9
-                 
                 ..  ROUTINES TO FRAME OUT AND PRINT FLOW DIAGRAMS.                                    LM00001    
                                                                                                       LM00002    
                 ..  J. H. SALTZER, JANUARY, 1965.                                                     LM00003    
                                                                                                       LM00004    
                  EXTERNAL FUNCTION(PAGE, DP)                                                     *001 LM00005    
                                                                                                       LM00006    
                  DIMENSION LENGTH(100)                                                           *002 LM00007    
                  VECTOR VALUES FENCE = 777777777777K                                             *003 LM00008    
                  VECTOR VALUES DISK = 1                                                          *004 LM00009    
                  DIMENSION LINE(100)                                                             *005 LM00010    
                  VECTOR VALUES RETURN = 0055K                                                    *006 LM00011    
                  VECTOR VALUES PERIOD = 0033K                                                    *007 LM00012    
                  VECTOR VALUES BLANK = 0060K                                                     *008 LM00013    
                  VECTOR VALUES NULL = 0057K                                                      *009 LM00014    
                  NORMAL MODE IS INTEGER                                                          *010 LM00015    
                                                                                                       LM00016    
                  ENTRY TO FRAME1.                                                                *011 LM00017    
       IN         LENGTH = READ.(LINE, 100, EOF)                                                  *012 LM00018    
                  WHENEVER LINE(1) .E. PERIOD, TRANSFER TO CONTRL                                 *013 LM00019    
       DATA       WHENEVER ROW .G.  MAXROW                                                        *014 LM00020    
       COM          PRINT COMMENT $0B0O0X0 0E0X0T0E0N0D0S0 0O0U0T0S0I0D0E0 0F0R                   *015 LM00021    
                1 0A0M0E0.$                                                                       *015 LM00022    
                    ROW = ROW + 1                                                                 *016 LM00023    
                    TRANSFER TO IN                                                                *017 LM00024    
                  END OF CONDITIONAL                                                              *018 LM00025    
                  THROUGH PUTLIN, FOR I = 1, 1, I .G. LENGTH                                      *019 LM00026    
                  WHENEVER COL+I-1 .G. MAXCOL .AND. LINE(I) .NE. NULL, TRANSFER TO COM            *020 LM00027    
       PUTLIN       WHENEVER LINE(I) .NE. NULL, PAGE(ROW, COL+I-1) = LINE(I)                      *021 LM00028    
                  ROW = ROW+1                                                                     *022 LM00029    
                  TRANSFER TO IN                                                                  *023 LM00030    
                                                                                                       LM00031    
       CONTRL     EDCT = 1                                                                        *024 LM00032    
                  CWD = GET.(0)                                                                   *025 LM00033    
                  WHENEVER CWD .E. $   BOX$ .OR. CWD .E. $    BO$                                 *026 LM00034    
                    ROW = NUM.(0)                                                                 *027 LM00035    
                    COL = NUM.(0)                                                                 *028 LM00036    
                                                                                                       LM00037    
                  OR WHENEVER CWD .E. $ FRAME$                                                    *029 LM00038    
                    MAXROW = NUM.(0)                                                              *030 LM00039    
                    MAXCOL = NUM.(0)                                                              *031 LM00040    
                    DP(2) = MAXCOL + 1                                                            *032 LM00041    
                    THROUGH BLANKR, FOR I = 1, 1, I .G. MAXROW*(MAXCOL+1)                         *033 LM00042    
       BLANKR         PAGE(I) = BLANK                                                             *034 LM00043    
                                                                                                       LM00044    
                  OR WHENEVER CWD .E. $   END$                                                    *035 LM00045    
       EOF          FUNCTION RETURN MAXROW                                                        *036 LM00046    
                  OTHERWISE                                                                       *037 LM00047    
                    TRANSFER TO DATA                                                              *038 LM00048    
                                                                                                       LM00049    
                  END OF CONDITIONAL                                                              *039 LM00050    
                  TRANSFER TO IN                                                                  *040 LM00051    
                                                                                                       LM00052    
                  ENTRY TO PRPIX1.                                                                *041 LM00053    
                    THROUGH PRSCN, FOR ROW = 1, 1, ROW .G. MAXROW                                 *042 LM00054    
                      LENGTH(ROW) = SIZE.(ROW) + 1                                                *043 LM00055    
                      PAGE(ROW, LENGTH(ROW)) = RETURN                                             *044 LM00056    
       PRSCN          PACK.(PAGE(ROW,1), LENGTH(ROW))                                             *045 LM00057    
                    RSMEM.                                                                        *046 LM00058    
                    FUNCTION RETURN                                                               *047 LM00059    
                                                                                                       LM00060    
       SIZE.     .. FUNCTION TO SCAN FOR LINE SIZE.                                                    LM00061    
                                                                                                       LM00062    
                  INTERNAL FUNCTION(RW)                                                           *048 LM00063    
                  ENTRY TO SIZE.                                                                  *049 LM00064    
       SZLP         THROUGH SZLP, FOR I = MAXCOL, -1, I .E. 0                                     *050 LM00065    
                1         .OR. PAGE(RW, I) .NE. BLANK                                             *050 LM00066    
                    FUNCTION RETURN I                                                             *051 LM00067    
                  END OF FUNCTION                                                                 *052 LM00068    
                                                                                                       LM00069    
       GET.      ..  FUNCTION TO OBTAIN AGRUMENT WORD IN 6-BIT MODE.                                   LM00070    
                                                                                                       LM00071    
                  INTERNAL FUNCTION                                                               *053 LM00072    
                  ENTRY TO GET.                                                                   *054 LM00073    
                    WORD = $ $                                                                    *055 LM00074    
                    SCANB.                                                                        *056 LM00075    
       GTLP         EDCT = EDCT + 1                                                               *057 LM00076    
                    WHENEVER LINE(EDCT) .E. BLANK .OR. EDCT .G. LENGTH                            *058 LM00077    
                1           , FUNCTION RETURN WORD                                                *058 LM00078    
                    WORD = (WORD .LS. 6) .V. (LINE(EDCT) .A. 77K)                                 *059 LM00079    
                    TRANSFER TO GTLP                                                              *060 LM00080    
                  END OF FUNCTION                                                                 *061 LM00081    
                                                                                                       LM00082    
       NUM.      .. FUNCTION TO OBTAIN DECIMAL INTEGER FROM INPUT.                                     LM00083    
                                                                                                       LM00084    
                  INTERNAL FUNCTION                                                               *062 LM00085    
                  ENTRY TO NUM.                                                                   *063 LM00086    
                    INT = 0                                                                       *064 LM00087    
                    SCANB.                                                                        *065 LM00088    
       MULP         EDCT = EDCT + 1                                                               *066 LM00089    
                    WHENEVER LINE(EDCT) .E. BLANK .OR. EDCT .G. LENGTH                            *067 LM00090    
                1      .OR. LINE(EDCT) .G. 9, FUNCTION RETURN INT                                 *067 LM00091    
                    INT = INT*10 + LINE(EDCT)                                                     *068 LM00092    
                    TRANSFER TO MULP                                                              *069 LM00093    
                  END OF FUNCTION                                                                 *070 LM00094    
                                                                                                       LM00095    
       SCANB.    ..  FUNCTION TO SCAN FOR NON-BLANK CHARACTER.                                         LM00096    
                                                                                                       LM00097    
                  INTERNAL FUNCTION                                                               *071 LM00098    
                  ENTRY TO SCANB.                                                                 *072 LM00099    
       SCANLP       WHENEVER LINE(EDCT+1) .NE. BLANK .OR. EDCT+1 .G. LENGTH                       *073 LM00100    
                1        , FUNCTION RETURN                                                        *073 LM00101    
                    EDCT = EDCT+1                                                                 *074 LM00102    
                    TRANSFER TO SCANLP                                                            *075 LM00103    
                  END OF FUNCTION                                                                 *076 LM00104    
                                                                                                       LM00105    
                  END OF FUNCTION                                                                 *077 LM00106    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01124 TRANSFER VECTOR LENGTH  00007 PROGRAM BEGINS    00372
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      PRPIX1 00575   0        FRAME1 00373   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BLANKR 00013   4        DATA   00016   4        IN     00021   4        MAXROW 00347   1        RETURN 00352 A 1  
      BLANK  00024 A 1        DISK   00027 A 1        INT    00032   1        MULP   00022   4        ROW    00353   1  
      COL    00025   1        EDCT   00030   1        I      00033   1        NULL   00350 A 1        SCANLP 00023   4  
      COM    00014   4        EOF    00017   4        LENGTH 00200 A 1        PERIOD 00351 A 1        SZLP   00013   4  
      CONTRL 00015   4        FENCE  00031 A 1        LINE   00345 A 1        PRSCN  00013   4        WORD   00354   1  
      CWD    00026   1        GTLP   00020   4        MAXCOL 00346   1        PUTLIN 00013   4                          
0FUNCTION DICTIONARY    
      .03310 00000   0        .03311 00001   0        EXIT   00002   1        .PCOMT 00003   1        PACK   00004   1  
      READ   00005   1        RSMEM  00006   1        GET    00007   1        NUM    00010   1        SCANB  00011   1  
      SIZE   00012   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00361 +000000000012     00360 +000000000011     00357 +000000000006     00362 +000000000077     00371 -206060606060    
 00367 -206060254524     00365 -202651214425     00366 -206060224667     00370 -206060602246     00355 +000000000000    
 00363 +000000000144     00356 +000000000001     00364 +233000000000                                                    
0STATEMENT DICTIONARY   
 00014 TXL -300425000412       00015 TXL -300504000502       00016 TXL -300412000406       00017 TXL -300571000567      
 00020 TXL -300727000724       00021 TXL -300402000375       00022 TXL -301000000775       00023 TXL -301056001042      
0PROGRAM    
                 EXTERNAL FUNCTION(PAGE, DP)                                        001  LM00005
                 DIMENSION LENGTH(100)                                              002  LM00007
                 VECTOR VALUES FENCE = 777777777777K                                003  LM00008
 00031     -3 77777 7 77777                                                                                             
                 VECTOR VALUES DISK = 1                                             004  LM00009
 00027     +0 00000 0 00001                                                                                             
                 DIMENSION LINE(100)                                                005  LM00010
                 VECTOR VALUES RETURN = 0055K                                       006  LM00011
 00352     +0 00000 0 00055                                                                                             
                 VECTOR VALUES PERIOD = 0033K                                       007  LM00012
 00351     +0 00000 0 00033                                                                                             
                 VECTOR VALUES BLANK = 0060K                                        008  LM00013
 00024     +0 00000 0 00060                                                                                             
                 VECTOR VALUES NULL = 0057K                                         009  LM00014
 00350     +0 00000 0 00057                                                                                             
                 NORMAL MODE IS INTEGER                                             010  LM00015
                 ENTRY TO FRAME1.                                                   011  LM00017
 00372 TRA +0 02000 0 00375    00373 SXA +0 63400 2 01075    00374 TSX +0 07400 2 01075                                 
       IN        LENGTH = READ.(LINE, 100, EOF)                                     012  LM00018
 00375 TSX +0 07400 4 00005    00376 TXH +3 00000 0 00345    00377 TXH +3 00000 0 00363    00400 TXH +3 00000 0 00017   
 00401 STO +0 60100 0 00200                                                                                             
                 W'R LINE(1) .E. PERIOD, T'O CONTRL                                 013  LM00019
 00402 CLA +0 50000 0 00344    00403 SUB +0 40200 0 00351    00404 TNZ -0 10000 0 00406    00405 TRA +0 02000 0 00015   
       DATA      W'R ROW .G.  MAXROW                                                014  LM00020
 00406 CLA +0 50000 0 00353    00407 SUB +0 40200 0 00347    00410 TZE +0 10000 0 00431    00411 TMI -0 12000 0 00431   
       COM         PRINT COMMENT $0B0O0X0 0E0X0T0E0N0D0S0 0O0U0T0S0I0D0E0 0F0R      015  LM00021
                10A0M0E0.$                                                          015  LM00022
 00412 TSX +0 07400 4 00003    00413     +0 00000 0 00011    00414     +0 02200 4 60067    00415     +0 06000 2 50067   
 00416     +0 06300 2 50045    00417     +0 02400 6 20060    00420     +0 04600 6 40063    00421     +0 06200 3 10024   
 00422     +0 02500 6 00026    00423     +0 05100 2 10044    00424     +0 02500 3 36060                                 
                   ROW = ROW + 1                                                    016  LM00023
 00425 CLA +0 50000 0 00353    00426 ADD +0 40000 0 00356    00427 STO +0 60100 0 00353                                 
                   T'O IN                                                           017  LM00024
 00430 TRA +0 02000 0 00021                                                                                             
                 END OF CONDITIONAL                                                 018  LM00025
                 T'H PUTLIN, FOR I = 1, 1, I .G. LENGTH                             019  LM00026
 00431 CLA +0 50000 0 00356    00432 STO +0 60100 0 00033    00433 TRA +0 02000 0 00437    00434 CLA +0 50000 0 00033   
 00435 ADD +0 40000 0 00356    00436 STO +0 60100 0 00033    00437 CLA +0 50000 0 00033    00440 SUB +0 40200 0 00200   
 00441 TZE +0 10000 0 00443    00442 TPL +0 12000 0 00476                                                               
                 W'R COL+I-1 .G. MAXCOL .AND. LINE(I) .NE. NULL, T'O COM            020  LM00027
 00443 LXA +0 53400 1 00033    00444 CLA +0 50000 1 00345    00445 SUB +0 40200 0 00350    00446 TZE +0 10000 0 00456   
 00447 CLA +0 50000 0 00025    00450 ADD +0 40000 0 00033    00451 SUB +0 40200 0 00356    00452 SUB +0 40200 0 00346   
 00453 TZE +0 10000 0 00456    00454 TMI -0 12000 0 00456    00455 TRA +0 02000 0 00014                                 
       PUTLIN      W'R LINE(I) .NE. NULL, PAGE(ROW, COL+I-1) = LINE(I)              021  LM00028
 00456 LXA +0 53400 1 00033    00457 CLA +0 50000 1 00345    00460 SUB +0 40200 0 00350    00461 TZE +0 10000 0 00475   
 00462 CLA +0 50000 0 00025    00463 ADD +0 40000 0 00033    00464 SUB +0 40200 0 00356    00465 XCA +0 13100 0 00000   
 00466 CLA +0 50000 0 00353    00467 TSX +0 07400 4 00001    00470 TXH +3 00000 0 00022    00471 PAX +0 73400 1 00000   
 00472 LXA +0 53400 2 00033    00473 CLA +0 50000 2 00345    00474 STO +0 60100 1 00022    00475 TRA +0 02000 0 00434   
                 ROW = ROW+1                                                        022  LM00029
 00476 CLA +0 50000 0 00353    00477 ADD +0 40000 0 00356    00500 STO +0 60100 0 00353                                 
                 T'O IN                                                             023  LM00030
 00501 TRA +0 02000 0 00021                                                                                             
       CONTRL    EDCT = 1                                                           024  LM00032
 00502 CLA +0 50000 0 00356    00503 STO +0 60100 0 00030                                                               
                 CWD = GET.(0)                                                      025  LM00033
 00504 TSX +0 07400 4 00007    00505 TXH +3 00000 0 00355    00506 STO +0 60100 0 00026                                 
                 W'R CWD .E. $   BOX$ .OR. CWD .E. $    BO$                         026  LM00034
 00507 CLA +0 50000 0 00026    00510 SUB +0 40200 0 00370    00511 TZE +0 10000 0 00515    00512 CLA +0 50000 0 00026   
 00513 SUB +0 40200 0 00366    00514 TNZ -0 10000 0 00524                                                               
                   ROW = NUM.(0)                                                    027  LM00035
 00515 TSX +0 07400 4 00010    00516 TXH +3 00000 0 00355    00517 STO +0 60100 0 00353                                 
                   COL = NUM.(0)                                                    028  LM00036
 00520 TSX +0 07400 4 00010    00521 TXH +3 00000 0 00355    00522 STO +0 60100 0 00025                                 
                 O'R CWD .E. $ FRAME$                                               029  LM00038
 00523 TRA +0 02000 0 00573    00524 CLA +0 50000 0 00026    00525 SUB +0 40200 0 00365    00526 TNZ -0 10000 0 00564   
                   MAXROW = NUM.(0)                                                 030  LM00039
 00527 TSX +0 07400 4 00010    00530 TXH +3 00000 0 00355    00531 STO +0 60100 0 00347                                 
                   MAXCOL = NUM.(0)                                                 031  LM00040
 00532 TSX +0 07400 4 00010    00533 TXH +3 00000 0 00355    00534 STO +0 60100 0 00346                                 
                   DP(2) = MAXCOL + 1                                               032  LM00041
 00535 CLA +0 50000 0 00346    00536 ADD +0 40000 0 00356    00537 STO +0 60100 0 00020                                 
                   T'H BLANKR, FOR I = 1, 1, I .G. MAXROW*(MAXCOL+1)                033  LM00042
 00540 CLA +0 50000 0 00356    00541 STO +0 60100 0 00033    00542 TRA +0 02000 0 00546    00543 CLA +0 50000 0 00033   
 00544 ADD +0 40000 0 00356    00545 STO +0 60100 0 00033    00546 CLA +0 50000 0 00346    00547 ADD +0 40000 0 00356   
 00550 XCA +0 13100 0 00000    00551 MPY +0 20000 0 00347    00552 XCA +0 13100 0 00000    00553 CHS +0 76000 0 00002   
 00554 ADD +0 40000 0 00033    00555 TZE +0 10000 0 00557    00556 TPL +0 12000 0 00563                                 
       BLANKR        PAGE(I) = BLANK                                                034  LM00043
 00557 LXA +0 53400 1 00033    00560 CLA +0 50000 0 00024    00561 STO +0 60100 1 00022    00562 TRA +0 02000 0 00543   
                 O'R CWD .E. $   END$                                               035  LM00045
 00563 TRA +0 02000 0 00573    00564 CLA +0 50000 0 00026    00565 SUB +0 40200 0 00367    00566 TNZ -0 10000 0 00572   
       EOF         F'N MAXROW                                                       036  LM00046
 00567 CLA +0 50000 0 00347    00570 TRA +0 02000 0 01116                                                               
                 O'E                                                                037  LM00047
 00571 TRA +0 02000 0 00573                                                                                             
                   T'O DATA                                                         038  LM00048
 00572 TRA +0 02000 0 00016                                                                                             
                 END OF CONDITIONAL                                                 039  LM00050
                 T'O IN                                                             040  LM00051
 00573 TRA +0 02000 0 00021                                                                                             
                 ENTRY TO PRPIX1.                                                   041  LM00053
 00574 TRA +0 02000 0 00577    00575 SXA +0 63400 2 01075    00576 TSX +0 07400 2 01075                                 
                   THROUGH PRSCN, FOR ROW = 1, 1, ROW .G. MAXROW                    042  LM00054
 00577 CLA +0 50000 0 00356    00600 STO +0 60100 0 00353    00601 TRA +0 02000 0 00605    00602 CLA +0 50000 0 00353   
 00603 ADD +0 40000 0 00356    00604 STO +0 60100 0 00353    00605 CLA +0 50000 0 00353    00606 SUB +0 40200 0 00347   
 00607 TZE +0 10000 0 00611    00610 TPL +0 12000 0 00650                                                               
                     LENGTH(ROW) = SIZE.(ROW) + 1                                   043  LM00055
 00611 TSX +0 07400 4 00012    00612 TXH +3 00000 0 00353    00613 ADD +0 40000 0 00356    00614 LXA +0 53400 1 00353   
 00615 STO +0 60100 1 00200                                                                                             
                     PAGE(ROW, LENGTH(ROW)) = RETURN                                044  LM00056
 00616 CLA +0 50000 0 00353    00617 SUB +0 40200 0 00620    00620 TXH +3 00000 0 00200    00621 STA +0 62100 0 00622   
 00622 LDQ +0 56000 0 00000    00623 CLA +0 50000 0 00353    00624 TSX +0 07400 4 00000    00625 TXH +3 00000 0 00022   
 00626 PAX +0 73400 1 00000    00627 CLA +0 50000 0 00352    00630 STO +0 60100 1 00022                                 
       PRSCN         PACK.(PAGE(ROW,1), LENGTH(ROW))                                045  LM00057
 00631 CLA +0 50000 0 00353    00632 SUB +0 40200 0 00633    00633 TXH +3 00000 0 00200    00634 STA +0 62100 0 00646   
 00635 LDQ +0 56000 0 00356    00636 CLA +0 50000 0 00353    00637 TSX +0 07400 4 00001    00640 TXH +3 00000 0 00022   
 00641 SUB +0 40200 0 00642    00642 TXH +3 00000 0 00022    00643 STA +0 62100 0 00645    00644 TSX +0 07400 4 00004   
 00645 TXH +3 00000 0 00000    00646 TXH +3 00000 0 00000    00647 TRA +0 02000 0 00602                                 
                   RSMEM.                                                           046  LM00058
 00650 TSX +0 07400 4 00006                                                                                             
                   F'N                                                              047  LM00059
 00651 TRA +0 02000 0 01116                                                                                             
                 INTERNAL FUNCTION(RW)                                              048  LM00063
 00652 TRA +0 02000 0 00715                                                                                             
                 ENTRY TO SIZE.                                                     049  LM00064
 00653 TRA +0 02000 0 00656    00012 TTR +0 02100 0 00654    00654 SXA +0 63400 2 00703    00655 TSX +0 07400 2 00703   
       SZLP        THROUGH SZLP, FOR I = MAXCOL, -1, I .E. 0                        050  LM00065
                1        .OR. PAGE(RW, I) .NE. BLANK                                050  LM00066
 00656 CLA +0 50000 0 00346    00657 STO +0 60100 0 00033    00660 TRA +0 02000 0 00664    00661 CLS +0 50200 0 00356   
 00662 ADD +0 40000 0 00033    00663 STO +0 60100 0 00033    00664 LDQ +0 56000 0 00033    00665 CLA +0 50000 0 00022   
 00666 TSX +0 07400 4 00001    00667 TXH +3 00000 0 00022    00670 PAX +0 73400 1 00000    00671 CLA +0 50000 1 00022   
 00672 SUB +0 40200 0 00024    00673 TNZ -0 10000 0 00700    00674 CLA +0 50000 0 00033    00675 SUB +0 40200 0 00355   
 00676 TZE +0 10000 0 00700    00677 TRA +0 02000 0 00661                                                               
                   FUNCTION RETURN I                                                051  LM00067
 00700 CLA +0 50000 0 00033    00701 TRA +0 02000 0 00711                                                               
                 END OF FUNCTION                                                    052  LM00068
 00702 TSX +0 07400 4 00002    00703 TXH +3 00000 0 00000    00704 SXD -0 63400 1 00703    00705 SXA +0 63400 4 00711   
 00706 CLA +0 50000 4 00001    00707 STA +0 62100 0 00665    00710 TRA +0 02000 2 00001    00711 AXT +0 77400 4 00000   
 00712 LXA +0 53400 2 00703    00713 LXD -0 53400 1 00703    00714 TRA +0 02000 4 00001                                 
                 INTERNAL FUNCTION                                                  053  LM00072
 00715 TRA +0 02000 0 00766                                                                                             
                 ENTRY TO GET.                                                      054  LM00073
 00716 TRA +0 02000 0 00721    00007 TTR +0 02100 0 00717    00717 SXA +0 63400 2 00755    00720 TSX +0 07400 2 00755   
                   WORD = $ $                                                       055  LM00074
 00721 CLA +0 50000 0 00371    00722 STO +0 60100 0 00354                                                               
                   SCANB.                                                           056  LM00075
 00723 TSX +0 07400 4 00011                                                                                             
       GTLP        EDCT = EDCT + 1                                                  057  LM00076
 00724 CLA +0 50000 0 00030    00725 ADD +0 40000 0 00356    00726 STO +0 60100 0 00030                                 
                   WHENEVER LINE(EDCT) .E. BLANK .OR. EDCT .G. LENGTH               058  LM00077
                1          , FUNCTION RETURN WORD                                   058  LM00078
 00727 CLA +0 50000 0 00030    00730 SUB +0 40200 0 00200    00731 TZE +0 10000 0 00733    00732 TPL +0 12000 0 00737   
 00733 LXA +0 53400 1 00030    00734 CLA +0 50000 1 00345    00735 SUB +0 40200 0 00024    00736 TNZ -0 10000 0 00741   
 00737 CLA +0 50000 0 00354    00740 TRA +0 02000 0 00761                                                               
                   WORD = (WORD .LS. 6) .V. (LINE(EDCT) .A. 77K)                    059  LM00079
 00741 LXA +0 53400 1 00030    00742 CAL -0 50000 1 00345    00743 ANA -0 32000 0 00362    00744 SLW +0 60200 0 00765   
 00745 CAL -0 50000 0 00357    00746 STA +0 62100 0 00750    00747 CAL -0 50000 0 00354    00750 ALS +0 76700 0 00000   
 00751 ORA -0 50100 0 00765    00752 SLW +0 60200 0 00354                                                               
                   TRANSFER TO GTLP                                                 060  LM00080
 00753 TRA +0 02000 0 00020                                                                                             
                 END OF FUNCTION                                                    061  LM00081
 00754 TSX +0 07400 4 00002    00755 TXH +3 00000 0 00000    00756 SXD -0 63400 1 00755    00757 SXA +0 63400 4 00761   
 00760 TRA +0 02000 2 00001    00761 AXT +0 77400 4 00000    00762 LXA +0 53400 2 00755    00763 LXD -0 53400 1 00755   
 00764 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  062  LM00085
 00766 TRA +0 02000 0 01036                                                                                             
                 ENTRY TO NUM.                                                      063  LM00086
 00767 TRA +0 02000 0 00772    00010 TTR +0 02100 0 00770    00770 SXA +0 63400 2 01026    00771 TSX +0 07400 2 01026   
                   INT = 0                                                          064  LM00087
 00772 CLA +0 50000 0 00355    00773 STO +0 60100 0 00032                                                               
                   SCANB.                                                           065  LM00088
 00774 TSX +0 07400 4 00011                                                                                             
       MULP        EDCT = EDCT + 1                                                  066  LM00089
 00775 CLA +0 50000 0 00030    00776 ADD +0 40000 0 00356    00777 STO +0 60100 0 00030                                 
                   WHENEVER LINE(EDCT) .E. BLANK .OR. EDCT .G. LENGTH               067  LM00090
                1     .OR. LINE(EDCT) .G. 9, FUNCTION RETURN INT                    067  LM00091
 01000 LXA +0 53400 1 00030    01001 CLA +0 50000 1 00345    01002 SUB +0 40200 0 00360    01003 TZE +0 10000 0 01005   
 01004 TPL +0 12000 0 01014    01005 CLA +0 50000 0 00030    01006 SUB +0 40200 0 00200    01007 TZE +0 10000 0 01011   
 01010 TPL +0 12000 0 01014    01011 CLA +0 50000 1 00345    01012 SUB +0 40200 0 00024    01013 TNZ -0 10000 0 01016   
 01014 CLA +0 50000 0 00032    01015 TRA +0 02000 0 01032                                                               
                   INT = INT*10 + LINE(EDCT)                                        068  LM00092
 01016 LDQ +0 56000 0 00032    01017 MPY +0 20000 0 00361    01020 LXA +0 53400 2 00030    01021 XCA +0 13100 0 00000   
 01022 ADD +0 40000 2 00345    01023 STO +0 60100 0 00032                                                               
                   TRANSFER TO MULP                                                 069  LM00093
 01024 TRA +0 02000 0 00022                                                                                             
                 END OF FUNCTION                                                    070  LM00094
 01025 TSX +0 07400 4 00002    01026 TXH +3 00000 0 00000    01027 SXD -0 63400 1 01026    01030 SXA +0 63400 4 01032   
 01031 TRA +0 02000 2 00001    01032 AXT +0 77400 4 00000    01033 LXA +0 53400 2 01026    01034 LXD -0 53400 1 01026   
 01035 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  071  LM00098
 01036 TRA +0 02000 0 01073                                                                                             
                 ENTRY TO SCANB.                                                    072  LM00099
 01037 TRA +0 02000 0 01042    00011 TTR +0 02100 0 01040    01040 SXA +0 63400 2 01063    01041 TSX +0 07400 2 01063   
       SCANLP      WHENEVER LINE(EDCT+1) .NE. BLANK .OR. EDCT+1 .G. LENGTH          073  LM00100
                1       , FUNCTION RETURN                                           073  LM00101
 01042 CLA +0 50000 0 00030    01043 ADD +0 40000 0 00356    01044 SUB +0 40200 0 00200    01045 TZE +0 10000 0 01047   
 01046 TPL +0 12000 0 01055    01047 CLA +0 50000 0 00030    01050 ADD +0 40000 0 00356    01051 PAX +0 73400 1 00000   
 01052 CLA +0 50000 1 00345    01053 SUB +0 40200 0 00024    01054 TZE +0 10000 0 01056    01055 TRA +0 02000 0 01067   
                   EDCT = EDCT+1                                                    074  LM00102
 01056 CLA +0 50000 0 00030    01057 ADD +0 40000 0 00356    01060 STO +0 60100 0 00030                                 
                   TRANSFER TO SCANLP                                               075  LM00103
 01061 TRA +0 02000 0 00023                                                                                             
                 END OF FUNCTION                                                    076  LM00104
 01062 TSX +0 07400 4 00002    01063 TXH +3 00000 0 00000    01064 SXD -0 63400 1 01063    01065 SXA +0 63400 4 01067   
 01066 TRA +0 02000 2 00001    01067 AXT +0 77400 4 00000    01070 LXA +0 53400 2 01063    01071 LXD -0 53400 1 01063   
 01072 TRA +0 02000 4 00001                                                                                             
                 END OF FUNCTION                                                    077  LM00106
 01073 TSX +0 07400 4 00002    01074 PZE +0 00000 0 00002    01075 TXH +3 00000 0 00000    01076 SXD -0 63400 1 01075   
 01077 SXA +0 63400 4 01116    01100 CLA +0 50000 4 00001    01101 STO +0 60100 0 00470    01102 STA +0 62100 0 00474   
 01103 STA +0 62100 0 00561    01104 STO +0 60100 0 00625    01105 STA +0 62100 0 00630    01106 STO +0 60100 0 00640   
 01107 STO +0 60100 0 00642    01110 STO +0 60100 0 00667    01111 STA +0 62100 0 00671    01112 CLA +0 50000 4 00002   
 01113 SUB +0 40200 0 01074    01114 STA +0 62100 0 00537    01115 TRA +0 02000 2 00001    01116 AXT +0 77400 4 00000   
 01117 LXA +0 53400 2 01075    01120 LXD -0 53400 1 01075    01121 TRA +0 02000 4 00001                                 
1     MAD PROGRAM LISTING ... ... ...                 FILE  SYMSTO   MAD            02/08/68    1245.2
-                 
                 ..  SYMBOL TABLE PACKAGE.                                                             LM00001    
                                                                                                       LM00002    
                 ..  J. H. SALTZER, JANUARY, 1965.                                                     LM00003    
                                                                                                       LM00004    
                  EXTERNAL FUNCTION(SYMBOL, VALUE)                                                *001 LM00005    
                  NORMAL MODE IS INTEGER                                                          *002 LM00006    
                  DIMENSION SYM(10), VAL(10)                                                      *003 LM00007    
                  VECTOR VALUES COUNT = 0                                                         *004 LM00008    
                                                                                                       LM00009    
                  ENTRY TO SYMSTO.                                                                *005 LM00010    
                    WHENEVER COUNT .GE. 10                                                        *006 LM00011    
                      PRINTCOMMENT $0S0Y0M0B0O0L0 0T0A0B0L0E0 0O0V0E0R0F0L0O0W$                   *007 LM00012    
                      FUNCTION RETURN                                                             *008 LM00013    
                    END OF CONDITIONAL                                                            *009 LM00014    
                    COUNT = COUNT + 1                                                             *010 LM00015    
                    SYM(COUNT) = SYMBOL                                                           *011 LM00016    
                    VAL(COUNT) = VALUE                                                            *012 LM00017    
                    FUNCTION RETURN                                                               *013 LM00018    
                                                                                                       LM00019    
                  ENTRY TO SYMGET.                                                                *014 LM00020    
                    THROUGH LOOK, FOR I = 1, 1, I .G. COUNT                                       *015 LM00021    
       LOOK           WHENEVER SYM(I) .E. SYMBOL, FUNCTION RETURN VAL(I)                          *016 LM00022    
                    FUNCTION RETURN 0                                                             *017 LM00023    
                  END OF FUNCTION                                                                 *018 LM00024    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00140 TRANSFER VECTOR LENGTH  00002 PROGRAM BEGINS    00037
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      SYMGET 00072   0        SYMSTO 00040   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      COUNT  00003 A 1        I      00004   1        LOOK   00002   4        SYM    00017 A 1        VAL    00032 A 1  
0FUNCTION DICTIONARY    
      EXIT   00000   1        .PCOMT 00001   1                                                                          
0ABSOLUTE CONSTANTS     
 00033 +000000000000     00035 +000000000012     00034 +000000000001     00036 +233000000000                            
0PROGRAM    
                 EXTERNAL FUNCTION(SYMBOL, VALUE)                                   001  LM00005
                 NORMAL MODE IS INTEGER                                             002  LM00006
                 DIMENSION SYM(10), VAL(10)                                         003  LM00007
                 VECTOR VALUES COUNT = 0                                            004  LM00008
 00003     +0 00000 0 00000                                                                                             
                 ENTRY TO SYMSTO.                                                   005  LM00010
 00037 TRA +0 02000 0 00042    00040 SXA +0 63400 2 00121    00041 TSX +0 07400 2 00121                                 
                   W'R COUNT .GE. 10                                                006  LM00011
 00042 CLA +0 50000 0 00003    00043 SUB +0 40200 0 00035    00044 TZE +0 10000 0 00046    00045 TMI -0 12000 0 00060   
                     PRINTCOMMENT $0S0Y0M0B0O0L0 0T0A0B0L0E0 0O0V0E0R0F0L0O0W$      007  LM00012
 00046 TSX +0 07400 4 00001    00047     +0 00000 0 00007    00050     +0 06200 7 00044    00051     +0 02200 4 60043   
 00052     +0 06000 6 30021    00053     +0 02200 4 30025    00054     +0 06000 4 60065    00055     +0 02500 5 10026   
 00056     +0 04300 4 60066                                                                                             
                     FUNCTION RETURN                                                008  LM00013
 00057 TRA +0 02000 0 00132                                                                                             
                   END OF CONDITIONAL                                               009  LM00014
                   COUNT = COUNT + 1                                                010  LM00015
 00060 CLA +0 50000 0 00003    00061 ADD +0 40000 0 00034    00062 STO +0 60100 0 00003                                 
                   SYM(COUNT) = SYMBOL                                              011  LM00016
 00063 LXA +0 53400 1 00003    00064 CLA +0 50000 0 00024    00065 STO +0 60100 1 00017                                 
                   VAL(COUNT) = VALUE                                               012  LM00017
 00066 CLA +0 50000 0 00024    00067 STO +0 60100 1 00032                                                               
                   FUNCTION RETURN                                                  013  LM00018
 00070 TRA +0 02000 0 00132                                                                                             
                 ENTRY TO SYMGET.                                                   014  LM00020
 00071 TRA +0 02000 0 00074    00072 SXA +0 63400 2 00121    00073 TSX +0 07400 2 00121                                 
                   THROUGH LOOK, FOR I = 1, 1, I .G. COUNT                          015  LM00021
 00074 CLA +0 50000 0 00034    00075 STO +0 60100 0 00004    00076 TRA +0 02000 0 00102    00077 CLA +0 50000 0 00004   
 00100 ADD +0 40000 0 00034    00101 STO +0 60100 0 00004    00102 CLA +0 50000 0 00004    00103 SUB +0 40200 0 00003   
 00104 TZE +0 10000 0 00106    00105 TPL +0 12000 0 00116                                                               
       LOOK          WHENEVER SYM(I) .E. SYMBOL, FUNCTION RETURN VAL(I)             016  LM00022
 00106 LXA +0 53400 1 00004    00107 CLA +0 50000 1 00017    00110 SUB +0 40200 0 00024    00111 TNZ -0 10000 0 00115   
 00112 LXA +0 53400 2 00004    00113 CLA +0 50000 2 00032    00114 TRA +0 02000 0 00132    00115 TRA +0 02000 0 00077   
                   FUNCTION RETURN 0                                                017  LM00023
 00116 CLA +0 50000 0 00033    00117 TRA +0 02000 0 00132                                                               
                 END OF FUNCTION                                                    018  LM00024
 00120 TSX +0 07400 4 00000    00121 TXH +3 00000 0 00000    00122 SXD -0 63400 1 00121    00123 SXA +0 63400 4 00132   
 00124 CLA +0 50000 4 00001    00125 STA +0 62100 0 00064    00126 STA +0 62100 0 00110    00127 CLA +0 50000 4 00002   
 00130 STA +0 62100 0 00066    00131 TRA +0 02000 2 00001    00132 AXT +0 77400 4 00000    00133 LXA +0 53400 2 00121   
 00134 LXD -0 53400 1 00121    00135 TRA +0 02000 4 00001                                                               
1            RUNOFF OUTPUT ROUTINE.                                                              PAGE 1     
                  
                              *              J. H. SALTZER, NOVEMBER, 1964.   
                              *              MODIFIED 7/18/67 FOR 6-BIT FILE OUTPUT 
                              *              BY MICHAEL R COMER   
                              *     
                       00513         ENTRY SETPK           SET UP OUTPUT BUFFERS.   
                       00011         ENTRY   PACK          ADD CHARACTERS TO OUTPUT PAGE. 
                       00420         ENTRY   PRPAGE        PRINT OUT THE PAGE.
                       00507         ENTRY   RSPAGE        RESET PAGE, THROW AWAY CHARACTERS.   
                       00556         ENTRY   WAIT          WAIT FOR RETURN FROM CONSOLE   
                       00563         ENTRY   PKOFF         SHUT DOWN OPERATIONS.    
                              *     
                  
        TRANSFER VECTOR 
      00000  512544214760     REMAP 
      00001  665166213163     WRWAIT
      00002  272563226426     GETBUF
      00003  464725456060     OPEN  
      00004  226426262551     BUFFER
      00005  234346622560     CLOSE 
                  
            LINKAGE DIRECTOR  
      00006  000000000000     
      00007  622563474260     
                  
                       00014  NBITS  EQU     12 
                       00006  ABITS  EQU     6  
                       04540  BUFSIZ EQU     2400          ROOM FOR MORE THAN ONE PAGE.   
      00010  0 00000 0 04540  BUFLEN         BUFSIZ   
                              *     
      00011  0634 00 1 00406   PACK  SXA     PR1,1         SAVE IRS.    
      00012  0634 00 2 00407         SXA     PR2,2    
      00013  0634 00 3 00410         SXA     PR3,3    
      00014  0634 00 4 00411         SXA     PR4,4    
      00015 -0500 60 4 00002         CAL*    2,4           GET COUNT OF CHARACTERS TO MOVE.     
      00016  0100 00 4 00003         TZE     3,4           SKIP WORK IF NONE. 
      00017  0402 00 0 00616         SUB     =1            SETUP END TEST.    
      00020  0767 00 0 00022         ALS     18 
      00021  0622 00 0 00370         STD     LEAVE    
      00022 -0500 00 4 00001         CAL     1,4           GET ARRAY ADDRESS. 
      00023  0621 00 0 00371         STA     NUCHAR   
      00024  0534 00 3 00413         LXA     NCHARS,3      LOAD UP OUTPUT CHARACTER COUNT.
      00025  0535 00 2 00416         LAC     NWRDS,2       AND WORD COUNT.    
      00026  3 00000 2 00031         TXH     *+3,2,0  
      00027  0520 00 0 00576         ZET     OUTSW    
      00030  0074 00 4 00327         TSX     STRTLN,4 
      00031  0774 00 1 00000         AXT     0,1           SETUP ARRAY INDEX. 
      00032 -0500 00 0 00417         CAL     UNFIN         GET UNFINISHED WORD.     
      00033 -0520 00 0 00576         NZT     OUTSW         IS OUTPUT TO TYPEWRITER. 
      00034  0020 00 0 00371         TRA     NUCHAR        ENTER LOOP.  
      00035  0020 00 0 00040         TRA     ASCHAR        OUTPUT TO PRINTER, ENTER LOOP. 
      00036  0774 00 3 00000  NUWRD1 AXT     0,3            RESET CHARACTER COUNTER 
      00037  0522 00 0 00370  LEAVE1 XEC     LEAVE          SEE IF INPUT IS EXHAUSTED     
      00040  0522 00 0 00371  ASCHAR XEC     NUCHAR         GET NEXT CHARACTER
      00041  0602 00 0 00415         SLW     TEMP1          SAVE PARTIAL WORD 
      00042 -0130 00 0 00000         XCL                    CHAR TO AC  
      00043 -0320 00 0 00623         ANA     =O177          KILL MINUS ZEROES FROM MAD    
1            RUNOFF OUTPUT ROUTINE.                                                              PAGE 2     
                  
      00044 -0340 00 0 00621         LAS     =O55           SEE IF CARRIAGE RETURN  
      00045  0020 00 0 00047         TRA     *+2            NO    
      00046  0020 00 0 00111         TRA     RSETLN         YES, START NEXT LINE    
      00047 -0340 00 0 00620         LAS     =O52           SEE IF FORM FEED  
      00050  0020 00 0 00052         TRA     *+2            NO    
      00051  0020 00 0 00116         TRA     EJECT          YES, GO EJECT     
      00052  0634 00 1 00073         SXA     C1,1           SAVE CVR XR 
      00053 -0340 00 0 00622         LAS     =O100          SMALL OR CAP .Q   
      00054  0020 00 0 00060         TRA     CVRCAP         CAP   
      00055  0020 00 0 00060         TRA     CVRCAP         CAP   
      00056  0114 01 1 00127         CVR     TBL,1,1        SMALL, CONVERT TO LEGAL 6-BIT 
      00057  0020 00 0 00061         TRA     *+2            SKIP CAPS   
      00060  0114 01 1 00227  CVRCAP CVR     TBL+64,1,1     CONVERT TO LEGAL 6-BIT  
      00061  0771 00 0 00036         ARS     30             CHAR TO BITS 30-35
      00062 -0130 00 0 00000         XCL                    TO MQ 
      00063  0754 00 1 00000         PXA     ,1             WAS CHAR BACKSPACE 9(O135)    
      00064  0361 00 0 00605         ACL     BACKSP         IF SO, 1 IS ADDED TP    
      00065  0602 00 0 00605         SLW     BACKSP         BACKSPACE COUNTER 
      00066 -0100 00 0 00102         TNZ     ANULL          IF BS COUNTER IS NOT ZERO, SKIP THIS CHAR 
      00067 -0500 00 0 00415         CAL     TEMP1          GET PARTIAL WORD  
      00070 -0773 00 0 00036         RQL     36-ABITS       SHIFT TO POSITION 
      00071 -0763 00 0 00006         LGL     ABITS          ADD TO WORD 
      00072  1 00001 3 00073         TXI     *+1,3,1        INC. CHAR COUNTER 
      00073  0774 00 1 00000  C1     AXT     ,1             RESTOR INPUT COUNTER    
      00074  1 00001 1 00075         TXI     *+1,1,1        COUNT 
      00075 -3 00005 3 00037         TXL     LEAVE1,3,36/ABITS-1  IS WORD FULL
      00076  0522 00 0 00400         XEC     BF3            YES, STORE WORD   
      00077  1 77777 2 00100         TXI     *+1,2,-1       COUNT WORD  
      00100  3 73240 2 00036         TXH     NUWRD1,2,-BUFSIZ  DON'T OVERFLOW OUTPUT
      00101  0020 00 0 00403         TRA     MORE           EXIT  
      00102  0754 00 1 00000  ANULL  PXA     ,1             GET BACKSP INDIC  
      00103 -0100 00 0 00107         TNZ     SKIP           SKIP IF LAST CHAR WAS BACKSP  
      00104 -0500 00 0 00605         CAL     BACKSP         DECREASE BACKSP COUNTER 
      00105  0402 00 0 00616         SUB     =1             ..    
      00106  0602 00 0 00605         SLW     BACKSP         ..    
      00107 -0500 00 0 00415  SKIP   CAL     TEMP1          RESTOR PARTIAL WORD     
      00110  0020 00 0 00073         TRA     C1             IGNORE THIS CHARACTER   
      00111  1 00001 1 00112  RSETLN TXI     *+1,1,1        COUNT INPUT 
      00112  0074 00 4 00340         TSX     ENDLIN,4       END LAST LINE     
      00113  0074 00 4 00327         TSX     STRTLN,4       START NEXT LINE   
      00114  3 73240 2 00036         TXH     NUWRD1,2,-BUFSIZ  CONTINUE 
      00115  0020 00 0 00403         TRA     MORE     
      00116 -3 00000 3 00121  EJECT  TXL     *+3,3,0        SKIP IF NEW LINE  
      00117  0074 00 4 00340         TSX     ENDLIN,4 
      00120  0074 00 4 00327         TSX     STRTLN,4       START NEW LINE    
      00121 -0500 00 0 00607         CAL     EJCTMK         GET EJECT   
      00122  1 00001 2 00123         TXI     *+1,2,1        POINT TO CONTROL WORD   
      00123  0522 00 0 00400         XEC     BF3            GAZABE
      00124  1 77777 2 00125         TXI     *+1,2,-1       POINT BACK  
      00125  1 00001 1 00126         TXI     *+1,1,1        COUNT INPUT 
      00126  0020 00 0 00036         TRA     NUWRD1         CONTINUE    
                              *     
                       00127  TBL    SYN     *  
                              V      MACRO   VAL
                                     IRP     VAL
                                     IFF     1,VAL    
1            RUNOFF OUTPUT ROUTINE.                                                              PAGE 3     
                  
                                     VFD     O6/60    
                                     IFF     0,VAL    
                                     VFD     O6/VAL   
                                     IRP  
                              V      END  
                              *     
      00127                          V       (0,1,2,3,4,5,6,7) CVR TABLES     
      00137                          V       (10,11,12,13,14,,,)  
      00147                          V       (20,21,22,23,24,25,26,27)  
      00157                          V       (30,31,,33,34,33,,)  
      00167                          V       (40,41,42,43,44,45,46,47)  
      00177                          V       (50,51,,53,54,,,57)  
      00207                          V       (60,61,62,63,64,65,66,67)  
      00217                          V       (70,71,72,73,74,,,)  
      00227                          V       (,,,73,,,,)    
      00237                          V       (,,,,33,,,)    
      00247                          V       (20,21,22,23,24,25,26,27)  
      00257                          V       (30,31,,,)     
      00264 +000000000001            OCT     1  
      00265                          V       (,14)    
      00267                          V       (,41,42,43,44,45,46,47)    
      00277                          V       (50,51,,,,,33,)
      00307                          V       (,,62,63,64,65,66,67)
      00317                          V       (70,71,72,,,,,)
                              *     
      00327 -0500 00 0 00604  STRTLN CAL     LINMRK         GET LINE MARK     
      00330  0522 00 0 00400         XEC     BF3            STORE 
      00331  1 77777 2 00332         TXI     *+1,2,-1       COUNT 
      00332  3 73240 2 00334         TXH     *+2,2,-BUFSIZ  IS BUF FULL 
      00333  0020 00 4 00001         TRA     1,4            YES, RETURN 
      00334 -0500 00 0 00606         CAL     BLANKS         NO, GET CARRIAGE CONTROL
      00335  0522 00 0 00400         XEC     BF3            GAZABE
      00336  1 77777 2 00337         TXI     *+1,2,-1       COUNT 
      00337  0020 00 4 00001         TRA     1,4            RETURN
                              *     
      00340  0636 00 2 00416  ENDLIN SCA     NWRDS,2        SAVE COUNT  
      00341  1 00001 2 00342         TXI     *+1,2,1        DON'T START TOO HIGH    
      00342 -0500 00 0 00604         CAL     LINMRK         GET MODEL   
      00343 -0340 60 0 00400         LAS*    BF3            CHECK FOR .GE.    
      00344  1 00001 2 00343         TXI     *-1,2,1        NO,BACKSPACE AND TRY AGAIN    
      00345  0020 00 0 00346         TRA     *+1            YES   
      00346  0754 00 2 00000         PXA     ,2             YES,GET-NEWCOUNT  
      00347  0361 00 0 00416         ACL     NWRDS          ADD OLDCOUNT
      00350  0402 00 0 00616         SUB     =1             MAKE IT COME OUT RIGHT  
      00351  0621 60 0 00400         STA*    BF3            STICK IN LINE MARK
      00352  0535 00 2 00416         LAC     NWRDS,2        RESET COUNT 
      00353  3 00000 3 00355         TXH     *+2,3,0        CHECK FOR UNFINISHED WORD     
      00354  0020 00 4 00001         TRA     1,4            NO,RETURN   
      00355 -0500 00 0 00415         CAL     TEMP1          YES, GET WORD     
      00356  0560 00 0 00574  GNULL  LDQ     NULL           FILL WITH NULLS   
      00357 -0773 00 0 00036         RQL     36-ABITS       ..    
      00360 -0763 00 0 00006         LGL     ABITS          ..    
      00361  1 00001 3 00362         TXI     *+1,3,1        ..    
      00362 -3 00005 3 00356         TXL     GNULL,3,36/ABITS-1   
      00363  0522 00 0 00400         XEC     BF3            STORE 
      00364  1 77777 2 00365         TXI     *+1,2,-1       COUNT 
1            RUNOFF OUTPUT ROUTINE.                                                              PAGE 4     
                  
      00365  0774 00 3 00000         AXT     0,3            ANNOUNCE FINISHED WORD  
      00366  0020 00 0 00340         TRA     ENDLIN         FIX LINE MARK     
                              *     
                              *     
                              *     
      00367  0774 00 3 00000   NUWRD AXT     0,3           RESET CHARACTER COUNTER. 
      00370  3 00000 1 00403   LEAVE TXH     MORE,1,--     SEE IF INPUT IS EXHAUSTED.     
      00371  0560 00 1 00000  NUCHAR LDQ     --,1          GET NEXT INPUT INPUT CHARACTER.
      00372  0074 00 4 00000         TSX     $REMAP,4      GO REMAP IT. 
      00373 -0773 00 0 00030         RQL     36-NBITS      SHIFT TO POSITION. 
      00374 -0763 00 0 00014         LGL     NBITS         ADD TO CURRENT WORD.     
      00375  1 00001 3 00376         TXI     *+1,3,1       COUNT CHARACTERS.  
      00376  1 00001 1 00377         TXI     *+1,1,1       COUNT WORDS IN INPUT USED.     
      00377 -3 00002 3 00370         TXL     LEAVE,3,36/NBITS-1      IS WORD FULL.  
      00400  0602 00 2 00000   BF3   SLW     --,2          YES, STORE WORD.   
      00401  1 77777 2 00402         TXI     *+1,2,-1      ADJUST WORD COUNT. 
      00402  3 73240 2 00367         TXH     NUWRD,2,-BUFSIZ         DON'T OVERFLOW BUFFER.     
                              *     
      00403  0602 00 0 00417   MORE  SLW     UNFIN         NEED MORE CHARACTERS, SAVE WORD.     
      00404  0634 00 3 00413         SXA     NCHARS,3      SAVE CHARACTER COUNT.    
      00405  0636 00 2 00416         SCA     NWRDS,2       SAVE WORD COUNT.   
      00406  0774 00 1 00000   PR1   AXT     --,1     
      00407  0774 00 2 00000   PR2   AXT     --,2     
      00410  0774 00 3 00000  PR3    AXT     --,3     
      00411  0774 00 4 00000   PR4   AXT     --,4     
      00412  0020 00 4 00003         TRA     3,4
                              *     
      00413  0 00000 0 00000  NCHARS
      00414  0 00000 0 00000  TEMP  
      00415  0 00000 0 00000  TEMP1 
      00416  0 00000 0 00000  NWRDS 
      00417  0 00000 0 00000  UNFIN 
                              *     
      00420  0634 00 1 00467  PRPAGE SXA     PPR1,1   
      00421  0634 00 2 00470         SXA     PPR2,2   
      00422  0634 00 4 00471         SXA     PPR4,4   
      00423  0520 00 0 00576         ZET     OUTSW         IS OUTPUT TO FILE. 
      00424  0020 00 0 00473         TRA     ASCOUT        YES, GO WRITE FILE INSTEAD.    
      00425  0534 00 1 00413         LXA     NCHARS,1      GET CHARACTER COUNT.     
      00426 -3 00000 1 00441         TXL     NONUL,1,0     SEE IF LAST WORD NEEDS FILLING.
                              *     
      00427 -0500 00 0 00417         CAL     UNFIN         LAST WORD NEEDS FILLING. 
      00430  0560 00 0 00574   AGN   LDQ     NULL          GET A NULL CHARACTER.    
      00431 -0773 00 0 00030         RQL     36-NBITS      SHIFT TO POSITION. 
      00432 -0763 00 0 00014         LGL     NBITS         INSERT.
      00433  1 00001 1 00434         TXI     *+1,1,1       COUNT. 
      00434 -3 00002 1 00430         TXL     AGN,1,36/NBITS-1        CHECK FOR FULL WORD. 
      00435  0535 00 2 00416         LAC     NWRDS,2  
      00436  0602 00 2 00000   BF2   SLW     --,2          INSERT FULL WORD.  
      00437  1 77777 2 00440         TXI     *+1,2,-1      COUNT WORD.  
      00440  0636 00 2 00416         SCA     NWRDS,2       SAVE COUNT.  
                              *     
      00441  0560 00 0 00416  NONUL  LDQ     NWRDS         GET WORD COUNT.    
      00442 -0754 00 0 00000         ZAC  
      00443  0221 00 0 00617         DVP     =14           COMPUTE NUMBER OF CALLS. 
      00444  0767 00 0 00022         ALS     18 
1            RUNOFF OUTPUT ROUTINE.                                                              PAGE 5     
                  
      00445  0622 00 0 00462         STD     LASTCT        SAVE LENGTH OF LAST CALL.
      00446  0131 00 0 00000         XCA                   GET NUMBER OF CALLS.     
      00447  0734 00 1 00000         PAX     0,1
      00450  0074 00 4 00611         TSX     SETFUL,4      SET BCD MODE.
      00451  0774 00 2 00000   BF1   AXT     --,2          GET OUTPUT POSITION.     
      00452  1 00001 1 00457         TXI     LPTST,1,1     CHECK FOR NO LOOP NECESSARY.   
      00453  0634 00 2 00455   WRLP  SXA     ADR,2         STORE OUTPUT POSITION.   
      00454  0074 00 4 00612         TSX     WRFLXA,4      WRITE OUT CHARACTERS.    
      00455  0 00016 0 00000   ADR           --,,14   
      00456  1 00016 2 00457         TXI     *+1,2,14      INDEX OUTPUT POSITION.   
      00457  2 00001 1 00453   LPTST TIX     WRLP,1,1      INDEX, DO AGAIN.   
      00460  0634 00 2 00462         SXA     LASTCT,2      SAVE LAST BUFFER ADDRESS.
      00461  0074 00 4 00612         TSX     WRFLXA,4      WRITE LAST LINE.   
      00462  0 00000 0 00000  LASTCT         --,,--   
                              *     
      00463  0074 00 4 00613         TSX     SETBCD,4 
      00464  0600 00 0 00416  DONEPR STZ     NWRDS         RESET COUNTERS.    
      00465  0600 00 0 00413         STZ     NCHARS   
      00466  0600 00 0 00417         STZ     UNFIN    
      00467  0774 00 1 00000   PPR1  AXT     --,1     
      00470  0774 00 2 00000   PPR2  AXT     --,2     
      00471  0774 00 4 00000   PPR4  AXT     --,4     
      00472  0020 00 4 00001         TRA     1,4
                              *     
      00473  0634 00 3 00477  ASCOUT SXA     PPR3,3         I GUESS WE SHOULD SAVE IT SOMEWHERE 
      00474  0534 00 3 00413         LXA     NCHARS,3       SETUP CHAR COUNT  
      00475  0535 00 2 00416         LAC     NWRDS,2        AND WORD COUNT    
      00476  0074 00 4 00340         TSX     ENDLIN,4       CLOSE LAST LINE   
      00477  0774 00 3 00000  PPR3   AXT     ,3 
      00500  0636 00 2 00416         SCA     NWRDS,2       SAVE COUNT.  
      00501  0074 00 4 00001  WRITE  TSX     $WRWAIT,4
 TD   00502  3 00000 0 00577         TXH     OUTNAM   
 TD   00503  3 00000 0 00600         TXH     NAME2    
 TD   00504  3 00000 0 00615         TXH     =0 
      00505  2 00416 0 00000  BF8    TIX     --,,NWRDS
      00506  0020 00 0 00464         TRA     DONEPR   
                              *     
      00507  0600 00 0 00416  RSPAGE STZ     NWRDS         RESET WORD COUNT.  
      00510  0600 00 0 00413         STZ     NCHARS        CHARACTER COUNT.   
      00511  0600 00 0 00417         STZ     UNFIN         ..     
      00512  0020 00 4 00001         TRA     1,4
                              *     
      00513  0634 00 4 00553  SETPK  SXA     PK4,4         SET UP PACK BUFFERS.     
      00514  0634 00 2 00554         SXA     PK2,2    
      00515 -0500 60 4 00001         CAL*    1,4           GET ARGUMENTS.     
      00516  0602 00 0 00577         SLW     OUTNAM        OUTPUT FILE NAME, IF ANY.
      00517 -0500 60 4 00002         CAL*    2,4           ..     
      00520  0602 00 0 00576         SLW     OUTSW         SWITCH ON IF FILE DESIRED.     
      00521  0020 00 0 00522   SW1   TRA     *+1           ONE-TIME SWITCH.   
      00522 -0500 00 0 00010         CAL     BUFLEN        GET SIZE OF BUFFER NEEDED.     
      00523  0074 00 4 00002         TSX     $GETBUF,4      SET UP BUFFER.    
      00524  0621 00 0 00451         STA     BF1           SET UP USERS.
      00525  0621 00 0 00505         STA     BF8
      00526  0621 00 0 00436         STA     BF2
      00527  0621 00 0 00400         STA     BF3
      00530 -0520 00 0 00576         NZT     OUTSW         IS OUTPUT FILE WANTED.   
1            RUNOFF OUTPUT ROUTINE.                                                              PAGE 6     
                  
      00531  0020 00 0 00552         TRA     DSET          NO, SKIP SETUP.    
      00532 -0500 00 0 00601         CAL     TRKLEN        YES, GET OUTPUT BUFFER.  
      00533  0074 00 4 00002         TSX     $GETBUF,4     ..     
      00534  0621 00 0 00544         STA     BF9           ..     
      00535  0074 00 4 00003         TSX     $OPEN,4       OPEN OUTPUT FILE.  
 TD   00536  3 00000 0 00631         TXH     =HW
 TD   00537  3 00000 0 00577         TXH     OUTNAM   
 TD   00540  3 00000 0 00600         TXH     NAME2    
      00541  0074 00 4 00004         TSX     $BUFFER,4     GIVE IT A BUFFER.  
 TD   00542  3 00000 0 00577         TXH     OUTNAM                                 000000
 TD   00543  3 00000 0 00600         TXH     NAME2    
      00544  3 00660 0 00000  BF9    TXH     --,,TRKSIZ     
      00545  0074 00 4 00001         TSX     $WRWAIT,4     WRITE OUT FIRST WORD.    
 TD   00546  3 00000 0 00577         TXH     OUTNAM   
 TD   00547  3 00000 0 00600         TXH     NAME2    
 TD   00550  3 00000 0 00615         TXH     =0 
      00551  3 00002 0 00602         TXH     FIRST,,2      SKIP TO TOP OF FIRST PAGE.     
      00552 -0625 00 0 00521  DSET   STL     SW1           RESET SWITCH.
      00553  0774 00 4 00000  PK4    AXT     --,4          RETURN.
      00554  0774 00 2 00000  PK2    AXT     ,2 
      00555  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00556  0634 00 4 00561  WAIT   SXA     RETURN,4      ENTRY TO WAIT FOR SIGNAL FROM CONSOLE.     
      00557  0074 00 4 00614         TSX     RDFLXA,4      SIGNAL IS A CARRIAGE RETURN.   
      00560  0 00001 0 00573                 IN,,1         READ INTO DRAIN BUFFER.  
      00561  0774 00 4 00000  RETURN AXT     --,4     
      00562  0020 00 4 00001         TRA     1,4
                              *     
      00563 -0520 00 0 00576  PKOFF  NZT     OUTSW         WAS OUTPUT DONE TO FILE. 
      00564  0020 00 4 00001         TRA     1,4           NO, RETURN.  
      00565  0634 00 4 00571         SXA     OF4,4         YES, CLOSE FILE.   
      00566  0074 00 4 00005         TSX     $CLOSE,4      ..     
 TD   00567  3 00000 0 00577         TXH     OUTNAM   
 TD   00570  3 00000 0 00600         TXH     NAME2    
      00571  0774 00 4 00000  OF4    AXT     --,4          ..     
      00572  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
      00573  0 00000 0 00000  IN                           INPUT BUFFER FOR CONSOLE SIGNAL.     
                              *     
      00574 +000000000057      NULL  OCT     57            NULL CHARACTER.    
      00575 +000000000000     ASCNUL OCT     0  
      00576  0 00000 0 00000  OUTSW                        NON-ZERO IF FILE OUTPUT WANTED.
      00577  0 00000 0 00000  OUTNAM                       BCD NAME OF OUTPUT FILE  
      00600  516445462626     NAME2  BCI     1,RUNOFF      SECONDARY NAME OF OUTPUT FILE. 
                       00660  TRKSIZ EQU     432           OUTPUT BUFFER SIZE.
      00601  0 00000 0 00660  TRKLEN         TRKSIZ        WORD CONTAINING SAME.    
      00602 -377777000001     FIRST  OCT     777777000001   FIRST TWO WORDS   
      00603 +015757575757            OCT     015757575757   OF OUTPUT FILE    
      00604 -377777000000     LINMRK OCT     777777000000   SEE STATEMENT LABLE     
      00605  0 00000 0 00000  BACKSP                        BACKSPACE COUNTER 
      00606  616060606060     BLANKS BCI     1,/            NORMAL CARRIAGE CONTROL 
      00607 +015757575757     EJCTMK OCT     015757575757   EJECT CARRIAGE    
                              *     
      00610  0101 00 0 00630  WRFLX  TIA     =HWRFLX  
      00611  0101 00 0 00626  SETFUL TIA     =HSETFUL 
      00612  0101 00 0 00627  WRFLXA TIA     =HWRFLXA 
1            RUNOFF OUTPUT ROUTINE.                                                              PAGE 7     
                  
      00613  0101 00 0 00625  SETBCD TIA     =HSETBCD 
      00614  0101 00 0 00624  RDFLXA TIA     =HRDFLXA 
                              *     
                                     END  
                  
        LITERALS  
      00615  000000000000     
      00616  000000000001     
      00617  000000000016     
      00620  000000000052     
      00621  000000000055     
      00622  000000000100     
      00623  000000000177     
      00624  512426436721     
      00625  622563222324     
      00626  622563266443     
      00627  665126436721     
      00630  665126436760     
      00631  666060606060     
1            RUNOFF OUTPUT ROUTINE.                                                              PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        632 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         73     C1    52,  110
        573     IN   560
        455    ADR   453
        430    AGN   434
        451    BF1   524
        436    BF2   526
        400    BF3    76,  123,  330,  335,  343,  351,  363,  527
        505    BF8   525
        544    BF9   534
        571    OF4   565
        554    PK2   514
        553    PK4   513
        406    PR1    11
        407    PR2    12
        410    PR3    13
        411    PR4    14
        521    SW1   552
        127    TBL    56,   60,  127
        552   DSET   531
        403   MORE   101,  115,  370
        574   NULL   356,  430
          3   OPEN   535
         11   PACK     0
        467   PPR1   420
        470   PPR2   421
        477   PPR3   473
        471   PPR4   422
        107   SKIP   103
        414   TEMP      
        556   WAIT     0
        453   WRLP   457
          6  ABITS    10,   70,   71,   75,  357,  360,  362
        102  ANULL    66
          5  CLOSE   566
        116  EJECT    51
        602  FIRST   551
        356  GNULL   362
        370  LEAVE    21,   37,  377
        457  LPTST   452
        600  NAME2   503,  540,  543,  547,  570
         14  NBITS    10,  373,  374,  377,  431,  432,  434
        441  NONUL   426
        367  NUWRD   402
        416  NWRDS    25,  340,  347,  352,  405,  435,  440,  441,  464,  475,  500,  505,  507
        576  OUTSW    27,   33,  423,  520,  530,  563
        563  PKOFF     0
          0  REMAP   372
        513  SETPK     0
        415  TEMP1    41,   67,  107,  355
        417  UNFIN    32,  403,  427,  466,  511
        610  WRFLX      
1            RUNOFF OUTPUT ROUTINE.                                                              PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        501  WRITE      
         40 ASCHAR    35
        575 ASCNUL      
        473 ASCOUT   424
        605 BACKSP    64,   65,  104,  106
        606 BLANKS   334
          4 BUFFER   541
         10 BUFLEN   522
       4540 BUFSIZ    10,  100,  114,  332,  402
         60 CVRCAP    54,   55
        464 DONEPR   506
        607 EJCTMK   121
        340 ENDLIN   112,  117,  366,  476
          2 GETBUF   523,  533
        462 LASTCT   445,  460
         37 LEAVE1    75
        604 LINMRK   327,  342
        413 NCHARS    24,  404,  425,  465,  474,  510
        371 NUCHAR    23,   34,   40
         36 NUWRD1   100,  114,  126
        577 OUTNAM   502,  516,  537,  542,  546,  567
        420 PRPAGE     0
        614 RDFLXA   557
        561 RETURN   556
        111 RSETLN    46
        507 RSPAGE     0
        613 SETBCD   463
        611 SETFUL   450
        327 STRTLN    30,  113,  120
        601 TRKLEN   532
        660 TRKSIZ   544,  601
        612 WRFLXA   454,  461
          1 WRWAIT   501,  545
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            CHARACTER REMAPPING PACKAGE.                                                        PAGE 1     
                  
                              *      CTSS CHARACTERS WHICH HAVE EQUIVALENTS ON THE NON-STANDARD BALL  
                              *      ARE TYPED, THOSE WHICH DON'T ARE PRINTED AS SPACE.   
                              *     
                       00001         ENTRY   REMAP         GET CORRECT CHARACTER.   
                       00015         ENTRY   CHBALL        SET CORRECT MAPPING TABLE.     
                              *     
                              *      CALLING SEQUENCE,
                              *              LDQ           CHAR     GET INPUT CHARACTER.  
                              *              TSX           REMAP,4  MAP IT.   
                              *              STQ           CHAR     STORE AWAY PROPER CHARACTER.
                              *      CHAR IS RIGHT ADJUSTED IN MQ.
                              *     
                  
        TRANSFER VECTOR 
      00000  663046214431     WHOAMI
                  
      00001  0634 00 4 00013  REMAP  SXA     RM4,4         SAVE THE IR THAT WE USE. 
      00002 -0520 00 0 00054         NZT     MPSW          IS ANY MAPPING HANNENING.Q     
      00003  0020 00 4 00001         TRA     1,4           GUESS NOT, RETURN. 
      00004 -0130 00 0 00000         XCL                   GET CHARACTER FROM MQ.   
      00005 -0320 00 0 00543         ANA     =O177         FLUSH OUT UNNEEDED BITS. 
      00006  0734 00 4 00000         PAX     0,4           MAKE IT AN INDEX.  
      00007 -0500 00 4 00000  TSW    CAL     --,4          LOOK UP NEW CHAR WITH OLD ONE AS INDEX.    
      00010  0771 00 0 00000  SSW    ARS     --            SHIFT TO CORRECT VARIATION.    
      00011 -0320 00 0 00543         ANA     =O177         MASK TO LEAVE ONLY THIS CHARACTER.   
      00012 -0130 00 0 00000         XCL                   PUT CHARACTER BACK INTO MQ.    
      00013  0774 00 4 00000  RM4    AXT     --,4          RESTORE LINKAGE.   
      00014  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
                              *     
                              *      CALLING SEQUENCE,
                              *              CALL CHBALL.(BALL, AUTHORITY, ERR)     
                              *              WHERE BALL IS A BCD BALL NAME,   
                              *              AND AUTHORITY IS AN INTEGER.     
                              *              IF BALL NOT IN TABLES, EXIT VIA ERR.   
                              *     
      00015  0500 00 0 00053  CHBALL CLA     AUTH          CHECK AUTHORITY.   
      00016  0402 60 4 00002         SUB*    2,4           ..     
      00017 -0120 00 4 00003         TMI     3,4           LESS AUTHORITATIVE, RETURN.    
      00020  0500 60 4 00002         CLA*    2,4           EQUAL OR MORE, SAVE NEW AUTHORITY.   
      00021  0601 00 0 00053         STO     AUTH          ..     
      00022 -0500 60 4 00001         CAL*    1,4           GET BALL NAME.     
      00023  0634 00 4 00051         SXA     CHX4,4        SAVE LINKAGE.
      00024  0774 00 4 00060         AXT     NBALLS,4      SEARCH FOR THIS BALL NAME.     
      00025 -0340 00 4 00141  SRCH   LAS     ETABLE,4      ..     
      00026  0020 00 0 00030         TRA     *+2           NOT THIS ONE.
      00027  1 77777 4 00033         TXI     GETTAB,4,-1   FOUND, BOUNCE INDEX AND GET BALL.    
      00030  2 00001 4 00025         TIX     SRCH,4,1      INDEX, AND TRY AGAIN.    
      00031  0534 00 4 00051         LXA     CHX4,4        NOT FOUND, GIVE ERROR RETURN.  
      00032  0020 60 4 00003         TRA*    3,4           AT THIRD ARGUMENT. 
                              *     
      00033 -0500 00 4 00141  GETTAB CAL     ETABLE,4      GET TABLE LOCATION AND SHIFT SIZE.   
      00034  0621 00 0 00007         STA     TSW           SET TABLE ADDRESS. 
      00035  0771 00 0 00022         ARS     18            ..     
      00036  0621 00 0 00010         STA     SSW           SET VARIATION SHIFTER.   
      00037 -0625 00 0 00054         STL     MPSW          SET MAPPING SWITCH ON.   
1            CHARACTER REMAPPING PACKAGE.                                                        PAGE 2     
                  
      00040  0074 00 4 00000         TSX     $WHOAMI,4     FIND IF WE MUST USE 938 TABLES.
      00041  0 00004 0 00055                 IN,,4         ..     
      00042 -0500 00 0 00060         CAL     IN+3          GET UNIT ID CODE.  
      00043  0771 00 0 00036         ARS     30            EXTRACT DEVICE CODE.     
      00044  0402 00 0 00541         SUB     =2            DEVICE 2 IS THE 1050.    
      00045 -0100 00 0 00051         TNZ     CHX4          NOT 1050, ASSUME 2741 TABLE.   
      00046 -0500 00 0 00010         CAL     SSW           1050, REDUCE SHIFT BY HALF WORD.     
      00047  0402 00 0 00542         SUB     =18           ..     
      00050  0621 00 0 00010         STA     SSW           RESET SHIFT ADDRESS
      00051  0774 00 4 00000  CHX4   AXT     --,4          ALL DONE, RESTORE LINKAGE.     
      00052  0020 00 4 00004         TRA     4,4           RETURN TO CALLER.  
                              *     
      00053 +377777777777     AUTH   OCT     377777777777  INITIAL MINIMUM AUTHORITY.     
      00054  0 00000 0 00000  MPSW                         STORAGE FOR MAPPING SWITCH.    
      00055                   IN     BSS     4             PLACE TO PUT CONSOLE ID. 
                              *     
                       00061  BTABLE EQU     *             TABLE OF ACCEPTABLE GOLF BALLS.
                                                           BALLS INTENDED FOR 1050. 
      00061  606060110310            BCI     1,   938      STANDARD CORRESPONDENCE BALL.  
      00062  0 00022 0 00340                 TABLE1,,COL2   
      00063  606060110603            BCI     1,   963      360 - PL/I - IBM EXTENDED BCD BALL.  
      00064  0 00033 0 00340                 TABLE1,,COL1   
                                                           BALLS FOR DOMESTIC SELECTRIC TYPEWRITER.   
      00065  606060000001            BCI     1,   001 
      00066  0 00022 0 00540                 TABLE2,,COL2   
      00067  606060000005            BCI     1,   005 
      00070  0 00022 0 00540                 TABLE2,,COL2   
      00071  606060000007            BCI     1,   007 
      00072  0 00022 0 00540                 TABLE2,,COL2   
      00073  606060000010            BCI     1,   008 
      00074  0 00022 0 00540                 TABLE2,,COL2   
      00075  606060000102            BCI     1,   012 
      00076  0 00022 0 00540                 TABLE2,,COL2   
      00077  606060000104            BCI     1,   014 
      00100  0 00022 0 00540                 TABLE2,,COL2   
      00101  606060000105            BCI     1,   015 
      00102  0 00022 0 00540                 TABLE2,,COL2   
      00103  606060000200            BCI     1,   020 
      00104  0 00022 0 00540                 TABLE2,,COL2   
      00105  606060000300            BCI     1,   030 
      00106  0 00022 0 00540                 TABLE2,,COL2   
      00107  606060000500            BCI     1,   050 
      00110  0 00022 0 00540                 TABLE2,,COL2   
      00111  606060000700            BCI     1,   070 
      00112  0 00022 0 00540                 TABLE2,,COL2   
                                                           SELECTRIC BALLS WITH OPTIONAL CHARACTERS.  
      00113  606060000201            BCI     1,   021 
      00114  0 00033 0 00540                 TABLE2,,COL1   
      00115  606060000205            BCI     1,   025 
      00116  0 00033 0 00540                 TABLE2,,COL1   
      00117  606060000206            BCI     1,   026 
      00120  0 00033 0 00540                 TABLE2,,COL1   
      00121  606060000207            BCI     1,   027 
      00122  0 00033 0 00540                 TABLE2,,COL1   
      00123  606060000211            BCI     1,   029 
      00124  0 00033 0 00540                 TABLE2,,COL1   
1            CHARACTER REMAPPING PACKAGE.                                                        PAGE 3     
                  
      00125  606060000301            BCI     1,   031 
      00126  0 00033 0 00540                 TABLE2,,COL1   
      00127  606060000303            BCI     1,   033 
      00130  0 00033 0 00540                 TABLE2,,COL1   
      00131  606060000305            BCI     1,   035 
      00132  0 00033 0 00540                 TABLE2,,COL1   
      00133  606060000306            BCI     1,   036 
      00134  0 00033 0 00540                 TABLE2,,COL1   
      00135  606060000311            BCI     1,   039 
      00136  0 00033 0 00540                 TABLE2,,COL1   
      00137  606060001100            BCI     1,   090 
      00140  0 00033 0 00540                 TABLE2,,COL1   
                  
                       00060  NBALLS EQU     *-BTABLE      SIZE OF TABLE
                  
                       00141  ETABLE EQU     *             END OF TABLE OF ACCEPTABLE GOLF BALLS.     
                              *     
                       00033  COL1   EQU     27            SHIFT DEFINITION.  
                       00022  COL2   EQU     18            ..     
                       00011  COL3   EQU     9             ..     
                       00000  COL4   EQU     0             ..     
                              *     
                              *      TABLE FOR 1050-STYLE BALLS.  EXCEPTIONS APPEAR AT CODES    
                              *      155, 153, 152, 137, 114, 112, 105, 102, 101, AND 100.
                              *     
                              *              COLUMN 1 IS FOR BALL 953 WITH CTSS 963 CODE TABLE. 
                              *              COLUMN 2 IS FOR BALL 938 WITH CTSS 963 CODE TABLE. 
                              *              COLUMN 3 IS FOR BALL 963 WITH CTSS 938 TABLE.
                              *              COLUMN 4 IS FOR BALL 938 WITH CTSS 938 TABLE.
                              *     
                              *               1  2  3  4    
                              *     
      00141 +177177177177            OCT     177177177177   
      00142 +176176176176            OCT     176176176176   
      00143 +175175175175            OCT     175175175175   
      00144 +060060060060            OCT     060060060060  CLOSE BRACE. 
      00145 +060060060060            OCT     060060060060  OPEN BRACE.  
      00146 +172172172172            OCT     172172172172   
      00147 +171171171171            OCT     171171171171   
      00150 +170170170170            OCT     170170170170   
      00151 +167167167167            OCT     167167167167   
      00152 +166166166166            OCT     166166166166   
      00153 +165165165165            OCT     165165165165   
      00154 +164164164164            OCT     164164164164   
      00155 +163163163163            OCT     163163163163   
      00156 +162162162162            OCT     162162162162   
      00157 +161161161161            OCT     161161161161   
      00160 +060060060060            OCT     060060060060  OPEN QUOTE (GRAVE ACCENT.)     
      00161 +157157157157            OCT     157157157157   
      00162 +156156156156            OCT     156156156156   
      00163 +155060137060            OCT     155060137060  GREATER THAN, NOT ON 938 BALL. 
      00164 +154154154154            OCT     154154154154   
      00165 +060060060060            OCT     060060060060  OPEN SQUARE BRACKET.     
      00166 +152060100060            OCT     152060100060  LESS THAN, NOT ON 938 BALL     
      00167 +151151151151            OCT     151151151151   
      00170 +150150150150            OCT     150150150150   
1            CHARACTER REMAPPING PACKAGE.                                                        PAGE 4     
                  
      00171 +147147147147            OCT     147147147147   
      00172 +146146146146            OCT     146146146146   
      00173 +145145145145            OCT     145145145145   
      00174 +144144144144            OCT     144144144144   
      00175 +143143143143            OCT     143143143143   
      00176 +142142142142            OCT     142142142142   
      00177 +141141141141            OCT     141141141141   
      00200 +140140140140            OCT     140140140140   
      00201 +137155112137            OCT     137155112137  DOUBLE QUOTE, IN DIFFERENT PLACES.   
      00202 +136136136136            OCT     136136136136   
      00203 +135135135135            OCT     135135135135   
      00204 +060060060060            OCT     060060060060  TILDE. 
      00205 +133133133133            OCT     133133133133   
      00206 +132132132132            OCT     132132132132   
      00207 +131131131131            OCT     131131131131   
      00210 +130130130130            OCT     130130130130   
      00211 +127127127127            OCT     127127127127   
      00212 +126126126126            OCT     126126126126   
      00213 +125125125125            OCT     125125125125   
      00214 +124124124124            OCT     124124124124   
      00215 +123123123123            OCT     123123123123   
      00216 +122122122122            OCT     122122122122   
      00217 +121121121121            OCT     121121121121   
      00220 +120120120120            OCT     120120120120   
      00221 +117117117117            OCT     117117117117   
      00222 +116116116116            OCT     116116116116   
      00223 +115115115115            OCT     115115115115   
      00224 +114114114114            OCT     114114114114   
      00225 +113113113113            OCT     113113113113   
      00226 +060060060060            OCT     060060060060  CIRCUMFLEX.  
      00227 +111111111111            OCT     111111111111   
      00230 +110110110110            OCT     110110110110   
      00231 +107107107107            OCT     107107107107   
      00232 +106106106106            OCT     106106106106   
      00233 +105105105105            OCT     105105105105   
      00234 +104104104104            OCT     104104104104   
      00235 +103103103103            OCT     103103103103   
      00236 +060060060060            OCT     060060060060  LEFT SLASH.  
      00237 +060060060060            OCT     060060060060  CLOSE SQUARE BRACKET.    
      00240 +100060152060            OCT     100060152060  VERTICAL BAR, NOT ON BALL.     
      00241 +077077077077            OCT     077077077077   
      00242 +076076076076            OCT     076076076076   
      00243 +075075075075            OCT     075075075075   
      00244 +074074074074            OCT     074074074074   
      00245 +073073073073            OCT     073073073073   
      00246 +072072072072            OCT     072072072072   
      00247 +071071071071            OCT     071071071071   
      00250 +070070070070            OCT     070070070070   
      00251 +067067067067            OCT     067067067067   
      00252 +066066066066            OCT     066066066066   
      00253 +065065065065            OCT     065065065065   
      00254 +064064064064            OCT     064064064064   
      00255 +063063063063            OCT     063063063063   
      00256 +062062062062            OCT     062062062062   
      00257 +061061061061            OCT     061061061061   
      00260 +060060060060            OCT     060060060060   
1            CHARACTER REMAPPING PACKAGE.                                                        PAGE 5     
                  
      00261 +057057057057            OCT     057057057057   
      00262 +056056056056            OCT     056056056056   
      00263 +055055055055            OCT     055055055055   
      00264 +054054054054            OCT     054054054054   
      00265 +053053053053            OCT     053053053053   
      00266 +052052052052            OCT     052052052052   
      00267 +051051051051            OCT     051051051051   
      00270 +050050050050            OCT     050050050050   
      00271 +047047047047            OCT     047047047047   
      00272 +046046046046            OCT     046046046046   
      00273 +045045045045            OCT     045045045045   
      00274 +044044044044            OCT     044044044044   
      00275 +043043043043            OCT     043043043043   
      00276 +042042042042            OCT     042042042042   
      00277 +041041041041            OCT     041041041041   
      00300 +040040040040            OCT     040040040040   
      00301 +037037037037            OCT     037037037037   
      00302 +036036036036            OCT     036036036036   
      00303 +035035035035            OCT     035035035035   
      00304 +034034034034            OCT     034034034034   
      00305 +033033033033            OCT     033033033033   
      00306 +032032032032            OCT     032032032032   
      00307 +031031031031            OCT     031031031031   
      00310 +030030030030            OCT     030030030030   
      00311 +027027027027            OCT     027027027027   
      00312 +026026026026            OCT     026026026026   
      00313 +025025025025            OCT     025025025025   
      00314 +024024024024            OCT     024024024024   
      00315 +023023023023            OCT     023023023023   
      00316 +022022022022            OCT     022022022022   
      00317 +021021021021            OCT     021021021021   
      00320 +020020020020            OCT     020020020020   
      00321 +017017017017            OCT     017017017017   
      00322 +016016016016            OCT     016016016016   
      00323 +015015015015            OCT     015015015015   
      00324 +014014014014            OCT     014014014014   
      00325 +013013013013            OCT     013013013013   
      00326 +012012012012            OCT     012012012012   
      00327 +011011011011            OCT     011011011011   
      00330 +010010010010            OCT     010010010010   
      00331 +007007007007            OCT     007007007007   
      00332 +006006006006            OCT     006006006006   
      00333 +005005005005            OCT     005005005005   
      00334 +004004004004            OCT     004004004004   
      00335 +003003003003            OCT     003003003003   
      00336 +002002002002            OCT     002002002002   
      00337 +001001001001            OCT     001001001001   
      00340 +000000000000            OCT     000000000000   
                       00340  TABLE1 EQU     *-1           LOCATION OF FIRST CHARACTER.   
                              *     
                              *      TABLE FOR SELECTRIC-STYLE BALLS.  VIRTUALLY ALL GRAPHICS   
                              *      ARE REMAPPED.    
                              *     
                              *      COLUMNS 1 AND 2 ARE FOR THE SAME BALLS AS COLUMNS    
                              *      THREE AND FOUR, BUT ASSUMING CTSS 963 TABLE.   
                              *              COLUMN 3 IS FOR SELECTRIC OPTIONAL CHARACTER SET.  
1            CHARACTER REMAPPING PACKAGE.                                                        PAGE 6     
                  
                              *                  USED FOR BALLS 021, 025, 026, 027, 029, 031, 033,    
                              *                       035, 036, 039, AND 090  
                              *              COLUMN 4 IS FOR STANDARD SELECTRIC CHARACTER SET.  
                              *                  USED FOR BALLS 001, 005, 007, 008, 012, 014, 015,    
                              *                       020, 030, 050, AND 070. 
                              *     
                              *               1  2  3  4   CTSS CODE    
                              *     
      00341 +177177177177            OCT     177177177177  0177   
      00342 +176176176176            OCT     176176176176  0176   
      00343 +175175175175            OCT     175175175175  0175   
      00344 +060060060060            OCT     060060060060  0174 - CLOSE BRACE, PRINTS AS SPACE. 
      00345 +060060060060            OCT     060060060060  0173 - OPEN BRACE, PRINTS AS SPACE.  
      00346 +172172172172            OCT     172172172172  0172   
      00347 +000000000000            OCT     000000000000  0171 - SMALL Z     
      00350 +131131131131            OCT     131131131131  0170 - SMALL Y     
      00351 +061061061061            OCT     061061061061  0167 - SMALL X     
      00352 +053053053053            OCT     053053053053  0166 - SMALL W     
      00353 +143143143143            OCT     143143143143  0165 - SMALL V     
      00354 +163163163163            OCT     163163163163  0164 - SMALL U     
      00355 -106506506506            OCT     506506506506  0163 - SMALL T     
      00356 +151151151151            OCT     151151151151  0162 - SMALL S     
      00357 +161161161161            OCT     161161161161  0161   
      00360 +060060060060            OCT     060060060060  0160 - OPEN QUOTE, PRINTS AS SPACE.  
      00361 +157157157157            OCT     157157157157  0157   
      00362 +030030030030            OCT     030030030030  0156 - QUES MARK   
      00363 +060060060060            OCT     060060060060  0155 - GREATER THAN SIGN, PRINTS AS SPACE. 
      00364 -154554554554            OCT     554554554554  0154   
      00365 +060013060013            OCT     060013060013  0153 - OPEN SQUARE BRACKET.    
      00366 +060060060060            OCT     060060060060  0152 - LESS THAN SIGN, PRINTS AS SPACE     
      00367 +145145145145            OCT     145145145145  0151 - SMALL R     
      00370 +126126126126            OCT     126126126126  0150 - SMALL Q     
      00371 +124124124124            OCT     124124124124  0147 - SMALL P     
      00372 +150150150150            OCT     150150150150  0146 - SMALL 0     
      00373 +162162162162            OCT     162162162162  0145 - SMALL N     
      00374 +141141141141            OCT     141141141141  0144 - SMALL M     
      00375 +170170170170            OCT     170170170170  0143 - SMALL L     
      00376 +166166166166            OCT     166166166166  0142 - SMALL K     
      00377 +120120120120            OCT     120120120120  0141 - SMALL J     
      00400 +112112155155            OCT     112112155155  0140 - UNDERLINE   
      00401 +044044044044            OCT     044044044044  0137 - DOUBLE QUOTE
      00402 +136136136136            OCT     136136136136  0136   
      00403 +135135135135            OCT     135135135135  0135 - BKSPCE
      00404 +060060060060            OCT     060060060060  0134 - TILDE, PRINTS AS SPACE. 
      00405 +133133133133            OCT     133133133133  0133 - RED SHIFT   
      00406 +132132132132            OCT     132132132132  0132 - BLACK SHIFT 
      00407 +146146146146            OCT     146146146146  0131 - SMALL I     
      00410 +171171171171            OCT     171171171171  0130 - SMALL H     
      00411 +121121121121            OCT     121121121121  0127 - SMALL G     
      00412 +123123123123            OCT     123123123123  0126 - SMALL F     
      00413 +164164164164            OCT     164164164164  0125 - SMALL E     
      00414 +165165165165            OCT     165165165165  0124 - SMALL D     
      00415 +167167167167            OCT     167167167167  0123 - SMALL C     
      00416 +073073073073            OCT     073073073073  0122 - SMALL C     
      00417 +147147147147            OCT     147147147147  0121 - SMALL A     
      00420 -105505505505            OCT     505505505505  0120 - AMPERSAND   
1            CHARACTER REMAPPING PACKAGE.                                                        PAGE 7     
                  
      00421 +117117117117            OCT     117117117117  0117   
      00422 +116116116116            OCT     116116116116  0116   
      00423 +115115115115            OCT     115115115115  0115   
      00424 +060040060040            OCT     060040060040  0114 - EXCLAMATION POINT.
      00425 +113113113113            OCT     113113113113  0113   
      00426 +060060060060            OCT     060060060060  0112 - CIRCUMFLEX, PRINTS AS SPACE.  
      00427 +111111111111            OCT     111111111111  0111 - 
      00430 +110110110110            OCT     110110110110  0110 - IGNORE SINGLE SPC 
      00431 +107107107107            OCT     107107107107  0107 - IGNORE LINE FEED  
      00432 +152152100100            OCT     152152100100  0106 - COMMERCIAL AT     
      00433 +035035035035            OCT     035035035035  0105 - PERCENT.    
      00434 +103103103103            OCT     103103103103  0104 - NUMBER SIGN 
      00435 +125125125125            OCT     125125125125  0103 - SEMICOLON   
      00436 +060060060060            OCT     060060060060  0102 - LEFT SLASH, PRINTS AS SPACE   
      00437 +060001060001            OCT     060001060001  0101 - CLOSE SQUARE BRACKET.   
      00440 +060060060060            OCT     060060060060  0100 - UP ARROW, PRINTS AS SPACE.    
      00441 +077077077077            OCT     077077077077  0077   
      00442 +076076076076            OCT     076076076076  0076   
      00443 +075075075075            OCT     075075075075  0075   
      00444 +137137112112            OCT     137137112112  0074 - LEFT PAREN  
      00445 +027027027027            OCT     027027027027  0073 - COMMA 
      00446 +072072072072            OCT     072072072072  0072 - TAB   
      00447 +034034034034            OCT     034034034034  0071 - CAP Z 
      00450 +031031031031            OCT     031031031031  0070 - CAP Y 
      00451 +156156156156            OCT     156156156156  0067 - CAP X 
      00452 +114114114114            OCT     114114114114  0066 - CAP W 
      00453 +043043043043            OCT     043043043043  0065 - CAP V 
      00454 +063063063063            OCT     063063063063  0064 - CAP U 
      00455 +102102102102            OCT     102102102102  0063 - CAP T 
      00456 +051051051051            OCT     051051051051  0062 - CAP S 
      00457 +130130130130            OCT     130130130130  0061 - SLASH 
      00460 +060060060060            OCT     060060060060  0060 - SPACE 
      00461 +057057057057            OCT     057057057057  0057   
      00462 +056056056056            OCT     056056056056  0056   
      00463 +055055055055            OCT     055055055055  0055 - NEW LINE    
      00464 +155155137137            OCT     155155137137  0054 - ASTERISK    
      00465 +054054054054            OCT     054054054054  0053 - DOLLAR SIGN 
      00466 +052052052052            OCT     052052052052  0052   
      00467 +045045045045            OCT     045045045045  0051 - CAP R 
      00470 +026026026026            OCT     026026026026  0050 - CAP Q 
      00471 +024024024024            OCT     024024024024  0047 - CAP P 
      00472 +050050050050            OCT     050050050050  0046 - CAP O 
      00473 +062062062062            OCT     062062062062  0045 - CAP N 
      00474 +041041041041            OCT     041041041041  0044 - CAP M 
      00475 +070070070070            OCT     070070070070  0043 - CAP L 
      00476 +066066066066            OCT     066066066066  0042 - CAP K 
      00477 +020020020020            OCT     020020020020  0041 - CAP J 
      00500 +033033033033            OCT     033033033033  0040 - MINUS 
      00501 +037037037037            OCT     037037037037  0037   
      00502 +036036036036            OCT     036036036036  0036   
      00503 +025025025025            OCT     025025025025  0035 - COLON 
      00504 +074074074074            OCT     074074074074  0034 - RIGHT PAREN 
      00505 +042042042042            OCT     042042042042  0033 - PERIOD
      00506 +032032032032            OCT     032032032032  0032   
      00507 +046046046046            OCT     046046046046  0031 - CAP I 
      00510 +071071071071            OCT     071071071071  0030 - CAP H 
1            CHARACTER REMAPPING PACKAGE.                                                        PAGE 8     
                  
      00511 +021021021021            OCT     021021021021  0027 - CAP G 
      00512 +023023023023            OCT     023023023023  0026 - CAP F 
      00513 +064064064064            OCT     064064064064  0025 - CAP E 
      00514 +065065065065            OCT     065065065065  0024 - CAP D 
      00515 +067067067067            OCT     067067067067  0023 - CAP C 
      00516 +100100152152            OCT     100100152152  0022 - CAP B 
      00517 +047047047047            OCT     047047047047  0021 - CAP A 
      00520 +022022022022            OCT     022022022022  0020 - PLUS SIGN   
      00521 +017017017017            OCT     017017017017  0017   
      00522 +016016016016            OCT     016016016016  0016   
      00523 +015015015015            OCT     015015015015  0015   
      00524 +144144144144            OCT     144144144144  0014 - SINGLE QUOTE
      00525 +122122122122            OCT     122122122122  0013 - EQUALS
      00526 +012012012012            OCT     012012012012  0012   
      00527 -104504504504            OCT     504504504504  0011 - 9     
      00530 +007007007007            OCT     007007007007  0010 - 8     
      00531 +005005005005            OCT     005005005005  0007   
      00532 +006006006006            OCT     006006006006  0006   
      00533 +004004004004            OCT     004004004004  0005   
      00534 +010010010010            OCT     010010010010  0004   
      00535 +003003003003            OCT     003003003003  0003   
      00536 +002002002002            OCT     002002002002  0002   
      00537 +001170001170            OCT     001170001170  0001 - 1, PRINTS AS SMALL L.   
      00540 +011011011011            OCT     011011011011  0000   
                       00540  TABLE2 EQU     *-1           LOCATION OF FIRST CHARACTER.   
                              *     
                                     END  
                  
        LITERALS  
      00541  000000000002     
      00542  000000000022     
      00543  000000000177     
1            CHARACTER REMAPPING PACKAGE.                                                        PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        544 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         55     IN    41,   42
         13    RM4     1
         10    SSW    36,   46,   50
          7    TSW    34
         53   AUTH    15,   21
         51   CHX4    23,   31,   45
         33   COL1    64,  114,  116,  120,  122,  124,  126,  130,  132,  134,  136,  140,  141
         22   COL2    62,   66,   70,   72,   74,   76,  100,  102,  104,  106,  110,  112,  141
         11   COL3   141
          0   COL4   141
         54   MPSW     2,   37
         25   SRCH    30
          1  REMAP     0
         61 BTABLE    61,  141
         15 CHBALL     0
        141 ETABLE    25,   33,  141
         33 GETTAB    27
         60 NBALLS    24,  141
        340 TABLE1    62,   64,  341
        540 TABLE2    66,   70,   72,   74,   76,  100,  102,  104,  106,  110,  112,  114,  116,  120,  122,  124,  126
                     130,  132,  134,  136,  140,  541
          0 WHOAMI    40
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 1     
                  
                              *      NOTE, INDEX REGISTERS SIX AND SEVEN MUST BE PRESERVED
                              *      BY THE CALLING PROGRAM.
                              *      THIS ROUTINE MAKES TYPEWRITER COMMENTS, BUT DOES NOT 
                              *      AFFECT THE BCD-FULL MODE SWITCH.   
                              *     
                              *           J. H. SALTZER, JANUARY, 1965. 
                              *     
                       00015         ENTRY   ASSIGN        TO ASSIGN A NAME TO THE WRITE FILE.  
                       00057         ENTRY   WRWORD        TO ADD A WORD TO THE FILE.     
                       00100         ENTRY   FILE          TO CLOSE THE FILE. 
                              *     
                       00160         ENTRY   SEEK          TO OPEN A FILE FOR READING.    
                       00242         ENTRY   RDWORD        TO GET A WORD FROM FILE. 
                       00275         ENTRY   ENDRD         TO CLOSE THE FILE. 
                              *     
                                     EXTERN  GETBUF,SETBCD,SETFUL,WRFLX,WRFLXA
                                     EXTERN  OPEN,WRWAIT,RDWAIT,CLOSE,FSTATE,BUFFER 
                              *     
                              *      ASSIGN.($NAME1$,$NAME2$)     
                              *     
                  
        TRANSFER VECTOR 
      00000  272563226426     GETBUF
      00001  622563222324     SETBCD
      00002  622563266443     SETFUL
      00003  665126436760     WRFLX 
      00004  665126436721     WRFLXA
      00005  464725456060     OPEN  
      00006  665166213163     WRWAIT
      00007  512466213163     RDWAIT
      00010  234346622560     CLOSE 
      00011  266263216325     FSTATE
      00012  226426262551     BUFFER
                  
            LINKAGE DIRECTOR  
      00013  000000000000     
      00014  216262312745     
                  
      00015 -0500 60 4 00001  ASSIGN CAL*    1,4           OPEN FILE, GET FILE NAME.
      00016  0602 00 0 00304         SLW     OUTNAM        ..     
      00017 -0500 60 4 00002         CAL*    2,4           ..     
      00020  0602 00 0 00305         SLW     OUTNAM+1      ..     
      00021  0634 00 4 00041         SXA     OPX4,4        SAVE LINKAGE.
      00022  0020 00 0 00023   OSW   TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                    *******************
      00023 -0500 00 0 00315         CAL     WBFSZ         GET AN OUTPUT BUFFER FROM SUPERVISOR.
      00024  0074 00 4 00000         TSX     GETBUF,4      ..     
      00025  0621 00 0 00071         STA     WCALL         SAVE LOCATION OF BUFFER. 
      00026  0621 00 0 00113         STA     CLCALL        TO CLOSE OUT FILE. 
      00027  0361 00 0 00315         ACL     WBFSZ         ADD LENGTH, TO FORM END ADDRESS.     
      00030  0621 00 0 00060         STA     WRNM          INSERT IN INSERTER.
      00031 -0500 00 0 00313         CAL     TRKSZ         GET A DISK TRACK BUFFER. 
      00032  0074 00 4 00000         TSX     GETBUF,4      ..     
      00033  0621 00 0 00055         STA     BFCALL        SET UP BUFFER CALLER.    
      00034 -0625 00 0 00022         STL     OSW           RESET ONE-TIME SWITCH.   
                              *                                                    *******************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 2     
                  
      00035  0774 00 4 00040         AXT     OPOK,4        SET QUOTA EXHAUSTED ERROR RETURN.    
      00036  0634 00 4 00143         SXA     WRTN,4        ..     
      00037  0074 00 3 00043         TSX     OPN,3         OPEN THE FILE.     
      00040  0774 00 7 00330  OPOK   AXT     WBFLTH,7      SET UP STORAGE COUNT.    
      00041  0774 00 4 00000   OPX4  AXT     --,4          RESTORE LINKAGE.   
      00042  0020 00 4 00003         TRA     3,4           RETURN.
                              *     
      00043  0074 00 4 00005  OPN    TSX     OPEN,4        OPEN FILE.   
 TD   00044  3 00000 0 00324         TXH     =HW           FOR WRITING. 
 TD   00045  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00046  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00047  3 00000 0 00156         TXH     MODE          MAKE IT PERMANENT IF POSSIBLE. 
 TD   00050  3 00000 0 00320         TXH     =2            PUT IT ON THE DISK.
 TD   00051  3 00000 0 00127  OPERR  TXH     OEXH          IN CASE NO MORE QUOTA AVAILABLE.     
      00052  0074 00 4 00012         TSX     BUFFER,4      ASSIGN A BUFFER FOR THE FILE.  
 TD   00053  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00054  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00055  3 00660 0 00000  BFCALL TXH     --,,TRKLTH    ..     
      00056  0020 00 3 00001         TRA     1,3           RETURN TO CALLER.  
                              *     
                              *     
                              *      ENTRY TO ADD A WORD TO FILE. 
                              *              WRWORD.(WORD)  
                              *     
      00057 -0500 60 4 00001  WRWORD CAL*    1,4           GET WORD TO BE ADDED.    
      00060  0602 00 7 00000   WRNM  SLW     --,7          ADD WORD TO OUTPUT BUFFER.     
      00061  2 00001 7 00077         TIX     RETURN,7,1    COUNT AND CHECK FOR FULL BUFFER.     
      00062  0634 00 4 00076   FULL  SXA     FULX4,4       BUFFER FULL, WRITE IT OUT.     
      00063  0774 00 4 00065         AXT     WRAGN,4       SET UP EXHAUSTED RETURN ADDRESS.     
      00064  0634 00 4 00143         SXA     WRTN,4        ..     
      00065  0074 00 4 00006  WRAGN  TSX     WRWAIT,4      GIVE BUFFER TO SUPERVISOR.     
 TD   00066  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00067  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00070  3 00000 0 00316         TXH     =0            ..     
      00071  3 00330 0 00000  WCALL  TXH     --,,WBFLTH    ..     
 TD   00072  3 00000 0 00321         TXH     =-0           IGNORE POSSIBLE EOF.     
 TD   00073  3 00000 0 00321         TXH     =-0           ..     
 TD   00074  3 00000 0 00124  WRERR  TXH     WEXH          ALLOW ERROR RETURN.
      00075  0774 00 7 00330         AXT     WBFLTH,7      RESET BUFFER POINTER.    
      00076  0774 00 4 00000   FULX4 AXT     --,4          RESTORE LINKAGE.   
      00077  0020 00 4 00002  RETURN TRA     2,4           RETURN TO CALLER.  
                              *     
                              *      FILE.     NO ARGUMENTS.
                              *     
      00100  0634 00 4 00122  FILE   SXA     CL4,4         ENTRY TO CLOSE OUT FILE. 
      00101 -0634 00 7 00103         SXD     *+2,7         FORM COUNT OF WORDS SINCE
      00102  0774 00 7 00330         AXT     WBFLTH,7      LAST BUFFER WAS WRITTEN. 
      00103 -2 00000 7 00117         TNX     NOWR,7,--     IF ZERO, SKIP FINAL WRITE CALL.
      00104 -0634 00 7 00113         SXD     CLCALL,7      NON-ZERO, SET UP WRITE CALL.   
      00105  0774 00 4 00107         AXT     FWR,4         SET UP RETURN ADDRESS FOR EXHAUSTED CASE.  
      00106  0634 00 4 00143         SXA     WRTN,4        ..     
      00107  0074 00 4 00006  FWR    TSX     WRWAIT,4      WRITE OUT PARTIAL BUFFER.
 TD   00110  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00111  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00112  3 00000 0 00316         TXH     =0            ..     
      00113  3 00000 0 00000  CLCALL TXH     --,,--        ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 3     
                  
 TD   00114  3 00000 0 00321         TXH     =-0           IGNORE EOF RETURN. 
 TD   00115  3 00000 0 00321         TXH     =-0           ..     
 TD   00116  3 00000 0 00124         TXH     WEXH          ALLOW ERROR RETURN.
      00117  0074 00 4 00010  NOWR   TSX     CLOSE,4       CLOSE OUT THE FILE.
 TD   00120  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00121  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00122  0774 00 4 00000   CL4   AXT     --,4          RESTORE LINKAGE.   
      00123  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00124  0074 00 4 00010  WEXH   TSX     CLOSE,4       TRACK QUOTA EXHAUSTED, CLOSE FILE.   
 TD   00125  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00126  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00127  0074 00 4 00001  OEXH   TSX     SETBCD,4      ENTRY FROM OPEN ERROR, COMMENT.
      00130  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00131  0074 00 4 00003         TSX     WRFLX,4       ..     
      00132  0 00011 0 00144                 ERMESS,,9
      00133  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00134  0074 00 4 00002         TSX     SETFUL,4      YES, RESET INDICATOR.    
      00135 -0500 00 0 00317         CAL     =1            SWITCH TO TEMPORARY MODE.
      00136  0601 00 0 00156         STO     MODE          ..     
      00137 -0500 00 0 00155         CAL     NOP           BLOCK FUTURE ERROR RETURN.     
      00140  0602 00 0 00051         SLW     OPERR         ..     
      00141  0602 00 0 00074         SLW     WRERR    
      00142  0074 00 3 00043         TSX     OPN,3         NOW, OPEN IT AGAIN.
      00143  0020 00 0 00000  WRTN   TRA     --            ALL FIXED, RETURN TO MAIN STREAM.    
                              *     
      00144  635121234260     ERMESS BCI     9,TRACK QUOTA EXHAUSTED, TEMPORARY MODE WILL BE USED.    
      00145  506446632160     
      00146  256730216462     
      00147  632524736063     
      00150  254447465121     
      00151  517060444624     
      00152  256066314343     
      00153  602225606462     
      00154  252433606060     
      00155  0761 00 0 00000   NOP   NOP                   INSTRUCTION TO BLOCK ERROR RETURN.   
      00156  0 00000 0 00000  MODE           0             START IN PERMANENT MODE. 
      00157  0 00000 0 00000  MODSW                        TEMP STORAGE FOR 6-BIT,12-BIT INDICATOR.   
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     
                              *      SEEK.($NAME1$, $NAME2$, ERRET)     
                              *      ERROR RETURN MEANS FILE NOT FOUND. 
                              *     
      00160 -0500 60 4 00001   SEEK  CAL*    1,4           GET FILE NAME.     
      00161  0602 00 0 00306         SLW     INNAM         ..     
      00162 -0500 60 4 00002         CAL*    2,4           ..     
      00163  0602 00 0 00307         SLW     INNAM+1       ..     
      00164  0634 00 4 00222         SXA     SKX4,4        SAVE LINKAGE.
      00165  0020 00 0 00166   SKSW  TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                  *********************
      00166 -0500 00 0 00314         CAL     RBFSZ         GET A BUFFER FROM SUPERVISOR.  
      00167  0074 00 4 00000         TSX     GETBUF,4      ..     
      00170  0621 00 0 00257         STA     ECALL         STORE BUFFER LOCATION.   
      00171  0621 00 0 00217         STA     STCALL        ..     
      00172 -0625 00 0 00165         STL     SKSW          RESET ONE-TIME SWITCH.   
                              *                                                  *********************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 4     
                  
      00173 -0500 00 0 00217         CAL     STCALL        SET UP PICKUP INSTRUCTION FOR INDEXING.    
      00174  0361 00 0 00314         ACL     RBFSZ         ..     
      00175  0621 00 0 00242         STA     RDWORD        ..     
      00176  0074 00 4 00011         TSX     FSTATE,4      MAKE SURE FILE IS THERE. 
 TD   00177  3 00000 0 00306         TXH     INNAM         ..     
 TD   00200  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00201  3 00000 0 00321         TXH     =-0           DON'T WANT DATA.   
 TD   00202  3 00000 0 00224         TXH     NOTFN         ERROR RETURN MEANS FILE NOT THERE.   
      00203  0074 00 4 00005         TSX     OPEN,4        OPEN THE FILE FOR READING.     
 TD   00204  3 00000 0 00322         TXH     =HR           ..     
 TD   00205  3 00000 0 00306         TXH     INNAM         ..     
 TD   00206  3 00000 0 00307         TXH     INNAM+1       ..     
      00207  0774 00 6 00660         AXT     RBFLTH,6      SET UP BUFFER COUNTER.   
      00210  0774 00 4 00222         AXT     SKX4,4        SET END OF FILE RETURN.  
      00211  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00212  0600 00 0 00312         STZ     EOFR          CLEAR END OF FILE SWITCH.
      00213  0074 00 4 00007         TSX     RDWAIT,4      GET INITIAL BUFFER LOAD. 
 TD   00214  3 00000 0 00306         TXH     INNAM         ..     
 TD   00215  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00216  3 00000 0 00316         TXH     =0            ..     
      00217  3 00660 0 00000  STCALL TXH     --,,RBFLTH    ..     
 TD   00220  3 00000 0 00265         TXH     EOF           END OF FILE RETURN.
 TD   00221  3 00000 0 00311         TXH     EOFCT         ..     
      00222  0774 00 4 00000   SKX4  AXT     --,4          RESTORE LINKAGE.   
      00223  0020 00 4 00004         TRA     4,4           RETURN TO CALLER.  
                              *     
      00224  0074 00 4 00001  NOTFN  TSX     SETBCD,4      FILE NOT FOUND, COMMENT. 
      00225  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00226  0074 00 4 00004         TSX     WRFLXA,4      START UP COMMENT.  
      00227  0 00001 0 00323                 =H FILE ,,1   ..     
      00230  0074 00 4 00004         TSX     WRFLXA,4      INSERT FILE NAME.  
      00231  0 00002 0 00306                 INNAM,,2      ..     
      00232  0074 00 4 00003         TSX     WRFLX,4       END OF COMMENT.    
      00233  0 00002 0 00240                 ECM,,2        ..     
      00234  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00235  0074 00 4 00002         TSX     SETFUL,4      YES, RESET MODE.   
      00236  0534 00 4 00222         LXA     SKX4,4        GIVE ERROR RETURN. 
      00237  0020 60 4 00003         TRA*    3,4           ..     
                              *     
      00240  604546636026     ECM    BCI     2, NOT FOUND.  
      00241  466445243360     
                              *     
                              *      ENTRY TO OBTAIN WORD FROM FILE.    
                              *              WORD = RDWORD.(EOF)  
                              *     
      00242  0500 00 6 00000  RDWORD CLA     --,6          GET WORD FROM INPUT BUFFER.    
      00243  2 00001 6 00264         TIX     GOBACK,6,1    INDEX, AND CHECK FOR EMPTY BUFFER.   
      00244  0520 00 0 00312         ZET     EOFR          BUFFER EMPTY, HAS END OF FILE OCCURRED.    
      00245  0020 60 4 00001         TRA*    1,4           YES, GIVE EOF RETURN.    
      00246  0601 00 0 00310         STO     RTEMP         NO, SAVE WORD AND GET SOME MORE DATA.
      00247  0634 00 4 00263         SXA     EMPX4,4       SAVE LINKAGE, ALSO.
      00250  0774 00 6 00660         AXT     RBFLTH,6      RESET BUFFER POINTER.    
      00251  0774 00 4 00262         AXT     EMPGT,4       SET END OF FILE RETURN.  
      00252  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00253  0074 00 4 00007         TSX     RDWAIT,4      GET ANOTHER BUFFER LOAD OF DATA.     
 TD   00254  3 00000 0 00306         TXH     INNAM         ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 5     
                  
 TD   00255  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00256  3 00000 0 00316         TXH     =0            ..     
      00257  3 00660 0 00000  ECALL  TXH     --,,RBFLTH    ..     
 TD   00260  3 00000 0 00265         TXH     EOF           ..     
 TD   00261  3 00000 0 00311         TXH     EOFCT         ..     
      00262  0500 00 0 00310   EMPGT CLA     RTEMP         RESTORE WORD FOR THIS CALL.    
      00263  0774 00 4 00000   EMPX4 AXT     --,4          RESTORE LINKAGE.   
      00264  0020 00 4 00002  GOBACK TRA     2,4           RETURN TO CALLER.  
                              *     
      00265 -0625 00 0 00312  EOF    STL     EOFR          END OF FILE REACHED, SET SWITCH.     
      00266 -0500 00 0 00311         CAL     EOFCT         GET COUNT OF WORDS LEFT. 
      00267  0361 00 0 00317         ACL     =1            BUGGER WORD COUNT. 
      00270  0734 00 6 00000         PAX     0,6           SET WORD COUNTER.  
      00271  0361 00 0 00257         ACL     ECALL         ADJUST PICKUP INSTRUCTION.     
      00272  0621 00 0 00242         STA     RDWORD        ..     
      00273  0074 00 4 00275         TSX     ENDRD,4       TURN OFF FILE.     
      00274  0020 00 0 00000  EOFRTN TRA     --            RETURN TO END OF RDFILE CALLING SEQUENCE.  
                              *     
                              *      ENTRY TO CLOSE INPUT FILE.   
                              *      ENDRD.     
                              *     
      00275  0634 00 4 00302  ENDRD  SXA     ENDX4,4       SAVE LINKAGE.
      00276  0074 00 4 00010         TSX     CLOSE,4       CLOSE FILE.  
 TD   00277  3 00000 0 00306         TXH     INNAM         ..     
 TD   00300  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00301  3 00000 0 00302         TXH     *+1           IGNORE ANY ERROR RETURN. 
      00302  0774 00 4 00000  ENDX4  AXT     --,4          RESTORE LINKAGE.   
      00303  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00304  545454545454     OUTNAM BCI     2,************  NAME OF OUTPUT FILE.   
      00305  545454545454     
      00306  545454545454      INNAM BCI     2,************  NAME OF INPUT FILE.    
      00307  545454545454     
      00310  0 00000 0 00000   RTEMP                       STORAGE FOR WORD.  
      00311  0 00000 0 00000  EOFCT                        STORAGE FOR END OF FILE COUNTER.     
      00312  0 00000 0 00312   EOFR          *             SWITCH FOR END OF FILE MET.    
                              *     
                       00660  TRKLTH EQU     432           DISK TRACK LENGTH. 
      00313  0 00000 0 00660   TRKSZ         TRKLTH        WORD CONTAINING TRACK LENGTH.  
                       00660  RBFLTH EQU     TRKLTH        READ BUFFER LENGTH.
                       00330  WBFLTH EQU     TRKLTH/2      WRITE BUFFER LENGTH.     
      00314  0 00000 0 00660  RBFSZ          RBFLTH        WORD CONTAINING READ BUFFER SIZE.    
      00315  0 00000 0 00330  WBFSZ          WBFLTH        WORD CONTAINING WRITE BUFFER SIZE.   
                              *     
                                     END  
                  
        LITERALS  
      00316  000000000000     
      00317  000000000001     
      00320  000000000002     
      00321  400000000000     
      00322  516060606060     
      00323  602631432560     
      00324  666060606060     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        325 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        122    CL4   100
        240    ECM   233
        265    EOF   220,  260
        107    FWR   105
        155    NOP   137
         43    OPN    37,  142
         22    OSW    34
        312   EOFR   212,  244,  265
        100   FILE     0
         62   FULL      
        156   MODE    47,  136
        117   NOWR   103
        127   OEXH    51
          5   OPEN    43,  203
         40   OPOK    35
         41   OPX4    21
        160   SEEK     0
        165   SKSW   172
        222   SKX4   164,  210,  236
        124   WEXH    74,  116
         60   WRNM    30
        143   WRTN    36,   64,  106
         10  CLOSE   117,  124,  276
        257  ECALL   170,  271
        262  EMPGT   251
        263  EMPX4   247
        275  ENDRD     0,  273
        302  ENDX4   275
        311  EOFCT   221,  261,  266
         76  FULX4    62
        306  INNAM   161,  163,  177,  200,  205,  206,  214,  215,  231,  254,  255,  277,  300
        157  MODSW   130,  133,  225,  234
        224  NOTFN   202
         51  OPERR   140
        314  RBFSZ   166,  174
        310  RTEMP   246,  262
        313  TRKSZ    31
        315  WBFSZ    23,   27
         71  WCALL    25
         65  WRAGN    63
         74  WRERR   141
          3  WRFLX   131,  232
         15 ASSIGN     0
         55 BFCALL    33
         12 BUFFER    52
        113 CLCALL    26,  104
        274 EOFRTN   211,  252
        144 ERMESS   132
         11 FSTATE   176
          0 GETBUF    24,   32,  167
        264 GOBACK   243
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        304 OUTNAM    16,   20,   45,   46,   53,   54,   66,   67,  110,  111,  120,  121,  125,  126
        660 RBFLTH   207,  217,  250,  257,  314
          7 RDWAIT   213,  253
        242 RDWORD     0,  175,  272
         77 RETURN    61
          1 SETBCD   127,  224
          2 SETFUL   134,  235
        217 STCALL   171,  173
        660 TRKLTH    55,  313,  314
        330 WBFLTH    40,   71,   75,  102,  314,  315
          4 WRFLXA   226,  230
          6 WRWAIT    65,  107
         57 WRWORD     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 1     
                  
                              *      INPUT AND OUTPUT IS LINE-MARKED FORMAT.  
                              *      J. H. SALTZER, JANUARY, 1965 
                              *     
                       00010         ENTRY   WRITE         WRITE ONE LINE OUT.
                       00071         ENTRY   READ          TO READ NEXT LINE. 
                       00167         ENTRY   BOTTOM        TO RAPIDLY MOVE TO BOTTOM OF FILE.   
                       00062         ENTRY   CLOSEW        CLOSE OUT WRITE FILE.    
                              *     
                                     EXTERN  WRFLX,WRWORD,RDWORD,SETBCD,SETFUL,FILE 
                              *     
                  
        TRANSFER VECTOR 
      00000  665126436760     WRFLX 
      00001  665166465124     WRWORD
      00002  512466465124     RDWORD
      00003  622563222324     SETBCD
      00004  622563266443     SETFUL
      00005  263143256060     FILE  
                  
            LINKAGE DIRECTOR  
      00006  000000000000     
      00007  665131632560     
                  
                       00014   NBITS EQU     12            COULD BE 6, 9, 12, OR 18.
                       00003   NCHRS EQU     36/NBITS      NO. OF CHARACTERS PER WORD ON 7094.  
                              *     
                              *      WRITE.(LINE, LENGTH)   
                              *     
      00010  0634 00 4 00056   WRITE SXA     WX4,4         SAVE LINKAGE AND REGISTERS.    
      00011  0634 00 2 00057         SXA     WX2,2         ..     
      00012  0634 00 1 00060         SXA     WX1,1         ..     
      00013 -0500 00 4 00001         CAL     1,4           GET LINE ADDRESS.  
      00014  0621 00 0 00035         STA     INLP          SET UP LOCATION OF INPUT.
      00015  0500 60 4 00002         CLA*    2,4           GET CHARACTER COUNT.     
      00016  0100 00 4 00003         TZE     3,4           DON'T WORK ON ZERO COUNT.
      00017  0402 00 0 00200         SUB     =1            DISCARD CARRIAGE RETURN AT END.
      00020  0100 00 4 00003         TZE     3,4           ZERO SIZE LINES NOT ALLOWED, EITHER. 
      00021  0767 00 0 00022         ALS     18            SET UP CHARACTER COUNT.  
      00022  0622 00 0 00041         STD     ENDTST        NCHARS = CPW*NWORDS + EXTRAS   
      00023  0361 00 0 00066         ACL     CPWL1         CWP*NWORDS + EXTRAS + CPW - 1  
      00024  0131 00 0 00000         XCA                   (CPW*NWORDS + EXTRAS + CWP - 1)/CPW =
      00025 -0754 00 0 00000         ZAC                        NWORDS + (EXTRAS - 1 + CPW)/CPW 
      00026  0221 00 0 00065         DVP     CPW           SECOND TERM IS 1 IF EXTRAS .G. 0,    
      00027  0131 00 0 00000         XCA                                  0 IF EXTRAS .E. 0     
      00030  0621 00 0 00067         STA     CWD           INSERT IN CONTROL WORD.  
      00031  0074 00 4 00001         TSX     WRWORD,4      INSERT THIS WORD IN OUTPUT BUFFER.   
 TD   00032  3 00000 0 00067         TXH     CWD           ..     
      00033  0774 00 2 00001         AXT     1,2
      00034  0774 00 1 00003   OUTLP AXT     36/NBITS,1    SET CHARACTER COUNTER.   
      00035  0560 00 2 00000   INLP  LDQ     --,2     
      00036 -0773 00 0 00030         RQL     36-NBITS      SHIFT CHARACTER TO POSITION.   
      00037 -0763 00 0 00014         LGL     NBITS         AND INTO WORD.     
      00040  1 00001 2 00041         TXI     *+1,2,1       COUNT INPUT CHARACTERS.  
      00041  3 00000 2 00052  ENDTST TXH     DONE,2,--     CHECK FOR END OF INPUT.  
      00042  2 00001 1 00035         TIX     INLP,1,1 
      00043  0602 00 0 00070         SLW     WDOUT         SAVE COMPLETED WORD.     
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 2     
                  
      00044  0074 00 4 00001   OUT   TSX     WRWORD,4      STORE COMPLETED WORD.    
 TD   00045  3 00000 0 00070         TXH     WDOUT         ..     
      00046  0020 00 0 00034         TRA     OUTLP         GO BACK FOR MORE.  
                              *     
      00047  0560 00 0 00063   NLLP  LDQ     NULL          FILL IN WORD WITH NULLS. 
      00050 -0773 00 0 00030         RQL     36-NBITS      MOVE NULL TO POSITION.   
      00051 -0763 00 0 00014         LGL     NBITS         SHIFT IN A NULL.   
      00052  2 00001 1 00047   DONE  TIX     NLLP,1,1      COUNT SPACES LEFT. 
      00053  0602 00 0 00070         SLW     WDOUT         STORE THIS WORD.   
      00054  0074 00 4 00001         TSX     WRWORD,4      ADD TO OUTPUT BUFFER.    
 TD   00055  3 00000 0 00070         TXH     WDOUT         ..     
      00056  0774 00 4 00000   WX4   AXT     --,4          RESTORE LINKAGE, AND IRS.
      00057  0774 00 2 00000   WX2   AXT     --,2          ..     
      00060  0774 00 1 00000   WX1   AXT     --,1     
      00061  0020 00 4 00003         TRA     3,4           ..     
                              *     
      00062  0020 00 0 00005  CLOSEW TRA     FILE          REFLECT CLOSE CALL TO BUFFER.  
                              *     
                              *     
      00063 +000000000057      NULL  OCT     0057          NULL CHARACTER.    
      00064 +000000000055     RETURN OCT     0055          CARRIAGE RETURN CHARACTER.     
      00065  0 00003 0 00000   CPW           ,,NCHRS       NUMBER OF CHARACTERS PER WORD. 
      00066  0 00002 0 00000   CPWL1         ,,NCHRS-1     CHARACTERS PER WORD LESS ONE.  
                              *     
      00067 -377777000000      CWD   OCT     777777000000   
      00070  0 00000 0 00000   WDOUT                       STORAGE FOR WORD BEING OUTPUT. 
                              *     
                              *      LENGTH = READ.(LINE, BUFSIZ, EOF)  
                              *     
      00071  0634 00 1 00137   READ  SXA     RX1,1         READ NEXT LINE.    
      00072  0634 00 2 00136         SXA     RX2,2    
      00073  0634 00 4 00134         SXA     RX4,4    
      00074  0634 00 3 00135         SXA     RX3,3    
      00075 -0500 00 4 00001         CAL     1,4           GET LOCATION OF BUFFER.  
      00076  0621 00 0 00124         STA     RPUT     
      00077 -0500 60 4 00002         CAL*    2,4           SET UP END TEST.   
      00100  0402 00 0 00200         SUB     =1 
      00101  0767 00 0 00022         ALS     18            ..     
      00102  0622 00 0 00125         STD     BUFTST        ..     
      00103  0074 00 4 00002   RDAGN TSX     RDWORD,4      GET CONTROL WORD.  
      00104  0 00000 0 00141                 EOF           IN CASE WE ARE AT END OF FILE. 
      00105 -0734 00 1 00000         PDX     0,1           PUT FLAG IN IR1.   
      00106  0734 00 3 00000         PAX     0,3           PUT COUNT IN IR3.  
      00107 -2 77776 1 00146         TNX     WOOPS,1,-2    CHECK FLAG.  
      00110 -3 00000 3 00103         TXL     RDAGN,3,0     IGNORE ZERO-LENGTH LINE. 
      00111  0774 00 2 00000   RDON  AXT     0,2           SET OUTPUT COUNTER.
      00112  0074 00 4 00002  ROUTLP TSX     RDWORD,4      READ A WORD. 
      00113  0 00000 0 00141                 EOF           ..     
      00114  0774 00 1 00003         AXT     36/NBITS,1    SET CHARACTER COUNTER.   
      00115  0131 00 0 00000         XCA                   WORD TO MQ.  
      00116 -0754 00 0 00000   RINLP ZAC                   CLEAR AC.    
      00117 -0763 00 0 00014         LGL     NBITS         GET NEXT CHARACTER.
      00120 -0340 00 0 00063         LAS     NULL          IS THIS A NULL CHARACTER.
      00121  0020 00 0 00123         TRA     *+2           NO.    
      00122  0020 00 0 00126         TRA     RCH           YES, SKIP IT.
      00123  1 00001 2 00124         TXI     *+1,2,1       COUNT STORAGE SPACES.    
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 3     
                  
      00124  0602 00 2 00000   RPUT  SLW     --,2          STORE CHARACTER IN LINE. 
      00125  3 00000 2 00133  BUFTST TXH     PXA,2,--      TEST FOR FULL BUFFER.    
      00126  2 00001 1 00116   RCH   TIX     RINLP,1,1     INDEX, AND COUNT CHARACTERS.   
      00127  2 00001 3 00112         TIX     ROUTLP,3,1    INDEX, AND COUNT WORDS.  
      00130 -0500 00 0 00064         CAL     RETURN        PUT RETURN AT END OF LINE.     
      00131  1 00001 2 00132         TXI     *+1,2,1       INCLUDE IN COUNT.  
      00132  0522 00 0 00124         XEC     RPUT          INSTALL IT.  
      00133  0754 00 2 00000   PXA   PXA     0,2           GET WORD COUNT.    
      00134  0774 00 4 00000   RX4   AXT     --,4     
      00135  0774 00 3 00000   RX3   AXT     --,3     
      00136  0774 00 2 00000   RX2   AXT     --,2     
      00137  0774 00 1 00000   RX1   AXT     --,1     
      00140  0020 00 4 00004         TRA     4,4
                              *     
      00141  0534 00 4 00134   EOF   LXA     RX4,4         END OF FILE REACHED, TAKE ERROR
      00142  0534 00 3 00135         LXA     RX3,3         RETURN.
      00143  0534 00 2 00136         LXA     RX2,2    
      00144  0534 00 1 00137         LXA     RX1,1    
      00145  0020 60 4 00003         TRA*    3,4
                              *     
                              *     
      00146  0074 00 4 00003   WOOPS TSX     SETBCD,4      FILE IS NOT LINE-MARKED PROPERLY, COMPLAIN.
      00147  0074 00 4 00000         TSX     WRFLX,4  
      00150  0 00006 0 00161                 MESS1,,6 
      00151  0074 00 4 00004         TSX     SETFUL,4      RESTORE INDICATOR. 
      00152  0074 00 4 00002   LP    TSX     RDWORD,4      SEARCH FOR NEXT LINE MARK.     
      00153  0 00000 0 00141                 EOF
      00154 -0734 00 1 00000         PDX     0,1           CHECK FOR LINE MARK IN THIS WORD.    
      00155 -2 77776 1 00152         TNX     LP,1,-2       ..     
      00156  0734 00 3 00000         PAX     0,3           LINE MARK OK, CHECK COUNT.     
      00157 -3 00000 1 00152         TXL     LP,1,0        ..     
      00160  0020 00 0 00111         TRA     RDON          COUNT NON-ZERO, READ ON. 
                              *     
      00161  314547646360      MESS1 BCI     6,INPUT FILE HAS IMPROPER FORMAT.
      00162  263143256030     
      00163  216260314447     
      00164  514647255160     
      00165  264651442163     
      00166  336060606060     
                              *     
                              *      ROUTINE TO SWING TO BOTTOM OF FILE.
                              *     
      00167  0634 00 4 00176  BOTTOM SXA     EOFB,4        SAVE LINKAGE.
      00170  0074 00 4 00002   LOOP  TSX     RDWORD,4      GET NEXT INPUT WORD.     
      00171  0 00000 0 00176                 EOFB          EXIT ON END OF FILE.     
      00172  0601 00 0 00070         STO     WDOUT         SAVE THIS WORD.    
      00173  0074 00 4 00001         TSX     WRWORD,4      WRITE OUT THIS WORD.     
 TD   00174  3 00000 0 00070         TXH     WDOUT         ..     
      00175  0020 00 0 00170         TRA     LOOP          REPEAT.
                              *     
      00176  0774 00 4 00000  EOFB   AXT     --,4          RESTORE LINKAGE.   
      00177  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
                                     END  
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 4     
                  
        LITERALS  
      00200  000000000001     
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        201 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        152     LP   155,  157
         65    CPW    26
         67    CWD    30,   32
        141    EOF   104,  113,  153
         44    OUT      
        133    PXA   125
        126    RCH   122
        137    RX1    71,  144
        136    RX2    72,  143
        135    RX3    74,  142
        134    RX4    73,  141
         60    WX1    12
         57    WX2    11
         56    WX4    10
         52   DONE    41
        176   EOFB   167,  171
          5   FILE    62
         35   INLP    14,   42
        170   LOOP   175
         47   NLLP    52
         63   NULL    47,  120
        111   RDON   160
         71   READ     0
        124   RPUT    76,  132
         66  CPWL1    23
        161  MESS1   150
         14  NBITS    10,   34,   36,   37,   50,   51,  114,  117
          3  NCHRS    10,   65,   66
         34  OUTLP    46
        103  RDAGN   110
        116  RINLP   126
         70  WDOUT    43,   45,   53,   55,  172,  174
        146  WOOPS   107
          0  WRFLX   147
         10  WRITE     0
        167 BOTTOM     0
        125 BUFTST   102
         62 CLOSEW     0
         41 ENDTST    22
          2 RDWORD   103,  112,  152,  170
         64 RETURN   130
        112 ROUTLP   127
          3 SETBCD   146
          4 SETFUL   151
          1 WRWORD    31,   44,   54,  173
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            SUBROUTINE TO CONVERT BCD NUMBER TO BINARY.                                         PAGE 1     
                  
                              *     
                              *        J. H. SALTZER, MAY, 1966.  
                       00002         ENTRY   BIN           CONVERTER.   
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  223145606060     
                  
      00002  0634 00 1 00024   BIN   SXA     IRR1,1   
      00003  0600 00 0 00027         STZ     INT           CLEAR RESULT.
      00004  0774 00 1 00006         AXT     6,1
      00005  0560 60 4 00001         LDQ*    1,4           GET ARGUMENT.
      00006 -0754 00 0 00000  LOP    ZAC  
      00007 -0763 00 0 00006         LGL     6             GET NEXT CHARACTER.
      00010 -0340 00 0 00032         LAS     =10           SKIP OVER NON-DIGITS.    
      00011  0020 00 0 00023         TRA     TIX
      00012  0020 00 0 00023         TRA     TIX
      00013  0601 00 0 00030         STO     DIG           NUMBER, SAVE DIGIT.
      00014 -0600 00 0 00031         STQ     TEM           SAVE MQ FOR MULTIPLIACATION.   
      00015  0560 00 0 00027         LDQ     INT           GET OLD NUMBER.    
      00016  0200 00 0 00032         MPY     =10           SHIFT. 
      00017  0131 00 0 00000         XCA  
      00020  0400 00 0 00030         ADD     DIG           ADD THIS DIGIT TO RESULT.
      00021  0601 00 0 00027         STO     INT           SAVE, FOR NEXT PASS.     
      00022  0560 00 0 00031         LDQ     TEM           RESTORE MQ.  
      00023  2 00001 1 00006  TIX    TIX     LOP,1,1  
      00024  0774 00 1 00000   IRR1  AXT     --,1     
      00025  0500 00 0 00027         CLA     INT           RESULT IN AC.
      00026  0020 00 4 00002         TRA     2,4
                              *     
      00027  0 00000 0 00000   INT  
      00030  0 00000 0 00000   DIG  
      00031  0 00000 0 00000   TEM  
                              *     
                                     END  
                  
        LITERALS  
      00032  000000000012     
1            SUBROUTINE TO CONVERT BCD NUMBER TO BINARY.                                         PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         33 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          2    BIN     0
         30    DIG    13,   20
         27    INT     3,   15,   21,   25
          6    LOP    23
         31    TEM    14,   22
         23    TIX    11,   12
         24   IRR1     2
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            INTERFACE TO PROVIDE EXTENDED MEMORY ARRAY.                                         PAGE 1     
                  
                              *      J. H. SALTZER, JANUARY, 1965.
                              *     
                       00004         ENTRY FRAME
                       00017         ENTRY PRPIX
                       00022         ENTRY   RSMEM    
                              *     
                  
        TRANSFER VECTOR 
      00000  265121442501     FRAME1
      00001  475147316701     PRPIX1
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  265121442560     
                  
      00004  0634 00 4 00015   FRAME SXA     FRX4,4        SAVE RETURN. 
      00005  0074 00 4 00030         TSX     GETMEM,4      GET LOCATION OF ARRAY.   
      00006  0621 00 0 00034         STA     SAVMEM        SAVE FOR RESET ROUTINE.  
      00007  0361 00 0 00035         ACL     =5401    
      00010  0621 00 0 00013         STA     CAL1          SET UP CALLING SEQUENCE. 
      00011  0074 00 4 00027         TSX     SETMEM,4      MOVE BOUND.  
      00012  0074 00 4 00000   CAL0  TSX     $FRAME1,4     GO TO MAD.   
      00013  3 00033 0 00000  CAL1   TXH     --,,DIM  
 TD   00014  3 00000 0 00033         TXH     DIM           SO IT CAN BE CHANGED.    
      00015  0774 00 4 00000   FRX4  AXT     --,4     
      00016  0020 00 4 00001         TRA     1,4           RETURN TO CALLER WITH AC.
                              *     
      00017  0634 00 4 00015   PRPIX SXA     FRX4,4        SAVE RETURN. 
      00020 -0774 00 4 00012         AXC     CAL0,4        SET UP CALLING SEQUENCE. 
      00021  0020 00 0 00001         TRA     $PRPIX1       BUT CALL DIFFERENT ENTRY.
                              *     
      00022  0634 00 4 00025   RSMEM SXA     RSX4,4        SAVE RETURN. 
      00023 -0500 00 0 00034         CAL     SAVMEM          RESET MEMORY BOUND.    
      00024  0074 00 4 00027         TSX     SETMEM,4 
      00025  0774 00 4 00000   RSX4  AXT     --,4     
      00026  0020 00 4 00001         TRA     1,4
                              *     
      00027  0101 00 0 00037  SETMEM TIA     =HSETMEM 
      00030  0101 00 0 00036  GETMEM TIA     =HGETMEM 
                              *     
      00031  0 00000 0 00000                 -- 
      00032 +000000000001            DEC     1             BASE   
      00033 +000000000002            DEC     2             DIMENSIONS.  
                       00033   DIM   SYN     *-1           DIMENSION VECTOR.  
      00034  0 00000 0 00000  SAVMEM
                              *     
                              *     
                                     END  
                  
        LITERALS  
      00035  000000012431     
      00036  272563442544     
      00037  622563442544     
1            INTERFACE TO PROVIDE EXTENDED MEMORY ARRAY.                                         PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         40 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         33    DIM    13,   14,   34
         12   CAL0    20
         13   CAL1    10
         15   FRX4     4,   17
         25   RSX4    22
          4  FRAME     0
         17  PRPIX     0
         22  RSMEM     0
          0 FRAME1    12
         30 GETMEM     5
          1 PRPIX1    21
         34 SAVMEM     6,   23
         27 SETMEM    11,   24
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            LIBRARY PACKAGE.                                                                    PAGE 1     
                  
                       00024         ENTRY   .PCOMT        PRINT COMMENT ROUTINE    
                       00010         ENTRY   CHNCOM        GO DORMANT.  
                       00005         ENTRY   EXIT          SAME.  
                       00002         ENTRY   .SETUP        CALLED BY MAD MAIN PROGRA.     
                       00013         ENTRY   COMARG        GET COMMAND ARGUMENT.    
                       00106         ENTRY   WHOAMI   
                       00066         ENTRY   SETBCD   
                       00064         ENTRY   SETFUL   
                       00065         ENTRY   SETBRK   
                       00061         ENTRY   WRFLXA   
                       00063         ENTRY   WRFLX    
                       00062         ENTRY   RDFLXA   
                       00067         ENTRY   UPDATE        UPDATE U.F.D.
                       00070         ENTRY   CHFILE   
                       00071         ENTRY   DELFIL   
                       00072         ENTRY   FSTATE   
                       00073         ENTRY   BUFFER   
                       00074         ENTRY   OPEN     
                       00075         ENTRY   WRWAIT   
                       00076         ENTRY   WRFILE   
                       00077         ENTRY   RDWAIT   
                       00100         ENTRY   RDFILE   
                       00101         ENTRY   CLOSE    
                       00043         ENTRY   GETBUF        OBTAIN BUFFERS FROM SUPERVISOR.
                              *     
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  334723464463     
                  
      00002  0760 00 0 00016  .SETUP LMTM                  USE SEVEN TAG MODE.
      00003  0774 00 6 00000         AXT     0,6           SET UP IR6 TO AVOID EARLY CALL TO READ.    
      00004  0020 00 0 00064         TRA     SETFUL        USE FULL MODE.  SETFUL RETURNS 1,4.  
                              *     
      00005  0074 00 4 00066  EXIT   TSX     SETBCD,4      CLEANUP, RESET MODE.     
      00006  0074 00 4 00063         TSX     WRFLX,4       PUT OUT A STAR FOR RUNCOMS.    
      00007  0 00001 0 00060                 STAR,,1       AND THEN PERFORM CHNCOM SEQUENCE.    
      00010  0074 00 4 00102  CHNCOM TSX     CHN,4         THIS CHNCOM ALWAYS GOES DEAD,  
 TD   00011  3 00000 0 00107         TXH     =0            IF NO CHAIN EXISTS.
      00012  0020 00 0 00010         TRA     *-2           IN CASE OF RESTART, DON'T.     
                              *     
      00013  0634 00 4 00022  COMARG SXA     CM4,4         GET COMMAND ARGUMENT FOR MAD.  
      00014 -0500 60 4 00001         CAL*    1,4           GET ARGUMENT NUMBER.     
      00015  0602 00 0 00017         SLW     ARG           GIVE ARGUMENT NUMBER.    
      00016  0074 00 4 00103         TSX     GETCOM,4      GET COMMAND ARGUMENT.    
      00017  0 00000 0 00000   ARG                         ..     
      00020  0602 00 0 00017         SLW     ARG           MOVE TO ARITHMETIC AC.   
      00021  0500 00 0 00017         CLA     ARG           ..     
      00022  0774 00 4 00000   CM4   AXT     --,4          RESTORE LINKAGE.   
      00023  0020 00 4 00002         TRA     2,4           RETURN TO CALLER.  
                              *     
      00024 -0500 00 4 00001  .PCOMT CAL     1,4           GET WORD COUNT.    
      00025  0621 00 0 00042         STA     RETURN        ON RETURN, JUMP BUFFER.  
      00026  0767 00 0 00022         ALS     18            SETUP COUNT. 
      00027  0622 00 0 00036         STD     PCNT          ..     
      00030  1 77776 4 00031         TXI     *+1,4,-2      SETUP UP BUFFER ADDRESS. 
1            LIBRARY PACKAGE.                                                                    PAGE 2     
                  
      00031  0636 00 4 00036         SCA     PCNT,4        SAVE BUFFER ADDRESS, AND LINKAGE.    
      00032  0074 00 4 00064         TSX     SETFUL,4      MAKE SURE MODE SET AND NO LINES COMING IN. 
      00033  0074 00 4 00061         TSX     WRFLXA,4      SWITCH TO RED SHIFT.     
      00034  0 00001 0 00056                 REDS,,1       ..     
      00035  0074 00 4 00063         TSX     WRFLX,4       PRINT LINE.  
      00036  0 00000 0 00000   PCNT          --,,--        ..     
      00037  0074 00 4 00061         TSX     WRFLXA,4      SHIFT BACK TO BLACK.     
      00040  0 00001 0 00057                 BLCKS,,1      ..     
      00041  0535 00 4 00036         LAC     PCNT,4        RESTORE LINKAGE.   
      00042  0020 00 4 00000  RETURN TRA     --,4          RETURN TO CALLER.  
                              *     
      00043  0634 00 4 00052  GETBUF SXA     GX4,4         ENTRY TO GET BUFFERS.    
      00044  0602 00 0 00055         SLW     BUFSIZ        SIZE OF BUFFER IN AC.    
      00045  0074 00 4 00104         TSX     GETMEM,4      GET PRESENT BOUND. 
      00046  0601 00 0 00054         STO     START         SAVE AS BUFFER START.    
      00047  0361 00 0 00055         ACL     BUFSIZ        FORM NEW BOUND.    
      00050  0074 00 4 00105         TSX     SETMEM,4      ASK FOR MORE.
      00051 -0500 00 0 00054         CAL     START         GIVE CALLER LOCATION OF  
      00052  0774 00 4 00000   GX4   AXT     --,4          HIS NEW BUFFER.    
      00053  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      00054  0 00000 0 00000   START                       STORAGE FOR BUFFER LOCATION.   
      00055  0 00000 0 00000  BUFSIZ                       STORAGE FOR BUFFER SIZE. 
                              *     
      00056 +013300570057      REDS  OCT     013300570057  RED SHIFT AND TWO NULLS. 
      00057 +013200570057      BLCKS OCT     013200570057  BLACK SHIFT AND TWO NULLS.     
      00060 -145757575757     STAR   OCT     545757575757  ASTERISK AND 5 NULLS.    
                              *     
                              *              SUPERVISOR SUBROUTINE CALLERS.   
                              *     
      00061  0101 00 0 00133  WRFLXA TIA     =HWRFLXA 
      00062  0101 00 0 00122  RDFLXA TIA     =HRDFLXA 
      00063  0101 00 0 00134  WRFLX  TIA     =HWRFLX  
      00064  0101 00 0 00126  SETFUL TIA     =HSETFUL 
      00065  0101 00 0 00125  SETBRK TIA     =HSETBRK 
      00066  0101 00 0 00124  SETBCD TIA     =HSETBCD 
      00067  0101 00 0 00130  UPDATE TIA     =HUPDATE 
      00070  0101 00 0 00111  CHFILE TIA     =HCHFILE 
      00071  0101 00 0 00114  DELFIL TIA     =HDELFIL 
      00072  0101 00 0 00115  FSTATE TIA     =HFSTATE 
      00073  0101 00 0 00110  BUFFER TIA     =HBUFFER 
      00074  0101 00 0 00120  OPEN   TIA     =HOPEN   
      00075  0101 00 0 00135  WRWAIT TIA     =HWRWAIT 
      00076  0101 00 0 00132  WRFILE TIA     =HWRFILE 
      00077  0101 00 0 00123  RDWAIT TIA     =HRDWAIT 
      00100  0101 00 0 00121  RDFILE TIA     =HRDFILE 
      00101  0101 00 0 00113  CLOSE  TIA     =HCLOSE  
      00102  0101 00 0 00112  CHN    TIA     =HCHNCOM 
      00103  0101 00 0 00116  GETCOM TIA     =HGETCOM 
      00104  0101 00 0 00117  GETMEM TIA     =HGETMEM 
      00105  0101 00 0 00127  SETMEM TIA     =HSETMEM 
      00106  0101 00 0 00131  WHOAMI TIA     =HWHOAMI 
                              *     
                                     END  
1            LIBRARY PACKAGE.                                                                    PAGE 3     
                  
        LITERALS  
      00107  000000000000     
      00110  226426262551     
      00111  233026314325     
      00112  233045234644     
      00113  234346622560     
      00114  242543263143     
      00115  266263216325     
      00116  272563234644     
      00117  272563442544     
      00120  464725456060     
      00121  512426314325     
      00122  512426436721     
      00123  512466213163     
      00124  622563222324     
      00125  622563225142     
      00126  622563266443     
      00127  622563442544     
      00130  644724216325     
      00131  663046214431     
      00132  665126314325     
      00133  665126436721     
      00134  665126436760     
      00135  665166213163     
1            LIBRARY PACKAGE.                                                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        136 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         17    ARG    15,   20,   21
        102    CHN    10
         22    CM4    13
         52    GX4    43
          5   EXIT     0
         74   OPEN     0
         36   PCNT    27,   31,   41
         56   REDS    34
         60   STAR     7
         57  BLCKS    40
        101  CLOSE     0
         54  START    46,   51
         63  WRFLX     0,    6,   35
         73 BUFFER     0
         55 BUFSIZ    44,   47
         70 CHFILE     0
         10 CHNCOM     0
         13 COMARG     0
         71 DELFIL     0
         72 FSTATE     0
         43 GETBUF     0
        103 GETCOM    16
        104 GETMEM    45
         24 .PCOMT     0
          2 .SETUP     0
        100 RDFILE     0
         62 RDFLXA     0
         77 RDWAIT     0
         42 RETURN    25
         66 SETBCD     0,    5
         65 SETBRK     0
         64 SETFUL     0,    4,   32
        105 SETMEM    50
         67 UPDATE     0
        106 WHOAMI     0
         76 WRFILE     0
         61 WRFLXA     0,   33,   37
         75 WRWAIT     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




    SD   BCD 09/18/68 2319.9    4724         00000    
1       MAIN PROGRAM FOR SP OR SD COMMAND                                                        PAGE 1     
                  
                              *  WRITEEN BY ROGER ROACH  9-6-67   
                  
        TRANSFER VECTOR 
      00000  263151626360     FIRST 
                  
      00001  0074 00 4 00000         TSX     $FIRST,4 
      00002  0101 00 0 00003         TIA     =HDEAD        SHOULD NEVER RETURN
                                     END  
                  
        LITERALS  
      00003  242521246060     
1       MAIN PROGRAM FOR SP OR SD COMMAND                                                        PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          4 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          0  FIRST     1
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1     MAD PROGRAM LISTING ... ... ...                 FILE   SD000   MAD            02/08/68    1318.1
-                 
       SD        ..ARGUMENT LIST SCANNING. CHECKS RIGHT FORMAT AND SELECT                              LM00001    
                 ..APPROPRIATE SUBROUTINE                                                              LM00002    
                 ..PAT=0 AT THE VERY BEGINNING OF THE COMMAND                                          LM00003    
                                                                                                       LM00004    
                  EXTERNAL FUNCTION                                                               *001 LM00005    
                  ENTRY TO FIRST.                                                                 *002 LM00006    
                  ENTRY TO SD.                                                                    *003 LM00007    
                                                                                                       LM00008    
                  THROUGH D,FOR ARG=1,1,ARG.G.4                                                   *004 LM00009    
      E             K=K+1                                                                         *005 LM00010    
                    ARG(ARG)=COMARG.(K)                                                           *006 LM00011    
      D             WHENEVER ARG(ARG).E.$$,TRANSFER TO E                                          *007 LM00012    
                                                                                                       LM00013    
                  WHENEVER ARG(1).NE.FENCE,TRANSFER TO A                                          *008 LM00014    
                  TRANSFER TO ERROR1                                                              *009 LM00015    
                                                                                                       LM00016    
                 ..PAT=1 WHEN IN THE TRACE MODE                                                        LM00017    
                 ..PAT=2 WHEN STOMAP IS REQUESTED                                                      LM00018    
                 ..PAT=5 WHEN ONE ABSOLUTE LOCATION REQUESTED                                          LM00019    
                 ..PAT=6 WHEN PROGRAM NAME IS GIVEN                                                    LM00020    
                                                                                                       LM00021    
      A           WHENEVER ARG(2).NE.FENCE,TRANSFER TO B                                          *010 LM00022    
      F           THROUGH F,FOR ENT=1,1,ENT.G.5.OR.ARG(1).E.ENT(ENT)                              *011 LM00023    
                  WHENEVER ENT.LE.5,EXECUTE BRTIT.(ENTRY.,ENT)                                    *012 LM00024    
                  WHENEVER ARG(1).E.STOM                                                          *013 LM00025    
                    PAT=2                                                                         *014 LM00026    
                    EXECUTE BRFIL.(STMAP., PAT)                                                   *015 LM00027    
                  OR WHENEVER TOCT.(ARG(1)).E.1                                                   *016 LM00028    
                    PAT=5                                                                         *017 LM00029    
                    EXECUTE ABS.(PAT)                                                             *018 LM00030    
                  OTHERWISE                                                                       *019 LM00031    
                    PAT=6                                                                         *020 LM00032    
                    EXECUTE BRFIL.(PROG.,PAT)                                                     *021 LM00033    
                  END OF CONDITIONAL                                                              *022 LM00034    
                                                                                                       LM00035    
                 ..PAT=3 WHEN STOMAP REQUESTED FROM SPECIFIED ENTRY                                    LM00036    
                 ..PAT=7 WHEN N ABSOLUTE LOCATIONS ARE REQUESTED                                       LM00037    
                 ..PAT=8 WHEN ONE LOCATION IS REQUESTED IN A GIVEN PROGRAM                             LM00038    
                                                                                                       LM00039    
      B           WHENEVER ARG(3).NE.FENCE,TRANSFER TO C                                          *023 LM00040    
                  WHENEVER ARG(1).E.STOM                                                          *024 LM00041    
                    PAT=3                                                                         *025 LM00042    
                    EXECUTE BRFIL.(STMAP., PAT)                                                   *026 LM00043    
                  OR WHENEVER ARG(2).E.TRAC                                                       *027 LM00044    
                    PAT=1                                                                         *028 LM00045    
                    EXECUTE PRNTP.(MESS2)                                                         *029 LM00046    
                    EXECUTE CHNCOM.(0)                                                            *030 LM00047    
                  OR WHENEVER TOCT.(ARG(1)).E.1                                                   *031 LM00048    
                    PAT=7                                                                         *032 LM00049    
                    EXECUTE ABS.(PAT)                                                             *033 LM00050    
                  OR WHENEVER TOCT.(ARG(2)).E.1                                                   *034 LM00051    
                    PAT=8                                                                         *035 LM00052    
                    EXECUTE BRFIL.(PROG.,PAT)                                                     *036 LM00053    
                  OTHERWISE                                                                       *037 LM00054    
                    TRANSFER TO ERROR1                                                            *038 LM00055    
                  END OF CONDITIONAL                                                              *039 LM00056    
                                                                                                       LM00057    
                                                                                                       LM00058    
                 ..PAT=9 WHEN N LOCATIONS ARE REQUESTED IN A GIVEN PROGRAM                             LM00059    
                                                                                                       LM00060    
      C           WHENEVER ARG(4).NE.FENCE                                                        *040 LM00061    
                    TRANSFER TO ERROR1                                                            *041 LM00062    
                  OR WHENEVER TOCT.(ARG(2)).E.1                                                   *042 LM00063    
                    PAT=9                                                                         *043 LM00064    
                    EXECUTE BRFIL.(PROG.,PAT)                                                     *044 LM00065    
                  OTHERWISE                                                                       *045 LM00066    
                    TRANSFER TO ERROR1                                                            *046 LM00067    
                  END OF CONDITIONAL                                                              *047 LM00068    
                                                                                                       LM00069    
      ERROR1      EXECUTE PRNTP.(MESS1)                                                           *048 LM00070    
                  EXECUTE CHNCOM.(0)                                                              *049 LM00071    
                                                                                                       LM00072    
                  NORMAL MODE IS INTEGER                                                          *050 LM00073    
                  PROGRAM COMMON ARG                                                              *051 LM00074    
                  DIMENSION ARG(4)                                                                *052 LM00075    
                                                                                                       LM00076    
                  VECTOR VALUES  FENCE=777777777777K                                              *053 LM00077    
                  VECTOR VALUES ENT(1)=$COMORGCOMLNGFRSTPTPRGLNGLDNAME$                           *054 LM00078    
                  VECTOR VALUES STOM=$STOMAP$                                                     *055 LM00079    
                  VECTOR VALUES PAT=0                                                             *056 LM00080    
                  VECTOR VALUES K=0                                                               *057 LM00081    
                  VECTOR VALUES TRAC=$ TRACE$                                                     *058 LM00082    
                  VECTOR VALUES MESS1=$INCORRECT FORMAT$,777777777777K                            *059 LM00083    
                  VECTOR VALUES MESS2=$OPTION NOT AVAILABLE$,777777777777K                        *060 LM00084    
                  END OF FUNCTION                                                                 *061 LM00085    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00316 TRANSFER VECTOR LENGTH  00013 PROGRAM BEGINS    00061 FIRST UNUSED COMMON/ERASABLE  77454
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      SD     00065   0        FIRST  00062   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ARG    77461 AC1        D      00013   4        E      00020   4        K      00030 A 1        PAT    00042 A 1  
      A      00014   4        ENT    00026 A 1        FENCE  00027 A 1        MESS1  00034 A 1        STOM   00043 A 1  
      B      00015   4        ERROR1 00017   4        F      00013   4        MESS2  00041 A 1        TRAC   00044 A 1  
      C      00016   4                                                                                                  
0FUNCTION DICTIONARY    
      ABS    00000   1        BRFIL  00001   1        BRTIT  00002   1        CHNCOM 00003   1        COMARG 00004   1  
      ENTRY  00005   1        EXIT   00006   1        PRNTP  00007   1        PROG   00010   1        STMAP  00011   1  
      TOCT   00012   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00056 +000000000011     00055 +000000000010     00054 +000000000007     00045 +000000000000     00050 +000000000003    
 00053 +000000000006     00047 +000000000002     00052 +000000000005     00060 -206060606060     00051 +000000000004    
 00046 +000000000001     00057 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00014 TXL -300127000123       00015 TXL -300210000204       00016 TXL -300262000257       00017 TXL -300301000277      
 00020 TXL -300104000101                                                                                                
0PROGRAM    
                 EXTERNAL FUNCTION                                                  001  LM00005
                 ENTRY TO FIRST.                                                    002  LM00006
 00061 TRA +0 02000 0 00064    00062 SXA +0 63400 2 00304    00063 TSX +0 07400 2 00304                                 
                 ENTRY TO SD.                                                       003  LM00007
 00064 TRA +0 02000 0 00067    00065 SXA +0 63400 2 00304    00066 TSX +0 07400 2 00304                                 
                 THROUGH D,FOR ARG=1,1,ARG.G.4                                      004  LM00009
 00067 CLA +0 50000 0 00046    00070 STO +0 60100 0 77461    00071 TRA +0 02000 0 00075    00072 CLA +0 50000 0 77461   
 00073 ADD +0 40000 0 00046    00074 STO +0 60100 0 77461    00075 CLA +0 50000 0 77461    00076 SUB +0 40200 0 00051   
 00077 TZE +0 10000 0 00101    00100 TPL +0 12000 0 00116                                                               
      E            K=K+1                                                            005  LM00010
 00101 CLA +0 50000 0 00030    00102 ADD +0 40000 0 00046    00103 STO +0 60100 0 00030                                 
                   ARG(ARG)=COMARG.(K)                                              006  LM00011
 00104 TSX +0 07400 4 00004    00105 TXH +3 00000 0 00030    00106 LXA +0 53400 1 77461    00107 STO +0 60100 1 77461   
      D            WHENEVER ARG(ARG).E.$$,TRANSFER TO E                             007  LM00012
 00110 LXA +0 53400 1 77461    00111 CLA +0 50000 1 77461    00112 SUB +0 40200 0 00060    00113 TNZ -0 10000 0 00115   
 00114 TRA +0 02000 0 00020    00115 TRA +0 02000 0 00072                                                               
                 WHENEVER ARG(1).NE.FENCE,TRANSFER TO A                             008  LM00014
 00116 CLA +0 50000 0 77460    00117 SUB +0 40200 0 00027    00120 TZE +0 10000 0 00122    00121 TRA +0 02000 0 00014   
                 TRANSFER TO ERROR1                                                 009  LM00015
 00122 TRA +0 02000 0 00017                                                                                             
      A          WHENEVER ARG(2).NE.FENCE,TRANSFER TO B                             010  LM00022
 00123 CLA +0 50000 0 77457    00124 SUB +0 40200 0 00027    00125 TZE +0 10000 0 00127    00126 TRA +0 02000 0 00015   
      F          THROUGH F,FOR ENT=1,1,ENT.G.5.OR.ARG(1).E.ENT(ENT)                 011  LM00023
 00127 CLA +0 50000 0 00046    00130 STO +0 60100 0 00026    00131 TRA +0 02000 0 00135    00132 CLA +0 50000 0 00026   
 00133 ADD +0 40000 0 00046    00134 STO +0 60100 0 00026    00135 LXA +0 53400 2 00026    00136 CLA +0 50000 0 77460   
 00137 SUB +0 40200 2 00026    00140 TZE +0 10000 0 00146    00141 CLA +0 50000 0 00026    00142 SUB +0 40200 0 00052   
 00143 TZE +0 10000 0 00145    00144 TPL +0 12000 0 00146    00145 TRA +0 02000 0 00132                                 
                 WHENEVER ENT.LE.5,EXECUTE BRTIT.(ENTRY.,ENT)                       012  LM00024
 00146 CLA +0 50000 0 00026    00147 SUB +0 40200 0 00052    00150 TZE +0 10000 0 00152    00151 TPL +0 12000 0 00155   
 00152 TSX +0 07400 4 00002    00153 TXH +3 00000 0 00005    00154 TXH +3 00000 0 00026                                 
                 WHENEVER ARG(1).E.STOM                                             013  LM00025
 00155 CLA +0 50000 0 77460    00156 SUB +0 40200 0 00043    00157 TNZ -0 10000 0 00166                                 
                   PAT=2                                                            014  LM00026
 00160 CLA +0 50000 0 00047    00161 STO +0 60100 0 00042                                                               
                   EXECUTE BRFIL.(STMAP., PAT)                                      015  LM00027
 00162 TSX +0 07400 4 00001    00163 TXH +3 00000 0 00011    00164 TXH +3 00000 0 00042                                 
                 OR WHENEVER TOCT.(ARG(1)).E.1                                      016  LM00028
 00165 TRA +0 02000 0 00204    00166 TSX +0 07400 4 00012    00167 TXH +3 00000 0 77460    00170 SUB +0 40200 0 00046   
 00171 TNZ -0 10000 0 00177                                                                                             
                   PAT=5                                                            017  LM00029
 00172 CLA +0 50000 0 00052    00173 STO +0 60100 0 00042                                                               
                   EXECUTE ABS.(PAT)                                                018  LM00030
 00174 TSX +0 07400 4 00000    00175 TXH +3 00000 0 00042                                                               
                 OTHERWISE                                                          019  LM00031
 00176 TRA +0 02000 0 00204                                                                                             
                   PAT=6                                                            020  LM00032
 00177 CLA +0 50000 0 00053    00200 STO +0 60100 0 00042                                                               
                   EXECUTE BRFIL.(PROG.,PAT)                                        021  LM00033
 00201 TSX +0 07400 4 00001    00202 TXH +3 00000 0 00010    00203 TXH +3 00000 0 00042                                 
                 END OF CONDITIONAL                                                 022  LM00034
      B          WHENEVER ARG(3).NE.FENCE,TRANSFER TO C                             023  LM00040
 00204 CLA +0 50000 0 77456    00205 SUB +0 40200 0 00027    00206 TZE +0 10000 0 00210    00207 TRA +0 02000 0 00016   
                 WHENEVER ARG(1).E.STOM                                             024  LM00041
 00210 CLA +0 50000 0 77460    00211 SUB +0 40200 0 00043    00212 TNZ -0 10000 0 00221                                 
                   PAT=3                                                            025  LM00042
 00213 CLA +0 50000 0 00050    00214 STO +0 60100 0 00042                                                               
                   EXECUTE BRFIL.(STMAP., PAT)                                      026  LM00043
 00215 TSX +0 07400 4 00001    00216 TXH +3 00000 0 00011    00217 TXH +3 00000 0 00042                                 
                 OR WHENEVER ARG(2).E.TRAC                                          027  LM00044
 00220 TRA +0 02000 0 00257    00221 CLA +0 50000 0 77457    00222 SUB +0 40200 0 00044    00223 TNZ -0 10000 0 00233   
                   PAT=1                                                            028  LM00045
 00224 CLA +0 50000 0 00046    00225 STO +0 60100 0 00042                                                               
                   EXECUTE PRNTP.(MESS2)                                            029  LM00046
 00226 TSX +0 07400 4 00007    00227 TXH +3 00000 0 00041                                                               
                   EXECUTE CHNCOM.(0)                                               030  LM00047
 00230 TSX +0 07400 4 00003    00231 TXH +3 00000 0 00045                                                               
                 OR WHENEVER TOCT.(ARG(1)).E.1                                      031  LM00048
 00232 TRA +0 02000 0 00257    00233 TSX +0 07400 4 00012    00234 TXH +3 00000 0 77460    00235 SUB +0 40200 0 00046   
 00236 TNZ -0 10000 0 00244                                                                                             
                   PAT=7                                                            032  LM00049
 00237 CLA +0 50000 0 00054    00240 STO +0 60100 0 00042                                                               
                   EXECUTE ABS.(PAT)                                                033  LM00050
 00241 TSX +0 07400 4 00000    00242 TXH +3 00000 0 00042                                                               
                 OR WHENEVER TOCT.(ARG(2)).E.1                                      034  LM00051
 00243 TRA +0 02000 0 00257    00244 TSX +0 07400 4 00012    00245 TXH +3 00000 0 77457    00246 SUB +0 40200 0 00046   
 00247 TNZ -0 10000 0 00256                                                                                             
                   PAT=8                                                            035  LM00052
 00250 CLA +0 50000 0 00055    00251 STO +0 60100 0 00042                                                               
                   EXECUTE BRFIL.(PROG.,PAT)                                        036  LM00053
 00252 TSX +0 07400 4 00001    00253 TXH +3 00000 0 00010    00254 TXH +3 00000 0 00042                                 
                 OTHERWISE                                                          037  LM00054
 00255 TRA +0 02000 0 00257                                                                                             
                   TRANSFER TO ERROR1                                               038  LM00055
 00256 TRA +0 02000 0 00017                                                                                             
                 END OF CONDITIONAL                                                 039  LM00056
      C          WHENEVER ARG(4).NE.FENCE                                           040  LM00061
 00257 CLA +0 50000 0 77455    00260 SUB +0 40200 0 00027    00261 TZE +0 10000 0 00264                                 
                   TRANSFER TO ERROR1                                               041  LM00062
 00262 TRA +0 02000 0 00017                                                                                             
                 OR WHENEVER TOCT.(ARG(2)).E.1                                      042  LM00063
 00263 TRA +0 02000 0 00277    00264 TSX +0 07400 4 00012    00265 TXH +3 00000 0 77457    00266 SUB +0 40200 0 00046   
 00267 TNZ -0 10000 0 00276                                                                                             
                   PAT=9                                                            043  LM00064
 00270 CLA +0 50000 0 00056    00271 STO +0 60100 0 00042                                                               
                   EXECUTE BRFIL.(PROG.,PAT)                                        044  LM00065
 00272 TSX +0 07400 4 00001    00273 TXH +3 00000 0 00010    00274 TXH +3 00000 0 00042                                 
                 OTHERWISE                                                          045  LM00066
 00275 TRA +0 02000 0 00277                                                                                             
                   TRANSFER TO ERROR1                                               046  LM00067
 00276 TRA +0 02000 0 00017                                                                                             
                 END OF CONDITIONAL                                                 047  LM00068
      ERROR1     EXECUTE PRNTP.(MESS1)                                              048  LM00070
 00277 TSX +0 07400 4 00007    00300 TXH +3 00000 0 00034                                                               
                 EXECUTE CHNCOM.(0)                                                 049  LM00071
 00301 TSX +0 07400 4 00003    00302 TXH +3 00000 0 00045                                                               
                 NORMAL MODE IS INTEGER                                             050  LM00073
                 PROGRAM COMMON ARG                                                 051  LM00074
                 DIMENSION ARG(4)                                                   052  LM00075
                 VECTOR VALUES  FENCE=777777777777K                                 053  LM00077
 00027     -3 77777 7 77777                                                                                             
                 VECTOR VALUES ENT(1)=$COMORGCOMLNGFRSTPTPRGLNGLDNAME$              054  LM00078
 00021     -0 32445 2 14425    00022     -0 75127 4 34527    00023     +2 65162 6 34763    00024     +2 34644 4 34527   
 00025     +2 34644 4 65127                                                                                             
                 VECTOR VALUES STOM=$STOMAP$                                        055  LM00079
 00043     -2 26346 4 42147                                                                                             
                 VECTOR VALUES PAT=0                                                056  LM00080
 00042     +0 00000 0 00000                                                                                             
                 VECTOR VALUES K=0                                                  057  LM00081
 00030     +0 00000 0 00000                                                                                             
                 VECTOR VALUES TRAC=$ TRACE$                                        058  LM00082
 00044     -2 06351 2 12325                                                                                             
                 VECTOR VALUES MESS1=$INCORRECT FORMAT$,777777777777K               059  LM00083
 00031     -3 77777 7 77777    00032     -1 14421 6 36060    00033     +2 52363 6 02646    00034     +3 14523 4 65151   
                 VECTOR VALUES MESS2=$OPTION NOT AVAILABLE$,777777777777K           060  LM00084
 00035     -3 77777 7 77777    00036     -0 32560 6 06060    00037     -2 52131 4 32122    00040     -2 04546 6 36021   
 00041     -0 64763 3 14645                                                                                             
                 END OF FUNCTION                                                    061  LM00085
 00303 TSX +0 07400 4 00006    00304 TXH +3 00000 0 00000    00305 SXD -0 63400 1 00304    00306 SXA +0 63400 4 00310   
 00307 TRA +0 02000 2 00001    00310 AXT +0 77400 4 00000    00311 LXA +0 53400 2 00304    00312 LXD -0 53400 1 00304   
 00313 TRA +0 02000 4 00001                                                                                             




 SDUMP   BCD 09/18/68 2320.0    8011         00000    
1                                                                                                PAGE 1     
                           SDUMP --- PRINT M.C./CONTENTS OF 'SAVED' FILE            
                  
                                     EXTERN  OTBC,DTBC,OCTDMP,BTOC
                  
                              TYPE   MACRO   N,TEXT,LOC     
                                     ...     WRFLX((LOC,,N))
                                     RMT  
                              LOC    BCI     N,TEXT   
                                     RMT  
                              TYPE   END  
                  
 M                            ...    MACRO   NAME(LIST)                                                           
                                     TSX     NAME,4   
                                     ARG     (LIST)   
                              ...    END  
                  
                              ARG    MACRO   NAMES    
                                     IRP     NAMES    
                                     PAR     NAMES    
                                     IRP  
                              ARG    END  
                  
                              SYS    MACRO   NAMES    
                                     IRP     NAMES    
                              NAMES  TIA     =H'NAMES 
                                     IRP  
                              SYS    END  
                  
             3 00001 1 60000  PAR    OPSYN   PTH
             2 00017 1 60000  BLK    OPSYN   TIX
                  
                  
      00000  466322236060     OTBC  
      00001  246322236060     DTBC  
      00002  462363244447     OCTDMP
      00003  226346236060     BTOC  
                  
                       01750  BUFSIZ EQU     1000     
                              *     
                  
      00004                          ...     SETBRK(ENDCPU) 
      00006                          ...     FERRTN(TILT)   
      00010                          ...     GETCOM(1)     GET 'SAVED' FILE NAME    
      00012  0602 00 0 00362         SLW     FN            SAVE IT
      00013  0322 00 0 00533         ERA     =O777777777777 
      00014  0100 00 0 00300         TZE     ENDCPU   
      00015                          ...     GETCOM(2)
      00017 -0340 00 0 00533         LAS     =O777777777777  CHECK FOR NO STARTING LOCATION     
      00020  0020 00 0 00022         TRA     *+2           .. SKIP FOR MEMORY REQUEST     
      00021  0020 00 0 00132         TRA     CPU           .. NO STARTING LOC. TYPE OUT CPU     
      00022 -0320 00 0 00504         ANA     =O0707070707  INSURE 5 OCTAL DIGITS    
      00023 -0130 00 0 00000         XCL                   INTO MQ
      00024  0074 00 4 00000         TSX     $OTBC,4       CONVERT TO BINARY  
      00025  0621 00 0 00124         STA     ORG           SAVE INITIAL LOCATION    
      00026                          ...     GETCOM(3)     GET COUNT    
      00030 -0320 00 0 00503         ANA     =O17171717    INSURE 4 DECIMAL DIGITS  
      00031 -0130 00 0 00000         XCL                   INTO MQ
1                                                                                                PAGE 2     
                           SDUMP --- PRINT M.C./CONTENTS OF 'SAVED' FILE            
                  
      00032  0074 00 4 00001         TSX     $DTBC,4       CONVERT COUNT TO BINARY  
      00033  0734 00 4 00000         PAX     0,4           INTO IR4     
      00034  3 01750 4 00037         TXH     RDMEM,4,BUFSIZ 
      00035  0634 00 4 00367         SXA     COUNT1,4      SAVE COUNT   
      00036 -0634 00 4 00125         SXD     COUNT2,4      ..     
      00037                   RDMEM  ...     OPEN(=HR,FN,FN+1,MZ,MZ,NFND,ERRBUF)    
      00047                          ...     RDWAIT(FN,FN+1,=0(MEMBND,,1)ERREOF,ERRBUF,ERREOF,ERRBUF) 
      00060 -0500 00 0 00336         CAL     MEMBND        GET MEMBND,,MCLN   
      00061  0771 00 0 00022         ARS     18            ..     
      00062 -0320 00 0 00502         ANA     =O77777       ISOLATE LENGTH OF M.C.   
      00063  0361 00 0 00477         ACL     =2 
      00064  0361 00 0 00124         ACL     ORG
      00065  0601 00 0 00370         STO     RD.REL        (CAN BE .GE. 2 .P. 15)   
                  
      00066 -0500 00 0 00336         CAL     MEMBND   
      00067 -0320 00 0 00502         ANA     =O77777  
      00070  0340 00 0 00502         CAS     =O77777  
      00071  0774 00 0 00000         AXT     0,0           (IMPOSSIBLE) 
      00072  0361 00 0 00476         ACL     =1 
      00073  0402 00 0 00124         SUB     ORG           CALCULATE COUNT    
      00074  0100 00 0 00127         TZE     ERROR         (MEMBND IS ONE HIGHER THAN LAST LOCATION)  
      00075 -0120 00 0 00127         TMI     ERROR         OUT OF BOUNDS
      00076  0340 00 0 00367         CAS     COUNT1   
      00077  0020 00 0 00104         TRA     *+5
      00100  0020 00 0 00104         TRA     *+4
      00101  0621 00 0 00367         STA     COUNT1   
      00102  0767 00 0 00022         ALS     18 
      00103  0622 00 0 00125         STD     COUNT2   
                  
      00104                          ...     GETMEM() 
      00105  0621 00 0 00115         STA     C2 
      00106  0621 00 0 00125         STA     COUNT2   
      00107  0361 00 0 00367         ACL     COUNT1   
      00110                          ...     SETMEM() 
                  
      00111                          ...     RDFILE(FN,FN+1,RD.REL)     
      00115  2 00367 0 00000  C2     BLK     **,,COUNT1     
      00116                          ARG     (ERREOF,ERRBUF)
                  
      00120                          ...     CLOSE(FN,FN+1) 
                  
      00123  0074 00 4 00002         TSX     $OCTDMP,4     DUMP USER CORE ON HIS CONSOLE  
      00124  0 00000 0 00000  ORG            **            ..     
      00125  0 01750 0 00000  COUNT2         **,,BUFSIZ    ..     
      00126  0020 00 0 00300         TRA     ENDCPU        AND EXIT     
                              *     
                              *     
      00127                   ERROR  TYPE    9,(REQUEST LOCATION NOT IN SAVED FILE.)
      00131  0020 00 0 00300         TRA     ENDCPU   
                              *     
      00132                   CPU    ...     OPEN(=HR,FN,FN+1,MZ,MZ,NFND,ERRBUF)    
      00142                          ...     RDFILE(FN,FN+1,=0(MEMBND,,SLTS-MEMBND+1)ERREOF,ERRBUF)   
      00151                          ...     CLOSE(FN,FN+1) 
                              *     
      00154                          ...     WRFLX(*)      PRINT ONE BLANK LINE     
1                                                                                                PAGE 3     
                           SDUMP --- PRINT M.C./CONTENTS OF 'SAVED' FILE            
                  
                              *     
      00156 -0500 00 0 00337         CAL     ILC           SET UP ILC   
      00157 -0765 00 0 00022         LGR     18 
      00160  0074 00 4 00003         TSX     $BTOC,4  
      00161  0767 00 0 00006         ALS     6  
      00162 -0501 00 0 00501         ORA     =H00000, 
      00163  0602 00 0 00404         SLW     CPU1+1   
      00164  0500 00 0 00351         CLA     SQ            SET UP SIGN AND Q BITS   
      00165  0767 00 0 00001         ALS     1  
      00166  0560 00 0 00527         LDQ     =H S= 1, 
      00167 -0120 00 0 00171         TMI     *+2
      00170  0560 00 0 00526         LDQ     =H S= 0, 
      00171 -0600 00 0 00405         STQ     CPU1+2   
      00172  0560 00 0 00525         LDQ     =H Q= 1, 
      00173 -0760 00 0 00001         PBT  
      00174  0560 00 0 00524         LDQ     =H Q= 0, 
      00175 -0600 00 0 00406         STQ     CPU1+3   
      00176  0560 00 0 00350         LDQ     LAC           SET UP LOGICAL AC  
      00177  0074 00 4 00003         TSX     $BTOC,4  
      00200  0602 00 0 00410         SLW     CPU1+5   
      00201  0074 00 4 00003         TSX     $BTOC,4  
      00202  0602 00 0 00411         SLW     CPU1+6   
      00203  0560 00 0 00352         LDQ     MQ            SET UP MQ    
      00204  0074 00 4 00003         TSX     $BTOC,4  
      00205  0602 00 0 00413         SLW     CPU1+8   
      00206  0074 00 4 00003         TSX     $BTOC,4  
      00207  0602 00 0 00414         SLW     CPU1+9   
      00210  0560 00 0 00353         LDQ     SI            SET UP SENSE INDICATORS  
      00211  0074 00 4 00003         TSX     $BTOC,4  
      00212  0602 00 0 00416         SLW     CPU1+11  
      00213  0074 00 4 00003         TSX     $BTOC,4  
      00214  0602 00 0 00417         SLW     CPU1+12  
      00215                          ...     WRFLX((CPU1,,13))  TYPE FIRST LINE     
                  
                                     RMT  
                              CPU1   BCI     7, ILC= 00000, S= 0, Q= 0, LAC= 000000000000 
                                     BCI     6,, MQ= 000000000000, SI= 000000000000 
                                     RMT  
                  
      00217 -0500 00 0 00514         CAL     =HOFF,        SET UP AC OVERFLOW 
      00220  0520 00 0 00354         ZET     OV 
      00221 -0500 00 0 00515         CAL     =HON,    
      00222  0602 00 0 00421         SLW     CPU2+1   
      00223 -0500 00 0 00514         CAL     =HOFF,        SET UP FLOATING TRAP MODE
      00224  0520 00 0 00356         ZET     FLMD     
      00225 -0500 00 0 00515         CAL     =HON,    
      00226  0602 00 0 00423         SLW     CPU2+3   
      00227 -0500 00 0 00514         CAL     =HOFF,        SET UP MULTIPLE TAG MODE 
      00230  0520 00 0 00355         ZET     MTMD     
      00231 -0500 00 0 00515         CAL     =HON,    
      00232  0602 00 0 00425         SLW     CPU2+5   
      00233 -0500 00 0 00514         CAL     =HOFF,        SET UP DIVIDE CHECK
      00234  0520 00 0 00360         ZET     DVCK     
      00235 -0500 00 0 00515         CAL     =HON,    
      00236  0602 00 0 00427         SLW     CPU2+7   
1                                                                                                PAGE 4     
                           SDUMP --- PRINT M.C./CONTENTS OF 'SAVED' FILE            
                  
      00237 -0500 00 0 00336         CAL     MEMBND        SET UP USER MEMORY BOUND 
      00240 -0765 00 0 00022         LGR     18 
      00241  0074 00 4 00003         TSX     $BTOC,4  
      00242 -0501 00 0 00523         ORA     =H 00000 
      00243  0602 00 0 00432         SLW     CPU2+10  
      00244                          ...     WRFLX((CPU2,,11))  .. SECOND LINE
                  
                                     RMT  
                              CPU2   BCI     6, ACOV XXXXXX FLMD XXXXXX MTMD XXXXXX 
                                     BCI     5, DVCK XXXXXX     MEMBND= XXXXX 
                                     RMT  
                  
      00246  0774 00 1 00016         AXT     14,1          SET UP INDEX REGISTERS   
      00247  0774 00 2 00000         AXT     0,2
      00250 -0500 00 2 00346  IRS    CAL     IR1,2    
      00251 -0765 00 0 00022         LGR     18 
      00252  0074 00 4 00003         TSX     $BTOC,4  
      00253  0767 00 0 00006         ALS     6  
      00254 -0602 00 1 00452         ORS     CPU3+15,1
      00255 -2 00002 1 00257         TNX     *+2,1,2  
      00256  1 00001 2 00250         TXI     IRS,2,1  
      00257                          ...     WRFLX((CPU3,,14))  .. THIRD LINE 
                  
                                     RMT  
                              CPU3   BCI     8, IR1= 00000, IR2= 00000, IR3= 00000, IR4= 00000, 
                                     BCI     6, IR5= 00000, IR6= 00000, IR7= 00000. 
                                     RMT  
                  
      00261  0774 00 1 00016         AXT     14,1     
      00262  0774 00 2 00000         AXT     0,2
      00263 -0500 00 2 00346  IRSC   CAL     IR1,2    
      00264  0737 00 4 00000         PAC     ,4 
      00265  0754 00 4 00000         PXA     ,4 
      00266 -0765 00 0 00022         LGR     18 
      00267  0074 00 4 00003         TSX     BTOC,4   
      00270  0767 00 0 00006         ALS     6  
      00271 -0602 00 1 00470         ORS     CPU4+15,1
      00272 -2 00002 1 00274         TNX     *+2,1,2  
      00273  1 00001 2 00263         TXI     IRSC,2,1 
      00274                          ...     WRFLX((CPU4,,14))  .. FOURTH LINE
                  
                                     RMT  
                              CPU4   DUP     1,7
                                     BCI     2,    (-00000) 
                                     RMT  
                  
      00276                          ...     WRFLX(*) 
                              *     
      00300                   ENDCPU ...     CLOSE(=HALL,MZ)
                  
      00303                          ...     CHNCOM(0)     TO CHAIN OR 'DEAD' 
                              *     
      00305                   ERREOF TYPE    6,( SAVED FILE HAS ILLEGAL FORMAT.)    
      00307  0020 00 0 00300         TRA     ENDCPU   
1                                                                                                PAGE 5     
                           SDUMP --- PRINT M.C./CONTENTS OF 'SAVED' FILE            
                  
      00310 -0500 00 0 00371  NFND   CAL     ERRBUF   
      00311  0402 00 0 00500         SUB     =12
      00312 -0100 00 0 00316         TNZ     TILT     
      00313                          ...     WRFLX((FN,,4)) 
      00315  0020 00 0 00300         TRA     ENDCPU   
                  
      00316 -3 00322 0 00317  TILT   TXL     *+1,,*+4 
      00317 -0500 00 0 00517         CAL     =HPRNTER 
      00320  0560 00 0 00533         LDQ     =O777777777777 
      00321                          ...     NEXCOM() 
                  
      00322                          SYS     (OPEN,RDFILE,RDWAIT,CLOSE) 
      00326                          SYS     (SETBRK,FERRTN,WRFLX,GETCOM,CHNCOM)    
      00333                          SYS     (GETMEM,SETMEM,NEXCOM)     
                  
                              *     
      00336  0 00000 0 00000  MEMBND
      00337  0 00000 0 00000  ILC   
      00340  0 00000 0 00000  IR7   
      00341  0 00000 0 00000  IR6   
      00342  0 00000 0 00000  IR5   
      00343  0 00000 0 00000  IR4   
      00344  0 00000 0 00000  IR3   
      00345  0 00000 0 00000  IR2   
      00346  0 00000 0 00000  IR1   
      00347  0 00000 0 00000  PTIRS 
      00350  0 00000 0 00000  LAC   
      00351  0 00000 0 00000  SQ    
      00352  0 00000 0 00000  MQ    
      00353  0 00000 0 00000  SI    
      00354  0 00000 0 00000  OV    
      00355  0 00000 0 00000  MTMD  
      00356  0 00000 0 00000  FLMD  
      00357  0 00000 0 00000  IOCK  
      00360  0 00000 0 00000  DVCK  
      00361  0 00000 0 00000  SLTS  
                              *     
      00362  545454545454     FN     BCI     2,****** SAVED 
                  
      00364  604546636026            BCI     2, NOT FOUND.  
                  
      00366 -0 00000 0 00000  MZ     MZE  
                  
      00367  0 00000 0 01750  COUNT1         BUFSIZ   
      00370  0 00000 0 00000  RD.REL
                  
      00371  0 00000 0 00000  ERRBUF
                  
      00372                          RMT     *  
      00372  512550642562     ..001  BCI     9,REQUEST LOCATION NOT IN SAVED FILE.                            .001
      00403  603143231360     CPU1   BCI     7, ILC= 00000, S= 0, Q= 0, LAC= 000000000000                     .001
      00412  736044501360            BCI     6,, MQ= 000000000000, SI= 000000000000                           .001
      00420  602123466560     CPU2   BCI     6, ACOV XXXXXX FLMD XXXXXX MTMD XXXXXX                           .001
      00426  602465234260            BCI     5, DVCK XXXXXX     MEMBND= XXXXX                                 .001
      00433  603151011360     CPU3   BCI     8, IR1= 00000, IR2= 00000, IR3= 00000, IR4= 00000,               .001
1                                                                                                PAGE 6     
                           SDUMP --- PRINT M.C./CONTENTS OF 'SAVED' FILE            
                  
      00443  603151051360            BCI     6, IR5= 00000, IR6= 00000, IR7= 00000.                           .001
                       00451  CPU4   DUP     1,7                                                              .001
      00451  606060607440            BCI     2,    (-00000)                                                   .001
      00467  606221652524     ..002  BCI     6, SAVED FILE HAS ILLEGAL FORMAT.                                .001
                  
                                     END  
                  
        LITERALS  
      00475  000000000000     
      00476  000000000001     
      00477  000000000002     
      00500  000000000014     
      00501  000000000073     
      00502  000000077777     
      00503  000017171717     
      00504  000707070707     
      00505  214343606060     
      00506  233045234644     
      00507  234346622560     
      00510  262551516345     
      00511  272563234644     
      00512  272563442544     
      00513  452567234644     
      00514  462626736060     
      00515  464573606060     
      00516  464725456060     
      00517  475145632551     
      00520  512426314325     
      00521  512466213163     
      00522  516060606060     
      00523  600000000000     
      00524  605013600073     
      00525  605013600173     
      00526  606213600073     
      00527  606213600173     
      00530  622563225142     
      00531  622563442544     
      00532  665126436760     
      00533  777777777777     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        534 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        115     C2   105
        362     FN    12,   41,   42,   50,   51,  112,  113,  121,  122,  134,  135,  143,  144,  152,  153,  314
        352     MQ   203
        366     MZ    43,   44,  136,  137,  302
        354     OV   220
        353     SI   210
        351     SQ   164
        132    CPU    21
        337    ILC   156
        346    IR1   250,  263
        345    IR2      
        344    IR3      
        343    IR4      
        342    IR5      
        341    IR6      
        340    IR7      
        250    IRS   256
        350    LAC   176
        124    ORG    25,   64,   73
          3   BTOC   160,  177,  201,  204,  206,  211,  213,  241,  252,  267
        403   CPU1   163,  171,  175,  200,  202,  205,  207,  212,  214,  216
        420   CPU2   222,  226,  232,  236,  243,  245
        433   CPU3   254,  260
        451   CPU4   271,  275
          1   DTBC    32
        360   DVCK   234
        356   FLMD   224
        357   IOCK      
        263   IRSC   273
        355   MTMD   230
        310   NFND    45,  140
        322   OPEN    37,  132
          0   OTBC    24
        361   SLTS   146
        316   TILT     7,  312
        325  CLOSE   120,  151,  300
        127  ERROR    74,   75
        372  ..001   130
        467  ..002   306
        347  PTIRS      
         37  RDMEM    34
        330  WRFLX   127,  154,  215,  244,  257,  274,  276,  305,  313
       1750 BUFSIZ     4,   34,  125,  367
        332 CHNCOM   303
        367 COUNT1    35,   76,  101,  107,  115
        125 COUNT2    36,  103,  106
        300 ENDCPU     5,   14,  126,  131,  307,  315
        371 ERRBUF    46,   55,   57,  117,  141,  150,  310
        305 ERREOF    54,   56,  116,  147
        327 FERRTN     6
        331 GETCOM    10,   15,   26
1                                                                                                PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        333 GETMEM   104
        336 MEMBND    53,   60,   66,  146,  237
        335 NEXCOM   321
          2 OCTDMP   123
        323 RDFILE   111,  142
        370 RD.REL    65,  114
        324 RDWAIT    47
        326 SETBRK     4
        334 SETMEM   110
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1                                                                                                PAGE 1     
                           OCTDMP --- DUMP OCTAL W/ MNEMONICS                       
                  
                       00002         ENTRY   OCTDMP   
                              *     
                  
                  
      00002  0634 00 1 00071  OCTDMP SXA     OCTX1,1  
      00003  0634 00 2 00072         SXA     OCTX2,2  
      00004  0634 00 4 00073         SXA     OCTX4,4  
      00005 -0500 00 4 00001         CAL     1,4           GET RELATIVE LOCATION    
      00006  0621 00 0 00441         STA     ORG           SAVE IT
      00007 -0500 00 4 00002         CAL     2,4           PZE BUFF,,N  
      00010 -0734 00 1 00000         PDX     0,1           COUNT TO IR1 
      00011  0754 00 1 00000         PXA     0,1           TO ADDRESS OF AC   
      00012  0401 00 4 00002         ADM     2,4           GET BUFF+N   
      00013  0621 00 0 00024         STA     OCT2     
      00014  0600 00 0 00444         STZ     SKIPSW   
                              *     
      00015 -0500 00 0 00441  OCT1   CAL     ORG           SET UP LINE ORIGIN 
      00016 -0765 00 0 00022         LGR     18            ..     
      00017  0074 00 4 00164         TSX     CONV.,4       CONVERT TO BCD     
      00020 -0501 00 0 00446         ORA     =O570000000000  ADD NULL CHAR.   
      00021  0602 00 0 00001         SLW     OUT
      00022  0774 00 2 00014         AXT     12,2          SET UP NO. OF WORDS PER LINE   
      00023  0600 00 0 00442         STZ     PRTSW         RESET PRINT SWITCH 
      00024 -0500 00 1 00000  OCT2   CAL     **,1          GET FIRST OR NEXT WORD TO BE DUMPED  
      00025  0100 00 0 00027         TZE     *+2           SKIP IF ZERO 
      00026 -0625 00 0 00442         STL     PRTSW         OTHERWISE SET SWITCH TO PRINT THIS LINE    
      00027  0074 00 4 00075         TSX     (OPCD),4      FIND SYMBOLIC OPERATION CODE   
      00030  0602 00 2 00016         SLW     OUT+13,2      INTO OUTPUT LINE   
      00031  0560 60 0 00024         LDQ*    OCT2          RELOAD DUMP WORD   
      00032  0074 00 4 00164         TSX     CONV.,4       CONVERT TO BCD     
      00033  0602 00 2 00017         SLW     OUT+14,2      ..     
      00034  0074 00 4 00164         TSX     CONV.,4       ..     
      00035  0602 00 2 00020         SLW     OUT+15,2      ..     
      00036 -2 00003 2 00046         TNX     OCT3,2,3      END OF LINE TEST   
      00037  2 00001 1 00024         TIX     OCT2,1,1      END OF INPUT TEST  
      00040 -0500 00 0 00450         CAL     =H            HERE WHEN DONE     
      00041  0602 00 2 00016         SLW     OUT+13,2      FILL OUT LINE WITH BLANKS
      00042  0602 00 2 00017         SLW     OUT+14,2      ..     
      00043  0602 00 2 00020         SLW     OUT+15,2      ..     
      00044  2 00003 2 00041         TIX     *-3,2,3  
      00045 -0625 00 0 00442         STL     PRTSW         INSURE PARTIAL LINE IS PRINTED 
      00046 -0520 00 0 00442  OCT3   NZT     PRTSW         HERE AT END OF LINE, IS LINE ALL ZERO
      00047  0020 00 0 00060         TRA     OCT4          YES, SKIP PRINTING 
      00050 -0520 00 0 00444         NZT     SKIPSW   
      00051  0020 00 0 00055         TRA     OCT5     
      00052  0074 00 4 00440         TSX     WRFLX,4  
      00053  0 00001 0 00437                 DOTS,,1  
      00054  0600 00 0 00444         STZ     SKIPSW   
      00055  0074 00 4 00440  OCT5   TSX     WRFLX,4  
      00056  0 00015 0 00001                 OUT,,13       ..     
      00057  0020 00 0 00061         TRA     *+2
      00060 -0625 00 0 00444  OCT4   STL     SKIPSW   
      00061  0534 00 4 00441         LXA     ORG,4         BUMP LINE ORIGIN   
      00062  1 00004 4 00063         TXI     *+1,4,4       ..     
      00063  0634 00 4 00441         SXA     ORG,4         ..     
1                                                                                                PAGE 2     
                           OCTDMP --- DUMP OCTAL W/ MNEMONICS                       
                  
      00064  2 00001 1 00015         TIX     OCT1,1,1      RETURN IF MORE INPUT     
      00065 -0520 00 0 00444         NZT     SKIPSW   
      00066  0020 00 0 00071         TRA     OCTX1    
      00067  0074 00 4 00440         TSX     WRFLX,4  
      00070  0 00001 0 00437                 DOTS,,1  
      00071  0774 00 1 00000  OCTX1  AXT     **,1     
      00072  0774 00 2 00000  OCTX2  AXT     **,2     
      00073  0774 00 4 00000  OCTX4  AXT     **,4     
      00074  0020 00 4 00003         TRA     3,4
                  
      00075  0634 00 1 00161  (OPCD) SXA     OPCDX1,1      ROUTINE TO FIND SYMBOLIC OP. CODE    
      00076  0634 00 2 00162         SXA     OPCDX2,2 
      00077  0774 00 1 00000         AXT     0,1
      00100 -0320 00 0 00452         ANA     =O777700000000 
      00101  0100 00 0 00150         TZE     OPCDY         SKIP OUT IF HTR    
      00102  0602 00 0 00443         SLW     BINOP.        SAVE OP CODE 
      00103  0771 00 0 00041         ARS     33            PREFIX TO ADDRESS  
      00104 -0320 00 0 00445         ANA     =3            MASK OUT SIGN BIT  
      00105 -0100 00 0 00145         TNZ     TYPEA.        SKIP IF TYPE A INSTRUCTION     
      00106  0774 00 2 00022         AXT     18,2          OTHERWISE SEARCH OPERATION TABLE     
      00107  0020 00 2 00144         TRA     LOWER.,2      ..     
                  
      00110 -3 77544 1 00114  SRCH1. TXL     SRCH2.,1,-NTB OPERATION TABLE SEARCH   
      00111 -0500 00 1 00203         CAL     TABLE.,1      ..     
      00112 -0320 00 0 00452         ANA     =O777700000000 ..    
      00113 -0340 00 0 00443         LAS     BINOP.        ..     
      00114  1 77776 2 00143  SRCH2. TXI     RAISE.,2,-2   ..     
      00115  0020 00 0 00153         TRA     OPCDX         ..     
      00116  1 77776 2 00144         TXI     LOWER.,2,-2   ..     
      00117  1 00400 1 00110         TXI     SRCH1.,1,+256 ..     
      00120  1 77400 1 00110         TXI     SRCH1.,1,-256 ..     
      00121  1 00200 1 00110         TXI     SRCH1.,1,+128 ..     
      00122  1 77600 1 00110         TXI     SRCH1.,1,-128 ..     
      00123  1 00100 1 00110         TXI     SRCH1.,1,+64  ..     
      00124  1 77700 1 00110         TXI     SRCH1.,1,-64  ..     
      00125  1 00040 1 00110         TXI     SRCH1.,1,+32  ..     
      00126  1 77740 1 00110         TXI     SRCH1.,1,-32  ..     
      00127  1 00020 1 00110         TXI     SRCH1.,1,+16  ..     
      00130  1 77760 1 00110         TXI     SRCH1.,1,-16  ..     
      00131  1 00010 1 00110         TXI     SRCH1.,1,+8   ..     
      00132  1 77770 1 00110         TXI     SRCH1.,1,-8   ..     
      00133  1 00004 1 00110         TXI     SRCH1.,1,+4   ..     
      00134  1 77774 1 00110         TXI     SRCH1.,1,-4   ..     
      00135  1 00002 1 00110         TXI     SRCH1.,1,+2   ..     
      00136  1 77776 1 00110         TXI     SRCH1.,1,-2   ..     
      00137  1 00001 1 00110         TXI     SRCH1.,1,+1   ..     
      00140  1 77777 1 00110         TXI     SRCH1.,1,-1   ..     
      00141  0020 00 0 00145         TRA     TYPEA.        ..     
      00142  0020 00 0 00145         TRA     TYPEA.        ..     
      00143  0020 00 2 00143  RAISE. TRA     *,2           ..     
      00144  0020 00 2 00144  LOWER. TRA     *,2           ..     
                  
      00145  0560 00 0 00443  TYPEA. LDQ     BINOP.        HERE FOR TYPE A INSTRUCTION    
      00146 -0754 00 0 00000         ZAC  
      00147 -0763 00 0 00003         LGL     3  
1                                                                                                PAGE 3     
                           OCTDMP --- DUMP OCTAL W/ MNEMONICS                       
                  
      00150  0734 00 2 00000  OPCDY  PAX     0,2           PREFIX TO IR2
      00151  0560 00 2 00203         LDQ     TABLA.+7,2    PICK UP TYPE A SYMBOLIC OP. CODE     
      00152  0020 00 0 00155         TRA     OPCD1         AND GO TO EXIT     
                  
      00153  0560 00 1 00203  OPCDX  LDQ     TABLE.,1      GET SYMBOLIC OP CODE FROM TABLE
      00154 -0773 00 0 00022         RQL     18            FIX IT UP    
      00155 -0754 00 0 00000  OPCD1  ZAC  
      00156 -0763 00 0 00022         LGL     18            ..     
      00157  0767 00 0 00006         ALS     6             ..     
      00160 -0501 00 0 00447         ORA     =H  000       ADD IN BLANKS
      00161  0774 00 1 00000  OPCDX1 AXT     **,1          RESTORE IRS  
      00162  0774 00 2 00000  OPCDX2 AXT     **,2          ..     
      00163  0020 00 4 00001         TRA     1,4           AND RETURN WITH SYMBOLIC OP. CODE IN AC    
                  
      00164  0634 00 4 00172  CONV.  SXA     CVX.,4        ROUTINE TO CONVERT BINARY TO BCD/OCTAL     
      00165 -0754 00 0 00000         ZAC  
      00166  0774 00 4 00006         AXT     6,4
      00167  0767 00 0 00003         ALS     3  
      00170 -0763 00 0 00003         LGL     3  
      00171  2 00001 4 00167         TIX     *-2,4,1  
      00172  0774 00 4 00000  CVX.   AXT     **,4     
      00173  0020 00 4 00001         TRA     1,4
                  
      00174  636743606060     TABLA. BCI     8,TXL   TNX   STR   MZE   TXH   TIX   TXI   PZE    
                  
                       00203  TABLE. SYN     *-1
                  
      00204  002000635121            VFD     O12/0020,H24/0TRA   TRA    
      00205  002100636351            VFD     O12/0021,H24/0TTR   TTR    
      00206  002200635123            VFD     O12/0022,H24/0TRC   TRCA   
      00207  002400635123            VFD     O12/0024,H24/0TRC   TRCC   
      00210  003000632526            VFD     O12/0030,H24/0TEF   TEFA   
      00211  003100632526            VFD     O12/0031,H24/0TEF   TEFC   
      00212  004000634350            VFD     O12/0040,H24/0TLQ   TLQ    
      00213  004100313121            VFD     O12/0041,H24/0IIA   IIA    
      00214  004200633146            VFD     O12/0042,H24/0TIO   TIO    
      00215  004300462131            VFD     O12/0043,H24/0OAI   OAI    
      00216  004400472131            VFD     O12/0044,H24/0PAI   PAI    
      00217  004600633126            VFD     O12/0046,H24/0TIF   TIF    
      00220  005100313151            VFD     O12/0051,H24/0IIR   IIR    
      00221  005400512663            VFD     O12/0054,H24/0RFT   RFT    
      00222  005500623151            VFD     O12/0055,H24/0SIR   SIR    
      00223  005600514563            VFD     O12/0056,H24/0RNT   RNT    
      00224  005700513151            VFD     O12/0057,H24/0RIR   RIR    
      00225  006000632346            VFD     O12/0060,H24/0TCO   TCOA   
      00226  006100632346            VFD     O12/0061,H24/0TCO   TCOB   
      00227  006200632346            VFD     O12/0062,H24/0TCO   TCOC   
      00230  006300632346            VFD     O12/0063,H24/0TCO   TCOD   
      00231  007400636267            VFD     O12/0074,H24/0TSX   TSX    
      00232  010000637125            VFD     O12/0100,H24/0TZE   TZE    
      00233  010100633121            VFD     O12/0101,H24/0TIA   TIA    
      00234  011400236551            VFD     O12/0114,H24/0CVR   CVR    
      00235  012000634743            VFD     O12/0120,H24/0TPL   TPL    
      00236  013100672321            VFD     O12/0131,H24/0XCA   XCA    
      00237  014000634665            VFD     O12/0140,H24/0TOV   TOV    
1                                                                                                PAGE 4     
                           OCTDMP --- DUMP OCTAL W/ MNEMONICS                       
                  
      00240  016200635047            VFD     O12/0162,H24/0TQP   TQP    
      00241  020000444770            VFD     O12/0200,H24/0MPY   MPY    
      00242  020400654344            VFD     O12/0204,H24/0VLM   VLM    
      00243  022000246530            VFD     O12/0220,H24/0DVH   DVH    
      00244  022100246547            VFD     O12/0221,H24/0DVP   DVP    
      00245  022400652430            VFD     O12/0224,H24/0VDH   VDH    
      00246  022500652447            VFD     O12/0225,H24/0VDP   VDP    
      00247  024000262430            VFD     O12/0240,H24/0FDH   FDH    
      00250  024100262447            VFD     O12/0241,H24/0FDP   FDP    
      00251  026000264447            VFD     O12/0260,H24/0FMP   FMP    
      00252  030000262124            VFD     O12/0300,H24/0FAD   FAD    
      00253  030200266222            VFD     O12/0302,H24/0FSB   FSB    
      00254  030400262144            VFD     O12/0304,H24/0FAM   FAM    
      00255  030600266244            VFD     O12/0306,H24/0FSM   FSM    
      00256  032000214562            VFD     O12/0320,H24/0ANS   ANS    
      00257  032200255121            VFD     O12/0322,H24/0ERA   ERA    
      00260  034000232162            VFD     O12/0340,H24/0CAS   CAS    
      00261  036100212343            VFD     O12/0361,H24/0ACL   ACL    
      00262  040000212424            VFD     O12/0400,H24/0ADD   ADD    
      00263  040100212444            VFD     O12/0401,H24/0ADM   ADM    
      00264  040200626422            VFD     O12/0402,H24/0SUB   SUB    
      00265  042000304751            VFD     O12/0420,H24/0HPR   HPR    
      00266  044000313162            VFD     O12/0440,H24/0IIS   IIS    
      00267  044100432431            VFD     O12/0441,H24/0LDI   LDI    
      00270  044200466231            VFD     O12/0442,H24/0OSI   OSI    
      00271  044400462663            VFD     O12/0444,H24/0OFT   OFT    
      00272  044500513162            VFD     O12/0445,H24/0RIS   RIS    
      00273  044600464563            VFD     O12/0446,H24/0ONT   ONT    
      00274  050000234321            VFD     O12/0500,H24/0CLA   CLA    
      00275  050200234362            VFD     O12/0502,H24/0CLS   CLS    
      00276  052000712563            VFD     O12/0520,H24/0ZET   ZET    
      00277  052200672523            VFD     O12/0522,H24/0XEC   XEC    
      00300  053400436721            VFD     O12/0534,H24/0LXA   LXA    
      00301  053500432123            VFD     O12/0535,H24/0LAC   LAC    
      00302  054000512330            VFD     O12/0540,H24/0RCH   RCHA   
      00303  054100512330            VFD     O12/0541,H24/0RCH   RCHC   
      00304  054400432330            VFD     O12/0544,H24/0LCH   LCHA   
      00305  054500432330            VFD     O12/0545,H24/0LCH   LCHC   
      00306  056000432450            VFD     O12/0560,H24/0LDQ   LDQ    
      00307  056200435131            VFD     O12/0562,H24/0LRI   LRI    
      00310  056400254522            VFD     O12/0564,H24/0ENB   ENB    
      00311  060000626371            VFD     O12/0600,H24/0STZ   STZ    
      00312  060100626346            VFD     O12/0601,H24/0STO   STO    
      00313  060200624366            VFD     O12/0602,H24/0SLW   SLW    
      00314  060400626331            VFD     O12/0604,H24/0STI   STI    
      00315  062100626321            VFD     O12/0621,H24/0STA   STA    
      00316  062200626324            VFD     O12/0622,H24/0STD   STD    
      00317  062500626363            VFD     O12/0625,H24/0STT   STT    
      00320  063000626347            VFD     O12/0630,H24/0STP   STP    
      00321  063400626721            VFD     O12/0634,H24/0SXA   SXA    
      00322  064000622330            VFD     O12/0640,H24/0SCH   SCHA   
      00323  064100622330            VFD     O12/0641,H24/0SCH   SCHA   
      00324  073400472167            VFD     O12/0734,H24/0PAX   PAX    
      00325  073700472123            VFD     O12/0737,H24/0PAC   PAC    
      00326  075400476721            VFD     O12/0754,H24/0PXA   PXA    
1                                                                                                PAGE 5     
                           OCTDMP --- DUMP OCTAL W/ MNEMONICS                       
                  
      00327  076000476225            VFD     O12/0760,H24/0PSE   PSE    
      00330  076100454647            VFD     O12/0761,H24/0NOP   NOP    
      00331  076200512462            VFD     O12/0762,H24/0RDS   RDS    
      00332  076300434362            VFD     O12/0763,H24/0LLS   LLS    
      00333  076400226251            VFD     O12/0764,H24/0BSR   BSR    
      00334  076500435162            VFD     O12/0765,H24/0LRS   LRS    
      00335  076600665162            VFD     O12/0766,H24/0WRS   WRS    
      00336  076700214362            VFD     O12/0767,H24/0ALS   ALS    
      00337  077000662526            VFD     O12/0770,H24/0WEF   WEF    
      00340  077100215162            VFD     O12/0771,H24/0ARS   ARS    
      00341  077200512566            VFD     O12/0772,H24/0REW   REW    
      00342  077400216763            VFD     O12/0774,H24/0AXT   AXT    
      00343  077600622445            VFD     O12/0776,H24/0SDN   SDN    
      00344  402200635123            VFD     O12/4022,H24/0TRC   TRCB   
      00345  402400635123            VFD     O12/4024,H24/0TRC   TRCD   
      00346  403000632526            VFD     O12/4030,H24/0TEF   TEFB   
      00347  403100632526            VFD     O12/4031,H24/0TEF   TEFD   
      00350  404200513121            VFD     O12/4042,H24/0RIA   RIA    
      00351  404600473121            VFD     O12/4046,H24/0PIA   PIA    
      00352  405100313143            VFD     O12/4051,H24/0IIL   IIL    
      00353  405400432663            VFD     O12/4054,H24/0LFT   LFT    
      00354  405500623143            VFD     O12/4055,H24/0SIL   SIL    
      00355  405600434563            VFD     O12/4056,H24/0LNT   LNT    
      00356  405700513143            VFD     O12/4057,H24/0RIL   RIL    
      00357  406000632345            VFD     O12/4060,H24/0TCN   TCNA   
      00360  406100632345            VFD     O12/4061,H24/0TCN   TCNB   
      00361  406200632345            VFD     O12/4062,H24/0TCN   TCNC   
      00362  406300632345            VFD     O12/4063,H24/0TCN   TCND   
      00363  410000634571            VFD     O12/4100,H24/0TNZ   TNZ    
      00364  410100633122            VFD     O12/4101,H24/0TIB   TIB    
      00365  411400232150            VFD     O12/4114,H24/0CAQ   CAQ    
      00366  412000634431            VFD     O12/4120,H24/0TMI   TMI    
      00367  413000672343            VFD     O12/4130,H24/0XCL   XCL    
      00370  414000634546            VFD     O12/4140,H24/0TNO   TNO    
      00371  415400235150            VFD     O12/4154,H24/0CRQ   CRQ    
      00372  420000444751            VFD     O12/4200,H24/0MPR   MPR    
      00373  426000642644            VFD     O12/4260,H24/0UFM   UFM    
      00374  430000642621            VFD     O12/4300,H24/0UFA   UFA    
      00375  430200642662            VFD     O12/4302,H24/0UFS   UFS    
      00376  430400642144            VFD     O12/4304,H24/0UAM   UAM    
      00377  430600646244            VFD     O12/4306,H24/0USM   USM    
      00400  432000214521            VFD     O12/4320,H24/0ANA   ANA    
      00401  434000432162            VFD     O12/4340,H24/0LAS   LAS    
      00402  440000622244            VFD     O12/4400,H24/0SBM   SBM    
      00403  450000232143            VFD     O12/4500,H24/0CAL   CAL    
      00404  450100465121            VFD     O12/4501,H24/0ORA   ORA    
      00405  452000457163            VFD     O12/4520,H24/0NZT   NZT    
      00406  453400436724            VFD     O12/4534,H24/0LXD   LXD    
      00407  453500432423            VFD     O12/4535,H24/0LDC   LDC    
      00410  454000512330            VFD     O12/4540,H24/0RCH   RCHB   
      00411  454100512330            VFD     O12/4541,H24/0RCH   RCHD   
      00412  454400432330            VFD     O12/4544,H24/0LCH   LCHB   
      00413  454500432330            VFD     O12/4545,H24/0LCH   LCHD   
      00414  456400434731            VFD     O12/4564,H24/0LPI   LPI    
      00415  460000626350            VFD     O12/4600,H24/0STQ   STQ    
1                                                                                                PAGE 6     
                           OCTDMP --- DUMP OCTAL W/ MNEMONICS                       
                  
      00416  460200465162            VFD     O12/4602,H24/0ORS   ORS    
      00417  462000624350            VFD     O12/4620,H24/0SLQ   SLQ    
      00420  462500626343            VFD     O12/4625,H24/0STL   STL    
      00421  463400626724            VFD     O12/4634,H24/0SXD   SXD    
      00422  464000622330            VFD     O12/4640,H24/0SCH   SCHB   
      00423  464100622330            VFD     O12/4641,H24/0SCH   SCHD   
      00424  473400472467            VFD     O12/4734,H24/0PDX   PDX    
      00425  473700472423            VFD     O12/4737,H24/0PDC   PDC    
      00426  475400476724            VFD     O12/4754,H24/0PXD   PXD    
      00427  476000446225            VFD     O12/4760,H24/0MSE   MSE    
      00430  476100622554            VFD     O12/4761,H24/0SE*   SEA OR SEB   
      00431  476300432743            VFD     O12/4763,H24/0LGL   LGL    
      00432  476400226226            VFD     O12/4764,H24/0BSF   BSF    
      00433  476500432751            VFD     O12/4765,H24/0LGR   LGR    
      00434  477200516445            VFD     O12/4772,H24/0RUN   RUN    
      00435  477300515043            VFD     O12/4773,H24/0RQL   RQL    
      00436  477400216723            VFD     O12/4774,H24/0AXC   AXC    
                  
                       00234  NTB    SYN     *-TABLE. 
                  
      00437  404040404060     DOTS   BCI     1,-----  
                  
      00440  0101 00 0 00451  WRFLX  TIA     =HWRFLX  
                  
      00441  0 00000 0 00000  ORG   
      00442  0 00000 0 00000  PRTSW 
      00443  0 00000 0 00000  BINOP.
      00444  0 00000 0 00000  SKIPSW
                  
                       00001  OUT    EQU     1             USE LOWER CORE FOR TEMPORARY STORAGE 
                  
                                     END  
                  
        LITERALS  
      00445  000000000003     
      00446  570000000000     
      00447  606000000060     
      00450  606060606060     
      00451  665126436760     
      00452  777700000000     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        453 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        234    NTB   110,  437
        441    ORG     6,   15,   61,   63
          1    OUT    21,   30,   33,   35,   41,   42,   43,   56,  445
        172   CVX.   164
        437   DOTS    53,   70
         15   OCT1    64
         24   OCT2    13,   31,   37
         46   OCT3    36
         60   OCT4    47
         55   OCT5    51
        164  CONV.    17,   32,   34
         71  OCTX1     2,   66
         72  OCTX2     3
         73  OCTX4     4
        155  OPCD1   152
        153  OPCDX   115
        150  OPCDY   101
        442  PRTSW    23,   26,   45,   46
        440  WRFLX    52,   55,   67
        443 BINOP.   102,  113,  145
        144 LOWER.   107,  116
          2 OCTDMP     0
        161 OPCDX1    75
        162 OPCDX2    76
        143 RAISE.   114
        444 SKIPSW    14,   50,   54,   60,   65
        110 SRCH1.   117,  120,  121,  122,  123,  124,  125,  126,  127,  130,  131,  132,  133,  134,  135,  136,  137
                     140
        114 SRCH2.   110
        174 TABLA.   151
        203 TABLE.   111,  153,  204,  437
        145 TYPEA.   105,  141,  142
         75 (OPCD)    27
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




SETFIL   BCD 05/12/69 2020.2    9949         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  SETFIL   MAD            03/26/69    1815.3
-                 
                  M1416-3845 PETER R. BOS  12/04/67  -- SETFIL COMMAND                                 LM00001    
                      MODE AND DEVICE ARGUMENTS ADDED 03/26/69  D.A. ANDERSON                          LM00002    
                                                                                                       LM00003    
                  USAGE ...  SETFIL NM1 NM2 DLM TLM DLU AUTH MODE DEV                                  LM00004    
                    LISTF '*' CONVENTION APPLIES                                                       LM00005    
                    LAST SIX ARG'S MAY BE '*' TO INDICATE                                              LM00006    
                      NO CHANGE. TRAILING *'S MAY BE OMITTED.                                          LM00007    
                    MODE AND DEV APPLY ONLY TO NEW FILES                                               LM00008    
                                                                                                       LM00009    
                  NORMAL MODE IS INTEGER                                                          *001 LM00010    
                  BOOLEAN RDUFD                                                                   *002 LM00011    
                  DIMENSION TEMP(8), BUF1(0), BUF2(0), ARG(8), UFD(7)                             *003 LM00012    
                                                                                                       LM00013    
                  DEFINE UNARY OPERATOR .CAL., PRECEDENCE SAME AS =                               *004 LM00014    
                  MODE STRUCTURE .CAL. 1 TO 1                                                     *005 LM00015    
             CAL      B                                                                           *006 LM00016    
             OUT      LAC                                                                         *007 LM00017    
             END                                                                                  *008 LM00018    
                  DEFINE UNARY OPERATOR .LDQ., PRECEDENCE SAME AS =                               *009 LM00019    
                  MODE STRUCTURE .LDQ. 1 TO 1                                                     *010 LM00020    
             LDQ      B                                                                           *011 LM00021    
             OUT      MQ                                                                          *012 LM00022    
             END                                                                                  *013 LM00023    
                                                                                                       LM00024    
                  FERRTN.(ERR)                                                                    *014 LM00025    
                  THROUGH ARGS, FOR I=1,1,I.G.MXARG                                               *015 LM00026    
                    TEMP=COMARG.(I)                                                               *016 LM00027    
                    WHENEVER TEMP.E.FNS                                                           *017 LM00028    
                      NARG=I-1                                                                    *018 LM00029    
                      TRANSFER TO CHKN                                                            *019 LM00030    
                    OTHERWISE                                                                     *020 LM00031    
                      ARG(I)=TEMP                                                                 *021 LM00032    
                    END OF CONDITIONAL                                                            *022 LM00033    
      ARGS        CONTINUE                                                                        *023 LM00034    
                  NARG=MXARG                                                                      *024 LM00035    
      CHKN        WHENEVER NARG.L.3                                                               *025 LM00036    
                    PRMESS.(COMARG.(0),$ NAME1 NAME2 DLM TLM DLU AUTH MODE DEV$                   *026 LM00037    
                1   )                                                                             *026 LM00038    
                    PRMESS.($LISTF '*' CONVENTION APPLIES$)                                       *027 LM00039    
                    PRMESS.($ANY ARG MAY BE '*' TO MEAN 'NO CHANGE'$)                             *028 LM00040    
                    CHNCOM.(0)                                                                    *029 LM00041    
                  END OF CONDITIONAL                                                              *030 LM00042    
                                                                                                       LM00043    
                  MSK1=NAMASK.(ARG(1))                                                            *031 LM00044    
                  TNM1=ARG(1).A.MSK1                                                              *032 LM00045    
                  MSK2=NAMASK.(ARG(2))                                                            *033 LM00046    
                  TNM2=ARG(2).A.MSK2                                                              *034 LM00047    
                  WHENEVER MSK1.A.MSK2.NE.FNS, RDUFD=1B                                           *035 LM00048    
                                                                                                       LM00049    
                  WHENEVER ARG(3).NE.STAR, FSDLM=FSDATE.(ARG(3))                                  *036 LM00050    
                  WHENEVER ARG(4).NE.STAR, FSTLM=FSTIME.(ARG(4))                                  *037 LM00051    
                  WHENEVER ARG(5).NE.STAR, FSDLU=FSDATE.(ARG(5))                                  *038 LM00052    
                  WHENEVER ARG(6).NE.STAR, FSAUT=BCDEC.(ZEL.(ARG(6)))                             *039 LM00053    
                  WHENEVER ARG(7).NE.STAR, FSMOD=BCOCT.(ARG(7))                                   *040 LM00054    
                  WHENEVER ARG(8).NE.STAR, FSDEV=BCDEC.(ARG(8))                                   *041 LM00055    
                                                                                                       LM00056    
                  WHENEVER .NOT.RDUFD                                                             *042 LM00057    
                    FSTATE.(ARG(1),ARG(2),TEMP(8)...8,NOFILE)                                     *043 LM00058    
                    WHENEVER ARG(7).NE.STAR.OR.ARG(8).NE.STAR,                                    *044 LM00059    
                1   PRMESS.($MODE AND DEVICE ARE APPLICABLE ONLY TO NEW FILES.$                   *044 LM00060    
                1     )                                                                           *044 LM00061    
                    UFD(7)=ARG(1)                                                                 *045 LM00062    
                    UFD(6)=ARG(2)                                                                 *046 LM00063    
                    UFD(5)=TEMP(2)                                                                *047 LM00064    
                    UFD(4)=TEMP(1)                                                                *048 LM00065    
                    FSMOD=-0                                                                      *049 LM00066    
                    FSDEV=-0                                                                      *050 LM00067    
                    TRANSFER TO SET                                                               *051 LM00068    
      NOFILE      UFD(7)=ARG(1)                                                                   *052 LM00069    
                  UFD(6)=ARG(2)                                                                   *053 LM00070    
                    TEMP=GTDYTM.(0)                                                               *054 LM00071    
                    WHENEVER ARG(3).E.STAR, FSDLM=TEMP.A.777777K6                                 *055 LM00072    
                    WHENEVER ARG(4).E.STAR, FSTLM=TEMP.A.777777K                                  *056 LM00073    
                    WHENEVER ARG(5).E.STAR, FSDLU=TEMP.A.777777K6                                 *057 LM00074    
                    ATTNAM.(TEMP(3)...4)                                                          *058 LM00075    
                    WHENEVER ARG(6).E.STAR, FSAUT=TEMP(1)                                         *059 LM00076    
                    WHENEVER ARG(7).E.STAR, FSMOD=0                                               *060 LM00077    
                    WHENEVER ARG(8).E.STAR, FSDEV=2                                               *061 LM00078    
                    TRANSFER TO SETF                                                              *062 LM00079    
                  END OF CONDITIONAL                                                              *063 LM00080    
                                                                                                       LM00081    
                  WHENEVER ARG(7).NE.STAR.OR.ARG(8).NE.STAR,                                      *064 LM00082    
                1   PRMESS.($MODE AND DEVICE ARE APPLICABLE ONLY TO NEW FILES.$                   *064 LM00083    
                1     )                                                                           *064 LM00084    
                  UPDATE.                                                                         *065 LM00085    
                  TEMP=0                                                                          *066 LM00086    
                  GETBUF.(BUF1,432)                                                               *067 LM00087    
                  GETBUF.(BUF2,432)                                                               *068 LM00088    
                  BFOPEN.($R$,UF,FI,BUF1(BUF1+432),BUF2(BUF2+432),-0,ERR)                         *069 LM00089    
                  BFREAD.(UF,FI,TEMP(3)...3,EOFERR,TEMP,ERR)                                      *070 LM00090    
                  N=0                                                                             *071 LM00091    
      READ        BFREAD.(UF,FI,UFD(7)...7,EOF,TEMP,ERR)                                          *072 LM00092    
                  WHENEVER UFD(7).V.UFD(6).E.0, TRANSFER TO READ                                  *073 LM00093    
                  WHENEVER UFD(7).A.MSK1.NE.TNM1.OR.UFD(6).A.MSK2.NE.TNM2, TRANSFER TO READ       *074 LM00094    
                  WHENEVER UFD(3).A.LINK.E.0, TRANSFER TO READ                                    *075 LM00095    
                                                                                                       LM00096    
      SET         WHENEVER ARG(3).E.STAR, FSDLM=UFD(5).A.777777K6                                 *076 LM00097    
                  WHENEVER ARG(4).E.STAR, FSTLM=UFD(5).A.777777K                                  *077 LM00098    
                  WHENEVER ARG(5).E.STAR, FSDLU=UFD(4).A.777777K6                                 *078 LM00099    
                  WHENEVER ARG(6).E.STAR, FSAUT=UFD(4).A.777777K                                  *079 LM00100    
      SETF        SETFIL.(UFD(7),UFD(6),FSDLM.V.FSTLM,FSDLU.V.FSAUT,FSMOD,FSDEV                   *080 LM00101    
                1   )                                                                             *080 LM00102    
                  N=N+1                                                                           *081 LM00103    
                  WHENEVER .NOT.RDUFD, TRANSFER TO XIT                                            *082 LM00104    
                  TRANSFER TO READ                                                                *083 LM00105    
                                                                                                       LM00106    
      EOF         WHENEVER TEMP.E.0, TRANSFER TO EOFXIT                                           *084 LM00107    
      EOFERR      PRMESS.($BAD EOF RETURN READING U.F.D.$)                                        *085 LM00108    
      EOFXIT      BFCLOS.(UF,FI,ERR)                                                              *086 LM00109    
      XIT         PRMESS.($*$)                                                                    *087 LM00110    
                  CHNCOM.(0)                                                                      *088 LM00111    
                                                                                                       LM00112    
      ERR         .CAL. $PRNTER$                                                                  *089 LM00113    
                  .LDQ. 400000000071K                                                             *090 LM00114    
                  NEXCOM.                                                                         *091 LM00115    
                                                                                                       LM00116    
                  VECTOR VALUES STAR=$     *$                                                     *092 LM00117    
                  VECTOR VALUES ARG(1)=$     *     *     *     *     *     *     *     *$         *093 LM00118    
                  VECTOR VALUES LINK=7K5                                                          *094 LM00119    
                  VECTOR VALUES RDUFD=0B                                                          *095 LM00120    
                  VECTOR VALUES FNS=777777777777K                                                 *096 LM00121    
                  VECTOR VALUES MXARG=8                                                           *097 LM00122    
                  VECTOR VALUES UF=$U.F.D.$                                                       *098 LM00123    
                  VECTOR VALUES FI=$(FILE)$                                                       *099 LM00124    
                                                                                                       LM00125    
                  INTERNAL FUNCTION (GNU)                                                         *100 LM00126    
                  ENTRY TO FSDATE.                                                                *101 LM00127    
                    MM=BCDEC.((ZEL.(GNU)).RS.24)                                                  *102 LM00128    
                    DD=BCDEC.((GNU.RS.12).A.7777K)                                                *103 LM00129    
                    YY=BCDEC.(GNU.A.7777K)                                                        *104 LM00130    
                    WHENEVER MM.G.12.OR.DD.G.31.OR.ZEL.(GNU).A.$ $.NE.0                           *105 LM00131    
                1     .OR.MM.E.0.OR.DD.E.0.OR.YY.E.0                                              *105 LM00132    
                      PRMESS.($ILLEGAL DATE.....$,GNU)                                            *106 LM00133    
                      TRANSFER TO XIT                                                             *107 LM00134    
                    END OF CONDITIONAL                                                            *108 LM00135    
                    FUNCTION RETURN (YY.LS.27).V.(MM.LS.23).V.(DD.LS.18)                          *109 LM00136    
                  ENTRY TO FSTIME.                                                                *110 LM00137    
                    WHENEVER GNU.A.77K2.E.$0000.0$                                                *111 LM00138    
                      TEMP=ZEL.(GNU.RS.12)                                                        *112 LM00139    
                      TM=GNU.A.77K                                                                *113 LM00140    
                    OTHERWISE                                                                     *114 LM00141    
                      TEMP=ZEL.(GNU)                                                              *115 LM00142    
                      TM=0                                                                        *116 LM00143    
                    END OF CONDITIONAL                                                            *117 LM00144    
                    HH=BCDEC.((TEMP.A.7777K4).RS.12)                                              *118 LM00145    
                    MM=BCDEC.(TEMP.A.7777K)                                                       *119 LM00146    
                    WHENEVER HH.G.23.OR.MM.G.59.OR.TM.G.9.OR.TEMP.A.$ $.NE.0                      *120 LM00147    
                      PRMESS.($ILLEGAL TIME.....$,GNU)                                            *121 LM00148    
                      TRANSFER TO XIT                                                             *122 LM00149    
                    END OF CONDITIONAL                                                            *123 LM00150    
                    FUNCTION RETURN ((HH*60+MM)*10+TM)*6                                          *124 LM00151    
                  END OF FUNCTION                                                                 *125 LM00152    
                                                                                                       LM00153    
                  END OF PROGRAM                                                                  *126 LM00154    
                                         MODE STRUCTURE .CAL. 1 TO 1          005  LM00015
 (THE NUMERIC FORM OF THE OPERATOR-MODE ARGUMENT IS    11101 )    
                                         MODE STRUCTURE .LDQ. 1 TO 1          010  LM00020
 (THE NUMERIC FORM OF THE OPERATOR-MODE ARGUMENT IS    11201 )    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01267 TRANSFER VECTOR LENGTH  00024 PROGRAM BEGINS    00233
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ARG    00051 A 1        ERR    00033   4        FSTLM  00064   1        NARG   00074   1        TEMP   00110 A 1  
      ARGS   00026   4        FI     00055 A 1        HH     00065   1        NOFILE 00034   4        TM     00111   1  
      BUF1   00052 A 1        FNS    00056 A 1        I      00066   1        N      00075   1        TNM1   00112   1  
      BUF2   00053 A 1        FSAUT  00057   1        LINK   00067 A 1        RDUFD  00076 A 2        TNM2   00113   1  
      CHKN   00027   4        FSDEV  00060   1        MM     00070   1        READ   00035   4        UFD    00123 A 1  
      DD     00054   1        FSDLM  00061   1        MSK1   00071   1        SETF   00036   4        UF     00124 A 1  
      EOFERR 00030   4        FSDLU  00062   1        MSK2   00072   1        SET    00037   4        XIT    00040   4  
      EOF    00031   4        FSMOD  00063   1        MXARG  00073 A 1        STAR   00077 A 1        YY     00125   1  
      EOFXIT 00032   4                                                                                                  
0FUNCTION DICTIONARY    
      ATTNAM 00000   1        BCDEC  00001   1        BCOCT  00002   1        BFCLOS 00003   1        BFOPEN 00004   1  
      BFREAD 00005   1        CHNCOM 00006   1        COMARG 00007   1        EXIT   00010   1        FERRTN 00011   1  
      FSTATE 00012   1        GETBUF 00013   1        GTDYTM 00014   1        .SETUP 00015   1        NAMASK 00016   1  
      NEXCOM 00017   1        PRMESS 00020   1        SETFIL 00021   1        UPDATE 00022   1        ZEL    00023   1  
      FSDATE 00024   1        FSTIME 00025   1                                                                          
0ABSOLUTE CONSTANTS     
 00133 +000000000006     00137 +000000000012     00147 +000000000074     00206 -036063314425     00146 +000000000073    
 00136 +000000000011     00156 +000077770000     00150 +000000000077     00152 +000000003300     00153 +000000007700    
 00144 +000000000033     00142 +000000000027     00141 +000000000022     00177 +333333333360     00205 -036024216325    
 00175 +314343252721     00145 +000000000037     00227 -206060606060     00154 +000000007777     00140 +000000000014    
 00143 +000000000030     00201 -000000000071     00214 -075145632551     00217 -146060606060     00176 +332633243360    
 00165 +243145276064     00215 -114560512521     00171 +266051256364     00162 +222124602546     00134 +000000000007    
 00216 -116060606060     00151 +000000000660     00130 +000000000002     00132 +000000000004     00155 +000000777777    
 00232 -377777000000     00200 +336060606060     00223 -202631432562     00231 -234660452566     00226 -204645437060    
 00173 +312321224325     00167 +256021474743     00174 +312325602151     00211 -052460242565     00207 -044624256021    
 00135 +000000000010     00166 +251460606060     00221 -202330214527     00160 +214560144546     00230 -206346604425    
 00163 +222560145414     00172 +276044217060     00161 +214570602151     00202 -033125626060     00213 -064560214747    
 00212 -056525456331     00157 +145414602346     00203 -033162632660     00170 +256560606060     00210 -044624256024    
 00220 -202164633060     00204 -034460244364     00222 -202443446063     00225 -204521442502     00224 -204521442501    
 00126 +000000000000     00131 +000000000003     00127 +000000000001     00164 +233000000000                            
0STATEMENT DICTIONARY   
 00027 TXL -300275000271       00030 TXL -300761000753       00031 TXL -300753000747       00032 TXL -300765000761      
 00033 TXL -300772000771       00034 TXL -300472000470       00035 TXL -300640000631       00036 TXL -300740000723      
 00037 TXL -300701000673       00040 TXL -300767000765                                                                  
0PROGRAM    
                 N'S INTEGER                                                        001  LM00010
                 BOOLEAN RDUFD                                                      002  LM00011
                 D'N TEMP(8), BUF1(0), BUF2(0), ARG(8), UFD(7)                      003  LM00012
                 DEFINE UNARY OPERATOR .CAL., PRECEDENCE SAME AS =                  004  LM00014
                 MODE STRUCTURE .CAL. 1 TO 1                                        005  LM00015
 00233 TSX +0 07400 4 00015                                                                                             
                 DEFINE UNARY OPERATOR .LDQ., PRECEDENCE SAME AS =                  009  LM00019
                 MODE STRUCTURE .LDQ. 1 TO 1                                        010  LM00020
                 FERRTN.(ERR)                                                       014  LM00025
 00234 TSX +0 07400 4 00011    00235 TXH +3 00000 0 00033                                                               
                 T'H ARGS, FOR I=1,1,I.G.MXARG                                      015  LM00026
 00236 CLA +0 50000 0 00127    00237 STO +0 60100 0 00066    00240 TRA +0 02000 0 00244    00241 CLA +0 50000 0 00066   
 00242 ADD +0 40000 0 00127    00243 STO +0 60100 0 00066    00244 CLA +0 50000 0 00066    00245 SUB +0 40200 0 00073   
 00246 TZE +0 10000 0 00250    00247 TPL +0 12000 0 00267                                                               
                   TEMP=COMARG.(I)                                                  016  LM00027
 00250 TSX +0 07400 4 00007    00251 TXH +3 00000 0 00066    00252 STO +0 60100 0 00110                                 
                   W'R TEMP.E.FNS                                                   017  LM00028
 00253 CLA +0 50000 0 00110    00254 SUB +0 40200 0 00056    00255 TNZ -0 10000 0 00263                                 
                     NARG=I-1                                                       018  LM00029
 00256 CLA +0 50000 0 00066    00257 SUB +0 40200 0 00127    00260 STO +0 60100 0 00074                                 
                     T'O CHKN                                                       019  LM00030
 00261 TRA +0 02000 0 00027                                                                                             
                   O'E                                                              020  LM00031
 00262 TRA +0 02000 0 00266                                                                                             
                     ARG(I)=TEMP                                                    021  LM00032
 00263 LXA +0 53400 1 00066    00264 CLA +0 50000 0 00110    00265 STO +0 60100 1 00051                                 
                   E'L                                                              022  LM00033
      ARGS       CONTINUE                                                           023  LM00034
 00266 TRA +0 02000 0 00241                                                                                             
                 NARG=MXARG                                                         024  LM00035
 00267 CLA +0 50000 0 00073    00270 STO +0 60100 0 00074                                                               
      CHKN       W'R NARG.L.3                                                       025  LM00036
 00271 CLA +0 50000 0 00074    00272 SUB +0 40200 0 00131    00273 TZE +0 10000 0 00331    00274 TPL +0 12000 0 00331   
                   PRMESS.(COMARG.(0),$ NAME1 NAME2 DLM TLM DLU AUTH MODE DEV$      026  LM00037
                1  )                                                                026  LM00038
 00275 TSX +0 07400 4 00007    00276 TXH +3 00000 0 00126    00277 STO +0 60100 0 01263    00300 TSX +0 07400 4 00020   
 00301 TXH +3 00000 0 01263    00302 TXH +3 00000 0 00224    00303 TXH +3 00000 0 00225    00304 TXH +3 00000 0 00222   
 00305 TXH +3 00000 0 00204    00306 TXH +3 00000 0 00220    00307 TXH +3 00000 0 00210    00310 TXH +3 00000 0 00170   
                   PRMESS.($LISTF '*' CONVENTION APPLIES$)                          027  LM00039
 00311 TSX +0 07400 4 00020    00312 TXH +3 00000 0 00203    00313 TXH +3 00000 0 00157    00314 TXH +3 00000 0 00212   
 00315 TXH +3 00000 0 00213    00316 TXH +3 00000 0 00202                                                               
                   PRMESS.($ANY ARG MAY BE '*' TO MEAN 'NO CHANGE'$)                028  LM00040
 00317 TSX +0 07400 4 00020    00320 TXH +3 00000 0 00161    00321 TXH +3 00000 0 00172    00322 TXH +3 00000 0 00163   
 00323 TXH +3 00000 0 00230    00324 TXH +3 00000 0 00160    00325 TXH +3 00000 0 00221    00326 TXH +3 00000 0 00166   
                   CHNCOM.(0)                                                       029  LM00041
 00327 TSX +0 07400 4 00006    00330 TXH +3 00000 0 00126                                                               
                 E'L                                                                030  LM00042
                 MSK1=NAMASK.(ARG(1))                                               031  LM00044
 00331 TSX +0 07400 4 00016    00332 TXH +3 00000 0 00050    00333 STO +0 60100 0 00071                                 
                 TNM1=ARG(1).A.MSK1                                                 032  LM00045
 00334 CAL -0 50000 0 00050    00335 ANA -0 32000 0 00071    00336 SLW +0 60200 0 00112                                 
                 MSK2=NAMASK.(ARG(2))                                               033  LM00046
 00337 TSX +0 07400 4 00016    00340 TXH +3 00000 0 00047    00341 STO +0 60100 0 00072                                 
                 TNM2=ARG(2).A.MSK2                                                 034  LM00047
 00342 CAL -0 50000 0 00047    00343 ANA -0 32000 0 00072    00344 SLW +0 60200 0 00113                                 
                 W'R MSK1.A.MSK2.NE.FNS, RDUFD=1B                                   035  LM00048
 00345 CAL -0 50000 0 00071    00346 ANA -0 32000 0 00072    00347 SLW +0 60200 0 01263    00350 CLA +0 50000 0 01263   
 00351 SUB +0 40200 0 00056    00352 TZE +0 10000 0 00355    00353 CLA +0 50000 0 00127    00354 STO +0 60100 0 00076   
                 W'R ARG(3).NE.STAR, FSDLM=FSDATE.(ARG(3))                          036  LM00050
 00355 CLA +0 50000 0 00046    00356 SUB +0 40200 0 00077    00357 TZE +0 10000 0 00363    00360 TSX +0 07400 4 00024   
 00361 TXH +3 00000 0 00046    00362 STO +0 60100 0 00061                                                               
                 W'R ARG(4).NE.STAR, FSTLM=FSTIME.(ARG(4))                          037  LM00051
 00363 CLA +0 50000 0 00045    00364 SUB +0 40200 0 00077    00365 TZE +0 10000 0 00371    00366 TSX +0 07400 4 00025   
 00367 TXH +3 00000 0 00045    00370 STO +0 60100 0 00064                                                               
                 W'R ARG(5).NE.STAR, FSDLU=FSDATE.(ARG(5))                          038  LM00052
 00371 CLA +0 50000 0 00044    00372 SUB +0 40200 0 00077    00373 TZE +0 10000 0 00377    00374 TSX +0 07400 4 00024   
 00375 TXH +3 00000 0 00044    00376 STO +0 60100 0 00062                                                               
                 W'R ARG(6).NE.STAR, FSAUT=BCDEC.(ZEL.(ARG(6)))                     039  LM00053
 00377 CLA +0 50000 0 00043    00400 SUB +0 40200 0 00077    00401 TZE +0 10000 0 00410    00402 TSX +0 07400 4 00023   
 00403 TXH +3 00000 0 00043    00404 STO +0 60100 0 01263    00405 TSX +0 07400 4 00001    00406 TXH +3 00000 0 01263   
 00407 STO +0 60100 0 00057                                                                                             
                 W'R ARG(7).NE.STAR, FSMOD=BCOCT.(ARG(7))                           040  LM00054
 00410 CLA +0 50000 0 00042    00411 SUB +0 40200 0 00077    00412 TZE +0 10000 0 00416    00413 TSX +0 07400 4 00002   
 00414 TXH +3 00000 0 00042    00415 STO +0 60100 0 00063                                                               
                 W'R ARG(8).NE.STAR, FSDEV=BCDEC.(ARG(8))                           041  LM00055
 00416 CLA +0 50000 0 00041    00417 SUB +0 40200 0 00077    00420 TZE +0 10000 0 00424    00421 TSX +0 07400 4 00001   
 00422 TXH +3 00000 0 00041    00423 STO +0 60100 0 00060                                                               
                 W'R .NOT.RDUFD                                                     042  LM00057
 00424 ZET +0 52000 0 00076    00425 TRA +0 02000 0 00543                                                               
                   FSTATE.(ARG(1),ARG(2),TEMP(8)...8,NOFILE)                        043  LM00058
 00426 TSX +0 07400 4 00012    00427 TXH +3 00000 0 00050    00430 TXH +3 00000 0 00047    00431 TIX +2 00135 0 00100   
 00432 TXH +3 00000 0 00034                                                                                             
                   W'R ARG(7).NE.STAR.OR.ARG(8).NE.STAR,                            044  LM00059
                1  PRMESS.($MODE AND DEVICE ARE APPLICABLE ONLY TO NEW FILES.$      044  LM00060
                1    )                                                              044  LM00061
 00433 CLA +0 50000 0 00041    00434 SUB +0 40200 0 00077    00435 TNZ -0 10000 0 00441    00436 CLA +0 50000 0 00042   
 00437 SUB +0 40200 0 00077    00440 TZE +0 10000 0 00453    00441 TSX +0 07400 4 00020    00442 TXH +3 00000 0 00207   
 00443 TXH +3 00000 0 00211    00444 TXH +3 00000 0 00174    00445 TXH +3 00000 0 00167    00446 TXH +3 00000 0 00173   
 00447 TXH +3 00000 0 00226    00450 TXH +3 00000 0 00231    00451 TXH +3 00000 0 00223    00452 TXH +3 00000 0 00200   
                   UFD(7)=ARG(1)                                                    045  LM00062
 00453 CLA +0 50000 0 00050    00454 STO +0 60100 0 00114                                                               
                   UFD(6)=ARG(2)                                                    046  LM00063
 00455 CLA +0 50000 0 00047    00456 STO +0 60100 0 00115                                                               
                   UFD(5)=TEMP(2)                                                   047  LM00064
 00457 CLA +0 50000 0 00106    00460 STO +0 60100 0 00116                                                               
                   UFD(4)=TEMP(1)                                                   048  LM00065
 00461 CLA +0 50000 0 00107    00462 STO +0 60100 0 00117                                                               
                   FSMOD=-0                                                         049  LM00066
 00463 CLS +0 50200 0 00126    00464 STO +0 60100 0 00063                                                               
                   FSDEV=-0                                                         050  LM00067
 00465 CLS +0 50200 0 00126    00466 STO +0 60100 0 00060                                                               
                   T'O SET                                                          051  LM00068
 00467 TRA +0 02000 0 00037                                                                                             
      NOFILE     UFD(7)=ARG(1)                                                      052  LM00069
 00470 CLA +0 50000 0 00050    00471 STO +0 60100 0 00114                                                               
                 UFD(6)=ARG(2)                                                      053  LM00070
 00472 CLA +0 50000 0 00047    00473 STO +0 60100 0 00115                                                               
                   TEMP=GTDYTM.(0)                                                  054  LM00071
 00474 TSX +0 07400 4 00014    00475 TXH +3 00000 0 00126    00476 STO +0 60100 0 00110                                 
                   W'R ARG(3).E.STAR, FSDLM=TEMP.A.777777K6                         055  LM00072
 00477 CLA +0 50000 0 00046    00500 SUB +0 40200 0 00077    00501 TNZ -0 10000 0 00505    00502 CAL -0 50000 0 00110   
 00503 ANA -0 32000 0 00232    00504 SLW +0 60200 0 00061                                                               
                   W'R ARG(4).E.STAR, FSTLM=TEMP.A.777777K                          056  LM00073
 00505 CLA +0 50000 0 00045    00506 SUB +0 40200 0 00077    00507 TNZ -0 10000 0 00513    00510 CAL -0 50000 0 00110   
 00511 ANA -0 32000 0 00155    00512 SLW +0 60200 0 00064                                                               
                   W'R ARG(5).E.STAR, FSDLU=TEMP.A.777777K6                         057  LM00074
 00513 CLA +0 50000 0 00044    00514 SUB +0 40200 0 00077    00515 TNZ -0 10000 0 00521    00516 CAL -0 50000 0 00110   
 00517 ANA -0 32000 0 00232    00520 SLW +0 60200 0 00062                                                               
                   ATTNAM.(TEMP(3)...4)                                             058  LM00075
 00521 TSX +0 07400 4 00000    00522 TIX +2 00132 0 00105                                                               
                   W'R ARG(6).E.STAR, FSAUT=TEMP(1)                                 059  LM00076
 00523 CLA +0 50000 0 00043    00524 SUB +0 40200 0 00077    00525 TNZ -0 10000 0 00530    00526 CLA +0 50000 0 00107   
 00527 STO +0 60100 0 00057                                                                                             
                   W'R ARG(7).E.STAR, FSMOD=0                                       060  LM00077
 00530 CLA +0 50000 0 00042    00531 SUB +0 40200 0 00077    00532 TNZ -0 10000 0 00535    00533 CLA +0 50000 0 00126   
 00534 STO +0 60100 0 00063                                                                                             
                   W'R ARG(8).E.STAR, FSDEV=2                                       061  LM00078
 00535 CLA +0 50000 0 00041    00536 SUB +0 40200 0 00077    00537 TNZ -0 10000 0 00542    00540 CLA +0 50000 0 00130   
 00541 STO +0 60100 0 00060                                                                                             
                   T'O SETF                                                         062  LM00079
 00542 TRA +0 02000 0 00036                                                                                             
                 E'L                                                                063  LM00080
                 W'R ARG(7).NE.STAR.OR.ARG(8).NE.STAR,                              064  LM00082
                1  PRMESS.($MODE AND DEVICE ARE APPLICABLE ONLY TO NEW FILES.$      064  LM00083
                1    )                                                              064  LM00084
 00543 CLA +0 50000 0 00041    00544 SUB +0 40200 0 00077    00545 TNZ -0 10000 0 00551    00546 CLA +0 50000 0 00042   
 00547 SUB +0 40200 0 00077    00550 TZE +0 10000 0 00563    00551 TSX +0 07400 4 00020    00552 TXH +3 00000 0 00207   
 00553 TXH +3 00000 0 00211    00554 TXH +3 00000 0 00174    00555 TXH +3 00000 0 00167    00556 TXH +3 00000 0 00173   
 00557 TXH +3 00000 0 00226    00560 TXH +3 00000 0 00231    00561 TXH +3 00000 0 00223    00562 TXH +3 00000 0 00200   
                 UPDATE.                                                            065  LM00085
 00563 TSX +0 07400 4 00022                                                                                             
                 TEMP=0                                                             066  LM00086
 00564 CLA +0 50000 0 00126    00565 STO +0 60100 0 00110                                                               
                 GETBUF.(BUF1,432)                                                  067  LM00087
 00566 TSX +0 07400 4 00013    00567 TXH +3 00000 0 00052    00570 TXH +3 00000 0 00151                                 
                 GETBUF.(BUF2,432)                                                  068  LM00088
 00571 TSX +0 07400 4 00013    00572 TXH +3 00000 0 00053    00573 TXH +3 00000 0 00151                                 
                 BFOPEN.($R$,UF,FI,BUF1(BUF1+432),BUF2(BUF2+432),-0,ERR)            069  LM00089
 00574 CLS +0 50200 0 00126    00575 STO +0 60100 0 01263    00576 CLA +0 50000 0 00053    00577 ADD +0 40000 0 00151   
 00600 SUB +0 40200 0 00601    00601 TXH +3 00000 0 00053    00602 STA +0 62100 0 00615    00603 CLA +0 50000 0 00052   
 00604 ADD +0 40000 0 00151    00605 SUB +0 40200 0 00606    00606 TXH +3 00000 0 00052    00607 STA +0 62100 0 00614   
 00610 TSX +0 07400 4 00004    00611 TXH +3 00000 0 00216    00612 TXH +3 00000 0 00124    00613 TXH +3 00000 0 00055   
 00614 TXH +3 00000 0 00000    00615 TXH +3 00000 0 00000    00616 TXH +3 00000 0 01263    00617 TXH +3 00000 0 00033   
                 BFREAD.(UF,FI,TEMP(3)...3,EOFERR,TEMP,ERR)                         070  LM00090
 00620 TSX +0 07400 4 00005    00621 TXH +3 00000 0 00124    00622 TXH +3 00000 0 00055    00623 TIX +2 00131 0 00105   
 00624 TXH +3 00000 0 00030    00625 TXH +3 00000 0 00110    00626 TXH +3 00000 0 00033                                 
                 N=0                                                                071  LM00091
 00627 CLA +0 50000 0 00126    00630 STO +0 60100 0 00075                                                               
      READ       BFREAD.(UF,FI,UFD(7)...7,EOF,TEMP,ERR)                             072  LM00092
 00631 TSX +0 07400 4 00005    00632 TXH +3 00000 0 00124    00633 TXH +3 00000 0 00055    00634 TIX +2 00134 0 00114   
 00635 TXH +3 00000 0 00031    00636 TXH +3 00000 0 00110    00637 TXH +3 00000 0 00033                                 
                 W'R UFD(7).V.UFD(6).E.0, T'O READ                                  073  LM00093
 00640 CAL -0 50000 0 00114    00641 ORA -0 50100 0 00115    00642 SLW +0 60200 0 01263    00643 CLA +0 50000 0 01263   
 00644 SUB +0 40200 0 00126    00645 TNZ -0 10000 0 00647    00646 TRA +0 02000 0 00035                                 
                 W'R UFD(7).A.MSK1.NE.TNM1.OR.UFD(6).A.MSK2.NE.TNM2, T'O READ       074  LM00094
 00647 CAL -0 50000 0 00115    00650 ANA -0 32000 0 00072    00651 SLW +0 60200 0 01263    00652 CLA +0 50000 0 01263   
 00653 SUB +0 40200 0 00113    00654 TNZ -0 10000 0 00663    00655 CAL -0 50000 0 00114    00656 ANA -0 32000 0 00071   
 00657 SLW +0 60200 0 01263    00660 CLA +0 50000 0 01263    00661 SUB +0 40200 0 00112    00662 TZE +0 10000 0 00664   
 00663 TRA +0 02000 0 00035                                                                                             
                 W'R UFD(3).A.LINK.E.0, T'O READ                                    075  LM00095
 00664 CAL -0 50000 0 00120    00665 ANA -0 32000 0 00067    00666 SLW +0 60200 0 01263    00667 CLA +0 50000 0 01263   
 00670 SUB +0 40200 0 00126    00671 TNZ -0 10000 0 00673    00672 TRA +0 02000 0 00035                                 
      SET        W'R ARG(3).E.STAR, FSDLM=UFD(5).A.777777K6                         076  LM00097
 00673 CLA +0 50000 0 00046    00674 SUB +0 40200 0 00077    00675 TNZ -0 10000 0 00701    00676 CAL -0 50000 0 00116   
 00677 ANA -0 32000 0 00232    00700 SLW +0 60200 0 00061                                                               
                 W'R ARG(4).E.STAR, FSTLM=UFD(5).A.777777K                          077  LM00098
 00701 CLA +0 50000 0 00045    00702 SUB +0 40200 0 00077    00703 TNZ -0 10000 0 00707    00704 CAL -0 50000 0 00116   
 00705 ANA -0 32000 0 00155    00706 SLW +0 60200 0 00064                                                               
                 W'R ARG(5).E.STAR, FSDLU=UFD(4).A.777777K6                         078  LM00099
 00707 CLA +0 50000 0 00044    00710 SUB +0 40200 0 00077    00711 TNZ -0 10000 0 00715    00712 CAL -0 50000 0 00117   
 00713 ANA -0 32000 0 00232    00714 SLW +0 60200 0 00062                                                               
                 W'R ARG(6).E.STAR, FSAUT=UFD(4).A.777777K                          079  LM00100
 00715 CLA +0 50000 0 00043    00716 SUB +0 40200 0 00077    00717 TNZ -0 10000 0 00723    00720 CAL -0 50000 0 00117   
 00721 ANA -0 32000 0 00155    00722 SLW +0 60200 0 00057                                                               
      SETF       SETFIL.(UFD(7),UFD(6),FSDLM.V.FSTLM,FSDLU.V.FSAUT,FSMOD,FSDEV      080  LM00101
                1  )                                                                080  LM00102
 00723 CAL -0 50000 0 00062    00724 ORA -0 50100 0 00057    00725 SLW +0 60200 0 01263    00726 CAL -0 50000 0 00061   
 00727 ORA -0 50100 0 00064    00730 SLW +0 60200 0 01264    00731 TSX +0 07400 4 00021    00732 TXH +3 00000 0 00114   
 00733 TXH +3 00000 0 00115    00734 TXH +3 00000 0 01264    00735 TXH +3 00000 0 01263    00736 TXH +3 00000 0 00063   
 00737 TXH +3 00000 0 00060                                                                                             
                 N=N+1                                                              081  LM00103
 00740 CLA +0 50000 0 00075    00741 ADD +0 40000 0 00127    00742 STO +0 60100 0 00075                                 
                 W'R .NOT.RDUFD, T'O XIT                                            082  LM00104
 00743 ZET +0 52000 0 00076    00744 TRA +0 02000 0 00746    00745 TRA +0 02000 0 00040                                 
                 T'O READ                                                           083  LM00105
 00746 TRA +0 02000 0 00035                                                                                             
      EOF        W'R TEMP.E.0, T'O EOFXIT                                           084  LM00107
 00747 CLA +0 50000 0 00110    00750 SUB +0 40200 0 00126    00751 TNZ -0 10000 0 00753    00752 TRA +0 02000 0 00032   
      EOFERR     PRMESS.($BAD EOF RETURN READING U.F.D.$)                           085  LM00108
 00753 TSX +0 07400 4 00020    00754 TXH +3 00000 0 00162    00755 TXH +3 00000 0 00171    00756 TXH +3 00000 0 00215   
 00757 TXH +3 00000 0 00165    00760 TXH +3 00000 0 00176                                                               
      EOFXIT     BFCLOS.(UF,FI,ERR)                                                 086  LM00109
 00761 TSX +0 07400 4 00003    00762 TXH +3 00000 0 00124    00763 TXH +3 00000 0 00055    00764 TXH +3 00000 0 00033   
      XIT        PRMESS.($*$)                                                       087  LM00110
 00765 TSX +0 07400 4 00020    00766 TXH +3 00000 0 00217                                                               
                 CHNCOM.(0)                                                         088  LM00111
 00767 TSX +0 07400 4 00006    00770 TXH +3 00000 0 00126                                                               
      ERR        .CAL. $PRNTER$                                                     089  LM00113
 00771 CAL -0 50000 0 00214                                                                                             
                 .LDQ. 400000000071K                                                090  LM00114
 00772 LDQ +0 56000 0 00201                                                                                             
                 NEXCOM.                                                            091  LM00115
 00773 TSX +0 07400 4 00017                                                                                             
                 V'S STAR=$     *$                                                  092  LM00117
 00077     -2 06060 6 06054                                                                                             
                 V'S ARG(1)=$     *     *     *     *     *     *     *     *$      093  LM00118
 00041     -2 06060 6 06054    00042     -2 06060 6 06054    00043     -2 06060 6 06054    00044     -2 06060 6 06054   
 00045     -2 06060 6 06054    00046     -2 06060 6 06054    00047     -2 06060 6 06054    00050     -2 06060 6 06054   
                 V'S LINK=7K5                                                       094  LM00119
 00067     +0 00000 7 00000                                                                                             
                 V'S RDUFD=0B                                                       095  LM00120
 00076     +0 00000 0 00000                                                                                             
                 V'S FNS=777777777777K                                              096  LM00121
 00056     -3 77777 7 77777                                                                                             
                 V'S MXARG=8                                                        097  LM00122
 00073     +0 00000 0 00010                                                                                             
                 V'S UF=$U.F.D.$                                                    098  LM00123
 00124     -2 43326 3 32433                                                                                             
                 V'S FI=$(FILE)$                                                    099  LM00124
 00055     -3 42631 4 32534                                                                                             
                 INTERNAL FUNCTION (GNU)                                            100  LM00126
 00774 TRA +0 02000 0 01262                                                                                             
                 ENTRY TO FSDATE.                                                   101  LM00127
 00775 TRA +0 02000 0 01000    00024 TTR +0 02100 0 00776    00776 SXA +0 63400 2 01235    00777 TSX +0 07400 2 01235   
                   MM=BCDEC.((ZEL.(GNU)).RS.24)                                     102  LM00128
 01000 TSX +0 07400 4 00023    01001 TXH +3 00000 0 00024    01002 STO +0 60100 0 01260    01003 CAL -0 50000 0 00143   
 01004 STA +0 62100 0 01006    01005 CAL -0 50000 0 01260    01006 LGR -0 76500 0 00000    01007 SLW +0 60200 0 01260   
 01010 TSX +0 07400 4 00001    01011 TXH +3 00000 0 01260    01012 STO +0 60100 0 00070                                 
                   DD=BCDEC.((GNU.RS.12).A.7777K)                                   103  LM00129
 01013 CAL -0 50000 0 00140    01014 STA +0 62100 0 01016    01015 CAL -0 50000 0 00024    01016 LGR -0 76500 0 00000   
 01017 ANA -0 32000 0 00154    01020 SLW +0 60200 0 01260    01021 TSX +0 07400 4 00001    01022 TXH +3 00000 0 01260   
 01023 STO +0 60100 0 00054                                                                                             
                   YY=BCDEC.(GNU.A.7777K)                                           104  LM00130
 01024 CAL -0 50000 0 00024    01025 ANA -0 32000 0 00154    01026 SLW +0 60200 0 01260    01027 TSX +0 07400 4 00001   
 01030 TXH +3 00000 0 01260    01031 STO +0 60100 0 00125                                                               
                   W'R MM.G.12.OR.DD.G.31.OR.ZEL.(GNU).A.$ $.NE.0                   105  LM00131
                1    .OR.MM.E.0.OR.DD.E.0.OR.YY.E.0                                 105  LM00132
 01032 CLA +0 50000 0 00125    01033 SUB +0 40200 0 00126    01034 TZE +0 10000 0 01064    01035 CLA +0 50000 0 00054   
 01036 SUB +0 40200 0 00126    01037 TZE +0 10000 0 01064    01040 CLA +0 50000 0 00070    01041 SUB +0 40200 0 00126   
 01042 TZE +0 10000 0 01064    01043 TSX +0 07400 4 00023    01044 TXH +3 00000 0 00024    01045 STO +0 60100 0 01260   
 01046 CAL -0 50000 0 01260    01047 ANA -0 32000 0 00227    01050 SLW +0 60200 0 01260    01051 CLA +0 50000 0 01260   
 01052 SUB +0 40200 0 00126    01053 TNZ -0 10000 0 01064    01054 CLA +0 50000 0 00054    01055 SUB +0 40200 0 00145   
 01056 TZE +0 10000 0 01060    01057 TPL +0 12000 0 01064    01060 CLA +0 50000 0 00070    01061 SUB +0 40200 0 00140   
 01062 TZE +0 10000 0 01072    01063 TMI -0 12000 0 01072                                                               
                     PRMESS.($ILLEGAL DATE.....$,GNU)                               106  LM00133
 01064 TSX +0 07400 4 00020    01065 TXH +3 00000 0 00175    01066 TXH +3 00000 0 00205    01067 TXH +3 00000 0 00177   
 01070 TXH +3 00000 0 00024                                                                                             
                     T'O XIT                                                        107  LM00134
 01071 TRA +0 02000 0 00040                                                                                             
                   E'L                                                              108  LM00135
                   F'N (YY.LS.27).V.(MM.LS.23).V.(DD.LS.18)                         109  LM00136
 01072 CAL -0 50000 0 00141    01073 STA +0 62100 0 01075    01074 CAL -0 50000 0 00054    01075 ALS +0 76700 0 00000   
 01076 SLW +0 60200 0 01260    01077 CAL -0 50000 0 00142    01100 STA +0 62100 0 01102    01101 CAL -0 50000 0 00070   
 01102 ALS +0 76700 0 00000    01103 SLW +0 60200 0 01261    01104 CAL -0 50000 0 00144    01105 STA +0 62100 0 01107   
 01106 CAL -0 50000 0 00125    01107 ALS +0 76700 0 00000    01110 ORA -0 50100 0 01261    01111 ORA -0 50100 0 01260   
 01112 SLW +0 60200 0 01261    01113 CLA +0 50000 0 01261    01114 TRA +0 02000 0 01254                                 
                 ENTRY TO FSTIME.                                                   110  LM00137
 01115 TRA +0 02000 0 01120    00025 TTR +0 02100 0 01116    01116 SXA +0 63400 2 01235    01117 TSX +0 07400 2 01235   
                   W'R GNU.A.77K2.E.$0000.0$                                        111  LM00138
 01120 CAL -0 50000 0 00024    01121 ANA -0 32000 0 00153    01122 SLW +0 60200 0 01261    01123 CLA +0 50000 0 01261   
 01124 SUB +0 40200 0 00152    01125 TNZ -0 10000 0 01142                                                               
                     TEMP=ZEL.(GNU.RS.12)                                           112  LM00139
 01126 CAL -0 50000 0 00140    01127 STA +0 62100 0 01131    01130 CAL -0 50000 0 00024    01131 LGR -0 76500 0 00000   
 01132 SLW +0 60200 0 01261    01133 TSX +0 07400 4 00023    01134 TXH +3 00000 0 01261    01135 STO +0 60100 0 00110   
                     TM=GNU.A.77K                                                   113  LM00140
 01136 CAL -0 50000 0 00024    01137 ANA -0 32000 0 00150    01140 SLW +0 60200 0 00111                                 
                   O'E                                                              114  LM00141
 01141 TRA +0 02000 0 01147                                                                                             
                     TEMP=ZEL.(GNU)                                                 115  LM00142
 01142 TSX +0 07400 4 00023    01143 TXH +3 00000 0 00024    01144 STO +0 60100 0 00110                                 
                     TM=0                                                           116  LM00143
 01145 CLA +0 50000 0 00126    01146 STO +0 60100 0 00111                                                               
                   E'L                                                              117  LM00144
                   HH=BCDEC.((TEMP.A.7777K4).RS.12)                                 118  LM00145
 01147 CAL -0 50000 0 00110    01150 ANA -0 32000 0 00156    01151 SLW +0 60200 0 01261    01152 CAL -0 50000 0 00140   
 01153 STA +0 62100 0 01155    01154 CAL -0 50000 0 01261    01155 LGR -0 76500 0 00000    01156 SLW +0 60200 0 01261   
 01157 TSX +0 07400 4 00001    01160 TXH +3 00000 0 01261    01161 STO +0 60100 0 00065                                 
                   MM=BCDEC.(TEMP.A.7777K)                                          119  LM00146
 01162 CAL -0 50000 0 00110    01163 ANA -0 32000 0 00154    01164 SLW +0 60200 0 01261    01165 TSX +0 07400 4 00001   
 01166 TXH +3 00000 0 01261    01167 STO +0 60100 0 00070                                                               
                   W'R HH.G.23.OR.MM.G.59.OR.TM.G.9.OR.TEMP.A.$ $.NE.0              120  LM00147
 01170 CAL -0 50000 0 00110    01171 ANA -0 32000 0 00227    01172 SLW +0 60200 0 01261    01173 CLA +0 50000 0 01261   
 01174 SUB +0 40200 0 00126    01175 TNZ -0 10000 0 01212    01176 CLA +0 50000 0 00111    01177 SUB +0 40200 0 00136   
 01200 TZE +0 10000 0 01202    01201 TPL +0 12000 0 01212    01202 CLA +0 50000 0 00070    01203 SUB +0 40200 0 00146   
 01204 TZE +0 10000 0 01206    01205 TPL +0 12000 0 01212    01206 CLA +0 50000 0 00065    01207 SUB +0 40200 0 00142   
 01210 TZE +0 10000 0 01220    01211 TMI -0 12000 0 01220                                                               
                     PRMESS.($ILLEGAL TIME.....$,GNU)                               121  LM00148
 01212 TSX +0 07400 4 00020    01213 TXH +3 00000 0 00175    01214 TXH +3 00000 0 00206    01215 TXH +3 00000 0 00177   
 01216 TXH +3 00000 0 00024                                                                                             
                     T'O XIT                                                        122  LM00149
 01217 TRA +0 02000 0 00040                                                                                             
                   E'L                                                              123  LM00150
                   F'N ((HH*60+MM)*10+TM)*6                                         124  LM00151
 01220 LDQ +0 56000 0 00065    01221 MPY +0 20000 0 00147    01222 XCA +0 13100 0 00000    01223 ADD +0 40000 0 00070   
 01224 XCA +0 13100 0 00000    01225 MPY +0 20000 0 00137    01226 XCA +0 13100 0 00000    01227 ADD +0 40000 0 00111   
 01230 XCA +0 13100 0 00000    01231 MPY +0 20000 0 00133    01232 XCA +0 13100 0 00000    01233 TRA +0 02000 0 01254   
                 E'N                                                                125  LM00152
 01234 TSX +0 07400 4 00010    01235 TXH +3 00000 0 00000    01236 SXD -0 63400 1 01235    01237 SXA +0 63400 4 01254   
 01240 CLA +0 50000 4 00001    01241 STO +0 60100 0 01001    01242 STA +0 62100 0 01015    01243 STA +0 62100 0 01024   
 01244 STO +0 60100 0 01044    01245 STO +0 60100 0 01070    01246 STA +0 62100 0 01120    01247 STA +0 62100 0 01130   
 01250 STA +0 62100 0 01136    01251 STO +0 60100 0 01143    01252 STO +0 60100 0 01216    01253 TRA +0 02000 2 00001   
 01254 AXT +0 77400 4 00000    01255 LXA +0 53400 2 01235    01256 LXD -0 53400 1 01235    01257 TRA +0 02000 4 00001   
                 END OF PROGRAM                                                     126  LM00154
 01262 TSX +0 07400 4 00010                                                                                             




    SP   BCD 09/18/68 2320.1    2099         00000    
1       MAIN PROGRAM FOR SP OR SD COMMAND                                                        PAGE 1     
                  
                              *  WRITEEN BY ROGER ROACH  9-6-67   
                  
        TRANSFER VECTOR 
      00000  263151626360     FIRST 
                  
      00001  0074 00 4 00000         TSX     $FIRST,4 
      00002  0101 00 0 00003         TIA     =HDEAD        SHOULD NEVER RETURN
                                     END  
                  
        LITERALS  
      00003  242521246060     
1       MAIN PROGRAM FOR SP OR SD COMMAND                                                        PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          4 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          0  FIRST     1
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1     MAD PROGRAM LISTING ... ... ...                 FILE   SP000   MAD            02/08/68    1336.3
-                 
       SP        SYSTEM PATCH COMMAND. ALLOWS PATCHING IN CORE A                                       LM00001    
                                                                                                       LM00002    
                 FORMAT-SP P M A(1) B(1) C(1)...A(N) B(N) C(N)                                         LM00003    
                 C(I) MAY BE AA,AR,RA,RR,OR OMITTED AND IMPLIED AR                                     LM00004    
                 P,PROGRAM NAME,MAY BE OMITTED FOR ABSOLUTE PATCH                                      LM00005    
                 M,LOCATION FROM WHICH PATCHING IS DONE.                                               LM00006    
                                                                                                       LM00007    
                  EXTERNAL FUNCTION                                                               *001 LM00008    
                  ENTRY TO FIRST.                                                                 *002 LM00009    
                  ENTRY TO SP.                                                                    *003 LM00010    
                                                                                                       LM00011    
                 ARGUMENT SCANNING                                                                     LM00012    
      AA          THROUGH AA,FOR ARG=1,1,ARG.G.18.OR.COMARG.(ARG,ARG(ARG)).E.FE                   *004 LM00013    
                1 NCE                                                                             *004 LM00014    
                  ARG=ARG-1                                                                       *005 LM00015    
                  WHENEVER ARG(ARG).E.$$,ARG=ARG-1                                                *006 LM00016    
                                                                                                       LM00017    
                                                                                                       LM00018    
                 ARG IS THE SUBSCRIPT FOR LAST SIGNIFICANT ARGUMENT                                    LM00019    
                                                                                                       LM00020    
                  PAT=TOCT.(ARG(1))                                                               *007 LM00021    
                    PAT=0 IF PROGRAM NAME IS GIVEN                                                     LM00022    
                    PAT=1 IF ABSOLUTE PATCHING                                                         LM00023    
                  WHENEVER ARG.L.4-PAT,TRANSFER TO ERROR1                                         *008 LM00024    
                  WHENEVER TOCT.(ARG(2-PAT)).E.0,TRANSFER TO ERROR1                               *009 LM00025    
                  WHENEVER PAT.E.0, EXECUTE BRFIL.(RPAT.)                                         *010 LM00026    
                  EXECUTE APAT.                                                                   *011 LM00027    
                                                                                                       LM00028    
      ERROR1      EXECUTE PRNTP.(MESS1)                                                           *012 LM00029    
                  EXECUTE CHNCOM.(0)                                                              *013 LM00030    
                                                                                                       LM00031    
                                                                                                       LM00032    
                  VECTOR VALUES MESS1=$ INCORRECT FORMAT$,777777777777K                           *014 LM00033    
                  VECTOR VALUES FENCE=777777777777K                                               *015 LM00034    
                  DIMENSION ARG(19)                                                               *016 LM00035    
                  PROGRAM COMMON ARG                                                              *017 LM00036    
                  NORMAL MODE IS INTEGER                                                          *018 LM00037    
                                                                                                       LM00038    
                  END OF FUNCTION                                                                 *019 LM00039    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00144 TRANSFER VECTOR LENGTH  00010 PROGRAM BEGINS    00027 FIRST UNUSED COMMON/ERASABLE  77435
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      SP     00033   0        FIRST  00030   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      AA     00010   4        ERROR1 00011   4        FENCE  00012 A 1        MESS1  00016 A 1        PAT    00017   1  
      ARG    77461 AC1                                                                                                  
0FUNCTION DICTIONARY    
      APAT   00000   1        BRFIL  00001   1        CHNCOM 00002   1        COMARG 00003   1        EXIT   00004   1  
      PRNTP  00005   1        RPAT   00006   1        TOCT   00007   1                                                  
0ABSOLUTE CONSTANTS     
 00020 +000000000000     00022 +000000000002     00023 +000000000004     00026 -206060606060     00024 +000000000022    
 00021 +000000000001     00025 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00011 TXL -300127000125                                                                                                
0PROGRAM    
                 EXTERNAL FUNCTION                                                  001  LM00008
                 ENTRY TO FIRST.                                                    002  LM00009
 00027 TRA +0 02000 0 00032    00030 SXA +0 63400 2 00132    00031 TSX +0 07400 2 00132                                 
                 ENTRY TO SP.                                                       003  LM00010
 00032 TRA +0 02000 0 00035    00033 SXA +0 63400 2 00132    00034 TSX +0 07400 2 00132                                 
      AA         THROUGH AA,FOR ARG=1,1,ARG.G.18.OR.COMARG.(ARG,ARG(ARG)).E.FE      004  LM00013
                1NCE                                                                004  LM00014
 00035 CLA +0 50000 0 00021    00036 STO +0 60100 0 77461    00037 TRA +0 02000 0 00043    00040 CLA +0 50000 0 77461   
 00041 ADD +0 40000 0 00021    00042 STO +0 60100 0 77461    00043 CLA +0 50000 0 77461    00044 SUB +0 40200 0 00045   
 00045 TXH +3 00000 0 77461    00046 STA +0 62100 0 00051    00047 TSX +0 07400 4 00003    00050 TXH +3 00000 0 77461   
 00051 TXH +3 00000 0 00000    00052 SUB +0 40200 0 00012    00053 TZE +0 10000 0 00061    00054 CLA +0 50000 0 77461   
 00055 SUB +0 40200 0 00024    00056 TZE +0 10000 0 00060    00057 TPL +0 12000 0 00061    00060 TRA +0 02000 0 00040   
                 ARG=ARG-1                                                          005  LM00015
 00061 CLA +0 50000 0 77461    00062 SUB +0 40200 0 00021    00063 STO +0 60100 0 77461                                 
                 WHENEVER ARG(ARG).E.$$,ARG=ARG-1                                   006  LM00016
 00064 LXA +0 53400 1 77461    00065 CLA +0 50000 1 77461    00066 SUB +0 40200 0 00026    00067 TNZ -0 10000 0 00073   
 00070 CLA +0 50000 0 77461    00071 SUB +0 40200 0 00021    00072 STO +0 60100 0 77461                                 
                 PAT=TOCT.(ARG(1))                                                  007  LM00021
 00073 TSX +0 07400 4 00007    00074 TXH +3 00000 0 77460    00075 STO +0 60100 0 00017                                 
                 WHENEVER ARG.L.4-PAT,TRANSFER TO ERROR1                            008  LM00024
 00076 CLA +0 50000 0 00023    00077 SUB +0 40200 0 00017    00100 CHS +0 76000 0 00002    00101 ADD +0 40000 0 77461   
 00102 TZE +0 10000 0 00105    00103 TPL +0 12000 0 00105    00104 TRA +0 02000 0 00011                                 
                 WHENEVER TOCT.(ARG(2-PAT)).E.0,TRANSFER TO ERROR1                  009  LM00025
 00105 CLA +0 50000 0 00022    00106 SUB +0 40200 0 00017    00107 SUB +0 40200 0 00110    00110 TXH +3 00000 0 77461   
 00111 STA +0 62100 0 00113    00112 TSX +0 07400 4 00007    00113 TXH +3 00000 0 00000    00114 SUB +0 40200 0 00020   
 00115 TNZ -0 10000 0 00117    00116 TRA +0 02000 0 00011                                                               
                 WHENEVER PAT.E.0, EXECUTE BRFIL.(RPAT.)                            010  LM00026
 00117 CLA +0 50000 0 00017    00120 SUB +0 40200 0 00020    00121 TNZ -0 10000 0 00124    00122 TSX +0 07400 4 00001   
 00123 TXH +3 00000 0 00006                                                                                             
                 EXECUTE APAT.                                                      011  LM00027
 00124 TSX +0 07400 4 00000                                                                                             
      ERROR1     EXECUTE PRNTP.(MESS1)                                              012  LM00029
 00125 TSX +0 07400 4 00005    00126 TXH +3 00000 0 00016                                                               
                 EXECUTE CHNCOM.(0)                                                 013  LM00030
 00127 TSX +0 07400 4 00002    00130 TXH +3 00000 0 00020                                                               
                 VECTOR VALUES MESS1=$ INCORRECT FORMAT$,777777777777K              014  LM00033
 00013     -3 77777 7 77777    00014     -0 65144 2 16360    00015     -1 12523 6 36026    00016     -2 03145 2 34651   
                 VECTOR VALUES FENCE=777777777777K                                  015  LM00034
 00012     -3 77777 7 77777                                                                                             
                 DIMENSION ARG(19)                                                  016  LM00035
                 PROGRAM COMMON ARG                                                 017  LM00036
                 NORMAL MODE IS INTEGER                                             018  LM00037
                 END OF FUNCTION                                                    019  LM00039
 00131 TSX +0 07400 4 00004    00132 TXH +3 00000 0 00000    00133 SXD -0 63400 1 00132    00134 SXA +0 63400 4 00136   
 00135 TRA +0 02000 2 00001    00136 AXT +0 77400 4 00000    00137 LXA +0 53400 2 00132    00140 LXD -0 53400 1 00132   
 00141 TRA +0 02000 4 00001                                                                                             




 SPLIT   BCD 09/18/68 2320.1   17075         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   SPLIT   MAD            02/08/68    1343.4
-                 
                 ..MAIN PROGRAM FOR CALLING SPLIT AND USE                                              LM00001    
                 ..E.QUISENBERRY.....NOVEMBER 65                                                       LM00002    
                  NORMAL MODE IS INTEGER                                                          *001 LM00003    
                  WHENEVER COMARG.(0).E.$ SPLIT$,FIX.(0,SPLIT.)                                   *002 LM00004    
                  WHENEVER COMARG.(0).E.$   USE$,FIX.(0,USE.)                                     *003 LM00005    
                 SPLIT COMMAND                                                                         LM00006    
                                                                                                       LM00007    
                 FORMAT TO USE SPLIT                                                                   LM00008    
                                                                                                       LM00009    
                  SPLIT NAME1 NAME2 A1 S1 A2 S2 A3 ... AN SN                                           LM00010    
                                                                                                       LM00011    
                  NAME1 NAME2 IS FILE TO BE SPLIT                                                      LM00012    
                  A1, A2,... ARE FILES TO BE CREATED                                                   LM00013    
                     ALL SECONDARY NAMES WILL BE NAME2                                                 LM00014    
                     ANY AI MAY = *, IF THE FILE FROM S(I-1) TO SI IS                                  LM00015    
                         NOT WANTED.                                                                   LM00016    
                     ANY AI MAY = NAME1                                                                LM00017    
                     ALL PREVIOUS COPIES OF NEW FILES WILL BE DELETED,                                 LM00018    
                         IF POSSIBLE.                                                                  LM00019    
                  S1, S2,... ARE (NUMERICAL) DIVIDERS OF FILE                                          LM00020    
                     MAY BE...SEQUENCE NUMBERS  FOR FILES OF 14 WORD RECORDS                           LM00021    
                              RECORD NUMBERS  FOR MIXED LENGTH RECORDS, OR                             LM00022    
                                 WHEN ARGUMENT (RCNO) IS USED.                                         LM00023    
                              WORD COUNT  WHEN ARGUMENT (WDCT) IS USED                                 LM00024    
                     OPTIONAL EXTRA ARGUMENT ((WDCT) OR (RCNO)), MAY                                   LM00025    
                         APPEAR AFTER SPLIT OR AFTER NAME2.                                            LM00026    
                 CAUTION..WHEN USING (WDCT) OPTION ON LINE-MARKED FILES,                               LM00027    
                     REMEMBER THAT LINE MARK IS INCLUDED IN WORD COUNT.                                LM00028    
                                                                                                       LM00029    
                                                                                                       LM00030    
                 SPLIT LOGIC                                                                           LM00031    
                                                                                                       LM00032    
                  UNLESS OTHERWISE INSTRUCTED, SPLIT WILL ASSUME SI TO BE                              LM00033    
                     SEQUENCE NUMBER -- AS LONG AS RECORDS ARE 14 WORDS.                               LM00034    
                                                                                                       LM00035    
                  WHEN SI FALLS BETWEEN 2 SEQUENCE NUMBERS, FILE IS SPLIT                              LM00036    
                     BETWEEN THEM.                                                                     LM00037    
                  WHEN SI = SEQUENCE NUMBER, FILE IS SPLIT AFTER THE LINE.                             LM00038    
                                                                                                       LM00039    
                                                                                                       LM00040    
                 LOGIC OF PROGRAM                                                                      LM00041    
                                                                                                       LM00042    
                  SWITCH = 0  SPLIT BY SEQUENCE NUMBER                                                 LM00043    
                           1  SPLIT BY RECORD NUMBER                                                   LM00044    
                           2  SPLIT BY WORD COUNT                                                      LM00045    
                           3  NO MORE SPLITTING -- JUST COPY                                           LM00046    
                                                                                                       LM00047    
                                                                                                       LM00048    
                                                                                                       LM00049    
                                                                                                       LM00050    
                  SPLIT MAD                                                                            LM00051    
                                                                                                       LM00052    
                  INTERNAL FUNCTION (LK)                                                          *004 LM00053    
                  ENTRY TO SPLIT.                                                                 *005 LM00054    
                                                                                                       LM00055    
                                                                                                       LM00056    
                  INITIALIZATION                                                                       LM00057    
                                                                                                       LM00058    
                  THROUGH SPLA1, FOR N=1,1,N.G.18 .OR. COMARG.(N,ARGS                             *006 LM00059    
                1 (NOARGS)).E.FENCE                                                               *006 LM00060    
                    WHENEVER ARGS(NOARGS) .E. HWDCT                                               *007 LM00061    
                      WHENEVER NOARGS .G. 2, TRANSFER TO INVOP                                    *008 LM00062    
                      SWITCH = 2                                                                  *009 LM00063    
                      XSWTCH = 2                                                                  *010 LM00064    
                    OR WHENEVER ARGS (NOARGS) .E. HRCCT                                           *011 LM00065    
                      WHENEVER NOARGS.G.2, TRANSFER TO INVOP                                      *012 LM00066    
                      SWITCH = 1                                                                  *013 LM00067    
                      XSWTCH = 1                                                                  *014 LM00068    
                    OTHERWISE                                                                     *015 LM00069    
                      NOARGS = NOARGS+1                                                           *016 LM00070    
                    END OF CONDITIONAL                                                            *017 LM00071    
      SPLA1       CONTINUE                                                                        *018 LM00072    
                  NOARGS = NOARGS-1                                                               *019 LM00073    
                  WHENEVER NOARGS.LE.1                                                            *020 LM00074    
                    EXECUTE PRNTP.(F1)                                                            *021 LM00075    
                    EXECUTE CHNCOM.(0)                                                            *022 LM00076    
                  END OF CONDITIONAL                                                              *023 LM00077    
                                                                                                       LM00078    
      SPLA2       WHENEVER FSTAT.(FILNAM) .E. 0                                                   *024 LM00079    
                    F2(1) = FILNAM                                                                *025 LM00080    
                    F2(2) = FILNAM(1)                                                             *026 LM00081    
                    EXECUTE PRNTP.(F2)                                                            *027 LM00082    
                    EXECUTE DORMNT.                                                               *028 LM00083    
                  END OF CONDITIONAL                                                              *029 LM00084    
                                                                                                       LM00085    
                  BF1 = GETMEM.(0)+BUFFL                                                          *030 LM00086    
                  BF2 = BF1+BUFFL                                                                 *031 LM00087    
                  BF3 = BF2+BUFFL                                                                 *032 LM00088    
                  BF4 = BF3 + BUFFL                                                               *033 LM00089    
                  EXECUTE SMEM.(BF4+1)                                                            *034 LM00090    
                  EXECUTE SEEK.(FILNAM,LK(-BF1),LK(-BF2))                                         *035 LM00091    
                  NEWFIL(1) = FILNAM(1)                                                           *036 LM00092    
                  EXECUTE SETEOF.(EOFILE)                                                         *037 LM00093    
                  EXECUTE SETVBF.(14)                                                             *038 LM00094    
                                                                                                       LM00095    
                                                                                                       LM00096    
                  GET NEXT PAIR OF ARGUMENTS                                                           LM00097    
                                                                                                       LM00098    
                  THROUGH RGLOOP, FOR ARGNO=2,2,ARGNO.G.NOARGS                                    *039 LM00099    
                  NEWFIL = ARGS(ARGNO)                                                            *040 LM00100    
      SPLA3       WORDS = 0                                                                       *041 LM00101    
                    WHENEVER NEWFIL.E.FENCE                                                       *042 LM00102    
                      TRANSFER TO END                                                             *043 LM00103    
                    OR WHENEVER NEWFIL .E. STAR                                                   *044 LM00104    
                      NOWRT = 1                                                                   *045 LM00105    
                    OTHERWISE                                                                     *046 LM00106    
                      NOWRT = 0                                                                   *047 LM00107    
                      WHENEVER NEWFIL.E.FILNAM, NEWFIL = TEMP                                     *048 LM00108    
                      WHENEVER SKIPRD.E.1 .OR. NOMORE.E.0,                                        *049 LM00109    
                1       EXECUTE ASSIGN.(NEWFIL, LK(-BF3), LK(-BF4))                               *049 LM00110    
                    END OF CONDITIONAL                                                            *050 LM00111    
                                                                                                       LM00112    
                    WHENEVER ARGNO+1 .G. NOARGS                                                   *051 LM00113    
                      WHENEVER NEWFIL.E.STAR, TRANSFER TO END                                     *052 LM00114    
                      SWITCH = 3                                                                  *053 LM00115    
                      BSI = .ABS.FENCE                                                            *054 LM00116    
                      WHENEVER SKIPRD.E.0, WC = 22                                                *055 LM00117    
                    OTHERWISE                                                                     *056 LM00118    
                      SI = ZEL.(ARGS(ARGNO+1))                                                    *057 LM00119    
                      BSI = BCDEC.(SI)                                                            *058 LM00120    
                      WHENEVER SWITCH.E.1 .OR. SWITCH.E.2                                         *059 LM00121    
                        WC = BSI - RECNO                                                          *060 LM00122    
                        WHENEVER WC.LE.0                                                          *061 LM00123    
                          ALLFI = 0                                                               *062 LM00124    
                          TRANSFER TO RGLOOP                                                      *063 LM00125    
                        OR WHENEVER WC.G.22                                                       *064 LM00126    
                          WC = 22                                                                 *065 LM00127    
                        END OF CONDITIONAL                                                        *066 LM00128    
                      END OF CONDITIONAL                                                          *067 LM00129    
                    END OF CONDITIONAL                                                            *068 LM00130    
                                                                                                       LM00131    
                                                                                                       LM00132    
                  READ NEXT RECORD                                                                     LM00133    
                                                                                                       LM00134    
      READ        WHENEVER SKIPRD.NE.0, TRANSFER TO BRANCH(SWITCH)                                *069 LM00135    
                  WHENEVER NOMORE.E.1, TRANSFER TO EOFA1                                          *070 LM00136    
                  WHENEVER SWITCH.GE.2, TRANSFER TO READ2                                         *071 LM00137    
                  WC = VREAD.(FILNAM,BLOCK,...,BLOCK(21))                                         *072 LM00138    
                  AWC = .ABS.WC                                                                   *073 LM00139    
                  RECNO = RECNO+1                                                                 *074 LM00140    
                  TRANSFER TO BRANCH(SWITCH)                                                      *075 LM00141    
                                                                                                       LM00142    
                                                                                                       LM00143    
                  SPLIT BY SEQUENCE NUMBER                                                             LM00144    
                                                                                                       LM00145    
      BRANCH(0)   CONTINUE                                                                        *076 LM00146    
                  CHARS = ZEL.(BLOCK(13)/CHAR4 + .ABS.(BLOCK(12)*CHAR3)/CHAR1)                    *077 LM00147    
                  WHENEVER CHARS.G.$099999$ .OR. AWC.NE.14                                        *078 LM00148    
                    WHENEVER ARGNO.E.2 .AND. RECNO.LE.BSI                                         *079 LM00149    
                      SWITCH = 1                                                                  *080 LM00150    
                      XSWTCH = 1                                                                  *081 LM00151    
                      TRANSFER TO BRANCH(1)                                                       *082 LM00152    
                    OTHERWISE                                                                     *083 LM00153    
                      SWITCH = 3                                                                  *084 LM00154    
                      CRASH = 1                                                                   *085 LM00155    
                      TRANSFER TO CLOSE1                                                          *086 LM00156    
                    END OF CONDITIONAL                                                            *087 LM00157    
                  OR WHENEVER CHARO.LE.SI .AND. SI.L.CHARS                                        *088 LM00158    
      CLOSE1        SKIPRD = 1                                                                    *089 LM00159    
      CLOSE         WHENEVER NOWRT.E.1                                                            *090 LM00160    
                    OR WHENEVER WORDS.E.0                                                         *091 LM00161    
                      ALLFI = 0                                                                   *092 LM00162    
                    OTHERWISE                                                                     *093 LM00163    
                      WHENEVER DELETE.(NEWFIL).E.0 .AND. FSTAT.(NEWFIL).NE.0                      *094 LM00164    
                        DFILE(DELNO) = NEWFIL                                                     *095 LM00165    
                        DFILE (DELNO+1) = COMMA                                                   *096 LM00166    
                        DELNO = DELNO+2                                                           *097 LM00167    
                      END OF CONDITIONAL                                                          *098 LM00168    
                      EXECUTE FILE.(NEWFIL)                                                       *099 LM00169    
                      WHENEVER CRASH.E.2, TRANSFER TO RGLOOP                                      *100 LM00170    
                      NFILE(FILNO) = NEWFIL                                                       *101 LM00171    
                      NFILE(FILNO+1) = COMMA                                                      *102 LM00172    
                      FILNO = FILNO +2                                                            *103 LM00173    
                    END OF CONDITIONAL                                                            *104 LM00174    
                    WHENEVER CRASH.E.1                                                            *105 LM00175    
                      CRFILE(5) = CHARS                                                           *106 LM00176    
                      CRFILE(8) = DEFBC.(RECNO)                                                   *107 LM00177    
                      CRFIL = NEWFIL                                                              *108 LM00178    
                      CRFIL(7) = FILNAM(1)                                                        *109 LM00179    
                      NEWFIL = CRFIL(6)                                                           *110 LM00180    
                      CRASH = 2                                                                   *111 LM00181    
                      TRANSFER TO SPLA3                                                           *112 LM00182    
                    END OF CONDITIONAL                                                            *113 LM00183    
                    TRANSFER TO RGLOOP                                                            *114 LM00184    
                  OTHERWISE                                                                       *115 LM00185    
                    CHARO = CHARS                                                                 *116 LM00186    
                                                                                                       LM00187    
                                                                                                       LM00188    
                  SPLIT BY RECORD NUMBER                                                               LM00189    
                                                                                                       LM00190    
      BRANCH(1)     CONTINUE                                                                      *117 LM00191    
      BRANCH(3)     SKIPRD = 0                                                                    *118 LM00192    
                    WHENEVER NOWRT.E.1, TRANSFER TO B0A1                                          *119 LM00193    
                    WWC = 0                                                                       *120 LM00194    
                    WHENEVER WC.L.0                                                               *121 LM00195    
                      WWC = FWRITE.(NEWFIL,BLOCK,...,BLOCK(AWC-1))                                *122 LM00196    
                    OR WHENEVER WC.G.0                                                            *123 LM00197    
                      WWC = VWRITE.(NEWFIL,BLOCK,...,BLOCK(AWC-1))                                *124 LM00198    
                    END OF CONDITIONAL                                                            *125 LM00199    
                    WORDS = WORDS + .ABS.WWC                                                      *126 LM00200    
      B0A1          WHENEVER SWITCH.E.0                                                           *127 LM00201    
                      WHENEVER CHARS.E.SI, TRANSFER TO CLOSE                                      *128 LM00202    
                    OR WHENEVER SWITCH.E.1                                                        *129 LM00203    
                      WHENEVER RECNO.E.BSI, TRANSFER TO CLOSE                                     *130 LM00204    
                    OTHERWISE                                                                     *131 LM00205    
                      TRANSFER TO B2A1                                                            *132 LM00206    
                    END OF CONDITIONAL                                                            *133 LM00207    
                  END OF CONDITIONAL                                                              *134 LM00208    
                  TRANSFER TO READ                                                                *135 LM00209    
                                                                                                       LM00210    
                                                                                                       LM00211    
                  SPLIT BY WORD COUNT                                                                  LM00212    
                                                                                                       LM00213    
      READ2       EXECUTE BREAD.(FILNAM,BLOCK,...,BLOCK(WC-1))                                    *136 LM00214    
                  RECNO = RECNO + WC                                                              *137 LM00215    
      BRANCH(2)   WHENEVER NOWRT.E.1, TRANSFER TO B2A1                                            *138 LM00216    
                  EXECUTE BWRITE.(NEWFIL,BLOCK,...,BLOCK(WC-1))                                   *139 LM00217    
                  WORDS = WORDS + WC                                                              *140 LM00218    
      B2A1        WC = BSI - RECNO                                                                *141 LM00219    
                  WHENEVER NOMORE.E.1 .OR. WC.LE.0, TRANSFER TO CLOSE                             *142 LM00220    
                  WHENEVER WC.G.22, WC = 22                                                       *143 LM00221    
                  TRANSFER TO READ2                                                               *144 LM00222    
                                                                                                       LM00223    
                                                                                                       LM00224    
                  CLEAN UP                                                                             LM00225    
                                                                                                       LM00226    
      RGLOOP      CONTINUE                                                                        *145 LM00227    
      END         WHENEVER NOMORE.E.0, EXECUTE ENDRD.(FILNAM)                                     *146 LM00228    
                  THROUGH ENDA1, FOR I=4,2,I.GE.FILNO                                             *147 LM00229    
                    WHENEVER NFILE(I).E.TEMP                                                      *148 LM00230    
                      TEMP(1) = FILNAM(1)                                                         *149 LM00231    
                      WHENEVER RENAME.(TEMP,FILNAM).NE.0                                          *150 LM00232    
                        ALLFI = 0                                                                 *151 LM00233    
                        TRANSFER TO ENDA2                                                         *152 LM00234    
                      END OF CONDITIONAL                                                          *153 LM00235    
                      DFILE(DELNO) = FILNAM                                                       *154 LM00236    
                      DELNO = DELNO+2                                                             *155 LM00237    
                      NFILE(I) = FILNAM                                                           *156 LM00238    
                      TRANSFER TO ENDA2                                                           *157 LM00239    
                    END OF CONDITIONAL                                                            *158 LM00240    
      ENDA1       CONTINUE                                                                        *159 LM00241    
                                                                                                       LM00242    
      ENDA2       WHENEVER FILNO.G.4                                                              *160 LM00243    
                    F3(1) = FILNAM                                                                *161 LM00244    
                    F3(2) = FILNAM(1)                                                             *162 LM00245    
                    F3(5) = COM(XSWTCH)                                                           *163 LM00246    
                    EXECUTE PRNTP.(F3)                                                            *164 LM00247    
                  END OF CONDITIONAL                                                              *165 LM00248    
                  WHENEVER FILNO.LE.4                                                             *166 LM00249    
                    EXECUTE PRNTP.(F4)                                                            *167 LM00250    
                  OR WHENEVER ALLFI.E.1                                                           *168 LM00251    
                    EXECUTE PRNTP.(F5)                                                            *169 LM00252    
                  OTHERWISE                                                                       *170 LM00253    
                    NFILE(FILNO-1) = FENCE                                                        *171 LM00254    
                    EXECUTE PRNTP.(NFILE)                                                         *172 LM00255    
                  END OF CONDITIONAL                                                              *173 LM00256    
                  WHENEVER DELNO.G.3                                                              *174 LM00257    
                    DFILE(DELNO-1) = FENCE                                                        *175 LM00258    
                    EXECUTE PRNTP.(DFILE)                                                         *176 LM00259    
                  END OF CONDITIONAL                                                              *177 LM00260    
                  WHENEVER CRASH.E.2                                                              *178 LM00261    
                    EXECUTE PRNTP.(CRFILE)                                                        *179 LM00262    
                    EXECUTE PRNTP.(CRFIL)                                                         *180 LM00263    
                    EXECUTE CHMODE.(CRFIL(6),0)                                                   *181 LM00264    
                  END OF CONDITIONAL                                                              *182 LM00265    
                  EXECUTE CHNCOM.(0)                                                              *183 LM00266    
                                                                                                       LM00267    
                                                                                                       LM00268    
                  MISCELLANEOUS                                                                        LM00269    
                                                                                                       LM00270    
                  ENTRY TO USE.                                                                   *184 LM00271    
                  WHENEVER COMARG.(1,FILNAM).E.FENCE, TRANSFER TO SPLA2                           *185 LM00272    
                  WHENEVER COMARG.(2,TEST).NE.FENCE, FILNAM(1) = TEST                             *186 LM00273    
                  TRANSFER TO SPLA2                                                               *187 LM00274    
      INVOP       EXECUTE PRNTP.(F6)                                                              *188 LM00275    
                  EXECUTE CHNCOM.(0)                                                              *189 LM00276    
      EOFILE      EXECUTE WRDCNT.(WC)                                                             *190 LM00277    
                  NOMORE = 1                                                                      *191 LM00278    
                  WHENEVER WC.G.0, TRANSFER TO BRANCH(2)                                          *192 LM00279    
      EOFA1       TRANSFER TO CLOSE                                                               *193 LM00280    
                                                                                                       LM00281    
                  DIMENSION ARGS(18),BLOCK(21),DFILE(18),NFILE(19),NEWFIL(1)                      *194 LM00282    
                  DIMENSION FILNAM(1),CRFILE(9),CRFIL(13)                                         *195 LM00283    
                  EQUIVALENCE (ARGS,FILNAM)                                                       *196 LM00284    
                  VECTOR VALUES FENCE = 777777777777K                                             *197 LM00285    
                  VECTOR VALUES BUFFL = 470                                                       *198 LM00286    
                  VECTOR VALUES HWDCT = $(WDCT)$                                                  *199 LM00287    
                  VECTOR VALUES HRCCT = $(RCNO)$                                                  *200 LM00288    
                  VECTOR VALUES STAR = $     *$                                                   *201 LM00289    
                  VECTOR VALUES TEMP = $(TSPL)      $                                             *202 LM00290    
                  VECTOR VALUES COMMA = 736057575757K                                             *203 LM00291    
                  VECTOR VALUES CHAR1 = 1K2                                                       *204 LM00292    
                  VECTOR VALUES CHAR3 = 1K6                                                       *205 LM00293    
                  VECTOR VALUES CHAR4 = 1K8                                                       *206 LM00294    
                  VECTOR VALUES SWITCH = 0                                                        *207 LM00295    
                  VECTOR VALUES XSWTCH = 0                                                        *208 LM00296    
                  VECTOR VALUES NOARGS = 0                                                        *209 LM00297    
                  VECTOR VALUES RECNO = 0                                                         *210 LM00298    
                  VECTOR VALUES SKIPRD = 0                                                        *211 LM00299    
                  VECTOR VALUES NOMORE = 0                                                        *212 LM00300    
                  VECTOR VALUES CHARO = 0                                                         *213 LM00301    
                  VECTOR VALUES CRASH = 0                                                         *214 LM00302    
                  VECTOR VALUES ALLFI = 1                                                         *215 LM00303    
                  VECTOR VALUES COM = $SEQ NOREC NOWRD CT$                                        *216 LM00304    
                  VECTOR VALUES FILNO = 4                                                         *217 LM00305    
                  VECTOR VALUES DELNO = 3                                                         *218 LM00306    
                  VECTOR VALUES F1 = $NO SPLIT REQUIRED$,777777777777K                            *219 LM00307    
                  VECTOR VALUES F2 = $NEED              $,777777777777K                           *220 LM00308    
                  VECTOR VALUES F3 = $FILE                SPLIT BY        $                       *221 LM00309    
                1 ,777777777777K                                                                  *221 LM00310    
                  VECTOR VALUES F4 = $NO FILES CREATED$,777777777777K                             *222 LM00311    
                  VECTOR VALUES F5 = $ALL FILES CREATED$,777777777777K                            *223 LM00312    
                  VECTOR VALUESF6=$INVALID SEQUENCE OF ARGUMENTS$,777777777777K                   *224 LM00313    
                  VECTOR VALUES NFILE = $ONLY FILES CREATED ARE,$                                 *225 LM00314    
                  VECTOR VALUES DFILE = $DELETED FILES ARE$                                       *226 LM00315    
                  VECTOR VALUES CRFILE = $CHANGE OF MODE AT SEQUENCE NO.$                         *227 LM00316    
                  VECTOR VALUES CRFILE(6) = $, RECORD NO. $,777777777777K                         *228 LM00317    
                  VECTOR VALUES CRFIL(1)=$ IS TRUNCATED. TEMPORARY FILE (SPLT)$                   *229 LM00318    
                  VECTOR VALUES CRFIL(8) = $ HOLDS REST OF ORGINAL FILE$                          *230 LM00319    
                  VECTOR VALUES CRFIL(13) = 777777777777K                                         *231 LM00320    
                  END OF FUNCTION                                                                 *232 LM00321    
                  END OF PROGRAM                                                                  *233 LM00322    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01543 TRANSFER VECTOR LENGTH  00034 PROGRAM BEGINS    00355
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ALLFI  00104 A 1        CHAR1  00143 A 1        ENDA1  00036   4        HRCCT  00270 A 1        SI     00326   1  
      ARGNO  00105   1        CHAR3  00144 A 1        ENDA2  00072   4        HWDCT  00271 A 1        SKIPRD 00327 A 1  
      ARGS   00061 A 1        CHAR4  00145 A 1        END    00073   4        INVOP  00076   4        SPLA1  00036   4  
      AWC    00106   1        CHARO  00146 A 1        EOFA1  00074   4        I      00272   1        SPLA2  00102   4  
      B0A1   00062   4        CHARS  00147   1        EOFILE 00075   4        NEWFIL 00274 A 1        SPLA3  00103   4  
      B2A1   00063   4        CLOSE1 00070   4        F1     00234 A 1        NFILE  00320 A 1        STAR   00330 A 1  
      BF1    00107   1        CLOSE  00071   4        F2     00240 A 1        NOARGS 00321 A 1        SWITCH 00331 A 1  
      BF2    00110   1        COMMA  00150 A 1        F3     00247 A 1        NOMORE 00322 A 1        TEMP   00333 A 1  
      BF3    00111   1        COM    00153 A 1        F4     00253 A 1        NOWRT  00323   1        TEST   00334   1  
      BF4    00112   1        CRASH  00154 A 1        F5     00257 A 1        N      00324   1        WC     00335   1  
      BLOCK  00140 A 1        CRFILE 00166 A 1        F6     00265 A 1        READ2  00077   4        WORDS  00336   1  
      BRANCH 00067 A 4        CRFIL  00204 A 1        FENCE  00266 A 1        READ   00100   4        WWC    00337   1  
      BSI    00141   1        DELNO  00205 A 1        FILNAM 00061 A 1        RECNO  00325 A 1        XSWTCH 00340 A 1  
      BUFFL  00142 A 1        DFILE  00230 A 1        FILNO  00267 A 1        RGLOOP 00101   4                          
0FUNCTION DICTIONARY    
      ASSIGN 00000   1        BCDEC  00001   1        BREAD  00002   1        BWRITE 00003   1        CHMODE 00004   1  
      CHNCOM 00005   1        COMARG 00006   1        DEFBC  00007   1        DELETE 00010   1        DORMNT 00011   1  
      ENDRD  00012   1        EXIT   00013   1        FILE   00014   1        FIX    00015   1        FSTAT  00016   1  
      FWRITE 00017   1        GETMEM 00020   1        .SETUP 00021   1        PRNTP  00022   1        RENAME 00023   1  
      SEEK   00024   1        SETEOF 00025   1        SETVBF 00026   1        SMEM   00027   1        VREAD  00030   1  
      VWRITE 00031   1        WRDCNT 00032   1        ZEL    00033   1        SPLIT  00034   1        USE    00035   1  
0ABSOLUTE CONSTANTS     
 00345 +000000000004     00351 +001111111111     00350 +000000000026     00344 +000000000003     00346 +000000000016    
 00343 +000000000002     00347 +000000000022     00353 -206060646225     00354 -206247433163     00341 +000000000000    
 00342 +000000000001     00352 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00062 TXL -301224001221       00063 TXL -301302001277       00064 TXL -301152001150       00065 TXL -301263001257      
 00066 TXL -301150001150       00067 TXL -300760000760       00070 TXL -301045001043       00071 TXL -301050001045      
 00072 TXL -301376001372       00073 TXL -301327001322       00074 TXL -301521001520       00075 TXL -301511001507      
 00076 TXL -301505001503       00077 TXL -301254001243       00100 TXL -300733000726       00101 TXL -301322001321      
 00102 TXL -300502000476       00103 TXL -300574000572                                                                  
0PROGRAM    
                 NORMAL MODE IS INTEGER                                             001  LM00003
                 WHENEVER COMARG.(0).E.$ SPLIT$,FIX.(0,SPLIT.)                      002  LM00004
 00355 TSX +0 07400 4 00021    00356 TSX +0 07400 4 00006    00357 TXH +3 00000 0 00341    00360 SUB +0 40200 0 00354   
 00361 TNZ -0 10000 0 00365    00362 TSX +0 07400 4 00015    00363 TXH +3 00000 0 00341    00364 TXH +3 00000 0 00034   
                 WHENEVER COMARG.(0).E.$   USE$,FIX.(0,USE.)                        003  LM00005
 00365 TSX +0 07400 4 00006    00366 TXH +3 00000 0 00341    00367 SUB +0 40200 0 00353    00370 TNZ -0 10000 0 00374   
 00371 TSX +0 07400 4 00015    00372 TXH +3 00000 0 00341    00373 TXH +3 00000 0 00035                                 
                 INTERNAL FUNCTION (LK)                                             004  LM00053
 00374 TRA +0 02000 0 01540                                                                                             
                 ENTRY TO SPLIT.                                                    005  LM00054
 00375 TRA +0 02000 0 00400    00034 TTR +0 02100 0 00376    00376 SXA +0 63400 2 01522    00377 TSX +0 07400 2 01522   
                 THROUGH SPLA1, FOR N=1,1,N.G.18 .OR. COMARG.(N,ARGS                006  LM00059
                1(NOARGS)).E.FENCE                                                  006  LM00060
 00400 CLA +0 50000 0 00342    00401 STO +0 60100 0 00324    00402 TRA +0 02000 0 00406    00403 CLA +0 50000 0 00324   
 00404 ADD +0 40000 0 00342    00405 STO +0 60100 0 00324    00406 CLA +0 50000 0 00321    00407 SUB +0 40200 0 00410   
 00410 TXH +3 00000 0 00061    00411 STA +0 62100 0 00414    00412 TSX +0 07400 4 00006    00413 TXH +3 00000 0 00324   
 00414 TXH +3 00000 0 00000    00415 SUB +0 40200 0 00266    00416 TZE +0 10000 0 00463    00417 CLA +0 50000 0 00324   
 00420 SUB +0 40200 0 00347    00421 TZE +0 10000 0 00423    00422 TPL +0 12000 0 00463                                 
                   WHENEVER ARGS(NOARGS) .E. HWDCT                                  007  LM00061
 00423 LXA +0 53400 1 00321    00424 CLA +0 50000 1 00061    00425 SUB +0 40200 0 00271    00426 TNZ -0 10000 0 00441   
                     WHENEVER NOARGS .G. 2, TRANSFER TO INVOP                       008  LM00062
 00427 CLA +0 50000 0 00321    00430 SUB +0 40200 0 00343    00431 TZE +0 10000 0 00434    00432 TMI -0 12000 0 00434   
 00433 TRA +0 02000 0 00076                                                                                             
                     SWITCH = 2                                                     009  LM00063
 00434 CLA +0 50000 0 00343    00435 STO +0 60100 0 00331                                                               
                     XSWTCH = 2                                                     010  LM00064
 00436 CLA +0 50000 0 00343    00437 STO +0 60100 0 00340                                                               
                   OR WHENEVER ARGS (NOARGS) .E. HRCCT                              011  LM00065
 00440 TRA +0 02000 0 00462    00441 LXA +0 53400 1 00321    00442 CLA +0 50000 1 00061    00443 SUB +0 40200 0 00270   
 00444 TNZ -0 10000 0 00457                                                                                             
                     WHENEVER NOARGS.G.2, TRANSFER TO INVOP                         012  LM00066
 00445 CLA +0 50000 0 00321    00446 SUB +0 40200 0 00343    00447 TZE +0 10000 0 00452    00450 TMI -0 12000 0 00452   
 00451 TRA +0 02000 0 00076                                                                                             
                     SWITCH = 1                                                     013  LM00067
 00452 CLA +0 50000 0 00342    00453 STO +0 60100 0 00331                                                               
                     XSWTCH = 1                                                     014  LM00068
 00454 CLA +0 50000 0 00342    00455 STO +0 60100 0 00340                                                               
                   OTHERWISE                                                        015  LM00069
 00456 TRA +0 02000 0 00462                                                                                             
                     NOARGS = NOARGS+1                                              016  LM00070
 00457 CLA +0 50000 0 00321    00460 ADD +0 40000 0 00342    00461 STO +0 60100 0 00321                                 
                   END OF CONDITIONAL                                               017  LM00071
      SPLA1      CONTINUE                                                           018  LM00072
 00462 TRA +0 02000 0 00403                                                                                             
                 NOARGS = NOARGS-1                                                  019  LM00073
 00463 CLA +0 50000 0 00321    00464 SUB +0 40200 0 00342    00465 STO +0 60100 0 00321                                 
                 WHENEVER NOARGS.LE.1                                               020  LM00074
 00466 CLA +0 50000 0 00321    00467 SUB +0 40200 0 00342    00470 TZE +0 10000 0 00472    00471 TPL +0 12000 0 00476   
                   EXECUTE PRNTP.(F1)                                               021  LM00075
 00472 TSX +0 07400 4 00022    00473 TXH +3 00000 0 00234                                                               
                   EXECUTE CHNCOM.(0)                                               022  LM00076
 00474 TSX +0 07400 4 00005    00475 TXH +3 00000 0 00341                                                               
                 END OF CONDITIONAL                                                 023  LM00077
      SPLA2      WHENEVER FSTAT.(FILNAM) .E. 0                                      024  LM00079
 00476 TSX +0 07400 4 00016    00477 TXH +3 00000 0 00061    00500 SUB +0 40200 0 00341    00501 TNZ -0 10000 0 00511   
                   F2(1) = FILNAM                                                   025  LM00080
 00502 CLA +0 50000 0 00061    00503 STO +0 60100 0 00237                                                               
                   F2(2) = FILNAM(1)                                                026  LM00081
 00504 CLA +0 50000 0 00060    00505 STO +0 60100 0 00236                                                               
                   EXECUTE PRNTP.(F2)                                               027  LM00082
 00506 TSX +0 07400 4 00022    00507 TXH +3 00000 0 00240                                                               
                   EXECUTE DORMNT.                                                  028  LM00083
 00510 TSX +0 07400 4 00011                                                                                             
                 END OF CONDITIONAL                                                 029  LM00084
                 BF1 = GETMEM.(0)+BUFFL                                             030  LM00086
 00511 TSX +0 07400 4 00020    00512 TXH +3 00000 0 00341    00513 ADD +0 40000 0 00142    00514 STO +0 60100 0 00107   
                 BF2 = BF1+BUFFL                                                    031  LM00087
 00515 CLA +0 50000 0 00107    00516 ADD +0 40000 0 00142    00517 STO +0 60100 0 00110                                 
                 BF3 = BF2+BUFFL                                                    032  LM00088
 00520 CLA +0 50000 0 00110    00521 ADD +0 40000 0 00142    00522 STO +0 60100 0 00111                                 
                 BF4 = BF3 + BUFFL                                                  033  LM00089
 00523 CLA +0 50000 0 00111    00524 ADD +0 40000 0 00142    00525 STO +0 60100 0 00112                                 
                 EXECUTE SMEM.(BF4+1)                                               034  LM00090
 00526 CLA +0 50000 0 00112    00527 ADD +0 40000 0 00342    00530 STO +0 60100 0 01537    00531 TSX +0 07400 4 00027   
 00532 TXH +3 00000 0 01537                                                                                             
                 EXECUTE SEEK.(FILNAM,LK(-BF1),LK(-BF2))                            035  LM00091
 00533 CLS +0 50200 0 00110    00534 SUB +0 40200 0 00535    00535 TXH +3 00000 0 00024    00536 STA +0 62100 0 00546   
 00537 CLS +0 50200 0 00107    00540 SUB +0 40200 0 00541    00541 TXH +3 00000 0 00024    00542 STA +0 62100 0 00545   
 00543 TSX +0 07400 4 00024    00544 TXH +3 00000 0 00061    00545 TXH +3 00000 0 00000    00546 TXH +3 00000 0 00000   
                 NEWFIL(1) = FILNAM(1)                                              036  LM00092
 00547 CLA +0 50000 0 00060    00550 STO +0 60100 0 00273                                                               
                 EXECUTE SETEOF.(EOFILE)                                            037  LM00093
 00551 TSX +0 07400 4 00025    00552 TXH +3 00000 0 00075                                                               
                 EXECUTE SETVBF.(14)                                                038  LM00094
 00553 TSX +0 07400 4 00026    00554 TXH +3 00000 0 00346                                                               
                 THROUGH RGLOOP, FOR ARGNO=2,2,ARGNO.G.NOARGS                       039  LM00099
 00555 CLA +0 50000 0 00343    00556 STO +0 60100 0 00105    00557 TRA +0 02000 0 00563    00560 CLA +0 50000 0 00105   
 00561 ADD +0 40000 0 00343    00562 STO +0 60100 0 00105    00563 CLA +0 50000 0 00105    00564 SUB +0 40200 0 00321   
 00565 TZE +0 10000 0 00567    00566 TPL +0 12000 0 01322                                                               
                 NEWFIL = ARGS(ARGNO)                                               040  LM00100
 00567 LXA +0 53400 2 00105    00570 CLA +0 50000 2 00061    00571 STO +0 60100 0 00274                                 
      SPLA3      WORDS = 0                                                          041  LM00101
 00572 CLA +0 50000 0 00341    00573 STO +0 60100 0 00336                                                               
                   WHENEVER NEWFIL.E.FENCE                                          042  LM00102
 00574 CLA +0 50000 0 00274    00575 SUB +0 40200 0 00266    00576 TNZ -0 10000 0 00601                                 
                     TRANSFER TO END                                                043  LM00103
 00577 TRA +0 02000 0 00073                                                                                             
                   OR WHENEVER NEWFIL .E. STAR                                      044  LM00104
 00600 TRA +0 02000 0 00640    00601 CLA +0 50000 0 00274    00602 SUB +0 40200 0 00330    00603 TNZ -0 10000 0 00607   
                     NOWRT = 1                                                      045  LM00105
 00604 CLA +0 50000 0 00342    00605 STO +0 60100 0 00323                                                               
                   OTHERWISE                                                        046  LM00106
 00606 TRA +0 02000 0 00640                                                                                             
                     NOWRT = 0                                                      047  LM00107
 00607 CLA +0 50000 0 00341    00610 STO +0 60100 0 00323                                                               
                     WHENEVER NEWFIL.E.FILNAM, NEWFIL = TEMP                        048  LM00108
 00611 CLA +0 50000 0 00274    00612 SUB +0 40200 0 00061    00613 TNZ -0 10000 0 00616    00614 CLA +0 50000 0 00333   
 00615 STO +0 60100 0 00274                                                                                             
                     WHENEVER SKIPRD.E.1 .OR. NOMORE.E.0,                           049  LM00109
                1      EXECUTE ASSIGN.(NEWFIL, LK(-BF3), LK(-BF4))                  049  LM00110
 00616 CLA +0 50000 0 00322    00617 SUB +0 40200 0 00341    00620 TZE +0 10000 0 00624    00621 CLA +0 50000 0 00327   
 00622 SUB +0 40200 0 00342    00623 TNZ -0 10000 0 00640    00624 CLS +0 50200 0 00112    00625 SUB +0 40200 0 00626   
 00626 TXH +3 00000 0 00024    00627 STA +0 62100 0 00637    00630 CLS +0 50200 0 00111    00631 SUB +0 40200 0 00632   
 00632 TXH +3 00000 0 00024    00633 STA +0 62100 0 00636    00634 TSX +0 07400 4 00000    00635 TXH +3 00000 0 00274   
 00636 TXH +3 00000 0 00000    00637 TXH +3 00000 0 00000                                                               
                   END OF CONDITIONAL                                               050  LM00111
                   WHENEVER ARGNO+1 .G. NOARGS                                      051  LM00113
 00640 CLA +0 50000 0 00105    00641 ADD +0 40000 0 00342    00642 SUB +0 40200 0 00321    00643 TZE +0 10000 0 00664   
 00644 TMI -0 12000 0 00664                                                                                             
                     WHENEVER NEWFIL.E.STAR, TRANSFER TO END                        052  LM00114
 00645 CLA +0 50000 0 00274    00646 SUB +0 40200 0 00330    00647 TNZ -0 10000 0 00651    00650 TRA +0 02000 0 00073   
                     SWITCH = 3                                                     053  LM00115
 00651 CLA +0 50000 0 00344    00652 STO +0 60100 0 00331                                                               
                     BSI = .ABS.FENCE                                               054  LM00116
 00653 CLA +0 50000 0 00266    00654 SSP +0 76000 0 00003    00655 STO +0 60100 0 00141                                 
                     WHENEVER SKIPRD.E.0, WC = 22                                   055  LM00117
 00656 CLA +0 50000 0 00327    00657 SUB +0 40200 0 00341    00660 TNZ -0 10000 0 00663    00661 CLA +0 50000 0 00350   
 00662 STO +0 60100 0 00335                                                                                             
                   OTHERWISE                                                        056  LM00118
 00663 TRA +0 02000 0 00726                                                                                             
                     SI = ZEL.(ARGS(ARGNO+1))                                       057  LM00119
 00664 CLA +0 50000 0 00105    00665 ADD +0 40000 0 00342    00666 SUB +0 40200 0 00667    00667 TXH +3 00000 0 00061   
 00670 STA +0 62100 0 00672    00671 TSX +0 07400 4 00033    00672 TXH +3 00000 0 00000    00673 STO +0 60100 0 00326   
                     BSI = BCDEC.(SI)                                               058  LM00120
 00674 TSX +0 07400 4 00001    00675 TXH +3 00000 0 00326    00676 STO +0 60100 0 00141                                 
                     WHENEVER SWITCH.E.1 .OR. SWITCH.E.2                            059  LM00121
 00677 CLA +0 50000 0 00331    00700 SUB +0 40200 0 00343    00701 TZE +0 10000 0 00705    00702 CLA +0 50000 0 00331   
 00703 SUB +0 40200 0 00342    00704 TNZ -0 10000 0 00726                                                               
                       WC = BSI - RECNO                                             060  LM00122
 00705 CLA +0 50000 0 00141    00706 SUB +0 40200 0 00325    00707 STO +0 60100 0 00335                                 
                       WHENEVER WC.LE.0                                             061  LM00123
 00710 CLA +0 50000 0 00335    00711 SUB +0 40200 0 00341    00712 TZE +0 10000 0 00714    00713 TPL +0 12000 0 00720   
                         ALLFI = 0                                                  062  LM00124
 00714 CLA +0 50000 0 00341    00715 STO +0 60100 0 00104                                                               
                         TRANSFER TO RGLOOP                                         063  LM00125
 00716 TRA +0 02000 0 00101                                                                                             
                       OR WHENEVER WC.G.22                                          064  LM00126
 00717 TRA +0 02000 0 00726    00720 CLA +0 50000 0 00335    00721 SUB +0 40200 0 00350    00722 TZE +0 10000 0 00726   
 00723 TMI -0 12000 0 00726                                                                                             
                         WC = 22                                                    065  LM00127
 00724 CLA +0 50000 0 00350    00725 STO +0 60100 0 00335                                                               
                       END OF CONDITIONAL                                           066  LM00128
                     END OF CONDITIONAL                                             067  LM00129
                   END OF CONDITIONAL                                               068  LM00130
      READ       WHENEVER SKIPRD.NE.0, TRANSFER TO BRANCH(SWITCH)                   069  LM00135
 00726 CLA +0 50000 0 00327    00727 SUB +0 40200 0 00341    00730 TZE +0 10000 0 00733    00731 LXA +0 53400 2 00331   
 00732 TRA +0 02000 2 00067                                                                                             
                 WHENEVER NOMORE.E.1, TRANSFER TO EOFA1                             070  LM00136
 00733 CLA +0 50000 0 00322    00734 SUB +0 40200 0 00342    00735 TNZ -0 10000 0 00737    00736 TRA +0 02000 0 00074   
                 WHENEVER SWITCH.GE.2, TRANSFER TO READ2                            071  LM00137
 00737 CLA +0 50000 0 00331    00740 SUB +0 40200 0 00343    00741 TZE +0 10000 0 00743    00742 TMI -0 12000 0 00744   
 00743 TRA +0 02000 0 00077                                                                                             
                 WC = VREAD.(FILNAM,BLOCK,...,BLOCK(21))                            072  LM00138
 00744 TSX +0 07400 4 00030    00745 TXH +3 00000 0 00061    00746 TIX +2 00113 0 00140    00747 STO +0 60100 0 00335   
                 AWC = .ABS.WC                                                      073  LM00139
 00750 CLA +0 50000 0 00335    00751 SSP +0 76000 0 00003    00752 STO +0 60100 0 00106                                 
                 RECNO = RECNO+1                                                    074  LM00140
 00753 CLA +0 50000 0 00325    00754 ADD +0 40000 0 00342    00755 STO +0 60100 0 00325                                 
                 TRANSFER TO BRANCH(SWITCH)                                         075  LM00141
 00756 LXA +0 53400 2 00331    00757 TRA +0 02000 2 00067                                                               
      BRANCH(0)  CONTINUE                                                           076  LM00146
                 CHARS = ZEL.(BLOCK(13)/CHAR4 + .ABS.(BLOCK(12)*CHAR3)/CHAR1)       077  LM00147
 00760 LDQ +0 56000 0 00124    00761 MPY +0 20000 0 00144    00762 XCA +0 13100 0 00000    00763 SSP +0 76000 0 00003   
 00764 LRS +0 76500 0 00043    00765 DVP +0 22100 0 00143    00766 STQ -0 60000 0 01537    00767 LDQ +0 56000 0 00123   
 00770 PXD -0 75400 0 00000    00771 LLS +0 76300 0 00000    00772 DVP +0 22100 0 00145    00773 XCA +0 13100 0 00000   
 00774 ADD +0 40000 0 01537    00775 STO +0 60100 0 01537    00776 TSX +0 07400 4 00033    00777 TXH +3 00000 0 01537   
 01000 STO +0 60100 0 00147                                                                                             
                 WHENEVER CHARS.G.$099999$ .OR. AWC.NE.14                           078  LM00148
 01001 CLA +0 50000 0 00106    01002 SUB +0 40200 0 00346    01003 TNZ -0 10000 0 01010    01004 CLA +0 50000 0 00147   
 01005 SUB +0 40200 0 00351    01006 TZE +0 10000 0 01033    01007 TMI -0 12000 0 01033                                 
                   WHENEVER ARGNO.E.2 .AND. RECNO.LE.BSI                            079  LM00149
 01010 CLA +0 50000 0 00325    01011 SUB +0 40200 0 00141    01012 TZE +0 10000 0 01014    01013 TPL +0 12000 0 01025   
 01014 CLA +0 50000 0 00105    01015 SUB +0 40200 0 00343    01016 TNZ -0 10000 0 01025                                 
                     SWITCH = 1                                                     080  LM00150
 01017 CLA +0 50000 0 00342    01020 STO +0 60100 0 00331                                                               
                     XSWTCH = 1                                                     081  LM00151
 01021 CLA +0 50000 0 00342    01022 STO +0 60100 0 00340                                                               
                     TRANSFER TO BRANCH(1)                                          082  LM00152
 01023 TRA +0 02000 0 00066                                                                                             
                   OTHERWISE                                                        083  LM00153
 01024 TRA +0 02000 0 01032                                                                                             
                     SWITCH = 3                                                     084  LM00154
 01025 CLA +0 50000 0 00344    01026 STO +0 60100 0 00331                                                               
                     CRASH = 1                                                      085  LM00155
 01027 CLA +0 50000 0 00342    01030 STO +0 60100 0 00154                                                               
                     TRANSFER TO CLOSE1                                             086  LM00156
 01031 TRA +0 02000 0 00070                                                                                             
                   END OF CONDITIONAL                                               087  LM00157
                 OR WHENEVER CHARO.LE.SI .AND. SI.L.CHARS                           088  LM00158
 01032 TRA +0 02000 0 01242    01033 CLA +0 50000 0 00326    01034 SUB +0 40200 0 00147    01035 TZE +0 10000 0 01146   
 01036 TPL +0 12000 0 01146    01037 CLA +0 50000 0 00146    01040 SUB +0 40200 0 00326    01041 TZE +0 10000 0 01043   
 01042 TPL +0 12000 0 01146                                                                                             
      CLOSE1       SKIPRD = 1                                                       089  LM00159
 01043 CLA +0 50000 0 00342    01044 STO +0 60100 0 00327                                                               
      CLOSE        WHENEVER NOWRT.E.1                                               090  LM00160
 01045 CLA +0 50000 0 00323    01046 SUB +0 40200 0 00342    01047 TNZ -0 10000 0 01051                                 
                   OR WHENEVER WORDS.E.0                                            091  LM00161
 01050 TRA +0 02000 0 01123    01051 CLA +0 50000 0 00336    01052 SUB +0 40200 0 00341    01053 TNZ -0 10000 0 01057   
                     ALLFI = 0                                                      092  LM00162
 01054 CLA +0 50000 0 00341    01055 STO +0 60100 0 00104                                                               
                   OTHERWISE                                                        093  LM00163
 01056 TRA +0 02000 0 01123                                                                                             
                     WHENEVER DELETE.(NEWFIL).E.0 .AND. FSTAT.(NEWFIL).NE.0         094  LM00164
 01057 TSX +0 07400 4 00016    01060 TXH +3 00000 0 00274    01061 SUB +0 40200 0 00341    01062 TZE +0 10000 0 01102   
 01063 TSX +0 07400 4 00010    01064 TXH +3 00000 0 00274    01065 SUB +0 40200 0 00341    01066 TNZ -0 10000 0 01102   
                       DFILE(DELNO) = NEWFIL                                        095  LM00165
 01067 LXA +0 53400 1 00205    01070 CLA +0 50000 0 00274    01071 STO +0 60100 1 00230                                 
                       DFILE (DELNO+1) = COMMA                                      096  LM00166
 01072 CLA +0 50000 0 00205    01073 ADD +0 40000 0 00342    01074 PAX +0 73400 1 00000    01075 CLA +0 50000 0 00150   
 01076 STO +0 60100 1 00230                                                                                             
                       DELNO = DELNO+2                                              097  LM00167
 01077 CLA +0 50000 0 00205    01100 ADD +0 40000 0 00343    01101 STO +0 60100 0 00205                                 
                     END OF CONDITIONAL                                             098  LM00168
                     EXECUTE FILE.(NEWFIL)                                          099  LM00169
 01102 TSX +0 07400 4 00014    01103 TXH +3 00000 0 00274                                                               
                     WHENEVER CRASH.E.2, TRANSFER TO RGLOOP                         100  LM00170
 01104 CLA +0 50000 0 00154    01105 SUB +0 40200 0 00343    01106 TNZ -0 10000 0 01110    01107 TRA +0 02000 0 00101   
                     NFILE(FILNO) = NEWFIL                                          101  LM00171
 01110 LXA +0 53400 1 00267    01111 CLA +0 50000 0 00274    01112 STO +0 60100 1 00320                                 
                     NFILE(FILNO+1) = COMMA                                         102  LM00172
 01113 CLA +0 50000 0 00267    01114 ADD +0 40000 0 00342    01115 PAX +0 73400 1 00000    01116 CLA +0 50000 0 00150   
 01117 STO +0 60100 1 00320                                                                                             
                     FILNO = FILNO +2                                               103  LM00173
 01120 CLA +0 50000 0 00267    01121 ADD +0 40000 0 00343    01122 STO +0 60100 0 00267                                 
                   END OF CONDITIONAL                                               104  LM00174
                   WHENEVER CRASH.E.1                                               105  LM00175
 01123 CLA +0 50000 0 00154    01124 SUB +0 40200 0 00342    01125 TNZ -0 10000 0 01144                                 
                     CRFILE(5) = CHARS                                              106  LM00176
 01126 CLA +0 50000 0 00147    01127 STO +0 60100 0 00161                                                               
                     CRFILE(8) = DEFBC.(RECNO)                                      107  LM00177
 01130 TSX +0 07400 4 00007    01131 TXH +3 00000 0 00325    01132 STO +0 60100 0 00156                                 
                     CRFIL = NEWFIL                                                 108  LM00178
 01133 CLA +0 50000 0 00274    01134 STO +0 60100 0 00204                                                               
                     CRFIL(7) = FILNAM(1)                                           109  LM00179
 01135 CLA +0 50000 0 00060    01136 STO +0 60100 0 00175                                                               
                     NEWFIL = CRFIL(6)                                              110  LM00180
 01137 CLA +0 50000 0 00176    01140 STO +0 60100 0 00274                                                               
                     CRASH = 2                                                      111  LM00181
 01141 CLA +0 50000 0 00343    01142 STO +0 60100 0 00154                                                               
                     TRANSFER TO SPLA3                                              112  LM00182
 01143 TRA +0 02000 0 00103                                                                                             
                   END OF CONDITIONAL                                               113  LM00183
                   TRANSFER TO RGLOOP                                               114  LM00184
 01144 TRA +0 02000 0 00101                                                                                             
                 OTHERWISE                                                          115  LM00185
 01145 TRA +0 02000 0 01242                                                                                             
                   CHARO = CHARS                                                    116  LM00186
 01146 CLA +0 50000 0 00147    01147 STO +0 60100 0 00146                                                               
      BRANCH(1)    CONTINUE                                                         117  LM00191
      BRANCH(3)    SKIPRD = 0                                                       118  LM00192
 01150 CLA +0 50000 0 00341    01151 STO +0 60100 0 00327                                                               
                   WHENEVER NOWRT.E.1, TRANSFER TO B0A1                             119  LM00193
 01152 CLA +0 50000 0 00323    01153 SUB +0 40200 0 00342    01154 TNZ -0 10000 0 01156    01155 TRA +0 02000 0 00062   
                   WWC = 0                                                          120  LM00194
 01156 CLA +0 50000 0 00341    01157 STO +0 60100 0 00337                                                               
                   WHENEVER WC.L.0                                                  121  LM00195
 01160 CLA +0 50000 0 00335    01161 SUB +0 40200 0 00341    01162 TZE +0 10000 0 01177    01163 TPL +0 12000 0 01177   
                     WWC = FWRITE.(NEWFIL,BLOCK,...,BLOCK(AWC-1))                   122  LM00196
 01164 CLA +0 50000 0 00106    01165 SUB +0 40200 0 00342    01166 SUB +0 40200 0 01167    01167 TXH +3 00000 0 00140   
 01170 ALS +0 76700 0 00022    01171 STD +0 62200 0 01174    01172 TSX +0 07400 4 00017    01173 TXH +3 00000 0 00274   
 01174 TIX +2 00000 0 00140    01175 STO +0 60100 0 00337                                                               
                   OR WHENEVER WC.G.0                                               123  LM00197
 01176 TRA +0 02000 0 01215    01177 CLA +0 50000 0 00335    01200 SUB +0 40200 0 00341    01201 TZE +0 10000 0 01215   
 01202 TMI -0 12000 0 01215                                                                                             
                     WWC = VWRITE.(NEWFIL,BLOCK,...,BLOCK(AWC-1))                   124  LM00198
 01203 CLA +0 50000 0 00106    01204 SUB +0 40200 0 00342    01205 SUB +0 40200 0 01206    01206 TXH +3 00000 0 00140   
 01207 ALS +0 76700 0 00022    01210 STD +0 62200 0 01213    01211 TSX +0 07400 4 00031    01212 TXH +3 00000 0 00274   
 01213 TIX +2 00000 0 00140    01214 STO +0 60100 0 00337                                                               
                   END OF CONDITIONAL                                               125  LM00199
                   WORDS = WORDS + .ABS.WWC                                         126  LM00200
 01215 CLA +0 50000 0 00337    01216 SSP +0 76000 0 00003    01217 ADD +0 40000 0 00336    01220 STO +0 60100 0 00336   
      B0A1         WHENEVER SWITCH.E.0                                              127  LM00201
 01221 CLA +0 50000 0 00331    01222 SUB +0 40200 0 00341    01223 TNZ -0 10000 0 01231                                 
                     WHENEVER CHARS.E.SI, TRANSFER TO CLOSE                         128  LM00202
 01224 CLA +0 50000 0 00147    01225 SUB +0 40200 0 00326    01226 TNZ -0 10000 0 01230    01227 TRA +0 02000 0 00071   
                   OR WHENEVER SWITCH.E.1                                           129  LM00203
 01230 TRA +0 02000 0 01242    01231 CLA +0 50000 0 00331    01232 SUB +0 40200 0 00342    01233 TNZ -0 10000 0 01241   
                     WHENEVER RECNO.E.BSI, TRANSFER TO CLOSE                        130  LM00204
 01234 CLA +0 50000 0 00325    01235 SUB +0 40200 0 00141    01236 TNZ -0 10000 0 01240    01237 TRA +0 02000 0 00071   
                   OTHERWISE                                                        131  LM00205
 01240 TRA +0 02000 0 01242                                                                                             
                     TRANSFER TO B2A1                                               132  LM00206
 01241 TRA +0 02000 0 00063                                                                                             
                   END OF CONDITIONAL                                               133  LM00207
                 END OF CONDITIONAL                                                 134  LM00208
                 TRANSFER TO READ                                                   135  LM00209
 01242 TRA +0 02000 0 00100                                                                                             
      READ2      EXECUTE BREAD.(FILNAM,BLOCK,...,BLOCK(WC-1))                       136  LM00214
 01243 CLA +0 50000 0 00335    01244 SUB +0 40200 0 00342    01245 SUB +0 40200 0 01246    01246 TXH +3 00000 0 00140   
 01247 ALS +0 76700 0 00022    01250 STD +0 62200 0 01253    01251 TSX +0 07400 4 00002    01252 TXH +3 00000 0 00061   
 01253 TIX +2 00000 0 00140                                                                                             
                 RECNO = RECNO + WC                                                 137  LM00215
 01254 CLA +0 50000 0 00325    01255 ADD +0 40000 0 00335    01256 STO +0 60100 0 00325                                 
      BRANCH(2)  WHENEVER NOWRT.E.1, TRANSFER TO B2A1                               138  LM00216
 01257 CLA +0 50000 0 00323    01260 SUB +0 40200 0 00342    01261 TNZ -0 10000 0 01263    01262 TRA +0 02000 0 00063   
                 EXECUTE BWRITE.(NEWFIL,BLOCK,...,BLOCK(WC-1))                      139  LM00217
 01263 CLA +0 50000 0 00335    01264 SUB +0 40200 0 00342    01265 SUB +0 40200 0 01266    01266 TXH +3 00000 0 00140   
 01267 ALS +0 76700 0 00022    01270 STD +0 62200 0 01273    01271 TSX +0 07400 4 00003    01272 TXH +3 00000 0 00274   
 01273 TIX +2 00000 0 00140                                                                                             
                 WORDS = WORDS + WC                                                 140  LM00218
 01274 CLA +0 50000 0 00336    01275 ADD +0 40000 0 00335    01276 STO +0 60100 0 00336                                 
      B2A1       WC = BSI - RECNO                                                   141  LM00219
 01277 CLA +0 50000 0 00141    01300 SUB +0 40200 0 00325    01301 STO +0 60100 0 00335                                 
                 WHENEVER NOMORE.E.1 .OR. WC.LE.0, TRANSFER TO CLOSE                142  LM00220
 01302 CLA +0 50000 0 00335    01303 SUB +0 40200 0 00341    01304 TZE +0 10000 0 01311    01305 TMI -0 12000 0 01311   
 01306 CLA +0 50000 0 00322    01307 SUB +0 40200 0 00342    01310 TNZ -0 10000 0 01312    01311 TRA +0 02000 0 00071   
                 WHENEVER WC.G.22, WC = 22                                          143  LM00221
 01312 CLA +0 50000 0 00335    01313 SUB +0 40200 0 00350    01314 TZE +0 10000 0 01320    01315 TMI -0 12000 0 01320   
 01316 CLA +0 50000 0 00350    01317 STO +0 60100 0 00335                                                               
                 TRANSFER TO READ2                                                  144  LM00222
 01320 TRA +0 02000 0 00077                                                                                             
      RGLOOP     CONTINUE                                                           145  LM00227
 01321 TRA +0 02000 0 00560                                                                                             
      END        WHENEVER NOMORE.E.0, EXECUTE ENDRD.(FILNAM)                        146  LM00228
 01322 CLA +0 50000 0 00322    01323 SUB +0 40200 0 00341    01324 TNZ -0 10000 0 01327    01325 TSX +0 07400 4 00012   
 01326 TXH +3 00000 0 00061                                                                                             
                 THROUGH ENDA1, FOR I=4,2,I.GE.FILNO                                147  LM00229
 01327 CLA +0 50000 0 00345    01330 STO +0 60100 0 00272    01331 TRA +0 02000 0 01335    01332 CLA +0 50000 0 00272   
 01333 ADD +0 40000 0 00343    01334 STO +0 60100 0 00272    01335 CLA +0 50000 0 00272    01336 SUB +0 40200 0 00267   
 01337 TZE +0 10000 0 01372    01340 TPL +0 12000 0 01372                                                               
                   WHENEVER NFILE(I).E.TEMP                                         148  LM00230
 01341 LXA +0 53400 1 00272    01342 CLA +0 50000 1 00320    01343 SUB +0 40200 0 00333    01344 TNZ -0 10000 0 01371   
                     TEMP(1) = FILNAM(1)                                            149  LM00231
 01345 CLA +0 50000 0 00060    01346 STO +0 60100 0 00332                                                               
                     WHENEVER RENAME.(TEMP,FILNAM).NE.0                             150  LM00232
 01347 TSX +0 07400 4 00023    01350 TXH +3 00000 0 00333    01351 TXH +3 00000 0 00061    01352 SUB +0 40200 0 00341   
 01353 TZE +0 10000 0 01357                                                                                             
                       ALLFI = 0                                                    151  LM00233
 01354 CLA +0 50000 0 00341    01355 STO +0 60100 0 00104                                                               
                       TRANSFER TO ENDA2                                            152  LM00234
 01356 TRA +0 02000 0 00072                                                                                             
                     END OF CONDITIONAL                                             153  LM00235
                     DFILE(DELNO) = FILNAM                                          154  LM00236
 01357 LXA +0 53400 1 00205    01360 CLA +0 50000 0 00061    01361 STO +0 60100 1 00230                                 
                     DELNO = DELNO+2                                                155  LM00237
 01362 CLA +0 50000 0 00205    01363 ADD +0 40000 0 00343    01364 STO +0 60100 0 00205                                 
                     NFILE(I) = FILNAM                                              156  LM00238
 01365 LXA +0 53400 1 00272    01366 CLA +0 50000 0 00061    01367 STO +0 60100 1 00320                                 
                     TRANSFER TO ENDA2                                              157  LM00239
 01370 TRA +0 02000 0 00072                                                                                             
                   END OF CONDITIONAL                                               158  LM00240
      ENDA1      CONTINUE                                                           159  LM00241
 01371 TRA +0 02000 0 01332                                                                                             
      ENDA2      WHENEVER FILNO.G.4                                                 160  LM00243
 01372 CLA +0 50000 0 00267    01373 SUB +0 40200 0 00345    01374 TZE +0 10000 0 01407    01375 TMI -0 12000 0 01407   
                   F3(1) = FILNAM                                                   161  LM00244
 01376 CLA +0 50000 0 00061    01377 STO +0 60100 0 00246                                                               
                   F3(2) = FILNAM(1)                                                162  LM00245
 01400 CLA +0 50000 0 00060    01401 STO +0 60100 0 00245                                                               
                   F3(5) = COM(XSWTCH)                                              163  LM00246
 01402 LXA +0 53400 2 00340    01403 CLA +0 50000 2 00153    01404 STO +0 60100 0 00242                                 
                   EXECUTE PRNTP.(F3)                                               164  LM00247
 01405 TSX +0 07400 4 00022    01406 TXH +3 00000 0 00247                                                               
                 END OF CONDITIONAL                                                 165  LM00248
                 WHENEVER FILNO.LE.4                                                166  LM00249
 01407 CLA +0 50000 0 00267    01410 SUB +0 40200 0 00345    01411 TZE +0 10000 0 01413    01412 TPL +0 12000 0 01416   
                   EXECUTE PRNTP.(F4)                                               167  LM00250
 01413 TSX +0 07400 4 00022    01414 TXH +3 00000 0 00253                                                               
                 OR WHENEVER ALLFI.E.1                                              168  LM00251
 01415 TRA +0 02000 0 01433    01416 CLA +0 50000 0 00104    01417 SUB +0 40200 0 00342    01420 TNZ -0 10000 0 01424   
                   EXECUTE PRNTP.(F5)                                               169  LM00252
 01421 TSX +0 07400 4 00022    01422 TXH +3 00000 0 00257                                                               
                 OTHERWISE                                                          170  LM00253
 01423 TRA +0 02000 0 01433                                                                                             
                   NFILE(FILNO-1) = FENCE                                           171  LM00254
 01424 CLA +0 50000 0 00267    01425 SUB +0 40200 0 00342    01426 PAX +0 73400 1 00000    01427 CLA +0 50000 0 00266   
 01430 STO +0 60100 1 00320                                                                                             
                   EXECUTE PRNTP.(NFILE)                                            172  LM00255
 01431 TSX +0 07400 4 00022    01432 TXH +3 00000 0 00320                                                               
                 END OF CONDITIONAL                                                 173  LM00256
                 WHENEVER DELNO.G.3                                                 174  LM00257
 01433 CLA +0 50000 0 00205    01434 SUB +0 40200 0 00344    01435 TZE +0 10000 0 01446    01436 TMI -0 12000 0 01446   
                   DFILE(DELNO-1) = FENCE                                           175  LM00258
 01437 CLA +0 50000 0 00205    01440 SUB +0 40200 0 00342    01441 PAX +0 73400 1 00000    01442 CLA +0 50000 0 00266   
 01443 STO +0 60100 1 00230                                                                                             
                   EXECUTE PRNTP.(DFILE)                                            176  LM00259
 01444 TSX +0 07400 4 00022    01445 TXH +3 00000 0 00230                                                               
                 END OF CONDITIONAL                                                 177  LM00260
                 WHENEVER CRASH.E.2                                                 178  LM00261
 01446 CLA +0 50000 0 00154    01447 SUB +0 40200 0 00343    01450 TNZ -0 10000 0 01460                                 
                   EXECUTE PRNTP.(CRFILE)                                           179  LM00262
 01451 TSX +0 07400 4 00022    01452 TXH +3 00000 0 00166                                                               
                   EXECUTE PRNTP.(CRFIL)                                            180  LM00263
 01453 TSX +0 07400 4 00022    01454 TXH +3 00000 0 00204                                                               
                   EXECUTE CHMODE.(CRFIL(6),0)                                      181  LM00264
 01455 TSX +0 07400 4 00004    01456 TXH +3 00000 0 00176    01457 TXH +3 00000 0 00341                                 
                 END OF CONDITIONAL                                                 182  LM00265
                 EXECUTE CHNCOM.(0)                                                 183  LM00266
 01460 TSX +0 07400 4 00005    01461 TXH +3 00000 0 00341                                                               
                 ENTRY TO USE.                                                      184  LM00271
 01462 TRA +0 02000 0 01465    00035 TTR +0 02100 0 01463    01463 SXA +0 63400 2 01522    01464 TSX +0 07400 2 01522   
                 WHENEVER COMARG.(1,FILNAM).E.FENCE, TRANSFER TO SPLA2              185  LM00272
 01465 TSX +0 07400 4 00006    01466 TXH +3 00000 0 00342    01467 TXH +3 00000 0 00061    01470 SUB +0 40200 0 00266   
 01471 TNZ -0 10000 0 01473    01472 TRA +0 02000 0 00102                                                               
                 WHENEVER COMARG.(2,TEST).NE.FENCE, FILNAM(1) = TEST                186  LM00273
 01473 TSX +0 07400 4 00006    01474 TXH +3 00000 0 00343    01475 TXH +3 00000 0 00334    01476 SUB +0 40200 0 00266   
 01477 TZE +0 10000 0 01502    01500 CLA +0 50000 0 00334    01501 STO +0 60100 0 00060                                 
                 TRANSFER TO SPLA2                                                  187  LM00274
 01502 TRA +0 02000 0 00102                                                                                             
      INVOP      EXECUTE PRNTP.(F6)                                                 188  LM00275
 01503 TSX +0 07400 4 00022    01504 TXH +3 00000 0 00265                                                               
                 EXECUTE CHNCOM.(0)                                                 189  LM00276
 01505 TSX +0 07400 4 00005    01506 TXH +3 00000 0 00341                                                               
      EOFILE     EXECUTE WRDCNT.(WC)                                                190  LM00277
 01507 TSX +0 07400 4 00032    01510 TXH +3 00000 0 00335                                                               
                 NOMORE = 1                                                         191  LM00278
 01511 CLA +0 50000 0 00342    01512 STO +0 60100 0 00322                                                               
                 WHENEVER WC.G.0, TRANSFER TO BRANCH(2)                             192  LM00279
 01513 CLA +0 50000 0 00335    01514 SUB +0 40200 0 00341    01515 TZE +0 10000 0 01520    01516 TMI -0 12000 0 01520   
 01517 TRA +0 02000 0 00065                                                                                             
      EOFA1      TRANSFER TO CLOSE                                                  193  LM00280
 01520 TRA +0 02000 0 00071                                                                                             
                 DIMENSION ARGS(18),BLOCK(21),DFILE(18),NFILE(19),NEWFIL(1)         194  LM00282
                 DIMENSION FILNAM(1),CRFILE(9),CRFIL(13)                            195  LM00283
                 EQUIVALENCE (ARGS,FILNAM)                                          196  LM00284
                 VECTOR VALUES FENCE = 777777777777K                                197  LM00285
 00266     -3 77777 7 77777                                                                                             
                 VECTOR VALUES BUFFL = 470                                          198  LM00286
 00142     +0 00000 0 00726                                                                                             
                 VECTOR VALUES HWDCT = $(WDCT)$                                     199  LM00287
 00271     -3 46624 2 36334                                                                                             
                 VECTOR VALUES HRCCT = $(RCNO)$                                     200  LM00288
 00270     -3 45123 4 54634                                                                                             
                 VECTOR VALUES STAR = $     *$                                      201  LM00289
 00330     -2 06060 6 06054                                                                                             
                 VECTOR VALUES TEMP = $(TSPL)      $                                202  LM00290
 00332     -2 06060 6 06060    00333     -3 46362 4 74334                                                               
                 VECTOR VALUES COMMA = 736057575757K                                203  LM00291
 00150     -3 36057 5 75757                                                                                             
                 VECTOR VALUES CHAR1 = 1K2                                          204  LM00292
 00143     +0 00000 0 00100                                                                                             
                 VECTOR VALUES CHAR3 = 1K6                                          205  LM00293
 00144     +0 00001 0 00000                                                                                             
                 VECTOR VALUES CHAR4 = 1K8                                          206  LM00294
 00145     +0 00100 0 00000                                                                                             
                 VECTOR VALUES SWITCH = 0                                           207  LM00295
 00331     +0 00000 0 00000                                                                                             
                 VECTOR VALUES XSWTCH = 0                                           208  LM00296
 00340     +0 00000 0 00000                                                                                             
                 VECTOR VALUES NOARGS = 0                                           209  LM00297
 00321     +0 00000 0 00000                                                                                             
                 VECTOR VALUES RECNO = 0                                            210  LM00298
 00325     +0 00000 0 00000                                                                                             
                 VECTOR VALUES SKIPRD = 0                                           211  LM00299
 00327     +0 00000 0 00000                                                                                             
                 VECTOR VALUES NOMORE = 0                                           212  LM00300
 00322     +0 00000 0 00000                                                                                             
                 VECTOR VALUES CHARO = 0                                            213  LM00301
 00146     +0 00000 0 00000                                                                                             
                 VECTOR VALUES CRASH = 0                                            214  LM00302
 00154     +0 00000 0 00000                                                                                             
                 VECTOR VALUES ALLFI = 1                                            215  LM00303
 00104     +0 00000 0 00001                                                                                             
                 VECTOR VALUES COM = $SEQ NOREC NOWRD CT$                           216  LM00304
 00151     -2 65124 6 02363    00152     -1 12523 6 04546    00153     -2 22550 6 04546                                 
                 VECTOR VALUES FILNO = 4                                            217  LM00305
 00267     +0 00000 0 00004                                                                                             
                 VECTOR VALUES DELNO = 3                                            218  LM00306
 00205     +0 00000 0 00003                                                                                             
                 VECTOR VALUES F1 = $NO SPLIT REQUIRED$,777777777777K               219  LM00307
 00231     -3 77777 7 77777    00232     -2 43151 2 52460    00233     +3 16360 5 12550    00234     -0 54660 6 24743   
                 VECTOR VALUES F2 = $NEED              $,777777777777K              220  LM00308
 00235     -3 77777 7 77777    00236     -2 06060 6 06060    00237     -2 06060 6 06060    00240     -0 52525 2 46060   
                 VECTOR VALUES F3 = $FILE                SPLIT BY        $          221  LM00309
                1,777777777777K                                                     221  LM00310
 00241     -3 77777 7 77777    00242     -2 06060 6 06060    00243     -2 36022 7 06060    00244     -2 06062 4 74331   
 00245     -2 06060 6 06060    00246     -2 06060 6 06060    00247     +2 63143 2 56060                                 
                 VECTOR VALUES F4 = $NO FILES CREATED$,777777777777K                222  LM00311
 00250     -3 77777 7 77777    00251     +2 16325 2 46060    00252     +2 56260 2 35125    00253     -0 54660 2 63143   
                 VECTOR VALUES F5 = $ALL FILES CREATED$,777777777777K               223  LM00312
 00254     -3 77777 7 77777    00255     +2 52163 2 52460    00256     -0 32562 6 02351    00257     +2 14343 6 02631   
                 VECTOR VALUESF6=$INVALID SEQUENCE OF ARGUMENTS$,777777777777K      224  LM00313
 00260     -3 77777 7 77777    00261     -0 42545 6 36260    00262     +2 66021 5 12764    00263     +2 54523 2 56046   
 00264     +2 46062 2 55064    00265     +3 14565 2 14331                                                               
                 VECTOR VALUES NFILE = $ONLY FILES CREATED ARE,$                    225  LM00314
 00315     -2 02151 2 57360    00316     -1 12521 6 32524    00317     +3 14325 6 26023    00320     -0 64543 7 06026   
                 VECTOR VALUES DFILE = $DELETED FILES ARE$                          226  LM00315
 00226     -2 26021 5 12560    00227     +2 46026 3 14325    00230     +2 42543 2 56325                                 
                 VECTOR VALUES CRFILE = $CHANGE OF MODE AT SEQUENCE NO.$            227  LM00316
 00162     +2 32560 4 54633    00163     -2 22550 6 42545    00164     +2 42560 2 16360    00165     -2 04626 6 04446   
 00166     +2 33021 4 52725                                                                                             
                 VECTOR VALUES CRFILE(6) = $, RECORD NO. $,777777777777K            228  LM00317
 00155     -3 77777 7 77777    00156     -2 06060 6 06060    00157     -1 12460 4 54633    00160     -3 36051 2 52346   
                 VECTOR VALUES CRFIL(1)=$ IS TRUNCATED. TEMPORARY FILE (SPLT)$      229  LM00318
 00176     -3 46247 4 36334    00177     -2 02631 4 32560    00200     -0 74651 2 15170    00201     +2 43360 6 32544   
 00202     -2 44523 2 16325    00203     -2 03162 6 06351                                                               
                 VECTOR VALUES CRFIL(8) = $ HOLDS REST OF ORGINAL FILE$             230  LM00319
 00170     +3 14325 6 06060    00171     +3 14521 4 36026    00172     -0 62660 4 65127    00173     -2 05125 6 26360   
 00174     -2 03046 4 32462                                                                                             
                 VECTOR VALUES CRFIL(13) = 777777777777K                            231  LM00320
 00167     -3 77777 7 77777                                                                                             
                 END OF FUNCTION                                                    232  LM00321
 01521 TSX +0 07400 4 00013    01522 TXH +3 00000 0 00000    01523 SXD -0 63400 1 01522    01524 SXA +0 63400 4 01533   
 01525 CLA +0 50000 4 00001    01526 STO +0 60100 0 00535    01527 STO +0 60100 0 00541    01530 STO +0 60100 0 00626   
 01531 STO +0 60100 0 00632    01532 TRA +0 02000 2 00001    01533 AXT +0 77400 4 00000    01534 LXA +0 53400 2 01522   
 01535 LXD -0 53400 1 01522    01536 TRA +0 02000 4 00001                                                               
                 END OF PROGRAM                                                     233  LM00322
 01540 TSX +0 07400 4 00013                                                                                             
1                                                                                                PAGE 1     
                           FILE NAME -- FIX00 FAP                                   
                  
                       00003         ENTRY   FIX
                  
        TRANSFER VECTOR 
      00000  244651444563     DORMNT
                  
            LINKAGE DIRECTOR  
      00001  000000000000     
      00002  263167606060     
                  
      00003  0500 60 4 00001  FIX    CLA*    1,4
      00004  0621 00 0 00010         STA     B  
      00005  0500 00 4 00002         CLA     2,4
      00006  0621 00 0 00007         STA     A  
      00007  0074 00 4 00000  A      TSX     **,4     
 TD   00010  3 00000 0 00000  B      TXH     -- 
      00011  0074 00 4 00000         TSX     $DORMNT,4
                                     END  
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         12 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          7      A     6
         10      B     4
          3    FIX     0
          0 DORMNT    11
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




 TAPES   BCD 10/04/70 1645.1   10054         00000    




 MOUNT   BCD 11/23/69 1439.9    4564         00000    
1            MOUNT AND UMOUNT COMMANDS FOR FOREGROUND.                           11/23/69 1425.5 PAGE 1     
                  
                                             REVISED 4/21/66 - N. I. MORRIS   
                  
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* 
                              *     
                              *      USAGE -    
                              *     
                              *      MOUNT   REEL  UNITNO  -RING-  -CHAN-  -MESS-   
                              *      UMOUNT UNITNO -RING-  -MESS- 
                              *     
                              *      WHERE -    
                              *     
                              *      REEL   = TAPE REEL IDENTIFICATION. 
                              *      UNITNO = LOGICAL TAPE UNIT NUMBER  
                              *      RING   = 'RING' OR 'NORING' ('NORING' WILL BE ASSUMED).    
                              *      CHAN   = DESIRED CHANNEL, IF SPECIFIED   
                              *      MESS   = 'MESS' IF A MESSAGE IS TO BE SENT TO THE OPERATOR.
                              *     
                              *      IF 'MESS' IS PRESENT, PROGRAM WILL TYPE 'TYPE MESSAGE'     
                              *      AND WAIT FOR INPUT.    
                              *     
                              *     
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* 
                  
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                  
                  
                  
      00000  712543606060     ZEL   
      00001  222324252360     BCDEC 
      00002  512426436760     RDFLX 
      00003  444664456360     MOUNT 
      00004  644446644563     UMOUNT
      00005  246242255160     DSKER 
                  
                      000001  UBIT   BOOL    1             ON IF 'UMOUNT' COMMAND.  
                      000002  CBIT   BOOL    2             ON IF CHANNEL SPECIFIED. 
                      000004  RBIT   BOOL    4             ON IF 'RING' PARAMETER SPECIFIED.    
                      000010  MBIT   BOOL    10            ON IF MESSAGE DESIRED.   
                      000020  DBIT   BOOL    20            ON IF MESSAGE TO BE READ FROM DISK.  
                      000100  FBIT   BOOL    100           ON IF USER IS FIB. 
                  
                  
1            MOUNT AND UMOUNT COMMANDS FOR FOREGROUND.                           11/23/69 1425.5 PAGE 2     
                           PICK UP PARAMETERS AND SET UP.                           
                  
      00006  0057 00  777777         RIR     /             RESET RIGHT HALF INDICATORS    
                  
      00007                          CALL    SETBRK(CHN)   SET A BREAK LEVEL  
      00007  0074 00 4 00305         TSX     SETBRK,4                                                         .002
      00010  3 00000 0 00213         PAR     CHN                                                              .004
                  
      00011                          CALL    FERRTN        SET ERROR RETURN   
      00011  0074 00 4 00306         TSX     FERRTN,4                                                         .002
      00012  0 00000 0 00227         PZE     ERROR         ..     
                  
      00013                          CALL    WHOAMI((CBUFF,,4)) CHECK FOR FIB USAGE 
      00013  0074 00 4 00307         TSX     WHOAMI,4                                                         .002
      00014  3 00004 0 00261         PAR     CBUFF,,4                                                         .004
      00015 -0500 00 0 00264         CAL     CBUFF+3       GET 'UNITID' 
      00016  0322 00 0 00353         ERA     =H(FIB)       ..     
      00017 -0100 00 0 00021         TNZ     *+2           ..     
      00020  0055 00  000100         SIR     FBIT          SET FIB INDIC.     
                  
      00021                          CALL    GETCLS((CBUFF,,0)) FILL BUFFER WITH COMMAND LINE   
      00021  0074 00 4 00310         TSX     GETCLS,4                                                         .002
      00022  3 00000 0 00261         PAR     CBUFF,,0                                                         .004
                  
      00023 -0500 00 0 00261         CAL     CBUFF         SEE WHO WE ARE     
      00024  0322 00 0 00347         ERA     =HUMOUNT      ..     
      00025 -0100 00 0 00042         TNZ     MOUNT)        PARTING
                  
      00026  0055 00  000001         SIR     UBIT          SET UMOUNT INDIC.  
      00027  0500 00 0 00343         CLA     =H     D      FIX UP MESSAGE     
      00030  0560 00 0 00336         LDQ     =HISMOUN      FOR DISMOUNT COMMENT     
      00031 -0603 00 0 00235         DST     MESSAG        ..     
      00032  0500 00 0 00346         CLA     =HT TAPE      ..     
      00033  0601 00 0 00237         STO     MESSAG+2      ..     
      00034 -0774 00 1 00002         AXC     2,1           XR1 IS COMMAND BUFFER INDEX    
      00035 -0500 00 0 00262         CAL     CBUFF+1       GET THE UNIT NUMBER
      00036 -0340 00 0 00342         LAS     =H   ALL      CHECK FOR 'UMOUNT ALL'   
      00037  0020 00 0 00041         TRA     *+2           ..     
      00040  0020 00 0 00063         TRA     ALL           ..     
      00041  0020 00 0 00050         TRA     JOIN          AND JOIN     
                  
      00042 -0774 00 1 00003  MOUNT) AXC     3,1           ..     
      00043 -0500 00 0 00262         CAL     CBUFF+1       GET THE TAPE REEL I.D.   
      00044  0602 00 0 00237         SLW     REEL          ..     
      00045  0322 00 0 00120         ERA     FENCE         NO FENCE ALLOWED   
      00046  0100 00 0 00217         TZE     BADA          ..     
                  
      00047 -0500 00 0 00263         CAL     CBUFF+2       GET THE UNIT NUMBER
      00050  0602 00 0 00230  JOIN   SLW     TEM           ..     
      00051  0322 00 0 00120         ERA     FENCE         AGAIN NO FENCE     
      00052  0100 00 0 00217         TZE     BADA          ..     
                              UNITNO =       $ZEL(TEM)     STRIP LEADING BLANKS     
      00053  0074 00 4 00000         TSX     $ZEL,4                                                           .003
      00054  3 00000 0 00230         PAR     TEM                                                              .005
      00055  0601 00 0 00232         STO     UNITNO                                                           .002
      00056 -0500 00 0 00232         CAL     UNITNO        CHECK FOR NUMERIC PARAMETER    
      00057 -0320 00 0 00344         ANA     =H            ..     
1            MOUNT AND UMOUNT COMMANDS FOR FOREGROUND.                           11/23/69 1425.5 PAGE 3     
                           PICK UP PARAMETERS AND SET UP.                           
                  
      00060 -0100 00 0 00222         TNZ     BAD           AIN'T NO SUCH THINGS AS ALPHABETIC NOS.    
      00061                          CALL    $BCDEC(UNITNO) CONVERT TO BINARY 
      00061  0074 00 4 00001         TSX     $BCDEC,4                                                         .002
      00062  3 00000 0 00232         PAR     UNITNO                                                           .004
      00063  0602 00 0 00232  ALL    SLW     UNITNO        ..     
                  
      00064 -0500 00 1 00261  LOOP   CAL     CBUFF,1       GET NEXT PARAMETER 
      00065  0602 00 0 00230         SLW     TEM           ..     
      00066                          LKP     TBL,2,TRA     SEARCH FOR PARAMETER IN TABLE  
      00066  0774 00 2 00012         AXT     NTBL,2                                                           .002
      00067 -0340 00 2 00122         LAS     TBL+NTBL,2                                                       .002
      00070  0020 00 0 00072         TRA     *+2                                                              .002
      00071  0020 00 2 00123         TRA     TBL+NTBL+1,2                                                     .002
      00072  2 00002 2 00067         TIX     *-3,2,2                                                          .002
                  
      00073  0054 00  000003  NOT    RFT     CBIT+UBIT     LOOKS LIKE BETTER BE CHANNO    
      00074  0020 00 0 00222         TRA     BAD           IF WE GOT ONE, THIS NO GOOD    
                              CHANNO =       $ZEL(TEM)     STRIP LEADING BLANKS     
      00075  0074 00 4 00000         TSX     $ZEL,4                                                           .003
      00076  3 00000 0 00230         PAR     TEM                                                              .005
      00077  0601 00 0 00231         STO     CHANNO                                                           .002
      00100 -0500 00 0 00231         CAL     CHANNO        CHECK FOR NUMBER   
      00101 -0320 00 0 00344         ANA     =H            ..     
      00102 -0100 00 0 00222         TNZ     BAD           ..     
                              CHANNO =       $BCDEC(CHANNO) CONVERT TO BINARY 
      00103  0074 00 4 00001         TSX     $BCDEC,4                                                         .003
      00104  3 00000 0 00231         PAR     CHANNO                                                           .005
      00105  0601 00 0 00231         STO     CHANNO                                                           .002
      00106  0055 00  000002         SIR     CBIT          SET INDIC.   
      00107  1 77777 1 00064         TXI     LOOP,1,-1     NEXT PARAMETER     
                  
                  
                       00110  TBL    SYN     *             TABLE OF OPTIONAL PARAMETERS.  
                  
      00110                          TTBL    (NORING)RING.  
      00110  454651314527            BCI     1,NORING                                                         .002
      00111  0020 00 0 00142         TRA     RING.                                                            .002
      00112                          TTBL    (  RING)RING.  
      00112  606051314527            BCI     1,  RING                                                         .002
      00113  0020 00 0 00142         TRA     RING.                                                            .002
      00114                          TTBL    (  MESS)MESS.  
      00114  606044256262            BCI     1,  MESS                                                         .002
      00115  0020 00 0 00122         TRA     MESS.                                                            .002
      00116                          TTBL    ((MESS))MESS.. 
      00116  744425626234            BCI     1,(MESS)                                                         .002
      00117  0020 00 0 00126         TRA     MESS..                                                           .002
      00120  777777777777     FENCE  VFD     O36//    
      00121  0021 00 0 00153         XIT     DONE     
                  
                       00012  NTBL   EQU     *-TBL    
                  
      00122  0054 00  000030  MESS.  RFT     MBIT+DBIT     CHECK VALIDITY     
      00123  0020 00 0 00222         TRA     BAD           ..     
      00124  0055 00  000010         SIR     MBIT          SET MESSAGE INDIC. 
      00125  1 77777 1 00064         TXI     LOOP,1,-1     GO GET NEXT  
1            MOUNT AND UMOUNT COMMANDS FOR FOREGROUND.                           11/23/69 1425.5 PAGE 4     
                           PICK UP PARAMETERS AND SET UP.                           
                  
      00126  0054 00  000030  MESS.. RFT     MBIT+DBIT     MESSAGE IS ON DISK 
      00127  0020 00 0 00222         TRA     BAD           ..     
      00130  0055 00  000030         SIR     MBIT+DBIT     SET INDIC.   
                  
      00131 -0500 00 1 00262         CAL     CBUFF+1,1     GET NEXT PARAMETER 
      00132  0602 00 0 00233         SLW     NAME1         FIRST NAME OF FILE 
      00133  0322 00 0 00120         ERA     FENCE         ..     
      00134  0100 00 0 00217         TZE     BADA          ..     
      00135 -0500 00 1 00263         CAL     CBUFF+2,1     SECOND NAME  
      00136  0602 00 0 00234         SLW     NAME2         ..     
      00137  0322 00 0 00120         ERA     FENCE         ..     
      00140  0100 00 0 00217         TZE     BADA          ..     
      00141  1 77775 1 00064         TXI     LOOP,1,-3     GO ON TO NEXT
                  
      00142  0054 00  000004  RING.  RFT     RBIT          RING ARGUMENT, SEE IF WE GOT ONE     
      00143  0020 00 0 00222         TRA     BAD           CAN'T HAVE 2 
      00144  0055 00  000004         SIR     RBIT          ..     
      00145  0560 00 0 00230         LDQ     TEM           GET PARAMETER
      00146 -0500 00 0 00344         CAL     =H            TRICKY, HUH  
      00147 -0765 00 0 00030         LGR     24            ..     
      00150 -0773 00 0 00030         RQL     24            ..     
      00151 -0620 00 0 00241         SLQ     RING          AND PLACE IN MESSAGE     
      00152  1 77777 1 00064         TXI     LOOP,1,-1     NEXT, PLEASE 
                  
1            MOUNT AND UMOUNT COMMANDS FOR FOREGROUND.                           11/23/69 1425.5 PAGE 5     
                           READ MESSAGE, IF NECESSARY.                              
                  
      00153  0056 00  000010  DONE   RNT     MBIT          SEE IF MESS REQUIRED     
      00154  0020 00 0 00201         TRA     CALL          NO     
                  
      00155  0054 00  000020         RFT     DBIT          SEE IF MESSAGE IS ON DISK
      00156  0020 00 0 00164         TRA     RDISK         YES, READ IT FROM DISK   
                  
      00157                          COMENT  TYPE,1,(TYPE.),A     
      00157  0074 00 4 00311         TSX     WRFLXA,4                                                         .003
      00160  3 00001 0 00312         PAR     TYPE,,1                                                          .005
      00161                          CALL    $RDFLX((BUFF,,14)) READ THE MESSAGE    
      00161  0074 00 4 00002         TSX     $RDFLX,4                                                         .002
      00162  3 00016 0 00243         PAR     BUFF,,14                                                         .004
      00163  0020 00 0 00201         TRA     CALL          ..     
                  
      00164                   RDISK  CALL    OPEN(=HR,NAME1,NAME2) OPEN THE FILE    
      00164  0074 00 4 00313         TSX     OPEN,4                                                           .002
      00165  3 00000 0 00341         PAR     =HR                                                              .004
      00166  3 00000 0 00233         PAR     NAME1                                                            .004
      00167  3 00000 0 00234         PAR     NAME2                                                            .004
                  
      00170                          CALL    RDFILE(NAME1,NAME2,=0(BUFF,,12)*+1) READ THE CARD  
      00170  0074 00 4 00314         TSX     RDFILE,4                                                         .002
      00171  3 00000 0 00233         PAR     NAME1                                                            .004
      00172  3 00000 0 00234         PAR     NAME2                                                            .004
      00173  3 00000 0 00331         PAR     =0                                                               .004
      00174  3 00014 0 00243         PAR     BUFF,,12                                                         .004
      00175  3 00000 0 00176         PAR     *+1                                                              .004
                  
      00176                          CALL    CLOSE(NAME1,NAME2) AND CLOSE THE FILE  
      00176  0074 00 4 00315         TSX     CLOSE,4                                                          .002
      00177  3 00000 0 00233         PAR     NAME1                                                            .004
      00200  3 00000 0 00234         PAR     NAME2                                                            .004
1            MOUNT AND UMOUNT COMMANDS FOR FOREGROUND.                           11/23/69 1425.5 PAGE 6     
                           CALL MOUNT OR UMOUNT.                                    
                  
      00201  0054 00  000001  CALL   RFT     UBIT          SEE WHO TO CALL    
      00202  0020 00 0 00210         TRA     UMT           SO, WE DISMOUNT    
                  
      00203                   MNT    CALL    $MOUNT(CHANNO,UNITNO(MESSAG,,20))
      00203  0074 00 4 00003         TSX     $MOUNT,4                                                         .002
      00204  3 00000 0 00231         PAR     CHANNO                                                           .004
      00205  3 00000 0 00232         PAR     UNITNO                                                           .004
      00206  3 00024 0 00235         PAR     MESSAG,,20                                                       .004
      00207  0021 00 0 00213         XIT     CHN           EXIT TO CHNCOM     
                  
      00210                   UMT    CALL    $UMOUNT(UNITNO(MESSAG,,20))
      00210  0074 00 4 00004         TSX     $UMOUNT,4                                                        .002
      00211  3 00000 0 00232         PAR     UNITNO                                                           .004
      00212  3 00024 0 00235         PAR     MESSAG,,20                                                       .004
                  
      00213                   CHN    CALL    WRFLX((*,,0)) TYPE A C.R.  
      00213  0074 00 4 00316         TSX     WRFLX,4                                                          .002
      00214  3 00000 0 00214         PAR     *,,0                                                             .004
                  
      00215                          CALL    CHNCOM(0)     EXIT TO CHNCOM     
      00215  0074 00 4 00317         TSX     CHNCOM,4                                                         .002
      00216  3 00000 0 00000         PAR     0                                                                .004
1            MOUNT AND UMOUNT COMMANDS FOR FOREGROUND.                           11/23/69 1425.5 PAGE 7     
                           ERROR MESSAGES.                                          
                  
      00217                   BADA   COMENT  NOTNUF,5,(INCOMPLETE SET OF PARAMETERS.)     
      00217  0074 00 4 00316         TSX     WRFLX,4                                                          .003
      00220  3 00005 0 00320         PAR     NOTNUF,,5                                                        .005
      00221  0021 00 0 00213         XIT     CHN           ..     
                  
      00222 -0500 00 0 00230  BAD    CAL     TEM           GET OFFENDING PARAMETER  
      00223  0602 00 0 00330         SLW     ILPAR+3       ..     
      00224                          COMENT  ILPAR,4,(INVALID ARGUMENT..      )     
      00224  0074 00 4 00316         TSX     WRFLX,4                                                          .003
      00225  3 00004 0 00325         PAR     ILPAR,,4                                                         .005
      00226  0021 00 0 00213         XIT     CHN           ..     
                  
      00227  0021 00 0 00005  ERROR  XIT     $DSKER        CHAIN TO PRNTER    
                  
1            MOUNT AND UMOUNT COMMANDS FOR FOREGROUND.                           11/23/69 1425.5 PAGE 8     
                           STORAGE AND CONSTANTS.                                   
                  
      00230  0 00000 0 00000  TEM    PZE  
      00231  0 00000 0 00000  CHANNO PZE  
      00232  0 00000 0 00000  UNITNO PZE  
      00233  0 00000 0 00000  NAME1  PZE  
      00234  0 00000 0 00000  NAME2  PZE  
                  
                  
      00235  604446644563     MESSAG BCI     2, MOUNT TAPE  
      00237  606060606060     REEL   BCI     2,       WITH  
      00241  454660513145     RING   BCI     2,NO RING.     
      00243  606060606060     BUFF   BCI ,
      00255  606060606060            BCI     4, 
                  
      00261                   CBUFF  BSS     20 
                  
                  
      00305                          RMT     *             REMOTE SEQUENCES   
      00305  0101 00 0 00345  SETBRK TIA     =HSETBRK                                                         .002
      00306  0101 00 0 00334  FERRTN TIA     =HFERRTN                                                         .002
      00307  0101 00 0 00350  WHOAMI TIA     =HWHOAMI                                                         .002
      00310  0101 00 0 00335  GETCLS TIA     =HGETCLS                                                         .002
      00311  0101 00 0 00351  WRFLXA TIA     =HWRFLXA                                                         .002
      00312  637047253360     TYPE   BCI     1,TYPE.                                                          .002
      00313  0101 00 0 00337  OPEN   TIA     =HOPEN                                                           .002
      00314  0101 00 0 00340  RDFILE TIA     =HRDFILE                                                         .002
      00315  0101 00 0 00333  CLOSE  TIA     =HCLOSE                                                          .002
      00316  0101 00 0 00352  WRFLX  TIA     =HWRFLX                                                          .002
      00317  0101 00 0 00332  CHNCOM TIA     =HCHNCOM                                                         .002
      00320  314523464447     NOTNUF BCI     5,INCOMPLETE SET OF PARAMETERS.                                  .002
      00325  314565214331     ILPAR  BCI     4,INVALID ARGUMENT..                                             .002
                  
                                     END  
                  
        LITERALS  
      00331  000000000000     
      00332  233045234644     
      00333  234346622560     
      00334  262551516345     
      00335  272563234362     
      00336  316244466445     
      00337  464725456060     
      00340  512426314325     
      00341  516060606060     
      00342  606060214343     
      00343  606060606024     
      00344  606060606060     
      00345  622563225142     
      00346  636063214725     
      00347  644446644563     
      00350  663046214431     
      00351  665126436721     
      00352  665126436760     
      00353  742631223460     
1            MOUNT AND UMOUNT COMMANDS FOR FOREGROUND.                           11/23/69 1425.5 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        354 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         63    ALL    40
        222    BAD    60,   74,  102,  123,  127,  143
        213    CHN    10,  207,  221,  226
        203    MNT      
         73    NOT      
        110    TBL    67,   71,  110,  122
        230    TEM    50,   54,   65,   76,  145,  222
        210    UMT   202
          0    ZEL    53,   75
        217   BADA    46,   52,  134,  140
        243   BUFF   162,  174
        201   CALL   154,  163
          2   CBIT     6,   73,  106
         20   DBIT     6,  122,  126,  130,  155
        153   DONE   121
        100   FBIT     6,   20
         50   JOIN    41
         64   LOOP   107,  125,  141,  152
         10   MBIT     6,  122,  124,  126,  130,  153
         12   NTBL    66,   67,   71,  122
        313   OPEN   164
          4   RBIT     6,  142,  144
        237   REEL    44
        241   RING   151
        312   TYPE   160
          1   UBIT     6,   26,   73,  201
          1  BCDEC    61,  103
        261  CBUFF    14,   15,   22,   23,   35,   43,   47,   64,  131,  135
        315  CLOSE   176
          5  DSKER   227
        227  ERROR    12
        120  FENCE    45,   51,  133,  137
        325  ILPAR   223,  225
        122  MESS.   115
          3  MOUNT   203
        233  NAME1   132,  166,  171,  177
        234  NAME2   136,  167,  172,  200
          2  RDFLX   161
        164  RDISK   156
        142  RING.   111,  113
        316  WRFLX   213,  217,  224
        231 CHANNO    77,  100,  104,  105,  204
        317 CHNCOM   215
        306 FERRTN    11
        310 GETCLS    21
        235 MESSAG    31,   33,  206,  212
        126 MESS..   117
         42 MOUNT)    25
        320 NOTNUF   220
        314 RDFILE   170
        305 SETBRK     7
1            MOUNT AND UMOUNT COMMANDS FOR FOREGROUND.                           11/23/69 1425.5 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          4 UMOUNT   210
        232 UNITNO    55,   56,   62,   63,  205,  211
        307 WHOAMI    13
        311 WRFLXA   157
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




VERIFY   BCD 11/23/69 1439.9    2674         00000    
1            VERIFY AND LABEL COMMANDS FOR FOREGROUND.                           11/23/69 1428.2 PAGE 1     
                  
                  
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* 
                              *     
                              *      USAGE -    
                              *     
                              *      VERIFY  UNITNO  - NAME1  NAME2 -   
                              *      LABEL   UNITNO  - NAME1  NAME2 -   
                              *     
                              *      WHERE -    
                              *     
                              *      UNITNO = LOGICAL UNIT NO. OF TAPE TO BE LABELLED/VERIFIED. 
                              *      NAME1  = PRIMARY NAME OF FILE CONTAINING LABEL.
                              *      NAME2  = SECONDARY NAME OF FILE CONTAINING LABEL.    
                              *     
                              *      IF NO FILE NAME WAS SPECIFIED,  THE PROGRAM WILL ASK 
                              *      FOR THE LABEL AND READ IT FROM CONSOLE.  
                              *      OTHERWISE, THE LABEL WILL BE READ FROM A FILE. 
                              *     
                              *     
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* 
                  
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                  
                              GTCM   MACRO   A,B,C    
                              A      =L      GETCOM(B)
                                     ERA     FENCE    
                                     TZE     C  
                              GTCM   END  
                  
1            VERIFY AND LABEL COMMANDS FOR FOREGROUND.                           11/23/69 1428.2 PAGE 2     
                  
                  
      00000  246242255160     DSKER 
      00001  434164626360     LJUST 
      00002  712543606060     ZEL   
      00003  222324252360     BCDEC 
      00004  512426436760     RDFLX 
                  
      00005                          CALL    SETBRK(Q)     SET A BREAK LEVEL  
      00005  0074 00 4 00130         TSX     SETBRK,4                                                         .002
      00006  3 00000 0 00075         PAR     Q                                                                .004
                  
      00007                          CALL    FERRTN($DSKER) SET FILE SYSTEM ERROR RETURN  
      00007  0074 00 4 00131         TSX     FERRTN,4                                                         .002
      00010  3 00000 0 00000         PAR     $DSKER                                                           .004
                  
                              CNAME  =L      GETCOM(0)     SAVE COMMAND NAME  
      00011  0074 00 4 00132         TSX     GETCOM,4                                                         .003
      00012  3 00000 0 00000         PAR     0                                                                .005
      00013  0602 00 0 00113         SLW     CNAME                                                            .002
                  
                              CNAME  =       $LJUST(CNAME) MUST BE LEFT-JUSTIFIED   
      00014  0074 00 4 00001         TSX     $LJUST,4                                                         .003
      00015  3 00000 0 00113         PAR     CNAME                                                            .005
      00016  0601 00 0 00113         STO     CNAME                                                            .002
                  
      00017                          GTCM    TEM,1,INCOMP  GET UNIT NUMBER    
      00017  0074 00 4 00132         TSX     GETCOM,4                                                         .004
      00020  3 00000 0 00001         PAR     1                                                                .006
      00021  0602 00 0 00117         SLW     TEM                                                              .003
                              UNITNO =       $ZEL(TEM)     STRIP LEADING BLANKS     
      00024  0074 00 4 00002         TSX     $ZEL,4                                                           .003
      00025  3 00000 0 00117         PAR     TEM                                                              .005
      00026  0601 00 0 00112         STO     UNITNO                                                           .002
      00027 -0320 00 0 00170         ANA     =H            IT IS A LEGAL NUMBER     
      00030 -0100 00 0 00105         TNZ     BAD           AIN'T NO SUCH THING AS ALPHABETIC NUMBERS  
                  
                              UNITNO =       $BCDEC(UNITNO) NOW CONVERT TO BINARY   
      00031  0074 00 4 00003         TSX     $BCDEC,4                                                         .003
      00032  3 00000 0 00112         PAR     UNITNO                                                           .005
      00033  0601 00 0 00112         STO     UNITNO                                                           .002
                  
      00034                          GTCM    N1,2,RDLBL    CHECK FOR FILE NAME GIVEN
      00034  0074 00 4 00132         TSX     GETCOM,4                                                         .004
      00035  3 00000 0 00002         PAR     2                                                                .006
      00036  0602 00 0 00114         SLW     N1                                                               .003
      00041                          GTCM    N2,3,INCOMP   ..     
      00041  0074 00 4 00132         TSX     GETCOM,4                                                         .004
      00042  3 00000 0 00003         PAR     3                                                                .006
      00043  0602 00 0 00115         SLW     N2                                                               .003
                  
      00046                          CALL    OPEN(=HR,N1,N2) OPEN THE FILE    
      00046  0074 00 4 00133         TSX     OPEN,4                                                           .002
      00047  3 00000 0 00167         PAR     =HR                                                              .004
      00050  3 00000 0 00114         PAR     N1                                                               .004
      00051  3 00000 0 00115         PAR     N2                                                               .004
1            VERIFY AND LABEL COMMANDS FOR FOREGROUND.                           11/23/69 1428.2 PAGE 3     
                  
      00052                          CALL    RDFILE(N1,N2,=0(LBL,,4)*+1) READ 4 WORDS     
      00052  0074 00 4 00134         TSX     RDFILE,4                                                         .002
      00053  3 00000 0 00114         PAR     N1                                                               .004
      00054  3 00000 0 00115         PAR     N2                                                               .004
      00055  3 00000 0 00155         PAR     =0                                                               .004
      00056  3 00004 0 00120         PAR     LBL,,4                                                           .004
      00057  3 00000 0 00060         PAR     *+1                                                              .004
      00060                          CALL    CLOSE(N1,N2)  AND CLOSE THE FILE 
      00060  0074 00 4 00135         TSX     CLOSE,4                                                          .002
      00061  3 00000 0 00114         PAR     N1                                                               .004
      00062  3 00000 0 00115         PAR     N2                                                               .004
                  
      00063  0020 00 0 00070         TRA     TRYAG         NOW GO LABEL/VERIFY THE TAPE   
                  
                  
      00064                   RDLBL  COMENT  T,2,(TYPE LABEL.),A ASK FOR LABEL
      00064  0074 00 4 00136         TSX     WRFLXA,4                                                         .003
      00065  3 00002 0 00137         PAR     T,,2                                                             .005
      00066                          CALL    $RDFLX((LBL,,4)) READ THE LABEL  
      00066  0074 00 4 00004         TSX     $RDFLX,4                                                         .002
      00067  3 00004 0 00120         PAR     LBL,,4                                                           .004
                  
      00070 -0774 00 4 00071  TRYAG  AXC     *+1,4         SIMULATED TSX
      00071  0101 00 0 00113         TIA     CNAME         TO A-CORE WE GO    
      00072  3 00000 0 00112         PAR     UNITNO        ..     
      00073  3 00004 0 00120         PAR     LBL,,4        ..     
      00074  3 00000 0 00077         PAR     ERR           ..     
                  
      00075                   Q      CALL    CHNCOM(0)     EXIT TO CHNCOM     
      00075  0074 00 4 00141         TSX     CHNCOM,4                                                         .002
      00076  3 00000 0 00000         PAR     0                                                                .004
1            VERIFY AND LABEL COMMANDS FOR FOREGROUND.                           11/23/69 1428.2 PAGE 4     
                  
      00077 -0500 00 0 00165  ERR    CAL     =HPRNTER      COMMAND IN AC
      00100  0560 00 0 00162         LDQ     =O-51         PARAMETER IN MQ    
      00101                          CALL    NEXCOM        AND EXIT TO NEXCOM 
      00101  0074 00 4 00142         TSX     NEXCOM,4                                                         .002
                  
      00102                   INCOMP COMENT  ICSA,5(INCOMPLETE SET OF PARAMETERS.)  
      00102  0074 00 4 00143         TSX     WRFLX,4                                                          .003
      00103  3 00005 0 00144         PAR     ICSA,,5                                                          .005
      00104  0021 00 0 00075         XIT     Q  
                  
      00105 -0500 00 0 00117  BAD    CAL     TEM
      00106  0602 00 0 00154         SLW     ILPAR+3  
      00107                          COMENT  ILPAR,4,(INVALID ARGUMENT..)     
      00107  0074 00 4 00143         TSX     WRFLX,4                                                          .003
      00110  3 00004 0 00151         PAR     ILPAR,,4                                                         .005
      00111  0021 00 0 00075         XIT     Q  
1            VERIFY AND LABEL COMMANDS FOR FOREGROUND.                           11/23/69 1428.2 PAGE 5     
                  
      00112  0 00000 0 00000  UNITNO PZE  
      00113  0 00000 0 00000  CNAME  PZE  
      00114  0 00000 0 00000  N1     PZE  
      00115  0 00000 0 00000  N2     PZE  
      00116  777777777777     FENCE  VFD     O36//    
      00117  0 00000 0 00000  TEM    PZE  
                  
      00120  606060606060     LBL    BCI     4, 
                  
      00124                   WHOBUF BSS     4  
                  
                  
      00130                          RMT     *             REMOTE SEQUENCES   
      00130  0101 00 0 00171  SETBRK TIA     =HSETBRK                                                         .002
      00131  0101 00 0 00160  FERRTN TIA     =HFERRTN                                                         .002
      00132  0101 00 0 00161  GETCOM TIA     =HGETCOM                                                         .002
      00133  0101 00 0 00164  OPEN   TIA     =HOPEN                                                           .002
      00134  0101 00 0 00166  RDFILE TIA     =HRDFILE                                                         .002
      00135  0101 00 0 00157  CLOSE  TIA     =HCLOSE                                                          .002
      00136  0101 00 0 00172  WRFLXA TIA     =HWRFLXA                                                         .002
      00137  637047256043     T      BCI     2,TYPE LABEL.                                                    .002
      00141  0101 00 0 00156  CHNCOM TIA     =HCHNCOM                                                         .002
      00142  0101 00 0 00163  NEXCOM TIA     =HNEXCOM                                                         .002
      00143  0101 00 0 00173  WRFLX  TIA     =HWRFLX                                                          .002
      00144  314523464447     ICSA   BCI     5,INCOMPLETE SET OF PARAMETERS.                                  .002
      00151  314565214331     ILPAR  BCI     4,INVALID ARGUMENT..                                             .002
                  
                                     END  
                  
        LITERALS  
      00155  000000000000     
      00156  233045234644     
      00157  234346622560     
      00160  262551516345     
      00161  272563234644     
      00162  400000000051     
      00163  452567234644     
      00164  464725456060     
      00165  475145632551     
      00166  512426314325     
      00167  516060606060     
      00170  606060606060     
      00171  622563225142     
      00172  665126436721     
      00173  665126436760     
1            VERIFY AND LABEL COMMANDS FOR FOREGROUND.                           11/23/69 1428.2 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        174 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         75      Q     6,  104,  111
        137      T    65
        114     N1    36,   50,   53,   61
        115     N2    43,   51,   54,   62
        105    BAD    30
         77    ERR    74
        120    LBL    56,   67,   73
        117    TEM    21,   25,  105
          2    ZEL    24
        144   ICSA   103
        133   OPEN    46
          3  BCDEC    31
        135  CLOSE    60
        113  CNAME    13,   15,   16,   71
          0  DSKER    10
        116  FENCE    22,   37,   44
        151  ILPAR   106,  110
          1  LJUST    14
          4  RDFLX    66
         64  RDLBL    40
         70  TRYAG    63
        143  WRFLX   102,  107
        141 CHNCOM    75
        131 FERRTN     7
        132 GETCOM    11,   17,   34,   41
        102 INCOMP    23,   45
        142 NEXCOM   101
        134 RDFILE    52
        130 SETBRK     5
        112 UNITNO    26,   32,   33,   72
        124 WHOBUF      
        136 WRFLXA    64
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




TAPFIL   BCD 11/23/69 1439.9    2774         00000    
1            TAPFIL COMMAND FOR FOREGROUND.                                      11/23/69 1439.6 PAGE 1     
                  
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* 
                              *     
                              *      USAGE -    
                              *     
                              *      TAPFIL  NAME1  NAME2  UNITNO  -FILENO-   
                              *     
                              *      WHERE -    
                              *     
                              *      NAME1  = PRIMARY NAME OF FILE.     
                              *      NAME2  = SECONDARY NAME.     
                              *      UNITNO = LOGICAL UNIT NO. OF TAPE. 
                              *      FILENO = FILE NUMBER ON TAPE.
                              *     
                              *      IF 'FILENO' IS NOT GIVEN, IT IS ASSUMED  
                              *              TO BE ZERO.    
                              *     
                              *     
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* 
                  
                  
                              GTCM   MACRO   A,B,C    
                              A      =L      GETCOM(B)
                                     ERA     FENCE    
                                     TZE     C  
                              GTCM   END  
1            TAPFIL COMMAND FOR FOREGROUND.                                      11/23/69 1439.6 PAGE 2     
                  
                  
      00000  712543606060     ZEL   
      00001  222324252360     BCDEC 
      00002  242543256325     DELETE
                  
      00003                          CALL    SETBRK(Q)     SET A BREAK LEVEL  
      00003  0074 00 4 00150         TSX     SETBRK,4                                                         .002
      00004  3 00000 0 00075         PAR     Q                                                                .004
                  
      00005                          GTCM    NAME1,1,BADA  GET PRIMARY NAME   
      00005  0074 00 4 00151         TSX     GETCOM,4                                                         .004
      00006  3 00000 0 00001         PAR     1                                                                .006
      00007  0602 00 0 00135         SLW     NAME1                                                            .003
      00012                          GTCM    NAME2,2,BADA  AND SECONDARY NAME 
      00012  0074 00 4 00151         TSX     GETCOM,4                                                         .004
      00013  3 00000 0 00002         PAR     2                                                                .006
      00014  0602 00 0 00137         SLW     NAME2                                                            .003
                  
      00017                          GTCM    TEM,3,BADA    GET UNIT NUMBER    
      00017  0074 00 4 00151         TSX     GETCOM,4                                                         .004
      00020  3 00000 0 00003         PAR     3                                                                .006
      00021  0602 00 0 00130         SLW     TEM                                                              .003
                              UNITNO =       $ZEL(TEM)     STRIP LEADING BLANKS     
      00024  0074 00 4 00000         TSX     $ZEL,4                                                           .003
      00025  3 00000 0 00130         PAR     TEM                                                              .005
      00026  0601 00 0 00125         STO     UNITNO                                                           .002
      00027 -0320 00 0 00204         ANA     =H            CHECK FOR ZONE BITS
      00030 -0100 00 0 00120         TNZ     BAD           ..     
                              UNITNO =       $BCDEC(UNITNO) CONVERT TO BINARY 
      00031  0074 00 4 00001         TSX     $BCDEC,4                                                         .003
      00032  3 00000 0 00125         PAR     UNITNO                                                           .005
      00033  0601 00 0 00125         STO     UNITNO                                                           .002
                  
      00034                          GTCM    TEM,4,DONE    GET FILE NO. , IF ANY    
      00034  0074 00 4 00151         TSX     GETCOM,4                                                         .004
      00035  3 00000 0 00004         PAR     4                                                                .006
      00036  0602 00 0 00130         SLW     TEM                                                              .003
                              FILENO =       $ZEL(TEM)     STRIP BLANKS 
      00041  0074 00 4 00000         TSX     $ZEL,4                                                           .003
      00042  3 00000 0 00130         PAR     TEM                                                              .005
      00043  0601 00 0 00126         STO     FILENO                                                           .002
      00044 -0320 00 0 00204         ANA     =H            AND CHECK FOR ZONE BITS  
      00045 -0100 00 0 00120         TNZ     BAD
                              FILENO =       $BCDEC(FILENO) CONVERT TO BINARY 
      00046  0074 00 4 00001         TSX     $BCDEC,4                                                         .003
      00047  3 00000 0 00126         PAR     FILENO                                                           .005
      00050  0601 00 0 00126         STO     FILENO                                                           .002
                  
      00051                   DONE   CALL    FSTATE(NAME1,NAME2(TEM,,4)DEL)   
      00051  0074 00 4 00152         TSX     FSTATE,4                                                         .002
      00052  3 00000 0 00135         PAR     NAME1                                                            .004
      00053  3 00000 0 00137         PAR     NAME2                                                            .004
      00054  3 00004 0 00130         PAR     TEM,,4                                                           .004
      00055  3 00000 0 00062         PAR     DEL                                                              .004
      00056 -0500 00 0 00133         CAL     DEVICE        CHECK FOR DISK/DRUM FILE 
1            TAPFIL COMMAND FOR FOREGROUND.                                      11/23/69 1439.6 PAGE 3     
                  
      00057  0402 00 0 00173         SUB     =3            ..     
      00060  0100 00 0 00062         TZE     *+2           ..     
      00061 -0120 00 0 00102         TMI     DSKFL         GO ASK TO DELETE DISK FILE     
                  
      00062                   DEL    CALL    $DELETE(NAME1,NAME2,*,Q) TRY TO DELETE OLD FILE    
      00062  0074 00 4 00002         TSX     $DELETE,4                                                        .002
      00063  3 00000 0 00135         PAR     NAME1                                                            .004
      00064  3 00000 0 00137         PAR     NAME2                                                            .004
      00065  3 00000 0 00065         PAR     *                                                                .004
      00066  3 00000 0 00075         PAR     Q                                                                .004
                  
      00067                          CALL    TAPFIL(NAME1,NAME2,UNITNO,FILENO,ERR)  
      00067  0074 00 4 00153         TSX     TAPFIL,4                                                         .002
      00070  3 00000 0 00135         PAR     NAME1                                                            .004
      00071  3 00000 0 00137         PAR     NAME2                                                            .004
      00072  3 00000 0 00125         PAR     UNITNO                                                           .004
      00073  3 00000 0 00126         PAR     FILENO                                                           .004
      00074  3 00000 0 00077         PAR     ERR                                                              .004
                  
      00075                   Q      CALL    CHNCOM(0)     EXIT TO CHNCOM     
      00075  0074 00 4 00154         TSX     CHNCOM,4                                                         .002
      00076  3 00000 0 00000         PAR     0                                                                .004
1            TAPFIL COMMAND FOR FOREGROUND.                                      11/23/69 1439.6 PAGE 4     
                  
      00077 -0500 00 0 00202  ERR    CAL     =HPRNTER      CHAIN TO PRNTER COMMAND  
      00100  0560 00 0 00200         LDQ     =O-51         MASK FOR PRNTER    
      00101                          CALL    NEXCOM        ..     
      00101  0074 00 4 00155         TSX     NEXCOM,4                                                         .002
                  
      00102                   DSKFL  COMENT  DOYOU,12,,A   ASK TO DELETE DISK FILE  
      00102  0074 00 4 00156         TSX     WRFLXA,4                                                         .003
      00103  3 00014 0 00134         PAR     DOYOU,,12                                                        .005
                  
      00104                          CALL    RDFLXA((TEM,,1)) READ ANSWER     
      00104  0074 00 4 00157         TSX     RDFLXA,4                                                         .002
      00105  3 00001 0 00130         PAR     TEM,,1                                                           .004
      00106 -0500 00 0 00130         CAL     TEM           ..     
      00107  0771 00 0 00022         ARS     18            ..     
      00110  0322 00 0 00174         ERA     =H000YES      CHECK FOR 'YES'    
      00111 -0100 00 0 00075         TNZ     Q             QUIT IF NOT  
      00112  0774 00 4 00172         AXT     =0,4          MAKE DELETE QUIET  
      00113  0634 00 4 00065         SXA     DEL+3,4       ..     
      00114  0020 00 0 00062         TRA     DEL           NOW DELETE THE FILE
                  
      00115                   BADA   COMENT  NOTNUF,5,(INCOMPLETE SET OF PARAMETERS.)     
      00115  0074 00 4 00160         TSX     WRFLX,4                                                          .003
      00116  3 00005 0 00161         PAR     NOTNUF,,5                                                        .005
      00117  0021 00 0 00075         XIT     Q             ..     
                  
      00120 -0500 00 0 00130  BAD    CAL     TEM           NON-NUMERICAL ARGUMENT   
      00121  0602 00 0 00171         SLW     ILPAR+3       ..     
      00122                          COMENT  ILPAR,4,(INVALID ARGUMENT..)     
      00122  0074 00 4 00160         TSX     WRFLX,4                                                          .003
      00123  3 00004 0 00166         PAR     ILPAR,,4                                                         .005
      00124  0021 00 0 00075         XIT     Q             ..     
1            TAPFIL COMMAND FOR FOREGROUND.                                      11/23/69 1439.6 PAGE 5     
                  
      00125  0 00000 0 00000  UNITNO PZE  
      00126  0 00000 0 00000  FILENO PZE     0  
      00127  777777777777     FENCE  VFD     O36//    
      00130                   TEM    BSS     3  
      00133                   DEVICE BSS     1  
                  
      00134  464324255160     DOYOU  BCI     1,OLDER  
      00135  0 00000 0 00000  NAME1  PZE  
      00136  605757575757            VFD     O36/605757575757     
      00137  0 00000 0 00000  NAME2  PZE  
      00140  603162602431            BCI     8, IS DISK/DRUM FILE. DO YOU WISH TO DELETE IT -   
                  
                  
      00150                          RMT     *             REMOTE SEQUENCES   
      00150  0101 00 0 00205  SETBRK TIA     =HSETBRK                                                         .002
      00151  0101 00 0 00177  GETCOM TIA     =HGETCOM                                                         .002
      00152  0101 00 0 00176  FSTATE TIA     =HFSTATE                                                         .002
      00153  0101 00 0 00206  TAPFIL TIA     =HTAPFIL                                                         .002
      00154  0101 00 0 00175  CHNCOM TIA     =HCHNCOM                                                         .002
      00155  0101 00 0 00201  NEXCOM TIA     =HNEXCOM                                                         .002
      00156  0101 00 0 00207  WRFLXA TIA     =HWRFLXA                                                         .002
      00157  0101 00 0 00203  RDFLXA TIA     =HRDFLXA                                                         .002
      00160  0101 00 0 00210  WRFLX  TIA     =HWRFLX                                                          .002
      00161  314523464447     NOTNUF BCI     5,INCOMPLETE SET OF PARAMETERS.                                  .002
      00166  314565214331     ILPAR  BCI     4,INVALID ARGUMENT..                                             .002
                  
                                     END  
                  
        LITERALS  
      00172  000000000000     
      00173  000000000003     
      00174  000000702562     
      00175  233045234644     
      00176  266263216325     
      00177  272563234644     
      00200  400000000051     
      00201  452567234644     
      00202  475145632551     
      00203  512426436721     
      00204  606060606060     
      00205  622563225142     
      00206  632147263143     
      00207  665126436721     
      00210  665126436760     
1            TAPFIL COMMAND FOR FOREGROUND.                                      11/23/69 1439.6 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        211 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         75      Q     4,   66,  111,  117,  124
        120    BAD    30,   45
         62    DEL    55,  113,  114
         77    ERR    74
        130    TEM    21,   25,   36,   42,   54,  105,  106,  120
          0    ZEL    24,   41
        115   BADA    11,   16,   23
         51   DONE    40
          1  BCDEC    31,   46
        134  DOYOU   103
        102  DSKFL    61
        127  FENCE    10,   15,   22,   37
        166  ILPAR   121,  123
        135  NAME1     7,   52,   63,   70
        137  NAME2    14,   53,   64,   71
        160  WRFLX   115,  122
        154 CHNCOM    75
          2 DELETE    62
        133 DEVICE    56
        126 FILENO    43,   47,   50,   73
        152 FSTATE    51
        151 GETCOM     5,   12,   17,   34
        155 NEXCOM   101
        161 NOTNUF   116
        157 RDFLXA   104
        150 SETBRK     3
        153 TAPFIL    67
        125 UNITNO    26,   32,   33,   72
        156 WRFLXA   102
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




TTPEEK   BCD 09/18/68 2320.5    3631         00000    
1       TTPEEK COMMAND FOR CTSS                            JIM BIXBY 4/11/68                     PAGE 1     
                  
                  
                  
                                             USAGE -- 'TTPEEK'    
                                                   CAUSES THE PRINTING OF DATE, TIME,     
                                                   TIMES ALLOTTED AND USED BY SHIFT, AND  
                                                   STORAGE ALLOTTED AND USED BY DEVICE.   
                  
                                             TO LOAD THE COMMAND --     
                                                   FAP TTPEEK (LIST)    
                                                   NCLOAD TTPEEK (LIBE) XLIBE 
                                                   SAVE TTPEEK    
                  
                  
                                             EQU'S -- CHANGE THESE TO CHANGE THE SHIFT, NUMBER OF     
                                                      STORAGE DEVICES, ETC    
                  
        TRANSFER VECTOR 
      00000  665126436760     WRFLX 
      00001  272563634460     GETTM 
      00002  234644434623     COMLOC
      00003  272563434623     GETLOC
      00004  242526222360     DEFBC 
      00005  227125436060     BZEL  
      00006  626346512725     STORGE
      00007  233045234644     CHNCOM
                  
                       00005  SHIFTS EQU     5             NUMBER OF ACCOUNTING SHIFTS    
                       00003  UNITS  EQU     3             NUMBER OF SECONDARY STORAGE DEVICES  
                  
1       TTPEEK COMMAND FOR CTSS                            JIM BIXBY 4/11/68                     PAGE 2     
                           MACROS                                                   
                  
                  
                                             * * * * * * * * * * * * * * * * * *    
                                             * TCONV - TO CONVERT 60THS TO BCD *    
                                             * * * * * * * * * * * * * * * * * *    
                  
                              UCONV  MACRO
                                     XCA                   ARG IN AC. MOVE TO MQ    
                                     ZAC  
                                     DVP     =360          TO DIVIDE IT BY 360
                                     STQ     TEMP     
                                     TSX     $DEFBC,4      CONVERT TO BCD     
                                     PTH     TEMP     
                                     STO     TEMP     
                                     TSX     $BZEL,4       AND BLANK THE LEADING ZEROS    
                                     PTH     TEMP     
                                     XCA  
                                     LGL     30            GET FIRST 5 CHARACTERS   
                                     ALS     6             MAKE ROOM FOR '.'  
                                     ORA     =H00000.      AND PUT IT IN
                                     LGL     6             GET LAST CHARACTER 
                              UCONV  END  
                  
                  
                              TCONV  MACRO
                                     UCONV
                                     ARS     12 
                                     ORA     =H  0000      THIS IS THE ALLOTTED FORM
                                     SLW     TEMP          MAKE SURE AT LEAST '0' IS THERE
                                     ERA     =H 
                                     TNZ     *+3
                                     CAL     =H     0 
                                     TRA     *+2
                                     CAL     TEMP     
                              TCONV  END  
                  
1       TTPEEK COMMAND FOR CTSS                            JIM BIXBY 4/11/68                     PAGE 3     
                           INITIALIZE AND PRINT THE HEADING                         
                  
                  
      00010  0074 00 4 00000         TSX     $WRFLX,4      GIVE A CARRIAGE RETURN TO START
      00011  3 00000 0 00000         PTH     0,,0     
                  
      00012  0074 00 4 00001         TSX     $GETTM,4      GET THE DATE AND TIME FOR PRINTING   
      00013  3 00000 0 00264         PTH     DATE     
      00014  3 00000 0 00265         PTH     TIME     
                  
      00015  0074 00 4 00002         TSX     $COMLOC,4     GET THE CORE-A COMMON ADDRESS OF THE USER  
      00016  3 00000 0 00346         PTH     =HUSER   
      00017  0621 00 0 00021         STA     USER     
                  
      00020  0074 00 4 00003         TSX     $GETLOC,4     AND THEN PICK UP THE ACTUAL USER NUMBER    
      00021  0 00000 0 00000  USER   PZE     ** 
      00022  0602 00 0 00326         SLW     USERNO   
                  
      00023  0074 00 4 00002         TSX     $COMLOC,4     GET THE ADDRESS OF ARRAY 'UTIME'     
      00024  3 00000 0 00347         PTH     =HUTIME  
      00025  0400 00 0 00326         ADD     USERNO        ADD IN THE USERNO TO GET HIS TIME ADDRESS  
      00026  0621 00 0 00030         STA     GTUSD    
                  
      00027  0074 00 4 00003         TSX     $GETLOC,4     AND THEN PICK UP THE TIME USED 
      00030  0 00000 0 00000  GTUSD  PZE     ** 
                  
                  
      00031                          UCONV                 CONVERT THE TIME USED TO BCD   
      00047  0602 00 0 00270         SLW     TUSED         AND STORE IN THE MESSAGE 
                  
      00050  0074 00 4 00000         TSX     $WRFLX,4      WRITE THE DATE, TIME MESSAGE   
      00051  3 00005 0 00264         PTH     DATE,,5  
                  
      00052  0074 00 4 00000         TSX     $WRFLX,4      GIVE ANOTHER CARRIAGE RETURN   
      00053  3 00000 0 00000         PTH     0,,0     
                  
      00054  0074 00 4 00000         TSX     $WRFLX,4      AND THEN WRITE THE TIME HEADINGS     
      00055  3 00004 0 00271         PTH     LINE1,,4 
      00056  0074 00 4 00000         TSX     $WRFLX,4 
      00057  3 00004 0 00275         PTH     LINE2,,4 
                  
1       TTPEEK COMMAND FOR CTSS                            JIM BIXBY 4/11/68                     PAGE 4     
                           GET AND PRINT THE TIMES USED AND ALLOTTED BY SHIFT       
                  
                  
                  
                                             GET THE VALUE OF N, THE COMMON ARRAY SIZE    
                  
      00060  0074 00 4 00002         TSX     $COMLOC,4     USE COMLOC   
      00061  3 00000 0 00337         PTH     =HN
      00062  0400 00 0 00332         ADD     =1 
      00063  0737 00 1 00000         PAC     ,1            AND PUT INTO THE ADDRESS CHANGER     
      00064 -0634 00 1 00075         SXD     N,1           ..     
                  
                  
                                             GET THE CORE-A ADDRESS OF THE TAU VECTOR     
                  
      00065  0074 00 4 00002         TSX     $COMLOC,4
      00066  3 00000 0 00345         PTH     =HTAU1   
      00067  0400 00 0 00326         ADD     USERNO        ADD TO GET THIS USERS TAU VECTOR     
      00070  0734 00 1 00000         PAX     ,1            AND PUT THIS ADDRESS IN XR1    
                  
                  
      00071  0774 00 2 00005         AXT     SHIFTS,2      DO THE LOOP SHIFTS TIMES 
                  
      00072  0634 00 1 00074  GETTAU SXA     TI,1          PUT THE TAU ADDRESS IN THE GETLOC CALL     
      00073  0074 00 4 00003         TSX     $GETLOC,4     PICK UP THE TIME FOR THIS SHIFT
      00074  0 00000 0 00000  TI     PZE     **            FILLED IN ABOVE    
                  
                  
      00075  1 00000 1 00076  N      TXI     *+1,1,**      MOVE TO NEXT TAU ENTRY   
      00076 -0130 00 0 00000         XCL                   PUT TIME INTO THE MQ     
      00077 -0754 00 0 00000         ZAC  
      00100 -0763 00 0 00016         LGL     14            GET THE ALLOTTED TIME    
      00101  0602 00 0 00302         SLW     ALLOT    
                  
      00102 -0773 00 0 00026         RQL     22            REPOSITION THE USED TIME 
      00103 -0600 00 0 00304         STQ     USED          AND SAVE THAT TOO  
      00104 -0100 00 0 00107         TNZ     *+3           PRINT IF ALLOTTED NONZERO
      00105  0131 00 0 00000         XCA                   OTHERWISE CHECK USED FOR ZERO  
      00106  0100 00 0 00201         TZE     TAUTIX        IF BOTH ZERO, SKIP THIS SHIFT  
      00107  0754 00 2 00000         PXA     ,2            COMPUTE THE SHIFT WE ARE WORKING ON  
      00110 -0760 00 0 00003         SSM  
      00111  0400 00 0 00327         ADD     MXSHFT   
      00112  0601 00 0 00325         STO     TEMP     
      00113  0074 00 4 00004         TSX     $DEFBC,4      AND CONVERT THE SHIFT TO BCD   
      00114  3 00000 0 00325         PTH     TEMP     
      00115  0601 00 0 00325         STO     TEMP     
      00116  0074 00 4 00005         TSX     $BZEL,4       WITH LEADING BLANKS
      00117  3 00000 0 00325         PTH     TEMP     
      00120  0131 00 0 00000         XCA                   POSITION THE BCD SHIFT PROPERLY
      00121 -0773 00 0 00030         RQL     24 
      00122 -0500 00 0 00334         CAL     =O57          PUT IN A NULL
      00123 -0765 00 0 00006         LGR     6  
      00124 -0600 00 0 00301         STQ     TLINE         AND PUT THE RESULT INTO THE MESSAGE  
1       TTPEEK COMMAND FOR CTSS                            JIM BIXBY 4/11/68                     PAGE 5     
                           GET AND PRINT THE TIMES USED AND ALLOTTED BY SHIFT       
                  
                  
      00125  0500 00 0 00302         CLA     ALLOT         CONVERT ALLOT TO PRINTABLE FORM
      00126  0767 00 0 00010         ALS     8             AFTER CHANGING TO 60TH-S 
      00127  0400 00 0 00336         ADD     =1801         FUDGE UP     
      00130                          TCONV
      00156  0602 00 0 00302         SLW     ALLOT         AND SAVE FOR PRINTING    
                  
      00157  0500 00 0 00304         CLA     USED          CONVERT USED TO PRINTABLE FORM 
      00160                          UCONV
      00176  0602 00 0 00304         SLW     USED          AND SAVE     
                  
                  
      00177  0074 00 4 00000         TSX     $WRFLX,4      WRITE THE LINE FOR THIS SHIFT  
      00200  3 00004 0 00301         PTH     TLINE,,4      ..     
                  
      00201  2 00001 2 00072  TAUTIX TIX     GETTAU,2,1    AND DO ALL THE SHIFTS    
                  
                  
      00202  0074 00 4 00000         TSX     $WRFLX,4      THROW IN AN EXTRA CARRIAGE RETURN    
      00203  3 00000 0 00000         PTH     0,,0     
1       TTPEEK COMMAND FOR CTSS                            JIM BIXBY 4/11/68                     PAGE 6     
                           PRINT THE STORAGE INFORMATION                            
                  
                  
                  
      00204  0074 00 4 00000         TSX     $WRFLX,4      PRINT THE STORAGE HEADER LINES 
      00205  3 00003 0 00305         PTH     LINE3,,3 
      00206  0074 00 4 00000         TSX     $WRFLX,4 
      00207  3 00004 0 00311         PTH     LINE4,,4 
                  
                  
      00210  0774 00 1 00003         AXT     UNITS,1       AND DO LOOP FOR ALL STORAGE UNITS    
                  
      00211  0754 00 1 00000  DEV    PXA     ,1            GET THE NUMBER OF THIS UNIT    
      00212 -0760 00 0 00003         SSM  
      00213  0400 00 0 00330         ADD     DEVMAX   
      00214  0601 00 0 00320         STO     STOAG         AND SAVE IT  
                  
      00215  0074 00 4 00006         TSX     $STORGE,4     GET THE ALLOTMENT AND USED SPACE     
      00216  3 00000 0 00320         PTH     STOAG         FOR THE UNIT IN STOAG    
      00217  3 00000 0 00322         PTH     SALLOT   
      00220  3 00000 0 00324         PTH     SUSED    
                  
      00221  0500 00 0 00322         CLA     SALLOT        CHECK FOR ZERO ALLOTMENT 
      00222 -0100 00 0 00225         TNZ     SOMTHR        PRINT IF NOT ZERO  
      00223  0500 00 0 00324         CLA     SUSED         OTHERWISE CHECK USED     
      00224  0100 00 0 00257         TZE     STOLUP        AND SKIP PRINT IF NOT THERE    
                  
      00225  0074 00 4 00004  SOMTHR TSX     $DEFBC,4      CONVERT ALLOTMENT TO BCD 
      00226  3 00000 0 00322         PTH     SALLOT   
      00227  0601 00 0 00322         STO     SALLOT   
      00230  0074 00 4 00005         TSX     $BZEL,4       WITH LEADING BLANKS
      00231  3 00000 0 00322         PTH     SALLOT   
      00232  0601 00 0 00322         STO     SALLOT   
                  
                  
      00233  0074 00 4 00004         TSX     $DEFBC,4      CONVERT USED FIGURE TO BCD     
      00234  3 00000 0 00324         PTH     SUSED    
      00235  0601 00 0 00324         STO     SUSED    
      00236  0074 00 4 00005         TSX     $BZEL,4       WITH LEADING ZEROES
      00237  3 00000 0 00324         PTH     SUSED    
      00240  0601 00 0 00324         STO     SUSED    
                  
      00241 -0500 00 0 00324         CAL     SUSED         CHANGE '32767' TO '-1'   
      00242  0322 00 0 00340         ERA     =H 32767      IN BOTH PLACES     
      00243 -0100 00 0 00246         TNZ     *+3
      00244 -0500 00 0 00342         CAL     =H    -1 
      00245  0602 00 0 00324         SLW     SUSED    
      00246 -0500 00 0 00322         CAL     SALLOT   
      00247  0322 00 0 00340         ERA     =H 32767 
      00250 -0100 00 0 00253         TNZ     *+3
      00251 -0500 00 0 00342         CAL     =H    -1 
      00252  0602 00 0 00322         SLW     SALLOT   
                  
1       TTPEEK COMMAND FOR CTSS                            JIM BIXBY 4/11/68                     PAGE 7     
                           PRINT THE STORAGE INFORMATION                            
                  
      00253 -0500 00 1 00320         CAL     DEVICE+UNITS,1 GET THE NAME OF THE UNIT
      00254  0602 00 0 00320         SLW     STOAG         AND PUT IN THE MESSAGE   
                  
      00255  0074 00 4 00000         TSX     $WRFLX,4      WRITE OUT THE STORAGE LINE     
      00256  3 00005 0 00320         PTH     STOAG,,5 
                  
      00257  2 00001 1 00211  STOLUP TIX     DEV,1,1       AND DO ALL THE DEVICES   
                  
                  
      00260  0074 00 4 00000         TSX     $WRFLX,4      PRINT A C.R. WHEN DONE   
      00261  3 00000 0 00000         PTH     0,,0     
                  
                  
                  
      00262  0074 00 4 00007         TSX     $CHNCOM,4
      00263  3 00000 0 00331         PTH     =0 
1       TTPEEK COMMAND FOR CTSS                            JIM BIXBY 4/11/68                     PAGE 8     
                           STORAGE AND CONSTANTS                                    
                  
                  
                  
                                             * * * * * * * * *    
                                             * BCI CONSTANTS *    
                                             * * * * * * * * *    
                  
      00264                   DATE   BSS     1  
      00265                   TIME   BSS     1  
      00266  606331442560            BCI     2, TIME USED = 
      00267  646225246013     
      00270                   TUSED  BSS     1  
      00271  623031266360     LINE1  BCI     4,SHIFT       MINUTES
      00272  606060606060     
      00273  443145646325     
      00274  626060606060     
      00275  606060606060     LINE2  BCI     4,      ALLOTTED   USED    
      00276  214343466363     
      00277  252460606064     
      00300  622524606060     
      00301 -176060606060     TLINE  OCT     576060606060   
      00302                   ALLOT  BSS     1  
      00303 -175760606060            OCT     575760606060   
      00304                   USED   BSS     1  
      00305  606060606060     LINE3  BCI     4,      STORAGE
      00306  626346512127     
      00307  256060606060     
      00310  606060606060     
      00311  242565312325     LINE4  BCI     4,DEVICE   QUOTA   USED    
      00312  606060506446     
      00313  632160606064     
      00314  622524606060     
      00315  245164446060     DEVICE BCI     3,DRUM  DISK  TAPE   
      00316  243162426060     
      00317  632147256060     
      00320                   STOAG  BSS     1  
      00321 -206057575757            OCT     606057575757   
      00322                   SALLOT BSS     1  
      00323 -205757575757            OCT     605757575757   
      00324                   SUSED  BSS     1  
                  
                  
                                             * * * * * * * * * * * * * * * *  
                                             * OTHER STORAGE AND CONSTANTS *  
                                             * * * * * * * * * * * * * * * *  
                  
      00325                   TEMP   BSS     1  
      00326                   USERNO BSS     1  
      00327  0 00000 0 00006  MXSHFT PZE     SHIFTS+1 
      00330  0 00000 0 00004  DEVMAX PZE     UNITS+1  
                  
                                     END  
1       TTPEEK COMMAND FOR CTSS                            JIM BIXBY 4/11/68                     PAGE 9     
                           STORAGE AND CONSTANTS                                    
                  
        LITERALS  
      00331  000000000000     
      00332  000000000001     
      00333  000000000033     
      00334  000000000057     
      00335  000000000550     
      00336  000000003411     
      00337  456060606060     
      00340  600302070607     
      00341  606000000000     
      00342  606060604001     
      00343  606060606000     
      00344  606060606060     
      00345  632164016060     
      00346  646225516060     
      00347  646331442560     
1       TTPEEK COMMAND FOR CTSS                            JIM BIXBY 4/11/68                     PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        350 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         75      N    64
         74     TI    72
        211    DEV   257
          5   BZEL    40,  116,  137,  167,  230,  236
        264   DATE    13,   51
        325   TEMP    34,   36,   37,   41,  112,  114,  115,  117,  133,  135,  136,  140,  150,  155,  163,  165,  166
                     170
        265   TIME    14
        304   USED   103,  157,  176
         21   USER    17
        302  ALLOT   101,  125,  156
          4  DEFBC    35,  113,  134,  164,  225,  233
          1  GETTM    12
         30  GTUSD    26
        271  LINE1    55
        275  LINE2    57
        305  LINE3   205
        311  LINE4   207
        320  STOAG   214,  216,  254,  256
        324  SUSED   220,  223,  234,  235,  237,  240,  241,  245
        301  TLINE   124,  200
        270  TUSED    47
          3  UNITS    10,  210,  253,  330
          0  WRFLX    10,   50,   52,   54,   56,  177,  202,  204,  206,  255,  260
          7 CHNCOM   262
          2 COMLOC    15,   23,   60,   65
        315 DEVICE   253
        330 DEVMAX   213
          3 GETLOC    20,   27,   73
         72 GETTAU   201
        327 MXSHFT   111
        322 SALLOT   217,  221,  226,  227,  231,  232,  246,  252
          5 SHIFTS    10,   71,  327
        225 SOMTHR   222
        257 STOLUP   224
          6 STORGE   215
        201 TAUTIX   106
        326 USERNO    22,   25,   67
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




TYPSET   BCD 09/18/68 2320.5   45913         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  EDITOR   MAD            02/08/68    1745.3
-                 
                 ..  EDIT BY CONTEXT PROGRAM.                                                          LM00001    
                                                                                                       LM00002    
                 ..  J. H. SALTZER, NOVEMBER, 1964.                                                    LM00003    
                 ..  LAST MODIFICATION, APRIL, 1967.                                                   LM00004    
                 ..  MODIFIED OCTOBER, 1967 BY PETER R. BOS                                            LM00005    
                 ..  TO ALLOW SETTING BREAK CHARACTER 'MCHNG'                                          LM00006    
                                                                                                       LM00007    
                 .. DECLARATIONS.                                                                      LM00008    
                                                                                                       LM00009    
                  VECTOR VALUES FENCE = 777777777777K                                             *001 LM00010    
                  VECTOR VALUES RETURN = 55K                                                      *002 LM00011    
                  VECTOR VALUES IN = $(INPUT$                                                     *003 LM00012    
                  VECTOR VALUES IN1 = $(INPT1$                                                    *004 LM00013    
                  VECTOR VALUES BRIEF = 0B                                                        *005 LM00014    
                  VECTOR VALUES OK = 0B                                                           *006 LM00015    
                  VECTOR VALUES BUFSIZ = 360                                                      *007 LM00016    
                  DIMENSION LINE(361), EDLIN(361)                                                 *008 LM00017    
                  DIMENSION REDS(1), BLACKS(1)                                                    *009 LM00018    
                  DIMENSION ATNAM(2)                                                              *010 LM00019    
                  NORMAL MODE IS INTEGER                                                          *011 LM00020    
                  BOOLEAN OK, GLOBAL, FSTPAS                                                      *012 LM00021    
                  BOOLEAN CHNG, CLRSW, BRIEF                                                      *013 LM00022    
                                                                                                       LM00023    
      . . .      . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                           LM00024    
                                                                                                       LM00025    
                 ..  INITIALIZATION.                                                                   LM00026    
                                                                                                       LM00027    
                  SECOND NAME OF INTERMEDIATE FILES NOW PROGNO                                         LM00028    
                                                                                                       LM00029    
                  WHOAMI.(ATNAM(2)...2)                                                           *014 LM00030    
                  FI = ATNAM(1)                                                                   *015 LM00031    
                  GETVAL.(BLANK, TAB, DEFALT, MCHNG, REDS(1), BLACKS(1))                          *016 LM00032    
                  CLRNAM.(IN, FI, CHN, 1B)                                                        *017 LM00033    
                  CLRNAM.(IN1, FI, CHN, 1B)                                                       *018 LM00034    
                  ASSIGN.(IN, FI)                                                                 *019 LM00035    
                  OLDNAM = COMARG.(1)                                                             *020 LM00036    
                  OLDSEC = DEFALT                                                                 *021 LM00037    
                  WHENEVER OLDNAM .E. FENCE, TRANSFER TO INSERT                                   *022 LM00038    
                  OLDSEC = COMARG.(2)                                                             *023 LM00039    
                  WHENEVER OLDSEC .E. FENCE, OLDSEC = DEFALT                                      *024 LM00040    
                  SEEK.(OLDNAM, OLDSEC, INSERT)                                                   *025 LM00041    
                  FSTPAS = 1B                                                                     *026 LM00042    
                  OK = 1B                                                                         *027 LM00043    
                                                                                                       LM00044    
                 ..  ENTER EDIT MODE.                                                                  LM00045    
                                                                                                       LM00046    
      EDIT        WHENEVER .NOT. BRIEF, PRINT COMMENT $0E1D1I1T$                                  *028 LM00047    
                                                                                                       LM00048    
                 ..  OBTAIN NEXT REQUEST.                                                              LM00049    
                                                                                                       LM00050    
      NXRQ        COUNT = TYPEIN.(EDLIN, BUFSIZ)                                                  *029 LM00051    
                  WHENEVER EDLIN(1) .E. MCHNG .AND. COUNT .L. 3                                   *030 LM00052    
                1      , TRANSFER TO INSERT                                                       *030 LM00053    
                  WHENEVER COUNT .L. 2, TRANSFER TO NXRQ                                          *031 LM00054    
                  EDCT = 0                                                                        *032 LM00055    
                  CWD = GET.(0)                                                                   *033 LM00056    
                                                                                                       LM00057    
                  WHENEVER CWD .E. $DELETE$ .OR. CWD .E. $     D$                                 *034 LM00058    
                    N = BIN.(GET.(0))                                                             *035 LM00059    
                    THROUGH DREAD, FOR I = 1, 1, I .GE. N                                         *036 LM00060    
       DREAD          LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *037 LM00061    
                    LENGTH = 0                                                                    *038 LM00062    
                                                                                                       LM00063    
                  OR WHENEVER CWD .E. $  NEXT$ .OR. CWD .E. $     N$                              *039 LM00064    
                    N = BIN.(GET.(0))                                                             *040 LM00065    
                    WHENEVER N .E. 0, N = 1                                                       *041 LM00066    
                    THROUGH NXT, FOR I = 1, 1, I .G. N                                            *042 LM00067    
                      WRITE.(LINE, LENGTH)                                                        *043 LM00068    
                      WHENEVER .NOT. OK, CLSOUT.                                                  *044 LM00069    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *045 LM00070    
       NXT            CONTINUE                                                                    *046 LM00071    
                                                                                                       LM00072    
                  OR WHENEVER CWD .E. $INSERT$ .OR. CWD .E. $     I$                              *047 LM00073    
                    WRITE.(LINE, LENGTH)                                                          *048 LM00074    
                    TRANSFER TO RETYPE                                                            *049 LM00075    
                                                                                                       LM00076    
      INSERT        WHENEVER .NOT. BRIEF, PRINT COMMENT $0I1N1P1U1T$                              *050 LM00077    
       INPUT        COUNT = TYPEIN.(EDLIN, BUFSIZ)                                                *051 LM00078    
                    WHENEVER COUNT .L. 3 .AND. EDLIN(1) .E. MCHNG                                 *052 LM00079    
                1      , TRANSFER TO EDIT                                                         *052 LM00080    
                    WRITE.(LINE, LENGTH)                                                          *053 LM00081    
                    THROUGH MVLP, FOR I = 1, 1, I .G. COUNT                                       *054 LM00082    
       MVLP           LINE(I) = EDLIN(I)                                                          *055 LM00083    
                    LENGTH = COUNT                                                                *056 LM00084    
                    TRANSFER TO INPUT                                                             *057 LM00085    
                                                                                                       LM00086    
                  OR WHENEVER CWD .E. $BOTTOM$ .OR. CWD .E. $     B$                              *058 LM00087    
                    WRITE.(LINE, LENGTH)                                                          *059 LM00088    
                    LENGTH = 0                                                                    *060 LM00089    
                    WHENEVER OK, BOTTOM.                                                          *061 LM00090    
                    TRANSFER TO INSERT                                                            *062 LM00091    
                                                                                                       LM00092    
                  OR WHENEVER CWD .E. $APPEND$ .OR. CWD .E. $     A$                              *063 LM00093    
                    WHENEVER LENGTH .G. 0, LENGTH = LENGTH - 1                                    *064 LM00094    
                    TRANSFER TO APPEND                                                            *065 LM00095    
                                                                                                       LM00096    
                  OR WHENEVER CWD .E. $RETYPE$ .OR. CWD .E. $     R$                              *066 LM00097    
       RETYPE       LENGTH = 0                                                                    *067 LM00098    
      APPEND        THROUGH RPLC, FOR EDCT = EDCT + 1, 1, EDCT .G. COUNT                          *068 LM00099    
                      LENGTH = LENGTH + 1                                                         *069 LM00100    
       RPLC           LINE(LENGTH) = EDLIN(EDCT)                                                  *070 LM00101    
                                                                                                       LM00102    
                  OR WHENEVER CWD .E. $ ERASE$ .OR. CWD .E. $     E$                              *071 LM00103    
                    WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETERS.(EDLIN(EDCT+1))                     *072 LM00104    
                                                                                                       LM00105    
                  OR WHENEVER CWD .E. $  KILL$ .OR. CWD .E. $     K$                              *073 LM00106    
                    WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETKIL.(EDLIN(EDCT+1))                     *074 LM00107    
                                                                                                       LM00108    
                 ..  MODIFICATION ALLOWS SETTING 'MCHNG'. PRB.                                         LM00109    
                                                                                                       LM00110    
                  OR WHENEVER CWD .E. $ BREAK$ .OR. CWD .E. $    BR$                              *075 LM00111    
                    WHENEVER EDLIN(EDCT) .E. RETURN                                               *076 LM00112    
                      MCHNG = RETURN                                                              *077 LM00113    
                    OR WHENEVER EDLIN(EDCT+1) .NE. BLANK                                          *078 LM00114    
                      MCHNG = EDLIN(EDCT+1)                                                       *079 LM00115    
                    END OF CONDITIONAL                                                            *080 LM00116    
                                                                                                       LM00117    
                  OR WHENEVER CWD .E. $VERIFY$ .OR. CWD .E. $     V$                              *081 LM00118    
                    CWD = GET.(0)                                                                 *082 LM00119    
                    WHENEVER CWD .E. $    ON$                                                     *083 LM00120    
                      BRIEF = 0B                                                                  *084 LM00121    
                    OR WHENEVER CWD .E. $   OFF$                                                  *085 LM00122    
                      BRIEF = 1B                                                                  *086 LM00123    
                    END OF CONDITIONAL                                                            *087 LM00124    
                                                                                                       LM00125    
                  OR WHENEVER CWD .E. $LOCATE$ .OR. CWD .E. $     L$                              *088 LM00126    
                    LOCATE = 1                                                                    *089 LM00127    
                    TRANSFER TO FIND                                                              *090 LM00128    
                                                                                                       LM00129    
                  OR WHENEVER CWD .E. $  FIND$ .OR. CWD .E. $     F$                              *091 LM00130    
                    LOCATE = 0                                                                    *092 LM00131    
      FIND          WHENEVER EDCT+1 .GE. COUNT                                                    *093 LM00132    
                      COUNT = OCOUNT                                                              *094 LM00133    
                      EDCT = EDCT + 1                                                             *095 LM00134    
                    END OF CONDITIONAL                                                            *096 LM00135    
                    OCOUNT = COUNT                                                                *097 LM00136    
       NTFND        WRITE.(LINE, LENGTH)                                                          *098 LM00137    
                    WHENEVER  .NOT. OK, CLSOUT.                                                   *099 LM00138    
                    LENGTH = READ.(LINE, BUFSIZ, EOF)                                             *100 LM00139    
                    THROUGH LOCSCN, FOR K=0, 1,K.G.LOCATE*(LENGTH-COUNT+EDCT)                     *101 LM00140    
                      J = K                                                                       *102 LM00141    
                      THROUGH LOOK, FOR I = EDCT+1, 1, I .GE. COUNT                               *103 LM00142    
                        J = J + 1                                                                 *104 LM00143    
       TAGN             WHENEVER LINE(J) .E. EDLIN(I), TRANSFER TO LOOK                           *105 LM00144    
                        WHENEVER (LINE(J).E. TAB) .AND. (EDLIN(I) .E. BLANK)                      *106 LM00145    
                1        , TRANSFER TO LOOK                                                       *106 LM00146    
                        WHENEVER EDLIN(I-1) .NE. BLANK .OR. I .E. EDCT + 1                        *107 LM00147    
                1        , TRANSFER TO LOCSCN                                                     *107 LM00148    
                        WHENEVER LINE(J) .NE. BLANK .AND. LINE(J) .NE. TAB                        *108 LM00149    
                1        , TRANSFER TO LOCSCN                                                     *108 LM00150    
                        J = J + 1                                                                 *109 LM00151    
                        TRANSFER TO TAGN                                                          *110 LM00152    
       LOOK             WHENEVER I .E. EDCT+1, FNDST = J                                          *111 LM00153    
                      FNDND = J                                                                   *112 LM00154    
                      WHENEVER .NOT. BRIEF, PRNT.(FNDST, FNDND)                                   *113 LM00155    
                      TRANSFER TO NXRQ                                                            *114 LM00156    
        LOCSCN        CONTINUE                                                                    *115 LM00157    
                    TRANSFER TO NTFND                                                             *116 LM00158    
                                                                                                       LM00159    
                  OR WHENEVER CWD .E. $ PRINT$ .OR. CWD .E. $     P$                              *117 LM00160    
                    NPRNT = BIN.(GET.(0))                                                         *118 LM00161    
      PNTLP         WHENEVER LENGTH .E. 0                                                         *119 LM00162    
                      PRINT COMMENT $0N1O0 1C1U1R1R1E1N1T0 1L1I1N1E0.$                            *120 LM00163    
                    OTHERWISE                                                                     *121 LM00164    
                      TYPOUT.(LINE, LENGTH)                                                       *122 LM00165    
                    END OF CONDITIONAL                                                            *123 LM00166    
                    NPRNT = NPRNT - 1                                                             *124 LM00167    
                    WHENEVER NPRNT .G. 0                                                          *125 LM00168    
                      WRITE.(LINE, LENGTH)                                                        *126 LM00169    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *127 LM00170    
                      TRANSFER TO PNTLP                                                           *128 LM00171    
                    END OF CONDITIONAL                                                            *129 LM00172    
                                                                                                       LM00173    
                  OR WHENEVER CWD .E. $   TOP$ .OR. CWD .E. $     T$                              *130 LM00174    
       TOPLP        WRITE.(LINE, LENGTH)                                                          *131 LM00175    
                    WHENEVER OK, BOTTOM.                                                          *132 LM00176    
                    CLSOUT.                                                                       *133 LM00177    
                                                                                                       LM00178    
                  OR WHENEVER CWD .E. $CHANGE$ .OR. CWD .E. $     C$                              *134 LM00179    
                                                                                                       LM00180    
      . . .       . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          LM00181    
                                                                                                       LM00182    
                 ..  DELINEATE QUOTED STRINGS.                                                         LM00183    
                                                                                                       LM00184    
                    EDCT = EDCT+1                                                                 *135 LM00185    
                    QUOTE = EDLIN(EDCT)                                                           *136 LM00186    
                    STR1 = EDCT                                                                   *137 LM00187    
      QLOOP         THROUGH QLOOP, FOR EDCT = EDCT+1, 1,                                          *138 LM00188    
                1      (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                             *138 LM00189    
                    STR2 = EDCT                                                                   *139 LM00190    
      QLOOP1        THROUGH QLOOP1, FOR EDCT = EDCT+1, 1,                                         *140 LM00191    
                1      (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                             *140 LM00192    
                    EST2 = EDCT                                                                   *141 LM00193    
                                                                                                       LM00194    
                 .. CHECK FOR ITERATION COUNT AND GLOBAL REQUEST.                                      LM00195    
                                                                                                       LM00196    
                    EDCT = EDCT + 1                                                               *142 LM00197    
                    TEM = 1                                                                       *143 LM00198    
                    GLOBAL = 0B                                                                   *144 LM00199    
      ARGLP         CWD = GET.(0)                                                                 *145 LM00200    
                    WHENEVER CWD .E. $ $                                                          *146 LM00201    
                      TRANSFER TO SHIFT                                                           *147 LM00202    
                    OR WHENEVER CWD .E. $     G$                                                  *148 LM00203    
                      WHENEVER STR2 .NE. STR1+1, GLOBAL = 1B                                      *149 LM00204    
                    OTHERWISE                                                                     *150 LM00205    
                      TEM = BIN.(CWD)                                                             *151 LM00206    
                    END OF CONDITIONAL                                                            *152 LM00207    
                    TRANSFER TO ARGLP                                                             *153 LM00208    
                                                                                                       LM00209    
                 .. SHIFT LINE TO BOTTOM OF BUFFER.                                                    LM00210    
                                                                                                       LM00211    
       SHIFT        THROUGH MVDWN, FOR I = LENGTH, -1, I .L. 1                                    *154 LM00212    
      MVDWN           LINE(BUFSIZ+I-LENGTH) = LINE(I)                                             *155 LM00213    
                    DOWN = BUFSIZ-LENGTH+1                                                        *156 LM00214    
                    UP = 0                                                                        *157 LM00215    
                    CHNG = 0B                                                                     *158 LM00216    
                    CHST = LENGTH + 1                                                             *159 LM00217    
                    CHEND = LENGTH                                                                *160 LM00218    
                                                                                                       LM00219    
                 .. SEARCH FOR PRESENCE OF FIRST STRING.                                               LM00220    
                                                                                                       LM00221    
      SRCHLP        UP = UP + 1                                                                   *161 LM00222    
      SRTST           WHENEVER DOWN .G. BUFSIZ, TRANSFER TO GIVUP                                 *162 LM00223    
                      J = DOWN                                                                    *163 LM00224    
                      THROUGH COMPAR, FOR I = STR1+1, 1, I .GE. STR2                              *164 LM00225    
                        WHENEVER J .GE. BUFSIZ, TRANSFER TO GIVUP                                 *165 LM00226    
                        WHENEVER EDLIN(I) .NE. LINE(J), TRANSFER TO NOCOMP                        *166 LM00227    
       COMPAR           J = J + 1                                                                 *167 LM00228    
                      TRANSFER TO STFND                                                           *168 LM00229    
                                                                                                       LM00230    
      NOCOMP          LINE(UP) = LINE(DOWN)                                                       *169 LM00231    
                      DOWN = DOWN + 1                                                             *170 LM00232    
                    TRANSFER TO SRCHLP                                                            *171 LM00233    
                                                                                                       LM00234    
                 .. STRING FOUND, REPLACE WITH SECOND STRING.                                          LM00235    
                                                                                                       LM00236    
      STFND         CHNG = 1B                                                                     *172 LM00237    
                    DOWN = DOWN + (STR2-STR1-1)                                                   *173 LM00238    
                    CHST = UP                                                                     *174 LM00239    
                    THROUGH REPLAC, FOR I = STR2 + 1, 1, I .GE. EST2                              *175 LM00240    
                      LINE(UP) = EDLIN(I)                                                         *176 LM00241    
                      UP = UP + 1                                                                 *177 LM00242    
       REPLAC         WHENEVER UP .G. DOWN, TRANSFER TO GIVUP                                     *178 LM00243    
                    CHEND = UP - 1                                                                *179 LM00244    
                    WHENEVER GLOBAL, TRANSFER TO SRTST                                            *180 LM00245    
                                                                                                       LM00246    
                 .. MOVE REST OF LINE BACK UP.                                                         LM00247    
                                                                                                       LM00248    
      GIVUP         THROUGH FILOUT, FOR UP = UP, 1, DOWN .G. BUFSIZ                               *181 LM00249    
                      LINE(UP) = LINE(DOWN)                                                       *182 LM00250    
      FILOUT          DOWN = DOWN + 1                                                             *183 LM00251    
                    LENGTH = UP - 1                                                               *184 LM00252    
                    TEM = TEM - 1                                                                 *185 LM00253    
                    WHENEVER .NOT. BRIEF .AND. (TEM .G. 0 .THEN. CHNG)                            *186 LM00254    
                1        , PRNT.(CHST, CHEND)                                                     *186 LM00255    
                    CANON.(LINE, LENGTH, BUFSIZ)                                                  *187 LM00256    
                    WHENEVER TEM .G. 0                                                            *188 LM00257    
                      WRITE.(LINE, LENGTH)                                                        *189 LM00258    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *190 LM00259    
                      TRANSFER TO SHIFT                                                           *191 LM00260    
                    END OF CONDITIONAL                                                            *192 LM00261    
                                                                                                       LM00262    
      . . . .     . . . . . . . . . . . . . . . . . . . . . . . . . . . .                              LM00263    
                                                                                                       LM00264    
                  OR WHENEVER CWD .E. $ SPLIT$ .OR. CWD .E. $     S$                              *193 LM00265    
                    TOPNAM = GET.(0)                                                              *194 LM00266    
                    WHENEVER TOPNAM .E. $ $, TRANSFER TO NONAME                                   *195 LM00267    
                    WHENEVER TOPNAM .E. OLDNAM .AND. FSTPAS                                       *196 LM00268    
      NEWNM           PRINT COMMENT $0P1L1E1A1S1E0 1U1S1E0 1A1N1O1T1H1E1R0 1N1A                   *197 LM00269    
                1 1M1E0.$                                                                         *197 LM00270    
                      TRANSFER TO NXRQ                                                            *198 LM00271    
                    END OF CONDITIONAL                                                            *199 LM00272    
                    SECNAM = GET.(0)                                                              *200 LM00273    
                  WHENEVER SECNAM .E. $ $, SECNAM = OLDSEC                                        *201 LM00274    
                    CLRNAM.(TOPNAM, SECNAM, NEWNM, 1B)                                            *202 LM00275    
                    CLOSEW.                                                                       *203 LM00276    
                    RENAME.(IN, FI, TOPNAM, SECNAM)                                               *204 LM00277    
                    ASSIGN.(IN, FI)                                                               *205 LM00278    
                    OLDNAM = FENCE                                                                *206 LM00279    
                    TRANSFER TO TOPLP                                                             *207 LM00280    
                                                                                                       LM00281    
                  OR WHENEVER CWD .E. $  QUIT$ .OR. CWD .E. $     Q$                              *208 LM00282    
                    ENDRD.                                                                        *209 LM00283    
                    CLOSEW.                                                                       *210 LM00284    
                    DELFIL.(IN1, FI, DLQ1)                                                        *211 LM00285    
      DLQ1          DELFIL.(IN, FI, DLQ2)                                                         *212 LM00286    
      DLQ2          TRANSFER TO CHN                                                               *213 LM00287    
                                                                                                       LM00288    
                  OR WHENEVER CWD .E. $  FILE$                                                    *214 LM00289    
                    PRINAM = GET.(0)                                                              *215 LM00290    
                    CLRSW = 1B                                                                    *216 LM00291    
                    WHENEVER PRINAM .E. $ $                                                       *217 LM00292    
                      PRINAM = OLDNAM                                                             *218 LM00293    
                      SECNAM = OLDSEC                                                             *219 LM00294    
                      CLRSW = 0B                                                                  *220 LM00295    
                    OTHERWISE                                                                     *221 LM00296    
                      SECNAM = GET.(0)                                                            *222 LM00297    
                      WHENEVER SECNAM .E. $ $                                                     *223 LM00298    
                        SECNAM = OLDSEC                                                           *224 LM00299    
                      END OF CONDITIONAL                                                          *225 LM00300    
                    END OF CONDITIONAL                                                            *226 LM00301    
                    WHENEVER PRINAM .E. FENCE                                                     *227 LM00302    
      NONAME          PRINT COMMENT $0N1O0 1F1I1L1E0 1N1A1M1E0 1G1I1V1E1N0.$                      *228 LM00303    
                      TRANSFER TO NXRQ                                                            *229 LM00304    
                    END OF CONDITIONAL                                                            *230 LM00305    
                    WRITE.(LINE, LENGTH)                                                          *231 LM00306    
                    LENGTH = 0                                                                    *232 LM00307    
                    WHENEVER OK, BOTTOM.                                                          *233 LM00308    
                    CLRNAM.(PRINAM, SECNAM, NEWNM, CLRSW)                                         *234 LM00309    
                    CLOSEW.                                                                       *235 LM00310    
                    DELFIL.(IN1, FI, DL1)                                                         *236 LM00311    
      DL1           RENAME.(IN, FI, PRINAM, SECNAM)                                               *237 LM00312    
      CHN           EXIT.                                                                         *238 LM00313    
                                                                                                       LM00314    
                  OTHERWISE                                                                       *239 LM00315    
                    PRINT COMMENT $0N1O1T0 1A0 1R1E1Q1U1E1S1T0:$                                  *240 LM00316    
                    TYPOUT.(EDLIN, COUNT)                                                         *241 LM00317    
                                                                                                       LM00318    
                  END OF CONDITIONAL                                                              *242 LM00319    
                  TRANSFER TO NXRQ                                                                *243 LM00320    
                                                                                                       LM00321    
      EOF         PRINTCOMMENT $0E1N1D0 1O1F0 1F1I1L1E0 1R1E1A1C1H1E1D0 1B1Y0:$                   *244 LM00322    
                  TYPOUT.(EDLIN, COUNT)                                                           *245 LM00323    
                  LENGTH = 0                                                                      *246 LM00324    
                  OK = 0B                                                                         *247 LM00325    
                  TRANSFER TO NXRQ                                                                *248 LM00326    
                                                                                                       LM00327    
                 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                           LM00328    
                                                                                                       LM00329    
                 .. SUBROUTINES.                                                                       LM00330    
                                                                                                       LM00331    
       CLSOUT.   .. FUNCTION TO MOVE POINTER BACK TO TOP OF FILE.                                      LM00332    
                                                                                                       LM00333    
                  INTERNAL FUNCTION                                                               *249 LM00334    
                  ENTRY TO CLSOUT.                                                                *250 LM00335    
                    CLOSEW.                                                                       *251 LM00336    
                    DELFIL.(IN1, FI, DL2)                                                         *252 LM00337    
      DL2           CHFILE.(IN, FI, -0, IN1)                                                      *253 LM00338    
                    SEEK.(IN1, FI, CHN)                                                           *254 LM00339    
                    ASSIGN.(IN, FI)                                                               *255 LM00340    
                    OK = 1B                                                                       *256 LM00341    
                    LENGTH = 0                                                                    *257 LM00342    
                    FSTPAS = 0B                                                                   *258 LM00343    
                    FUNCTION RETURN                                                               *259 LM00344    
                  END OF FUNCTION                                                                 *260 LM00345    
                                                                                                       LM00346    
        GET.     .. FUNCTION TO OBTAIN ARGUMENT WORD IN HOLLERITH.                                     LM00347    
                                                                                                       LM00348    
                  INTERNAL FUNCTION                                                               *261 LM00349    
                  ENTRY TO GET.                                                                   *262 LM00350    
                    WORD = $ $                                                                    *263 LM00351    
      SCANLP        THROUGH SCANLP, FOR EDCT = EDCT, 1,                                           *264 LM00352    
                1   (EDLIN(EDCT+1).NE.BLANK) .OR. (EDCT+1.GE.COUNT)                               *264 LM00353    
       GTLP         EDCT = EDCT + 1                                                               *265 LM00354    
                    WHENEVER EDLIN(EDCT) .E. BLANK, FUNCTION RETURN WORD                          *266 LM00355    
                    WHENEVER EDLIN(EDCT) .E. TAB .OR. EDCT .GE. COUNT                             *267 LM00356    
                      EDCT = EDCT - 1                                                             *268 LM00357    
                      FUNCTION RETURN WORD                                                        *269 LM00358    
                    END OF CONDITIONAL                                                            *270 LM00359    
                    WORD = (WORD .LS. 6) .V. HOL.(EDLIN(EDCT))                                    *271 LM00360    
                    TRANSFER TO GTLP                                                              *272 LM00361    
                  END OF FUNCTION                                                                 *273 LM00362    
                                                                                                       LM00363    
       PRNT.     ..  FUNCTION TO PRINT A LINE WITH COLOR SHIFTS.                                       LM00364    
                                                                                                       LM00365    
                  INTERNAL FUNCTION(STAR, EN)                                                     *274 LM00366    
                  ENTRY TO PRNT.                                                                  *275 LM00367    
                    TYPOUT.(LINE, STAR-1)                                                         *276 LM00368    
                    TYPOUT.(REDS, 1)                                                              *277 LM00369    
                    TYPOUT.(LINE(STAR-1), EN-STAR+1)                                              *278 LM00370    
                    TYPOUT.(BLACKS, 1)                                                            *279 LM00371    
                    TYPOUT.(LINE(EN), LENGTH-EN)                                                  *280 LM00372    
                    FUNCTION RETURN                                                               *281 LM00373    
                  END OF FUNCTION                                                                 *282 LM00374    
                                                                                                       LM00375    
                  END OF PROGRAM                                                                  *283 LM00376    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   03713 TRANSFER VECTOR LENGTH  00030 PROGRAM BEGINS    01555
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      APPEND 00034   4        DLQ1   00041   4        GTLP   00047   4        NONAME 00056   4        RETYPE 00062   4  
      ARGLP  00035   4        DLQ2   00042   4        IN1    00673 A 1        NPRNT  01455   1        RPLC   00033   4  
      ATNAM  00073 A 1        DOWN   00110   1        INPUT  00050   4        N      01456   1        SCANLP 00033   4  
      BLACKS 00075 A 1        DREAD  00033   4        IN     00674 A 1        NTFND  00057   4        SECNAM 01470   1  
      BLANK  00076   1        EDCT   00111   1        INSERT 00051   4        NXRQ   00060   4        SHIFT  00063   4  
      BRIEF  00077 A 2        EDIT   00043   4        I      00675   1        NXT    00033   4        SRCHLP 00064   4  
      BUFSIZ 00100 A 1        EDLIN  00663 A 1        J      00676   1        OCOUNT 01457   1        SRTST  00065   4  
      CHEND  00101   1        EOF    00044   4        K      00677   1        OK     01460 A 2        STFND  00066   4  
      CHNG   00102   2        EST2   00664   1        LENGTH 00700   1        OLDNAM 01461   1        STR1   01471   1  
      CHN    00036   4        FENCE  00665 A 1        LINE   01452 A 1        OLDSEC 01462   1        STR2   01472   1  
      CHST   00103   1        FILOUT 00033   4        LOCATE 01453   1        PNTLP  00061   4        TAB    01473   1  
      CLRSW  00104   2        FIND   00045   4        LOCSCN 00052   4        PRINAM 01463   1        TAGN   00067   4  
      COMPAR 00033   4        FI     00666   1        LOOK   00053   4        QLOOP1 00033   4        TEM    01474   1  
      COUNT  00105   1        FNDND  00667   1        MCHNG  01454   1        QLOOP  00033   4        TOPLP  00070   4  
      CWD    00106   1        FNDST  00670   1        MVDWN  00033   4        QUOTE  01464   1        TOPNAM 01475   1  
      DEFALT 00107   1        FSTPAS 00671   2        MVLP   00033   4        REDS   01466 A 1        UP     01476   1  
      DL1    00037   4        GIVUP  00046   4        NEWNM  00054   4        REPLAC 00033   4        WORD   01477   1  
      DL2    00040   4        GLOBAL 00672   2        NOCOMP 00055   4        RETURN 01467 A 1                          
0FUNCTION DICTIONARY    
      ASSIGN 00000   1        BIN    00001   1        BOTTOM 00002   1        CANON  00003   1        CHFILE 00004   1  
      CLOSEW 00005   1        CLRNAM 00006   1        COMARG 00007   1        DELFIL 00010   1        ENDRD  00011   1  
      EXIT   00012   1        GETVAL 00013   1        HOL    00014   1        .PCOMT 00015   1        .SETUP 00016   1  
      READ   00017   1        RENAME 00020   1        SEEK   00021   1        SETERS 00022   1        SETKIL 00023   1  
      TYPEIN 00024   1        TYPOUT 00025   1        WHOAMI 00026   1        WRITE  00027   1        CLSOUT 00030   1  
      GET    00031   1        PRNT   00032   1                                                                          
0ABSOLUTE CONSTANTS     
 01504 +000000000006     01520 -206026314325     01524 -206050643163     01544 -206060606050     01553 -206247433163    
 01547 -206060606062     01536 -206060606027     01546 -206060606060     01510 +233021452725     01532 -206060606023    
 01552 -206060634647     01550 -206060606063     01517 -204751314563     01543 -206060606047     01521 -206026314524    
 01535 -206060606026     01513 -034623216325     01541 -206060606043     01525 -206060462626     01527 -206060604645    
 01554 -252551312670     01551 -206060606065     01515 -202251252142     01526 -206060602251     01522 -206042314343    
 01540 -206060606042     01516 -202551216225     01534 -206060606025     01514 -112563704725     01545 -206060606051    
 01505 +214747254524     01530 -206060606021     01506 +224663634644     01531 -206060606022     01512 +314562255163    
 01537 -206060606031     01523 -206045256763     01542 -206060606045     01511 +242543256325     01533 -206060606024    
 01500 +000000000000     01503 +000000000003     01502 +000000000002     01501 +000000000001     01507 +233000000000    
0STATEMENT DICTIONARY   
 00034 TXL -302146002133       00035 TXL -302676002673       00036 TXL -303402003401       00037 TXL -303401003374      
 00040 TXL -303460003451       00041 TXL -303301003275       00042 TXL -303302003301       00043 TXL -301645001637      
 00044 TXL -303430003416       00045 TXL -302334002327       00046 TXL -303117003105       00047 TXL -303543003540      
 00050 TXL -302026002022       00051 TXL -302022002014       00052 TXL -302506002505       00053 TXL -302475002465      
 00054 TXL -303226003214       00055 TXL -303032003026       00056 TXL -303351003340       00057 TXL -302346002343      
 00060 TXL -301651001645       00061 TXL -302527002524       00062 TXL -302133002131       00063 TXL -302734002722      
 00064 TXL -302764002761       00065 TXL -302771002764       00066 TXL -303040003036       00067 TXL -302424002416      
 00070 TXL -302575002572                                                                                                
0PROGRAM    
                 VECTOR VALUES FENCE = 777777777777K                                001  LM00010
 01555 TSX +0 07400 4 00016    00665     -3 77777 7 77777                                                               
                 VECTOR VALUES RETURN = 55K                                         002  LM00011
 01467     +0 00000 0 00055                                                                                             
                 VECTOR VALUES IN = $(INPUT$                                        003  LM00012
 00674     -3 43145 4 76463                                                                                             
                 VECTOR VALUES IN1 = $(INPT1$                                       004  LM00013
 00673     -3 43145 4 76301                                                                                             
                 VECTOR VALUES BRIEF = 0B                                           005  LM00014
 00077     +0 00000 0 00000                                                                                             
                 VECTOR VALUES OK = 0B                                              006  LM00015
 01460     +0 00000 0 00000                                                                                             
                 VECTOR VALUES BUFSIZ = 360                                         007  LM00016
 00100     +0 00000 0 00550                                                                                             
                 DIMENSION LINE(361), EDLIN(361)                                    008  LM00017
                 DIMENSION REDS(1), BLACKS(1)                                       009  LM00018
                 D'N ATNAM(2)                                                       010  LM00019
                 NORMAL MODE IS INTEGER                                             011  LM00020
                 BOOLEAN OK, GLOBAL, FSTPAS                                         012  LM00021
                 BOOLEAN CHNG, CLRSW, BRIEF                                         013  LM00022
                 WHOAMI.(ATNAM(2)...2)                                              014  LM00030
 01556 TSX +0 07400 4 00026    01557 TIX +2 01502 0 00071                                                               
                 FI = ATNAM(1)                                                      015  LM00031
 01560 CLA +0 50000 0 00072    01561 STO +0 60100 0 00666                                                               
                 GETVAL.(BLANK, TAB, DEFALT, MCHNG, REDS(1), BLACKS(1))             016  LM00032
 01562 TSX +0 07400 4 00013    01563 TXH +3 00000 0 00076    01564 TXH +3 00000 0 01473    01565 TXH +3 00000 0 00107   
 01566 TXH +3 00000 0 01454    01567 TXH +3 00000 0 01465    01570 TXH +3 00000 0 00074                                 
                 CLRNAM.(IN, FI, CHN, 1B)                                           017  LM00033
 01571 TSX +0 07400 4 00006    01572 TXH +3 00000 0 00674    01573 TXH +3 00000 0 00666    01574 TXH +3 00000 0 00036   
 01575 TXH +3 00000 0 01501                                                                                             
                 CLRNAM.(IN1, FI, CHN, 1B)                                          018  LM00034
 01576 TSX +0 07400 4 00006    01577 TXH +3 00000 0 00673    01600 TXH +3 00000 0 00666    01601 TXH +3 00000 0 00036   
 01602 TXH +3 00000 0 01501                                                                                             
                 ASSIGN.(IN, FI)                                                    019  LM00035
 01603 TSX +0 07400 4 00000    01604 TXH +3 00000 0 00674    01605 TXH +3 00000 0 00666                                 
                 OLDNAM = COMARG.(1)                                                020  LM00036
 01606 TSX +0 07400 4 00007    01607 TXH +3 00000 0 01501    01610 STO +0 60100 0 01461                                 
                 OLDSEC = DEFALT                                                    021  LM00037
 01611 CLA +0 50000 0 00107    01612 STO +0 60100 0 01462                                                               
                 WHENEVER OLDNAM .E. FENCE, TRANSFER TO INSERT                      022  LM00038
 01613 CLA +0 50000 0 01461    01614 SUB +0 40200 0 00665    01615 TNZ -0 10000 0 01617    01616 TRA +0 02000 0 00051   
                 OLDSEC = COMARG.(2)                                                023  LM00039
 01617 TSX +0 07400 4 00007    01620 TXH +3 00000 0 01502    01621 STO +0 60100 0 01462                                 
                 WHENEVER OLDSEC .E. FENCE, OLDSEC = DEFALT                         024  LM00040
 01622 CLA +0 50000 0 01462    01623 SUB +0 40200 0 00665    01624 TNZ -0 10000 0 01627    01625 CLA +0 50000 0 00107   
 01626 STO +0 60100 0 01462                                                                                             
                 SEEK.(OLDNAM, OLDSEC, INSERT)                                      025  LM00041
 01627 TSX +0 07400 4 00021    01630 TXH +3 00000 0 01461    01631 TXH +3 00000 0 01462    01632 TXH +3 00000 0 00051   
                 FSTPAS = 1B                                                        026  LM00042
 01633 CLA +0 50000 0 01501    01634 STO +0 60100 0 00671                                                               
                 OK = 1B                                                            027  LM00043
 01635 CLA +0 50000 0 01501    01636 STO +0 60100 0 01460                                                               
      EDIT       WHENEVER .NOT. BRIEF, PRINT COMMENT $0E1D1I1T$                     028  LM00047
 01637 ZET +0 52000 0 00077    01640 TRA +0 02000 0 01645    01641 TSX +0 07400 4 00015    01642     +0 00000 0 00002   
 01643     +0 02501 2 40131    01644     +0 16360 6 06060                                                               
      NXRQ       COUNT = TYPEIN.(EDLIN, BUFSIZ)                                     029  LM00051
 01645 TSX +0 07400 4 00024    01646 TXH +3 00000 0 00663    01647 TXH +3 00000 0 00100    01650 STO +0 60100 0 00105   
                 WHENEVER EDLIN(1) .E. MCHNG .AND. COUNT .L. 3                      030  LM00052
                1     , TRANSFER TO INSERT                                          030  LM00053
 01651 CLA +0 50000 0 00105    01652 SUB +0 40200 0 01503    01653 TZE +0 10000 0 01661    01654 TPL +0 12000 0 01661   
 01655 CLA +0 50000 0 00662    01656 SUB +0 40200 0 01454    01657 TNZ -0 10000 0 01661    01660 TRA +0 02000 0 00051   
                 WHENEVER COUNT .L. 2, TRANSFER TO NXRQ                             031  LM00054
 01661 CLA +0 50000 0 00105    01662 SUB +0 40200 0 01502    01663 TZE +0 10000 0 01666    01664 TPL +0 12000 0 01666   
 01665 TRA +0 02000 0 00060                                                                                             
                 EDCT = 0                                                           032  LM00055
 01666 CLA +0 50000 0 01500    01667 STO +0 60100 0 00111                                                               
                 CWD = GET.(0)                                                      033  LM00056
 01670 TSX +0 07400 4 00031    01671 TXH +3 00000 0 01500    01672 STO +0 60100 0 00106                                 
                 WHENEVER CWD .E. $DELETE$ .OR. CWD .E. $     D$                    034  LM00058
 01673 CLA +0 50000 0 00106    01674 SUB +0 40200 0 01533    01675 TZE +0 10000 0 01701    01676 CLA +0 50000 0 00106   
 01677 SUB +0 40200 0 01511    01700 TNZ -0 10000 0 01732                                                               
                   N = BIN.(GET.(0))                                                035  LM00059
 01701 TSX +0 07400 4 00031    01702 TXH +3 00000 0 01500    01703 STO +0 60100 0 03710    01704 TSX +0 07400 4 00001   
 01705 TXH +3 00000 0 03710    01706 STO +0 60100 0 01456                                                               
                   THROUGH DREAD, FOR I = 1, 1, I .GE. N                            036  LM00060
 01707 CLA +0 50000 0 01501    01710 STO +0 60100 0 00675    01711 TRA +0 02000 0 01715    01712 CLA +0 50000 0 00675   
 01713 ADD +0 40000 0 01501    01714 STO +0 60100 0 00675    01715 CLA +0 50000 0 00675    01716 SUB +0 40200 0 01456   
 01717 TZE +0 10000 0 01727    01720 TPL +0 12000 0 01727                                                               
       DREAD         LENGTH = READ.(LINE, BUFSIZ, EOF)                              037  LM00061
 01721 TSX +0 07400 4 00017    01722 TXH +3 00000 0 01452    01723 TXH +3 00000 0 00100    01724 TXH +3 00000 0 00044   
 01725 STO +0 60100 0 00700    01726 TRA +0 02000 0 01712                                                               
                   LENGTH = 0                                                       038  LM00062
 01727 CLA +0 50000 0 01500    01730 STO +0 60100 0 00700                                                               
                 OR WHENEVER CWD .E. $  NEXT$ .OR. CWD .E. $     N$                 039  LM00064
 01731 TRA +0 02000 0 03415    01732 CLA +0 50000 0 00106    01733 SUB +0 40200 0 01542    01734 TZE +0 10000 0 01740   
 01735 CLA +0 50000 0 00106    01736 SUB +0 40200 0 01523    01737 TNZ -0 10000 0 02002                                 
                   N = BIN.(GET.(0))                                                040  LM00065
 01740 TSX +0 07400 4 00031    01741 TXH +3 00000 0 01500    01742 STO +0 60100 0 03710    01743 TSX +0 07400 4 00001   
 01744 TXH +3 00000 0 03710    01745 STO +0 60100 0 01456                                                               
                   WHENEVER N .E. 0, N = 1                                          041  LM00066
 01746 CLA +0 50000 0 01456    01747 SUB +0 40200 0 01500    01750 TNZ -0 10000 0 01753    01751 CLA +0 50000 0 01501   
 01752 STO +0 60100 0 01456                                                                                             
                   THROUGH NXT, FOR I = 1, 1, I .G. N                               042  LM00067
 01753 CLA +0 50000 0 01501    01754 STO +0 60100 0 00675    01755 TRA +0 02000 0 01761    01756 CLA +0 50000 0 00675   
 01757 ADD +0 40000 0 01501    01760 STO +0 60100 0 00675    01761 CLA +0 50000 0 00675    01762 SUB +0 40200 0 01456   
 01763 TZE +0 10000 0 01765    01764 TPL +0 12000 0 02001                                                               
                     WRITE.(LINE, LENGTH)                                           043  LM00068
 01765 TSX +0 07400 4 00027    01766 TXH +3 00000 0 01452    01767 TXH +3 00000 0 00700                                 
                     WHENEVER .NOT. OK, CLSOUT.                                     044  LM00069
 01770 ZET +0 52000 0 01460    01771 TRA +0 02000 0 01773    01772 TSX +0 07400 4 00030                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              045  LM00070
 01773 TSX +0 07400 4 00017    01774 TXH +3 00000 0 01452    01775 TXH +3 00000 0 00100    01776 TXH +3 00000 0 00044   
 01777 STO +0 60100 0 00700                                                                                             
       NXT           CONTINUE                                                       046  LM00071
 02000 TRA +0 02000 0 01756                                                                                             
                 OR WHENEVER CWD .E. $INSERT$ .OR. CWD .E. $     I$                 047  LM00073
 02001 TRA +0 02000 0 03415    02002 CLA +0 50000 0 00106    02003 SUB +0 40200 0 01537    02004 TZE +0 10000 0 02010   
 02005 CLA +0 50000 0 00106    02006 SUB +0 40200 0 01512    02007 TNZ -0 10000 0 02064                                 
                   WRITE.(LINE, LENGTH)                                             048  LM00074
 02010 TSX +0 07400 4 00027    02011 TXH +3 00000 0 01452    02012 TXH +3 00000 0 00700                                 
                   TRANSFER TO RETYPE                                               049  LM00075
 02013 TRA +0 02000 0 00062                                                                                             
      INSERT       WHENEVER .NOT. BRIEF, PRINT COMMENT $0I1N1P1U1T$                 050  LM00077
 02014 ZET +0 52000 0 00077    02015 TRA +0 02000 0 02022    02016 TSX +0 07400 4 00015    02017     +0 00000 0 00002   
 02020     +0 03101 4 50147    02021     +0 16401 6 36060                                                               
       INPUT       COUNT = TYPEIN.(EDLIN, BUFSIZ)                                   051  LM00078
 02022 TSX +0 07400 4 00024    02023 TXH +3 00000 0 00663    02024 TXH +3 00000 0 00100    02025 STO +0 60100 0 00105   
                   WHENEVER COUNT .L. 3 .AND. EDLIN(1) .E. MCHNG                    052  LM00079
                1     , TRANSFER TO EDIT                                            052  LM00080
 02026 CLA +0 50000 0 00662    02027 SUB +0 40200 0 01454    02030 TNZ -0 10000 0 02036    02031 CLA +0 50000 0 00105   
 02032 SUB +0 40200 0 01503    02033 TZE +0 10000 0 02036    02034 TPL +0 12000 0 02036    02035 TRA +0 02000 0 00043   
                   WRITE.(LINE, LENGTH)                                             053  LM00081
 02036 TSX +0 07400 4 00027    02037 TXH +3 00000 0 01452    02040 TXH +3 00000 0 00700                                 
                   THROUGH MVLP, FOR I = 1, 1, I .G. COUNT                          054  LM00082
 02041 CLA +0 50000 0 01501    02042 STO +0 60100 0 00675    02043 TRA +0 02000 0 02047    02044 CLA +0 50000 0 00675   
 02045 ADD +0 40000 0 01501    02046 STO +0 60100 0 00675    02047 CLA +0 50000 0 00675    02050 SUB +0 40200 0 00105   
 02051 TZE +0 10000 0 02053    02052 TPL +0 12000 0 02060                                                               
       MVLP          LINE(I) = EDLIN(I)                                             055  LM00083
 02053 LXA +0 53400 1 00675    02054 LXA +0 53400 2 00675    02055 CLA +0 50000 2 00663    02056 STO +0 60100 1 01452   
 02057 TRA +0 02000 0 02044                                                                                             
                   LENGTH = COUNT                                                   056  LM00084
 02060 CLA +0 50000 0 00105    02061 STO +0 60100 0 00700                                                               
                   TRANSFER TO INPUT                                                057  LM00085
 02062 TRA +0 02000 0 00050                                                                                             
                 OR WHENEVER CWD .E. $BOTTOM$ .OR. CWD .E. $     B$                 058  LM00087
 02063 TRA +0 02000 0 03415    02064 CLA +0 50000 0 00106    02065 SUB +0 40200 0 01531    02066 TZE +0 10000 0 02072   
 02067 CLA +0 50000 0 00106    02070 SUB +0 40200 0 01506    02071 TNZ -0 10000 0 02104                                 
                   WRITE.(LINE, LENGTH)                                             059  LM00088
 02072 TSX +0 07400 4 00027    02073 TXH +3 00000 0 01452    02074 TXH +3 00000 0 00700                                 
                   LENGTH = 0                                                       060  LM00089
 02075 CLA +0 50000 0 01500    02076 STO +0 60100 0 00700                                                               
                   WHENEVER OK, BOTTOM.                                             061  LM00090
 02077 NZT -0 52000 0 01460    02100 TRA +0 02000 0 02102    02101 TSX +0 07400 4 00002                                 
                   TRANSFER TO INSERT                                               062  LM00091
 02102 TRA +0 02000 0 00051                                                                                             
                 OR WHENEVER CWD .E. $APPEND$ .OR. CWD .E. $     A$                 063  LM00093
 02103 TRA +0 02000 0 03415    02104 CLA +0 50000 0 00106    02105 SUB +0 40200 0 01530    02106 TZE +0 10000 0 02112   
 02107 CLA +0 50000 0 00106    02110 SUB +0 40200 0 01505    02111 TNZ -0 10000 0 02123                                 
                   WHENEVER LENGTH .G. 0, LENGTH = LENGTH - 1                       064  LM00094
 02112 CLA +0 50000 0 00700    02113 SUB +0 40200 0 01500    02114 TZE +0 10000 0 02121    02115 TMI -0 12000 0 02121   
 02116 CLA +0 50000 0 00700    02117 SUB +0 40200 0 01501    02120 STO +0 60100 0 00700                                 
                   TRANSFER TO APPEND                                               065  LM00095
 02121 TRA +0 02000 0 00034                                                                                             
                 OR WHENEVER CWD .E. $RETYPE$ .OR. CWD .E. $     R$                 066  LM00097
 02122 TRA +0 02000 0 03415    02123 CLA +0 50000 0 00106    02124 SUB +0 40200 0 01545    02125 TZE +0 10000 0 02131   
 02126 CLA +0 50000 0 00106    02127 SUB +0 40200 0 01514    02130 TNZ -0 10000 0 02157                                 
       RETYPE      LENGTH = 0                                                       067  LM00098
 02131 CLA +0 50000 0 01500    02132 STO +0 60100 0 00700                                                               
      APPEND       THROUGH RPLC, FOR EDCT = EDCT + 1, 1, EDCT .G. COUNT             068  LM00099
 02133 CLA +0 50000 0 00111    02134 ADD +0 40000 0 01501    02135 STO +0 60100 0 00111    02136 TRA +0 02000 0 02142   
 02137 CLA +0 50000 0 00111    02140 ADD +0 40000 0 01501    02141 STO +0 60100 0 00111    02142 CLA +0 50000 0 00111   
 02143 SUB +0 40200 0 00105    02144 TZE +0 10000 0 02146    02145 TPL +0 12000 0 02156                                 
                     LENGTH = LENGTH + 1                                            069  LM00100
 02146 CLA +0 50000 0 00700    02147 ADD +0 40000 0 01501    02150 STO +0 60100 0 00700                                 
       RPLC          LINE(LENGTH) = EDLIN(EDCT)                                     070  LM00101
 02151 LXA +0 53400 1 00700    02152 LXA +0 53400 2 00111    02153 CLA +0 50000 2 00663    02154 STO +0 60100 1 01452   
 02155 TRA +0 02000 0 02137                                                                                             
                 OR WHENEVER CWD .E. $ ERASE$ .OR. CWD .E. $     E$                 071  LM00103
 02156 TRA +0 02000 0 03415    02157 CLA +0 50000 0 00106    02160 SUB +0 40200 0 01534    02161 TZE +0 10000 0 02165   
 02162 CLA +0 50000 0 00106    02163 SUB +0 40200 0 01516    02164 TNZ -0 10000 0 02203                                 
                   WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETERS.(EDLIN(EDCT+1))        072  LM00104
 02165 CLA +0 50000 0 00111    02166 ADD +0 40000 0 01501    02167 PAX +0 73400 1 00000    02170 CLA +0 50000 1 00663   
 02171 SUB +0 40200 0 00076    02172 TZE +0 10000 0 02202    02173 CLA +0 50000 0 00111    02174 ADD +0 40000 0 01501   
 02175 SUB +0 40200 0 02176    02176 TXH +3 00000 0 00663    02177 STA +0 62100 0 02201    02200 TSX +0 07400 4 00022   
 02201 TXH +3 00000 0 00000                                                                                             
                 OR WHENEVER CWD .E. $  KILL$ .OR. CWD .E. $     K$                 073  LM00106
 02202 TRA +0 02000 0 03415    02203 CLA +0 50000 0 00106    02204 SUB +0 40200 0 01540    02205 TZE +0 10000 0 02211   
 02206 CLA +0 50000 0 00106    02207 SUB +0 40200 0 01522    02210 TNZ -0 10000 0 02227                                 
                   WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETKIL.(EDLIN(EDCT+1))        074  LM00107
 02211 CLA +0 50000 0 00111    02212 ADD +0 40000 0 01501    02213 PAX +0 73400 1 00000    02214 CLA +0 50000 1 00663   
 02215 SUB +0 40200 0 00076    02216 TZE +0 10000 0 02226    02217 CLA +0 50000 0 00111    02220 ADD +0 40000 0 01501   
 02221 SUB +0 40200 0 02222    02222 TXH +3 00000 0 00663    02223 STA +0 62100 0 02225    02224 TSX +0 07400 4 00023   
 02225 TXH +3 00000 0 00000                                                                                             
                 OR WHENEVER CWD .E. $ BREAK$ .OR. CWD .E. $    BR$                 075  LM00111
 02226 TRA +0 02000 0 03415    02227 CLA +0 50000 0 00106    02230 SUB +0 40200 0 01526    02231 TZE +0 10000 0 02235   
 02232 CLA +0 50000 0 00106    02233 SUB +0 40200 0 01515    02234 TNZ -0 10000 0 02260                                 
                   WHENEVER EDLIN(EDCT) .E. RETURN                                  076  LM00112
 02235 LXA +0 53400 1 00111    02236 CLA +0 50000 1 00663    02237 SUB +0 40200 0 01467    02240 TNZ -0 10000 0 02244   
                     MCHNG = RETURN                                                 077  LM00113
 02241 CLA +0 50000 0 01467    02242 STO +0 60100 0 01454                                                               
                   OR WHENEVER EDLIN(EDCT+1) .NE. BLANK                             078  LM00114
 02243 TRA +0 02000 0 02257    02244 CLA +0 50000 0 00111    02245 ADD +0 40000 0 01501    02246 PAX +0 73400 1 00000   
 02247 CLA +0 50000 1 00663    02250 SUB +0 40200 0 00076    02251 TZE +0 10000 0 02257                                 
                     MCHNG = EDLIN(EDCT+1)                                          079  LM00115
 02252 CLA +0 50000 0 00111    02253 ADD +0 40000 0 01501    02254 PAX +0 73400 2 00000    02255 CLA +0 50000 2 00663   
 02256 STO +0 60100 0 01454                                                                                             
                   END OF CONDITIONAL                                               080  LM00116
                 OR WHENEVER CWD .E. $VERIFY$ .OR. CWD .E. $     V$                 081  LM00118
 02257 TRA +0 02000 0 03415    02260 CLA +0 50000 0 00106    02261 SUB +0 40200 0 01551    02262 TZE +0 10000 0 02266   
 02263 CLA +0 50000 0 00106    02264 SUB +0 40200 0 01554    02265 TNZ -0 10000 0 02305                                 
                   CWD = GET.(0)                                                    082  LM00119
 02266 TSX +0 07400 4 00031    02267 TXH +3 00000 0 01500    02270 STO +0 60100 0 00106                                 
                   WHENEVER CWD .E. $    ON$                                        083  LM00120
 02271 CLA +0 50000 0 00106    02272 SUB +0 40200 0 01527    02273 TNZ -0 10000 0 02277                                 
                     BRIEF = 0B                                                     084  LM00121
 02274 CLA +0 50000 0 01500    02275 STO +0 60100 0 00077                                                               
                   OR WHENEVER CWD .E. $   OFF$                                     085  LM00122
 02276 TRA +0 02000 0 02304    02277 CLA +0 50000 0 00106    02300 SUB +0 40200 0 01525    02301 TNZ -0 10000 0 02304   
                     BRIEF = 1B                                                     086  LM00123
 02302 CLA +0 50000 0 01501    02303 STO +0 60100 0 00077                                                               
                   END OF CONDITIONAL                                               087  LM00124
                 OR WHENEVER CWD .E. $LOCATE$ .OR. CWD .E. $     L$                 088  LM00126
 02304 TRA +0 02000 0 03415    02305 CLA +0 50000 0 00106    02306 SUB +0 40200 0 01541    02307 TZE +0 10000 0 02313   
 02310 CLA +0 50000 0 00106    02311 SUB +0 40200 0 01513    02312 TNZ -0 10000 0 02317                                 
                   LOCATE = 1                                                       089  LM00127
 02313 CLA +0 50000 0 01501    02314 STO +0 60100 0 01453                                                               
                   TRANSFER TO FIND                                                 090  LM00128
 02315 TRA +0 02000 0 00045                                                                                             
                 OR WHENEVER CWD .E. $  FIND$ .OR. CWD .E. $     F$                 091  LM00130
 02316 TRA +0 02000 0 03415    02317 CLA +0 50000 0 00106    02320 SUB +0 40200 0 01535    02321 TZE +0 10000 0 02325   
 02322 CLA +0 50000 0 00106    02323 SUB +0 40200 0 01521    02324 TNZ -0 10000 0 02510                                 
                   LOCATE = 0                                                       092  LM00131
 02325 CLA +0 50000 0 01500    02326 STO +0 60100 0 01453                                                               
      FIND         WHENEVER EDCT+1 .GE. COUNT                                       093  LM00132
 02327 CLA +0 50000 0 00111    02330 ADD +0 40000 0 01501    02331 SUB +0 40200 0 00105    02332 TZE +0 10000 0 02334   
 02333 TMI -0 12000 0 02341                                                                                             
                     COUNT = OCOUNT                                                 094  LM00133
 02334 CLA +0 50000 0 01457    02335 STO +0 60100 0 00105                                                               
                     EDCT = EDCT + 1                                                095  LM00134
 02336 CLA +0 50000 0 00111    02337 ADD +0 40000 0 01501    02340 STO +0 60100 0 00111                                 
                   END OF CONDITIONAL                                               096  LM00135
                   OCOUNT = COUNT                                                   097  LM00136
 02341 CLA +0 50000 0 00105    02342 STO +0 60100 0 01457                                                               
       NTFND       WRITE.(LINE, LENGTH)                                             098  LM00137
 02343 TSX +0 07400 4 00027    02344 TXH +3 00000 0 01452    02345 TXH +3 00000 0 00700                                 
                   WHENEVER  .NOT. OK, CLSOUT.                                      099  LM00138
 02346 ZET +0 52000 0 01460    02347 TRA +0 02000 0 02351    02350 TSX +0 07400 4 00030                                 
                   LENGTH = READ.(LINE, BUFSIZ, EOF)                                100  LM00139
 02351 TSX +0 07400 4 00017    02352 TXH +3 00000 0 01452    02353 TXH +3 00000 0 00100    02354 TXH +3 00000 0 00044   
 02355 STO +0 60100 0 00700                                                                                             
                   THROUGH LOCSCN, FOR K=0, 1,K.G.LOCATE*(LENGTH-COUNT+EDCT)        101  LM00140
 02356 CLA +0 50000 0 01500    02357 STO +0 60100 0 00677    02360 TRA +0 02000 0 02364    02361 CLA +0 50000 0 00677   
 02362 ADD +0 40000 0 01501    02363 STO +0 60100 0 00677    02364 CLA +0 50000 0 00700    02365 SUB +0 40200 0 00105   
 02366 ADD +0 40000 0 00111    02367 XCA +0 13100 0 00000    02370 MPY +0 20000 0 01453    02371 XCA +0 13100 0 00000   
 02372 CHS +0 76000 0 00002    02373 ADD +0 40000 0 00677    02374 TZE +0 10000 0 02376    02375 TPL +0 12000 0 02506   
                     J = K                                                          102  LM00141
 02376 CLA +0 50000 0 00677    02377 STO +0 60100 0 00676                                                               
                     THROUGH LOOK, FOR I = EDCT+1, 1, I .GE. COUNT                  103  LM00142
 02400 CLA +0 50000 0 00111    02401 ADD +0 40000 0 01501    02402 STO +0 60100 0 00675    02403 TRA +0 02000 0 02407   
 02404 CLA +0 50000 0 00675    02405 ADD +0 40000 0 01501    02406 STO +0 60100 0 00675    02407 CLA +0 50000 0 00675   
 02410 SUB +0 40200 0 00105    02411 TZE +0 10000 0 02475    02412 TPL +0 12000 0 02475                                 
                       J = J + 1                                                    104  LM00143
 02413 CLA +0 50000 0 00676    02414 ADD +0 40000 0 01501    02415 STO +0 60100 0 00676                                 
       TAGN            WHENEVER LINE(J) .E. EDLIN(I), TRANSFER TO LOOK              105  LM00144
 02416 LXA +0 53400 1 00676    02417 LXA +0 53400 2 00675    02420 CLA +0 50000 1 01452    02421 SUB +0 40200 2 00663   
 02422 TNZ -0 10000 0 02424    02423 TRA +0 02000 0 00053                                                               
                       WHENEVER (LINE(J).E. TAB) .AND. (EDLIN(I) .E. BLANK)         106  LM00145
                1       , TRANSFER TO LOOK                                          106  LM00146
 02424 LXA +0 53400 1 00675    02425 CLA +0 50000 1 00663    02426 SUB +0 40200 0 00076    02427 TNZ -0 10000 0 02435   
 02430 LXA +0 53400 1 00676    02431 CLA +0 50000 1 01452    02432 SUB +0 40200 0 01473    02433 TNZ -0 10000 0 02435   
 02434 TRA +0 02000 0 00053                                                                                             
                       WHENEVER EDLIN(I-1) .NE. BLANK .OR. I .E. EDCT + 1           107  LM00147
                1       , TRANSFER TO LOCSCN                                        107  LM00148
 02435 CLA +0 50000 0 00111    02436 ADD +0 40000 0 01501    02437 CHS +0 76000 0 00002    02440 ADD +0 40000 0 00675   
 02441 TZE +0 10000 0 02450    02442 CLA +0 50000 0 00675    02443 SUB +0 40200 0 01501    02444 PAX +0 73400 1 00000   
 02445 CLA +0 50000 1 00663    02446 SUB +0 40200 0 00076    02447 TZE +0 10000 0 02451    02450 TRA +0 02000 0 00052   
                       WHENEVER LINE(J) .NE. BLANK .AND. LINE(J) .NE. TAB           108  LM00149
                1       , TRANSFER TO LOCSCN                                        108  LM00150
 02451 LXA +0 53400 1 00676    02452 CLA +0 50000 1 01452    02453 SUB +0 40200 0 01473    02454 TZE +0 10000 0 02461   
 02455 CLA +0 50000 1 01452    02456 SUB +0 40200 0 00076    02457 TZE +0 10000 0 02461    02460 TRA +0 02000 0 00052   
                       J = J + 1                                                    109  LM00151
 02461 CLA +0 50000 0 00676    02462 ADD +0 40000 0 01501    02463 STO +0 60100 0 00676                                 
                       TRANSFER TO TAGN                                             110  LM00152
 02464 TRA +0 02000 0 00067                                                                                             
       LOOK            WHENEVER I .E. EDCT+1, FNDST = J                             111  LM00153
 02465 CLA +0 50000 0 00111    02466 ADD +0 40000 0 01501    02467 CHS +0 76000 0 00002    02470 ADD +0 40000 0 00675   
 02471 TNZ -0 10000 0 02474    02472 CLA +0 50000 0 00676    02473 STO +0 60100 0 00670    02474 TRA +0 02000 0 02404   
                     FNDND = J                                                      112  LM00154
 02475 CLA +0 50000 0 00676    02476 STO +0 60100 0 00667                                                               
                     WHENEVER .NOT. BRIEF, PRNT.(FNDST, FNDND)                      113  LM00155
 02477 ZET +0 52000 0 00077    02500 TRA +0 02000 0 02504    02501 TSX +0 07400 4 00032    02502 TXH +3 00000 0 00670   
 02503 TXH +3 00000 0 00667                                                                                             
                     TRANSFER TO NXRQ                                               114  LM00156
 02504 TRA +0 02000 0 00060                                                                                             
        LOCSCN       CONTINUE                                                       115  LM00157
 02505 TRA +0 02000 0 02361                                                                                             
                   TRANSFER TO NTFND                                                116  LM00158
 02506 TRA +0 02000 0 00057                                                                                             
                 OR WHENEVER CWD .E. $ PRINT$ .OR. CWD .E. $     P$                 117  LM00160
 02507 TRA +0 02000 0 03415    02510 CLA +0 50000 0 00106    02511 SUB +0 40200 0 01543    02512 TZE +0 10000 0 02516   
 02513 CLA +0 50000 0 00106    02514 SUB +0 40200 0 01517    02515 TNZ -0 10000 0 02564                                 
                   NPRNT = BIN.(GET.(0))                                            118  LM00161
 02516 TSX +0 07400 4 00031    02517 TXH +3 00000 0 01500    02520 STO +0 60100 0 03710    02521 TSX +0 07400 4 00001   
 02522 TXH +3 00000 0 03710    02523 STO +0 60100 0 01455                                                               
      PNTLP        WHENEVER LENGTH .E. 0                                            119  LM00162
 02524 CLA +0 50000 0 00700    02525 SUB +0 40200 0 01500    02526 TNZ -0 10000 0 02540                                 
                     PRINT COMMENT $0N1O0 1C1U1R1R1E1N1T0 1L1I1N1E0.$               120  LM00163
 02527 TSX +0 07400 4 00015    02530     +0 00000 0 00006    02531     +0 04501 4 60060    02532     +0 12301 6 40151   
 02533     +0 15101 2 50145    02534     +0 16300 6 00143    02535     +0 13101 4 50125    02536     +0 03360 6 06060   
                   OTHERWISE                                                        121  LM00164
 02537 TRA +0 02000 0 02543                                                                                             
                     TYPOUT.(LINE, LENGTH)                                          122  LM00165
 02540 TSX +0 07400 4 00025    02541 TXH +3 00000 0 01452    02542 TXH +3 00000 0 00700                                 
                   END OF CONDITIONAL                                               123  LM00166
                   NPRNT = NPRNT - 1                                                124  LM00167
 02543 CLA +0 50000 0 01455    02544 SUB +0 40200 0 01501    02545 STO +0 60100 0 01455                                 
                   WHENEVER NPRNT .G. 0                                             125  LM00168
 02546 CLA +0 50000 0 01455    02547 SUB +0 40200 0 01500    02550 TZE +0 10000 0 02563    02551 TMI -0 12000 0 02563   
                     WRITE.(LINE, LENGTH)                                           126  LM00169
 02552 TSX +0 07400 4 00027    02553 TXH +3 00000 0 01452    02554 TXH +3 00000 0 00700                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              127  LM00170
 02555 TSX +0 07400 4 00017    02556 TXH +3 00000 0 01452    02557 TXH +3 00000 0 00100    02560 TXH +3 00000 0 00044   
 02561 STO +0 60100 0 00700                                                                                             
                     TRANSFER TO PNTLP                                              128  LM00171
 02562 TRA +0 02000 0 00061                                                                                             
                   END OF CONDITIONAL                                               129  LM00172
                 OR WHENEVER CWD .E. $   TOP$ .OR. CWD .E. $     T$                 130  LM00174
 02563 TRA +0 02000 0 03415    02564 CLA +0 50000 0 00106    02565 SUB +0 40200 0 01550    02566 TZE +0 10000 0 02572   
 02567 CLA +0 50000 0 00106    02570 SUB +0 40200 0 01552    02571 TNZ -0 10000 0 02602                                 
       TOPLP       WRITE.(LINE, LENGTH)                                             131  LM00175
 02572 TSX +0 07400 4 00027    02573 TXH +3 00000 0 01452    02574 TXH +3 00000 0 00700                                 
                   WHENEVER OK, BOTTOM.                                             132  LM00176
 02575 NZT -0 52000 0 01460    02576 TRA +0 02000 0 02600    02577 TSX +0 07400 4 00002                                 
                   CLSOUT.                                                          133  LM00177
 02600 TSX +0 07400 4 00030                                                                                             
                 OR WHENEVER CWD .E. $CHANGE$ .OR. CWD .E. $     C$                 134  LM00179
 02601 TRA +0 02000 0 03415    02602 CLA +0 50000 0 00106    02603 SUB +0 40200 0 01532    02604 TZE +0 10000 0 02610   
 02605 CLA +0 50000 0 00106    02606 SUB +0 40200 0 01510    02607 TNZ -0 10000 0 03172                                 
                   EDCT = EDCT+1                                                    135  LM00185
 02610 CLA +0 50000 0 00111    02611 ADD +0 40000 0 01501    02612 STO +0 60100 0 00111                                 
                   QUOTE = EDLIN(EDCT)                                              136  LM00186
 02613 LXA +0 53400 2 00111    02614 CLA +0 50000 2 00663    02615 STO +0 60100 0 01464                                 
                   STR1 = EDCT                                                      137  LM00187
 02616 CLA +0 50000 0 00111    02617 STO +0 60100 0 01471                                                               
      QLOOP        THROUGH QLOOP, FOR EDCT = EDCT+1, 1,                             138  LM00188
                1     (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                138  LM00189
 02620 CLA +0 50000 0 00111    02621 ADD +0 40000 0 01501    02622 STO +0 60100 0 00111    02623 TRA +0 02000 0 02627   
 02624 CLA +0 50000 0 00111    02625 ADD +0 40000 0 01501    02626 STO +0 60100 0 00111    02627 CLA +0 50000 0 00111   
 02630 SUB +0 40200 0 00105    02631 TZE +0 10000 0 02640    02632 TPL +0 12000 0 02640    02633 LXA +0 53400 1 00111   
 02634 CLA +0 50000 1 00663    02635 SUB +0 40200 0 01464    02636 TZE +0 10000 0 02640    02637 TRA +0 02000 0 02624   
                   STR2 = EDCT                                                      139  LM00190
 02640 CLA +0 50000 0 00111    02641 STO +0 60100 0 01472                                                               
      QLOOP1       THROUGH QLOOP1, FOR EDCT = EDCT+1, 1,                            140  LM00191
                1     (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                140  LM00192
 02642 CLA +0 50000 0 00111    02643 ADD +0 40000 0 01501    02644 STO +0 60100 0 00111    02645 TRA +0 02000 0 02651   
 02646 CLA +0 50000 0 00111    02647 ADD +0 40000 0 01501    02650 STO +0 60100 0 00111    02651 CLA +0 50000 0 00111   
 02652 SUB +0 40200 0 00105    02653 TZE +0 10000 0 02662    02654 TPL +0 12000 0 02662    02655 LXA +0 53400 1 00111   
 02656 CLA +0 50000 1 00663    02657 SUB +0 40200 0 01464    02660 TZE +0 10000 0 02662    02661 TRA +0 02000 0 02646   
                   EST2 = EDCT                                                      141  LM00193
 02662 CLA +0 50000 0 00111    02663 STO +0 60100 0 00664                                                               
                   EDCT = EDCT + 1                                                  142  LM00197
 02664 CLA +0 50000 0 00111    02665 ADD +0 40000 0 01501    02666 STO +0 60100 0 00111                                 
                   TEM = 1                                                          143  LM00198
 02667 CLA +0 50000 0 01501    02670 STO +0 60100 0 01474                                                               
                   GLOBAL = 0B                                                      144  LM00199
 02671 CLA +0 50000 0 01500    02672 STO +0 60100 0 00672                                                               
      ARGLP        CWD = GET.(0)                                                    145  LM00200
 02673 TSX +0 07400 4 00031    02674 TXH +3 00000 0 01500    02675 STO +0 60100 0 00106                                 
                   WHENEVER CWD .E. $ $                                             146  LM00201
 02676 CLA +0 50000 0 00106    02677 SUB +0 40200 0 01546    02700 TNZ -0 10000 0 02703                                 
                     TRANSFER TO SHIFT                                              147  LM00202
 02701 TRA +0 02000 0 00063                                                                                             
                   OR WHENEVER CWD .E. $     G$                                     148  LM00203
 02702 TRA +0 02000 0 02721    02703 CLA +0 50000 0 00106    02704 SUB +0 40200 0 01536    02705 TNZ -0 10000 0 02716   
                     WHENEVER STR2 .NE. STR1+1, GLOBAL = 1B                         149  LM00204
 02706 CLA +0 50000 0 01471    02707 ADD +0 40000 0 01501    02710 CHS +0 76000 0 00002    02711 ADD +0 40000 0 01472   
 02712 TZE +0 10000 0 02715    02713 CLA +0 50000 0 01501    02714 STO +0 60100 0 00672                                 
                   OTHERWISE                                                        150  LM00205
 02715 TRA +0 02000 0 02721                                                                                             
                     TEM = BIN.(CWD)                                                151  LM00206
 02716 TSX +0 07400 4 00001    02717 TXH +3 00000 0 00106    02720 STO +0 60100 0 01474                                 
                   END OF CONDITIONAL                                               152  LM00207
                   TRANSFER TO ARGLP                                                153  LM00208
 02721 TRA +0 02000 0 00035                                                                                             
       SHIFT       THROUGH MVDWN, FOR I = LENGTH, -1, I .L. 1                       154  LM00212
 02722 CLA +0 50000 0 00700    02723 STO +0 60100 0 00675    02724 TRA +0 02000 0 02730    02725 CLS +0 50200 0 01501   
 02726 ADD +0 40000 0 00675    02727 STO +0 60100 0 00675    02730 CLA +0 50000 0 00675    02731 SUB +0 40200 0 01501   
 02732 TZE +0 10000 0 02734    02733 TMI -0 12000 0 02744                                                               
      MVDWN          LINE(BUFSIZ+I-LENGTH) = LINE(I)                                155  LM00213
 02734 CLA +0 50000 0 00100    02735 ADD +0 40000 0 00675    02736 SUB +0 40200 0 00700    02737 PAX +0 73400 1 00000   
 02740 LXA +0 53400 2 00675    02741 CLA +0 50000 2 01452    02742 STO +0 60100 1 01452    02743 TRA +0 02000 0 02725   
                   DOWN = BUFSIZ-LENGTH+1                                           156  LM00214
 02744 CLA +0 50000 0 00100    02745 SUB +0 40200 0 00700    02746 ADD +0 40000 0 01501    02747 STO +0 60100 0 00110   
                   UP = 0                                                           157  LM00215
 02750 CLA +0 50000 0 01500    02751 STO +0 60100 0 01476                                                               
                   CHNG = 0B                                                        158  LM00216
 02752 CLA +0 50000 0 01500    02753 STO +0 60100 0 00102                                                               
                   CHST = LENGTH + 1                                                159  LM00217
 02754 CLA +0 50000 0 00700    02755 ADD +0 40000 0 01501    02756 STO +0 60100 0 00103                                 
                   CHEND = LENGTH                                                   160  LM00218
 02757 CLA +0 50000 0 00700    02760 STO +0 60100 0 00101                                                               
      SRCHLP       UP = UP + 1                                                      161  LM00222
 02761 CLA +0 50000 0 01476    02762 ADD +0 40000 0 01501    02763 STO +0 60100 0 01476                                 
      SRTST          WHENEVER DOWN .G. BUFSIZ, TRANSFER TO GIVUP                    162  LM00223
 02764 CLA +0 50000 0 00110    02765 SUB +0 40200 0 00100    02766 TZE +0 10000 0 02771    02767 TMI -0 12000 0 02771   
 02770 TRA +0 02000 0 00046                                                                                             
                     J = DOWN                                                       163  LM00224
 02771 CLA +0 50000 0 00110    02772 STO +0 60100 0 00676                                                               
                     THROUGH COMPAR, FOR I = STR1+1, 1, I .GE. STR2                 164  LM00225
 02773 CLA +0 50000 0 01471    02774 ADD +0 40000 0 01501    02775 STO +0 60100 0 00675    02776 TRA +0 02000 0 03002   
 02777 CLA +0 50000 0 00675    03000 ADD +0 40000 0 01501    03001 STO +0 60100 0 00675    03002 CLA +0 50000 0 00675   
 03003 SUB +0 40200 0 01472    03004 TZE +0 10000 0 03025    03005 TPL +0 12000 0 03025                                 
                       WHENEVER J .GE. BUFSIZ, TRANSFER TO GIVUP                    165  LM00226
 03006 CLA +0 50000 0 00676    03007 SUB +0 40200 0 00100    03010 TZE +0 10000 0 03012    03011 TMI -0 12000 0 03013   
 03012 TRA +0 02000 0 00046                                                                                             
                       WHENEVER EDLIN(I) .NE. LINE(J), TRANSFER TO NOCOMP           166  LM00227
 03013 LXA +0 53400 1 00675    03014 LXA +0 53400 2 00676    03015 CLA +0 50000 1 00663    03016 SUB +0 40200 2 01452   
 03017 TZE +0 10000 0 03021    03020 TRA +0 02000 0 00055                                                               
       COMPAR          J = J + 1                                                    167  LM00228
 03021 CLA +0 50000 0 00676    03022 ADD +0 40000 0 01501    03023 STO +0 60100 0 00676    03024 TRA +0 02000 0 02777   
                     TRANSFER TO STFND                                              168  LM00229
 03025 TRA +0 02000 0 00066                                                                                             
      NOCOMP         LINE(UP) = LINE(DOWN)                                          169  LM00231
 03026 LXA +0 53400 1 01476    03027 LXA +0 53400 2 00110    03030 CLA +0 50000 2 01452    03031 STO +0 60100 1 01452   
                     DOWN = DOWN + 1                                                170  LM00232
 03032 CLA +0 50000 0 00110    03033 ADD +0 40000 0 01501    03034 STO +0 60100 0 00110                                 
                   TRANSFER TO SRCHLP                                               171  LM00233
 03035 TRA +0 02000 0 00064                                                                                             
      STFND        CHNG = 1B                                                        172  LM00237
 03036 CLA +0 50000 0 01501    03037 STO +0 60100 0 00102                                                               
                   DOWN = DOWN + (STR2-STR1-1)                                      173  LM00238
 03040 CLA +0 50000 0 01472    03041 SUB +0 40200 0 01471    03042 SUB +0 40200 0 01501    03043 ADD +0 40000 0 00110   
 03044 STO +0 60100 0 00110                                                                                             
                   CHST = UP                                                        174  LM00239
 03045 CLA +0 50000 0 01476    03046 STO +0 60100 0 00103                                                               
                   THROUGH REPLAC, FOR I = STR2 + 1, 1, I .GE. EST2                 175  LM00240
 03047 CLA +0 50000 0 01472    03050 ADD +0 40000 0 01501    03051 STO +0 60100 0 00675    03052 TRA +0 02000 0 03056   
 03053 CLA +0 50000 0 00675    03054 ADD +0 40000 0 01501    03055 STO +0 60100 0 00675    03056 CLA +0 50000 0 00675   
 03057 SUB +0 40200 0 00664    03060 TZE +0 10000 0 03077    03061 TPL +0 12000 0 03077                                 
                     LINE(UP) = EDLIN(I)                                            176  LM00241
 03062 LXA +0 53400 1 01476    03063 LXA +0 53400 2 00675    03064 CLA +0 50000 2 00663    03065 STO +0 60100 1 01452   
                     UP = UP + 1                                                    177  LM00242
 03066 CLA +0 50000 0 01476    03067 ADD +0 40000 0 01501    03070 STO +0 60100 0 01476                                 
       REPLAC        WHENEVER UP .G. DOWN, TRANSFER TO GIVUP                        178  LM00243
 03071 CLA +0 50000 0 01476    03072 SUB +0 40200 0 00110    03073 TZE +0 10000 0 03076    03074 TMI -0 12000 0 03076   
 03075 TRA +0 02000 0 00046    03076 TRA +0 02000 0 03053                                                               
                   CHEND = UP - 1                                                   179  LM00244
 03077 CLA +0 50000 0 01476    03100 SUB +0 40200 0 01501    03101 STO +0 60100 0 00101                                 
                   WHENEVER GLOBAL, TRANSFER TO SRTST                               180  LM00245
 03102 NZT -0 52000 0 00672    03103 TRA +0 02000 0 03105    03104 TRA +0 02000 0 00065                                 
      GIVUP        THROUGH FILOUT, FOR UP = UP, 1, DOWN .G. BUFSIZ                  181  LM00249
 03105 CLA +0 50000 0 01476    03106 STO +0 60100 0 01476    03107 TRA +0 02000 0 03113    03110 CLA +0 50000 0 01476   
 03111 ADD +0 40000 0 01501    03112 STO +0 60100 0 01476    03113 CLA +0 50000 0 00110    03114 SUB +0 40200 0 00100   
 03115 TZE +0 10000 0 03117    03116 TPL +0 12000 0 03127                                                               
                     LINE(UP) = LINE(DOWN)                                          182  LM00250
 03117 LXA +0 53400 1 01476    03120 LXA +0 53400 2 00110    03121 CLA +0 50000 2 01452    03122 STO +0 60100 1 01452   
      FILOUT         DOWN = DOWN + 1                                                183  LM00251
 03123 CLA +0 50000 0 00110    03124 ADD +0 40000 0 01501    03125 STO +0 60100 0 00110    03126 TRA +0 02000 0 03110   
                   LENGTH = UP - 1                                                  184  LM00252
 03127 CLA +0 50000 0 01476    03130 SUB +0 40200 0 01501    03131 STO +0 60100 0 00700                                 
                   TEM = TEM - 1                                                    185  LM00253
 03132 CLA +0 50000 0 01474    03133 SUB +0 40200 0 01501    03134 STO +0 60100 0 01474                                 
                   WHENEVER .NOT. BRIEF .AND. (TEM .G. 0 .THEN. CHNG)               186  LM00254
                1       , PRNT.(CHST, CHEND)                                        186  LM00255
 03135 ZET +0 52000 0 00102    03136 TRA +0 02000 0 03143    03137 CLA +0 50000 0 01474    03140 SUB +0 40200 0 01500   
 03141 TZE +0 10000 0 03143    03142 TPL +0 12000 0 03150    03143 ZET +0 52000 0 00077    03144 TRA +0 02000 0 03150   
 03145 TSX +0 07400 4 00032    03146 TXH +3 00000 0 00103    03147 TXH +3 00000 0 00101                                 
                   CANON.(LINE, LENGTH, BUFSIZ)                                     187  LM00256
 03150 TSX +0 07400 4 00003    03151 TXH +3 00000 0 01452    03152 TXH +3 00000 0 00700    03153 TXH +3 00000 0 00100   
                   WHENEVER TEM .G. 0                                               188  LM00257
 03154 CLA +0 50000 0 01474    03155 SUB +0 40200 0 01500    03156 TZE +0 10000 0 03171    03157 TMI -0 12000 0 03171   
                     WRITE.(LINE, LENGTH)                                           189  LM00258
 03160 TSX +0 07400 4 00027    03161 TXH +3 00000 0 01452    03162 TXH +3 00000 0 00700                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              190  LM00259
 03163 TSX +0 07400 4 00017    03164 TXH +3 00000 0 01452    03165 TXH +3 00000 0 00100    03166 TXH +3 00000 0 00044   
 03167 STO +0 60100 0 00700                                                                                             
                     TRANSFER TO SHIFT                                              191  LM00260
 03170 TRA +0 02000 0 00063                                                                                             
                   END OF CONDITIONAL                                               192  LM00261
                 OR WHENEVER CWD .E. $ SPLIT$ .OR. CWD .E. $     S$                 193  LM00265
 03171 TRA +0 02000 0 03415    03172 CLA +0 50000 0 00106    03173 SUB +0 40200 0 01547    03174 TZE +0 10000 0 03200   
 03175 CLA +0 50000 0 00106    03176 SUB +0 40200 0 01553    03177 TNZ -0 10000 0 03261                                 
                   TOPNAM = GET.(0)                                                 194  LM00266
 03200 TSX +0 07400 4 00031    03201 TXH +3 00000 0 01500    03202 STO +0 60100 0 01475                                 
                   WHENEVER TOPNAM .E. $ $, TRANSFER TO NONAME                      195  LM00267
 03203 CLA +0 50000 0 01475    03204 SUB +0 40200 0 01546    03205 TNZ -0 10000 0 03207    03206 TRA +0 02000 0 00056   
                   WHENEVER TOPNAM .E. OLDNAM .AND. FSTPAS                          196  LM00268
 03207 NZT -0 52000 0 00671    03210 TRA +0 02000 0 03227    03211 CLA +0 50000 0 01475    03212 SUB +0 40200 0 01461   
 03213 TNZ -0 10000 0 03227                                                                                             
      NEWNM          PRINT COMMENT $0P1L1E1A1S1E0 1U1S1E0 1A1N1O1T1H1E1R0 1N1A      197  LM00269
                11M1E0.$                                                            197  LM00270
 03214 TSX +0 07400 4 00015    03215     +0 00000 0 00010    03216     +0 04701 4 30125    03217     +0 12101 6 20125   
 03220     +0 06001 6 40162    03221     +0 12500 6 00121    03222     +0 14501 4 60163    03223     +0 13001 2 50151   
 03224     +0 06001 4 50121    03225     +0 14401 2 50033                                                               
                     TRANSFER TO NXRQ                                               198  LM00271
 03226 TRA +0 02000 0 00060                                                                                             
                   END OF CONDITIONAL                                               199  LM00272
                   SECNAM = GET.(0)                                                 200  LM00273
 03227 TSX +0 07400 4 00031    03230 TXH +3 00000 0 01500    03231 STO +0 60100 0 01470                                 
                 WHENEVER SECNAM .E. $ $, SECNAM = OLDSEC                           201  LM00274
 03232 CLA +0 50000 0 01470    03233 SUB +0 40200 0 01546    03234 TNZ -0 10000 0 03237    03235 CLA +0 50000 0 01462   
 03236 STO +0 60100 0 01470                                                                                             
                   CLRNAM.(TOPNAM, SECNAM, NEWNM, 1B)                               202  LM00275
 03237 TSX +0 07400 4 00006    03240 TXH +3 00000 0 01475    03241 TXH +3 00000 0 01470    03242 TXH +3 00000 0 00054   
 03243 TXH +3 00000 0 01501                                                                                             
                   CLOSEW.                                                          203  LM00276
 03244 TSX +0 07400 4 00005                                                                                             
                   RENAME.(IN, FI, TOPNAM, SECNAM)                                  204  LM00277
 03245 TSX +0 07400 4 00020    03246 TXH +3 00000 0 00674    03247 TXH +3 00000 0 00666    03250 TXH +3 00000 0 01475   
 03251 TXH +3 00000 0 01470                                                                                             
                   ASSIGN.(IN, FI)                                                  205  LM00278
 03252 TSX +0 07400 4 00000    03253 TXH +3 00000 0 00674    03254 TXH +3 00000 0 00666                                 
                   OLDNAM = FENCE                                                   206  LM00279
 03255 CLA +0 50000 0 00665    03256 STO +0 60100 0 01461                                                               
                   TRANSFER TO TOPLP                                                207  LM00280
 03257 TRA +0 02000 0 00070                                                                                             
                 OR WHENEVER CWD .E. $  QUIT$ .OR. CWD .E. $     Q$                 208  LM00282
 03260 TRA +0 02000 0 03415    03261 CLA +0 50000 0 00106    03262 SUB +0 40200 0 01544    03263 TZE +0 10000 0 03267   
 03264 CLA +0 50000 0 00106    03265 SUB +0 40200 0 01524    03266 TNZ -0 10000 0 03303                                 
                   ENDRD.                                                           209  LM00283
 03267 TSX +0 07400 4 00011                                                                                             
                   CLOSEW.                                                          210  LM00284
 03270 TSX +0 07400 4 00005                                                                                             
                   DELFIL.(IN1, FI, DLQ1)                                           211  LM00285
 03271 TSX +0 07400 4 00010    03272 TXH +3 00000 0 00673    03273 TXH +3 00000 0 00666    03274 TXH +3 00000 0 00041   
      DLQ1         DELFIL.(IN, FI, DLQ2)                                            212  LM00286
 03275 TSX +0 07400 4 00010    03276 TXH +3 00000 0 00674    03277 TXH +3 00000 0 00666    03300 TXH +3 00000 0 00042   
      DLQ2         TRANSFER TO CHN                                                  213  LM00287
 03301 TRA +0 02000 0 00036                                                                                             
                 OR WHENEVER CWD .E. $  FILE$                                       214  LM00289
 03302 TRA +0 02000 0 03415    03303 CLA +0 50000 0 00106    03304 SUB +0 40200 0 01520    03305 TNZ -0 10000 0 03403   
                   PRINAM = GET.(0)                                                 215  LM00290
 03306 TSX +0 07400 4 00031    03307 TXH +3 00000 0 01500    03310 STO +0 60100 0 01463                                 
                   CLRSW = 1B                                                       216  LM00291
 03311 CLA +0 50000 0 01501    03312 STO +0 60100 0 00104                                                               
                   WHENEVER PRINAM .E. $ $                                          217  LM00292
 03313 CLA +0 50000 0 01463    03314 SUB +0 40200 0 01546    03315 TNZ -0 10000 0 03325                                 
                     PRINAM = OLDNAM                                                218  LM00293
 03316 CLA +0 50000 0 01461    03317 STO +0 60100 0 01463                                                               
                     SECNAM = OLDSEC                                                219  LM00294
 03320 CLA +0 50000 0 01462    03321 STO +0 60100 0 01470                                                               
                     CLRSW = 0B                                                     220  LM00295
 03322 CLA +0 50000 0 01500    03323 STO +0 60100 0 00104                                                               
                   OTHERWISE                                                        221  LM00296
 03324 TRA +0 02000 0 03335                                                                                             
                     SECNAM = GET.(0)                                               222  LM00297
 03325 TSX +0 07400 4 00031    03326 TXH +3 00000 0 01500    03327 STO +0 60100 0 01470                                 
                     WHENEVER SECNAM .E. $ $                                        223  LM00298
 03330 CLA +0 50000 0 01470    03331 SUB +0 40200 0 01546    03332 TNZ -0 10000 0 03335                                 
                       SECNAM = OLDSEC                                              224  LM00299
 03333 CLA +0 50000 0 01462    03334 STO +0 60100 0 01470                                                               
                     END OF CONDITIONAL                                             225  LM00300
                   END OF CONDITIONAL                                               226  LM00301
                   WHENEVER PRINAM .E. FENCE                                        227  LM00302
 03335 CLA +0 50000 0 01463    03336 SUB +0 40200 0 00665    03337 TNZ -0 10000 0 03352                                 
      NONAME         PRINT COMMENT $0N1O0 1F1I1L1E0 1N1A1M1E0 1G1I1V1E1N0.$         228  LM00303
 03340 TSX +0 07400 4 00015    03341     +0 00000 0 00007    03342     +0 04501 4 60060    03343     +0 12601 3 10143   
 03344     +0 12500 6 00145    03345     +0 12101 4 40125    03346     +0 06001 2 70131    03347     +0 16501 2 50145   
 03350     +0 03360 6 06060                                                                                             
                     TRANSFER TO NXRQ                                               229  LM00304
 03351 TRA +0 02000 0 00060                                                                                             
                   END OF CONDITIONAL                                               230  LM00305
                   WRITE.(LINE, LENGTH)                                             231  LM00306
 03352 TSX +0 07400 4 00027    03353 TXH +3 00000 0 01452    03354 TXH +3 00000 0 00700                                 
                   LENGTH = 0                                                       232  LM00307
 03355 CLA +0 50000 0 01500    03356 STO +0 60100 0 00700                                                               
                   WHENEVER OK, BOTTOM.                                             233  LM00308
 03357 NZT -0 52000 0 01460    03360 TRA +0 02000 0 03362    03361 TSX +0 07400 4 00002                                 
                   CLRNAM.(PRINAM, SECNAM, NEWNM, CLRSW)                            234  LM00309
 03362 TSX +0 07400 4 00006    03363 TXH +3 00000 0 01463    03364 TXH +3 00000 0 01470    03365 TXH +3 00000 0 00054   
 03366 TXH +3 00000 0 00104                                                                                             
                   CLOSEW.                                                          235  LM00310
 03367 TSX +0 07400 4 00005                                                                                             
                   DELFIL.(IN1, FI, DL1)                                            236  LM00311
 03370 TSX +0 07400 4 00010    03371 TXH +3 00000 0 00673    03372 TXH +3 00000 0 00666    03373 TXH +3 00000 0 00037   
      DL1          RENAME.(IN, FI, PRINAM, SECNAM)                                  237  LM00312
 03374 TSX +0 07400 4 00020    03375 TXH +3 00000 0 00674    03376 TXH +3 00000 0 00666    03377 TXH +3 00000 0 01463   
 03400 TXH +3 00000 0 01470                                                                                             
      CHN          EXIT.                                                            238  LM00313
 03401 TSX +0 07400 4 00012                                                                                             
                 OTHERWISE                                                          239  LM00315
 03402 TRA +0 02000 0 03415                                                                                             
                   PRINT COMMENT $0N1O1T0 1A0 1R1E1Q1U1E1S1T0:$                     240  LM00316
 03403 TSX +0 07400 4 00015    03404     +0 00000 0 00005    03405     +0 04501 4 60163    03406     +0 06001 2 10060   
 03407     +0 15101 2 50150    03410     +0 16401 2 50162    03411     +0 16300 3 56060                                 
                   TYPOUT.(EDLIN, COUNT)                                            241  LM00317
 03412 TSX +0 07400 4 00025    03413 TXH +3 00000 0 00663    03414 TXH +3 00000 0 00105                                 
                 END OF CONDITIONAL                                                 242  LM00319
                 TRANSFER TO NXRQ                                                   243  LM00320
 03415 TRA +0 02000 0 00060                                                                                             
      EOF        PRINTCOMMENT $0E1N1D0 1O1F0 1F1I1L1E0 1R1E1A1C1H1E1D0 1B1Y0:$      244  LM00322
 03416 TSX +0 07400 4 00015    03417     +0 00000 0 00010    03420     +0 02501 4 50124    03421     +0 06001 4 60126   
 03422     +0 06001 2 60131    03423     +0 14301 2 50060    03424     +0 15101 2 50121    03425     +0 12301 3 00125   
 03426     +0 12400 6 00122    03427     +0 17000 3 56060                                                               
                 TYPOUT.(EDLIN, COUNT)                                              245  LM00323
 03430 TSX +0 07400 4 00025    03431 TXH +3 00000 0 00663    03432 TXH +3 00000 0 00105                                 
                 LENGTH = 0                                                         246  LM00324
 03433 CLA +0 50000 0 01500    03434 STO +0 60100 0 00700                                                               
                 OK = 0B                                                            247  LM00325
 03435 CLA +0 50000 0 01500    03436 STO +0 60100 0 01460                                                               
                 TRANSFER TO NXRQ                                                   248  LM00326
 03437 TRA +0 02000 0 00060                                                                                             
                 INTERNAL FUNCTION                                                  249  LM00334
 03440 TRA +0 02000 0 03510                                                                                             
                 ENTRY TO CLSOUT.                                                   250  LM00335
 03441 TRA +0 02000 0 03444    00030 TTR +0 02100 0 03442    03442 SXA +0 63400 2 03477    03443 TSX +0 07400 2 03477   
                   CLOSEW.                                                          251  LM00336
 03444 TSX +0 07400 4 00005                                                                                             
                   DELFIL.(IN1, FI, DL2)                                            252  LM00337
 03445 TSX +0 07400 4 00010    03446 TXH +3 00000 0 00673    03447 TXH +3 00000 0 00666    03450 TXH +3 00000 0 00040   
      DL2          CHFILE.(IN, FI, -0, IN1)                                         253  LM00338
 03451 CLS +0 50200 0 01500    03452 STO +0 60100 0 03507    03453 TSX +0 07400 4 00004    03454 TXH +3 00000 0 00674   
 03455 TXH +3 00000 0 00666    03456 TXH +3 00000 0 03507    03457 TXH +3 00000 0 00673                                 
                   SEEK.(IN1, FI, CHN)                                              254  LM00339
 03460 TSX +0 07400 4 00021    03461 TXH +3 00000 0 00673    03462 TXH +3 00000 0 00666    03463 TXH +3 00000 0 00036   
                   ASSIGN.(IN, FI)                                                  255  LM00340
 03464 TSX +0 07400 4 00000    03465 TXH +3 00000 0 00674    03466 TXH +3 00000 0 00666                                 
                   OK = 1B                                                          256  LM00341
 03467 CLA +0 50000 0 01501    03470 STO +0 60100 0 01460                                                               
                   LENGTH = 0                                                       257  LM00342
 03471 CLA +0 50000 0 01500    03472 STO +0 60100 0 00700                                                               
                   FSTPAS = 0B                                                      258  LM00343
 03473 CLA +0 50000 0 01500    03474 STO +0 60100 0 00671                                                               
                   FUNCTION RETURN                                                  259  LM00344
 03475 TRA +0 02000 0 03503                                                                                             
                 END OF FUNCTION                                                    260  LM00345
 03476 TSX +0 07400 4 00012    03477 TXH +3 00000 0 00000    03500 SXD -0 63400 1 03477    03501 SXA +0 63400 4 03503   
 03502 TRA +0 02000 2 00001    03503 AXT +0 77400 4 00000    03504 LXA +0 53400 2 03477    03505 LXD -0 53400 1 03477   
 03506 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  261  LM00349
 03510 TRA +0 02000 0 03616                                                                                             
                 ENTRY TO GET.                                                      262  LM00350
 03511 TRA +0 02000 0 03514    00031 TTR +0 02100 0 03512    03512 SXA +0 63400 2 03605    03513 TSX +0 07400 2 03605   
                   WORD = $ $                                                       263  LM00351
 03514 CLA +0 50000 0 01546    03515 STO +0 60100 0 01477                                                               
      SCANLP       THROUGH SCANLP, FOR EDCT = EDCT, 1,                              264  LM00352
                1  (EDLIN(EDCT+1).NE.BLANK) .OR. (EDCT+1.GE.COUNT)                  264  LM00353
 03516 CLA +0 50000 0 00111    03517 STO +0 60100 0 00111    03520 TRA +0 02000 0 03524    03521 CLA +0 50000 0 00111   
 03522 ADD +0 40000 0 01501    03523 STO +0 60100 0 00111    03524 CLA +0 50000 0 00111    03525 ADD +0 40000 0 01501   
 03526 SUB +0 40200 0 00105    03527 TZE +0 10000 0 03540    03530 TPL +0 12000 0 03540    03531 CLA +0 50000 0 00111   
 03532 ADD +0 40000 0 01501    03533 PAX +0 73400 1 00000    03534 CLA +0 50000 1 00663    03535 SUB +0 40200 0 00076   
 03536 TNZ -0 10000 0 03540    03537 TRA +0 02000 0 03521                                                               
       GTLP        EDCT = EDCT + 1                                                  265  LM00354
 03540 CLA +0 50000 0 00111    03541 ADD +0 40000 0 01501    03542 STO +0 60100 0 00111                                 
                   WHENEVER EDLIN(EDCT) .E. BLANK, FUNCTION RETURN WORD             266  LM00355
 03543 LXA +0 53400 1 00111    03544 CLA +0 50000 1 00663    03545 SUB +0 40200 0 00076    03546 TNZ -0 10000 0 03551   
 03547 CLA +0 50000 0 01477    03550 TRA +0 02000 0 03611                                                               
                   WHENEVER EDLIN(EDCT) .E. TAB .OR. EDCT .GE. COUNT                267  LM00356
 03551 CLA +0 50000 0 00111    03552 SUB +0 40200 0 00105    03553 TZE +0 10000 0 03561    03554 TPL +0 12000 0 03561   
 03555 LXA +0 53400 1 00111    03556 CLA +0 50000 1 00663    03557 SUB +0 40200 0 01473    03560 TNZ -0 10000 0 03566   
                     EDCT = EDCT - 1                                                268  LM00357
 03561 CLA +0 50000 0 00111    03562 SUB +0 40200 0 01501    03563 STO +0 60100 0 00111                                 
                     FUNCTION RETURN WORD                                           269  LM00358
 03564 CLA +0 50000 0 01477    03565 TRA +0 02000 0 03611                                                               
                   END OF CONDITIONAL                                               270  LM00359
                   WORD = (WORD .LS. 6) .V. HOL.(EDLIN(EDCT))                       271  LM00360
 03566 CLA +0 50000 0 00111    03567 SUB +0 40200 0 03570    03570 TXH +3 00000 0 00663    03571 STA +0 62100 0 03573   
 03572 TSX +0 07400 4 00014    03573 TXH +3 00000 0 00000    03574 STO +0 60100 0 03615    03575 CAL -0 50000 0 01504   
 03576 STA +0 62100 0 03600    03577 CAL -0 50000 0 01477    03600 ALS +0 76700 0 00000    03601 ORA -0 50100 0 03615   
 03602 SLW +0 60200 0 01477                                                                                             
                   TRANSFER TO GTLP                                                 272  LM00361
 03603 TRA +0 02000 0 00047                                                                                             
                 END OF FUNCTION                                                    273  LM00362
 03604 TSX +0 07400 4 00012    03605 TXH +3 00000 0 00000    03606 SXD -0 63400 1 03605    03607 SXA +0 63400 4 03611   
 03610 TRA +0 02000 2 00001    03611 AXT +0 77400 4 00000    03612 LXA +0 53400 2 03605    03613 LXD -0 53400 1 03605   
 03614 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION(STAR, EN)                                        274  LM00366
 03616 TRA +0 02000 0 03707                                                                                             
                 ENTRY TO PRNT.                                                     275  LM00367
 03617 TRA +0 02000 0 03622    00032 TTR +0 02100 0 03620    03620 SXA +0 63400 2 03666    03621 TSX +0 07400 2 03666   
                   TYPOUT.(LINE, STAR-1)                                            276  LM00368
 03622 CLA +0 50000 0 00024    03623 SUB +0 40200 0 01501    03624 STO +0 60100 0 03706    03625 TSX +0 07400 4 00025   
 03626 TXH +3 00000 0 01452    03627 TXH +3 00000 0 03706                                                               
                   TYPOUT.(REDS, 1)                                                 277  LM00369
 03630 TSX +0 07400 4 00025    03631 TXH +3 00000 0 01466    03632 TXH +3 00000 0 01501                                 
                   TYPOUT.(LINE(STAR-1), EN-STAR+1)                                 278  LM00370
 03633 CLA +0 50000 0 00024    03634 SUB +0 40200 0 00024    03635 ADD +0 40000 0 01501    03636 STO +0 60100 0 03706   
 03637 CLA +0 50000 0 00024    03640 SUB +0 40200 0 01501    03641 SUB +0 40200 0 03642    03642 TXH +3 00000 0 01452   
 03643 STA +0 62100 0 03645    03644 TSX +0 07400 4 00025    03645 TXH +3 00000 0 00000    03646 TXH +3 00000 0 03706   
                   TYPOUT.(BLACKS, 1)                                               279  LM00371
 03647 TSX +0 07400 4 00025    03650 TXH +3 00000 0 00075    03651 TXH +3 00000 0 01501                                 
                   TYPOUT.(LINE(EN), LENGTH-EN)                                     280  LM00372
 03652 CLA +0 50000 0 00700    03653 SUB +0 40200 0 00024    03654 STO +0 60100 0 03706    03655 CLA +0 50000 0 00024   
 03656 SUB +0 40200 0 03657    03657 TXH +3 00000 0 01452    03660 STA +0 62100 0 03662    03661 TSX +0 07400 4 00025   
 03662 TXH +3 00000 0 00000    03663 TXH +3 00000 0 03706                                                               
                   FUNCTION RETURN                                                  281  LM00373
 03664 TRA +0 02000 0 03702                                                                                             
                 END OF FUNCTION                                                    282  LM00374
 03665 TSX +0 07400 4 00012    03666 TXH +3 00000 0 00000    03667 SXD -0 63400 1 03666    03670 SXA +0 63400 4 03702   
 03671 CLA +0 50000 4 00001    03672 STA +0 62100 0 03622    03673 STA +0 62100 0 03634    03674 STA +0 62100 0 03637   
 03675 CLA +0 50000 4 00002    03676 STA +0 62100 0 03633    03677 STA +0 62100 0 03653    03700 STA +0 62100 0 03655   
 03701 TRA +0 02000 2 00001    03702 AXT +0 77400 4 00000    03703 LXA +0 53400 2 03666    03704 LXD -0 53400 1 03666   
 03705 TRA +0 02000 4 00001                                                                                             
                 END OF PROGRAM                                                     283  LM00376
 03707 TSX +0 07400 4 00012                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  TYPVAL   MAD            02/08/68    1747.6
-                 
                 ..  ROUTINE TO RETURN INITIAL VALUES TO EDITOR FOR                                    LM00001    
                 ..  EDITING ASCII FILES.                                                              LM00002    
                                                                                                       LM00003    
                  EXTERNAL FUNCTION(BLANK, TAB, DEFALT, MCHNG, REDS, BLACKS)                      *001 LM00004    
                  NORMAL MODE IS INTEGER                                                          *002 LM00005    
                  ENTRY TO GETVAL.                                                                *003 LM00006    
                    BLANK  = 060K                                                                 *004 LM00007    
                    TAB    = 072K                                                                 *005 LM00008    
                    DEFALT = $(MEMO)$                                                             *006 LM00009    
                    MCHNG  = 055K                                                                 *007 LM00010    
                    REDS   = 133K                                                                 *008 LM00011    
                    BLACKS = 132K                                                                 *009 LM00012    
                    FUNCTION RETURN                                                               *010 LM00013    
                  END OF FUNCTION                                                                 *011 LM00014    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00061 TRANSFER VECTOR LENGTH  00001 PROGRAM BEGINS    00012
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      GETVAL 00013   0                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00006 +000000000132     00007 +000000000133     00003 +000000000055     00011 -344425444634     00005 +000000000072    
 00004 +000000000060     00002 +000000000001     00010 +233000000000                                                    
0PROGRAM    
                 EXTERNAL FUNCTION(BLANK, TAB, DEFALT, MCHNG, REDS, BLACKS)         001  LM00004
                 NORMAL MODE IS INTEGER                                             002  LM00005
                 ENTRY TO GETVAL.                                                   003  LM00006
 00012 TRA +0 02000 0 00015    00013 SXA +0 63400 2 00033    00014 TSX +0 07400 2 00033                                 
                   BLANK  = 060K                                                    004  LM00007
 00015 CLA +0 50000 0 00004    00016 STO +0 60100 0 00024                                                               
                   TAB    = 072K                                                    005  LM00008
 00017 CLA +0 50000 0 00005    00020 STO +0 60100 0 00024                                                               
                   DEFALT = $(MEMO)$                                                006  LM00009
 00021 CLA +0 50000 0 00011    00022 STO +0 60100 0 00024                                                               
                   MCHNG  = 055K                                                    007  LM00010
 00023 CLA +0 50000 0 00003    00024 STO +0 60100 0 00024                                                               
                   REDS   = 133K                                                    008  LM00011
 00025 CLA +0 50000 0 00007    00026 STO +0 60100 0 00024                                                               
                   BLACKS = 132K                                                    009  LM00012
 00027 CLA +0 50000 0 00006    00030 STO +0 60100 0 00024                                                               
                   FUNCTION RETURN                                                  010  LM00013
 00031 TRA +0 02000 0 00053                                                                                             
                 END OF FUNCTION                                                    011  LM00014
 00032 TSX +0 07400 4 00000    00033 TXH +3 00000 0 00000    00034 SXD -0 63400 1 00033    00035 SXA +0 63400 4 00053   
 00036 CLA +0 50000 4 00001    00037 STA +0 62100 0 00016    00040 CLA +0 50000 4 00002    00041 STA +0 62100 0 00020   
 00042 CLA +0 50000 4 00003    00043 STA +0 62100 0 00022    00044 CLA +0 50000 4 00004    00045 STA +0 62100 0 00024   
 00046 CLA +0 50000 4 00005    00047 STA +0 62100 0 00026    00050 CLA +0 50000 4 00006    00051 STA +0 62100 0 00030   
 00052 TRA +0 02000 2 00001    00053 AXT +0 77400 4 00000    00054 LXA +0 53400 2 00033    00055 LXD -0 53400 1 00033   
 00056 TRA +0 02000 4 00001                                                                                             
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 1     
                  
                              *      INPUT AND OUTPUT IS LINE-MARKED FORMAT.  
                              *      J. H. SALTZER, JANUARY, 1965 
                              *     
                       00010         ENTRY   WRITE         WRITE ONE LINE OUT.
                       00071         ENTRY   READ          TO READ NEXT LINE. 
                       00167         ENTRY   BOTTOM        TO RAPIDLY MOVE TO BOTTOM OF FILE.   
                       00062         ENTRY   CLOSEW        CLOSE OUT WRITE FILE.    
                              *     
                                     EXTERN  WRFLX,WRWORD,RDWORD,SETBCD,SETFUL,FILE 
                              *     
                  
        TRANSFER VECTOR 
      00000  665126436760     WRFLX 
      00001  665166465124     WRWORD
      00002  512466465124     RDWORD
      00003  622563222324     SETBCD
      00004  622563266443     SETFUL
      00005  263143256060     FILE  
                  
            LINKAGE DIRECTOR  
      00006  000000000000     
      00007  665131632560     
                  
                       00014   NBITS EQU     12            COULD BE 6, 9, 12, OR 18.
                       00003   NCHRS EQU     36/NBITS      NO. OF CHARACTERS PER WORD ON 7094.  
                              *     
                              *      WRITE.(LINE, LENGTH)   
                              *     
      00010  0634 00 4 00056   WRITE SXA     WX4,4         SAVE LINKAGE AND REGISTERS.    
      00011  0634 00 2 00057         SXA     WX2,2         ..     
      00012  0634 00 1 00060         SXA     WX1,1         ..     
      00013 -0500 00 4 00001         CAL     1,4           GET LINE ADDRESS.  
      00014  0621 00 0 00035         STA     INLP          SET UP LOCATION OF INPUT.
      00015  0500 60 4 00002         CLA*    2,4           GET CHARACTER COUNT.     
      00016  0100 00 4 00003         TZE     3,4           DON'T WORK ON ZERO COUNT.
      00017  0402 00 0 00200         SUB     =1            DISCARD CARRIAGE RETURN AT END.
      00020  0100 00 4 00003         TZE     3,4           ZERO SIZE LINES NOT ALLOWED, EITHER. 
      00021  0767 00 0 00022         ALS     18            SET UP CHARACTER COUNT.  
      00022  0622 00 0 00041         STD     ENDTST        NCHARS = CPW*NWORDS + EXTRAS   
      00023  0361 00 0 00066         ACL     CPWL1         CWP*NWORDS + EXTRAS + CPW - 1  
      00024  0131 00 0 00000         XCA                   (CPW*NWORDS + EXTRAS + CWP - 1)/CPW =
      00025 -0754 00 0 00000         ZAC                        NWORDS + (EXTRAS - 1 + CPW)/CPW 
      00026  0221 00 0 00065         DVP     CPW           SECOND TERM IS 1 IF EXTRAS .G. 0,    
      00027  0131 00 0 00000         XCA                                  0 IF EXTRAS .E. 0     
      00030  0621 00 0 00067         STA     CWD           INSERT IN CONTROL WORD.  
      00031  0074 00 4 00001         TSX     WRWORD,4      INSERT THIS WORD IN OUTPUT BUFFER.   
 TD   00032  3 00000 0 00067         TXH     CWD           ..     
      00033  0774 00 2 00001         AXT     1,2
      00034  0774 00 1 00003   OUTLP AXT     36/NBITS,1    SET CHARACTER COUNTER.   
      00035  0560 00 2 00000   INLP  LDQ     --,2     
      00036 -0773 00 0 00030         RQL     36-NBITS      SHIFT CHARACTER TO POSITION.   
      00037 -0763 00 0 00014         LGL     NBITS         AND INTO WORD.     
      00040  1 00001 2 00041         TXI     *+1,2,1       COUNT INPUT CHARACTERS.  
      00041  3 00000 2 00052  ENDTST TXH     DONE,2,--     CHECK FOR END OF INPUT.  
      00042  2 00001 1 00035         TIX     INLP,1,1 
      00043  0602 00 0 00070         SLW     WDOUT         SAVE COMPLETED WORD.     
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 2     
                  
      00044  0074 00 4 00001   OUT   TSX     WRWORD,4      STORE COMPLETED WORD.    
 TD   00045  3 00000 0 00070         TXH     WDOUT         ..     
      00046  0020 00 0 00034         TRA     OUTLP         GO BACK FOR MORE.  
                              *     
      00047  0560 00 0 00063   NLLP  LDQ     NULL          FILL IN WORD WITH NULLS. 
      00050 -0773 00 0 00030         RQL     36-NBITS      MOVE NULL TO POSITION.   
      00051 -0763 00 0 00014         LGL     NBITS         SHIFT IN A NULL.   
      00052  2 00001 1 00047   DONE  TIX     NLLP,1,1      COUNT SPACES LEFT. 
      00053  0602 00 0 00070         SLW     WDOUT         STORE THIS WORD.   
      00054  0074 00 4 00001         TSX     WRWORD,4      ADD TO OUTPUT BUFFER.    
 TD   00055  3 00000 0 00070         TXH     WDOUT         ..     
      00056  0774 00 4 00000   WX4   AXT     --,4          RESTORE LINKAGE, AND IRS.
      00057  0774 00 2 00000   WX2   AXT     --,2          ..     
      00060  0774 00 1 00000   WX1   AXT     --,1     
      00061  0020 00 4 00003         TRA     3,4           ..     
                              *     
      00062  0020 00 0 00005  CLOSEW TRA     FILE          REFLECT CLOSE CALL TO BUFFER.  
                              *     
                              *     
      00063 +000000000057      NULL  OCT     0057          NULL CHARACTER.    
      00064 +000000000055     RETURN OCT     0055          CARRIAGE RETURN CHARACTER.     
      00065  0 00003 0 00000   CPW           ,,NCHRS       NUMBER OF CHARACTERS PER WORD. 
      00066  0 00002 0 00000   CPWL1         ,,NCHRS-1     CHARACTERS PER WORD LESS ONE.  
                              *     
      00067 -377777000000      CWD   OCT     777777000000   
      00070  0 00000 0 00000   WDOUT                       STORAGE FOR WORD BEING OUTPUT. 
                              *     
                              *      LENGTH = READ.(LINE, BUFSIZ, EOF)  
                              *     
      00071  0634 00 1 00137   READ  SXA     RX1,1         READ NEXT LINE.    
      00072  0634 00 2 00136         SXA     RX2,2    
      00073  0634 00 4 00134         SXA     RX4,4    
      00074  0634 00 3 00135         SXA     RX3,3    
      00075 -0500 00 4 00001         CAL     1,4           GET LOCATION OF BUFFER.  
      00076  0621 00 0 00124         STA     RPUT     
      00077 -0500 60 4 00002         CAL*    2,4           SET UP END TEST.   
      00100  0402 00 0 00200         SUB     =1 
      00101  0767 00 0 00022         ALS     18            ..     
      00102  0622 00 0 00125         STD     BUFTST        ..     
      00103  0074 00 4 00002   RDAGN TSX     RDWORD,4      GET CONTROL WORD.  
      00104  0 00000 0 00141                 EOF           IN CASE WE ARE AT END OF FILE. 
      00105 -0734 00 1 00000         PDX     0,1           PUT FLAG IN IR1.   
      00106  0734 00 3 00000         PAX     0,3           PUT COUNT IN IR3.  
      00107 -2 77776 1 00146         TNX     WOOPS,1,-2    CHECK FLAG.  
      00110 -3 00000 3 00103         TXL     RDAGN,3,0     IGNORE ZERO-LENGTH LINE. 
      00111  0774 00 2 00000   RDON  AXT     0,2           SET OUTPUT COUNTER.
      00112  0074 00 4 00002  ROUTLP TSX     RDWORD,4      READ A WORD. 
      00113  0 00000 0 00141                 EOF           ..     
      00114  0774 00 1 00003         AXT     36/NBITS,1    SET CHARACTER COUNTER.   
      00115  0131 00 0 00000         XCA                   WORD TO MQ.  
      00116 -0754 00 0 00000   RINLP ZAC                   CLEAR AC.    
      00117 -0763 00 0 00014         LGL     NBITS         GET NEXT CHARACTER.
      00120 -0340 00 0 00063         LAS     NULL          IS THIS A NULL CHARACTER.
      00121  0020 00 0 00123         TRA     *+2           NO.    
      00122  0020 00 0 00126         TRA     RCH           YES, SKIP IT.
      00123  1 00001 2 00124         TXI     *+1,2,1       COUNT STORAGE SPACES.    
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 3     
                  
      00124  0602 00 2 00000   RPUT  SLW     --,2          STORE CHARACTER IN LINE. 
      00125  3 00000 2 00133  BUFTST TXH     PXA,2,--      TEST FOR FULL BUFFER.    
      00126  2 00001 1 00116   RCH   TIX     RINLP,1,1     INDEX, AND COUNT CHARACTERS.   
      00127  2 00001 3 00112         TIX     ROUTLP,3,1    INDEX, AND COUNT WORDS.  
      00130 -0500 00 0 00064         CAL     RETURN        PUT RETURN AT END OF LINE.     
      00131  1 00001 2 00132         TXI     *+1,2,1       INCLUDE IN COUNT.  
      00132  0522 00 0 00124         XEC     RPUT          INSTALL IT.  
      00133  0754 00 2 00000   PXA   PXA     0,2           GET WORD COUNT.    
      00134  0774 00 4 00000   RX4   AXT     --,4     
      00135  0774 00 3 00000   RX3   AXT     --,3     
      00136  0774 00 2 00000   RX2   AXT     --,2     
      00137  0774 00 1 00000   RX1   AXT     --,1     
      00140  0020 00 4 00004         TRA     4,4
                              *     
      00141  0534 00 4 00134   EOF   LXA     RX4,4         END OF FILE REACHED, TAKE ERROR
      00142  0534 00 3 00135         LXA     RX3,3         RETURN.
      00143  0534 00 2 00136         LXA     RX2,2    
      00144  0534 00 1 00137         LXA     RX1,1    
      00145  0020 60 4 00003         TRA*    3,4
                              *     
                              *     
      00146  0074 00 4 00003   WOOPS TSX     SETBCD,4      FILE IS NOT LINE-MARKED PROPERLY, COMPLAIN.
      00147  0074 00 4 00000         TSX     WRFLX,4  
      00150  0 00006 0 00161                 MESS1,,6 
      00151  0074 00 4 00004         TSX     SETFUL,4      RESTORE INDICATOR. 
      00152  0074 00 4 00002   LP    TSX     RDWORD,4      SEARCH FOR NEXT LINE MARK.     
      00153  0 00000 0 00141                 EOF
      00154 -0734 00 1 00000         PDX     0,1           CHECK FOR LINE MARK IN THIS WORD.    
      00155 -2 77776 1 00152         TNX     LP,1,-2       ..     
      00156  0734 00 3 00000         PAX     0,3           LINE MARK OK, CHECK COUNT.     
      00157 -3 00000 1 00152         TXL     LP,1,0        ..     
      00160  0020 00 0 00111         TRA     RDON          COUNT NON-ZERO, READ ON. 
                              *     
      00161  314547646360      MESS1 BCI     6,INPUT FILE HAS IMPROPER FORMAT.
      00162  263143256030     
      00163  216260314447     
      00164  514647255160     
      00165  264651442163     
      00166  336060606060     
                              *     
                              *      ROUTINE TO SWING TO BOTTOM OF FILE.
                              *     
      00167  0634 00 4 00176  BOTTOM SXA     EOFB,4        SAVE LINKAGE.
      00170  0074 00 4 00002   LOOP  TSX     RDWORD,4      GET NEXT INPUT WORD.     
      00171  0 00000 0 00176                 EOFB          EXIT ON END OF FILE.     
      00172  0601 00 0 00070         STO     WDOUT         SAVE THIS WORD.    
      00173  0074 00 4 00001         TSX     WRWORD,4      WRITE OUT THIS WORD.     
 TD   00174  3 00000 0 00070         TXH     WDOUT         ..     
      00175  0020 00 0 00170         TRA     LOOP          REPEAT.
                              *     
      00176  0774 00 4 00000  EOFB   AXT     --,4          RESTORE LINKAGE.   
      00177  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
                                     END  
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 4     
                  
        LITERALS  
      00200  000000000001     
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        201 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        152     LP   155,  157
         65    CPW    26
         67    CWD    30,   32
        141    EOF   104,  113,  153
         44    OUT      
        133    PXA   125
        126    RCH   122
        137    RX1    71,  144
        136    RX2    72,  143
        135    RX3    74,  142
        134    RX4    73,  141
         60    WX1    12
         57    WX2    11
         56    WX4    10
         52   DONE    41
        176   EOFB   167,  171
          5   FILE    62
         35   INLP    14,   42
        170   LOOP   175
         47   NLLP    52
         63   NULL    47,  120
        111   RDON   160
         71   READ     0
        124   RPUT    76,  132
         66  CPWL1    23
        161  MESS1   150
         14  NBITS    10,   34,   36,   37,   50,   51,  114,  117
          3  NCHRS    10,   65,   66
         34  OUTLP    46
        103  RDAGN   110
        116  RINLP   126
         70  WDOUT    43,   45,   53,   55,  172,  174
        146  WOOPS   107
          0  WRFLX   147
         10  WRITE     0
        167 BOTTOM     0
        125 BUFTST   102
         62 CLOSEW     0
         41 ENDTST    22
          2 RDWORD   103,  112,  152,  170
         64 RETURN   130
        112 ROUTLP   127
          3 SETBCD   146
          4 SETFUL   151
          1 WRWORD    31,   44,   54,  173
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 1     
                  
                              *      NOTE, INDEX REGISTERS SIX AND SEVEN MUST BE PRESERVED
                              *      BY THE CALLING PROGRAM.
                              *      THIS ROUTINE MAKES TYPEWRITER COMMENTS, BUT DOES NOT 
                              *      AFFECT THE BCD-FULL MODE SWITCH.   
                              *     
                              *           J. H. SALTZER, JANUARY, 1965. 
                              *     
                       00015         ENTRY   ASSIGN        TO ASSIGN A NAME TO THE WRITE FILE.  
                       00057         ENTRY   WRWORD        TO ADD A WORD TO THE FILE.     
                       00100         ENTRY   FILE          TO CLOSE THE FILE. 
                              *     
                       00160         ENTRY   SEEK          TO OPEN A FILE FOR READING.    
                       00242         ENTRY   RDWORD        TO GET A WORD FROM FILE. 
                       00275         ENTRY   ENDRD         TO CLOSE THE FILE. 
                              *     
                                     EXTERN  GETBUF,SETBCD,SETFUL,WRFLX,WRFLXA
                                     EXTERN  OPEN,WRWAIT,RDWAIT,CLOSE,FSTATE,BUFFER 
                              *     
                              *      ASSIGN.($NAME1$,$NAME2$)     
                              *     
                  
        TRANSFER VECTOR 
      00000  272563226426     GETBUF
      00001  622563222324     SETBCD
      00002  622563266443     SETFUL
      00003  665126436760     WRFLX 
      00004  665126436721     WRFLXA
      00005  464725456060     OPEN  
      00006  665166213163     WRWAIT
      00007  512466213163     RDWAIT
      00010  234346622560     CLOSE 
      00011  266263216325     FSTATE
      00012  226426262551     BUFFER
                  
            LINKAGE DIRECTOR  
      00013  000000000000     
      00014  216262312745     
                  
      00015 -0500 60 4 00001  ASSIGN CAL*    1,4           OPEN FILE, GET FILE NAME.
      00016  0602 00 0 00304         SLW     OUTNAM        ..     
      00017 -0500 60 4 00002         CAL*    2,4           ..     
      00020  0602 00 0 00305         SLW     OUTNAM+1      ..     
      00021  0634 00 4 00041         SXA     OPX4,4        SAVE LINKAGE.
      00022  0020 00 0 00023   OSW   TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                    *******************
      00023 -0500 00 0 00315         CAL     WBFSZ         GET AN OUTPUT BUFFER FROM SUPERVISOR.
      00024  0074 00 4 00000         TSX     GETBUF,4      ..     
      00025  0621 00 0 00071         STA     WCALL         SAVE LOCATION OF BUFFER. 
      00026  0621 00 0 00113         STA     CLCALL        TO CLOSE OUT FILE. 
      00027  0361 00 0 00315         ACL     WBFSZ         ADD LENGTH, TO FORM END ADDRESS.     
      00030  0621 00 0 00060         STA     WRNM          INSERT IN INSERTER.
      00031 -0500 00 0 00313         CAL     TRKSZ         GET A DISK TRACK BUFFER. 
      00032  0074 00 4 00000         TSX     GETBUF,4      ..     
      00033  0621 00 0 00055         STA     BFCALL        SET UP BUFFER CALLER.    
      00034 -0625 00 0 00022         STL     OSW           RESET ONE-TIME SWITCH.   
                              *                                                    *******************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 2     
                  
      00035  0774 00 4 00040         AXT     OPOK,4        SET QUOTA EXHAUSTED ERROR RETURN.    
      00036  0634 00 4 00143         SXA     WRTN,4        ..     
      00037  0074 00 3 00043         TSX     OPN,3         OPEN THE FILE.     
      00040  0774 00 7 00330  OPOK   AXT     WBFLTH,7      SET UP STORAGE COUNT.    
      00041  0774 00 4 00000   OPX4  AXT     --,4          RESTORE LINKAGE.   
      00042  0020 00 4 00003         TRA     3,4           RETURN.
                              *     
      00043  0074 00 4 00005  OPN    TSX     OPEN,4        OPEN FILE.   
 TD   00044  3 00000 0 00324         TXH     =HW           FOR WRITING. 
 TD   00045  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00046  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00047  3 00000 0 00156         TXH     MODE          MAKE IT PERMANENT IF POSSIBLE. 
 TD   00050  3 00000 0 00320         TXH     =2            PUT IT ON THE DISK.
 TD   00051  3 00000 0 00127  OPERR  TXH     OEXH          IN CASE NO MORE QUOTA AVAILABLE.     
      00052  0074 00 4 00012         TSX     BUFFER,4      ASSIGN A BUFFER FOR THE FILE.  
 TD   00053  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00054  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00055  3 00660 0 00000  BFCALL TXH     --,,TRKLTH    ..     
      00056  0020 00 3 00001         TRA     1,3           RETURN TO CALLER.  
                              *     
                              *     
                              *      ENTRY TO ADD A WORD TO FILE. 
                              *              WRWORD.(WORD)  
                              *     
      00057 -0500 60 4 00001  WRWORD CAL*    1,4           GET WORD TO BE ADDED.    
      00060  0602 00 7 00000   WRNM  SLW     --,7          ADD WORD TO OUTPUT BUFFER.     
      00061  2 00001 7 00077         TIX     RETURN,7,1    COUNT AND CHECK FOR FULL BUFFER.     
      00062  0634 00 4 00076   FULL  SXA     FULX4,4       BUFFER FULL, WRITE IT OUT.     
      00063  0774 00 4 00065         AXT     WRAGN,4       SET UP EXHAUSTED RETURN ADDRESS.     
      00064  0634 00 4 00143         SXA     WRTN,4        ..     
      00065  0074 00 4 00006  WRAGN  TSX     WRWAIT,4      GIVE BUFFER TO SUPERVISOR.     
 TD   00066  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00067  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00070  3 00000 0 00316         TXH     =0            ..     
      00071  3 00330 0 00000  WCALL  TXH     --,,WBFLTH    ..     
 TD   00072  3 00000 0 00321         TXH     =-0           IGNORE POSSIBLE EOF.     
 TD   00073  3 00000 0 00321         TXH     =-0           ..     
 TD   00074  3 00000 0 00124  WRERR  TXH     WEXH          ALLOW ERROR RETURN.
      00075  0774 00 7 00330         AXT     WBFLTH,7      RESET BUFFER POINTER.    
      00076  0774 00 4 00000   FULX4 AXT     --,4          RESTORE LINKAGE.   
      00077  0020 00 4 00002  RETURN TRA     2,4           RETURN TO CALLER.  
                              *     
                              *      FILE.     NO ARGUMENTS.
                              *     
      00100  0634 00 4 00122  FILE   SXA     CL4,4         ENTRY TO CLOSE OUT FILE. 
      00101 -0634 00 7 00103         SXD     *+2,7         FORM COUNT OF WORDS SINCE
      00102  0774 00 7 00330         AXT     WBFLTH,7      LAST BUFFER WAS WRITTEN. 
      00103 -2 00000 7 00117         TNX     NOWR,7,--     IF ZERO, SKIP FINAL WRITE CALL.
      00104 -0634 00 7 00113         SXD     CLCALL,7      NON-ZERO, SET UP WRITE CALL.   
      00105  0774 00 4 00107         AXT     FWR,4         SET UP RETURN ADDRESS FOR EXHAUSTED CASE.  
      00106  0634 00 4 00143         SXA     WRTN,4        ..     
      00107  0074 00 4 00006  FWR    TSX     WRWAIT,4      WRITE OUT PARTIAL BUFFER.
 TD   00110  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00111  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00112  3 00000 0 00316         TXH     =0            ..     
      00113  3 00000 0 00000  CLCALL TXH     --,,--        ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 3     
                  
 TD   00114  3 00000 0 00321         TXH     =-0           IGNORE EOF RETURN. 
 TD   00115  3 00000 0 00321         TXH     =-0           ..     
 TD   00116  3 00000 0 00124         TXH     WEXH          ALLOW ERROR RETURN.
      00117  0074 00 4 00010  NOWR   TSX     CLOSE,4       CLOSE OUT THE FILE.
 TD   00120  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00121  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00122  0774 00 4 00000   CL4   AXT     --,4          RESTORE LINKAGE.   
      00123  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00124  0074 00 4 00010  WEXH   TSX     CLOSE,4       TRACK QUOTA EXHAUSTED, CLOSE FILE.   
 TD   00125  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00126  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00127  0074 00 4 00001  OEXH   TSX     SETBCD,4      ENTRY FROM OPEN ERROR, COMMENT.
      00130  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00131  0074 00 4 00003         TSX     WRFLX,4       ..     
      00132  0 00011 0 00144                 ERMESS,,9
      00133  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00134  0074 00 4 00002         TSX     SETFUL,4      YES, RESET INDICATOR.    
      00135 -0500 00 0 00317         CAL     =1            SWITCH TO TEMPORARY MODE.
      00136  0601 00 0 00156         STO     MODE          ..     
      00137 -0500 00 0 00155         CAL     NOP           BLOCK FUTURE ERROR RETURN.     
      00140  0602 00 0 00051         SLW     OPERR         ..     
      00141  0602 00 0 00074         SLW     WRERR    
      00142  0074 00 3 00043         TSX     OPN,3         NOW, OPEN IT AGAIN.
      00143  0020 00 0 00000  WRTN   TRA     --            ALL FIXED, RETURN TO MAIN STREAM.    
                              *     
      00144  635121234260     ERMESS BCI     9,TRACK QUOTA EXHAUSTED, TEMPORARY MODE WILL BE USED.    
      00145  506446632160     
      00146  256730216462     
      00147  632524736063     
      00150  254447465121     
      00151  517060444624     
      00152  256066314343     
      00153  602225606462     
      00154  252433606060     
      00155  0761 00 0 00000   NOP   NOP                   INSTRUCTION TO BLOCK ERROR RETURN.   
      00156  0 00000 0 00000  MODE           0             START IN PERMANENT MODE. 
      00157  0 00000 0 00000  MODSW                        TEMP STORAGE FOR 6-BIT,12-BIT INDICATOR.   
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     
                              *      SEEK.($NAME1$, $NAME2$, ERRET)     
                              *      ERROR RETURN MEANS FILE NOT FOUND. 
                              *     
      00160 -0500 60 4 00001   SEEK  CAL*    1,4           GET FILE NAME.     
      00161  0602 00 0 00306         SLW     INNAM         ..     
      00162 -0500 60 4 00002         CAL*    2,4           ..     
      00163  0602 00 0 00307         SLW     INNAM+1       ..     
      00164  0634 00 4 00222         SXA     SKX4,4        SAVE LINKAGE.
      00165  0020 00 0 00166   SKSW  TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                  *********************
      00166 -0500 00 0 00314         CAL     RBFSZ         GET A BUFFER FROM SUPERVISOR.  
      00167  0074 00 4 00000         TSX     GETBUF,4      ..     
      00170  0621 00 0 00257         STA     ECALL         STORE BUFFER LOCATION.   
      00171  0621 00 0 00217         STA     STCALL        ..     
      00172 -0625 00 0 00165         STL     SKSW          RESET ONE-TIME SWITCH.   
                              *                                                  *********************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 4     
                  
      00173 -0500 00 0 00217         CAL     STCALL        SET UP PICKUP INSTRUCTION FOR INDEXING.    
      00174  0361 00 0 00314         ACL     RBFSZ         ..     
      00175  0621 00 0 00242         STA     RDWORD        ..     
      00176  0074 00 4 00011         TSX     FSTATE,4      MAKE SURE FILE IS THERE. 
 TD   00177  3 00000 0 00306         TXH     INNAM         ..     
 TD   00200  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00201  3 00000 0 00321         TXH     =-0           DON'T WANT DATA.   
 TD   00202  3 00000 0 00224         TXH     NOTFN         ERROR RETURN MEANS FILE NOT THERE.   
      00203  0074 00 4 00005         TSX     OPEN,4        OPEN THE FILE FOR READING.     
 TD   00204  3 00000 0 00322         TXH     =HR           ..     
 TD   00205  3 00000 0 00306         TXH     INNAM         ..     
 TD   00206  3 00000 0 00307         TXH     INNAM+1       ..     
      00207  0774 00 6 00660         AXT     RBFLTH,6      SET UP BUFFER COUNTER.   
      00210  0774 00 4 00222         AXT     SKX4,4        SET END OF FILE RETURN.  
      00211  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00212  0600 00 0 00312         STZ     EOFR          CLEAR END OF FILE SWITCH.
      00213  0074 00 4 00007         TSX     RDWAIT,4      GET INITIAL BUFFER LOAD. 
 TD   00214  3 00000 0 00306         TXH     INNAM         ..     
 TD   00215  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00216  3 00000 0 00316         TXH     =0            ..     
      00217  3 00660 0 00000  STCALL TXH     --,,RBFLTH    ..     
 TD   00220  3 00000 0 00265         TXH     EOF           END OF FILE RETURN.
 TD   00221  3 00000 0 00311         TXH     EOFCT         ..     
      00222  0774 00 4 00000   SKX4  AXT     --,4          RESTORE LINKAGE.   
      00223  0020 00 4 00004         TRA     4,4           RETURN TO CALLER.  
                              *     
      00224  0074 00 4 00001  NOTFN  TSX     SETBCD,4      FILE NOT FOUND, COMMENT. 
      00225  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00226  0074 00 4 00004         TSX     WRFLXA,4      START UP COMMENT.  
      00227  0 00001 0 00323                 =H FILE ,,1   ..     
      00230  0074 00 4 00004         TSX     WRFLXA,4      INSERT FILE NAME.  
      00231  0 00002 0 00306                 INNAM,,2      ..     
      00232  0074 00 4 00003         TSX     WRFLX,4       END OF COMMENT.    
      00233  0 00002 0 00240                 ECM,,2        ..     
      00234  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00235  0074 00 4 00002         TSX     SETFUL,4      YES, RESET MODE.   
      00236  0534 00 4 00222         LXA     SKX4,4        GIVE ERROR RETURN. 
      00237  0020 60 4 00003         TRA*    3,4           ..     
                              *     
      00240  604546636026     ECM    BCI     2, NOT FOUND.  
      00241  466445243360     
                              *     
                              *      ENTRY TO OBTAIN WORD FROM FILE.    
                              *              WORD = RDWORD.(EOF)  
                              *     
      00242  0500 00 6 00000  RDWORD CLA     --,6          GET WORD FROM INPUT BUFFER.    
      00243  2 00001 6 00264         TIX     GOBACK,6,1    INDEX, AND CHECK FOR EMPTY BUFFER.   
      00244  0520 00 0 00312         ZET     EOFR          BUFFER EMPTY, HAS END OF FILE OCCURRED.    
      00245  0020 60 4 00001         TRA*    1,4           YES, GIVE EOF RETURN.    
      00246  0601 00 0 00310         STO     RTEMP         NO, SAVE WORD AND GET SOME MORE DATA.
      00247  0634 00 4 00263         SXA     EMPX4,4       SAVE LINKAGE, ALSO.
      00250  0774 00 6 00660         AXT     RBFLTH,6      RESET BUFFER POINTER.    
      00251  0774 00 4 00262         AXT     EMPGT,4       SET END OF FILE RETURN.  
      00252  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00253  0074 00 4 00007         TSX     RDWAIT,4      GET ANOTHER BUFFER LOAD OF DATA.     
 TD   00254  3 00000 0 00306         TXH     INNAM         ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 5     
                  
 TD   00255  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00256  3 00000 0 00316         TXH     =0            ..     
      00257  3 00660 0 00000  ECALL  TXH     --,,RBFLTH    ..     
 TD   00260  3 00000 0 00265         TXH     EOF           ..     
 TD   00261  3 00000 0 00311         TXH     EOFCT         ..     
      00262  0500 00 0 00310   EMPGT CLA     RTEMP         RESTORE WORD FOR THIS CALL.    
      00263  0774 00 4 00000   EMPX4 AXT     --,4          RESTORE LINKAGE.   
      00264  0020 00 4 00002  GOBACK TRA     2,4           RETURN TO CALLER.  
                              *     
      00265 -0625 00 0 00312  EOF    STL     EOFR          END OF FILE REACHED, SET SWITCH.     
      00266 -0500 00 0 00311         CAL     EOFCT         GET COUNT OF WORDS LEFT. 
      00267  0361 00 0 00317         ACL     =1            BUGGER WORD COUNT. 
      00270  0734 00 6 00000         PAX     0,6           SET WORD COUNTER.  
      00271  0361 00 0 00257         ACL     ECALL         ADJUST PICKUP INSTRUCTION.     
      00272  0621 00 0 00242         STA     RDWORD        ..     
      00273  0074 00 4 00275         TSX     ENDRD,4       TURN OFF FILE.     
      00274  0020 00 0 00000  EOFRTN TRA     --            RETURN TO END OF RDFILE CALLING SEQUENCE.  
                              *     
                              *      ENTRY TO CLOSE INPUT FILE.   
                              *      ENDRD.     
                              *     
      00275  0634 00 4 00302  ENDRD  SXA     ENDX4,4       SAVE LINKAGE.
      00276  0074 00 4 00010         TSX     CLOSE,4       CLOSE FILE.  
 TD   00277  3 00000 0 00306         TXH     INNAM         ..     
 TD   00300  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00301  3 00000 0 00302         TXH     *+1           IGNORE ANY ERROR RETURN. 
      00302  0774 00 4 00000  ENDX4  AXT     --,4          RESTORE LINKAGE.   
      00303  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00304  545454545454     OUTNAM BCI     2,************  NAME OF OUTPUT FILE.   
      00305  545454545454     
      00306  545454545454      INNAM BCI     2,************  NAME OF INPUT FILE.    
      00307  545454545454     
      00310  0 00000 0 00000   RTEMP                       STORAGE FOR WORD.  
      00311  0 00000 0 00000  EOFCT                        STORAGE FOR END OF FILE COUNTER.     
      00312  0 00000 0 00312   EOFR          *             SWITCH FOR END OF FILE MET.    
                              *     
                       00660  TRKLTH EQU     432           DISK TRACK LENGTH. 
      00313  0 00000 0 00660   TRKSZ         TRKLTH        WORD CONTAINING TRACK LENGTH.  
                       00660  RBFLTH EQU     TRKLTH        READ BUFFER LENGTH.
                       00330  WBFLTH EQU     TRKLTH/2      WRITE BUFFER LENGTH.     
      00314  0 00000 0 00660  RBFSZ          RBFLTH        WORD CONTAINING READ BUFFER SIZE.    
      00315  0 00000 0 00330  WBFSZ          WBFLTH        WORD CONTAINING WRITE BUFFER SIZE.   
                              *     
                                     END  
                  
        LITERALS  
      00316  000000000000     
      00317  000000000001     
      00320  000000000002     
      00321  400000000000     
      00322  516060606060     
      00323  602631432560     
      00324  666060606060     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        325 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        122    CL4   100
        240    ECM   233
        265    EOF   220,  260
        107    FWR   105
        155    NOP   137
         43    OPN    37,  142
         22    OSW    34
        312   EOFR   212,  244,  265
        100   FILE     0
         62   FULL      
        156   MODE    47,  136
        117   NOWR   103
        127   OEXH    51
          5   OPEN    43,  203
         40   OPOK    35
         41   OPX4    21
        160   SEEK     0
        165   SKSW   172
        222   SKX4   164,  210,  236
        124   WEXH    74,  116
         60   WRNM    30
        143   WRTN    36,   64,  106
         10  CLOSE   117,  124,  276
        257  ECALL   170,  271
        262  EMPGT   251
        263  EMPX4   247
        275  ENDRD     0,  273
        302  ENDX4   275
        311  EOFCT   221,  261,  266
         76  FULX4    62
        306  INNAM   161,  163,  177,  200,  205,  206,  214,  215,  231,  254,  255,  277,  300
        157  MODSW   130,  133,  225,  234
        224  NOTFN   202
         51  OPERR   140
        314  RBFSZ   166,  174
        310  RTEMP   246,  262
        313  TRKSZ    31
        315  WBFSZ    23,   27
         71  WCALL    25
         65  WRAGN    63
         74  WRERR   141
          3  WRFLX   131,  232
         15 ASSIGN     0
         55 BFCALL    33
         12 BUFFER    52
        113 CLCALL    26,  104
        274 EOFRTN   211,  252
        144 ERMESS   132
         11 FSTATE   176
          0 GETBUF    24,   32,  167
        264 GOBACK   243
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        304 OUTNAM    16,   20,   45,   46,   53,   54,   66,   67,  110,  111,  120,  121,  125,  126
        660 RBFLTH   207,  217,  250,  257,  314
          7 RDWAIT   213,  253
        242 RDWORD     0,  175,  272
         77 RETURN    61
          1 SETBCD   127,  224
          2 SETFUL   134,  235
        217 STCALL   171,  173
        660 TRKLTH    55,  313,  314
        330 WBFLTH    40,   71,   75,  102,  314,  315
          4 WRFLXA   226,  230
          6 WRWAIT    65,  107
         57 WRWORD     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 1     
                  
                              *      USAGE  CLRNAM.(NAME1, NAME2, CANT, SW)   
                              *        FILE NAME1 NAME2 WILL BE CHECKED FOR AND     
                              *        DELETED IF POSSIBLE.  IF SW
                              *        IS TRUE, USER WILL BE ASKED BEFORE DELETING  
                              *        THE OLD FILE.  
                              *     
                       00012         ENTRY   CLRNAM        CLEAR FILE NAME.   
                              *     
                                     EXTERN  SETFUL,SETBCD,WRFLX,WRFLXA,RDFLXA
                                     EXTERN  FSTATE,CHFILE,DELFIL 
                              *     
                  
        TRANSFER VECTOR 
      00000  622563266443     SETFUL
      00001  622563222324     SETBCD
      00002  665126436760     WRFLX 
      00003  665126436721     WRFLXA
      00004  512426436721     RDFLXA
      00005  266263216325     FSTATE
      00006  233026314325     CHFILE
      00007  242543263143     DELFIL
                  
            LINKAGE DIRECTOR  
      00010  000000000000     
      00011  234351452144     
                  
      00012 -0500 60 4 00001  CLRNAM CAL*    1,4           GET FILE NAME.     
      00013  0602 00 0 00121         SLW     N1            ..     
      00014 -0500 60 4 00002         CAL*    2,4           SECONDARY NAME.    
      00015  0602 00 0 00122         SLW     N2            ..     
      00016  0634 00 4 00147         SXA     SV4,4         SAVE LINKAGE.
      00017  0074 00 4 00005         TSX     FSTATE,4      CHECK STATE OF FILE.     
 TD   00020  3 00000 0 00121         TXH     N1            NAME   
 TD   00021  3 00000 0 00122         TXH     N2            NAME   
      00022  3 00010 0 00156         TXH     DATA,,8       FILE STATE   
 TD   00023  3 00000 0 00112         TXH     FSTERR        IN CASE OF ERROR   
 TD   00024  3 00000 0 00155         TXH     ERNO          GATHER ERROR NUMBER.     
      00025  0441 00 0 00157         LDI     MODE          CHECK MODE OF FILE.
      00026 -0054 00  400000         LFT     400000        IS MODE NEGATIVE.  
      00027  0020 00 0 00100         TRA     LINKED        YES, FILE IS LINKED.     
      00030  0600 00 0 00154         STZ     PROTEC        ASSUME NOT PROTECTED.    
      00031  0056 00  000100         RNT     100           CHECK PROTECTED BIT.     
      00032  0020 00 0 00035         TRA     CKASK         NOT PROTECTED, SHOULD WE ASK ANYWAY. 
      00033 -0625 00 0 00154         STL     PROTEC        PROTECTED, SET SWITCH FOR LONG COMMENT.    
      00034  0020 00 0 00040         TRA     ASK           GO ASK PERMISSION TO DELETE FILE.    
      00035  0534 00 4 00147  CKASK  LXA     SV4,4         GET LINKAGE TO ASK SWITCH.     
      00036 -0520 60 4 00004         NZT*    4,4           SHOULD WE ASK PERMISSION ANYWAY.     
      00037  0020 00 0 00065         TRA     DELETE        NO, GO DELETE FILE.
      00040  0074 00 4 00000  ASK    TSX     SETFUL,4      SET CHARACTER MODE SWITCH.     
      00041  0074 00 4 00003         TSX     WRFLXA,4      BEGIN THE COMMENT. 
      00042  0 00003 0 00116                 MI,,3         ..     
      00043  0074 00 4 00001         TSX     SETBCD,4      SWITCH TO BCD FOR FILE NAME.   
      00044  0074 00 4 00003         TSX     WRFLXA,4      WRITE OUT FILE NAME.     
      00045  0 00002 0 00121                 N1,,2    
      00046  0074 00 4 00000         TSX     SETFUL,4      BACK TO FULL MODE. 
      00047 -0520 00 0 00154         NZT     PROTEC        SHOULD WE CLAIM IT IS PROTECTED.     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 2     
                  
      00050  0020 00 0 00053         TRA     SKPPCM        NO, SKIP THAT PART.
      00051  0074 00 4 00003         TSX     WRFLXA,4      YES, ANNOUNC PROTECTED PART.   
      00052  0 00006 0 00123                 ISPTC,,6      ..     
      00053  0074 00 4 00003  SKPPCM TSX     WRFLXA,4      NOW ASK FOR PERMISSION.  
      00054  0 00012 0 00131                 DOYOU,,10     ..     
      00055  0074 00 4 00001         TSX     SETBCD,4      SWITCH SO ERASE WORKS.   
      00056  0074 00 4 00004         TSX     RDFLXA,4 
      00057  0 00001 0 00150                 IN,,1         GET ONE WORD.
      00060  0074 00 4 00000         TSX     SETFUL,4      RESTORE MODE.
      00061 -0500 00 0 00150         CAL     IN            GET THAT WORD.     
      00062  0771 00 0 00022         ARS     18            GET FIRST THREE CHARACTERS.    
      00063  0322 00 0 00170         ERA     =H000YES      DID HE SAY YES.    
      00064 -0100 00 0 00076         TNZ     ERTN          NO, GIVE ERROR RETURN.   
      00065  0074 00 4 00006  DELETE TSX     CHFILE,4      GOODY, WE CAN DELETE IT. 
 TD   00066  3 00000 0 00121         TXH     N1            MAKE SURE IT IS DELETEABLE.    
 TD   00067  3 00000 0 00122         TXH     N2            ..     
 TD   00070  3 00000 0 00166         TXH     =1            BY CHANGING ITS MODE TO TEMPORARY.   
      00071  0074 00 4 00007         TSX     DELFIL,4      DELETE THE SILLY THING.  
 TD   00072  3 00000 0 00121         TXH     N1            ..     
 TD   00073  3 00000 0 00122         TXH     N2            ..     
      00074  0534 00 4 00147  RTN    LXA     SV4,4         RESTORE THE LINKAGE.     
      00075  0020 00 4 00005         TRA     5,4           RETURN TO CALLER.  
                              *     
      00076  0534 00 4 00147  ERTN   LXA     SV4,4         ERROR RETURN, FILE CANNOT BE DELETED.
      00077  0020 60 4 00003         TRA*    3,4           RETURN THROUGH ERROR RETURN.   
                              *     
      00100  0074 00 4 00000  LINKED TSX     SETFUL,4      FILE IS LINKED, COMMENT AND GIVE UP. 
      00101  0074 00 4 00003         TSX     WRFLXA,4      START THE COMMENT. 
      00102  0 00003 0 00116                 MI,,3         ..     
      00103  0074 00 4 00001         TSX     SETBCD,4      SWITCH MODE FOR FILE NAME.     
      00104  0074 00 4 00003         TSX     WRFLXA,4      TYPE FILE NAME.    
      00105  0 00002 0 00121                 N1,,2         ..     
      00106  0074 00 4 00000         TSX     SETFUL,4      SWITCH FOR REST OF COMMENT.    
      00107  0074 00 4 00002         TSX     WRFLX,4       END THIS PART WITH A C.R.
      00110  0 00004 0 00143                 ISLNK,,4      ..     
      00111  0020 00 0 00076         TRA     ERTN          NOW GIVE AN ERROR RETURN.
                              *     
      00112  0500 00 0 00155  FSTERR CLA     ERNO          ERROR RETURN FROM FSTATE, FIND OUT WHY.    
      00113  0402 00 0 00167         SUB     =3            RETURN 3 MEANS FILE NOT FOUND. 
      00114 -0100 00 0 00100         TNZ     LINKED        WRONG ERROR RETURN, ASSUME LINKED.   
      00115  0020 00 0 00074         TRA     RTN           FILE NOT FOUND, NAME IS OK.    
                              *     
                              *                            DATA, COMMENTS, ETC.     
                              *     
      00116  004601430124     MI     BCI     3,0O1L1D0 1F1I1L1E0  
      00117  006001260131     
      00120  014301250060     
                              *     
      00121  0 00000 0 00000  N1                           STORAGE FOR FILE NAME.   
      00122  0 00000 0 00000  N2                           SECONDARY NAME.    
                              *     
      00123  006001310162     ISPTC  BCI     1,0 1I1S 
      00124 +006001330057            OCT     006001330057  BLANK, RED SHIFT, NULL.  
      00125  004700510046            BCI     3,0P0R0O0T0E0C0T0E0D 
      00126  006300250023     
      00127  006300250024     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 3     
                  
      00130 +013200330060            OCT     013200330060  BLACK SHIFT, PERIOD, BLANK.    
      00131  006000400040     DOYOU  BCI     9,0 0-0-0D1O0 1Y1O1U0 1W1I1S1H0 1T1O0 1D1E1L1E1T1E0 1I1T 
      00132  002401460060     
      00133  017001460164     
      00134  006001660131     
      00135  016201300060     
      00136  016301460060     
      00137  012401250143     
      00140  012501630125     
      00141  006001310163     
      00142 +015600600060            OCT     015600600060  TERMINAL QUESTION MARK.  
                              *     
      00143  006001310162     ISLNK  BCI     4,0 1I1S0 1L1I1N1K1E1D0.   
      00144  006001430131     
      00145  014501420125     
      00146  012400336060     
                              *     
      00147  0 00000 0 00000  SV4                          STORAGE FOR CALLING LINKAGE.   
      00150                   IN     BSS     4             FOR INPUT WORD.    
      00154  0 00000 0 00000  PROTEC                       SWITCH FOR PROTECTED FILE.     
      00155  0 00000 0 00000  ERNO                         STORAGE FOR ERROR NUMBER.
      00156                   DATA   BSS     8             FOR STATE INFORMATION.   
                       00161  DEVICE EQU     DATA+3   
                       00157  MODE   EQU     DATA+1   
                              *     
                                     END  
                  
        LITERALS  
      00166  000000000001     
      00167  000000000003     
      00170  000000702562     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        171 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        150     IN    57,   61
        116     MI    42,  102
        121     N1    13,   20,   45,   66,   72,  105
        122     N2    15,   21,   67,   73
         40    ASK    34
         74    RTN   115
        147    SV4    16,   35,   74,   76
        156   DATA    22,  166
        155   ERNO    24,  112
         76   ERTN    64,  111
        157   MODE    25,  166
         35  CKASK    32
        131  DOYOU    54
        143  ISLNK   110
        123  ISPTC    52
          2  WRFLX   107
          6 CHFILE    65
         12 CLRNAM     0
         65 DELETE    37
          7 DELFIL    71
        161 DEVICE   166
          5 FSTATE    17
        112 FSTERR    23
        100 LINKED    27,  114
        154 PROTEC    30,   33,   47
          4 RDFLXA    56
          1 SETBCD    43,   55,  103
          0 SETFUL    40,   46,   60,  100,  106
         53 SKPPCM    50
          3 WRFLXA    41,   44,   51,   53,  101,  104
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 1     
                  
                              *        J. H. SALTZER, MAY, 1965.  
                              *     
                       00004         ENTRY   RENAME        RENAME FILE. 
                              *     
                                     EXTERN CHFILE,WRFLX    
                              *     
                  
        TRANSFER VECTOR 
      00000  233026314325     CHFILE
      00001  665126436760     WRFLX 
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  512545214425     
                  
      00004  0500 60 4 00001  RENAME CLA*    1,4           GET FILE NAMES.    
      00005  0601 00 0 00071         STO     OLD1          ..     
      00006  0500 60 4 00002         CLA*    2,4           ..     
      00007  0601 00 0 00072         STO     OLD2          ..     
      00010  0601 00 0 00074         STO     NEW2          ASSUME NO CHANGE IN SECONDARY NAMES. 
      00011  0500 60 4 00003         CLA*    3,4           ..     
      00012  0601 00 0 00073         STO     NEW1          ..     
      00013  0560 00 4 00004         LDQ     4,4           CHECK FOR TXH
      00014  0500 00 0 00076         CLA     =O300000000000 ..    
      00015  0040 00 0 00020         TLQ     SKPN2         NO TXH, SECONDARY NAME UNCHANGED.    
      00016  0500 60 4 00004         CLA*    4,4           TXH, CHANGE SECONDARY NAME.    
      00017  0601 00 0 00074         STO     NEW2          ..     
      00020  0634 00 4 00036  SKPN2  SXA     RETURN,4      SAVE LINKAGE.
      00021  0074 00 4 00000         TSX     CHFILE,4      CHANGE NAME WITHOUT CHANGING MODE.   
 TD   00022  3 00000 0 00071         TXH     OLD1          ..     
 TD   00023  3 00000 0 00072         TXH     OLD2          ..     
 TD   00024  3 00000 0 00077         TXH     =-0           MODE UNCHANGED.    
 TD   00025  3 00000 0 00073         TXH     NEW1          ..     
 TD   00026  3 00000 0 00074         TXH     NEW2          ..     
      00027  0074 00 4 00000         TSX     CHFILE,4      CHANGE MODE WITHOUT CHANGING NAME.   
 TD   00030  3 00000 0 00073         TXH     NEW1          ..     
 TD   00031  3 00000 0 00074         TXH     NEW2          ..     
 TD   00032  3 00000 0 00075         TXH     =0            PERMANENT MODE.    
 TD   00033  3 00000 0 00077         TXH     =-0           NAME UNCHANGED.    
 TD   00034  3 00000 0 00077         TXH     =-0           ..     
 TD   00035  3 00000 0 00040         TXH     CHERR         IN CASE MODE UNCHANGEABLE.     
      00036  0774 00 4 00000  RETURN AXT     --,4          RESTORE LINKAGE.   
      00037  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
      00040  0074 00 4 00001  CHERR  TSX     WRFLX,4       ASSUME TRACK QUOTA EXHAUSTED, AND COMMENT. 
      00041  0 00010 0 00045                 TRKQUO,,8     ..     
      00042  0074 00 4 00001         TSX     WRFLX,4       MENTION THAT NEW FILE IS TEMP MODE.  
      00043  0 00013 0 00055                 TMPMOD,,11    ....   
      00044  0020 00 0 00036         TRA     RETURN        EXIT.  
                              *     
                              *              COMMENTS AND STORAGE.
                              *     
      00045  006301510121     TRKQUO BCI     8,0T1R1A1C1K0 1Q1U1O1T1A0 0E0X0H0A0U0S0T0E0D0.     
      00046  012301420060     
      00047  015001640146     
      00050  016301210060     
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 2     
                  
      00051  002500670030     
      00052  002100640062     
      00053  006300250024     
      00054  003360606060     
                              *     
      00055  007001460164     TMPMOD BCI     5,0Y1O1U1R0 1N1E1W0 1F1I1L1E0 1I 
      00056  015100600145     
      00057  012501660060     
      00060  012601310143     
      00061  012500600131     
      00062 +016200600133            OCT     016200600133  S, BLANK, RED SHIFT.     
      00063  006300250044            BCI     3,0T0E0M0P0O0R0A0R0Y 
      00064  004700460051     
      00065  002100510070     
      00066 +013200600144            OCT     013200600144  BLACK SHIFT, BLANK, SMALL M.   
      00067  014601240125            BCI     2,1O1D1E0.     
      00070  003360606060     
                              *     
      00071  0 00000 0 00000  OLD1  
      00072  0 00000 0 00000  OLD2  
      00073  0 00000 0 00000  NEW1  
      00074  0 00000 0 00000  NEW2  
                              *     
                                     END  
                  
        LITERALS  
      00075  000000000000     
      00076  300000000000     
      00077  400000000000     
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        100 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         73   NEW1    12,   25,   30
         74   NEW2    10,   17,   26,   31
         71   OLD1     5,   22
         72   OLD2     7,   23
         40  CHERR    35
         20  SKPN2    15
          1  WRFLX    40,   42
          0 CHFILE    21,   27
          4 RENAME     0
         36 RETURN    20,   44
         55 TMPMOD    43
         45 TRKQUO    41
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1     MAD PROGRAM LISTING ... ... ...                 FILE   12TYP   MAD            02/08/68    1745.9
-                 
                 ..  TYPEWRITER INPUT CHARACTER CONTROL ROUTINE.                                       LM00001    
                 ..  USAGE. . .   COUNT = TYPEIN.(BUFFER, BUFSIZ, ERASE, KILL)                         LM00002    
                           J. H. SALTZER, JANUARY, 1965.                                               LM00003    
                                                                                                       LM00004    
                  EXTERNAL FUNCTION(LINE, BUFSIZ)                                                 *001 LM00005    
                                                                                                       LM00006    
                  NORMAL MODE IS INTEGER                                                          *002 LM00007    
                  VECTOR VALUES NBITS = 12                                                        *003 LM00008    
                  VECTOR VALUES NULL = 0057K                                                      *004 LM00009    
                  VECTOR VALUES ERASE = 0504K                                                     *005 LM00010    
                  VECTOR VALUES KILL = 0506K                                                      *006 LM00011    
                  VECTOR VALUES RETURN = 0055K                                                    *007 LM00012    
                  VECTOR VALUES WRDSIZ = 36                                                       *008 LM00013    
                  VECTOR VALUES CHMASK = 7777K                                                    *009 LM00014    
                                                                                                       LM00015    
                  ENTRY TO SETERS.                                                                *010 LM00016    
                    ERASE = LINE                                                                  *011 LM00017    
                    FUNCTION RETURN                                                               *012 LM00018    
                                                                                                       LM00019    
                  ENTRY TO SETKIL.                                                                *013 LM00020    
                    KILL = LINE                                                                   *014 LM00021    
                    FUNCTION RETURN                                                               *015 LM00022    
                                                                                                       LM00023    
                  ENTRY TO TYPEIN.                                                                *016 LM00024    
                    SIZE = 0                                                                      *017 LM00025    
                    TYLINE.                                                                       *018 LM00026    
       LOOP         WORD = TYWORD.(0)                                                             *019 LM00027    
                    THROUGH DISECT, FOR I = WRDSIZ-NBITS,-NBITS, I .L. 0                          *020 LM00028    
                      CHAR = (WORD.RS.I) .A. CHMASK                                               *021 LM00029    
                      WHENEVER CHAR .E. ERASE                                                     *022 LM00030    
                        WHENEVER SIZE .G. 0, SIZE = SIZE - 1                                      *023 LM00031    
                      OR WHENEVER CHAR .E. KILL                                                   *024 LM00032    
                        SIZE = 0                                                                  *025 LM00033    
                      OR WHENEVER CHAR .E. RETURN .OR. CHAR.RS.6 .E. RETURN                       *026 LM00034    
                        TRANSFER TO UND                                                           *027 LM00035    
                      OTHERWISE                                                                   *028 LM00036    
                        SIZE = SIZE + 1                                                           *029 LM00037    
                        LINE(SIZE) = CHAR                                                         *030 LM00038    
                      END OF CONDITIONAL                                                          *031 LM00039    
       DISECT         WHENEVER SIZE .GE. BUFSIZ, TRANSFER TO UND                                  *032 LM00040    
                    TRANSFER TO LOOP                                                              *033 LM00041    
       UND          CANON.(LINE, SIZE, BUFSIZ)                                                    *034 LM00042    
                    SIZE = SIZE + 1                                                               *035 LM00043    
                    LINE(SIZE) = RETURN                                                           *036 LM00044    
                    FUNCTION RETURN SIZE                                                          *037 LM00045    
                                                                                                       LM00046    
                 ..     TYPEWRITER OUTPUT CHARACTER CONTROL ROUTINE.                                   LM00047    
                 ..     USAGE. . .    TYPOUT.(LINE, LENGTH)                                            LM00048    
                                                                                                       LM00049    
                  ENTRY TO TYPOUT.                                                                *038 LM00050    
                    K = 0                                                                         *039 LM00051    
                    SETFUL.                                                                       *040 LM00052    
                    THROUGH PRLOOP, FOR J = 1, 1, J .G. BUFSIZ                                    *041 LM00053    
                      TWORD = (TWORD .LS. NBITS) .V. LINE(J)                                      *042 LM00054    
                      K = K + 1                                                                   *043 LM00055    
                      WHENEVER K .GE. WRDSIZ/NBITS                                                *044 LM00056    
                        K = 0                                                                     *045 LM00057    
                        PRWORD.(TWORD)                                                            *046 LM00058    
       PRLOOP         END OF CONDITIONAL                                                          *047 LM00059    
                    THROUGH NULPK, FOR K = K, 1, K.GE. WRDSIZ/NBITS                               *048 LM00060    
       NULPK          TWORD = (TWORD.LS.NBITS) .V. NULL                                           *049 LM00061    
                    PRWORD.(TWORD)                                                                *050 LM00062    
                    PRBUFF.                                                                       *051 LM00063    
                    FUNCTION RETURN                                                               *052 LM00064    
                                                                                                       LM00065    
                  ENTRY TO HOL.                                                                   *053 LM00066    
                    WHENEVER LINE .A. 400K .E. 0                                                  *054 LM00067    
                      FUNCTION RETURN LINE .A. 77K                                                *055 LM00068    
                    OTHERWISE                                                                     *056 LM00069    
                      FUNCTION RETURN $00000*$                                                    *057 LM00070    
                    END OF CONDITIONAL                                                            *058 LM00071    
                                                                                                       LM00072    
                  END OF FUNCTION                                                                 *059 LM00073    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00350 TRANSFER VECTOR LENGTH  00007 PROGRAM BEGINS    00037
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      HOL    00277   0        TYPOUT 00175   0        TYPEIN 00054   0        SETKIL 00046   0        SETERS 00040   0  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      CHAR   00012   1        I      00015   1        LOOP   00010   4        PRLOOP 00007   4        UND    00011   4  
      CHMASK 00013 A 1        J      00016   1        NBITS  00021 A 1        RETURN 00023 A 1        WORD   00026   1  
      DISECT 00007   4        KILL   00017 A 1        NULL   00022 A 1        SIZE   00024   1        WRDSIZ 00027 A 1  
      ERASE  00014 A 1        K      00020   1        NULPK  00007   4        TWORD  00025   1                          
0FUNCTION DICTIONARY    
      CANON  00000   1        EXIT   00001   1        PRBUFF 00002   1        PRWORD 00003   1        SETFUL 00004   1  
      TYLINE 00005   1        TYWORD 00006   1                                                                          
0ABSOLUTE CONSTANTS     
 00033 +000000000054     00034 +000000000077     00035 +000000000400     00032 +000000000006     00030 +000000000000    
 00031 +000000000001     00036 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00010 TXL -300064000061       00011 TXL -300164000160                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION(LINE, BUFSIZ)                                    001  LM00005
                 NORMAL MODE IS INTEGER                                             002  LM00007
                 VECTOR VALUES NBITS = 12                                           003  LM00008
 00021     +0 00000 0 00014                                                                                             
                 VECTOR VALUES NULL = 0057K                                         004  LM00009
 00022     +0 00000 0 00057                                                                                             
                 VECTOR VALUES ERASE = 0504K                                        005  LM00010
 00014     +0 00000 0 00504                                                                                             
                 VECTOR VALUES KILL = 0506K                                         006  LM00011
 00017     +0 00000 0 00506                                                                                             
                 VECTOR VALUES RETURN = 0055K                                       007  LM00012
 00023     +0 00000 0 00055                                                                                             
                 VECTOR VALUES WRDSIZ = 36                                          008  LM00013
 00027     +0 00000 0 00044                                                                                             
                 VECTOR VALUES CHMASK = 7777K                                       009  LM00014
 00013     +0 00000 0 07777                                                                                             
                 ENTRY TO SETERS.                                                   010  LM00016
 00037 TRA +0 02000 0 00042    00040 SXA +0 63400 2 00320    00041 TSX +0 07400 2 00320                                 
                   ERASE = LINE                                                     011  LM00017
 00042 CLA +0 50000 0 00024    00043 STO +0 60100 0 00014                                                               
                   FUNCTION RETURN                                                  012  LM00018
 00044 TRA +0 02000 0 00341                                                                                             
                 ENTRY TO SETKIL.                                                   013  LM00020
 00045 TRA +0 02000 0 00050    00046 SXA +0 63400 2 00320    00047 TSX +0 07400 2 00320                                 
                   KILL = LINE                                                      014  LM00021
 00050 CLA +0 50000 0 00024    00051 STO +0 60100 0 00017                                                               
                   FUNCTION RETURN                                                  015  LM00022
 00052 TRA +0 02000 0 00341                                                                                             
                 ENTRY TO TYPEIN.                                                   016  LM00024
 00053 TRA +0 02000 0 00056    00054 SXA +0 63400 2 00320    00055 TSX +0 07400 2 00320                                 
                   SIZE = 0                                                         017  LM00025
 00056 CLA +0 50000 0 00030    00057 STO +0 60100 0 00024                                                               
                   TYLINE.                                                          018  LM00026
 00060 TSX +0 07400 4 00005                                                                                             
       LOOP        WORD = TYWORD.(0)                                                019  LM00027
 00061 TSX +0 07400 4 00006    00062 TXH +3 00000 0 00030    00063 STO +0 60100 0 00026                                 
                   THROUGH DISECT, FOR I = WRDSIZ-NBITS,-NBITS, I .L. 0             020  LM00028
 00064 CLA +0 50000 0 00027    00065 SUB +0 40200 0 00021    00066 STO +0 60100 0 00015    00067 TRA +0 02000 0 00073   
 00070 CLS +0 50200 0 00021    00071 ADD +0 40000 0 00015    00072 STO +0 60100 0 00015    00073 CLA +0 50000 0 00015   
 00074 SUB +0 40200 0 00030    00075 TZE +0 10000 0 00077    00076 TMI -0 12000 0 00157                                 
                     CHAR = (WORD.RS.I) .A. CHMASK                                  021  LM00029
 00077 CAL -0 50000 0 00015    00100 STA +0 62100 0 00102    00101 CAL -0 50000 0 00026    00102 LGR -0 76500 0 00000   
 00103 ANA -0 32000 0 00013    00104 SLW +0 60200 0 00012                                                               
                     WHENEVER CHAR .E. ERASE                                        022  LM00030
 00105 CLA +0 50000 0 00012    00106 SUB +0 40200 0 00014    00107 TNZ -0 10000 0 00120                                 
                       WHENEVER SIZE .G. 0, SIZE = SIZE - 1                         023  LM00031
 00110 CLA +0 50000 0 00024    00111 SUB +0 40200 0 00030    00112 TZE +0 10000 0 00117    00113 TMI -0 12000 0 00117   
 00114 CLA +0 50000 0 00024    00115 SUB +0 40200 0 00031    00116 STO +0 60100 0 00024                                 
                     OR WHENEVER CHAR .E. KILL                                      024  LM00032
 00117 TRA +0 02000 0 00151    00120 CLA +0 50000 0 00012    00121 SUB +0 40200 0 00017    00122 TNZ -0 10000 0 00126   
                       SIZE = 0                                                     025  LM00033
 00123 CLA +0 50000 0 00030    00124 STO +0 60100 0 00024                                                               
                     O'R CHAR .E. RETURN .OR. CHAR.RS.6 .E. RETURN                  026  LM00034
 00125 TRA +0 02000 0 00151    00126 CAL -0 50000 0 00032    00127 STA +0 62100 0 00131    00130 CAL -0 50000 0 00012   
 00131 LGR -0 76500 0 00000    00132 SLW +0 60200 0 00345    00133 CLA +0 50000 0 00345    00134 SUB +0 40200 0 00023   
 00135 TZE +0 10000 0 00141    00136 CLA +0 50000 0 00012    00137 SUB +0 40200 0 00023    00140 TNZ -0 10000 0 00143   
                       TRANSFER TO UND                                              027  LM00035
 00141 TRA +0 02000 0 00011                                                                                             
                     OTHERWISE                                                      028  LM00036
 00142 TRA +0 02000 0 00151                                                                                             
                       SIZE = SIZE + 1                                              029  LM00037
 00143 CLA +0 50000 0 00024    00144 ADD +0 40000 0 00031    00145 STO +0 60100 0 00024                                 
                       LINE(SIZE) = CHAR                                            030  LM00038
 00146 LXA +0 53400 1 00024    00147 CLA +0 50000 0 00012    00150 STO +0 60100 1 00024                                 
                     END OF CONDITIONAL                                             031  LM00039
       DISECT        WHENEVER SIZE .GE. BUFSIZ, TRANSFER TO UND                     032  LM00040
 00151 CLA +0 50000 0 00024    00152 SUB +0 40200 0 00024    00153 TZE +0 10000 0 00155    00154 TMI -0 12000 0 00156   
 00155 TRA +0 02000 0 00011    00156 TRA +0 02000 0 00070                                                               
                   TRANSFER TO LOOP                                                 033  LM00041
 00157 TRA +0 02000 0 00010                                                                                             
       UND         CANON.(LINE, SIZE, BUFSIZ)                                       034  LM00042
 00160 TSX +0 07400 4 00000    00161 TXH +3 00000 0 00024    00162 TXH +3 00000 0 00024    00163 TXH +3 00000 0 00024   
                   SIZE = SIZE + 1                                                  035  LM00043
 00164 CLA +0 50000 0 00024    00165 ADD +0 40000 0 00031    00166 STO +0 60100 0 00024                                 
                   LINE(SIZE) = RETURN                                              036  LM00044
 00167 LXA +0 53400 1 00024    00170 CLA +0 50000 0 00023    00171 STO +0 60100 1 00024                                 
                   FUNCTION RETURN SIZE                                             037  LM00045
 00172 CLA +0 50000 0 00024    00173 TRA +0 02000 0 00341                                                               
                 ENTRY TO TYPOUT.                                                   038  LM00050
 00174 TRA +0 02000 0 00177    00175 SXA +0 63400 2 00320    00176 TSX +0 07400 2 00320                                 
                   K = 0                                                            039  LM00051
 00177 CLA +0 50000 0 00030    00200 STO +0 60100 0 00020                                                               
                   SETFUL.                                                          040  LM00052
 00201 TSX +0 07400 4 00004                                                                                             
                   THROUGH PRLOOP, FOR J = 1, 1, J .G. BUFSIZ                       041  LM00053
 00202 CLA +0 50000 0 00031    00203 STO +0 60100 0 00016    00204 TRA +0 02000 0 00210    00205 CLA +0 50000 0 00016   
 00206 ADD +0 40000 0 00031    00207 STO +0 60100 0 00016    00210 CLA +0 50000 0 00016    00211 SUB +0 40200 0 00024   
 00212 TZE +0 10000 0 00214    00213 TPL +0 12000 0 00244                                                               
                     TWORD = (TWORD .LS. NBITS) .V. LINE(J)                         042  LM00054
 00214 CAL -0 50000 0 00021    00215 STA +0 62100 0 00217    00216 CAL -0 50000 0 00025    00217 ALS +0 76700 0 00000   
 00220 LXA +0 53400 2 00016    00221 ORA -0 50100 2 00024    00222 SLW +0 60200 0 00025                                 
                     K = K + 1                                                      043  LM00055
 00223 CLA +0 50000 0 00020    00224 ADD +0 40000 0 00031    00225 STO +0 60100 0 00020                                 
                     WHENEVER K .GE. WRDSIZ/NBITS                                   044  LM00056
 00226 LDQ +0 56000 0 00027    00227 PXD -0 75400 0 00000    00230 LLS +0 76300 0 00000    00231 DVP +0 22100 0 00021   
 00232 XCA +0 13100 0 00000    00233 CHS +0 76000 0 00002    00234 ADD +0 40000 0 00020    00235 TZE +0 10000 0 00237   
 00236 TMI -0 12000 0 00243                                                                                             
                       K = 0                                                        045  LM00057
 00237 CLA +0 50000 0 00030    00240 STO +0 60100 0 00020                                                               
                       PRWORD.(TWORD)                                               046  LM00058
 00241 TSX +0 07400 4 00003    00242 TXH +3 00000 0 00025                                                               
       PRLOOP        END OF CONDITIONAL                                             047  LM00059
 00243 TRA +0 02000 0 00205                                                                                             
                   THROUGH NULPK, FOR K = K, 1, K.GE. WRDSIZ/NBITS                  048  LM00060
 00244 CLA +0 50000 0 00020    00245 STO +0 60100 0 00020    00246 TRA +0 02000 0 00252    00247 CLA +0 50000 0 00020   
 00250 ADD +0 40000 0 00031    00251 STO +0 60100 0 00020    00252 LDQ +0 56000 0 00027    00253 PXD -0 75400 0 00000   
 00254 LLS +0 76300 0 00000    00255 DVP +0 22100 0 00021    00256 XCA +0 13100 0 00000    00257 CHS +0 76000 0 00002   
 00260 ADD +0 40000 0 00020    00261 TZE +0 10000 0 00272    00262 TPL +0 12000 0 00272                                 
       NULPK         TWORD = (TWORD.LS.NBITS) .V. NULL                              049  LM00061
 00263 CAL -0 50000 0 00021    00264 STA +0 62100 0 00266    00265 CAL -0 50000 0 00025    00266 ALS +0 76700 0 00000   
 00267 ORA -0 50100 0 00022    00270 SLW +0 60200 0 00025    00271 TRA +0 02000 0 00247                                 
                   PRWORD.(TWORD)                                                   050  LM00062
 00272 TSX +0 07400 4 00003    00273 TXH +3 00000 0 00025                                                               
                   PRBUFF.                                                          051  LM00063
 00274 TSX +0 07400 4 00002                                                                                             
                   FUNCTION RETURN                                                  052  LM00064
 00275 TRA +0 02000 0 00341                                                                                             
                 ENTRY TO HOL.                                                      053  LM00066
 00276 TRA +0 02000 0 00301    00277 SXA +0 63400 2 00320    00300 TSX +0 07400 2 00320                                 
                   WHENEVER LINE .A. 400K .E. 0                                     054  LM00067
 00301 CAL -0 50000 0 00024    00302 ANA -0 32000 0 00035    00303 SLW +0 60200 0 00345    00304 CLA +0 50000 0 00345   
 00305 SUB +0 40200 0 00030    00306 TNZ -0 10000 0 00315                                                               
                     FUNCTION RETURN LINE .A. 77K                                   055  LM00068
 00307 CAL -0 50000 0 00024    00310 ANA -0 32000 0 00034    00311 SLW +0 60200 0 00345    00312 CLA +0 50000 0 00345   
 00313 TRA +0 02000 0 00341                                                                                             
                   OTHERWISE                                                        056  LM00069
 00314 TRA +0 02000 0 00317                                                                                             
                     FUNCTION RETURN $00000*$                                       057  LM00070
 00315 CLA +0 50000 0 00033    00316 TRA +0 02000 0 00341                                                               
                   END OF CONDITIONAL                                               058  LM00071
                 END OF FUNCTION                                                    059  LM00073
 00317 TSX +0 07400 4 00001    00320 TXH +3 00000 0 00000    00321 SXD -0 63400 1 00320    00322 SXA +0 63400 4 00341   
 00323 CLA +0 50000 4 00001    00324 STA +0 62100 0 00042    00325 STA +0 62100 0 00050    00326 STA +0 62100 0 00150   
 00327 STO +0 60100 0 00161    00330 STA +0 62100 0 00171    00331 STA +0 62100 0 00221    00332 STA +0 62100 0 00301   
 00333 STA +0 62100 0 00307    00334 CLA +0 50000 4 00002    00335 STA +0 62100 0 00152    00336 STO +0 60100 0 00163   
 00337 STA +0 62100 0 00211    00340 TRA +0 02000 2 00001    00341 AXT +0 77400 4 00000    00342 LXA +0 53400 2 00320   
 00343 LXD -0 53400 1 00320    00344 TRA +0 02000 4 00001                                                               
1     MAD PROGRAM LISTING ... ... ...                 FILE   REUND   MAD            02/08/68    1745.9
-                 
                 ..  FUNCTION REUND.                                                                   LM00001    
                 ..  REFORMAT UNDERLINES AND OVERSTRIKES.                                              LM00002    
                                                                                                       LM00003    
                 ..  EARL VAN HORN, NOVEMBER, 1964.                                                    LM00004    
                                                                                                       LM00005    
                  EXTERNAL FUNCTION(LIN,SIZE,BUFSIZ)                                              *001 LM00006    
                                                                                                       LM00007    
                  NORMAL MODE IS INTEGER                                                          *002 LM00008    
                  BOOLEAN ADVAN                                                                   *003 LM00009    
                  VECTOR VALUES BACKSP = 0135K                                                    *004 LM00010    
                  VECTOR VALUES BLANK = 0060K                                                     *005 LM00011    
                  VECTOR VALUES UNDER = 0540K                                                     *006 LM00012    
                                                                                                       LM00013    
                  ENTRY TO CANON.                                                                 *007 LM00014    
                  WHENEVER SIZE .GE. BUFSIZ, FUNCTION RETURN                                      *008 LM00015    
                  ADVAN = 1B                                                                      *009 LM00016    
                  THROUGH L11, FOR STRING = 1, 1, STRING .G. SIZE                                 *010 LM00017    
                  WHENEVER ADVAN                                                                  *011 LM00018    
                    WHENEVER LIN(STRING) .E. BACKSP                                               *012 LM00019    
                      ADVAN = 0B                                                                  *013 LM00020    
                      CARAGE = STRING                                                             *014 LM00021    
                      FAREST = STRING                                                             *015 LM00022    
                      TRANSFER TO L7                                                              *016 LM00023    
                    END OF CONDITIONAL                                                            *017 LM00024    
                    TRANSFER TO L11                                                               *018 LM00025    
                  OTHERWISE                                                                       *019 LM00026    
                    STR = LIN(STRING)                                                             *020 LM00027    
                    CAR = LIN(CARAGE)                                                             *021 LM00028    
                    WHENEVER STR .E. BACKSP, TRANSFER TO L7                                       *022 LM00029    
                    WHENEVER STR .E. BLANK, TRANSFER TO L5                                        *023 LM00030    
                    WHENEVER STR .E. UNDER                                                        *024 LM00031    
                      WHENEVER (CAR .A. 3K11) .NE. 0                                              *025 LM00032    
                        LIN(CARAGE) = (CAR .V. 1K11)                                              *026 LM00033    
                      OR WHENEVER CAR .E. BLANK                                                   *027 LM00034    
                        LIN(CARAGE) = STR                                                         *028 LM00035    
                      OR WHENEVER CAR .NE. UNDER                                                  *029 LM00036    
                        LIN(CARAGE) = (CAR .V. 1K11)                                              *030 LM00037    
                      END OF CONDITIONAL                                                          *031 LM00038    
                    OTHERWISE                                                                     *032 LM00039    
                      WHENEVER (CAR .A. 2K11) .NE. 0                                              *033 LM00040    
                1           .OR. (CAR .A. 7777K) .E. STR, TRANSFER TO L5                          *033 LM00041    
                      WHENEVER CAR .E. BLANK                                                      *034 LM00042    
                        LIN(CARAGE) = STR                                                         *035 LM00043    
                      OR WHENEVER CAR .E. UNDER                                                   *036 LM00044    
                        LIN(CARAGE) = (STR .V. 1K11)                                              *037 LM00045    
                      OTHERWISE                                                                   *038 LM00046    
                        EARLT = (CAR .A. 7777K)                                                   *039 LM00047    
                        WHENEVER STR .L. EARLT                                                    *040 LM00048    
                          EARLT = STR                                                             *041 LM00049    
                          STR = (CAR .A. 7777K)                                                   *042 LM00050    
                        END OF CONDITIONAL                                                        *043 LM00051    
                        LIN(CARAGE) = ((((STR .LS. 12) .V. EARLT)                                 *044 LM00052    
                1           .V. 2K11) .V. (CAR .A. 1K11))                                         *044 LM00053    
                      END OF CONDITIONAL                                                          *045 LM00054    
                    END OF CONDITIONAL                                                            *046 LM00055    
                  END OF CONDITIONAL                                                              *047 LM00056    
      L5          CARAGE = CARAGE + 1                                                             *048 LM00057    
                  WHENEVER (LIN(CARAGE) .A. 4K10) .NE. 0                                          *049 LM00058    
                1           .AND. CARAGE .NE. FAREST                                              *049 LM00059    
                2           , TRANSFER TO L5                                                      *049 LM00060    
                  TRANSFER TO L6                                                                  *050 LM00061    
      L7          WHENEVER CARAGE .E. 1, TRANSFER TO L6                                           *051 LM00062    
                  CARAGE = CARAGE - 1                                                             *052 LM00063    
                  WHENEVER (LIN(CARAGE) .A. 4K10) .NE. 0                                          *053 LM00064    
                1           , TRANSFER TO L7                                                      *053 LM00065    
      L6          LIN(STRING) = (LIN(STRING) .V. 4K10)                                            *054 LM00066    
                  WHENEVER CARAGE .E. FAREST .AND. .NOT. ADVAN                                    *055 LM00067    
                1           , ADVAN = 1B                                                          *055 LM00068    
      L11         CONTINUE                                                                        *056 LM00069    
                  J = BUFSIZ                                                                      *057 LM00070    
                  THROUGH L33, FOR I = SIZE, -1, I .L. 1                                          *058 LM00071    
                  WHENEVER (LIN(I) .A. 4K10) .E. 0                                                *059 LM00072    
                    LIN(J) = LIN(I)                                                               *060 LM00073    
                    J = J - 1                                                                     *061 LM00074    
                  END OF CONDITIONAL                                                              *062 LM00075    
      L33         CONTINUE                                                                        *063 LM00076    
                  I = 1                                                                           *064 LM00077    
                  THROUGH L44, FOR J = J + 1, 1, J .G. BUFSIZ                                     *065 LM00078    
                  EARLT = LIN(J)                                                                  *066 LM00079    
                  WHENEVER (EARLT .A. 3K11) .E. 0                                                 *067 LM00080    
                    LIN(I) = EARLT                                                                *068 LM00081    
                  OTHERWISE                                                                       *069 LM00082    
                    LIN(I) = (EARLT .A. 7777K)                                                    *070 LM00083    
                    WHENEVER (EARLT .A. 2K11) .NE. 0                                              *071 LM00084    
                      LIN(I+1) = BACKSP                                                           *072 LM00085    
                      LIN(I+2) = ((EARLT .A. 7777K4) .RS. 12)                                     *073 LM00086    
                      I = I + 2                                                                   *074 LM00087    
                    END OF CONDITIONAL                                                            *075 LM00088    
                    WHENEVER (EARLT .A. 1K11) .NE. 0                                              *076 LM00089    
                      LIN(I+1) = BACKSP                                                           *077 LM00090    
                      LIN(I+2) = UNDER                                                            *078 LM00091    
                      I = I + 2                                                                   *079 LM00092    
                    END OF CONDITIONAL                                                            *080 LM00093    
                  END OF CONDITIONAL                                                              *081 LM00094    
                  I = I + 1                                                                       *082 LM00095    
      L44         CONTINUE                                                                        *083 LM00096    
                  SIZE = I - 1                                                                    *084 LM00097    
                  FUNCTION RETURN                                                                 *085 LM00098    
                                                                                                       LM00099    
                  END OF FUNCTION                                                                 *086 LM00100    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00545 TRANSFER VECTOR LENGTH  00001 PROGRAM BEGINS    00035
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      CANON  00036   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ADVAN  00006   2        CAR    00012   1        J      00016   1        L5     00003   4        STRING 00017   1  
      BACKSP 00007 A 1        EARLT  00013   1        L11    00002   4        L6     00004   4        STR    00020   1  
      BLANK  00010 A 1        FAREST 00014   1        L33    00001   4        L7     00005   4        UNDER  00021 A 1  
      CARAGE 00011   1        I      00015   1        L44    00001   4                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00024 +000000000002     00027 +000077770000     00030 +040000000000     00025 +000000000014     00032 +200000000000    
 00026 +000000007777     00031 +100000000000     00034 +300000000000     00022 +000000000000     00023 +000000000001    
 00033 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00002 TXL -300311000310       00003 TXL -300242000237       00004 TXL -300301000275       00005 TXL -300262000256      
0PROGRAM    
                 EXTERNAL FUNCTION(LIN,SIZE,BUFSIZ)                                 001  LM00006
                 NORMAL MODE IS INTEGER                                             002  LM00008
                 BOOLEAN ADVAN                                                      003  LM00009
                 VECTOR VALUES BACKSP = 0135K                                       004  LM00010
 00007     +0 00000 0 00135                                                                                             
                 VECTOR VALUES BLANK = 0060K                                        005  LM00011
 00010     +0 00000 0 00060                                                                                             
                 VECTOR VALUES UNDER = 0540K                                        006  LM00012
 00021     +0 00000 0 00540                                                                                             
                 ENTRY TO CANON.                                                    007  LM00014
 00035 TRA +0 02000 0 00040    00036 SXA +0 63400 2 00471    00037 TSX +0 07400 2 00471                                 
                 WHENEVER SIZE .GE. BUFSIZ, FUNCTION RETURN                         008  LM00015
 00040 CLA +0 50000 0 00024    00041 SUB +0 40200 0 00024    00042 TZE +0 10000 0 00044    00043 TMI -0 12000 0 00045   
 00044 TRA +0 02000 0 00536                                                                                             
                 ADVAN = 1B                                                         009  LM00016
 00045 CLA +0 50000 0 00023    00046 STO +0 60100 0 00006                                                               
                 THROUGH L11, FOR STRING = 1, 1, STRING .G. SIZE                    010  LM00017
 00047 CLA +0 50000 0 00023    00050 STO +0 60100 0 00017    00051 TRA +0 02000 0 00055    00052 CLA +0 50000 0 00017   
 00053 ADD +0 40000 0 00023    00054 STO +0 60100 0 00017    00055 CLA +0 50000 0 00017    00056 SUB +0 40200 0 00024   
 00057 TZE +0 10000 0 00061    00060 TPL +0 12000 0 00311                                                               
                 WHENEVER ADVAN                                                     011  LM00018
 00061 NZT -0 52000 0 00006    00062 TRA +0 02000 0 00100                                                               
                   WHENEVER LIN(STRING) .E. BACKSP                                  012  LM00019
 00063 LXA +0 53400 1 00017    00064 CLA +0 50000 1 00024    00065 SUB +0 40200 0 00007    00066 TNZ -0 10000 0 00076   
                     ADVAN = 0B                                                     013  LM00020
 00067 CLA +0 50000 0 00022    00070 STO +0 60100 0 00006                                                               
                     CARAGE = STRING                                                014  LM00021
 00071 CLA +0 50000 0 00017    00072 STO +0 60100 0 00011                                                               
                     FAREST = STRING                                                015  LM00022
 00073 CLA +0 50000 0 00017    00074 STO +0 60100 0 00014                                                               
                     TRANSFER TO L7                                                 016  LM00023
 00075 TRA +0 02000 0 00005                                                                                             
                   END OF CONDITIONAL                                               017  LM00024
                   TRANSFER TO L11                                                  018  LM00025
 00076 TRA +0 02000 0 00002                                                                                             
                 OTHERWISE                                                          019  LM00026
 00077 TRA +0 02000 0 00237                                                                                             
                   STR = LIN(STRING)                                                020  LM00027
 00100 LXA +0 53400 2 00017    00101 CLA +0 50000 2 00024    00102 STO +0 60100 0 00020                                 
                   CAR = LIN(CARAGE)                                                021  LM00028
 00103 LXA +0 53400 2 00011    00104 CLA +0 50000 2 00024    00105 STO +0 60100 0 00012                                 
                   WHENEVER STR .E. BACKSP, TRANSFER TO L7                          022  LM00029
 00106 CLA +0 50000 0 00020    00107 SUB +0 40200 0 00007    00110 TNZ -0 10000 0 00112    00111 TRA +0 02000 0 00005   
                   WHENEVER STR .E. BLANK, TRANSFER TO L5                           023  LM00030
 00112 CLA +0 50000 0 00020    00113 SUB +0 40200 0 00010    00114 TNZ -0 10000 0 00116    00115 TRA +0 02000 0 00003   
                   WHENEVER STR .E. UNDER                                           024  LM00031
 00116 CLA +0 50000 0 00020    00117 SUB +0 40200 0 00021    00120 TNZ -0 10000 0 00153                                 
                     WHENEVER (CAR .A. 3K11) .NE. 0                                 025  LM00032
 00121 CAL -0 50000 0 00012    00122 ANA -0 32000 0 00034    00123 SLW +0 60200 0 00542    00124 CLA +0 50000 0 00542   
 00125 SUB +0 40200 0 00022    00126 TZE +0 10000 0 00134                                                               
                       LIN(CARAGE) = (CAR .V. 1K11)                                 026  LM00033
 00127 CAL -0 50000 0 00012    00130 ORA -0 50100 0 00031    00131 LXA +0 53400 1 00011    00132 SLW +0 60200 1 00024   
                     OR WHENEVER CAR .E. BLANK                                      027  LM00034
 00133 TRA +0 02000 0 00152    00134 CLA +0 50000 0 00012    00135 SUB +0 40200 0 00010    00136 TNZ -0 10000 0 00143   
                       LIN(CARAGE) = STR                                            028  LM00035
 00137 LXA +0 53400 1 00011    00140 CLA +0 50000 0 00020    00141 STO +0 60100 1 00024                                 
                     OR WHENEVER CAR .NE. UNDER                                     029  LM00036
 00142 TRA +0 02000 0 00152    00143 CLA +0 50000 0 00012    00144 SUB +0 40200 0 00021    00145 TZE +0 10000 0 00152   
                       LIN(CARAGE) = (CAR .V. 1K11)                                 030  LM00037
 00146 CAL -0 50000 0 00012    00147 ORA -0 50100 0 00031    00150 LXA +0 53400 1 00011    00151 SLW +0 60200 1 00024   
                     END OF CONDITIONAL                                             031  LM00038
                   OTHERWISE                                                        032  LM00039
 00152 TRA +0 02000 0 00237                                                                                             
                     WHENEVER (CAR .A. 2K11) .NE. 0                                 033  LM00040
                1          .OR. (CAR .A. 7777K) .E. STR, TRANSFER TO L5             033  LM00041
 00153 CAL -0 50000 0 00012    00154 ANA -0 32000 0 00026    00155 SLW +0 60200 0 00542    00156 CLA +0 50000 0 00542   
 00157 SUB +0 40200 0 00020    00160 TZE +0 10000 0 00167    00161 CAL -0 50000 0 00012    00162 ANA -0 32000 0 00032   
 00163 SLW +0 60200 0 00542    00164 CLA +0 50000 0 00542    00165 SUB +0 40200 0 00022    00166 TZE +0 10000 0 00170   
 00167 TRA +0 02000 0 00003                                                                                             
                     WHENEVER CAR .E. BLANK                                         034  LM00042
 00170 CLA +0 50000 0 00012    00171 SUB +0 40200 0 00010    00172 TNZ -0 10000 0 00177                                 
                       LIN(CARAGE) = STR                                            035  LM00043
 00173 LXA +0 53400 1 00011    00174 CLA +0 50000 0 00020    00175 STO +0 60100 1 00024                                 
                     OR WHENEVER CAR .E. UNDER                                      036  LM00044
 00176 TRA +0 02000 0 00237    00177 CLA +0 50000 0 00012    00200 SUB +0 40200 0 00021    00201 TNZ -0 10000 0 00207   
                       LIN(CARAGE) = (STR .V. 1K11)                                 037  LM00045
 00202 CAL -0 50000 0 00020    00203 ORA -0 50100 0 00031    00204 LXA +0 53400 1 00011    00205 SLW +0 60200 1 00024   
                     OTHERWISE                                                      038  LM00046
 00206 TRA +0 02000 0 00237                                                                                             
                       EARLT = (CAR .A. 7777K)                                      039  LM00047
 00207 CAL -0 50000 0 00012    00210 ANA -0 32000 0 00026    00211 SLW +0 60200 0 00013                                 
                       WHENEVER STR .L. EARLT                                       040  LM00048
 00212 CLA +0 50000 0 00020    00213 SUB +0 40200 0 00013    00214 TZE +0 10000 0 00223    00215 TPL +0 12000 0 00223   
                         EARLT = STR                                                041  LM00049
 00216 CLA +0 50000 0 00020    00217 STO +0 60100 0 00013                                                               
                         STR = (CAR .A. 7777K)                                      042  LM00050
 00220 CAL -0 50000 0 00012    00221 ANA -0 32000 0 00026    00222 SLW +0 60200 0 00020                                 
                       END OF CONDITIONAL                                           043  LM00051
                       LIN(CARAGE) = ((((STR .LS. 12) .V. EARLT)                    044  LM00052
                1          .V. 2K11) .V. (CAR .A. 1K11))                            044  LM00053
 00223 CAL -0 50000 0 00012    00224 ANA -0 32000 0 00031    00225 SLW +0 60200 0 00542    00226 CAL -0 50000 0 00025   
 00227 STA +0 62100 0 00231    00230 CAL -0 50000 0 00020    00231 ALS +0 76700 0 00000    00232 ORA -0 50100 0 00013   
 00233 ORA -0 50100 0 00032    00234 ORA -0 50100 0 00542    00235 LXA +0 53400 1 00011    00236 SLW +0 60200 1 00024   
                     END OF CONDITIONAL                                             045  LM00054
                   END OF CONDITIONAL                                               046  LM00055
                 END OF CONDITIONAL                                                 047  LM00056
      L5         CARAGE = CARAGE + 1                                                048  LM00057
 00237 CLA +0 50000 0 00011    00240 ADD +0 40000 0 00023    00241 STO +0 60100 0 00011                                 
                 WHENEVER (LIN(CARAGE) .A. 4K10) .NE. 0                             049  LM00058
                1          .AND. CARAGE .NE. FAREST                                 049  LM00059
                2          , TRANSFER TO L5                                         049  LM00060
 00242 CLA +0 50000 0 00011    00243 SUB +0 40200 0 00014    00244 TZE +0 10000 0 00255    00245 LXA +0 53400 1 00011   
 00246 CAL -0 50000 1 00024    00247 ANA -0 32000 0 00030    00250 SLW +0 60200 0 00542    00251 CLA +0 50000 0 00542   
 00252 SUB +0 40200 0 00022    00253 TZE +0 10000 0 00255    00254 TRA +0 02000 0 00003                                 
                 TRANSFER TO L6                                                     050  LM00061
 00255 TRA +0 02000 0 00004                                                                                             
      L7         WHENEVER CARAGE .E. 1, TRANSFER TO L6                              051  LM00062
 00256 CLA +0 50000 0 00011    00257 SUB +0 40200 0 00023    00260 TNZ -0 10000 0 00262    00261 TRA +0 02000 0 00004   
                 CARAGE = CARAGE - 1                                                052  LM00063
 00262 CLA +0 50000 0 00011    00263 SUB +0 40200 0 00023    00264 STO +0 60100 0 00011                                 
                 WHENEVER (LIN(CARAGE) .A. 4K10) .NE. 0                             053  LM00064
                1          , TRANSFER TO L7                                         053  LM00065
 00265 LXA +0 53400 1 00011    00266 CAL -0 50000 1 00024    00267 ANA -0 32000 0 00030    00270 SLW +0 60200 0 00542   
 00271 CLA +0 50000 0 00542    00272 SUB +0 40200 0 00022    00273 TZE +0 10000 0 00275    00274 TRA +0 02000 0 00005   
      L6         LIN(STRING) = (LIN(STRING) .V. 4K10)                               054  LM00066
 00275 LXA +0 53400 1 00017    00276 CAL -0 50000 1 00024    00277 ORA -0 50100 0 00030    00300 SLW +0 60200 1 00024   
                 WHENEVER CARAGE .E. FAREST .AND. .NOT. ADVAN                       055  LM00067
                1          , ADVAN = 1B                                             055  LM00068
 00301 ZET +0 52000 0 00006    00302 TRA +0 02000 0 00310    00303 CLA +0 50000 0 00011    00304 SUB +0 40200 0 00014   
 00305 TNZ -0 10000 0 00310    00306 CLA +0 50000 0 00023    00307 STO +0 60100 0 00006                                 
      L11        CONTINUE                                                           056  LM00069
 00310 TRA +0 02000 0 00052                                                                                             
                 J = BUFSIZ                                                         057  LM00070
 00311 CLA +0 50000 0 00024    00312 STO +0 60100 0 00016                                                               
                 THROUGH L33, FOR I = SIZE, -1, I .L. 1                             058  LM00071
 00313 CLA +0 50000 0 00024    00314 STO +0 60100 0 00015    00315 TRA +0 02000 0 00321    00316 CLS +0 50200 0 00023   
 00317 ADD +0 40000 0 00015    00320 STO +0 60100 0 00015    00321 CLA +0 50000 0 00015    00322 SUB +0 40200 0 00023   
 00323 TZE +0 10000 0 00325    00324 TMI -0 12000 0 00344                                                               
                 WHENEVER (LIN(I) .A. 4K10) .E. 0                                   059  LM00072
 00325 LXA +0 53400 1 00015    00326 CAL -0 50000 1 00024    00327 ANA -0 32000 0 00030    00330 SLW +0 60200 0 00542   
 00331 CLA +0 50000 0 00542    00332 SUB +0 40200 0 00022    00333 TNZ -0 10000 0 00343                                 
                   LIN(J) = LIN(I)                                                  060  LM00073
 00334 LXA +0 53400 1 00016    00335 LXA +0 53400 2 00015    00336 CLA +0 50000 2 00024    00337 STO +0 60100 1 00024   
                   J = J - 1                                                        061  LM00074
 00340 CLA +0 50000 0 00016    00341 SUB +0 40200 0 00023    00342 STO +0 60100 0 00016                                 
                 END OF CONDITIONAL                                                 062  LM00075
      L33        CONTINUE                                                           063  LM00076
 00343 TRA +0 02000 0 00316                                                                                             
                 I = 1                                                              064  LM00077
 00344 CLA +0 50000 0 00023    00345 STO +0 60100 0 00015                                                               
                 THROUGH L44, FOR J = J + 1, 1, J .G. BUFSIZ                        065  LM00078
 00346 CLA +0 50000 0 00016    00347 ADD +0 40000 0 00023    00350 STO +0 60100 0 00016    00351 TRA +0 02000 0 00355   
 00352 CLA +0 50000 0 00016    00353 ADD +0 40000 0 00023    00354 STO +0 60100 0 00016    00355 CLA +0 50000 0 00016   
 00356 SUB +0 40200 0 00024    00357 TZE +0 10000 0 00361    00360 TPL +0 12000 0 00464                                 
                 EARLT = LIN(J)                                                     066  LM00079
 00361 LXA +0 53400 2 00016    00362 CLA +0 50000 2 00024    00363 STO +0 60100 0 00013                                 
                 WHENEVER (EARLT .A. 3K11) .E. 0                                    067  LM00080
 00364 CAL -0 50000 0 00013    00365 ANA -0 32000 0 00034    00366 SLW +0 60200 0 00542    00367 CLA +0 50000 0 00542   
 00370 SUB +0 40200 0 00022    00371 TNZ -0 10000 0 00376                                                               
                   LIN(I) = EARLT                                                   068  LM00081
 00372 LXA +0 53400 1 00015    00373 CLA +0 50000 0 00013    00374 STO +0 60100 1 00024                                 
                 OTHERWISE                                                          069  LM00082
 00375 TRA +0 02000 0 00460                                                                                             
                   LIN(I) = (EARLT .A. 7777K)                                       070  LM00083
 00376 CAL -0 50000 0 00013    00377 ANA -0 32000 0 00026    00400 LXA +0 53400 1 00015    00401 SLW +0 60200 1 00024   
                   WHENEVER (EARLT .A. 2K11) .NE. 0                                 071  LM00084
 00402 CAL -0 50000 0 00013    00403 ANA -0 32000 0 00032    00404 SLW +0 60200 0 00542    00405 CLA +0 50000 0 00542   
 00406 SUB +0 40200 0 00022    00407 TZE +0 10000 0 00435                                                               
                     LIN(I+1) = BACKSP                                              072  LM00085
 00410 CLA +0 50000 0 00015    00411 ADD +0 40000 0 00023    00412 PAX +0 73400 1 00000    00413 CLA +0 50000 0 00007   
 00414 STO +0 60100 1 00024                                                                                             
                     LIN(I+2) = ((EARLT .A. 7777K4) .RS. 12)                        073  LM00086
 00415 CAL -0 50000 0 00013    00416 ANA -0 32000 0 00027    00417 SLW +0 60200 0 00542    00420 CAL -0 50000 0 00025   
 00421 STA +0 62100 0 00423    00422 CAL -0 50000 0 00542    00423 LGR -0 76500 0 00000    00424 SLW +0 60200 0 00542   
 00425 CLA +0 50000 0 00015    00426 ADD +0 40000 0 00024    00427 PAX +0 73400 1 00000    00430 CLA +0 50000 0 00542   
 00431 STO +0 60100 1 00024                                                                                             
                     I = I + 2                                                      074  LM00087
 00432 CLA +0 50000 0 00015    00433 ADD +0 40000 0 00024    00434 STO +0 60100 0 00015                                 
                   END OF CONDITIONAL                                               075  LM00088
                   WHENEVER (EARLT .A. 1K11) .NE. 0                                 076  LM00089
 00435 CAL -0 50000 0 00013    00436 ANA -0 32000 0 00031    00437 SLW +0 60200 0 00542    00440 CLA +0 50000 0 00542   
 00441 SUB +0 40200 0 00022    00442 TZE +0 10000 0 00460                                                               
                     LIN(I+1) = BACKSP                                              077  LM00090
 00443 CLA +0 50000 0 00015    00444 ADD +0 40000 0 00023    00445 PAX +0 73400 1 00000    00446 CLA +0 50000 0 00007   
 00447 STO +0 60100 1 00024                                                                                             
                     LIN(I+2) = UNDER                                               078  LM00091
 00450 CLA +0 50000 0 00015    00451 ADD +0 40000 0 00024    00452 PAX +0 73400 1 00000    00453 CLA +0 50000 0 00021   
 00454 STO +0 60100 1 00024                                                                                             
                     I = I + 2                                                      079  LM00092
 00455 CLA +0 50000 0 00015    00456 ADD +0 40000 0 00024    00457 STO +0 60100 0 00015                                 
                   END OF CONDITIONAL                                               080  LM00093
                 END OF CONDITIONAL                                                 081  LM00094
                 I = I + 1                                                          082  LM00095
 00460 CLA +0 50000 0 00015    00461 ADD +0 40000 0 00023    00462 STO +0 60100 0 00015                                 
      L44        CONTINUE                                                           083  LM00096
 00463 TRA +0 02000 0 00352                                                                                             
                 SIZE = I - 1                                                       084  LM00097
 00464 CLA +0 50000 0 00015    00465 SUB +0 40200 0 00023    00466 STO +0 60100 0 00024                                 
                 FUNCTION RETURN                                                    085  LM00098
 00467 TRA +0 02000 0 00536                                                                                             
                 END OF FUNCTION                                                    086  LM00100
 00470 TSX +0 07400 4 00000    00471 TXH +3 00000 0 00000    00472 SXD -0 63400 1 00471    00473 SXA +0 63400 4 00536   
 00474 CLA +0 50000 4 00001    00475 STA +0 62100 0 00064    00476 STA +0 62100 0 00101    00477 STA +0 62100 0 00104   
 00500 STA +0 62100 0 00132    00501 STA +0 62100 0 00141    00502 STA +0 62100 0 00151    00503 STA +0 62100 0 00175   
 00504 STA +0 62100 0 00205    00505 STA +0 62100 0 00236    00506 STA +0 62100 0 00246    00507 STA +0 62100 0 00266   
 00510 STA +0 62100 0 00276    00511 STA +0 62100 0 00300    00512 STA +0 62100 0 00326    00513 STA +0 62100 0 00336   
 00514 STA +0 62100 0 00337    00515 STA +0 62100 0 00362    00516 STA +0 62100 0 00374    00517 STA +0 62100 0 00401   
 00520 STA +0 62100 0 00414    00521 STA +0 62100 0 00431    00522 STA +0 62100 0 00447    00523 STA +0 62100 0 00454   
 00524 CLA +0 50000 4 00002    00525 STA +0 62100 0 00040    00526 STA +0 62100 0 00056    00527 STA +0 62100 0 00313   
 00530 STA +0 62100 0 00466    00531 CLA +0 50000 4 00003    00532 STA +0 62100 0 00041    00533 STA +0 62100 0 00311   
 00534 STA +0 62100 0 00356    00535 TRA +0 02000 2 00001    00536 AXT +0 77400 4 00000    00537 LXA +0 53400 2 00471   
 00540 LXD -0 53400 1 00471    00541 TRA +0 02000 4 00001                                                               
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 1     
                  
                              *     
                              *      J. H. SALTZER, JANUARY, 1965.
                              *     
                       00004         ENTRY   PRWORD        ADD A WORD TO PRINT BUFFER.    
                       00021         ENTRY   PRBUFF        PRINT OUT PARTIAL BUFFER.
                       00030         ENTRY   TYWORD        GET NEXT TYPED WORD.     
                       00047         ENTRY   TYLINE        RESET TO START READING NEXT LINE.    
                              *     
                                     EXTERN RDFLXA,WRFLXA   
                              *     
                  
        TRANSFER VECTOR 
      00000  512426436721     RDFLXA
      00001  665126436721     WRFLXA
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  475166465124     
                  
                       00034  BUFLEN EQU     28            TYPEWRITER BUFFER SIZE.  
                              *     
                              *      ADD WORD TO PRINT BUFFER.    
                              *      PRWORD.(WORD)    
                              *     
      00004  0634 00 4 00017  PRWORD SXA     PRX4,4        SAVE LINKAGE.
      00005 -0500 60 4 00001         CAL*    1,4           GET WORD BEING ADDED.    
      00006 -0734 00 4 00000         PDX     0,4           CHECK FOR DISK CONTROL WORD.   
      00007  3 77776 4 00017         TXH     PRX4,4,-2     DON'T STORE CONTROL WORD.
      00010  0774 00 4 00034   PWCNT AXT     BUFLEN,4      SET WORD COUNTER (INITIALLY BUFLEN.) 
      00011  0602 00 4 00105         SLW     BUFF+BUFLEN,4 STORE WORD IN BUFFER.    
      00012  2 00001 4 00016         TIX     PSAVE,4,1     COUNT, CHECK FOR OVERFLOW.     
      00013  0074 00 4 00001         TSX     WRFLXA,4      BUFFER FULL, PRINT W/O C.R.    
      00014  0 00034 0 00051                 BUFF,,BUFLEN  ..     
      00015  0774 00 4 00034  PFRESH AXT     BUFLEN,4      RESET WORD COUNTER.
      00016  0634 00 4 00010   PSAVE SXA     PWCNT,4       SAVE WORD COUNTER. 
      00017  0774 00 4 00000   PRX4  AXT     --,4          RESTORE LINKAGE.   
      00020  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
                              *      PRINT OUT REMAINING BUFFER, RESET COUNTER.     
                              *     
      00021  0634 00 4 00017  PRBUFF SXA     PRX4,4        SAVE LINKAGE.
      00022  0535 00 4 00010         LAC     PWCNT,4       GET WORD COUNT.    
      00023  1 00034 4 00024         TXI     *+1,4,BUFLEN  FORM COMPLEMENT MOD BUFLEN.    
      00024 -0634 00 4 00026         SXD     PRCL,4        SAVE COUNT IN CALLER.    
      00025  0074 00 4 00001         TSX     WRFLXA,4      PRINT REMAINDER.   
      00026  0 00000 0 00051   PRCL          BUFF,,--      ..     
      00027  0020 00 0 00015         TRA     PFRESH        GO REFRESH COUNTER, AND RETURN.
                              *     
                              *      GET A WORD FROM INPUT BUFFER.
                              *         WORD = TYWORD.(0)   
                              *     
      00030  0634 00 4 00045  TYWORD SXA     TYX4,4        SAVE LINKAGE.
      00031  0774 00 5 00000  TYCNT  AXT     --,5          GET WORD COUNTER.  
      00032  0774 00 4 00000  TYPOS  AXT     --,4          GET BUFFER POINTER.
      00033  2 00006 5 00041         TIX     TYGET,5,6     CHECK FOR WORDS LEFT.    
      00034  0074 00 4 00000         TSX     RDFLXA,4      NO, GET SOME.
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 2     
                  
      00035  0 00034 0 00051  TYCALL         BUFF,,BUFLEN  ..     
      00036  0734 00 5 00000         PAX     0,5           INSERT 6-BIT CHARACTER COUNT INTO COUNTER. 
      00037  2 40000 5 00040         TIX     *+1,5,16384   REMOVE BIT 21 IF PRESENT.
      00040  0774 00 4 00000         AXT     0,4           RESET INPUT BUFFER POINTER.    
      00041  0500 00 4 00051  TYGET  CLA     BUFF,4        GET A WORD.  
      00042  1 77777 4 00043         TXI     *+1,4,-1      MOVE POINTER TO NEXT WORD.     
      00043  0634 00 4 00032         SXA     TYPOS,4       SAVE POINTER.
      00044  0634 00 5 00031         SXA     TYCNT,5       SAVE CHARACTER COUNTER.  
      00045  0774 00 4 00000  TYX4   AXT     --,4          RESTORE LINKAGE.   
      00046  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      00047  0634 00 0 00031  TYLINE ZSA     TYCNT         RESET CHARACTER COUNT TO MAKE LINE EMPTY.  
      00050  0020 00 4 00001         TRA     1,4           RETURN 
                              *     
      00051                   BUFF   BSS     BUFLEN            OUTPUT BUFFER. 
                              *     
                                     END  
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        105 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         51   BUFF    11,   14,   26,   35,   41
         26   PRCL    24
         17   PRX4     4,    7,   21
         45   TYX4    30
         16  PSAVE    12
         10  PWCNT    16,   22
         31  TYCNT    44,   47
         41  TYGET    33
         32  TYPOS    43
         34 BUFLEN     4,   10,   11,   14,   15,   23,   35,   51
         15 PFRESH    27
         21 PRBUFF     0
          4 PRWORD     0
          0 RDFLXA    34
         35 TYCALL      
         47 TYLINE     0
         30 TYWORD     0
          1 WRFLXA    13,   25
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            SUBROUTINE TO CONVERT BCD NUMBER TO BINARY.                                         PAGE 1     
                  
                              *     
                              *        J. H. SALTZER, MAY, 1966.  
                       00002         ENTRY   BIN           CONVERTER.   
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  223145606060     
                  
      00002  0634 00 1 00024   BIN   SXA     IRR1,1   
      00003  0600 00 0 00027         STZ     INT           CLEAR RESULT.
      00004  0774 00 1 00006         AXT     6,1
      00005  0560 60 4 00001         LDQ*    1,4           GET ARGUMENT.
      00006 -0754 00 0 00000  LOP    ZAC  
      00007 -0763 00 0 00006         LGL     6             GET NEXT CHARACTER.
      00010 -0340 00 0 00032         LAS     =10           SKIP OVER NON-DIGITS.    
      00011  0020 00 0 00023         TRA     TIX
      00012  0020 00 0 00023         TRA     TIX
      00013  0601 00 0 00030         STO     DIG           NUMBER, SAVE DIGIT.
      00014 -0600 00 0 00031         STQ     TEM           SAVE MQ FOR MULTIPLIACATION.   
      00015  0560 00 0 00027         LDQ     INT           GET OLD NUMBER.    
      00016  0200 00 0 00032         MPY     =10           SHIFT. 
      00017  0131 00 0 00000         XCA  
      00020  0400 00 0 00030         ADD     DIG           ADD THIS DIGIT TO RESULT.
      00021  0601 00 0 00027         STO     INT           SAVE, FOR NEXT PASS.     
      00022  0560 00 0 00031         LDQ     TEM           RESTORE MQ.  
      00023  2 00001 1 00006  TIX    TIX     LOP,1,1  
      00024  0774 00 1 00000   IRR1  AXT     --,1     
      00025  0500 00 0 00027         CLA     INT           RESULT IN AC.
      00026  0020 00 4 00002         TRA     2,4
                              *     
      00027  0 00000 0 00000   INT  
      00030  0 00000 0 00000   DIG  
      00031  0 00000 0 00000   TEM  
                              *     
                                     END  
                  
        LITERALS  
      00032  000000000012     
1            SUBROUTINE TO CONVERT BCD NUMBER TO BINARY.                                         PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         33 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          2    BIN     0
         30    DIG    13,   20
         27    INT     3,   15,   21,   25
          6    LOP    23
         31    TEM    14,   22
         23    TIX    11,   12
         24   IRR1     2
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            LIBRARY PACKAGE.                                                                    PAGE 1     
                  
                       00024         ENTRY   .PCOMT        PRINT COMMENT ROUTINE    
                       00010         ENTRY   CHNCOM        GO DORMANT.  
                       00005         ENTRY   EXIT          SAME.  
                       00002         ENTRY   .SETUP        CALLED BY MAD MAIN PROGRA.     
                       00013         ENTRY   COMARG        GET COMMAND ARGUMENT.    
                       00106         ENTRY   WHOAMI   
                       00066         ENTRY   SETBCD   
                       00064         ENTRY   SETFUL   
                       00065         ENTRY   SETBRK   
                       00061         ENTRY   WRFLXA   
                       00063         ENTRY   WRFLX    
                       00062         ENTRY   RDFLXA   
                       00067         ENTRY   UPDATE        UPDATE U.F.D.
                       00070         ENTRY   CHFILE   
                       00071         ENTRY   DELFIL   
                       00072         ENTRY   FSTATE   
                       00073         ENTRY   BUFFER   
                       00074         ENTRY   OPEN     
                       00075         ENTRY   WRWAIT   
                       00076         ENTRY   WRFILE   
                       00077         ENTRY   RDWAIT   
                       00100         ENTRY   RDFILE   
                       00101         ENTRY   CLOSE    
                       00043         ENTRY   GETBUF        OBTAIN BUFFERS FROM SUPERVISOR.
                              *     
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  334723464463     
                  
      00002  0760 00 0 00016  .SETUP LMTM                  USE SEVEN TAG MODE.
      00003  0774 00 6 00000         AXT     0,6           SET UP IR6 TO AVOID EARLY CALL TO READ.    
      00004  0020 00 0 00064         TRA     SETFUL        USE FULL MODE.  SETFUL RETURNS 1,4.  
                              *     
      00005  0074 00 4 00066  EXIT   TSX     SETBCD,4      CLEANUP, RESET MODE.     
      00006  0074 00 4 00063         TSX     WRFLX,4       PUT OUT A STAR FOR RUNCOMS.    
      00007  0 00001 0 00060                 STAR,,1       AND THEN PERFORM CHNCOM SEQUENCE.    
      00010  0074 00 4 00102  CHNCOM TSX     CHN,4         THIS CHNCOM ALWAYS GOES DEAD,  
 TD   00011  3 00000 0 00107         TXH     =0            IF NO CHAIN EXISTS.
      00012  0020 00 0 00010         TRA     *-2           IN CASE OF RESTART, DON'T.     
                              *     
      00013  0634 00 4 00022  COMARG SXA     CM4,4         GET COMMAND ARGUMENT FOR MAD.  
      00014 -0500 60 4 00001         CAL*    1,4           GET ARGUMENT NUMBER.     
      00015  0602 00 0 00017         SLW     ARG           GIVE ARGUMENT NUMBER.    
      00016  0074 00 4 00103         TSX     GETCOM,4      GET COMMAND ARGUMENT.    
      00017  0 00000 0 00000   ARG                         ..     
      00020  0602 00 0 00017         SLW     ARG           MOVE TO ARITHMETIC AC.   
      00021  0500 00 0 00017         CLA     ARG           ..     
      00022  0774 00 4 00000   CM4   AXT     --,4          RESTORE LINKAGE.   
      00023  0020 00 4 00002         TRA     2,4           RETURN TO CALLER.  
                              *     
      00024 -0500 00 4 00001  .PCOMT CAL     1,4           GET WORD COUNT.    
      00025  0621 00 0 00042         STA     RETURN        ON RETURN, JUMP BUFFER.  
      00026  0767 00 0 00022         ALS     18            SETUP COUNT. 
      00027  0622 00 0 00036         STD     PCNT          ..     
      00030  1 77776 4 00031         TXI     *+1,4,-2      SETUP UP BUFFER ADDRESS. 
1            LIBRARY PACKAGE.                                                                    PAGE 2     
                  
      00031  0636 00 4 00036         SCA     PCNT,4        SAVE BUFFER ADDRESS, AND LINKAGE.    
      00032  0074 00 4 00064         TSX     SETFUL,4      MAKE SURE MODE SET AND NO LINES COMING IN. 
      00033  0074 00 4 00061         TSX     WRFLXA,4      SWITCH TO RED SHIFT.     
      00034  0 00001 0 00056                 REDS,,1       ..     
      00035  0074 00 4 00063         TSX     WRFLX,4       PRINT LINE.  
      00036  0 00000 0 00000   PCNT          --,,--        ..     
      00037  0074 00 4 00061         TSX     WRFLXA,4      SHIFT BACK TO BLACK.     
      00040  0 00001 0 00057                 BLCKS,,1      ..     
      00041  0535 00 4 00036         LAC     PCNT,4        RESTORE LINKAGE.   
      00042  0020 00 4 00000  RETURN TRA     --,4          RETURN TO CALLER.  
                              *     
      00043  0634 00 4 00052  GETBUF SXA     GX4,4         ENTRY TO GET BUFFERS.    
      00044  0602 00 0 00055         SLW     BUFSIZ        SIZE OF BUFFER IN AC.    
      00045  0074 00 4 00104         TSX     GETMEM,4      GET PRESENT BOUND. 
      00046  0601 00 0 00054         STO     START         SAVE AS BUFFER START.    
      00047  0361 00 0 00055         ACL     BUFSIZ        FORM NEW BOUND.    
      00050  0074 00 4 00105         TSX     SETMEM,4      ASK FOR MORE.
      00051 -0500 00 0 00054         CAL     START         GIVE CALLER LOCATION OF  
      00052  0774 00 4 00000   GX4   AXT     --,4          HIS NEW BUFFER.    
      00053  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      00054  0 00000 0 00000   START                       STORAGE FOR BUFFER LOCATION.   
      00055  0 00000 0 00000  BUFSIZ                       STORAGE FOR BUFFER SIZE. 
                              *     
      00056 +013300570057      REDS  OCT     013300570057  RED SHIFT AND TWO NULLS. 
      00057 +013200570057      BLCKS OCT     013200570057  BLACK SHIFT AND TWO NULLS.     
      00060 -145757575757     STAR   OCT     545757575757  ASTERISK AND 5 NULLS.    
                              *     
                              *              SUPERVISOR SUBROUTINE CALLERS.   
                              *     
      00061  0101 00 0 00133  WRFLXA TIA     =HWRFLXA 
      00062  0101 00 0 00122  RDFLXA TIA     =HRDFLXA 
      00063  0101 00 0 00134  WRFLX  TIA     =HWRFLX  
      00064  0101 00 0 00126  SETFUL TIA     =HSETFUL 
      00065  0101 00 0 00125  SETBRK TIA     =HSETBRK 
      00066  0101 00 0 00124  SETBCD TIA     =HSETBCD 
      00067  0101 00 0 00130  UPDATE TIA     =HUPDATE 
      00070  0101 00 0 00111  CHFILE TIA     =HCHFILE 
      00071  0101 00 0 00114  DELFIL TIA     =HDELFIL 
      00072  0101 00 0 00115  FSTATE TIA     =HFSTATE 
      00073  0101 00 0 00110  BUFFER TIA     =HBUFFER 
      00074  0101 00 0 00120  OPEN   TIA     =HOPEN   
      00075  0101 00 0 00135  WRWAIT TIA     =HWRWAIT 
      00076  0101 00 0 00132  WRFILE TIA     =HWRFILE 
      00077  0101 00 0 00123  RDWAIT TIA     =HRDWAIT 
      00100  0101 00 0 00121  RDFILE TIA     =HRDFILE 
      00101  0101 00 0 00113  CLOSE  TIA     =HCLOSE  
      00102  0101 00 0 00112  CHN    TIA     =HCHNCOM 
      00103  0101 00 0 00116  GETCOM TIA     =HGETCOM 
      00104  0101 00 0 00117  GETMEM TIA     =HGETMEM 
      00105  0101 00 0 00127  SETMEM TIA     =HSETMEM 
      00106  0101 00 0 00131  WHOAMI TIA     =HWHOAMI 
                              *     
                                     END  
1            LIBRARY PACKAGE.                                                                    PAGE 3     
                  
        LITERALS  
      00107  000000000000     
      00110  226426262551     
      00111  233026314325     
      00112  233045234644     
      00113  234346622560     
      00114  242543263143     
      00115  266263216325     
      00116  272563234644     
      00117  272563442544     
      00120  464725456060     
      00121  512426314325     
      00122  512426436721     
      00123  512466213163     
      00124  622563222324     
      00125  622563225142     
      00126  622563266443     
      00127  622563442544     
      00130  644724216325     
      00131  663046214431     
      00132  665126314325     
      00133  665126436721     
      00134  665126436760     
      00135  665166213163     
1            LIBRARY PACKAGE.                                                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        136 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         17    ARG    15,   20,   21
        102    CHN    10
         22    CM4    13
         52    GX4    43
          5   EXIT     0
         74   OPEN     0
         36   PCNT    27,   31,   41
         56   REDS    34
         60   STAR     7
         57  BLCKS    40
        101  CLOSE     0
         54  START    46,   51
         63  WRFLX     0,    6,   35
         73 BUFFER     0
         55 BUFSIZ    44,   47
         70 CHFILE     0
         10 CHNCOM     0
         13 COMARG     0
         71 DELFIL     0
         72 FSTATE     0
         43 GETBUF     0
        103 GETCOM    16
        104 GETMEM    45
         24 .PCOMT     0
          2 .SETUP     0
        100 RDFILE     0
         62 RDFLXA     0
         77 RDWAIT     0
         42 RETURN    25
         66 SETBCD     0,    5
         65 SETBRK     0
         64 SETFUL     0,    4,   32
        105 SETMEM    50
         67 UPDATE     0
        106 WHOAMI     0
         76 WRFILE     0
         61 WRFLXA     0,   33,   37
         75 WRWAIT     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




UNLINK   BCD 08/24/72 2356.1   15167         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  UNLINK   MAD            07/06/71    1754.9
-                 
                  CHMODE, DELETE, RENAME AND UNLINK COMMANDS.                                          LM00001    
                  WRITTEN BY ROGER ROACH 3/26/68                                                       LM00002    
                  MODIFIED 07/05/71 BY P. BOS FOR MOVFIL FUNCTION                                      LM00003    
                                                                                                       LM00004    
                                                                                                       LM00005    
                  NORMAL MODE IS INTEGER                                                          *001 LM00006    
                  BOOLEAN SCANI, ONCE, OLDER                                                      *002 LM00007    
                  DIMENSION COMBUF(20), ENTRY(10), WHO(8)                                         *003 LM00008    
                  EQUIVALENCE (COMBUF(20), FENCE), (NAME3, MODE)                                  *004 LM00009    
                  EQUIVALENCE (ENTRY(10), NAME1), (ENTRY(9), NAME2)                               *005 LM00010    
                  VECTOR VALUES FENCE = 777777777777K                                             *006 LM00011    
                  VECTOR VALUES B = 605757575757K                                                 *007 LM00012    
                  VECTOR VALUES TYPE = $ FILES$                                                   *008 LM00013    
                  VECTOR VALUES FIRST = 263151626357K                                             *009 LM00014    
                  VECTOR VALUES SECOND = $SECOND$                                                 *010 LM00015    
                  VECTOR VALUES STAR = $     *$                                                   *011 LM00016    
                  VECTOR VALUES ANSWER = $NO$                                                     *012 LM00017    
                  VECTOR VALUES ONCE = 1B                                                         *013 LM00018    
                  VECTOR VALUES OLDER = 0B                                                        *014 LM00019    
                                                                                                       LM00020    
                                                                                                       LM00021    
                  GCLS.(COMBUF,0)                                                                 *015 LM00022    
      LOOPI       THROUGH LOOPI, FOR N = 1,1,COMBUF(N).E.FENCE                                    *016 LM00023    
                  WHOAMI.(WHO(8)...8)                                                             *017 LM00024    
                  COMMND = LJUST.(COMBUF).A.77K10                                                 *018 LM00025    
                  WHENEVER COMMND .E. $C00000$                                                    *019 LM00026    
                    C=1                                                                           *020 LM00027    
                    D=3                                                                           *021 LM00028    
                  OR WHENEVER COMMND .E. $D00000$                                                 *022 LM00029    
                    C=2                                                                           *023 LM00030    
                    D=2                                                                           *024 LM00031    
                  OR WHENEVER COMMND .E. $R00000$                                                 *025 LM00032    
                    C=3                                                                           *026 LM00033    
                    D=4                                                                           *027 LM00034    
                    OLDER=1B                                                                      *028 LM00035    
                  OR WHENEVER COMMND .E. $U00000$                                                 *029 LM00036    
                    C=4                                                                           *030 LM00037    
                    D=2                                                                           *031 LM00038    
                    TYPE = $ LINKS$                                                               *032 LM00039    
                  OR WHENEVER COMMND .E. $M00000$                                                 *033 LM00040    
                    C=5                                                                           *034 LM00041    
                    D=4                                                                           *035 LM00042    
                  OTHERWISE                                                                       *036 LM00043    
                    TSK.                                                                          *037 LM00044    
                  END OF CONDITIONAL                                                              *038 LM00045    
                  WHENEVER COMBUF(1).E.FENCE, TRANSFER TO PFORMT(C)                               *039 LM00046    
                                                                                                       LM00047    
                  NOW JUMP THROUGH THE COMMAND BUFFERS 'D' AT A TIME.                                  LM00048    
                    THE FIRST 2 ARGUMENTS ARE ALWAYS NAME1 AND NAME2.                                  LM00049    
                                                                                                       LM00050    
                  THROUGH LOOP, FOR I=1,D,COMBUF(I).E.FENCE.OR.I.G.N                              *040 LM00051    
                  NAME1 = COMBUF(I)                                                               *041 LM00052    
                  NAME2 = COMBUF(I+1)                                                             *042 LM00053    
                  NAME3 = COMBUF(I+2)                                                             *043 LM00054    
                  NAME4 = COMBUF(I+3)                                                             *044 LM00055    
                  WHENEVER NAME2 .E. FENCE                                                        *045 LM00056    
                    PRMESA.(NAME1)                                                                *046 LM00057    
                    TRANSFER TO ICOMPT                                                            *047 LM00058    
                  OR WHENEVER (C.E.1 .OR. C.E.3) .AND. NAME3 .E. FENCE                            *048 LM00059    
                    PRMESA.(NAME1,B,NAME2)                                                        *049 LM00060    
                    TRANSFER TO ICOMPT                                                            *050 LM00061    
                  END OF CONDITIONAL                                                              *051 LM00062    
                  MASK1 = NAMASK.(NAME1)                                                          *052 LM00063    
                  MASK2 = NAMASK.(NAME2)                                                          *053 LM00064    
                  WHENEVER MASK1.A.MASK2 .E. FENCE                                                *054 LM00065    
                    SCANI = 0B                                                                    *055 LM00066    
                    FSTATE.(NAME1,NAME2,ENTRY(8)...8,FSERR2,ERCODE)                               *056 LM00067    
                  OTHERWISE                                                                       *057 LM00068    
                    SCANI = 1B                                                                    *058 LM00069    
                    WHENEVER ONCE                                                                 *059 LM00070    
                      ONCE = 0B                                                                   *060 LM00071    
                      UPDATE.                                                                     *061 LM00072    
                      SCNFIL.($U.F.D.(FILE)$)                                                     *062 LM00073    
                    END OF CONDITIONAL                                                            *063 LM00074    
                    ISCAN.(NAME1,NAME2)                                                           *064 LM00075    
                    SCAN.(ENTRY(10)...7,DONE1)                                                    *065 LM00076    
      BACK          WHENEVER ( C.E.4 .AND. ENTRY(6).A.7K5.NE.0) .OR.                              *066 LM00077    
                1  (ENTRY(6).A.7K5.E.0 .AND. C .NE. 4)                                            *066 LM00078    
                      SCAN.(ENTRY(10)...7,DONE1)                                                  *067 LM00079    
                      TRANSFER TO BACK                                                            *068 LM00080    
                    END OF CONDITIONAL                                                            *069 LM00081    
                  END OF CONDITIONAL                                                              *070 LM00082    
                  TRANSFER TO FUNC(C)                                                             *071 LM00083    
                                                                                                       LM00084    
      DONE1       WHENEVER COMBUF(I).E.STAR                                                       *072 LM00085    
                    EITHER = SECOND                                                               *073 LM00086    
                    NAME = COMBUF(I+1)                                                            *074 LM00087    
                  OR WHENEVER COMBUF(I+1).E.STAR                                                  *075 LM00088    
                    EITHER = FIRST                                                                *076 LM00089    
                    NAME = COMBUF(I)                                                              *077 LM00090    
                  OTHERWISE                                                                       *078 LM00091    
                    PRMESS.(TYPE,B,COMBUF(I),B,COMBUF(I+1),$ NOT FOUND.$)                         *079 LM00092    
                    TRANSFER TO LOOP                                                              *080 LM00093    
                  END OF CONDITIONAL                                                              *081 LM00094    
                  PRMESS.(604546575757K,TYPE,$ WITH$,EITHER,$ NAME$,NAME,                         *082 LM00095    
                1   $ FOUND.$)                                                                    *082 LM00096    
                  TRANSFER TO LOOP                                                                *083 LM00097    
                                                                                                       LM00098    
                  ... THE CHMODE FUNCTION                                                              LM00099    
                                                                                                       LM00100    
      FUNC(1)     CONTINUE                                                                        *084 LM00101    
      FUN(1)      WHENEVER SCANI                                                                  *085 LM00102    
                     MODE=NEWMOD.(ENTRY(6).RS.28,COMBUF(I+2),BADMOD)                              *086 LM00103    
                  OTHERWISE                                                                       *087 LM00104    
                     MODE=NEWMOD.(ENTRY(7),COMBUF(I+2),BADMOD)                                    *088 LM00105    
                  END OF CONDITIONAL                                                              *089 LM00106    
                  CHFILE.(NAME1,NAME2,MODE,-0,-0,IOERR)                                           *090 LM00107    
                  TRANSFER TO NEXT                                                                *091 LM00108    
                                                                                                       LM00109    
      BADMOD      PRMESS.($ ILLEGAL MODE  -$,MODE)                                                *092 LM00110    
                  TRANSFER TO LOOP                                                                *093 LM00111    
                                                                                                       LM00112    
                  ... THE DELETE FUNCTION                                                              LM00113    
                                                                                                       LM00114    
      FUN(2)      CONTINUE                                                                        *094 LM00115    
      FUNC(2)     WHENEVER MASK1.V.MASK2 .E. 0                                                    *095 LM00116    
                    NAME1 = STAR                                                                  *096 LM00117    
                    NAME2 = STAR                                                                  *097 LM00118    
                    SCANI = 0B                                                                    *098 LM00119    
                    FSTATE.(NAME1,NAME2,ENTRY(8)...8,IOERR)                                       *099 LM00120    
                  END OF CONDITIONAL                                                              *100 LM00121    
                  DELETE.(NAME1,NAME2)                                                            *101 LM00122    
                  TRANSFER TO NEXT                                                                *102 LM00123    
                                                                                                       LM00124    
                  ... THE DELETE INTERNAL FUNCTION                                                     LM00125    
                                                                                                       LM00126    
                  INTERNAL FUNCTION (N1,N2)                                                       *103 LM00127    
                  ENTRY TO DELETE.                                                                *104 LM00128    
                  FSTATE.(N1,N2,ENTRY(1)...2,FSERR,FSCODE)                                        *105 LM00129    
                  WHENEVER ENTRY.RS.35 .E. 1                                                      *106 LM00130    
                    WHENEVER C.E. 3                                                               *107 LM00131    
                      PRMESA.(N1,B,N2,$ IS A LINK.  IT CANNOT BE DELETED.$)                       *108 LM00132    
                      FUNCTION RETURN 0                                                           *109 LM00133    
                    END OF CONDITIONAL                                                            *110 LM00134    
                    PRMESA.(N1,B,N2,$ IS A LINK.  DO YOU WISH TO DELETE IT,$)                     *111 LM00135    
                    WHENEVER WHO(5) .NE. $(FIB)$, RDFLXC.(ANSWER,6)                               *112 LM00136    
                    WHENEVER ANSWER.NE.$YES$, TRANSFER TO NOPE                                    *113 LM00137    
                  END OF CONDITIONAL                                                              *114 LM00138    
                  WHENEVER ENTRY.A. 134K .NE. 0                                                   *115 LM00139    
                    WHENEVER OLDER, PRMESA.($OLDER$)                                              *116 LM00140    
                    PRMESA.(N1,B,N2,603162601457K,OCRBC.(ENTRY).V.575757K6,                       *117 LM00141    
                1       $' MODE.  DO YOU WISH TO DELETE IT,$)                                     *117 LM00142    
                    WHENEVER WHO(5).NE.$(FIB)$, RDFLXC.(ANSWER,6)                                 *118 LM00143    
                    WHENEVER ANSWER.NE.$YES$                                                      *119 LM00144    
      NOPE            PRMESS.(N1,B,N2,$ NOT DELETED.$)                                            *120 LM00145    
                      FUNCTION RETURN 0                                                           *121 LM00146    
                    END OF CONDITIONAL                                                            *122 LM00147    
                    CHFILE.(N1,N2,1,-0,-0,NOPE)                                                   *123 LM00148    
                  END OF CONDITIONAL                                                              *124 LM00149    
                  DELFIL.(N1,N2,NOPE)                                                             *125 LM00150    
                  FUNCTION RETURN 1                                                               *126 LM00151    
      FSERR       WHENEVER FSCODE.NE.3, TRANSFER TO NOPE                                          *127 LM00152    
                  FUNCTION RETURN 1                                                               *128 LM00153    
                  END OF FUNCTION                                                                 *129 LM00154    
                                                                                                       LM00155    
                  ... THE RENAME FUNCTION                                                              LM00156    
                                                                                                       LM00157    
      FUNC(3)     WHENEVER NAME4 .E. FENCE, NAME4 = STAR                                          *130 LM00158    
                  MASK3 = NAMASK.(NAME3)                                                          *131 LM00159    
                  MASK4 = NAMASK.(NAME4)                                                          *132 LM00160    
                  MASK3P = COM.(MASK3)                                                            *133 LM00161    
                  MASK4P = COM.(MASK4)                                                            *134 LM00162    
                  NAME3 = NAME3.A.MASK3                                                           *135 LM00163    
                  NAME4 = NAME4.A.MASK4                                                           *136 LM00164    
      FUN(3)      N3 = (NAME1.A.MASK3P).V.NAME3                                                   *137 LM00165    
                  N4 = (NAME2.A.MASK4P).V.NAME4                                                   *138 LM00166    
                  WHENEVER NAME1.E.N3 .AND. NAME2.E.N4, TRANSFER TO CHANGE                        *139 LM00167    
                  WHENEVER DELETE.(N3,N4).E.0                                                     *140 LM00168    
                    PRMESS.(NAME1,B,NAME2,$ NOT RENAMED$)                                         *141 LM00169    
                  OTHERWISE                                                                       *142 LM00170    
      CHANGE        CHFILE.(NAME1,NAME2,-0,N3,N4,IOERR)                                           *143 LM00171    
                  END OF CONDITIONAL                                                              *144 LM00172    
                  TRANSFER TO NEXT                                                                *145 LM00173    
                                                                                                       LM00174    
                  ... THE UNLINK FUNCTION                                                              LM00175    
                                                                                                       LM00176    
      FUN(4)      WHENEVER ENTRY(6).A.7K5.NE.0, TRANSFER TO NEXT                                  *146 LM00177    
      FUNC(4)     UNLINK.(NAME1,NAME2,IOERR)                                                      *147 LM00178    
                  TRANSFER TO NEXT                                                                *148 LM00179    
                                                                                                       LM00180    
                  ... THE MOVFIL FUNTION                                                               LM00181    
                                                                                                       LM00182    
      FUNC(5)     CONTINUE                                                                        *149 LM00183    
      FUN(5)      WHENEVER WHO(1).A.2K .E. 2K, TRANSFER TO MVOK                                   *150 LM00184    
                  WHENEVER NAME3 .NE. WHO(8), TRANSFER TO MVBAD                                   *151 LM00185    
                  WHENEVER NAME4 .E. WHO(3), TRANSFER TO MVOK                                     *152 LM00186    
                  WHENEVER WHO(1).A.1K .NE. 1K, TRANSFER TO MVBAD                                 *153 LM00187    
                  WHENEVER NAME4.A.777777770000K .NE. $CMFL00$, TRANSFER TO MVBAD                 *154 LM00188    
      MVOK        MOVFIL.(NAME1, NAME2, NAME3, NAME4, IOERR)                                      *155 LM00189    
                  TRANSFER TO NEXT                                                                *156 LM00190    
                                                                                                       LM00191    
      MVBAD       PRMESS.($ ILLEGAL USE OF COMMAND$)                                              *157 LM00192    
                  TRANSFER TO LOOP                                                                *158 LM00193    
                                                                                                       LM00194    
                   ... NEXT - GET THE NEXT ENTRY.                                                      LM00195    
                                                                                                       LM00196    
      NEXT        WHENEVER .NOT. SCANI, TRANSFER TO LOOP                                          *159 LM00197    
                  SCAN.(ENTRY(10)...7,LOOP)                                                       *160 LM00198    
                  WHENEVER ENTRY(6).A.7K5.E.0 .AND. C.NE.4,TRANSFER TO NEXT                       *161 LM00199    
                  TRANSFER TO FUN(C)                                                              *162 LM00200    
                                                                                                       LM00201    
                  ... IOERR (AND FSERR2) - I/O ERROR RETURNS                                           LM00202    
                                                                                                       LM00203    
      FSERR2      WHENEVER C.E.4 .AND. ERCODE.NE.3, TRANSFER TO FUNC(C)                           *163 LM00204    
      IOERR       PRNTER.(61K)                                                                    *164 LM00205    
                  TRANSFER TO NEXT                                                                *165 LM00206    
                                                                                                       LM00207    
      LOOP        CONTINUE                                                                        *166 LM00208    
                  CHNCOM.(0)                                                                      *167 LM00209    
                                                                                                       LM00210    
                  ... PRINT CORRECT FORMATS.                                                           LM00211    
                                                                                                       LM00212    
      PFORMT(1)   PRMESS.(COMBUF(0),$ NAME1 NAME2 MODE NAME1' NAME2' MODE' ...$                   *168 LM00213    
                1 )                                                                               *168 LM00214    
                  TRANSFER TO PFMT                                                                *169 LM00215    
                                                                                                       LM00216    
      PFORMT(2)   PRMESS.(COMBUF(0),$ NAME1 NAME2 NAME1' NAME2' ...$)                             *170 LM00217    
                  TRANSFER TO PFMT                                                                *171 LM00218    
                                                                                                       LM00219    
      PFORMT(3)   PRMESS.(COMBUF(0),$ OLDNM1 OLDNM2 NEWNM1 NEWNM2 OLDNM1' OLDNM                   *172 LM00220    
                1 2' NEWNM1' NEWNM2' ...$)                                                        *172 LM00221    
                  TRANSFER TO PFMT                                                                *173 LM00222    
                                                                                                       LM00223    
      PFORMT(4)   TRANSFER TO PFORMT(2)                                                           *174 LM00224    
                                                                                                       LM00225    
      PFORMT(5)   PRMESS.(COMBUF(0), $ NAME1 NAME2 PROB PROG NAME1' NAME2' PROB                   *175 LM00226    
                1 ' PROG' ...$)                                                                   *175 LM00227    
                                                                                                       LM00228    
      PFMT        PRMESS.($THE LISTF ASTERISK CONVENTION APPLIES.$)                               *176 LM00229    
                  CHNCOM.(0)                                                                      *177 LM00230    
                                                                                                       LM00231    
                  ... INCOMPLETE SET OF ARGUMENTS                                                      LM00232    
                                                                                                       LM00233    
      ICOMPT      PRMESS.($ IS AN INCOMPLETE SET OF ARGUMENTS.$)                                  *178 LM00234    
                  CHNCOM.(0)                                                                      *179 LM00235    
                  END OF PROGRAM                                                                  *180 LM00236    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01603 TRANSFER VECTOR LENGTH  00030 PROGRAM BEGINS    00344
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ANSWER 00133 A 1        ENTRY  00072 A 1        I      00144   1        MVOK   00121   4        N      00157   1  
      BACK   00073   4        ERCODE 00141   1        LOOPI  00031   4        N3     00153   1        OLDER  00160 A 2  
      BADMOD 00074   4        FENCE  00032 A 1        LOOP   00117   4        N4     00154   1        ONCE   00161 A 2  
      B      00134 A 1        FIRST  00142 A 1        MASK1  00145   1        NAME1  00060   1        PFMT   00124   4  
      CHANGE 00075   4        FSCODE 00143   1        MASK2  00146   1        NAME2  00061   1        PFORMT 00132 A 4  
      COMBUF 00056 A 1        FSERR2 00077   4        MASK3P 00147   1        NAME3  00057   1        SCANI  00162   2  
      COMMND 00135   1        FSERR  00100   4        MASK3  00150   1        NAME4  00155   1        SECOND 00163 A 1  
      C      00136   1        FUNC   00106 A 4        MASK4P 00151   1        NAME   00156   1        STAR   00164 A 1  
      DONE1  00076   4        FUN    00114 A 4        MASK4  00152   1        NEXT   00122   4        TYPE   00165 A 1  
      D      00137   1        ICOMPT 00115   4        MODE   00057   1        NOPE   00123   4        WHO    00176 A 1  
      EITHER 00140   1        IOERR  00116   4        MVBAD  00120   4                                                  
0FUNCTION DICTIONARY    
      CHFILE 00000   1        CHNCOM 00001   1        COM    00002   1        DELFIL 00003   1        EXIT   00004   1  
      FSTATE 00005   1        GCLS   00006   1        ISCAN  00007   1        .SETUP 00010   1        LJUST  00011   1  
      MOVFIL 00012   1        NAMASK 00013   1        NEWMOD 00014   1        OCRBC  00015   1        PRMESA 00016   1  
      PRMESS 00017   1        PRNTER 00020   1        RDFLXC 00021   1        SCAN   00022   1        SCNFIL 00023   1  
      TSK    00024   1        UNLINK 00025   1        UPDATE 00026   1        WHOAMI 00027   1        DELETE 00030   1  
0ABSOLUTE CONSTANTS     
 00236 +254563623360     00266 -202151276444     00322 -222563604626     00262 -074325632560     00273 -203145234644    
 00275 -203162602145     00324 -223360606060     00226 +214747433125     00257 -056331464560     00267 -202346456525    
 00327 -232551316242     00325 -226326602162     00330 -233025604331     00317 -204751462714     00315 -204751462214    
 00253 -052144250214     00225 +214425011460     00263 -075146276045     00316 -204751462260     00301 -203333336060    
 00241 +256645440214     00254 -054401146045     00217 +021460452566     00244 -032445440114     00335 -264544026046    
 00255 -054401604525     00250 -040260452566     00215 +016046432445     00314 -204643244544     00216 +021460333333    
 00222 +146045214425     00220 +146033333360     00252 -052144250114     00303 -204446242560     00305 -204521442502    
 00304 -204521442501     00212 +000000000061     00251 -044421452460     00313 -204626602346     00224 +214360646225    
 00231 +234426430000     00343 -377777770000     00235 +254521442524     00312 -204546636051     00234 +254325632524    
 00310 -204546636024     00300 -203163736060     00233 +242543256325     00323 -223060634660     00337 -304664606631    
 00242 +336060244660     00221 +146044462425     00274 -203162601457     00265 -175757000000     00260 -064324255160    
 00213 +000000000134     00336 -302562606060     00205 +000000000006     00340 -342631223460     00331 -237360606060    
 00245 -032563256031     00320 -206346602425     00334 -246066316230     00270 -202446607046     00326 -232524336060    
 00237 +256024254325     00256 -054546636022     00277 -203163602321     00246 -033145423360     00276 -203162602160    
 00211 +000000000043     00240 +256060406060     00223 +214360444624     00272 -203143432527     00210 +000000000034    
 00243 +336060606060     00271 -202646644524     00306 -204521442560     00321 -206631633060     00307 -204546575757    
 00261 -066445243360     00311 -204546636026     00214 +000000700000     00206 +000000000007     00341 -342631432534    
 00333 -243326332433     00204 +000000000005     00247 -040000000000     00302 -204331454262     00332 -240000000000    
 00203 +000000000004     00264 -110000000000     00201 +000000000002     00232 +240000000000     00202 +000000000003    
 00227 +230000000000     00342 -370000000000     00207 +000000000010     00177 +000000000000     00200 +000000000001    
 00230 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00073 TXL -300632000607       00074 TXL -301001000774       00075 TXL -301350001337       00076 TXL -300644000640      
 00077 TXL -301471001461       00100 TXL -301220001214       00101 TXL -301365001365       00102 TXL -301364001360      
 00103 TXL -301262001255       00104 TXL -301010001002       00105 TXL -300724000724       00107 TXL -301374001365      
 00110 TXL -301360001351       00111 TXL -301310001304       00112 TXL -301002001002       00113 TXL -300726000724      
 00115 TXL -301574001565       00116 TXL -301473001471       00117 TXL -301475001474       00120 TXL -301436001431      
 00121 TXL -301430001422       00122 TXL -301442001437       00123 TXL -301171001162       00124 TXL -301563001553      
 00125 TXL -301553001540       00126 TXL -301540001537       00127 TXL -301536001521       00130 TXL -301520001511      
 00131 TXL -301510001477                                                                                                
0PROGRAM    
                 N'R                                                                001  LM00006
                 BOOLEAN SCANI, ONCE, OLDER                                         002  LM00007
                 D'N COMBUF(20), ENTRY(10), WHO(8)                                  003  LM00008
                 E'E (COMBUF(20), FENCE), (NAME3, MODE)                             004  LM00009
                 E'E (ENTRY(10), NAME1), (ENTRY(9), NAME2)                          005  LM00010
                 V'S FENCE = 777777777777K                                          006  LM00011
 00344 TSX +0 07400 4 00010    00032     -3 77777 7 77777                                                               
                 V'S B = 605757575757K                                              007  LM00012
 00134     -2 05757 5 75757                                                                                             
                 V'S TYPE = $ FILES$                                                008  LM00013
 00165     -2 02631 4 32562                                                                                             
                 V'S FIRST = 263151626357K                                          009  LM00014
 00142     +2 63151 6 26357                                                                                             
                 V'S SECOND = $SECOND$                                              010  LM00015
 00163     -2 22523 4 64524                                                                                             
                 V'S STAR = $     *$                                                011  LM00016
 00164     -2 06060 6 06054                                                                                             
                 V'S ANSWER = $NO$                                                  012  LM00017
 00133     -0 54660 6 06060                                                                                             
                 V'S ONCE = 1B                                                      013  LM00018
 00161     +0 00000 0 00001                                                                                             
                 V'S OLDER = 0B                                                     014  LM00019
 00160     +0 00000 0 00000                                                                                             
                 GCLS.(COMBUF,0)                                                    015  LM00022
 00345 TSX +0 07400 4 00006    00346 TXH +3 00000 0 00056    00347 TXH +3 00000 0 00177                                 
      LOOPI      T'H LOOPI, FOR N = 1,1,COMBUF(N).E.FENCE                           016  LM00023
 00350 CLA +0 50000 0 00200    00351 STO +0 60100 0 00157    00352 TRA +0 02000 0 00356    00353 CLA +0 50000 0 00157   
 00354 ADD +0 40000 0 00200    00355 STO +0 60100 0 00157    00356 LXA +0 53400 1 00157    00357 CLA +0 50000 1 00056   
 00360 SUB +0 40200 0 00032    00361 TZE +0 10000 0 00363    00362 TRA +0 02000 0 00353                                 
                 WHOAMI.(WHO(8)...8)                                                017  LM00024
 00363 TSX +0 07400 4 00027    00364 TIX +2 00207 0 00166                                                               
                 COMMND = LJUST.(COMBUF).A.77K10                                    018  LM00025
 00365 TSX +0 07400 4 00011    00366 TXH +3 00000 0 00056    00367 STO +0 60100 0 01577    00370 CAL -0 50000 0 01577   
 00371 ANA -0 32000 0 00342    00372 SLW +0 60200 0 00135                                                               
                 W'R COMMND .E. $C00000$                                            019  LM00026
 00373 CLA +0 50000 0 00135    00374 SUB +0 40200 0 00227    00375 TNZ -0 10000 0 00403                                 
                   C=1                                                              020  LM00027
 00376 CLA +0 50000 0 00200    00377 STO +0 60100 0 00136                                                               
                   D=3                                                              021  LM00028
 00400 CLA +0 50000 0 00202    00401 STO +0 60100 0 00137                                                               
                 O'R COMMND .E. $D00000$                                            022  LM00029
 00402 TRA +0 02000 0 00450    00403 CLA +0 50000 0 00135    00404 SUB +0 40200 0 00232    00405 TNZ -0 10000 0 00413   
                   C=2                                                              023  LM00030
 00406 CLA +0 50000 0 00201    00407 STO +0 60100 0 00136                                                               
                   D=2                                                              024  LM00031
 00410 CLA +0 50000 0 00201    00411 STO +0 60100 0 00137                                                               
                 O'R COMMND .E. $R00000$                                            025  LM00032
 00412 TRA +0 02000 0 00450    00413 CLA +0 50000 0 00135    00414 SUB +0 40200 0 00264    00415 TNZ -0 10000 0 00425   
                   C=3                                                              026  LM00033
 00416 CLA +0 50000 0 00202    00417 STO +0 60100 0 00136                                                               
                   D=4                                                              027  LM00034
 00420 CLA +0 50000 0 00203    00421 STO +0 60100 0 00137                                                               
                   OLDER=1B                                                         028  LM00035
 00422 CLA +0 50000 0 00200    00423 STO +0 60100 0 00160                                                               
                 O'R COMMND .E. $U00000$                                            029  LM00036
 00424 TRA +0 02000 0 00450    00425 CLA +0 50000 0 00135    00426 SUB +0 40200 0 00332    00427 TNZ -0 10000 0 00437   
                   C=4                                                              030  LM00037
 00430 CLA +0 50000 0 00203    00431 STO +0 60100 0 00136                                                               
                   D=2                                                              031  LM00038
 00432 CLA +0 50000 0 00201    00433 STO +0 60100 0 00137                                                               
                   TYPE = $ LINKS$                                                  032  LM00039
 00434 CLA +0 50000 0 00302    00435 STO +0 60100 0 00165                                                               
                 O'R COMMND .E. $M00000$                                            033  LM00040
 00436 TRA +0 02000 0 00450    00437 CLA +0 50000 0 00135    00440 SUB +0 40200 0 00247    00441 TNZ -0 10000 0 00447   
                   C=5                                                              034  LM00041
 00442 CLA +0 50000 0 00204    00443 STO +0 60100 0 00136                                                               
                   D=4                                                              035  LM00042
 00444 CLA +0 50000 0 00203    00445 STO +0 60100 0 00137                                                               
                 O'E                                                                036  LM00043
 00446 TRA +0 02000 0 00450                                                                                             
                   TSK.                                                             037  LM00044
 00447 TSX +0 07400 4 00024                                                                                             
                 E'L                                                                038  LM00045
                 W'R COMBUF(1).E.FENCE, T'O PFORMT(C)                               039  LM00046
 00450 CLA +0 50000 0 00055    00451 SUB +0 40200 0 00032    00452 TNZ -0 10000 0 00455    00453 LXA +0 53400 2 00136   
 00454 TRA +0 02000 2 00132                                                                                             
                 T'H LOOP, FOR I=1,D,COMBUF(I).E.FENCE.OR.I.G.N                     040  LM00051
 00455 CLA +0 50000 0 00200    00456 STO +0 60100 0 00144    00457 TRA +0 02000 0 00463    00460 CLA +0 50000 0 00144   
 00461 ADD +0 40000 0 00137    00462 STO +0 60100 0 00144    00463 CLA +0 50000 0 00144    00464 SUB +0 40200 0 00157   
 00465 TZE +0 10000 0 00467    00466 TPL +0 12000 0 01475    00467 LXA +0 53400 1 00144    00470 CLA +0 50000 1 00056   
 00471 SUB +0 40200 0 00032    00472 TZE +0 10000 0 01475                                                               
                 NAME1 = COMBUF(I)                                                  041  LM00052
 00473 LXA +0 53400 2 00144    00474 CLA +0 50000 2 00056    00475 STO +0 60100 0 00060                                 
                 NAME2 = COMBUF(I+1)                                                042  LM00053
 00476 CLA +0 50000 0 00144    00477 ADD +0 40000 0 00200    00500 PAX +0 73400 2 00000    00501 CLA +0 50000 2 00056   
 00502 STO +0 60100 0 00061                                                                                             
                 NAME3 = COMBUF(I+2)                                                043  LM00054
 00503 CLA +0 50000 0 00144    00504 ADD +0 40000 0 00201    00505 PAX +0 73400 2 00000    00506 CLA +0 50000 2 00056   
 00507 STO +0 60100 0 00057                                                                                             
                 NAME4 = COMBUF(I+3)                                                044  LM00055
 00510 CLA +0 50000 0 00144    00511 ADD +0 40000 0 00202    00512 PAX +0 73400 2 00000    00513 CLA +0 50000 2 00056   
 00514 STO +0 60100 0 00155                                                                                             
                 W'R NAME2 .E. FENCE                                                045  LM00056
 00515 CLA +0 50000 0 00061    00516 SUB +0 40200 0 00032    00517 TNZ -0 10000 0 00524                                 
                   PRMESA.(NAME1)                                                   046  LM00057
 00520 TSX +0 07400 4 00016    00521 TXH +3 00000 0 00060                                                               
                   T'O ICOMPT                                                       047  LM00058
 00522 TRA +0 02000 0 00115                                                                                             
                 O'R (C.E.1 .OR. C.E.3) .AND. NAME3 .E. FENCE                       048  LM00059
 00523 TRA +0 02000 0 00542    00524 CLA +0 50000 0 00057    00525 SUB +0 40200 0 00032    00526 TNZ -0 10000 0 00542   
 00527 CLA +0 50000 0 00136    00530 SUB +0 40200 0 00202    00531 TZE +0 10000 0 00535    00532 CLA +0 50000 0 00136   
 00533 SUB +0 40200 0 00200    00534 TNZ -0 10000 0 00542                                                               
                   PRMESA.(NAME1,B,NAME2)                                           049  LM00060
 00535 TSX +0 07400 4 00016    00536 TXH +3 00000 0 00060    00537 TXH +3 00000 0 00134    00540 TXH +3 00000 0 00061   
                   T'O ICOMPT                                                       050  LM00061
 00541 TRA +0 02000 0 00115                                                                                             
                 E'L                                                                051  LM00062
                 MASK1 = NAMASK.(NAME1)                                             052  LM00063
 00542 TSX +0 07400 4 00013    00543 TXH +3 00000 0 00060    00544 STO +0 60100 0 00145                                 
                 MASK2 = NAMASK.(NAME2)                                             053  LM00064
 00545 TSX +0 07400 4 00013    00546 TXH +3 00000 0 00061    00547 STO +0 60100 0 00146                                 
                 W'R MASK1.A.MASK2 .E. FENCE                                        054  LM00065
 00550 CAL -0 50000 0 00145    00551 ANA -0 32000 0 00146    00552 SLW +0 60200 0 01577    00553 CLA +0 50000 0 01577   
 00554 SUB +0 40200 0 00032    00555 TNZ -0 10000 0 00567                                                               
                   SCANI = 0B                                                       055  LM00066
 00556 CLA +0 50000 0 00177    00557 STO +0 60100 0 00162                                                               
                   FSTATE.(NAME1,NAME2,ENTRY(8)...8,FSERR2,ERCODE)                  056  LM00067
 00560 TSX +0 07400 4 00005    00561 TXH +3 00000 0 00060    00562 TXH +3 00000 0 00061    00563 TIX +2 00207 0 00062   
 00564 TXH +3 00000 0 00077    00565 TXH +3 00000 0 00141                                                               
                 O'E                                                                057  LM00068
 00566 TRA +0 02000 0 00636                                                                                             
                   SCANI = 1B                                                       058  LM00069
 00567 CLA +0 50000 0 00200    00570 STO +0 60100 0 00162                                                               
                   W'R ONCE                                                         059  LM00070
 00571 NZT -0 52000 0 00161    00572 TRA +0 02000 0 00601                                                               
                     ONCE = 0B                                                      060  LM00071
 00573 CLA +0 50000 0 00177    00574 STO +0 60100 0 00161                                                               
                     UPDATE.                                                        061  LM00072
 00575 TSX +0 07400 4 00026                                                                                             
                     SCNFIL.($U.F.D.(FILE)$)                                        062  LM00073
 00576 TSX +0 07400 4 00023    00577 TXH +3 00000 0 00333    00600 TXH +3 00000 0 00341                                 
                   E'L                                                              063  LM00074
                   ISCAN.(NAME1,NAME2)                                              064  LM00075
 00601 TSX +0 07400 4 00007    00602 TXH +3 00000 0 00060    00603 TXH +3 00000 0 00061                                 
                   SCAN.(ENTRY(10)...7,DONE1)                                       065  LM00076
 00604 TSX +0 07400 4 00022    00605 TIX +2 00206 0 00060    00606 TXH +3 00000 0 00076                                 
      BACK         W'R ( C.E.4 .AND. ENTRY(6).A.7K5.NE.0) .OR.                      066  LM00077
                1 (ENTRY(6).A.7K5.E.0 .AND. C .NE. 4)                               066  LM00078
 00607 CLA +0 50000 0 00136    00610 SUB +0 40200 0 00203    00611 TZE +0 10000 0 00620    00612 CAL -0 50000 0 00064   
 00613 ANA -0 32000 0 00214    00614 SLW +0 60200 0 01577    00615 CLA +0 50000 0 01577    00616 SUB +0 40200 0 00177   
 00617 TZE +0 10000 0 00632    00620 CAL -0 50000 0 00064    00621 ANA -0 32000 0 00214    00622 SLW +0 60200 0 01577   
 00623 CLA +0 50000 0 01577    00624 SUB +0 40200 0 00177    00625 TZE +0 10000 0 00631    00626 CLA +0 50000 0 00136   
 00627 SUB +0 40200 0 00203    00630 TZE +0 10000 0 00632    00631 TRA +0 02000 0 00636                                 
                     SCAN.(ENTRY(10)...7,DONE1)                                     067  LM00079
 00632 TSX +0 07400 4 00022    00633 TIX +2 00206 0 00060    00634 TXH +3 00000 0 00076                                 
                     T'O BACK                                                       068  LM00080
 00635 TRA +0 02000 0 00073                                                                                             
                   E'L                                                              069  LM00081
                 E'L                                                                070  LM00082
                 T'O FUNC(C)                                                        071  LM00083
 00636 LXA +0 53400 2 00136    00637 TRA +0 02000 2 00106                                                               
      DONE1      W'R COMBUF(I).E.STAR                                               072  LM00085
 00640 LXA +0 53400 1 00144    00641 CLA +0 50000 1 00056    00642 SUB +0 40200 0 00164    00643 TNZ -0 10000 0 00654   
                   EITHER = SECOND                                                  073  LM00086
 00644 CLA +0 50000 0 00163    00645 STO +0 60100 0 00140                                                               
                   NAME = COMBUF(I+1)                                               074  LM00087
 00646 CLA +0 50000 0 00144    00647 ADD +0 40000 0 00200    00650 PAX +0 73400 2 00000    00651 CLA +0 50000 2 00056   
 00652 STO +0 60100 0 00156                                                                                             
                 O'R COMBUF(I+1).E.STAR                                             075  LM00088
 00653 TRA +0 02000 0 00712    00654 CLA +0 50000 0 00144    00655 ADD +0 40000 0 00200    00656 PAX +0 73400 1 00000   
 00657 CLA +0 50000 1 00056    00660 SUB +0 40200 0 00164    00661 TNZ -0 10000 0 00670                                 
                   EITHER = FIRST                                                   076  LM00089
 00662 CLA +0 50000 0 00142    00663 STO +0 60100 0 00140                                                               
                   NAME = COMBUF(I)                                                 077  LM00090
 00664 LXA +0 53400 2 00144    00665 CLA +0 50000 2 00056    00666 STO +0 60100 0 00156                                 
                 O'E                                                                078  LM00091
 00667 TRA +0 02000 0 00712                                                                                             
                   PRMESS.(TYPE,B,COMBUF(I),B,COMBUF(I+1),$ NOT FOUND.$)            079  LM00092
 00670 CLA +0 50000 0 00144    00671 ADD +0 40000 0 00200    00672 SUB +0 40200 0 00673    00673 TXH +3 00000 0 00056   
 00674 STA +0 62100 0 00706    00675 CLA +0 50000 0 00144    00676 SUB +0 40200 0 00677    00677 TXH +3 00000 0 00056   
 00700 STA +0 62100 0 00704    00701 TSX +0 07400 4 00017    00702 TXH +3 00000 0 00165    00703 TXH +3 00000 0 00134   
 00704 TXH +3 00000 0 00000    00705 TXH +3 00000 0 00134    00706 TXH +3 00000 0 00000    00707 TXH +3 00000 0 00311   
 00710 TXH +3 00000 0 00261                                                                                             
                   T'O LOOP                                                         080  LM00093
 00711 TRA +0 02000 0 00117                                                                                             
                 E'L                                                                081  LM00094
                 PRMESS.(604546575757K,TYPE,$ WITH$,EITHER,$ NAME$,NAME,            082  LM00095
                1  $ FOUND.$)                                                       082  LM00096
 00712 TSX +0 07400 4 00017    00713 TXH +3 00000 0 00307    00714 TXH +3 00000 0 00165    00715 TXH +3 00000 0 00321   
 00716 TXH +3 00000 0 00140    00717 TXH +3 00000 0 00306    00720 TXH +3 00000 0 00156    00721 TXH +3 00000 0 00271   
 00722 TXH +3 00000 0 00243                                                                                             
                 T'O LOOP                                                           083  LM00097
 00723 TRA +0 02000 0 00117                                                                                             
      FUNC(1)    CONTINUE                                                           084  LM00101
      FUN(1)     W'R SCANI                                                          085  LM00102
 00724 NZT -0 52000 0 00162    00725 TRA +0 02000 0 00746                                                               
                    MODE=NEWMOD.(ENTRY(6).RS.28,COMBUF(I+2),BADMOD)                 086  LM00103
 00726 CLA +0 50000 0 00144    00727 ADD +0 40000 0 00201    00730 SUB +0 40200 0 00731    00731 TXH +3 00000 0 00056   
 00732 STA +0 62100 0 00742    00733 CAL -0 50000 0 00210    00734 STA +0 62100 0 00736    00735 CAL -0 50000 0 00064   
 00736 LGR -0 76500 0 00000    00737 SLW +0 60200 0 01577    00740 TSX +0 07400 4 00014    00741 TXH +3 00000 0 01577   
 00742 TXH +3 00000 0 00000    00743 TXH +3 00000 0 00074    00744 STO +0 60100 0 00057                                 
                 O'E                                                                087  LM00104
 00745 TRA +0 02000 0 00760                                                                                             
                    MODE=NEWMOD.(ENTRY(7),COMBUF(I+2),BADMOD)                       088  LM00105
 00746 CLA +0 50000 0 00144    00747 ADD +0 40000 0 00201    00750 SUB +0 40200 0 00751    00751 TXH +3 00000 0 00056   
 00752 STA +0 62100 0 00755    00753 TSX +0 07400 4 00014    00754 TXH +3 00000 0 00063    00755 TXH +3 00000 0 00000   
 00756 TXH +3 00000 0 00074    00757 STO +0 60100 0 00057                                                               
                 E'L                                                                089  LM00106
                 CHFILE.(NAME1,NAME2,MODE,-0,-0,IOERR)                              090  LM00107
 00760 CLS +0 50200 0 00177    00761 STO +0 60100 0 01577    00762 CLS +0 50200 0 00177    00763 STO +0 60100 0 01600   
 00764 TSX +0 07400 4 00000    00765 TXH +3 00000 0 00060    00766 TXH +3 00000 0 00061    00767 TXH +3 00000 0 00057   
 00770 TXH +3 00000 0 01600    00771 TXH +3 00000 0 01577    00772 TXH +3 00000 0 00116                                 
                 T'O NEXT                                                           091  LM00108
 00773 TRA +0 02000 0 00122                                                                                             
      BADMOD     PRMESS.($ ILLEGAL MODE  -$,MODE)                                   092  LM00110
 00774 TSX +0 07400 4 00017    00775 TXH +3 00000 0 00272    00776 TXH +3 00000 0 00223    00777 TXH +3 00000 0 00240   
 01000 TXH +3 00000 0 00057                                                                                             
                 T'O LOOP                                                           093  LM00111
 01001 TRA +0 02000 0 00117                                                                                             
      FUN(2)     CONTINUE                                                           094  LM00115
      FUNC(2)    W'R MASK1.V.MASK2 .E. 0                                            095  LM00116
 01002 CAL -0 50000 0 00145    01003 ORA -0 50100 0 00146    01004 SLW +0 60200 0 01600    01005 CLA +0 50000 0 01600   
 01006 SUB +0 40200 0 00177    01007 TNZ -0 10000 0 01023                                                               
                   NAME1 = STAR                                                     096  LM00117
 01010 CLA +0 50000 0 00164    01011 STO +0 60100 0 00060                                                               
                   NAME2 = STAR                                                     097  LM00118
 01012 CLA +0 50000 0 00164    01013 STO +0 60100 0 00061                                                               
                   SCANI = 0B                                                       098  LM00119
 01014 CLA +0 50000 0 00177    01015 STO +0 60100 0 00162                                                               
                   FSTATE.(NAME1,NAME2,ENTRY(8)...8,IOERR)                          099  LM00120
 01016 TSX +0 07400 4 00005    01017 TXH +3 00000 0 00060    01020 TXH +3 00000 0 00061    01021 TIX +2 00207 0 00062   
 01022 TXH +3 00000 0 00116                                                                                             
                 E'L                                                                100  LM00121
                 DELETE.(NAME1,NAME2)                                               101  LM00122
 01023 TSX +0 07400 4 00030    01024 TXH +3 00000 0 00060    01025 TXH +3 00000 0 00061                                 
                 T'O NEXT                                                           102  LM00123
 01026 TRA +0 02000 0 00122                                                                                             
                 INTERNAL FUNCTION (N1,N2)                                          103  LM00127
 01027 TRA +0 02000 0 01255                                                                                             
                 ENTRY TO DELETE.                                                   104  LM00128
 01030 TRA +0 02000 0 01033    00030 TTR +0 02100 0 01031    01031 SXA +0 63400 2 01223    01032 TSX +0 07400 2 01223   
                 FSTATE.(N1,N2,ENTRY(1)...2,FSERR,FSCODE)                           105  LM00129
 01033 TSX +0 07400 4 00005    01034 TXH +3 00000 0 00024    01035 TXH +3 00000 0 00024    01036 TIX +2 00201 0 00071   
 01037 TXH +3 00000 0 00100    01040 TXH +3 00000 0 00143                                                               
                 W'R ENTRY.RS.35 .E. 1                                              106  LM00130
 01041 CAL -0 50000 0 00211    01042 STA +0 62100 0 01044    01043 CAL -0 50000 0 00072    01044 LGR -0 76500 0 00000   
 01045 SLW +0 60200 0 01253    01046 CLA +0 50000 0 01253    01047 SUB +0 40200 0 00200    01050 TNZ -0 10000 0 01115   
                   W'R C.E. 3                                                       107  LM00131
 01051 CLA +0 50000 0 00136    01052 SUB +0 40200 0 00202    01053 TNZ -0 10000 0 01070                                 
                     PRMESA.(N1,B,N2,$ IS A LINK.  IT CANNOT BE DELETED.$)          108  LM00132
 01054 TSX +0 07400 4 00016    01055 TXH +3 00000 0 00024    01056 TXH +3 00000 0 00134    01057 TXH +3 00000 0 00024   
 01060 TXH +3 00000 0 00276    01061 TXH +3 00000 0 00246    01062 TXH +3 00000 0 00277    01063 TXH +3 00000 0 00256   
 01064 TXH +3 00000 0 00237    01065 TXH +3 00000 0 00326                                                               
                     FUNCTION RETURN 0                                              109  LM00133
 01066 CLA +0 50000 0 00177    01067 TRA +0 02000 0 01247                                                               
                   E'L                                                              110  LM00134
                   PRMESA.(N1,B,N2,$ IS A LINK.  DO YOU WISH TO DELETE IT,$)        111  LM00135
 01070 TSX +0 07400 4 00016    01071 TXH +3 00000 0 00024    01072 TXH +3 00000 0 00134    01073 TXH +3 00000 0 00024   
 01074 TXH +3 00000 0 00276    01075 TXH +3 00000 0 00246    01076 TXH +3 00000 0 00270    01077 TXH +3 00000 0 00334   
 01100 TXH +3 00000 0 00320    01101 TXH +3 00000 0 00245    01102 TXH +3 00000 0 00331                                 
                   W'R WHO(5) .NE. $(FIB)$, RDFLXC.(ANSWER,6)                       112  LM00136
 01103 CLA +0 50000 0 00171    01104 SUB +0 40200 0 00340    01105 TZE +0 10000 0 01111    01106 TSX +0 07400 4 00021   
 01107 TXH +3 00000 0 00133    01110 TXH +3 00000 0 00205                                                               
                   W'R ANSWER.NE.$YES$, T'O NOPE                                    113  LM00137
 01111 CLA +0 50000 0 00133    01112 SUB +0 40200 0 00336    01113 TZE +0 10000 0 01115    01114 TRA +0 02000 0 00123   
                 E'L                                                                114  LM00138
                 W'R ENTRY.A. 134K .NE. 0                                           115  LM00139
 01115 CAL -0 50000 0 00072    01116 ANA -0 32000 0 00213    01117 SLW +0 60200 0 01253    01120 CLA +0 50000 0 01253   
 01121 SUB +0 40200 0 00177    01122 TZE +0 10000 0 01206                                                               
                   W'R OLDER, PRMESA.($OLDER$)                                      116  LM00140
 01123 NZT -0 52000 0 00160    01124 TRA +0 02000 0 01127    01125 TSX +0 07400 4 00016    01126 TXH +3 00000 0 00260   
                   PRMESA.(N1,B,N2,603162601457K,OCRBC.(ENTRY).V.575757K6,          117  LM00141
                1      $' MODE.  DO YOU WISH TO DELETE IT,$)                        117  LM00142
 01127 TSX +0 07400 4 00015    01130 TXH +3 00000 0 00072    01131 STO +0 60100 0 01253    01132 CAL -0 50000 0 01253   
 01133 ORA -0 50100 0 00265    01134 SLW +0 60200 0 01253    01135 TSX +0 07400 4 00016    01136 TXH +3 00000 0 00024   
 01137 TXH +3 00000 0 00134    01140 TXH +3 00000 0 00024    01141 TXH +3 00000 0 00274    01142 TXH +3 00000 0 01253   
 01143 TXH +3 00000 0 00221    01144 TXH +3 00000 0 00242    01145 TXH +3 00000 0 00337    01146 TXH +3 00000 0 00323   
 01147 TXH +3 00000 0 00233    01150 TXH +3 00000 0 00300                                                               
                   W'R WHO(5).NE.$(FIB)$, RDFLXC.(ANSWER,6)                         118  LM00143
 01151 CLA +0 50000 0 00171    01152 SUB +0 40200 0 00340    01153 TZE +0 10000 0 01157    01154 TSX +0 07400 4 00021   
 01155 TXH +3 00000 0 00133    01156 TXH +3 00000 0 00205                                                               
                   W'R ANSWER.NE.$YES$                                              119  LM00144
 01157 CLA +0 50000 0 00133    01160 SUB +0 40200 0 00336    01161 TZE +0 10000 0 01173                                 
      NOPE           PRMESS.(N1,B,N2,$ NOT DELETED.$)                               120  LM00145
 01162 TSX +0 07400 4 00017    01163 TXH +3 00000 0 00024    01164 TXH +3 00000 0 00134    01165 TXH +3 00000 0 00024   
 01166 TXH +3 00000 0 00310    01167 TXH +3 00000 0 00234    01170 TXH +3 00000 0 00243                                 
                     FUNCTION RETURN 0                                              121  LM00146
 01171 CLA +0 50000 0 00177    01172 TRA +0 02000 0 01247                                                               
                   E'L                                                              122  LM00147
                   CHFILE.(N1,N2,1,-0,-0,NOPE)                                      123  LM00148
 01173 CLS +0 50200 0 00177    01174 STO +0 60100 0 01253    01175 CLS +0 50200 0 00177    01176 STO +0 60100 0 01254   
 01177 TSX +0 07400 4 00000    01200 TXH +3 00000 0 00024    01201 TXH +3 00000 0 00024    01202 TXH +3 00000 0 00200   
 01203 TXH +3 00000 0 01254    01204 TXH +3 00000 0 01253    01205 TXH +3 00000 0 00123                                 
                 E'L                                                                124  LM00149
                 DELFIL.(N1,N2,NOPE)                                                125  LM00150
 01206 TSX +0 07400 4 00003    01207 TXH +3 00000 0 00024    01210 TXH +3 00000 0 00024    01211 TXH +3 00000 0 00123   
                 FUNCTION RETURN 1                                                  126  LM00151
 01212 CLA +0 50000 0 00200    01213 TRA +0 02000 0 01247                                                               
      FSERR      W'R FSCODE.NE.3, T'O NOPE                                          127  LM00152
 01214 CLA +0 50000 0 00143    01215 SUB +0 40200 0 00202    01216 TZE +0 10000 0 01220    01217 TRA +0 02000 0 00123   
                 F'N 1                                                              128  LM00153
 01220 CLA +0 50000 0 00200    01221 TRA +0 02000 0 01247                                                               
                 E'N                                                                129  LM00154
 01222 TSX +0 07400 4 00004    01223 TXH +3 00000 0 00000    01224 SXD -0 63400 1 01223    01225 SXA +0 63400 4 01247   
 01226 CLA +0 50000 4 00001    01227 STO +0 60100 0 01034    01230 STO +0 60100 0 01055    01231 STO +0 60100 0 01071   
 01232 STO +0 60100 0 01136    01233 STO +0 60100 0 01163    01234 STO +0 60100 0 01200    01235 STO +0 60100 0 01207   
 01236 CLA +0 50000 4 00002    01237 STO +0 60100 0 01035    01240 STO +0 60100 0 01057    01241 STO +0 60100 0 01073   
 01242 STO +0 60100 0 01140    01243 STO +0 60100 0 01165    01244 STO +0 60100 0 01201    01245 STO +0 60100 0 01210   
 01246 TRA +0 02000 2 00001    01247 AXT +0 77400 4 00000    01250 LXA +0 53400 2 01223    01251 LXD -0 53400 1 01223   
 01252 TRA +0 02000 4 00001                                                                                             
      FUNC(3)    W'R NAME4 .E. FENCE, NAME4 = STAR                                  130  LM00158
 01255 CLA +0 50000 0 00155    01256 SUB +0 40200 0 00032    01257 TNZ -0 10000 0 01262    01260 CLA +0 50000 0 00164   
 01261 STO +0 60100 0 00155                                                                                             
                 MASK3 = NAMASK.(NAME3)                                             131  LM00159
 01262 TSX +0 07400 4 00013    01263 TXH +3 00000 0 00057    01264 STO +0 60100 0 00150                                 
                 MASK4 = NAMASK.(NAME4)                                             132  LM00160
 01265 TSX +0 07400 4 00013    01266 TXH +3 00000 0 00155    01267 STO +0 60100 0 00152                                 
                 MASK3P = COM.(MASK3)                                               133  LM00161
 01270 TSX +0 07400 4 00002    01271 TXH +3 00000 0 00150    01272 STO +0 60100 0 00147                                 
                 MASK4P = COM.(MASK4)                                               134  LM00162
 01273 TSX +0 07400 4 00002    01274 TXH +3 00000 0 00152    01275 STO +0 60100 0 00151                                 
                 NAME3 = NAME3.A.MASK3                                              135  LM00163
 01276 CAL -0 50000 0 00057    01277 ANA -0 32000 0 00150    01300 SLW +0 60200 0 00057                                 
                 NAME4 = NAME4.A.MASK4                                              136  LM00164
 01301 CAL -0 50000 0 00155    01302 ANA -0 32000 0 00152    01303 SLW +0 60200 0 00155                                 
      FUN(3)     N3 = (NAME1.A.MASK3P).V.NAME3                                      137  LM00165
 01304 CAL -0 50000 0 00060    01305 ANA -0 32000 0 00147    01306 ORA -0 50100 0 00057    01307 SLW +0 60200 0 00153   
                 N4 = (NAME2.A.MASK4P).V.NAME4                                      138  LM00166
 01310 CAL -0 50000 0 00061    01311 ANA -0 32000 0 00151    01312 ORA -0 50100 0 00155    01313 SLW +0 60200 0 00154   
                 W'R NAME1.E.N3 .AND. NAME2.E.N4, T'O CHANGE                        139  LM00167
 01314 CLA +0 50000 0 00061    01315 SUB +0 40200 0 00154    01316 TNZ -0 10000 0 01323    01317 CLA +0 50000 0 00060   
 01320 SUB +0 40200 0 00153    01321 TNZ -0 10000 0 01323    01322 TRA +0 02000 0 00075                                 
                 W'R DELETE.(N3,N4).E.0                                             140  LM00168
 01323 TSX +0 07400 4 00030    01324 TXH +3 00000 0 00153    01325 TXH +3 00000 0 00154    01326 SUB +0 40200 0 00177   
 01327 TNZ -0 10000 0 01337                                                                                             
                   PRMESS.(NAME1,B,NAME2,$ NOT RENAMED$)                            141  LM00169
 01330 TSX +0 07400 4 00017    01331 TXH +3 00000 0 00060    01332 TXH +3 00000 0 00134    01333 TXH +3 00000 0 00061   
 01334 TXH +3 00000 0 00312    01335 TXH +3 00000 0 00235                                                               
                 O'E                                                                142  LM00170
 01336 TRA +0 02000 0 01350                                                                                             
      CHANGE       CHFILE.(NAME1,NAME2,-0,N3,N4,IOERR)                              143  LM00171
 01337 CLS +0 50200 0 00177    01340 STO +0 60100 0 01600    01341 TSX +0 07400 4 00000    01342 TXH +3 00000 0 00060   
 01343 TXH +3 00000 0 00061    01344 TXH +3 00000 0 01600    01345 TXH +3 00000 0 00153    01346 TXH +3 00000 0 00154   
 01347 TXH +3 00000 0 00116                                                                                             
                 E'L                                                                144  LM00172
                 T'O NEXT                                                           145  LM00173
 01350 TRA +0 02000 0 00122                                                                                             
      FUN(4)     W'R ENTRY(6).A.7K5.NE.0, T'O NEXT                                  146  LM00177
 01351 CAL -0 50000 0 00064    01352 ANA -0 32000 0 00214    01353 SLW +0 60200 0 01600    01354 CLA +0 50000 0 01600   
 01355 SUB +0 40200 0 00177    01356 TZE +0 10000 0 01360    01357 TRA +0 02000 0 00122                                 
      FUNC(4)    UNLINK.(NAME1,NAME2,IOERR)                                         147  LM00178
 01360 TSX +0 07400 4 00025    01361 TXH +3 00000 0 00060    01362 TXH +3 00000 0 00061    01363 TXH +3 00000 0 00116   
                 T'O NEXT                                                           148  LM00179
 01364 TRA +0 02000 0 00122                                                                                             
      FUNC(5)    C'E                                                                149  LM00183
      FUN(5)     W'R WHO(1).A.2K .E. 2K, T'O MVOK                                   150  LM00184
 01365 CAL -0 50000 0 00175    01366 ANA -0 32000 0 00201    01367 SLW +0 60200 0 01600    01370 CLA +0 50000 0 01600   
 01371 SUB +0 40200 0 00201    01372 TNZ -0 10000 0 01374    01373 TRA +0 02000 0 00121                                 
                 W'R NAME3 .NE. WHO(8), T'O MVBAD                                   151  LM00185
 01374 CLA +0 50000 0 00057    01375 SUB +0 40200 0 00166    01376 TZE +0 10000 0 01400    01377 TRA +0 02000 0 00120   
                 W'R NAME4 .E. WHO(3), T'O MVOK                                     152  LM00186
 01400 CLA +0 50000 0 00155    01401 SUB +0 40200 0 00173    01402 TNZ -0 10000 0 01404    01403 TRA +0 02000 0 00121   
                 W'R WHO(1).A.1K .NE. 1K, T'O MVBAD                                 153  LM00187
 01404 CAL -0 50000 0 00175    01405 ANA -0 32000 0 00200    01406 SLW +0 60200 0 01600    01407 CLA +0 50000 0 01600   
 01410 SUB +0 40200 0 00200    01411 TZE +0 10000 0 01413    01412 TRA +0 02000 0 00120                                 
                 W'R NAME4.A.777777770000K .NE. $CMFL00$, T'O MVBAD                 154  LM00188
 01413 CAL -0 50000 0 00155    01414 ANA -0 32000 0 00343    01415 SLW +0 60200 0 01600    01416 CLA +0 50000 0 01600   
 01417 SUB +0 40200 0 00231    01420 TZE +0 10000 0 01422    01421 TRA +0 02000 0 00120                                 
      MVOK       MOVFIL.(NAME1, NAME2, NAME3, NAME4, IOERR)                         155  LM00189
 01422 TSX +0 07400 4 00012    01423 TXH +3 00000 0 00060    01424 TXH +3 00000 0 00061    01425 TXH +3 00000 0 00057   
 01426 TXH +3 00000 0 00155    01427 TXH +3 00000 0 00116                                                               
                 T'O NEXT                                                           156  LM00190
 01430 TRA +0 02000 0 00122                                                                                             
      MVBAD      PRMESS.($ ILLEGAL USE OF COMMAND$)                                 157  LM00192
 01431 TSX +0 07400 4 00017    01432 TXH +3 00000 0 00272    01433 TXH +3 00000 0 00224    01434 TXH +3 00000 0 00313   
 01435 TXH +3 00000 0 00251                                                                                             
                 T'O LOOP                                                           158  LM00193
 01436 TRA +0 02000 0 00117                                                                                             
      NEXT       W'R .NOT. SCANI, T'O LOOP                                          159  LM00197
 01437 ZET +0 52000 0 00162    01440 TRA +0 02000 0 01442    01441 TRA +0 02000 0 00117                                 
                 SCAN.(ENTRY(10)...7,LOOP)                                          160  LM00198
 01442 TSX +0 07400 4 00022    01443 TIX +2 00206 0 00060    01444 TXH +3 00000 0 00117                                 
                 W'R ENTRY(6).A.7K5.E.0 .AND. C.NE.4,T'O NEXT                       161  LM00199
 01445 CLA +0 50000 0 00136    01446 SUB +0 40200 0 00203    01447 TZE +0 10000 0 01457    01450 CAL -0 50000 0 00064   
 01451 ANA -0 32000 0 00214    01452 SLW +0 60200 0 01600    01453 CLA +0 50000 0 01600    01454 SUB +0 40200 0 00177   
 01455 TNZ -0 10000 0 01457    01456 TRA +0 02000 0 00122                                                               
                 T'O FUN(C)                                                         162  LM00200
 01457 LXA +0 53400 2 00136    01460 TRA +0 02000 2 00114                                                               
      FSERR2     W'R C.E.4 .AND. ERCODE.NE.3, T'O FUNC(C)                           163  LM00204
 01461 CLA +0 50000 0 00141    01462 SUB +0 40200 0 00202    01463 TZE +0 10000 0 01471    01464 CLA +0 50000 0 00136   
 01465 SUB +0 40200 0 00203    01466 TNZ -0 10000 0 01471    01467 LXA +0 53400 2 00136    01470 TRA +0 02000 2 00106   
      IOERR      PRNTER.(61K)                                                       164  LM00205
 01471 TSX +0 07400 4 00020    01472 TXH +3 00000 0 00212                                                               
                 T'O NEXT                                                           165  LM00206
 01473 TRA +0 02000 0 00122                                                                                             
      LOOP       CONTINUE                                                           166  LM00208
 01474 TRA +0 02000 0 00460                                                                                             
                 CHNCOM.(0)                                                         167  LM00209
 01475 TSX +0 07400 4 00001    01476 TXH +3 00000 0 00177                                                               
      PFORMT(1)  PRMESS.(COMBUF(0),$ NAME1 NAME2 MODE NAME1' NAME2' MODE' ...$      168  LM00213
                1)                                                                  168  LM00214
 01477 TSX +0 07400 4 00017    01500 TXH +3 00000 0 00056    01501 TXH +3 00000 0 00304    01502 TXH +3 00000 0 00305   
 01503 TXH +3 00000 0 00303    01504 TXH +3 00000 0 00252    01505 TXH +3 00000 0 00305    01506 TXH +3 00000 0 00221   
 01507 TXH +3 00000 0 00220                                                                                             
                 T'O PFMT                                                           169  LM00215
 01510 TRA +0 02000 0 00124                                                                                             
      PFORMT(2)  PRMESS.(COMBUF(0),$ NAME1 NAME2 NAME1' NAME2' ...$)                170  LM00217
 01511 TSX +0 07400 4 00017    01512 TXH +3 00000 0 00056    01513 TXH +3 00000 0 00304    01514 TXH +3 00000 0 00305   
 01515 TXH +3 00000 0 00304    01516 TXH +3 00000 0 00222    01517 TXH +3 00000 0 00216                                 
                 T'O PFMT                                                           171  LM00218
 01520 TRA +0 02000 0 00124                                                                                             
      PFORMT(3)  PRMESS.(COMBUF(0),$ OLDNM1 OLDNM2 NEWNM1 NEWNM2 OLDNM1' OLDNM      172  LM00220
                12' NEWNM1' NEWNM2' ...$)                                           172  LM00221
 01521 TSX +0 07400 4 00017    01522 TXH +3 00000 0 00056    01523 TXH +3 00000 0 00314    01524 TXH +3 00000 0 00215   
 01525 TXH +3 00000 0 00250    01526 TXH +3 00000 0 00255    01527 TXH +3 00000 0 00335    01530 TXH +3 00000 0 00244   
 01531 TXH +3 00000 0 00314    01532 TXH +3 00000 0 00217    01533 TXH +3 00000 0 00254    01534 TXH +3 00000 0 00241   
 01535 TXH +3 00000 0 00301                                                                                             
                 T'O PFMT                                                           173  LM00222
 01536 TRA +0 02000 0 00124                                                                                             
      PFORMT(4)  T'O PFORMT(2)                                                      174  LM00224
 01537 TRA +0 02000 0 00130                                                                                             
      PFORMT(5)  PRMESS.(COMBUF(0), $ NAME1 NAME2 PROB PROG NAME1' NAME2' PROB      175  LM00226
                1' PROG' ...$)                                                      175  LM00227
 01540 TSX +0 07400 4 00017    01541 TXH +3 00000 0 00056    01542 TXH +3 00000 0 00304    01543 TXH +3 00000 0 00305   
 01544 TXH +3 00000 0 00316    01545 TXH +3 00000 0 00263    01546 TXH +3 00000 0 00225    01547 TXH +3 00000 0 00253   
 01550 TXH +3 00000 0 00315    01551 TXH +3 00000 0 00317    01552 TXH +3 00000 0 00301                                 
      PFMT       PRMESS.($THE LISTF ASTERISK CONVENTION APPLIES.$)                  176  LM00229
 01553 TSX +0 07400 4 00017    01554 TXH +3 00000 0 00330    01555 TXH +3 00000 0 00325    01556 TXH +3 00000 0 00327   
 01557 TXH +3 00000 0 00267    01560 TXH +3 00000 0 00257    01561 TXH +3 00000 0 00226    01562 TXH +3 00000 0 00324   
                 CHNCOM.(0)                                                         177  LM00230
 01563 TSX +0 07400 4 00001    01564 TXH +3 00000 0 00177                                                               
      ICOMPT     PRMESS.($ IS AN INCOMPLETE SET OF ARGUMENTS.$)                     178  LM00234
 01565 TSX +0 07400 4 00017    01566 TXH +3 00000 0 00275    01567 TXH +3 00000 0 00273    01570 TXH +3 00000 0 00262   
 01571 TXH +3 00000 0 00322    01572 TXH +3 00000 0 00266    01573 TXH +3 00000 0 00236                                 
                 CHNCOM.(0)                                                         179  LM00235
 01574 TSX +0 07400 4 00001    01575 TXH +3 00000 0 00177                                                               
                 E'M                                                                180  LM00236
 01576 TSX +0 07400 4 00004                                                                                             
1      NEWMOD  -  03/25/68   D.A. ANDERSON  COMPUTE NEW MODE FOR FILE            07/06/71 1755.1 PAGE 1     
                  
                       00002         ENTRY   NEWMOD   
                  
                  
        LINKAGE DIRECTOR
      00000  000000000000     
      00001  452566444624     
                  
      00002  0634 00 1 00027  NEWMOD SXA     XR1,1    
      00003  0634 00 2 00026         SXA     XR2,2    
      00004  0634 00 4 00025         SXA     XR4,4    
      00005 -0500 60 4 00001         CAL*    1,4
      00006  0602 00 0 00101         SLW     OLDMOD   
      00007  0560 60 4 00002         LDQ*    2,4
      00010  0774 00 1 00006         AXT     6,1
      00011  0600 00 0 00124         STZ     MODE1    
      00012  0600 00 0 00125         STZ     MODE2    
      00013  0074 00 4 00031  CYCLE  TSX     GENMOD,4 
      00014  0 00000 0 00124                 MODE1    
      00015 -3 00024 2 00021         TXL     NOREM,2,REMOVE 
      00016  0074 00 4 00031         TSX     GENMOD,4 
      00017  0 00000 0 00125                 MODE2    
      00020  3 00024 2 00013         TXH     CYCLE,2,REMOVE 
      00021 -0500 00 0 00125  NOREM  CAL     MODE2    
      00022  0760 00 0 00006         COM  
      00023 -0320 00 0 00124         ANA     MODE1    
      00024 -0320 00 0 00131         ANA     =O377    
      00025  0774 00 4 00000  XR4    AXT     **,4     
      00026  0774 00 2 00000  XR2    AXT     **,2     
      00027  0774 00 1 00000  XR1    AXT     **,1     
      00030  0020 00 4 00004         TRA     4,4
                  
      00031  0600 00 0 00127  GENMOD STZ     OCTBUF   
      00032  0600 00 0 00126         STZ     HAVSUM   
      00033  0774 00 2 00000         AXT     0,2
      00034 -0754 00 0 00000  LOOP   ZAC  
      00035 -0763 00 0 00006         LGL     6  
      00036 -0340 00 0 00130         LAS     =7 
      00037  0020 00 0 00046         TRA     NOTOCT   
      00040  0761 00 0 00000         NOP  
      00041 -0765 00 0 00003         LGR     3  
      00042 -0500 00 0 00127         CAL     OCTBUF   
      00043 -0763 00 0 00003         LGL     3  
      00044  0602 00 0 00127         SLW     OCTBUF   
      00045  0020 00 0 00065         TRA     SETHAV   
      00046  0774 00 2 00026  NOTOCT AXT     NMOD,2   
      00047 -0340 00 2 00124         LAS     MODS+NMOD,2    
      00050  0020 00 0 00052         TRA     *+2
      00051  0020 00 0 00057         TRA     GOTMOD   
      00052  2 00002 2 00047         TIX     *-3,2,2  
      00053  0534 00 1 00027  BAD    LXA     XR1,1    
      00054  0534 00 2 00026         LXA     XR2,2    
      00055  0534 00 4 00025         LXA     XR4,4    
      00056  0020 60 4 00003         TRA*    3,4
1      NEWMOD  -  03/25/68   D.A. ANDERSON  COMPUTE NEW MODE FOR FILE            07/06/71 1755.1 PAGE 2     
                  
      00057  3 00024 2 00074  GOTMOD TXH     OUT,2,REMOVE   
      00060  0500 00 2 00125         CLA     MODS+NMOD+1,2  
      00061 -0501 00 0 00127         ORA     OCTBUF   
      00062  0600 00 0 00127         STZ     OCTBUF   
      00063 -0602 60 4 00001         ORS*    1,4
      00064 -0120 00 0 00066         TMI     NDLOP    
      00065 -0625 00 0 00126  SETHAV STL     HAVSUM   
      00066  2 00001 1 00034  NDLOP  TIX     LOOP,1,1 
      00067 -0500 00 0 00127  EXIT   CAL     OCTBUF   
      00070 -0520 00 0 00126         NZT     HAVSUM   
      00071 -0501 00 0 00101         ORA     OLDMOD   
      00072 -0602 60 4 00001         ORS*    1,4
      00073  0020 00 4 00002         TRA     2,4
                  
      00074 -2 00001 1 00053  OUT    TNX     BAD,1,1  
      00075  0020 00 0 00067         TRA     EXIT     
                  
      00076  000000000061     MODS   BCI     1,00000/ 
      00077  0 00000 0 00000         PZE  
      00100  000000000054     .RMV.  BCI     1,00000* 
      00101  0 00000 0 00000  OLDMOD PZE  
      00102  000000000044            BCI     1,00000M 
      00103 +000000000200            OCT     200
      00104  000000000047            BCI     1,00000P 
      00105 +000000000100            OCT     100
      00106  000000000043            BCI     1,00000L 
      00107 +000000000040            OCT     40 
      00110  000000000065            BCI     1,00000V 
      00111 +000000000020            OCT     20 
      00112  000000000066            BCI     1,00000W 
      00113 +000000000010            OCT     10 
      00114  000000000051            BCI     1,00000R 
      00115 +000000000004            OCT     4  
      00116  000000000062            BCI     1,00000S 
      00117 +000000000002            OCT     2  
      00120  000000000063            BCI     1,00000T 
      00121 +000000000001            OCT     1  
      00122  000000000060            BCI     1,00000  
      00123 -000000000000            OCT     -0 
                       00024  REMOVE EQU     *-.RMV.  
                       00026  NMOD   EQU     *-MODS   
                  
      00124  0 00000 0 00000  MODE1 
      00125  0 00000 0 00000  MODE2 
      00126  0 00000 0 00000  HAVSUM
      00127  0 00000 0 00000  OCTBUF
                  
                                     END  
                  
        LITERALS  
      00130  000000000007     
      00131  000000000377     
1      NEWMOD  -  03/25/68   D.A. ANDERSON  COMPUTE NEW MODE FOR FILE            07/06/71 1755.1 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        132 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         53    BAD    74
         74    OUT    57
         27    XR1     2,   53
         26    XR2     3,   54
         25    XR4     4,   55
         67   EXIT    75
         34   LOOP    66
         76   MODS    47,   60,  124
         26   NMOD    46,   47,   60,  124
         13  CYCLE    20
        100  .RMV.   124
        124  MODE1    11,   14,   23
        125  MODE2    12,   17,   21
         66  NDLOP    64
         21  NOREM    15
         31 GENMOD    13,   16
         57 GOTMOD    51
        126 HAVSUM    32,   65,   70
          2 NEWMOD     0
         46 NOTOCT    37
        127 OCTBUF    31,   42,   44,   61,   62,   67
        101 OLDMOD     6,   71
         24 REMOVE    15,   20,   57,  124
         65 SETHAV    45
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




UPDATE   BCD 09/18/68 2320.9   11110         00000    
1            COPY/UPDATE - COMMON FILE TRANSMISSION COMMANDS.                                    PAGE 1     
                  
                                             7/28/66 - NOEL I. MORRIS   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                  
        TRANSFER VECTOR 
      00000  712543606060     ZEL   
      00001  644531506425     UNIQUE
      00002  234647706060     COPY  
      00003  242543256325     DELETE
      00004  475145632551     PRNTER
                  
                       00660  RCOUNT EQU     432
1            COPY/UPDATE - COMMON FILE TRANSMISSION COMMANDS.                                    PAGE 2     
                           PICK UP PARAMETERS AND ASSIGN BUFFERS.                   
                  
      00005                          CALL    SETBRK(CHN)   SET A BREAK LEVEL  
      00005  0074 00 4 00347         TSX     SETBRK,4                                                         .002
      00006  3 00000 0 00216         PAR     CHN                                                              .004
                  
      00007                          CALL    FERRTN        SET FILE SYSTEM ERROR RETURN   
      00007  0074 00 4 00350         TSX     FERRTN,4                                                         .002
      00010  0 00000 0 00237         PZE     ERR           ..     
                  
      00011                          CALL    GETCLS((CBUF,,0))  PICK UP PARAMETERS  
      00011  0074 00 4 00351         TSX     GETCLS,4                                                         .002
      00012  3 00000 0 00307         PAR     CBUF,,0                                                          .004
                  
      00013 -0500 00 0 00307         CAL     CBUF          CHECK NAME OF COMMAND    
      00014 -0340 00 0 00430         LAS     =H  COPY      ..     
      00015  0020 00 0 00017         TRA     *+2           ..     
      00016  0020 00 0 00024         TRA     NAMOK         THIS IS COPY COMMAND     
      00017 -0340 00 0 00433         LAS     =HUPDATE      ..     
      00020  0020 00 0 00222         TRA     BADNAM        COMMAND NAME UNKNOWN     
      00021  0020 00 0 00023         TRA     *+2           ..     
      00022  0020 00 0 00222         TRA     BADNAM        ..     
      00023 -0625 00 0 00344         STL     UPDSW.        SET UPDATE INDIC.  
                       00024  NAMOK  SYN     *  
                  
      00024  0774 00 4 00002         AXT     2,4           CHECK FOR EARLY FENCE    
      00025 -0500 00 4 00312         CAL     CBUF+3,4      ..     
      00026  0322 00 0 00346         ERA     FENCE         ..     
      00027  0100 00 0 00225         TZE     NOPAR         INCOMPLETE SET OF PARAMETERS   
      00030  2 00001 4 00025         TIX     *-3,4,1       ..     
                  
      00031                          CALL    $ZEL(CBUF+1)  CONVERT COMMON FILE NO.  
      00031  0074 00 4 00000         TSX     $ZEL,4                                                           .002
      00032  3 00000 0 00310         PAR     CBUF+1                                                           .004
      00033 -0340 00 0 00405         LAS     =H00000S      CHECK FOR 'S'
      00034  0020 00 0 00036         TRA     *+2           ..     
      00035 -0500 00 0 00404         CAL     =H00000P      CHANGE 'S' TO 'P'  
      00036  0602 00 0 00340         SLW     CFN           ..     
                              CF0    =L      GETCF         PICK UP HOME COMMON FILE NO.   
      00037  0074 00 4 00352         TSX     GETCF,4                                                          .003
      00040  0602 00 0 00337         SLW     CF0                                                              .002
                  
                  
      00041                          CALL    GETMEM        GET MEMBND   
      00041  0074 00 4 00353         TSX     GETMEM,4                                                         .002
      00042  0621 00 0 00160         STA     MOV+5         ..     
      00043  0361 00 0 00345         ACL     BUFLEN        ..     
      00044  0621 00 0 00161         STA     MOV+6         ..     
      00045  0361 00 0 00345         ACL     BUFLEN        ..     
      00046  0621 00 0 00162         STA     MOV+7         ..     
      00047  0361 00 0 00345         ACL     BUFLEN        ..     
      00050                          EXTEND  (BFR+3)       EXTEND MEMBND
      00050  0621 00 0 00152         STA     BFR+3                                                            .003
      00051  0361 00 0 00407         ACL     =432                                                             .002
      00052  0074 00 4 00354         TSX     SETMEM,4                                                         .003
1            COPY/UPDATE - COMMON FILE TRANSMISSION COMMANDS.                                    PAGE 3     
                           COPY OR UPDATE THE FILE.                                 
                  
      00053 -0774 00 1 00002         AXC     2,1           PARAMETER PICK UP INDEX  
      00054 -0500 00 1 00307  LOOP   CAL     CBUF,1        FIRST NAME OF FILE 
      00055  0602 00 0 00272         SLW     N1            ..     
      00056  0322 00 0 00346         ERA     FENCE         CHECK FOR NONE     
      00057  0100 00 0 00216         TZE     FIN           ALL FINISHED IF FENCE    
      00060 -0500 00 1 00310         CAL     CBUF+1,1      SECOND NAME OF FILE
      00061  0602 00 0 00274         SLW     N2            ..     
      00062  0322 00 0 00346         ERA     FENCE         CHECK FOR UNPAIRED FILE NAME   
      00063  0100 00 0 00232         TZE     UNPAIR        ..     
                  
      00064                          CALL    $UNIQUE(T1,T2) PICK UP UNIQUE TEMPORARY FILE NAME  
      00064  0074 00 4 00001         TSX     $UNIQUE,4                                                        .002
      00065  3 00000 0 00335         PAR     T1                                                               .004
      00066  3 00000 0 00336         PAR     T2                                                               .004
                  
      00067 -0500 00 0 00272         CAL     N1            CHECK FOR OUTPUT RQUEST FILE   
      00070  0322 00 0 00425         ERA     =HOUTPUT      ..     
      00071 -0100 00 0 00116         TNZ     NO.RQ         ..     
      00072 -0500 00 0 00274         CAL     N2            ..     
      00073  0322 00 0 00426         ERA     =HRQUEST      ..     
      00074 -0100 00 0 00116         TNZ     NO.RQ         ..     
                  
      00075  0520 00 0 00344         ZET     UPDSW.        CHECK FOR UPDATE   
      00076                          CALL    CMFL(CFN)     SWITCH COMFILS     
      00076  0074 00 4 00220         TSX     CMFL,4                                                           .002
      00077  3 00000 0 00340         PAR     CFN                                                              .004
                  
      00100                          CALL    FSTATE(N1,N2(*,,0)*+2) CHECK FOR FILE  
      00100  0074 00 4 00355         TSX     FSTATE,4                                                         .002
      00101  3 00000 0 00272         PAR     N1                                                               .004
      00102  3 00000 0 00274         PAR     N2                                                               .004
      00103  3 00000 0 00103         PAR     *,,0                                                             .004
      00104  3 00000 0 00106         PAR     *+2                                                              .004
                  
      00105                          CALL    CHFILE(N1,N2,=-0,T1,T2) RENAME TO TEMPORARY FILE   
      00105  0074 00 4 00356         TSX     CHFILE,4                                                         .002
      00106  3 00000 0 00272         PAR     N1                                                               .004
      00107  3 00000 0 00274         PAR     N2                                                               .004
      00110  3 00000 0 00423         PAR     =-0                                                              .004
      00111  3 00000 0 00335         PAR     T1                                                               .004
      00112  3 00000 0 00336         PAR     T2                                                               .004
                  
      00113  0520 00 0 00344         ZET     UPDSW.        CHECK FOR UPDATE AGAIN   
      00114                          CALL    CMFL(CF0)     AND SWITCH BACK IF NECESSARY   
      00114  0074 00 4 00220         TSX     CMFL,4                                                           .002
      00115  3 00000 0 00337         PAR     CF0                                                              .004
                  
                       00116  NO.RQ  SYN     *  
      00116 -0520 00 0 00344         NZT     UPDSW.        CHECK FOR COPY     
      00117                          CALL    CMFL(CFN)     SWITCH TO COMMON FILE FOR COPY 
      00117  0074 00 4 00220         TSX     CMFL,4                                                           .002
      00120  3 00000 0 00340         PAR     CFN                                                              .004
1            COPY/UPDATE - COMMON FILE TRANSMISSION COMMANDS.                                    PAGE 4     
                           COPY OR UPDATE THE FILE.                                 
                  
      00121                          CALL    FSTATE(N1,N2(STAT,,2))  CHECK MODE OF ORIGINAL FILE
      00121  0074 00 4 00355         TSX     FSTATE,4                                                         .002
      00122  3 00000 0 00272         PAR     N1                                                               .004
      00123  3 00000 0 00274         PAR     N2                                                               .004
      00124  3 00002 0 00333         PAR     STAT,,2                                                          .004
                  
      00125                          CALL    OPEN(=HR,N1,N2)  OPEN THE FILE   
      00125  0074 00 4 00357         TSX     OPEN,4                                                           .002
      00126  3 00000 0 00427         PAR     =HR                                                              .004
      00127  3 00000 0 00272         PAR     N1                                                               .004
      00130  3 00000 0 00274         PAR     N2                                                               .004
                  
      00131  0520 00 0 00344         ZET     UPDSW.        CHECK FOR COPY OR UPDATE 
      00132                          CALL    CMFL(CFN)     UPDATE - SWITCH TO COMFIL
      00132  0074 00 4 00220         TSX     CMFL,4                                                           .002
      00133  3 00000 0 00340         PAR     CFN                                                              .004
      00134 -0520 00 0 00344         NZT     UPDSW.        ..     
      00135                          CALL    CMFL(CF0)     COPY - SWITCH HOME 
      00135  0074 00 4 00220         TSX     CMFL,4                                                           .002
      00136  3 00000 0 00337         PAR     CF0                                                              .004
                  
      00137                   OPN    CALL    OPEN(=HW,T1,T2,OP.MOD,=-0,OPERR,ERCODE)  OPEN TEMP.
      00137  0074 00 4 00357         TSX     OPEN,4                                                           .002
      00140  3 00000 0 00436         PAR     =HW                                                              .004
      00141  3 00000 0 00335         PAR     T1                                                               .004
      00142  3 00000 0 00336         PAR     T2                                                               .004
      00143  3 00000 0 00343         PAR     OP.MOD                                                           .004
      00144  3 00000 0 00423         PAR     =-0                                                              .004
      00145  3 00000 0 00246         PAR     OPERR                                                            .004
      00146  3 00000 0 00341         PAR     ERCODE                                                           .004
                  
      00147                   BFR    CALL    BUFFER(T1,T2(**,,RCOUNT))  ASSIGN FILE SYSTEM BUFFER     
      00147  0074 00 4 00360         TSX     BUFFER,4                                                         .002
      00150  3 00000 0 00335         PAR     T1                                                               .004
      00151  3 00000 0 00336         PAR     T2                                                               .004
      00152  3 00660 0 00000         PAR     **,,RCOUNT                                                       .004
                  
      00153                   MOV    CALL    $COPY(N1,N2,T1,T2,**,**,**,BUFLEN,ERR)  COPY THE FILE    
      00153  0074 00 4 00002         TSX     $COPY,4                                                          .002
      00154  3 00000 0 00272         PAR     N1                                                               .004
      00155  3 00000 0 00274         PAR     N2                                                               .004
      00156  3 00000 0 00335         PAR     T1                                                               .004
      00157  3 00000 0 00336         PAR     T2                                                               .004
      00160  3 00000 0 00000         PAR     **                                                               .004
      00161  3 00000 0 00000         PAR     **                                                               .004
      00162  3 00000 0 00000         PAR     **                                                               .004
      00163  3 00000 0 00345         PAR     BUFLEN                                                           .004
      00164  3 00000 0 00237         PAR     ERR                                                              .004
                  
      00165                          CALL    CLOSE(=HALL,=-0)  CLOSE ALL FILES
      00165  0074 00 4 00361         TSX     CLOSE,4                                                          .002
      00166  3 00000 0 00410         PAR     =HALL                                                            .004
      00167  3 00000 0 00423         PAR     =-0                                                              .004
1            COPY/UPDATE - COMMON FILE TRANSMISSION COMMANDS.                                    PAGE 5     
                           COPY OR UPDATE THE FILE.                                 
                  
                              MODE   =       $DELETE(N1,N2,*,NOXMT)  DELETE OLD FILE, IF ANY    
      00170  0074 00 4 00003         TSX     $DELETE,4                                                        .003
      00171  3 00000 0 00272         PAR     N1                                                               .005
      00172  3 00000 0 00274         PAR     N2                                                               .005
      00173  3 00000 0 00173         PAR     *                                                                .005
      00174  3 00000 0 00241         PAR     NOXMT                                                            .005
      00175  0601 00 0 00342         STO     MODE                                                             .002
                  
      00176 -0520 00 0 00344         NZT     UPDSW.        IF UPDATE    
      00177  0020 00 0 00202         TRA     *+3           ..     
      00200 -0500 00 0 00334         CAL     STAT+1        USE MODE OF TRANSMITTED FILE   
      00201  0602 00 0 00342         SLW     MODE          OTHERWISE, MODE OF OLD FILE    
                  
      00202                   CHF    CALL    CHFILE(T1,T2,MODE,N1,N2,CHERR,ERCODE)  TRY TO RENAME     
      00202  0074 00 4 00356         TSX     CHFILE,4                                                         .002
      00203  3 00000 0 00335         PAR     T1                                                               .004
      00204  3 00000 0 00336         PAR     T2                                                               .004
      00205  3 00000 0 00342         PAR     MODE                                                             .004
      00206  3 00000 0 00272         PAR     N1                                                               .004
      00207  3 00000 0 00274         PAR     N2                                                               .004
      00210  3 00000 0 00254         PAR     CHERR                                                            .004
      00211  3 00000 0 00341         PAR     ERCODE                                                           .004
                  
      00212  0520 00 0 00344         ZET     UPDSW.        IF UPDATE,   
      00213                          CALL    CMFL(CF0)     SWITCH HOME  
      00213  0074 00 4 00220         TSX     CMFL,4                                                           .002
      00214  3 00000 0 00337         PAR     CF0                                                              .004
                  
      00215  1 77776 1 00054         TXI     LOOP,1,-2     SEE IF MORE FILES TO TRANSMIT  
                  
                  
                       00216  FIN    SYN     *  
      00216                   CHN    CALL    CHNCOM(0)
      00216  0074 00 4 00362         TSX     CHNCOM,4                                                         .002
      00217  3 00000 0 00000         PAR     0                                                                .004
                  
                  
      00220 -0500 60 4 00001  CMFL   CAL*    1,4           PICK UP COMMON FILE NUMBER     
      00221  0101 00 0 00415         TIA     =HCOMFIL      AND GO TO A-CORE   
1            COPY/UPDATE - COMMON FILE TRANSMISSION COMMANDS.                                    PAGE 6     
                           ERROR SECTION.                                           
                  
      00222                   BADNAM COMENT  C1,4( ILLEGAL COMMAND NAME.)     
      00222  0074 00 4 00363         TSX     WRFLX,4                                                          .003
      00223  3 00004 0 00364         PAR     C1,,4                                                            .005
      00224  0021 00 0 00216         XIT     CHN           ..     
                  
      00225 -0500 00 0 00307  NOPAR  CAL     CBUF          INSERT NAME OF COMMAND   
      00226  0602 00 0 00302         SLW     USAGE+2       INTO USAGE MESSAGE 
                  
      00227                          COMENT  USAGE,7  
      00227  0074 00 4 00363         TSX     WRFLX,4                                                          .003
      00230  3 00007 0 00300         PAR     USAGE,,7                                                         .005
      00231  0021 00 0 00216         XIT     CHN           ..     
                  
      00232 -0500 00 1 00307  UNPAIR CAL     CBUF,1        GET UNPAIRED PARAMETER   
      00233  0602 00 0 00370         SLW     C3            FOR ERROR MESSAGE  
                  
      00234                          COMENT  C3,3(XXXXXX IGNORED.)
      00234  0074 00 4 00363         TSX     WRFLX,4                                                          .003
      00235  3 00003 0 00370         PAR     C3,,3                                                            .005
      00236  0021 00 0 00216         XIT     CHN           ..     
                  
      00237                   ERR    CALL    $PRNTER(=O71)  PRINT FILE SYSTEM ERROR MESSAGE     
      00237  0074 00 4 00004         TSX     $PRNTER,4                                                        .002
      00240  3 00000 0 00406         PAR     =O71                                                             .004
                  
      00241                   NOXMT  CALL    WRFLX((N1,,6))  TELL USER FILE NOT TRANSMITTED     
      00241  0074 00 4 00363         TSX     WRFLX,4                                                          .002
      00242  3 00006 0 00272         PAR     N1,,6                                                            .004
                  
      00243                          CALL    CMFL(CF0)     SWITCH HOME  
      00243  0074 00 4 00220         TSX     CMFL,4                                                           .002
      00244  3 00000 0 00337         PAR     CF0                                                              .004
      00245  1 77776 1 00054         TXI     LOOP,1,-2     BACK FOR MORE
                  
      00246  0500 00 0 00341  OPERR  CLA     ERCODE        CHECK FOR RECORD QUOTA OVERFLOW
      00247  0402 00 0 00402         SUB     =15           ..     
      00250 -0100 00 0 00237         TNZ     ERR           ANY OTHER ERROR IS FATAL 
                  
      00251 -0500 00 0 00400         CAL     =O001         TEMPORARY MUST BE IN TEMPORARY MODE  
      00252  0602 00 0 00343         SLW     OP.MOD        ..     
      00253  0020 00 0 00137         TRA     OPN           TRY AGAIN NOW
                  
      00254  0500 00 0 00341  CHERR  CLA     ERCODE        PICK UP CHFILE ERROR CODE
      00255  0402 00 0 00401         SUB     =9            CHECK FOR RECORD QUOTA OVERFLOW
      00256 -0100 00 0 00237         TNZ     ERR           ANY OTHER ERROR IS NOT EXPECTED
                  
      00257                          CALL    $PRNTER(=O41) PRINT ERROR MESSAGE
      00257  0074 00 4 00004         TSX     $PRNTER,4                                                        .002
      00260  3 00000 0 00403         PAR     =O41                                                             .004
                  
      00261 -0500 00 0 00400         CAL     =O001         NEW FILE WILL HAVE TO BE TEMPORARY   
      00262  0602 00 0 00342         SLW     MODE     
1            COPY/UPDATE - COMMON FILE TRANSMISSION COMMANDS.                                    PAGE 7     
                           ERROR SECTION.                                           
                  
      00263                          CALL    WRFLXA((YNF,,5))  TELL USER NEW FILE IS TEMPORARY  
      00263  0074 00 4 00373         TSX     WRFLXA,4                                                         .002
      00264  3 00005 0 00270         PAR     YNF,,5                                                           .004
      00265                          COMENT  C4,4( IS IN TEMPORARY MODE.)     
      00265  0074 00 4 00363         TSX     WRFLX,4                                                          .003
      00266  3 00004 0 00374         PAR     C4,,4                                                            .005
      00267  0020 00 0 00202         TRA     CHF           TRY AGAIN TO CHFILE
1            COPY/UPDATE - COMMON FILE TRANSMISSION COMMANDS.                                    PAGE 8     
                           STORAGE AND CONSTANTS.                                   
                  
      00270  606070466451     YNF    BCI     2,  YOUR NEW   
      00271  604525666060     
      00272  0 00000 0 00000  N1     PZE  
      00273  575757575760            VFD     O36/575757575760     
      00274  0 00000 0 00000  N2     PZE  
      00275  604546636063            BCI     3, NOT TRANSMITTED.  
      00276  512145624431     
      00277  636325243360     
      00300  606064622127     USAGE  BCI     7,  USAGE IS 'XXXXXX N NAME1 NAME2 ... ...'  
      00301  256031626014     
      00302  676767676767     
      00303  604560452144     
      00304  250160452144     
      00305  250260333333     
      00306  603333331460     
                  
      00307                   CBUF   BSS     20 
      00333                   STAT   BSS     2  
                  
      00335                   T1     BSS     1  
      00336                   T2     BSS     1  
                  
      00337                   CF0    BSS     1  
      00340                   CFN    BSS     1  
                  
      00341                   ERCODE BSS     1  
      00342                   MODE   BSS     1  
                  
      00343  000000000000     OP.MOD VFD     O36/000  
      00344  0 00000 0 00000  UPDSW. PZE     0  
      00345  0 00000 0 03300  BUFLEN PZE     RCOUNT*4 
                  
      00346  777777777777     FENCE  VFD     O36//    
                  
      00347                          RMT     *             REMOTE SEQUENCES   
      00347  0101 00 0 00431  SETBRK TIA     =HSETBRK                                                         .002
      00350  0101 00 0 00416  FERRTN TIA     =HFERRTN                                                         .002
      00351  0101 00 0 00421  GETCLS TIA     =HGETCLS                                                         .002
      00352  0101 00 0 00420  GETCF  TIA     =HGETCF                                                          .002
      00353  0101 00 0 00422  GETMEM TIA     =HGETMEM                                                         .002
      00354  0101 00 0 00432  SETMEM TIA     =HSETMEM                                                         .002
      00355  0101 00 0 00417  FSTATE TIA     =HFSTATE                                                         .002
      00356  0101 00 0 00412  CHFILE TIA     =HCHFILE                                                         .002
      00357  0101 00 0 00424  OPEN   TIA     =HOPEN                                                           .002
      00360  0101 00 0 00411  BUFFER TIA     =HBUFFER                                                         .002
      00361  0101 00 0 00414  CLOSE  TIA     =HCLOSE                                                          .002
      00362  0101 00 0 00413  CHNCOM TIA     =HCHNCOM                                                         .002
      00363  0101 00 0 00435  WRFLX  TIA     =HWRFLX                                                          .002
      00364  603143432527     C1     BCI     4, ILLEGAL COMMAND NAME.                                         .002
      00365  214360234644     
      00366  442145246045     
      00367  214425336060     
      00370  676767676767     C3     BCI     3,XXXXXX IGNORED.                                                .002
      00371  603127454651     
      00372  252433606060     
1            COPY/UPDATE - COMMON FILE TRANSMISSION COMMANDS.                                    PAGE 9     
                           STORAGE AND CONSTANTS.                                   
                  
      00373  0101 00 0 00434  WRFLXA TIA     =HWRFLXA                                                         .002
      00374  603162603145     C4     BCI     4, IS IN TEMPORARY MODE.                                         .002
      00375  606325444746     
      00376  512151706044     
      00377  462425336060     
                  
                                     END  
                  
        LITERALS  
      00400  000000000001     
      00401  000000000011     
      00402  000000000017     
      00403  000000000041     
      00404  000000000047     
      00405  000000000062     
      00406  000000000071     
      00407  000000000660     
      00410  214343606060     
      00411  226426262551     
      00412  233026314325     
      00413  233045234644     
      00414  234346622560     
      00415  234644263143     
      00416  262551516345     
      00417  266263216325     
      00420  272563232660     
      00421  272563234362     
      00422  272563442544     
      00423  400000000000     
      00424  464725456060     
      00425  466463476463     
      00426  515064256263     
      00427  516060606060     
      00430  606023464770     
      00431  622563225142     
      00432  622563442544     
      00433  644724216325     
      00434  665126436721     
      00435  665126436760     
      00436  666060606060     
1            COPY/UPDATE - COMMON FILE TRANSMISSION COMMANDS.                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        437 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        364     C1   223
        370     C3   233,  235
        374     C4   266
        272     N1    55,   67,  101,  106,  122,  127,  154,  171,  206,  242
        274     N2    61,   72,  102,  107,  123,  130,  155,  172,  207
        335     T1    65,  111,  141,  150,  156,  203
        336     T2    66,  112,  142,  151,  157,  204
        147    BFR    50
        337    CF0    40,  115,  136,  214,  244
        340    CFN    36,   77,  120,  133
        202    CHF   267
        216    CHN     6,  224,  231,  236
        237    ERR    10,  164,  250,  256
        216    FIN    57,  216
        153    MOV    42,   44,   46
        137    OPN   253
        270    YNF   264
          0    ZEL    31
        307   CBUF    12,   13,   25,   32,   54,   60,  225,  232
        220   CMFL    76,  114,  117,  132,  135,  213,  243
          2   COPY   153
         54   LOOP   215,  245
        342   MODE   175,  201,  205,  262
        357   OPEN   125,  137
        333   STAT   124,  200
        254  CHERR   210
        361  CLOSE   165
        346  FENCE    26,   56,   62
        352  GETCF    37
         24  NAMOK    16,   24
        116  NO.RQ    71,   74,  116
        225  NOPAR    27
        241  NOXMT   174
        246  OPERR   145
        300  USAGE   226,  230
        363  WRFLX   222,  227,  234,  241,  265
        222 BADNAM    20,   22
        360 BUFFER   147
        345 BUFLEN    43,   45,   47,  163
        356 CHFILE   105,  202
        362 CHNCOM   216
          3 DELETE   170
        341 ERCODE   146,  211,  246,  254
        350 FERRTN     7
        355 FSTATE   100,  121
        351 GETCLS    11
        353 GETMEM    41
        343 OP.MOD   143,  252
          4 PRNTER   237,  257
        660 RCOUNT     5,  152,  345
        347 SETBRK     5
1            COPY/UPDATE - COMMON FILE TRANSMISSION COMMANDS.                                    PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        354 SETMEM    52
          1 UNIQUE    64
        232 UNPAIR    63
        344 UPDSW.    23,   75,  113,  116,  131,  134,  176,  212
        373 WRFLXA   263
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            COPY - COPY ONE FILE INTO ANOTHER.                                                  PAGE 1     
                  
                                             1/18/66 - NOEL I. MORRIS   
                  
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                              *     
                              *      CALLING SEQUENCE -     
                              *     
                              *      COPY. (IN1, IN2, OUT1, OUT2, BUFF1, BUFF2, BUFF3, NWDSPR, ERRET) 
                              *     
                              *      IN1    = PRIMARY NAME OF INPUT FILE.     
                              *      IN2    = SECONDARY NAME OF INPUT FILE.   
                              *      OUT1   = PRIMARY NAME OF OUTPUT FILE.    
                              *      OUT2   = SECONDARY NAME OF OUTPUT FILE.  
                              *      BUFF1, BUFF2, AND BUFF3 ARE DISK BUFFERS.
                              *      NWDSPR = LENGTH OF THE DISK BUFFERS.     
                              *      ERRET  = FILE SYSTEM ERROR RETURN. 
                              *     
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                  
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00000         ENTRY   COPY     
                  
      00000  0634 00 1 00107  COPY   SXA     X1,1          SAVE XRS     
      00001  0634 00 2 00110         SXA     X2,2          ..     
      00002  0634 00 4 00111         SXA     X4,4          ..     
                  
      00003 -0500 60 4 00001         CAL*    1,4           GET IN1
      00004  0602 00 0 00170         SLW     IN1           ..     
      00005 -0500 60 4 00002         CAL*    2,4           GET IN2
      00006  0602 00 0 00171         SLW     IN2           ..     
      00007 -0500 60 4 00003         CAL*    3,4           GET OUT1     
      00010  0602 00 0 00172         SLW     OUT1          ..     
      00011 -0500 60 4 00004         CAL*    4,4           GET OUT2     
      00012  0602 00 0 00173         SLW     OUT2          ..     
      00013 -0500 00 4 00005         CAL     5,4           GET BUFFER ADDRESSES     
      00014  0621 00 0 00151         STA     BUFF1         ..     
      00015 -0500 00 4 00006         CAL     6,4           ..     
      00016  0621 00 0 00152         STA     BUFF2         ..     
      00017 -0500 00 4 00007         CAL     7,4           ..     
      00020  0621 00 0 00153         STA     BUFF3         ..     
      00021 -0500 60 4 00010         CAL*    8,4           GET RECORD COUNT   
      00022  0602 00 0 00154         SLW     EOFCT         ..     
      00023  0602 00 0 00155         SLW     EOFCT+1       ..     
      00024  0602 00 0 00156         SLW     EOFCT+2       ..     
                  
      00025                          CALL    FERRTN        SET UP FILE SYSTEM ERROR RETURN
      00025  0074 00 4 00174         TSX     FERRTN,4                                                         .002
      00026  0 00000 0 00141         PZE     ERR           ..     
      00027  0621 00 0 00106         STA     RETERR        SAVE OLD ERROR RETURN    
1            COPY - COPY ONE FILE INTO ANOTHER.                                                  PAGE 2     
                  
      00030  0600 00 0 00166         STZ     TEOF          RESET EOF INDIC.   
      00031 -0625 00 0 00165         STL     FIRST         SET FIRST TIME INDIC.    
                  
      00032                          CALL    FSTATE(IN1,IN2(STAT,,5)) PICK UP INPUT FILE STATUS 
      00032  0074 00 4 00175         TSX     FSTATE,4                                                         .002
      00033  3 00000 0 00170         PAR     IN1                                                              .004
      00034  3 00000 0 00171         PAR     IN2                                                              .004
      00035  3 00005 0 00157         PAR     STAT,,5                                                          .004
                  
      00036 -0774 00 1 00000         AXC     0,1           INITIALIZE INPUT BUFFER INDEX  
      00037 -0774 00 2 00000         AXC     0,2           INITIALIZE OUTPUT BUFFER INDEX 
                  
                       00040  LOOP   SYN     *  
                  
      00040  0520 00 0 00166         ZET     TEOF          CHECK FOR PREVIOUS EOF   
      00041  0020 00 0 00065         TRA     CONTIN        SKIP READ IF SO    
                  
      00042 -0500 00 1 00151         CAL     BUFLOC,1      SET BUFFER FOR READ
      00043  0602 00 0 00050         SLW     RD+4          ..     
                  
      00044                   RD     CALL    RDFILE(IN1,IN2,=0(**,...,**)EOF,COUNT) READ  
      00044  0074 00 4 00176         TSX     RDFILE,4                                                         .002
      00045  3 00000 0 00170         PAR     IN1                                                              .004
      00046  3 00000 0 00171         PAR     IN2                                                              .004
      00047  3 00000 0 00201         PAR     =0                                                               .004
      00050  2 00000 0 00000         BLK     **,,**                                                           .004
      00051  3 00000 0 00113         PAR     EOF                                                              .004
      00052  3 00000 0 00164         PAR     COUNT                                                            .004
                  
      00053  0500 00 0 00163         CLA     R.PTR         STEP THE READ POINTER    
      00054  0400 00 0 00154         ADD     EOFCT         BY BUFFER LENGTH   
      00055  0602 00 0 00163         SLW     R.PTR         ..     
                  
      00056  1 77777 1 00057         TXI     *+1,1,-1      STEP READ BUFFER INDEX   
      00057  3 77775 1 00061         TXH     *+2,1,-3      ..     
      00060 -0774 00 1 00000         AXC     0,1           ..     
                  
      00061 -0520 00 0 00165         NZT     FIRST         IF NOT FIRST TIME, 
      00062  0020 00 0 00065         TRA     CONTIN        KEEP GOING   
      00063  0600 00 0 00165         STZ     FIRST         OTHERWISE,   
      00064  0020 00 0 00040         TRA     LOOP          GO READ ANOTHER RECORD   
                  
                  
      00065 -0500 00 2 00151  CONTIN CAL     BUFLOC,2      SET BUFFER FOR WRITE     
      00066  0602 00 0 00073         SLW     WR+4          ..     
                  
      00067                   WR     CALL    WRFILE(OUT1,OUT2,=0(**,...,**)) WRITE  
      00067  0074 00 4 00177         TSX     WRFILE,4                                                         .002
      00070  3 00000 0 00172         PAR     OUT1                                                             .004
      00071  3 00000 0 00173         PAR     OUT2                                                             .004
      00072  3 00000 0 00201         PAR     =0                                                               .004
      00073  2 00000 0 00000         BLK     **,,**                                                           .004
                  
      00074 -0520 00 0 00166         NZT     TEOF          IF EOF,
      00075  0020 00 0 00101         TRA     WINCR         ..     
      00076  0756 00 2 00000         PCA     ,2            CHECK FOR HAVING WRITTEN LAST RECORD 
1            COPY - COPY ONE FILE INTO ANOTHER.                                                  PAGE 3     
                  
      00077  0402 00 0 00167         SUB     EOFX          ..     
      00100  0100 00 0 00105         TZE     FINISH        ..     
                  
      00101  1 77777 2 00102  WINCR  TXI     *+1,2,-1      STEP WRITE BUFFER INDEX  
      00102  3 77775 2 00104         TXH     *+2,2,-3      ..     
      00103 -0774 00 2 00000         AXC     0,2           ..     
      00104  0020 00 0 00040         TRA     LOOP          CONTINUE COPYING   
                  
                  
                       00105  FINISH SYN     *  
      00105                          CALL    FERRTN        RESTORE OLD ERROR RETURN 
      00105  0074 00 4 00174         TSX     FERRTN,4                                                         .002
      00106  0 00000 0 00000  RETERR PZE     **            ..     
                  
      00107  0774 00 1 00000  X1     AXT     **,1          RESTORE XRS  
      00110  0774 00 2 00000  X2     AXT     **,2          ..     
      00111  0774 00 4 00000  X4     AXT     **,4          ..     
      00112  0020 00 4 00012         TRA     10,4          RETURN 
                  
      00113 -0625 00 0 00166  EOF    STL     TEOF          SET EOF INDIC.     
                  
      00114                          CALL    FSTATE(IN1,IN2(STAT,,1)) FIND LENGTH NOW     
      00114  0074 00 4 00175         TSX     FSTATE,4                                                         .002
      00115  3 00000 0 00170         PAR     IN1                                                              .004
      00116  3 00000 0 00171         PAR     IN2                                                              .004
      00117  3 00001 0 00157         PAR     STAT,,1                                                          .004
                  
      00120  0500 00 0 00157         CLA     STAT          LENGTH + 1 - POINTER     
      00121  0400 00 0 00202         ADD     =1            ..     
      00122  0402 00 0 00163         SUB     R.PTR         ..     
      00123  0402 00 0 00164         SUB     COUNT         SHOULD EQUAL EOF COUNT   
      00124  0100 00 0 00132         TZE     EOF.OK        IF SO, NOTHING TO CORRECT
                  
      00125  0400 00 0 00154         ADD     EOFCT         LENGTH + 1 - POINTER + BUFFER LENGTH 
      00126  0601 00 0 00164         STO     COUNT         IS THE CORRECT EOF COUNT 
                  
      00127  3 00000 1 00131         TXH     *+2,1,0       DECREASE THE READ BUFFER INDEX 
      00130 -0774 00 1 00003         AXC     3,1           ..     
      00131  1 00001 1 00132         TXI     *+1,1,1       TO CORRECT FOR MISSED EOF
                  
      00132 -0500 00 0 00164  EOF.OK CAL     COUNT         SET EOF COUNT
      00133  0602 00 1 00154         SLW     EOFCT,1       ..     
      00134  0636 00 1 00167         SCA     EOFX,1        SAVE READ BUFFER INDEX   
                  
      00135                          CALL    FWAIT(IN1,IN2) WAIT FOR I/O
      00135  0074 00 4 00200         TSX     FWAIT,4                                                          .002
      00136  3 00000 0 00170         PAR     IN1                                                              .004
      00137  3 00000 0 00171         PAR     IN2                                                              .004
      00140  0020 00 0 00065         TRA     CONTIN        NOW, FINISH UP     
                  
      00141 -0500 00 0 00106  ERR    CAL     RETERR        RESTORE OLD ERROR RETURN 
      00142  0621 00 0 00144         STA     *+2           ..     
      00143                          CALL    FERRTN        ..     
      00143  0074 00 4 00174         TSX     FERRTN,4                                                         .002
      00144  0 00000 0 00000         PZE     **            ..     
1            COPY - COPY ONE FILE INTO ANOTHER.                                                  PAGE 4     
                  
      00145  0522 00 0 00107         XEC     X1            RESTORE XRS  
      00146  0522 00 0 00110         XEC     X2            ..     
      00147  0522 00 0 00111         XEC     X4            ..     
      00150  0020 60 4 00011         TRA*    9,4           AND TAKE ERROR RETURN    
                  
                  
                       00151  BUFLOC SYN     *  
      00151  2 00154 0 00000  BUFF1  PTW     **,,EOFCT
      00152  2 00155 0 00000  BUFF2  PTW     **,,EOFCT+1    
      00153  2 00156 0 00000  BUFF3  PTW     **,,EOFCT+2    
                  
      00154                   EOFCT  BSS     3  
                  
      00157                   STAT   BSS     5  
                       00163  R.PTR  SYN     STAT+4   
                  
      00164  0 00000 0 00000  COUNT  PZE  
      00165  0 00000 0 00000  FIRST  PZE  
      00166  0 00000 0 00000  TEOF   PZE  
      00167  0 00000 0 00000  EOFX   PZE  
                  
      00170  0 00000 0 00000  IN1    PZE  
      00171  0 00000 0 00000  IN2    PZE  
      00172  0 00000 0 00000  OUT1   PZE  
      00173  0 00000 0 00000  OUT2   PZE  
                  
      00174                          RMT     *             REMOTE SEQUENCES.  
      00174  0101 00 0 00203  FERRTN TIA     =HFERRTN                                                         .002
      00175  0101 00 0 00204  FSTATE TIA     =HFSTATE                                                         .002
      00176  0101 00 0 00206  RDFILE TIA     =HRDFILE                                                         .002
      00177  0101 00 0 00207  WRFILE TIA     =HWRFILE                                                         .002
      00200  0101 00 0 00205  FWAIT  TIA     =HFWAIT                                                          .002
                  
                                     END  
                  
        LITERALS  
      00201  000000000000     
      00202  000000000001     
      00203  262551516345     
      00204  266263216325     
      00205  266621316360     
      00206  512426314325     
      00207  665126314325     
1            COPY - COPY ONE FILE INTO ANOTHER.                                                  PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        210 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         44     RD    43
         67     WR    66
        107     X1     0,  145
        110     X2     1,  146
        111     X4     2,  147
        113    EOF    51
        141    ERR    26
        170    IN1     4,   33,   45,  115,  136
        171    IN2     6,   34,   46,  116,  137
          0   COPY     0
        167   EOFX    77,  134
         40   LOOP    40,   64,  104
        172   OUT1    10,   70
        173   OUT2    12,   71
        157   STAT    35,  117,  120,  164
        166   TEOF    30,   40,   74,  113
        151  BUFF1    14
        152  BUFF2    16
        153  BUFF3    20
        164  COUNT    52,  123,  126,  132
        154  EOFCT    22,   23,   24,   54,  125,  133,  151,  152,  153
        165  FIRST    31,   61,   63
        200  FWAIT   135
        163  R.PTR    53,   55,  122,  164
        101  WINCR    75
        151 BUFLOC    42,   65,  151
         65 CONTIN    41,   62,  140
        132 EOF.OK   124
        174 FERRTN    25,  105,  143
        105 FINISH   100,  105
        175 FSTATE    32,  114
        176 RDFILE    44
        106 RETERR    27,  141
        177 WRFILE    67
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1                                                                                                PAGE 1     
                           UNIQUE NAME GENERATOR                                    
                  
                  
  BINARY CARD NO. UNIQUE00    
                       00003         ENTRY   UNIQUE   
                                     EXTERN  GETIME   
                  
                                             THIS PROGRAM GENERATES A UNIQUE PAIR OF NAMES
                  
                                             TSX           $UNIQUE,4    
                                             PTH           NAME1  
                                             PTH           NAME2  
                  
                                             THIS PROGRAM IS USED TO GENERATE UNIQUE
                                             NAMES FOR INTERMEDIATE FILES     
                  
                                                           D.R. WIDRIG  DEC. 1965   
                  
                  
        TRANSFER VECTOR 
                  
  BINARY CARD NO. UNIQUE01    
      00000  272563314425     GETIME
                  
            LINKAGE DIRECTOR  
      00001  000000000000     
      00002  644531506425     
                  
      00003  0634 00 4 00007  UNIQUE SXA     X4,4          SAVE LINKAGE 
      00004  0634 00 1 00026         SXA     X1,1          COUNTER
      00005  0074 00 4 00000         TSX     GETIME,4      GET DATE AND TIME  
      00006 -0130 00 0 00000         XCL                   SWITCH AC AND MQ   
      00007  0774 00 4 00000  X4     AXT     **,4          RESTORE LINKAGE    
      00010 -0320 00 0 00030         ANA     =O777777770000 MASK OUT YY PORTION OF DATE   
      00011  0602 60 4 00001         SLW*    1,4           TEMPORARY SAVE     
      00012 -0754 00 0 00000         ZAC                   CLEAR AC     
      00013 -0773 00 0 00014         RQL     12            THROW OUT HIGH-ORDER ZEROES    
      00014 -0763 00 0 00003         LGL     3             CONVERT TO OCTAL   
      00015  0767 00 0 00003         ALS     3             ..     
      00016 -0763 00 0 00003         LGL     3             ..     
      00017 -0602 60 4 00001         ORS*    1,4           'OR' WITH MMDD     
      00020  0774 00 1 00006         AXT     6,1           SET LOOP COUNT     
      00021 -0754 00 0 00000         ZAC                   CLEAR AC     
      00022  0767 00 0 00003         ALS     3             CONVERT TO OCTAL   
      00023 -0763 00 0 00003         LGL     3             ..     
                  
  BINARY CARD NO. UNIQUE02    
      00024  2 00001 1 00022         TIX     *-2,1,1       LOOP   
      00025  0602 60 4 00002         SLW*    2,4           SAVE NAME2   
      00026  0774 00 1 00000  X1     AXT     **,1          RESTORE XR1  
      00027  0020 00 4 00003         TRA     3,4           RETURN 
                                     END  
                  
        LITERALS  
      00030  777777770000     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         31 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         26     X1     4
          7     X4     3
          0 GETIME     5
          3 UNIQUE     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            DELETE ALL VERSIONS OF AN OLD FILE.                                                 PAGE 1     
                  
                                             NOEL I. MORRIS - 6/22/65   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00001         ENTRY   DELETE   
                  
                  
      00000  462351222360     OCRBC 
                  
      00001  0634 00 4 00035  DELETE SXA     XR4,4         SAVE XRS     
      00002  0604 00 0 00125         STI     SVSI          SAVE SI
      00003  0600 00 0 00122         STZ     MODE          SET MODE TO 'P'    
                  
      00004 -0500 60 4 00001         CAL*    1,4           GET FILE NAME
      00005  0602 00 0 00107         SLW     FNAM          ..     
      00006 -0500 60 4 00002         CAL*    2,4           ..     
      00007  0602 00 0 00111         SLW     FNAM+2        ..     
                  
      00010 -0500 60 4 00003         CAL*    3,4           GET DELETION PRINT SWITCH
      00011  0602 00 0 00124         SLW     PSW           ..     
                  
      00012                          CALL    FSTATE(FNAM,FNAM+2(BUFF,,2)FSERR,ERCODE)     
      00012  0074 00 4 00126         TSX     FSTATE,4                                                         .002
      00013  3 00000 0 00107         PAR     FNAM                                                             .004
      00014  3 00000 0 00111         PAR     FNAM+2                                                           .004
      00015  3 00002 0 00121         PAR     BUFF,,2                                                          .004
      00016  3 00000 0 00070         PAR     FSERR                                                            .004
      00017  3 00000 0 00123         PAR     ERCODE                                                           .004
                  
      00020  0441 00 0 00122         LDI     MODE          GET MODE BITS
      00021 -0054 00  400000         LFT     400000        CHECK FOR LINKED FILE    
      00022  0020 00 0 00073         TRA     LINKD         IS LINKED, WILL NOT DELETE     
                  
      00023  0054 00  000134         RFT     134           CHECK FOR READ-ONLY/PROTECTED, ETC.  
      00024  0020 00 0 00040         TRA     ASK           PROTECTED, ASK FOR DELETE
                  
      00025                   DEL    CALL    DELFIL(FNAM,FNAM+2,NODEL)  
      00025  0074 00 4 00127         TSX     DELFIL,4                                                         .002
      00026  3 00000 0 00107         PAR     FNAM                                                             .004
      00027  3 00000 0 00111         PAR     FNAM+2                                                           .004
      00030  3 00000 0 00075         PAR     NODEL                                                            .004
                  
      00031  0520 00 0 00124         ZET     PSW           CHECK FOR DELETION PRINT 
      00032                          CALL    WRFLX((DTOF,,6)) PRINT DELETION COMMENT
      00032  0074 00 4 00130         TSX     WRFLX,4                                                          .002
      00033  3 00006 0 00104         PAR     DTOF,,6                                                          .004
                  
      00034 -0500 00 0 00122  GONE   CAL     MODE          GET THE MODE 
      00035  0774 00 4 00000  XR4    AXT     **,4          RESTORE XRS  
      00036  0441 00 0 00125         LDI     SVSI          AND THE SI   
      00037  0020 00 4 00005         TRA     5,4           RETURN 
1            DELETE ALL VERSIONS OF AN OLD FILE.                                                 PAGE 2     
                  
      00040                   ASK    CALL    $OCRBC(MODE)  CONVERT TO BCD     
      00040  0074 00 4 00000         TSX     $OCRBC,4                                                         .002
      00041  3 00000 0 00122         PAR     MODE                                                             .004
      00042 -0501 00 0 00151         ORA     =O605757000000 MASK PROPERLY     
      00043  0602 00 0 00112         SLW     BCMODE        AND STORE IN COMMENT     
                  
      00044                          CALL    WRFLXA((FNAM-1,,11)) 
      00044  0074 00 4 00131         TSX     WRFLXA,4                                                         .002
      00045  3 00013 0 00106         PAR     FNAM-1,,11                                                       .004
                  
      00046                          CALL    RDFLXA((BUFF,,1))    
      00046  0074 00 4 00132         TSX     RDFLXA,4                                                         .002
      00047  3 00001 0 00121         PAR     BUFF,,1                                                          .004
                  
      00050 -0500 00 0 00121         CAL     BUFF          LOOK AT ANSWER     
      00051  0771 00 0 00022         ARS     18            ..     
      00052  0322 00 0 00143         ERA     =H000YES      CHECK FOR SPECIFIC 'YES' 
      00053 -0100 00 0 00075         TNZ     NODEL         NON-ZERO IF 'NO' OR GARBAGE    
                  
      00054                          CALL    CHFILE(FNAM,FNAM+2,=1,=-0,=-0,NODEL)   
      00054  0074 00 4 00133         TSX     CHFILE,4                                                         .002
      00055  3 00000 0 00107         PAR     FNAM                                                             .004
      00056  3 00000 0 00111         PAR     FNAM+2                                                           .004
      00057  3 00000 0 00141         PAR     =1                                                               .004
      00060  3 00000 0 00147         PAR     =-0                                                              .004
      00061  3 00000 0 00147         PAR     =-0                                                              .004
      00062  3 00000 0 00075         PAR     NODEL                                                            .004
                  
      00063                          CALL    DELFIL(FNAM,FNAM+2,NODEL) DELETE IT NOW
      00063  0074 00 4 00127         TSX     DELFIL,4                                                         .002
      00064  3 00000 0 00107         PAR     FNAM                                                             .004
      00065  3 00000 0 00111         PAR     FNAM+2                                                           .004
      00066  3 00000 0 00075         PAR     NODEL                                                            .004
      00067  0020 00 0 00034         TRA     GONE          ..     
                  
      00070 -0500 00 0 00123  FSERR  CAL     ERCODE        GET FSTATE ERROR CODE    
      00071  0402 00 0 00142         SUB     =3            ANYTHING ELSE THAN 3     
      00072  0100 00 0 00034         TZE     GONE          IS A LINK ERROR    
                  
      00073                   LINKD  COMENT  LNKMSG,3,(FILE IS A LINK.),A     
      00073  0074 00 4 00131         TSX     WRFLXA,4                                                         .003
      00074  3 00003 0 00134         PAR     LNKMSG,,3                                                        .005
                                                           DO NOT DELETE A LINK     
                  
      00075                   NODEL  CALL    WRFLXA((FNAM,,3))    
      00075  0074 00 4 00131         TSX     WRFLXA,4                                                         .002
      00076  3 00003 0 00107         PAR     FNAM,,3                                                          .004
      00077                          COMENT  NOT,2,( NOT DELETED) 
      00077  0074 00 4 00130         TSX     WRFLX,4                                                          .003
      00100  3 00002 0 00137         PAR     NOT,,2                                                           .005
                  
      00101  0522 00 0 00035         XEC     XR4           RESTORE XRS  
      00102  0441 00 0 00125         LDI     SVSI          AND SI 
      00103  0020 60 4 00004         TRA*    4,4           ERROR RETURN 
1            DELETE ALL VERSIONS OF AN OLD FILE.                                                 PAGE 3     
                  
      00104  242543256325     DTOF   BCI     3,DELETED THE OLDER  
      00107  000000000000     FNAM   VFD     36/0,O36/576057575757,36/0 
      00112  606060606060     BCMODE BCI     6,       MODE. DO YOU WANT TO DELETE I 
      00120  637360605757            VFD     H6/T,O30/7360605757  
      00121  0 00000 0 00000  BUFF   PZE  
      00122  0 00000 0 00000  MODE   PZE  
      00123  0 00000 0 00000  ERCODE PZE  
      00124  0 00000 0 00000  PSW    PZE  
      00125  0 00000 0 00000  SVSI   PZE  
                  
      00126                          RMT     *             REMOTE SEQUENCES   
      00126  0101 00 0 00146  FSTATE TIA     =HFSTATE                                                         .002
      00127  0101 00 0 00145  DELFIL TIA     =HDELFIL                                                         .002
      00130  0101 00 0 00153  WRFLX  TIA     =HWRFLX                                                          .002
      00131  0101 00 0 00152  WRFLXA TIA     =HWRFLXA                                                         .002
      00132  0101 00 0 00150  RDFLXA TIA     =HRDFLXA                                                         .002
      00133  0101 00 0 00144  CHFILE TIA     =HCHFILE                                                         .002
      00134  263143256031     LNKMSG BCI     3,FILE IS A LINK.                                                .002
      00137  604546636024     NOT    BCI     2, NOT DELETED                                                   .002
                  
                                     END  
                  
        LITERALS  
      00141  000000000001     
      00142  000000000003     
      00143  000000702562     
      00144  233026314325     
      00145  242543263143     
      00146  266263216325     
      00147  400000000000     
      00150  512426436721     
      00151  605757000000     
      00152  665126436721     
      00153  665126436760     
1            DELETE ALL VERSIONS OF AN OLD FILE.                                                 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        154 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         40    ASK    24
         25    DEL      
        137    NOT   100
        124    PSW    11,   31
         35    XR4     1,  101
        121   BUFF    15,   47,   50
        104   DTOF    33
        107   FNAM     5,    7,   13,   14,   26,   27,   45,   55,   56,   64,   65,   76
         34   GONE    67,   72
        122   MODE     3,   20,   34,   41
        125   SVSI     2,   36,  102
         70  FSERR    16
         73  LINKD    22
         75  NODEL    30,   53,   62,   66
          0  OCRBC    40
        130  WRFLX    32,   77
        112 BCMODE    43
        133 CHFILE    54
          1 DELETE     0
        127 DELFIL    25,   63
        123 ERCODE    17,   70
        126 FSTATE    12
        134 LNKMSG    74
        132 RDFLXA    46
        131 WRFLXA    44,   73,   75
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




UPDBSS   BCD 09/18/68 2338.9   14901         00000    
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 1     
                           FILE NAME -- UPDBS FAP                                   
                  
                  
                                             9/25/65 - NOEL I. MORRIS   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                  
        TRANSFER VECTOR 
      00000  434164626360     LJUST 
      00001  222646472545     BFOPEN
      00002  246242255160     DSKER 
      00003  242543256325     DELETE
      00004  512422626260     RDBSS 
      00005  626522626260     SVBSS 
      00006  516222626260     RSBSS 
      00007  665122626260     WRBSS 
      00010  516225632260     RSETB 
      00011  222623434662     BFCLOS
                  
                       00010  NFILS  EQU     8  
                      000025  USELOC BOOL    25 
                                             INITIALIZE ARRAYS.   
                  
      00012                   START  CALL    SETBRK(BREAK) SET A BREAK LEVEL  
      00012  0074 00 4 00522         TSX     SETBRK,4                                                         .002
      00013  3 00000 0 00437         PAR     BREAK                                                            .004
                  
      00014 -0500 00 0 00455         CAL     USETRA        SET UP LOWER CORE FOR 'USE' COMMAND  
      00015  0602 00 0 00025         SLW     USELOC        ..     
                  
      00016                          CALL    GETCLS((CARD,,0)) GET COMMAND BUFFER   
      00016  0074 00 4 00523         TSX     GETCLS,4                                                         .002
      00017  3 00000 0 77426         PAR     CARD,,0                                                          .004
                  
      00020 -0774 00 1 00001         AXC     1,1           GETCOM INDEX 
      00021 -0500 00 1 77426  SQI    CAL     CARD,1        GET FIRST PARAMETER
                  
      00022 -0340 00 0 00023         LAS     FENCE         CHECK FOR NONE     
      00023  777777777777     FENCE  VFD     36/-1    
      00024  0020 00 0 00441         TRA     PERR          NO PARAMETERS GIVEN
                  
      00025  0602 00 0 77425         SLW     INFILE        NAME OF INPUT FILE 
      00026  0322 00 0 00041         ERA     (SQZ)         IS IT SQZBSS 
      00027 -0100 00 0 00035         TNZ     NO.SQI        IF YES,
                  
      00030 -0625 00 0 77424         STL     INFILE-1      SET SQZ INDIC.     
      00031 -0625 00 0 77422         STL     OUTFIL-1      ..     
                  
      00032  0560 00 0 00061         LDQ     SQZ           SECONDARY NAME     
      00033 -0620 00 0 00470         SLQ     N2            IS SQZBSS    
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 2     
                           FILE NAME -- UPDBS FAP                                   
                  
      00034  1 77777 1 00021         TXI     SQI,1,-1      AND GO GET THE NEXT PARAMETER  
                  
      00035  1 77777 1 00036  NO.SQI TXI     *+1,1,-1      NEXT PARAMETER     
                  
      00036 -0774 00 2 00000         AXC     0,2           OUTPUT FILE LIST INDEX   
                  
      00037 -0500 00 1 77426  PARLP  CAL     CARD,1        GET PARAMETER
      00040 -0340 00 0 00023         LAS     FENCE         CHECK FOR NONE     
      00041  607462507134     (SQZ)  BCI     1, (SQZ) 
      00042  0020 00 0 00077         TRA     SOUT          FINISHED     
                  
      00043  0602 00 0 00452         SLW     TEM           SAVE FOR RJUSTING  
      00044  0602 00 2 00472         SLW     LIST+1,2      BOTH FILE NAME AND ENTRY NAME  
                  
      00045                          CALL    $LJUST(TEM)   ENTRIES ARE LEFT JUSTIFIED     
      00045  0074 00 4 00000         TSX     $LJUST,4                                                         .002
      00046  3 00000 0 00452         PAR     TEM                                                              .004
      00047  0601 00 2 00473         STO     LIST+2,2      ..     
                  
      00050 -0500 00 0 00452         CAL     TEM           NOW CHECK FOR SQZBSS     
      00051  0322 00 0 00041         ERA     (SQZ)         ..     
      00052 -0100 00 0 00056         TNZ     NO.SQO        IF SO, 
                  
      00053  0560 00 0 00061         LDQ     SQZ           SET SECONDARY NAME TO    
      00054 -0620 00 2 00474         SLQ     LIST+3,2      SQZBSS 
                  
      00055  1 77777 1 00037         TXI     PARLP,1,-1    NEXT PARAMETER     
                  
      00056  1 77777 1 00057  NO.SQO TXI     *+1,1,-1      NEXT PARAMETER     
                  
      00057 -0500 00 1 77426         CAL     CARD,1        ..     
      00060 -0340 00 0 00023         LAS     FENCE         CHECK FOR NONE     
      00061  625071606060     SQZ    BCI     1,SQZ    
      00062  1 77775 2 00077         TXI     SOUT,2,-3     FINISHED     
      00063  0602 00 0 00452         SLW     TEM           SAVE ENTRY NAME    
                  
      00064  0322 00 0 00610         ERA     =H     =      IS IT EQUAL SIGN   
      00065  0100 00 0 00071         TZE     NEX           YES, ENTRY = SECONDARY NAME    
                  
      00066                          CALL    $LJUST(TEM)   ..     
      00066  0074 00 4 00000         TSX     $LJUST,4                                                         .002
      00067  3 00000 0 00452         PAR     TEM                                                              .004
      00070  0601 00 2 00473         STO     LIST+2,2      ..     
                  
      00071  1 77777 1 00072  NEX    TXI     *+1,1,-1      NEXT PARAMETER     
      00072  1 77775 2 00073         TXI     *+1,2,-3      AND NEXT OUTPUT FILE     
      00073  3 00030 2 00037         TXH     PARLP,2,3*NFILS   CHECK FOR FULL LIST  
                  
      00074                          COMENT  TOO,5,(TOO MANY FILES REQUESTED.)
      00074  0074 00 4 00524         TSX     WRFLX,4                                                          .003
      00075  3 00005 0 00525         PAR     TOO,,5                                                           .005
      00076  0021 00 0 00427         XIT     CHN           EXIT TO CHNCOM     
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 3     
                           FILE NAME -- UPDBS FAP                                   
                  
      00077 -3 00000 2 00444  SOUT   TXL     NONE,2,0      CHECK FOR NO FILES 
      00100  0636 00 2 00471         SCA     LIST,2        STORE FILE COUNT   
      00101  0634 00 2 00215         SXA     SRCH,2        ..     
      00102  0634 00 2 00345         SXA     NSRCH,2       ..     
                  
      00103 -0500 00 0 00617         CAL     =H(FILE)      SET TEMPORARY FILE 
      00104  0602 00 0 77423         SLW     OUTFIL        TO (FILE)    
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 4     
                           OPEN AND RAD LIBRARY FILE.                               
                  
      00105                          CALL    GETMEM        ASSIGN DISK BUFFERS
      00105  0074 00 4 00532         TSX     GETMEM,4                                                         .002
                  
      00106                          EXTEND  (OPNR+4,OPNR+5,OPNW+4,OPNW+5,OPNW+6,UPOP+4,UPOP+5) 
      00106  0621 00 0 00131         STA     OPNR+4                                                           .003
      00107  0361 00 0 00570         ACL     =432                                                             .002
      00110  0621 00 0 00132         STA     OPNR+5                                                           .003
      00111  0361 00 0 00570         ACL     =432                                                             .002
      00112  0621 00 0 00146         STA     OPNW+4                                                           .003
      00113  0361 00 0 00570         ACL     =432                                                             .002
      00114  0621 00 0 00147         STA     OPNW+5                                                           .003
      00115  0361 00 0 00570         ACL     =432                                                             .002
      00116  0621 00 0 00150         STA     OPNW+6                                                           .003
      00117  0361 00 0 00570         ACL     =432                                                             .002
      00120  0621 00 0 00265         STA     UPOP+4                                                           .003
      00121  0361 00 0 00570         ACL     =432                                                             .002
      00122  0621 00 0 00266         STA     UPOP+5                                                           .003
      00123  0361 00 0 00570         ACL     =432                                                             .002
      00124  0074 00 4 00533         TSX     SETMEM,4                                                         .003
                  
      00125                   OPNR   CALL    $BFOPEN(=HR,INFILE,N2,**,**,=-0,$DSKER)
      00125  0074 00 4 00001         TSX     $BFOPEN,4                                                        .002
      00126  3 00000 0 00606         PAR     =HR                                                              .004
      00127  3 00000 0 77425         PAR     INFILE                                                           .004
      00130  3 00000 0 00470         PAR     N2                                                               .004
      00131  3 00000 0 00000         PAR     **                                                               .004
      00132  3 00000 0 00000         PAR     **                                                               .004
      00133  3 00000 0 00603         PAR     =-0                                                              .004
      00134  3 00000 0 00002         PAR     $DSKER                                                           .004
                                                           OPEN LIBRARY FILE FOR READING  
                  
      00135                          CALL    $DELETE(OUTFIL,N2,=0,*+1) DELETE ANY OLD TEMPORARY 
      00135  0074 00 4 00003         TSX     $DELETE,4                                                        .002
      00136  3 00000 0 77423         PAR     OUTFIL                                                           .004
      00137  3 00000 0 00470         PAR     N2                                                               .004
      00140  3 00000 0 00567         PAR     =0                                                               .004
      00141  3 00000 0 00142         PAR     *+1                                                              .004
                  
      00142                   OPNW   CALL    $BFOPEN(=HW,OUTFIL,N2,**,**,**,$DSKER) 
      00142  0074 00 4 00001         TSX     $BFOPEN,4                                                        .002
      00143  3 00000 0 00616         PAR     =HW                                                              .004
      00144  3 00000 0 77423         PAR     OUTFIL                                                           .004
      00145  3 00000 0 00470         PAR     N2                                                               .004
      00146  3 00000 0 00000         PAR     **                                                               .004
      00147  3 00000 0 00000         PAR     **                                                               .004
      00150  3 00000 0 00000         PAR     **                                                               .004
      00151  3 00000 0 00002         PAR     $DSKER                                                           .004
                                                           OPEN TEMPORARY FOR WRITING     
                  
      00152                   NEXCD  CALL    $RDBSS(EOF)   READ A CARD  
      00152  0074 00 4 00004         TSX     $RDBSS,4                                                         .002
      00153  3 00000 0 00345         PAR     EOF                                                              .004
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 5     
                           OPEN AND RAD LIBRARY FILE.                               
                  
      00154 -0054 00  400000         LFT     400000        IS IT A PROGRAM CARD     
      00155  0020 00 0 00170         TRA     P.C.          YES, GO PROCESS    
                  
      00156  0520 00 0 00450         ZET     FOUND         INSTRUCTION CARD, WAS ENTRY FOUND    
      00157  0020 00 0 00164         TRA     ISKP          YES    
                  
      00160  0520 00 0 00447         ZET     ICSW          NOT FOUND, IS THIS FIRST I.C.  
      00161  0020 00 0 00166         TRA     WRI           NO     
                  
      00162                          CALL    $SVBSS        YES, SAVE IT AND THEN    
      00162  0074 00 4 00005         TSX     $SVBSS,4                                                         .002
      00163                          CALL    $RSBSS        WRITE OUT ALL SAVED BSS CARDS  
      00163  0074 00 4 00006         TSX     $RSBSS,4                                                         .002
                  
      00164 -0625 00 0 00447  ISKP   STL     ICSW          SET INSTRUCTION CARD SWITCH    
      00165  0020 00 0 00152         TRA     NEXCD         AND GO ON    
                  
      00166                   WRI    CALL    $WRBSS        WRITE THIS CARD OUT
      00166  0074 00 4 00007         TSX     $WRBSS,4                                                         .002
      00167  0020 00 0 00152         TRA     NEXCD         AND GO GET NEXT    
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 6     
                           PROCESS PROGRAM CARDS.                                   
                  
      00170 -0520 00 0 00447  P.C.   NZT     ICSW          IF NOT FIRST CARD  
      00171 -0520 00 0 00450         NZT     FOUND         AND ENTRY WAS FOUND
      00172  0020 00 0 00174         TRA     NOTF          ..     
      00173  0020 00 0 00152         TRA     NEXCD         THEN GO ON TO NEXT 
                  
      00174  0600 00 0 00450  NOTF   STZ     FOUND         RESET FOUND INDIC. 
                  
      00175 -0520 00 0 00447         NZT     ICSW          CHECK FOR FIRST P.C.     
      00176  0020 00 0 00205         TRA     SPC           NOT FIRST    
                  
      00177  0534 00 4 00471         LXA     LIST,4        IS LIST OF ENTRIES EXHAUSTED   
      00200 -3 00000 4 00343         TXL     SLOP,4,0      YES, JUST SLOP STUFF INTO TEMORARY   
                  
      00201                          CALL    $RSETB        FLUSH THE CARD SAVE BUFFERS    
      00201  0074 00 4 00010         TSX     $RSETB,4                                                         .002
                  
      00202 -0774 00 4 00002         AXC     2,4           CARD WORD INDEX, 2 GREATER ON FIRST  
      00203  0600 00 0 00447         STZ     ICSW          RESET INSTRUCTION CARD SWITCH  
                  
      00204  0020 00 0 00206         TRA     GCNT          ..     
                  
      00205 -0774 00 4 00000  SPC    AXC     0,4           CARD WORD INDEX    
                  
      00206 -0046 00 0 00000  GCNT   PIA                   FIRST WORD IN AC   
      00207 -0320 00 0 00572         ANA     =O37077777    MASK OFF THE WRDCNT
      00210 -0734 00 1 00000         PDX     ,1            AND PLACE IN XR1   
      00211 -0636 00 1 00224         SCD     ECHK,1        SAVE FOR ENTRY PICKUP CHECK    
                  
      00212 -0500 00 4 77430  ELP    CAL     CARD+2,4      GET AN ENTRY FROM P.C.   
      00213 -0100 00 0 00215         TNZ     *+2           IF ZERO,     
      00214 -0500 00 0 00620         CAL     =H(MAIN)      IT IS A MAIN PROGRAM     
                  
      00215  0774 00 1 00000  SRCH   AXT     **,1          CHECK LIST FOR ENTRY     
      00216 -0340 00 1 00470         LAS     LIST-1,1      ..     
      00217  0020 00 0 00221         TRA     *+2           ..     
      00220  0020 00 0 00227         TRA     GOT.IT        FOUND  
                  
      00221  1 00003 1 00222         TXI     *+1,1,3       NEXT ENTRY IN LIST 
      00222  3 00000 1 00216         TXH     SRCH+1,1,0    ..     
                  
      00223  1 77776 4 00224         TXI     *+1,4,-2      GO TO NEXT ENTRY ON P.C. 
      00224  3 00000 4 00212  ECHK   TXH     ELP,4,**      CHECK FOR CARD FINISHED  
                  
      00225                          CALL    $SVBSS        SAVE THIS CARD IN CASE WE NEED IT    
      00225  0074 00 4 00005         TSX     $SVBSS,4                                                         .002
                  
      00226  0020 00 0 00152         TRA     NEXCD         AND GO ON TO THE NEXT    
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 7     
                           PROCESS PROGRAM CARDS.                                   
                  
      00227 -0500 00 1 00471  GOT.IT CAL     LIST,1        GET SECONDARY NAME 
      00230  0602 00 0 00465         SLW     FILNAM+2      ..     
                  
      00231 -0500 00 1 00467         CAL     LIST-2,1      AND PRIMARY NAME   
      00232  0602 00 0 00463         SLW     FILNAM        ..     
                  
      00233 -0500 00 0 00023         CAL     FENCE         NULLIFY THE ENTRY NAME   
      00234  0602 00 1 00470         SLW     LIST-1,1      ..     
                  
      00235  0534 00 4 00471         LXA     LIST,4        DECREASE THE LIST COUNT  
      00236  1 77775 4 00237         TXI     *+1,4,-3      ..     
      00237  0634 00 4 00471         SXA     LIST,4        ..     
                  
      00240 -0625 00 0 00450         STL     FOUND         SET FOUND INDIC.   
                  
      00241                          CALL    UPDATE        GO DO THE UPDATE   
      00241  0074 00 4 00246         TSX     UPDATE,4                                                         .002
      00242  0020 00 0 00244         TRA     NOPE          RETURN HERE FOR NO UPDATE
                  
      00243  0020 00 0 00152         TRA     NEXCD         AND ON TO THE NEXT CARD  
                  
      00244  0600 00 0 00450  NOPE   STZ     FOUND         GUESS HE DIDN'T WANT     
      00245  0020 00 0 00225         TRA     ECHK+1        THE UPDATE ANYWAY  
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 8     
                           UPDATE - INSERT THE NEW FILE.                            
                  
      00246  0634 00 4 00306  UPDATE SXA     UPDX4,4       SAVE XR4     
                  
      00247  0443 00 0 77424         DLD     INFILE-1      GET THE LIBRARY FILE     
      00250 -0603 00 0 00453         DST     SAVFIL        AND SAVE IT  
                  
      00251 -0500 00 0 00463  UPFND  CAL     FILNAM        GET FILE NAME
      00252  0322 00 0 00322         ERA     STAR          CHECK FOR ASTERISK FOR DELETE  
      00253  0100 00 0 00306         TZE     UPDX4         UPDATE DELETE
                  
      00254                          CALL    FSTATE(FILNAM,FILNAM+2(*,,0)NOTFND)    
      00254  0074 00 4 00534         TSX     FSTATE,4                                                         .002
      00255  3 00000 0 00463         PAR     FILNAM                                                           .004
      00256  3 00000 0 00465         PAR     FILNAM+2                                                         .004
      00257  3 00000 0 00257         PAR     *,,0                                                             .004
      00260  3 00000 0 00313         PAR     NOTFND                                                           .004
                                                           CHECK FOR FILE     
                  
      00261                   UPOP   CALL    $BFOPEN(=HR,FILNAM,FILNAM+2,**,**,=-0,$DSKER)
      00261  0074 00 4 00001         TSX     $BFOPEN,4                                                        .002
      00262  3 00000 0 00606         PAR     =HR                                                              .004
      00263  3 00000 0 00463         PAR     FILNAM                                                           .004
      00264  3 00000 0 00465         PAR     FILNAM+2                                                         .004
      00265  3 00000 0 00000         PAR     **                                                               .004
      00266  3 00000 0 00000         PAR     **                                                               .004
      00267  3 00000 0 00603         PAR     =-0                                                              .004
      00270  3 00000 0 00002         PAR     $DSKER                                                           .004
                                                           OPEN FILE FOR READING    
                  
      00271 -0500 00 0 00463         CAL     FILNAM        SET UP RDBSS FOR   
      00272  0602 00 0 77425         SLW     INFILE        INSERTING FILE     
                  
      00273 -0500 00 0 00465         CAL     FILNAM+2      ..     
      00274  0322 00 0 00607         ERA     =H   BSS      ..     
      00275  0602 00 0 77424         SLW     INFILE-1      ..     
                  
      00276                   UPLOOP CALL    $RDBSS(ENDUP) NOW, READ AND
      00276  0074 00 4 00004         TSX     $RDBSS,4                                                         .002
      00277  3 00000 0 00302         PAR     ENDUP                                                            .004
                  
      00300                          CALL    $WRBSS        WRITE  
      00300  0074 00 4 00007         TSX     $WRBSS,4                                                         .002
                  
      00301  0020 00 0 00276         TRA     UPLOOP        UNTIL EOF ENCOUNTERED    
                  
      00302                   ENDUP  CALL    $BFCLOS(FILNAM,FILNAM+2,$DSKER) CLOSE THE FILE     
      00302  0074 00 4 00011         TSX     $BFCLOS,4                                                        .002
      00303  3 00000 0 00463         PAR     FILNAM                                                           .004
      00304  3 00000 0 00465         PAR     FILNAM+2                                                         .004
      00305  3 00000 0 00002         PAR     $DSKER                                                           .004
                  
      00306  0774 00 4 00000  UPDX4  AXT     **,4          RESTORE XR4  
                  
      00307  0500 00 0 00453  UPXIT  CLA     SAVFIL        RESTORE LIBRARY FILE     
      00310  0560 00 0 00454         LDQ     SAVFIL+1      FOR RDBSS    
      00311 -0603 00 0 77424         DST     INFILE-1      ..     
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 9     
                           UPDATE - INSERT THE NEW FILE.                            
                  
      00312  0020 00 4 00002         TRA     2,4           RETURN 
                  
      00313                   NOTFND CALL    WRFLX((FILNAM,,5)) PRINT NOT FOUND COMMENT   
      00313  0074 00 4 00524         TSX     WRFLX,4                                                          .002
      00314  3 00005 0 00463         PAR     FILNAM,,5                                                        .004
                  
      00315                          CALL    DORMNT        AND GO TO DORMNT   
      00315  0074 00 4 00535         TSX     DORMNT,4                                                         .002
                  
      00316                   RSTART CALL    GETCOM(1)     WAKE UP AND GET PARAMETERS     
      00316  0074 00 4 00536         TSX     GETCOM,4                                                         .002
      00317  3 00000 0 00001         PAR     1                                                                .004
                  
      00320  0602 00 0 00463         SLW     FILNAM        CHECK FOR NONE GIVEN     
      00321 -0340 00 0 00023         LAS     FENCE         ..     
      00322  606060606054     STAR   BCI     1,     * 
      00323  0020 00 0 00337         TRA     NOUP          NO UPDATE TO BE DONE AFTER ALL 
                  
      00324  0322 00 0 00041         ERA     (SQZ)         CHECK FOR SQZBSS FILE    
      00325 -0100 00 0 00334         TNZ     UPBS          NO, REGULAR BSS    
                  
      00326  0560 00 0 00061         LDQ     SQZ           YES, SET SECONDARY NAME  
      00327 -0620 00 0 00465         SLQ     FILNAM+2      TO SQZBSS    
                  
      00330                          CALL    GETCOM(2)     AND GET NEXT PARAMETER   
      00330  0074 00 4 00536         TSX     GETCOM,4                                                         .002
      00331  3 00000 0 00002         PAR     2                                                                .004
      00332  0602 00 0 00463         SLW     FILNAM        ..     
                  
      00333  0020 00 0 00251         TRA     UPFND         NOW, GO TRY TO INSERT IT 
                  
      00334  0560 00 0 00611  UPBS   LDQ     =H            SET SECONDARY NAME 
      00335 -0620 00 0 00465         SLQ     FILNAM+2      TO BSS 
      00336  0020 00 0 00251         TRA     UPFND         ..     
                  
      00337  0522 00 0 00306  NOUP   XEC     UPDX4         RESTORE XR4  
      00340  1 00001 4 00307         TXI     UPXIT,4,1     MAKE IT RETURN 1,4 
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 10    
                           END OF FILE - CLEAN UP AND EXIT.                         
                  
      00341                   SLOPLP CALL    $RDBSS(EOF)   SLOP THROUGH THE REST OF FILE  
      00341  0074 00 4 00004         TSX     $RDBSS,4                                                         .002
      00342  3 00000 0 00345         PAR     EOF                                                              .004
                  
      00343                   SLOP   CALL    $WRBSS        ..     
      00343  0074 00 4 00007         TSX     $WRBSS,4                                                         .002
                  
      00344  0020 00 0 00341         TRA     SLOPLP        ..     
                  
                       00345  EOF    SYN     *  
      00345  0774 00 1 00000  NSRCH  AXT     **,1          NOW, LOOK THROUGH LIST FOR     
      00346 -0500 00 1 00470         CAL     LIST-1,1      ANY UNUSED ENTRIES 
      00347  0602 00 0 00540         SLW     ENTRY+1       ..     
      00350  0322 00 0 00023         ERA     FENCE         ..     
      00351  0100 00 0 00377         TZE     FOK           ..     
                  
      00352                          COMENT  ENTRY,4,(ENTRY        NOT FOUND.)
      00352  0074 00 4 00524         TSX     WRFLX,4                                                          .003
      00353  3 00004 0 00537         PAR     ENTRY,,4                                                         .005
                                                           COMMENT ON ENTRY NOT FOUND     
                  
                  
      00354  0602 00 0 00465         SLW     FILNAM+2      ..     
                  
      00355 -0500 00 1 00467         CAL     LIST-2,1      AND PRIMARY NAME   
      00356  0602 00 0 00463         SLW     FILNAM        ..     
                  
      00357  0322 00 0 00322         ERA     STAR          CHECK FOR ASTERISK 
      00360  0100 00 0 00377         TZE     FOK           IGNORE UPDATE IF A STAR  
                  
      00361                          CALL    WRFLXA((ASK,,5)) ASK FOR APPENDING FILE
      00361  0074 00 4 00543         TSX     WRFLXA,4                                                         .002
      00362  3 00005 0 00456         PAR     ASK,,5                                                           .004
                  
      00363                          CALL    RDFLXA((TEM,,1)) READ ANSWER     
      00363  0074 00 4 00544         TSX     RDFLXA,4                                                         .002
      00364  3 00001 0 00452         PAR     TEM,,1                                                           .004
                  
      00365 -0500 00 0 00452         CAL     TEM           GET ANSWER   
      00366  0771 00 0 00022         ARS     18            ..     
      00367  0322 00 0 00571         ERA     =H000YES      WAS IT YES   
      00370 -0100 00 0 00377         TNZ     FOK           IGNORE UPDATE IF NOT     
                  
      00371 -0500 00 1 00471         CAL     LIST,1        SET UP FILE NAME   
      00372  0602 00 0 00465         SLW     FILNAM+2      FOR UPDATING 
                  
      00373 -0500 00 1 00467         CAL     LIST-2,1      ..     
      00374  0602 00 0 00463         SLW     FILNAM        ..     
                  
      00375                          CALL    UPDATE        GO APPEND THIS FILE
      00375  0074 00 4 00246         TSX     UPDATE,4                                                         .002
      00376  0020 00 0 00377         TRA     *+1           ..     
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 11    
                           END OF FILE - CLEAN UP AND EXIT.                         
                  
      00377  1 00003 1 00400  FOK    TXI     *+1,1,3       SEARCH THE ENTIRE ENTRY TABLE  
      00400  3 00000 1 00346         TXH     NSRCH+1,1,0   ..     
                  
      00401                          CALL    $BFCLOS(OUTFIL,N2,$DSKER) CLOSE THE TEMPORARY
      00401  0074 00 4 00011         TSX     $BFCLOS,4                                                        .002
      00402  3 00000 0 77423         PAR     OUTFIL                                                           .004
      00403  3 00000 0 00470         PAR     N2                                                               .004
      00404  3 00000 0 00002         PAR     $DSKER                                                           .004
                  
      00405                          CALL    $BFCLOS(INFILE,N2,$DSKER) CLOSE LIBRARY FILE 
      00405  0074 00 4 00011         TSX     $BFCLOS,4                                                        .002
      00406  3 00000 0 77425         PAR     INFILE                                                           .004
      00407  3 00000 0 00470         PAR     N2                                                               .004
      00410  3 00000 0 00002         PAR     $DSKER                                                           .004
                  
      00411                          CALL    $DELETE(INFILE,N2,=0,NODEL) DELETE THE OLD LIBRARY 
      00411  0074 00 4 00003         TSX     $DELETE,4                                                        .002
      00412  3 00000 0 77425         PAR     INFILE                                                           .004
      00413  3 00000 0 00470         PAR     N2                                                               .004
      00414  3 00000 0 00567         PAR     =0                                                               .004
      00415  3 00000 0 00431         PAR     NODEL                                                            .004
      00416  0602 00 0 00451         SLW     MODE          SAVE MODE FOR NEW LIBRARY
                  
      00417                          CALL    CHFILE(OUTFIL,N2,MODE,INFILE,N2) RENAME THE TEMPORARY    
      00417  0074 00 4 00545         TSX     CHFILE,4                                                         .002
      00420  3 00000 0 77423         PAR     OUTFIL                                                           .004
      00421  3 00000 0 00470         PAR     N2                                                               .004
      00422  3 00000 0 00451         PAR     MODE                                                             .004
      00423  3 00000 0 77425         PAR     INFILE                                                           .004
      00424  3 00000 0 00470         PAR     N2                                                               .004
                  
      00425                          COMENT  DONE,3,(UPDATING OVER.) WHEEEE   
      00425  0074 00 4 00524         TSX     WRFLX,4                                                          .003
      00426  3 00003 0 00546         PAR     DONE,,3                                                          .005
                  
      00427                   CHN    CALL    CHNCOM(0)     EXIT TO CHNCOM     
      00427  0074 00 4 00551         TSX     CHNCOM,4                                                         .002
      00430  3 00000 0 00000         PAR     0                                                                .004
                  
      00431                   NODEL  CALL    DELFIL(OUTFIL,N2,=0,*+1) DELETE THE TEMPORARY
      00431  0074 00 4 00552         TSX     DELFIL,4                                                         .002
      00432  3 00000 0 77423         PAR     OUTFIL                                                           .004
      00433  3 00000 0 00470         PAR     N2                                                               .004
      00434  3 00000 0 00567         PAR     =0                                                               .004
      00435  3 00000 0 00436         PAR     *+1                                                              .004
      00436  0021 00 0 00427         XIT     CHN           AND EXIT TO CHNCOM 
                  
      00437                   BREAK  CALL    RESETF        RESET ALL ACTIVE FILES   
      00437  0074 00 4 00553         TSX     RESETF,4                                                         .002
                  
      00440  0021 00 0 00427         XIT     CHN           AND EXIT TO CHNCOM 
                  
      00441                   PERR   COMENT  BADPAR,5,(ILLEGAL PARAMETER SEQUENCE.) 
      00441  0074 00 4 00524         TSX     WRFLX,4                                                          .003
      00442  3 00005 0 00554         PAR     BADPAR,,5                                                        .005
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 12    
                           END OF FILE - CLEAN UP AND EXIT.                         
                  
      00443  0021 00 0 00427         XIT     CHN           ..     
                  
      00444                   NONE   COMENT  NOFILS,6,(NO FILES SPECIFIED FOR UPDATING.)  
      00444  0074 00 4 00524         TSX     WRFLX,4                                                          .003
      00445  3 00006 0 00561         PAR     NOFILS,,6                                                        .005
      00446  0021 00 0 00427         XIT     CHN           ..     
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 13    
                           STORAGE AND CONSTANTS.                                   
                  
      00447  0 00000 0 00447  ICSW   PZE     *  
      00450  0 00000 0 00000  FOUND  PZE  
      00451  0 00000 0 00000  MODE   PZE  
      00452  0 00000 0 00000  TEM    PZE  
      00453                   SAVFIL BSS     2  
      00455  0020 00 0 00316  USETRA TRA     RSTART   
                  
      00456  244660704664     ASK    BCI     4,DO YOU WISH TO APPEND IT 
      00457  606631623060     
      00460  634660214747     
      00461  254524603163     
      00462  736060575757            VFD     O36/736060575757     
                  
      00463  000000000000     FILNAM VFD     36/0,O36/605757575757,36/0 
      00464  605757575757     
      00465  000000000000     
      00466  604546636026            BCI     2, NOT FOUND.  
      00467  466445243360     
                  
      00470  606060226262     N2     BCI     1,   BSS 
                  
      00471  0 00000 0 00000  LIST   PZE  
                       00472         DUP     1,NFILS  
      00472  777777777777            VFD     36/-1,36/-1,O18/606060,H18/BSS   
      00473  777777777777     
      00474  606060226262     
      00475  777777777777     
      00476  777777777777     
      00477  606060226262     
      00500  777777777777     
      00501  777777777777     
      00502  606060226262     
      00503  777777777777     
      00504  777777777777     
      00505  606060226262     
      00506  777777777777     
      00507  777777777777     
      00510  606060226262     
      00511  777777777777     
      00512  777777777777     
      00513  606060226262     
      00514  777777777777     
      00515  777777777777     
      00516  606060226262     
      00517  777777777777     
      00520  777777777777     
      00521  606060226262     
                  
                       77426         COMMON  27 
                       77426  CARD   COMMON  1  
                       77425  INFILE COMMON  2  
                       77423  OUTFIL COMMON  2  
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 14    
                           STORAGE AND CONSTANTS.                                   
                  
      00522                          RMT     *             REMOTE SEQUENCES   
      00522  0101 00 0 00612  SETBRK TIA     =HSETBRK                                                         .002
      00523  0101 00 0 00600  GETCLS TIA     =HGETCLS                                                         .002
      00524  0101 00 0 00615  WRFLX  TIA     =HWRFLX                                                          .002
      00525  634646604421     TOO    BCI     5,TOO MANY FILES REQUESTED.                                      .002
      00526  457060263143     
      00527  256260512550     
      00530  642562632524     
      00531  336060606060     
      00532  0101 00 0 00602  GETMEM TIA     =HGETMEM                                                         .002
      00533  0101 00 0 00613  SETMEM TIA     =HSETMEM                                                         .002
      00534  0101 00 0 00577  FSTATE TIA     =HFSTATE                                                         .002
      00535  0101 00 0 00576  DORMNT TIA     =HDORMNT                                                         .002
      00536  0101 00 0 00601  GETCOM TIA     =HGETCOM                                                         .002
      00537  254563517060     ENTRY  BCI     4,ENTRY        NOT FOUND.                                        .002
      00540  606060606060     
      00541  604546636026     
      00542  466445243360     
      00543  0101 00 0 00614  WRFLXA TIA     =HWRFLXA                                                         .002
      00544  0101 00 0 00604  RDFLXA TIA     =HRDFLXA                                                         .002
      00545  0101 00 0 00573  CHFILE TIA     =HCHFILE                                                         .002
      00546  644724216331     DONE   BCI     3,UPDATING OVER.                                                 .002
      00547  452760466525     
      00550  513360606060     
      00551  0101 00 0 00574  CHNCOM TIA     =HCHNCOM                                                         .002
      00552  0101 00 0 00575  DELFIL TIA     =HDELFIL                                                         .002
      00553  0101 00 0 00605  RESETF TIA     =HRESETF                                                         .002
      00554  314343252721     BADPAR BCI     5,ILLEGAL PARAMETER SEQUENCE.                                    .002
      00555  436047215121     
      00556  442563255160     
      00557  622550642545     
      00560  232533606060     
      00561  454660263143     NOFILS BCI     6,NO FILES SPECIFIED FOR UPDATING.                               .002
      00562  256260624725     
      00563  233126312524     
      00564  602646516064     
      00565  472421633145     
      00566  273360606060     
                  
                                     END  
                  
        LITERALS  
      00567  000000000000     
      00570  000000000660     
      00571  000000702562     
      00572  000037077777     
      00573  233026314325     
      00574  233045234644     
      00575  242543263143     
      00576  244651444563     
      00577  266263216325     
      00600  272563234362     
      00601  272563234644     
      00602  272563442544     
      00603  400000000000     
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 15    
                           STORAGE AND CONSTANTS.                                   
                  
      00604  512426436721     
      00605  512562256326     
      00606  516060606060     
      00607  606060226262     
      00610  606060606013     
      00611  606060606060     
      00612  622563225142     
      00613  622563442544     
      00614  665126436721     
      00615  665126436760     
      00616  666060606060     
      00617  742631432534     
      00620  744421314534     
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77421 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
        621 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        470     N2    33,  130,  137,  145,  403,  407,  413,  421,  424,  433
        456    ASK   362
        427    CHN    76,  436,  440,  443,  446
        212    ELP   224
        345    EOF   153,  342,  345
        377    FOK   351,  360,  370
         71    NEX    65
        205    SPC   176
         21    SQI    34
         61    SQZ    32,   53,  326
        452    TEM    43,   46,   50,   63,   67,  364,  365
        525    TOO    75
        166    WRI   161
      77426   CARD    17,   21,   37,   57,  212,  522
        546   DONE   426
        224   ECHK   211,  245
        206   GCNT   204
        447   ICSW   160,  164,  170,  175,  203
        164   ISKP   157
        471   LIST    44,   47,   54,   70,  100,  177,  216,  227,  231,  234,  235,  237,  346,  355,  371,  373
        451   MODE   416,  422
        444   NONE    77
        244   NOPE   242
        174   NOTF   172
        337   NOUP   323
        125   OPNR   106,  110
        142   OPNW   112,  114,  116
        441   PERR    24
        170   P.C.   155
        343   SLOP   200
         77   SOUT    42,   62
        215   SRCH   101,  222
        322   STAR   252,  357
        334   UPBS   325
        261   UPOP   120,  122
        437  BREAK    13
          2  DSKER   134,  151,  270,  305,  404,  410
        302  ENDUP   277
        537  ENTRY   347,  353
         23  FENCE    22,   40,   60,  233,  321,  350
        450  FOUND   156,  171,  174,  240,  244
          0  LJUST    45,   66
        152  NEXCD   165,  167,  173,  226,  243
         10  NFILS    12,   73,  472
        431  NODEL   415
        345  NSRCH   102,  400
         37  PARLP    55,   73
          4  RDBSS   152,  276,  341
          6  RSBSS   163
         10  RSETB   201
1            UPDBSS COMMAND FOR FOREGROUND.                                                      PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         12  START      
          5  SVBSS   162,  225
        306  UPDX4   246,  253,  337
        251  UPFND   333,  336
        307  UPXIT   340
          7  WRBSS   166,  300,  343
        524  WRFLX    74,  313,  352,  425,  441,  444
         41  (SQZ)    26,   51,  324
        554 BADPAR   442
         11 BFCLOS   302,  401,  405
          1 BFOPEN   125,  142,  261
        545 CHFILE   417
        551 CHNCOM   427
          3 DELETE   135,  411
        552 DELFIL   431
        535 DORMNT   315
        463 FILNAM   230,  232,  251,  255,  256,  263,  264,  271,  273,  303,  304,  314,  320,  327,  332,  335,  354
                     356,  372,  374
        534 FSTATE   254
        523 GETCLS    16
        536 GETCOM   316,  330
        532 GETMEM   105
        227 GOT.IT   220
      77425 INFILE    25,   30,  127,  247,  272,  275,  311,  406,  412,  423,  522
        561 NOFILS   445
         35 NO.SQI    27
         56 NO.SQO    52
        313 NOTFND   260
      77423 OUTFIL    31,  104,  136,  144,  402,  420,  432,  522
        544 RDFLXA   363
        553 RESETF   437
        316 RSTART   455
        453 SAVFIL   250,  307,  310
        522 SETBRK    12
        533 SETMEM   124
        341 SLOPLP   344
        246 UPDATE   241,  375
        276 UPLOOP   301
         25 USELOC    12,   15
        455 USETRA    14
        543 WRFLXA   361
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            RDBSS - BSS FILE READING ROUTINE.                                                   PAGE 1     
                  
                                             NOEL I. MORRIS - 6/21/65   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00003         ENTRY   RDBSS    
                  
                  
        TRANSFER VECTOR 
      00000  222651252124     BFREAD
      00001  246242255160     DSKER 
      00002  462321222360     OCABC 
                  
      00003  0634 00 4 00073  RDBSS  SXA     XR4,4         SAVE XRS     
                  
      00004  0520 00 0 77424  WZERO  ZET     FILN-1        CHECK FOR SQZBSS FILE    
      00005  0020 00 0 00017         TRA     SQZ           ..     
                  
      00006                          CALL    $BFREAD(FILN,BSS(BUFF,,28)EOF,EOFCT,$DSKER)  
      00006  0074 00 4 00000         TSX     $BFREAD,4                                                        .002
      00007  3 00000 0 77425         PAR     FILN                                                             .004
      00010  3 00000 0 00114         PAR     BSS                                                              .004
      00011  3 00034 0 77426         PAR     BUFF,,28                                                         .004
      00012  3 00000 0 00111         PAR     EOF                                                              .004
      00013  3 00000 0 00113         PAR     EOFCT                                                            .004
      00014  3 00000 0 00001         PAR     $DSKER                                                           .004
      00015  0441 00 0 77426         LDI     BUFF          GET FIRST WORD IN SI     
      00016  0020 00 0 00050         TRA     CHECK         GO CHECK CHECKSUM  
                  
      00017  0774 00 4 00034  SQZ    AXT     28,4          ZERO OUT THE READ BUFFER 
      00020  0600 00 4 77462         STZ     BUFF+28,4     ..     
      00021  2 00001 4 00020         TIX     *-1,4,1       ..     
                  
      00022                          CALL    $BFREAD(FILN,=HSQZBSS(BUFF,,1)EOF,EOFCT,$DSKER)    
      00022  0074 00 4 00000         TSX     $BFREAD,4                                                        .002
      00023  3 00000 0 77425         PAR     FILN                                                             .004
      00024  3 00000 0 00134         PAR     =HSQZBSS                                                         .004
      00025  3 00001 0 77426         PAR     BUFF,,1                                                          .004
      00026  3 00000 0 00111         PAR     EOF                                                              .004
      00027  3 00000 0 00113         PAR     EOFCT                                                            .004
      00030  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00031  0441 00 0 77426         LDI     BUFF          GET FIRST WORD IN SI     
      00032 -0046 00 0 00000         PIA                   IN AC  
      00033 -0320 00 0 00130         ANA     =O77000000    MASK WORDCOUNT     
      00034 -0734 00 4 00000         PDX     ,4            WORDCOUNT IN XR4   
      00035 -0056 00  200000         LNT     200000        CHECK FOR REL. BIN CARD  
      00036  1 00001 4 00040         TXI     *+2,4,1       MUST BE A PROGRAM CARD   
      00037  1 00003 4 00040         TXI     *+1,4,3       RELOCATABLE INSTRUCTION CARD   
      00040 -0634 00 4 00044         SXD     VRR+3,4       STORE FOR READING REST OF CARD 
                  
      00041                   VRR    CALL    $BFREAD(FILN,=HSQZBSS(BUFF+1,,**)EOF,EOFCT,$DSKER) 
      00041  0074 00 4 00000         TSX     $BFREAD,4                                                        .002
      00042  3 00000 0 77425         PAR     FILN                                                             .004
      00043  3 00000 0 00134         PAR     =HSQZBSS                                                         .004
1            RDBSS - BSS FILE READING ROUTINE.                                                   PAGE 2     
                  
      00044  3 00000 0 77427         PAR     BUFF+1,,**                                                       .004
      00045  3 00000 0 00111         PAR     EOF                                                              .004
      00046  3 00000 0 00113         PAR     EOFCT                                                            .004
      00047  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00050 -0046 00 0 00000  CHECK  PIA                   FIRST WORD IN AC   
      00051 -0320 00 0 00130         ANA     =O77000000    MASK THE WORD COUNT
      00052 -0734 00 4 00000         PDX     ,4            WORD COUNT IN XR4  
      00053 -3 00000 4 00004         TXL     WZERO,4,0     TRY AGAIN IF WORD COUNT ZERO   
                  
      00054 -0056 00  400000         LNT     400000        CHECK FOR PROGRAM CARD   
      00055  0020 00 0 00062         TRA     *+5           ..     
      00056 -0500 00 0 77432         CAL     BUFF+4        GET ENTRY NAME     
      00057 -0100 00 0 00061         TNZ     *+2           CHECK FOR MAIN PROGRAM   
      00060 -0500 00 0 00136         CAL     =H(MAIN)      SET ENTRY TO '(MAIN)'    
      00061  0602 00 0 00121         SLW     PGN           ..     
                  
      00062 -0056 00  100000         LNT     100000        CHECK FOR IGNORE CHECKSUM PUNCH
      00063 -0520 00 0 77427         NZT     BUFF+1        ALSO BLANK CHECKSUM
      00064  0020 00 0 00073         TRA     IGCHK    
                  
      00065  0774 00 4 00026         AXT     22,4          ADD UP CHECKSUM    
      00066 -0500 00 0 77426         CAL     BUFF          ..     
      00067  0361 00 4 77456         ACL     BUFF+24,4     ..     
      00070  2 00001 4 00067         TIX     *-1,4,1       ..     
      00071  0322 00 0 77427         ERA     BUFF+1        XOR IN THE CHECKSUM TO COMPARE 
      00072 -0100 00 0 00075         TNZ     CHKERR        NON-ZERO ON ERROR  
                  
                       00073  IGCHK  SYN     *  
                  
      00073  0774 00 4 00000  XR4    AXT     **,4          RESTORE XRS  
      00074  0020 00 4 00002         TRA     2,4           RETURN 
                  
      00075 -0054 00  400000  CHKERR LFT     400000        CHECK FOR PROG. CARD     
      00076  0020 00 0 00106         TRA     P.C.          ..     
                  
      00077                          CALL    $OCABC(BUFF)  CONVERT LOAD ADDRESS TO OCTAL BCD    
      00077  0074 00 4 00002         TSX     $OCABC,4                                                         .002
      00100  3 00000 0 77426         PAR     BUFF                                                             .004
      00101  0560 00 0 00133         LDQ     =H            BLANK OUT SECOND WORD    
                  
      00102 -0603 00 0 00125  DST    DST     MSG+8         STORE INTO MESSAGE 
      00103                          CALL    WRFLX((MSG,,10))  PRINT ERROR MESSAGE  
      00103  0074 00 4 00127         TSX     WRFLX,4                                                          .002
      00104  3 00012 0 00115         PAR     MSG,,10                                                          .004
      00105  0020 00 0 00073         TRA     IGCHK         KEEP GOING   
                  
      00106  0500 00 0 00132  P.C.   CLA     =HPROGRA      SET LOAD ADDRESS TO
      00107  0560 00 0 00131         LDQ     =HM CARD      'PROGRAM CARD'     
      00110  0020 00 0 00102         TRA     DST           ..     
                  
                       00111  EOF    SYN     *  
      00111  0522 00 0 00073         XEC     XR4           AND XRS
      00112  0020 60 4 00001         TRA*    1,4           EOF RETURN   
1            RDBSS - BSS FILE READING ROUTINE.                                                   PAGE 3     
                  
      00113  0 00000 0 00000  EOFCT  PZE  
      00114  606060226262     BSS    BCI     1,   BSS 
      00115  233025234262     MSG    BCI     4,CHECKSUM ERROR IN PROG.  
      00116  644460255151     
      00117  465160314560     
      00120  475146273360     
      00121  0 00000 0 00000  PGN    PZE  
      00122  736043462124            BCI     2,, LOAD ADDRE 
      00123  602124245125     
      00124  626260135757            VFD     H12/SS,O6/60,H6/=,O12/5757 
      00125                          BSS     2  
                  
                       77426         COMMON  27 
                       77426  BUFF   COMMON  1  
                       77425  FILN   COMMON  2  
                  
      00127                          RMT     *             REMOTE SEQUENCES   
      00127  0101 00 0 00135  WRFLX  TIA     =HWRFLX                                                          .002
                                     END  
                  
        LITERALS  
      00130  000077000000     
      00131  446023215124     
      00132  475146275121     
      00133  606060606060     
      00134  625071226262     
      00135  665126436760     
      00136  744421314534     
1            RDBSS - BSS FILE READING ROUTINE.                                                   PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77423 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
        137 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        114    BSS    10
        102    DST   110
        111    EOF    12,   26,   45,  111
        115    MSG   102,  104
        121    PGN    61
         17    SQZ     5
         41    VRR    40
         73    XR4     3,  111
      77426   BUFF    11,   15,   20,   25,   31,   44,   56,   63,   66,   67,   71,  100,  127
      77425   FILN     4,    7,   23,   42,  127
        106   P.C.    76
         50  CHECK    16
          1  DSKER    14,   30,   47
        113  EOFCT    13,   27,   46
         73  IGCHK    64,   73,  105
          2  OCABC    77
          3  RDBSS     0
        127  WRFLX   103
          4  WZERO    53
          0 BFREAD     6,   22,   41
         75 CHKERR    72
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            WRBSS - WRITE A BSS FILE.                                                           PAGE 1     
                  
                                             NOEL I. MORRIS - 6/22/65   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00002         ENTRY   WRBSS    
                  
                  
        TRANSFER VECTOR 
      00000  222666513163     BFWRIT
      00001  246242255160     DSKER 
                  
      00002  0634 00 4 00030  WRBSS  SXA     XR4,4         SAVE XRS     
      00003  0604 00 0 00033         STI     SVSI          AND SI 
                  
      00004  0441 00 0 77426         LDI     BUFF          FIRST WORD IN SI   
      00005 -0046 00 0 00000         PIA                   LOOK AT FIRST WORD 
      00006 -0320 00 0 00035         ANA     =O77000000    MASK OFF WORD COUNT
      00007 -0734 00 4 00000         PDX     ,4            WORD COUNT IN XR4  
      00010 -3 00000 4 00030         TXL     XR4,4,0       DON'T WRITE ANYTHING IF WORD COUNT ZERO    
                  
      00011 -0520 00 0 77422         NZT     FNAM-1        CHECK FOR SQZBSS FILE    
      00012  0020 00 0 00017         TRA     FIX           ..     
                  
      00013 -0500 00 0 00037         CAL     =HSQZBSS      SECONDARY NAME IS 'SQZBSS'     
      00014 -0056 00  200000         LNT     200000        CHECK FOR INSTRUCTION CARD     
      00015  1 00002 4 00021         TXI     SLW,4,2       MUST BE PROGRAM CARD     
      00016  1 00004 4 00021         TXI     SLW,4,4       INSTRUCTION CARD   
                  
      00017 -0500 00 0 00036  FIX    CAL     =H   BSS      SECONDARY NAME IS 'BSS'  
      00020  0774 00 4 00034         AXT     28,4          RECORD LENGTH IS 28
                  
      00021  0602 00 0 00034  SLW    SLW     SNAM          STORE SECONDARY NAME     
      00022 -0634 00 4 00026         SXD     WRITE+3,4     STORE WORD COUNT   
                  
      00023                   WRITE  CALL    $BFWRIT(FNAM,SNAM,(BUFF,,**),$DSKER)   
      00023  0074 00 4 00000         TSX     $BFWRIT,4                                                        .002
      00024  3 00000 0 77423         PAR     FNAM                                                             .004
      00025  3 00000 0 00034         PAR     SNAM                                                             .004
      00026  3 00000 0 77426         PAR     BUFF,,**                                                         .004
      00027  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00030  0774 00 4 00000  XR4    AXT     **,4          RESTORE XRS  
      00031  0441 00 0 00033         LDI     SVSI          AND SI 
      00032  0020 00 4 00001         TRA     1,4           RETURN 
                  
      00033  0 00000 0 00000  SVSI   PZE  
      00034  0 00000 0 00000  SNAM   PZE  
                  
                       77426         COMMON  27 
                       77426  BUFF   COMMON  3  
                       77423  FNAM   COMMON  2  
1            WRBSS - WRITE A BSS FILE.                                                           PAGE 2     
                  
      00035                          RMT     *             REMOTE SEQUENCES   
                  
                                     END  
                  
        LITERALS  
      00035  000077000000     
      00036  606060226262     
      00037  625071226262     
1            WRBSS - WRITE A BSS FILE.                                                           PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77421 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
         40 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         17    FIX    12
         21    SLW    15,   16
         30    XR4     2,   10
      77426   BUFF     4,   26,   35
      77423   FNAM    11,   24,   35
         34   SNAM    21,   25
         33   SVSI     3,   31
          1  DSKER    27
          2  WRBSS     0
         23  WRITE    22
          0 BFWRIT    23
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            SVBSS - SAVE AND RESTORE BSS CARD IMAGES.                                           PAGE 1     
                  
                                             9/12/65 - NOEL I. MORRIS   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00001         ENTRY   SVBSS    
                       00034         ENTRY   RSBSS    
                       00056         ENTRY   RSETB    
                  
                  
        TRANSFER VECTOR 
      00000  665122626260     WRBSS 
                  
                       00034  CLTH   EQU     28 
                       00002  N      EQU     2  
1            SVBSS - SAVE AND RESTORE BSS CARD IMAGES.                                           PAGE 2     
                           SAVE BSS CARD IMAGES IN EXTENDED MEMORY.                 
                  
      00001  0634 00 4 00032  SVBSS  SXA     SV4,4         SAVE XR4     
                  
      00002  0020 00 0 00003  SUBSQ  TRA     *+1           EXECUTE NEXT SECTION ONLY ONCE 
                  
      00003                          CALL    GETMEM        GET CURRENT MEMBND 
      00003  0074 00 4 00064         TSX     GETMEM,4                                                         .002
                  
      00004 -0765 00 0 00001         LGR     1             ROUND TO NEXT HIGHEST    
      00005  0760 00 0 00010         RND                   EVEN NUMBER  
      00006  0767 00 0 00001         ALS     1             FOR DLD INSTRUCTION
                  
      00007  0621 00 0 00016         STA     BUFF          SAVE CARD BUFFER ADDRESS 
      00010  0621 00 0 00040         STA     RESET         ..     
                  
      00011  0361 00 0 00063         ACL     LTH           INCREASE TO INITIAL SIZE 
      00012  0734 00 4 00000         PAX     ,4            ..     
      00013 -0634 00 4 00022         SXD     MEMBND,4      SAVE FOR CHECKING  
                  
      00014                          EXTEND                AND RESET THE MEMORY BOUND     
      00014  0074 00 4 00065         TSX     SETMEM,4                                                         .003
                  
      00015 -0625 00 0 00002         STL     SUBSQ         SET SWITCH TO SKIP INITIALIZATION    
                  
      00016  0774 00 4 00000  BUFF   AXT     **,4          LAST CARD BUFFER ADDRESS 
      00017  1 00034 4 00020         TXI     *+1,4,CLTH    INCREASE     
      00020  0634 00 4 00016         SXA     BUFF,4        SAVE NEW BUFFER ADDRESS  
      00021  0634 00 4 00030         SXA     MOVIN,4       ..     
      00022 -3 00000 4 00026  MEMBND TXL     NOXTND,4,**   CHECK FOR MEMBND EXCEEDED
                  
      00023 -0634 00 4 00022         SXD     MEMBND,4      NEED HIGHER MEMBND, SO   
      00024  0754 00 4 00000         PXA     ,4            WE SET IT HIGHER   
      00025                          EXTEND                ..     
      00025  0074 00 4 00065         TSX     SETMEM,4                                                         .003
                  
      00026  0774 00 4 00034  NOXTND AXT     CLTH,4        FAST MOVE LOOP     
      00027  0443 00 4 77462         DLD     CARD+CLTH,4   ONLY 84 CYCLES FOR 1 CARD IMAGE
      00030 -0603 00 4 00000  MOVIN  DST     **,4          ..     
      00031  2 00002 4 00027         TIX     *-2,4,2       ..     
                  
      00032  0774 00 4 00000  SV4    AXT     **,4          RESTORE XR4  
      00033  0020 00 4 00001         TRA     1,4           AND RETURN   
1            SVBSS - SAVE AND RESTORE BSS CARD IMAGES.                                           PAGE 3     
                           RESTORE AND WRITE OUT SAVED BSS CARDS.                   
                  
      00034  0634 00 4 00053  RSBSS  SXA     RX4,4         SAVE XRS     
      00035  0634 00 1 00054         SXA     RX1,1         ..     
                  
      00036  0534 00 4 00016         LXA     BUFF,4        LAST BUFFER USED   
      00037 -0634 00 4 00043         SXD     TXH,4         SAVE FOR CHECKING  
                  
      00040  0774 00 1 00000  RESET  AXT     **,1          NOW RESET THE BUFFER STORE POINTER   
      00041  0634 00 1 00016         SXA     BUFF,1        ..     
                  
      00042  1 00034 1 00043  LOOP   TXI     *+1,1,CLTH    STEP TO NEXT CARD  
      00043  3 00000 1 00053  TXH    TXH     ENDRS,1,**    CHECK FOR ALL CARDS DONE 
      00044  0634 00 1 00046         SXA     MOVOUT,1      STORE BUFFER ADDRESS     
                  
      00045  0774 00 4 00034         AXT     CLTH,4        FAST MOVE AGAIN    
      00046  0443 00 4 00000  MOVOUT DLD     **,4          ..     
      00047 -0603 00 4 77462         DST     CARD+CLTH,4   ..     
      00050  2 00002 4 00046         TIX     MOVOUT,4,2    ..     
                  
      00051                          CALL    $WRBSS        WRITE OUT CARD     
      00051  0074 00 4 00000         TSX     $WRBSS,4                                                         .002
      00052  0020 00 0 00042         TRA     LOOP          AND GO TO NEXT CARD
                  
                       00053  ENDRS  SYN     *  
                  
      00053  0774 00 4 00000  RX4    AXT     **,4          RESTORE XRS  
      00054  0774 00 1 00000  RX1    AXT     **,1          ..     
      00055  0020 00 4 00001         TRA     1,4           AND RETURN   
1            SVBSS - SAVE AND RESTORE BSS CARD IMAGES.                                           PAGE 4     
                           RSETB - RESET THE BUFFERS FOR NEXT PROGRAM.              
                  
      00056  0634 00 4 00061  RSETB  SXA     RSX4,4        SAVE XR4     
                  
      00057  0534 00 4 00040         LXA     RESET,4       GET RESET ADDRESS FOR BUFFER   
      00060  0634 00 4 00016         SXA     BUFF,4        ..     
                  
      00061  0774 00 4 00000  RSX4   AXT     **,4          RESTORE XR4  
      00062  0020 00 4 00001         TRA     1,4           AND RETURN   
1            SVBSS - SAVE AND RESTORE BSS CARD IMAGES.                                           PAGE 5     
                           STORAGE AND CONSTANTS.                                   
                  
      00063  0 00000 0 00070  LTH    PZE     N*CLTH   
                  
                       77426         COMMON  27 
                       77426  CARD   COMMON  1  
                  
      00064                          RMT     *             REMOTE SEQUENCES.  
      00064  0101 00 0 00066  GETMEM TIA     =HGETMEM                                                         .002
      00065  0101 00 0 00067  SETMEM TIA     =HSETMEM                                                         .002
                  
                                     END  
                  
        LITERALS  
      00066  272563442544     
      00067  622563442544     
1            SVBSS - SAVE AND RESTORE BSS CARD IMAGES.                                           PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77425 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
         70 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          2      N     1,   63
         63    LTH    11
         54    RX1    35
         53    RX4    34
         32    SV4     1
         43    TXH    37
         16   BUFF     7,   20,   36,   41,   60
      77426   CARD    27,   47,   64
         34   CLTH     1,   17,   26,   27,   42,   45,   47,   63
         42   LOOP    52
         61   RSX4    56
         53  ENDRS    43,   53
         30  MOVIN    21
         40  RESET    10,   57
         34  RSBSS     0
         56  RSETB     0
          2  SUBSQ    15
          1  SVBSS     0
          0  WRBSS    51
         64 GETMEM     3
         22 MEMBND    13,   23
         46 MOVOUT    44,   50
         26 NOXTND    22
         65 SETMEM    14,   25
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            DELETE ALL VERSIONS OF AN OLD FILE.                                                 PAGE 1     
                  
                                             NOEL I. MORRIS - 6/22/65   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00001         ENTRY   DELETE   
                  
                  
      00000  462351222360     OCRBC 
                  
      00001  0634 00 4 00035  DELETE SXA     XR4,4         SAVE XRS     
      00002  0604 00 0 00125         STI     SVSI          SAVE SI
      00003  0600 00 0 00122         STZ     MODE          SET MODE TO 'P'    
                  
      00004 -0500 60 4 00001         CAL*    1,4           GET FILE NAME
      00005  0602 00 0 00107         SLW     FNAM          ..     
      00006 -0500 60 4 00002         CAL*    2,4           ..     
      00007  0602 00 0 00111         SLW     FNAM+2        ..     
                  
      00010 -0500 60 4 00003         CAL*    3,4           GET DELETION PRINT SWITCH
      00011  0602 00 0 00124         SLW     PSW           ..     
                  
      00012                          CALL    FSTATE(FNAM,FNAM+2(BUFF,,2)FSERR,ERCODE)     
      00012  0074 00 4 00126         TSX     FSTATE,4                                                         .002
      00013  3 00000 0 00107         PAR     FNAM                                                             .004
      00014  3 00000 0 00111         PAR     FNAM+2                                                           .004
      00015  3 00002 0 00121         PAR     BUFF,,2                                                          .004
      00016  3 00000 0 00070         PAR     FSERR                                                            .004
      00017  3 00000 0 00123         PAR     ERCODE                                                           .004
                  
      00020  0441 00 0 00122         LDI     MODE          GET MODE BITS
      00021 -0054 00  400000         LFT     400000        CHECK FOR LINKED FILE    
      00022  0020 00 0 00073         TRA     LINKD         IS LINKED, WILL NOT DELETE     
                  
      00023  0054 00  000134         RFT     134           CHECK FOR READ-ONLY/PROTECTED, ETC.  
      00024  0020 00 0 00040         TRA     ASK           PROTECTED, ASK FOR DELETE
                  
      00025                   DEL    CALL    DELFIL(FNAM,FNAM+2,NODEL)  
      00025  0074 00 4 00127         TSX     DELFIL,4                                                         .002
      00026  3 00000 0 00107         PAR     FNAM                                                             .004
      00027  3 00000 0 00111         PAR     FNAM+2                                                           .004
      00030  3 00000 0 00075         PAR     NODEL                                                            .004
                  
      00031  0520 00 0 00124         ZET     PSW           CHECK FOR DELETION PRINT 
      00032                          CALL    WRFLX((DTOF,,6)) PRINT DELETION COMMENT
      00032  0074 00 4 00130         TSX     WRFLX,4                                                          .002
      00033  3 00006 0 00104         PAR     DTOF,,6                                                          .004
                  
      00034 -0500 00 0 00122  GONE   CAL     MODE          GET THE MODE 
      00035  0774 00 4 00000  XR4    AXT     **,4          RESTORE XRS  
      00036  0441 00 0 00125         LDI     SVSI          AND THE SI   
      00037  0020 00 4 00005         TRA     5,4           RETURN 
1            DELETE ALL VERSIONS OF AN OLD FILE.                                                 PAGE 2     
                  
      00040                   ASK    CALL    $OCRBC(MODE)  CONVERT TO BCD     
      00040  0074 00 4 00000         TSX     $OCRBC,4                                                         .002
      00041  3 00000 0 00122         PAR     MODE                                                             .004
      00042 -0501 00 0 00151         ORA     =O605757000000 MASK PROPERLY     
      00043  0602 00 0 00112         SLW     BCMODE        AND STORE IN COMMENT     
                  
      00044                          CALL    WRFLXA((FNAM-1,,11)) 
      00044  0074 00 4 00131         TSX     WRFLXA,4                                                         .002
      00045  3 00013 0 00106         PAR     FNAM-1,,11                                                       .004
                  
      00046                          CALL    RDFLXA((BUFF,,1))    
      00046  0074 00 4 00132         TSX     RDFLXA,4                                                         .002
      00047  3 00001 0 00121         PAR     BUFF,,1                                                          .004
                  
      00050 -0500 00 0 00121         CAL     BUFF          LOOK AT ANSWER     
      00051  0771 00 0 00022         ARS     18            ..     
      00052  0322 00 0 00143         ERA     =H000YES      CHECK FOR SPECIFIC 'YES' 
      00053 -0100 00 0 00075         TNZ     NODEL         NON-ZERO IF 'NO' OR GARBAGE    
                  
      00054                          CALL    CHFILE(FNAM,FNAM+2,=1,=-0,=-0,NODEL)   
      00054  0074 00 4 00133         TSX     CHFILE,4                                                         .002
      00055  3 00000 0 00107         PAR     FNAM                                                             .004
      00056  3 00000 0 00111         PAR     FNAM+2                                                           .004
      00057  3 00000 0 00141         PAR     =1                                                               .004
      00060  3 00000 0 00147         PAR     =-0                                                              .004
      00061  3 00000 0 00147         PAR     =-0                                                              .004
      00062  3 00000 0 00075         PAR     NODEL                                                            .004
                  
      00063                          CALL    DELFIL(FNAM,FNAM+2,NODEL) DELETE IT NOW
      00063  0074 00 4 00127         TSX     DELFIL,4                                                         .002
      00064  3 00000 0 00107         PAR     FNAM                                                             .004
      00065  3 00000 0 00111         PAR     FNAM+2                                                           .004
      00066  3 00000 0 00075         PAR     NODEL                                                            .004
      00067  0020 00 0 00034         TRA     GONE          ..     
                  
      00070 -0500 00 0 00123  FSERR  CAL     ERCODE        GET FSTATE ERROR CODE    
      00071  0402 00 0 00142         SUB     =3            ANYTHING ELSE THAN 3     
      00072  0100 00 0 00034         TZE     GONE          IS A LINK ERROR    
                  
      00073                   LINKD  COMENT  LNKMSG,3,(FILE IS A LINK.),A     
      00073  0074 00 4 00131         TSX     WRFLXA,4                                                         .003
      00074  3 00003 0 00134         PAR     LNKMSG,,3                                                        .005
                                                           DO NOT DELETE A LINK     
                  
      00075                   NODEL  CALL    WRFLXA((FNAM,,3))    
      00075  0074 00 4 00131         TSX     WRFLXA,4                                                         .002
      00076  3 00003 0 00107         PAR     FNAM,,3                                                          .004
      00077                          COMENT  NOT,2,( NOT DELETED) 
      00077  0074 00 4 00130         TSX     WRFLX,4                                                          .003
      00100  3 00002 0 00137         PAR     NOT,,2                                                           .005
                  
      00101  0522 00 0 00035         XEC     XR4           RESTORE XRS  
      00102  0441 00 0 00125         LDI     SVSI          AND SI 
      00103  0020 60 4 00004         TRA*    4,4           ERROR RETURN 
1            DELETE ALL VERSIONS OF AN OLD FILE.                                                 PAGE 3     
                  
      00104  242543256325     DTOF   BCI     3,DELETED THE OLDER  
      00107  000000000000     FNAM   VFD     36/0,O36/576057575757,36/0 
      00112  606060606060     BCMODE BCI     6,       MODE. DO YOU WANT TO DELETE I 
      00120  637360605757            VFD     H6/T,O30/7360605757  
      00121  0 00000 0 00000  BUFF   PZE  
      00122  0 00000 0 00000  MODE   PZE  
      00123  0 00000 0 00000  ERCODE PZE  
      00124  0 00000 0 00000  PSW    PZE  
      00125  0 00000 0 00000  SVSI   PZE  
                  
      00126                          RMT     *             REMOTE SEQUENCES   
      00126  0101 00 0 00146  FSTATE TIA     =HFSTATE                                                         .002
      00127  0101 00 0 00145  DELFIL TIA     =HDELFIL                                                         .002
      00130  0101 00 0 00153  WRFLX  TIA     =HWRFLX                                                          .002
      00131  0101 00 0 00152  WRFLXA TIA     =HWRFLXA                                                         .002
      00132  0101 00 0 00150  RDFLXA TIA     =HRDFLXA                                                         .002
      00133  0101 00 0 00144  CHFILE TIA     =HCHFILE                                                         .002
      00134  263143256031     LNKMSG BCI     3,FILE IS A LINK.                                                .002
      00137  604546636024     NOT    BCI     2, NOT DELETED                                                   .002
                  
                                     END  
                  
        LITERALS  
      00141  000000000001     
      00142  000000000003     
      00143  000000702562     
      00144  233026314325     
      00145  242543263143     
      00146  266263216325     
      00147  400000000000     
      00150  512426436721     
      00151  605757000000     
      00152  665126436721     
      00153  665126436760     
1            DELETE ALL VERSIONS OF AN OLD FILE.                                                 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        154 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         40    ASK    24
         25    DEL      
        137    NOT   100
        124    PSW    11,   31
         35    XR4     1,  101
        121   BUFF    15,   47,   50
        104   DTOF    33
        107   FNAM     5,    7,   13,   14,   26,   27,   45,   55,   56,   64,   65,   76
         34   GONE    67,   72
        122   MODE     3,   20,   34,   41
        125   SVSI     2,   36,  102
         70  FSERR    16
         73  LINKD    22
         75  NODEL    30,   53,   62,   66
          0  OCRBC    40
        130  WRFLX    32,   77
        112 BCMODE    43
        133 CHFILE    54
          1 DELETE     0
        127 DELFIL    25,   63
        123 ERCODE    17,   70
        126 FSTATE    12
        134 LNKMSG    74
        132 RDFLXA    46
        131 WRFLXA    44,   73,   75
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            DISK ERROR SUBROUTINE - CALLS PRNTER VIA NEXCOM.                                    PAGE 1     
                  
                                             REVISED 9/14/65 - NOEL I. MORRIS 
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00000         ENTRY   DSKER    
                  
      00000 -0500 00 0 00006  DSKER  CAL     =HPRNTER 
      00001  0560 00 0 00004         LDQ     =O-71    
      00002                          CALL    NEXCOM   
      00002  0074 00 4 00003         TSX     NEXCOM,4                                                         .002
                  
      00003                          RMT     *             REMOTE SEQUENCES   
      00003  0101 00 0 00005  NEXCOM TIA     =HNEXCOM                                                         .002
                  
                                     END  
                  
        LITERALS  
      00004  400000000071     
      00005  452567234644     
      00006  475145632551     
1            DISK ERROR SUBROUTINE - CALLS PRNTER VIA NEXCOM.                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          7 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          0  DSKER     0
          3 NEXCOM     2
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




   WHO   BCD 05/12/69 2320.6   14731         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE    WHO1   MAD            05/12/69    2257.8
-                 
       WHO            PRINT LIST OF CTSS USERS.                                                        LM00001    
                      CODED IN MAD BY N. MORRIS - 2/67                                                 LM00002    
                                                                                                       LM00003    
                                                                                                       LM00004    
                  NORMAL MODE IS INTEGER                                                          *001 LM00005    
                                                                                                       LM00006    
                  INSERT FILE .XOR.                                                               *002 LM00007    
                  DEFINE BINARY OPERATOR .XOR., PRECEDENCE SAME AS .A.                            *003 LM00001    
                  MODE STRUCTURE 1 .XOR. 1 TO 1                                                   *004 LM00002    
             JMP      *+1,LA,*+3                                                                  *005 LM00003    
             JMP      *+15,AT,*+1                                                                 *006 LM00004    
             JMP      *+17,BT,*+9                                                                 *007 LM00005    
             JMP      *+1,MQ,*+3                                                                  *008 LM00006    
             JMP      *+9,AT,*+1                                                                  *009 LM00007    
             JMP      *+13,BT,*+4                                                                 *010 LM00008    
             JMP      *+1,AC,*+9                                                                  *011 LM00009    
             STO      T                                                                           *012 LM00010    
             JMP      *+7                                                                         *013 LM00011    
             STQ      T                                                                           *014 LM00012    
             JMP      *+5                                                                         *015 LM00013    
             SLW      T                                                                           *016 LM00014    
             JMP      *+3                                                                         *017 LM00015    
             XCL                                                                                  *018 LM00016    
             JMP      *+2                                                                         *019 LM00017    
             CAL      A                                                                           *020 LM00018    
             ERA      B                                                                           *021 LM00019    
             OUT      LAC                                                                         *022 LM00020    
             XCL                                                                                  *023 LM00021    
             ERA      A                                                                           *024 LM00022    
             OUT      LAC                                                                         *025 LM00023    
             END                                                                                  *026 LM00024    
                                                                                                       LM00008    
                  VECTOR VALUES      N = $N     $                                                 *027 LM00009    
                  VECTOR VALUES NUSERS = $NUSERS$                                                 *028 LM00010    
                  VECTOR VALUES  PROBN = $PROBN $                                                 *029 LM00011    
                  VECTOR VALUES  PROGN = $PROGN $                                                 *030 LM00012    
                  VECTOR VALUES  UNAME = $UNAME $                                                 *031 LM00013    
                  VECTOR VALUES  GRPNO = $GRPNO.$                                                 *032 LM00014    
                  VECTOR VALUES UNITID = $UNITID$                                                 *033 LM00015    
                  VECTOR VALUES  UTIME = $UTIME $                                                 *034 LM00016    
                  VECTOR VALUES  ITIME = $ITIME $                                                 *035 LM00017    
                  VECTOR VALUES SYSNAM = $000000$                                                 *036 LM00018    
                  VECTOR VALUES SYSTIM = $SYSTIM$                                                 *037 LM00019    
                  VECTOR VALUES SYSDAT = $SYSDAT$                                                 *038 LM00020    
                  VECTOR VALUES     PB = $PB    $                                                 *039 LM00021    
                                                                                                       LM00022    
                                                                                                       LM00023    
                  DIMENSION ARG (19), TUSED (50)                                                  *040 LM00024    
                  DIMENSION TIME (1), TIMEON (1)                                                  *041 LM00025    
                  VECTOR VALUES SPACE = 605757575757K                                             *042 LM00026    
                  VECTOR VALUES FENCE = 777777777777K                                             *043 LM00027    
                  VECTOR VALUES SLPTIM = 0                                                        *044 LM00028    
                                                                                                       LM00029    
                                                                                                       LM00030    
                  BOOLEAN NUMBER.                                                                 *045 LM00031    
                  VECTOR VALUES FIRST = 1B                                                        *046 LM00032    
                  VECTOR VALUES HEADSW = 1B                                                       *047 LM00033    
                  VECTOR VALUES PROBSW = 0B                                                       *048 LM00034    
                  VECTOR VALUES PROGSW = 0B                                                       *049 LM00035    
                  VECTOR VALUES NAMESW = 0B                                                       *050 LM00036    
                  VECTOR VALUES GRPSW = 0B                                                        *051 LM00037    
                  VECTOR VALUES FOUND = 0B                                                        *052 LM00038    
                                                                                                       LM00039    
                                                                                                       LM00040    
                                                                                                       LM00041    
                                                                                                       LM00042    
                      PICK UP AND CHECK PARAMETERS.                                                    LM00043    
                                                                                                       LM00044    
                  PRMESS.                                                                         *053 LM00045    
                  SETBRK. (CHN)                                                                   *054 LM00046    
                  GCLS. (ARG, 0)                                                                  *055 LM00047    
                                                                                                       LM00048    
                  THROUGH ARGLP, FOR I = 1, 1, I .G. 19 .OR. ARG (I) .E. FENCE                    *056 LM00049    
                                                                                                       LM00050    
                  WHENEVER ARG (I) .E. $ GROUP$ .OR. ARG (I) .E. $   GRP$                         *057 LM00051    
                       HEADSW = 0B                                                                *058 LM00052    
                       GRPSW = 1B                                                                 *059 LM00053    
                       I = I + 1                                                                  *060 LM00054    
                       WHENEVER ARG (I) .E. FENCE .OR. .NOT. NUMBER. (ARG (I)),                   *061 LM00055    
                1           TRANSFER TO ILARG                                                     *061 LM00056    
                       TGRP = BCDEC. (ARG (I))                                                    *062 LM00057    
                                                                                                       LM00058    
                  OR WHENEVER ARG (I) .E. $     *$                                                *063 LM00059    
                       HEADSW = 0B                                                                *064 LM00060    
                       TRANSFER TO CKPG                                                           *065 LM00061    
                                                                                                       LM00062    
                  OR WHENEVER NUMBER. (ARG (I))                                                   *066 LM00063    
                       SLPTIM = BCDEC. (ARG (I)) * 60                                             *067 LM00064    
                                                                                                       LM00065    
                  OTHERWISE                                                                       *068 LM00066    
                       HEADSW = 0B                                                                *069 LM00067    
                       PROBSW = 1B                                                                *070 LM00068    
                       TPROB = ARG (I)                                                            *071 LM00069    
                       GTPROB. (TPROB, ILARG)                                                     *072 LM00070    
                                                                                                       LM00071    
      CKPG             I = I + 1                                                                  *073 LM00072    
                       WHENEVER ARG (I) .E. FENCE                                                 *074 LM00073    
                            ARG(I) = $     *$                                                     *075 LM00074    
                            TRANSFER TO ENDST                                                     *076 LM00075    
                       END OF CONDITIONAL                                                         *077 LM00076    
                       WHENEVER NUMBER. (ARG (I))                                                 *078 LM00077    
                            PROGSW = 1B                                                           *079 LM00078    
                            TPROG = ARG (I)                                                       *080 LM00079    
                       OR WHENEVER ARG (I) .E. $     *$                                           *081 LM00080    
                            CONTINUE                                                              *082 LM00081    
                       OTHERWISE                                                                  *083 LM00082    
                            NAMESW = 1B                                                           *084 LM00083    
                            TNAME = ARG (I)                                                       *085 LM00084    
                       END OF CONDITIONAL                                                         *086 LM00085    
                                                                                                       LM00086    
                  END OF CONDITIONAL                                                              *087 LM00087    
                                                                                                       LM00088    
      ARGLP       CONTINUE                                                                        *088 LM00089    
                                                                                                       LM00090    
                                                                                                       LM00091    
                                                                                                       LM00092    
                      GET COMMON SYMBOL VALUES.                                                        LM00093    
                                                                                                       LM00094    
      ENDST       N      = COMLOC. (N     )                                                       *089 LM00095    
                  NUSERS = COMLOC. (NUSERS)                                                       *090 LM00096    
                  PROBN  = COMLOC. (PROBN )                                                       *091 LM00097    
                  PROGN  = COMLOC. (PROGN )                                                       *092 LM00098    
                  UNAME  = COMLOC. (UNAME )                                                       *093 LM00099    
                  GRPNO  = COMLOC. (GRPNO )                                                       *094 LM00100    
                  UNITID = COMLOC. (UNITID)                                                       *095 LM00101    
                  UTIME  = COMLOC. (UTIME )                                                       *096 LM00102    
                  ITIME  = COMLOC. (ITIME )                                                       *097 LM00103    
                  SYSNAM = COMLOC. (SYSNAM)                                                       *098 LM00104    
                  SYSTIM = COMLOC. (SYSTIM)                                                       *099 LM00105    
                  SYSDAT = COMLOC. (SYSDAT)                                                       *100 LM00106    
                  PB     = COMLOC. (PB    )                                                       *101 LM00107    
                                                                                                       LM00108    
                                                                                                       LM00109    
                      PRINT OUT NAME OF SYSTEM.                                                        LM00110    
                                                                                                       LM00111    
                  PRMESS. (SYSNAM, $ STARTED AT$, CTIME. (GLOC. (SYSTIM)),                        *102 LM00112    
                1      DATEF. (GLOC. (SYSDAT)), $.$)                                              *102 LM00113    
                                                                                                       LM00114    
                                                                                                       LM00115    
                      PRINT OUT NUMBER OF USERS.                                                       LM00116    
                                                                                                       LM00117    
      LOOP        PRMESS.                                                                         *103 LM00118    
                  FTIME. (GTDYTM. (0), TIME (1), TIME)                                            *104 LM00119    
                  PRMESS. (CVT. (GLOC. (NUSERS), 2), $  USERS AT$,                                *105 LM00120    
                1      BZEL. (TIME), DATEF. (TIME (1)), $.$)                                      *105 LM00121    
                                                                                                       LM00122    
                                                                                                       LM00123    
                      CHECK FOR BACKGROUND PERCENTAGE.                                                 LM00124    
                                                                                                       LM00125    
                  PCNT = GLOC. (PB)                                                               *106 LM00126    
                  WHENEVER PCNT .NE. 0                                                            *107 LM00127    
                       PRMESS. ($BACKGROUND PERCENTAGE =$, CVT. (PCNT, 2), $.$)                   *108 LM00128    
                  END OF CONDITIONAL                                                              *109 LM00129    
                  PRMESS.                                                                         *110 LM00130    
                                                                                                       LM00131    
                                                                                                       LM00132    
                      PRINT HEADER, IF DESIRED.                                                        LM00133    
                  WHENEVER HEADSW                                                                 *111 LM00134    
                       PRMESS. (HEADR ... 8)                                                      *112 LM00135    
                  END OF CONDITIONAL                                                              *113 LM00136    
                  VECTOR VALUES HEADR = $LINE   USER     NAME  GRP UNIT  TUSED TIMEON$            *114 LM00137    
                                                                                                       LM00138    
                                                                                                       LM00139    
                      PRINT USER STATISTICS.                                                           LM00140    
                                                                                                       LM00141    
                  FOUND = 0B                                                                      *115 LM00142    
                  THROUGH USRLP, FOR I = 1, 1, I .G. N                                            *116 LM00143    
                                                                                                       LM00144    
                      PICK UP AND CHECK PROBLEM NUMBER.                                                LM00145    
                  PROB = GLOC. (PROBN + I)                                                        *117 LM00146    
                  WHENEVER (PROB .NE. TPROB .AND. PROBSW) .OR.                                    *118 LM00147    
                1      PROB .E. 0, TRANSFER TO USRLP                                              *118 LM00148    
                                                                                                       LM00149    
                      PICK UP AND CHECK PROGRAMMER NUMBER.                                             LM00150    
                  PROG = GLOC. (PROGN+ I)                                                         *119 LM00151    
                  WHENEVER PROG .NE. TPROG .AND. PROGSW, TRANSFER TO USRLP                        *120 LM00152    
                                                                                                       LM00153    
                      PICK UP AND CHECK USER NAME.                                                     LM00154    
                  NAME = GLOC. (UNAME + I)                                                        *121 LM00155    
                  WHENEVER NAME .NE. TNAME .AND. NAMESW, TRANSFER TO USRLP                        *122 LM00156    
                                                                                                       LM00157    
                      PICK UP AND CHECK PARTY GROUP.                                                   LM00158    
                  GRP = GLOC. (GRPNO + I)                                                         *123 LM00159    
                  WHENEVER .ABS. GRP .NE. TGRP .AND. GRPSW, TRANSFER TO USRLP                     *124 LM00160    
                                                                                                       LM00161    
                  TUSED = GLOC. (UTIME + I)                                                       *125 LM00162    
                  PRMESA. (CVT. (I, 2), PROB, PROG, SPACE, NAME,                                  *126 LM00163    
                1      SCVT. (GRP, 3), SPACE, GLOC. (UNITID + I),                                 *126 LM00164    
                2      CTIME. (TUSED) )                                                           *126 LM00165    
                                                                                                       LM00166    
                  WHENEVER FIRST                                                                  *127 LM00167    
                       FTIME. (GLOC. (ITIME + I), TIMEON (1), TIMEON)                             *128 LM00168    
                       WHENEVER TIMEON (1) .E. LASTIM                                             *129 LM00169    
                            TIMEON (1) = $ $                                                      *130 LM00170    
                       OTHERWISE                                                                  *131 LM00171    
                            LASTIM = TIMEON (1)                                                   *132 LM00172    
                            TIMEON (1) = DATEF. (TIMEON (1))                                      *133 LM00173    
                       END OF CONDITIONAL                                                         *134 LM00174    
                       PRMESS. (SPACE, BZEL. (TIMEON), TIMEON (1))                                *135 LM00175    
                                                                                                       LM00176    
                  OTHERWISE                                                                       *136 LM00177    
                       DELTA = TUSED - TUSED (I)                                                  *137 LM00178    
                       WHENEVER DELTA .GE. 0                                                      *138 LM00179    
                            PRMESS. (CTIME. (DELTA))                                              *139 LM00180    
                       OTHERWISE                                                                  *140 LM00181    
                            PRMESS.                                                               *141 LM00182    
                       END OF CONDITIONAL                                                         *142 LM00183    
                                                                                                       LM00184    
                  END OF CONDITIONAL                                                              *143 LM00185    
                                                                                                       LM00186    
                  TUSED (I) = TUSED                                                               *144 LM00187    
                  FOUND = 1B                                                                      *145 LM00188    
                                                                                                       LM00189    
      USRLP       CONTINUE                                                                        *146 LM00190    
                                                                                                       LM00191    
                                                                                                       LM00192    
                      END OF STATISTICS - EXIT OR SLEEP.                                               LM00193    
                                                                                                       LM00194    
                  WHENEVER (PROBSW .OR. PROGSW .OR. GRPSW .OR. NAMESW)                            *147 LM00195    
                1      .AND. .NOT. FOUND                                                          *147 LM00196    
                       PRMESS. ($USER(S) NOT FOUND.$)                                             *148 LM00197    
                  END OF CONDITIONAL                                                              *149 LM00198    
                                                                                                       LM00199    
                  PRMESS.                                                                         *150 LM00200    
                  WHENEVER FIRST                                                                  *151 LM00201    
                       FIRST = 0B                                                                 *152 LM00202    
                       HEADR (6) = $D DUSE$                                                       *153 LM00203    
                       HEADR (7) = $D     $                                                       *154 LM00204    
                  END OF CONDITIONAL                                                              *155 LM00205    
                                                                                                       LM00206    
                  WHENEVER SLPTIM .NE. 0                                                          *156 LM00207    
                       SLEEP.                                                                     *157 LM00208    
                  OTHERWISE                                                                       *158 LM00209    
                       CHNCOM. (1)                                                                *159 LM00210    
                  END OF CONDITIONAL                                                              *160 LM00211    
                  TRANSFER TO LOOP                                                                *161 LM00212    
                                                                                                       LM00213    
                                                                                                       LM00214    
                                                                                                       LM00215    
                      ILARG - COMPLAIN ABOUT BAD PARAMETER.                                            LM00216    
                                                                                                       LM00217    
      ILARG       PRMESS. ($ILLEGAL PARAMETER:$, ARG (I))                                         *162 LM00218    
      CHN         CHNCOM. (0)                                                                     *163 LM00219    
                                                                                                       LM00220    
                                                                                                       LM00221    
                      CONVERSION FUNCTIONS.                                                            LM00222    
                                                                                                       LM00223    
                  INTERNAL FUNCTION CTIME. (T) =                                                  *164 LM00224    
                1      BZEL. (HRMIN. (T))                                                         *164 LM00225    
                                                                                                       LM00226    
                  INTERNAL FUNCTION DATEF. (D) =                                                  *165 LM00227    
                1      ((D .RS. 6) .A. 7777K6) .V.                                                *165 LM00228    
                2      ((D .RS. 12) .A. 7777K) .V.                                                *165 LM00229    
                3      $ 00/00$                                                                   *165 LM00230    
                                                                                                       LM00231    
                  INTERNAL FUNCTION NUMBER. (N) =                                                 *166 LM00232    
                1      ZEL. (N) .A. $ $ .E. 0                                                     *166 LM00233    
                                                                                                       LM00234    
                  INTERNAL FUNCTION CVT. (I, N) =                                                 *167 LM00235    
                1      BZEL. (DEFBC. (I)) .XOR.                                                   *167 LM00236    
                2      (373737373737K .LS. (N * 6))                                               *167 LM00237    
                                                                                                       LM00238    
                  INTERNAL FUNCTION (I, N)                                                        *168 LM00239    
                  ENTRY TO SCVT.                                                                  *169 LM00240    
                                                                                                       LM00241    
                  WHENEVER I .RS. 35 .E. 0                                                        *170 LM00242    
                       FUNCTION RETURN CVT. (I, N)                                                *171 LM00243    
                  OTHERWISE                                                                       *172 LM00244    
                       FUNCTION RETURN RJUST. (((LJUST. (BZEL. (DEFBC. (I)))) .RS. 6)             *173 LM00245    
                1           .V. $-00000$) .XOR.                                                   *173 LM00246    
                2           (373737373737K .LS. (N * 6))                                          *173 LM00247    
                  END OF CONDITIONAL                                                              *174 LM00248    
                  END OF FUNCTION                                                                 *175 LM00249    
                                                                                                       LM00250    
                                                                                                       LM00251    
                                                                                                       LM00252    
                                                                                                       LM00253    
                                                                                                       LM00254    
                  END OF PROGRAM                                                                  *176 LM00255    
                                         MODE STRUCTURE 1 .XOR. 1 TO 1        004  LM00002
 (THE NUMERIC FORM OF THE OPERATOR-MODE ARGUMENT IS    11111 )    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01433 TRANSFER VECTOR LENGTH  00024 PROGRAM BEGINS    00273
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ARGLP  00031   4        GRP    00071   1        NAMESW 00110 A 2        PROG   00121   1        TIME   00134 A 1  
      ARG    00063 A 1        GRPSW  00072 A 2        N      00111 A 1        PROGSW 00122 A 2        TNAME  00135   1  
      CHN    00032   4        HEADR  00102 A 1        NUSERS 00112 A 1        SLPTIM 00123 A 1        TPROB  00136   1  
      CKPG   00033   4        HEADSW 00103 A 2        PB     00113 A 1        SPACE  00124 A 1        TPROG  00137   1  
      DELTA  00064   1        ILARG  00035   4        PCNT   00114   1        SYSDAT 00125 A 1        TUSED  00222 A 1  
      ENDST  00034   4        I      00104   1        PROBN  00115 A 1        SYSNAM 00126 A 1        UNAME  00223 A 1  
      FENCE  00065 A 1        ITIME  00105 A 1        PROB   00116   1        SYSTIM 00127 A 1        UNITID 00224 A 1  
      FIRST  00066 A 2        LASTIM 00106   1        PROBSW 00117 A 2        TGRP   00130   1        USRLP  00037   4  
      FOUND  00067 A 2        LOOP   00036   4        PROGN  00120 A 1        TIMEON 00132 A 1        UTIME  00225 A 1  
      GRPNO  00070 A 1        NAME   00107   1                                                                          
0FUNCTION DICTIONARY    
      BCDEC  00000   1        BZEL   00001   1        CHNCOM 00002   1        COMLOC 00003   1        DEFBC  00004   1  
      EXIT   00005   1        FTIME  00006   1        GCLS   00007   1        GLOC   00010   1        GTDYTM 00011   1  
      GTPROB 00012   1        HRMIN  00013   1        .SETUP 00014   1        LJUST  00015   1        PRMESA 00016   1  
      PRMESS 00017   1        RJUST  00020   1        SETBRK 00021   1        SLEEP  00022   1        ZEL    00023   1  
      CTIME  00024   1        CVT    00025   1        DATEF  00026   1        NUMBER 00027   2        SCVT   00030   1  
0ABSOLUTE CONSTANTS     
 00256 -000000000000     00236 +000000000043     00255 +373737373737     00262 -200000610000     00241 +007777000000    
 00232 +000000000006     00240 +000000007777     00234 +000000000014     00260 -042563255135     00257 -036047215121    
 00252 +314343252721     00246 +246060606060     00245 +246024646225     00251 +264664452433     00254 +346045466360    
 00272 -246225517462     00266 -206060606060     00231 +000000000003     00233 +000000000010     00242 +212725601360    
 00250 +255123254563     00261 -066445246047     00243 +222123422751     00271 -226021636060     00267 -206064622551    
 00230 +000000000002     00253 +336060606060     00247 +252460216360     00270 -206263215163     00237 +000000000074    
 00265 -206060606054     00263 -202751466447     00264 -206060275147     00235 +000000000023     00226 +000000000000    
 00227 +000000000001     00244 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00032 TXL -301142001140       00033 TXL -300427000424       00034 TXL -300471000466       00035 TXL -301140001127      
 00036 TXL -300561000560       00037 TXL -301070001067                                                                  
0PROGRAM    
                 N'R                                                                001  LM00005
                 I'E .XOR.                                                          002  LM00007
                 DEFINE BINARY OPERATOR .XOR., PRECEDENCE SAME AS .A.               003  LM00001
                 MODE STRUCTURE 1 .XOR. 1 TO 1                                      004  LM00002
 00273 TSX +0 07400 4 00014                                                                                             
                 V'S      N = $N     $                                              027  LM00009
 00111     -0 56060 6 06060                                                                                             
                 V'S NUSERS = $NUSERS$                                              028  LM00010
 00112     -0 56462 2 55162                                                                                             
                 V'S  PROBN = $PROBN $                                              029  LM00011
 00115     -0 75146 2 24560                                                                                             
                 V'S  PROGN = $PROGN $                                              030  LM00012
 00120     -0 75146 2 74560                                                                                             
                 V'S  UNAME = $UNAME $                                              031  LM00013
 00223     -2 44521 4 42560                                                                                             
                 V'S  GRPNO = $GRPNO.$                                              032  LM00014
 00070     +2 75147 4 54633                                                                                             
                 V'S UNITID = $UNITID$                                              033  LM00015
 00224     -2 44531 6 33124                                                                                             
                 V'S  UTIME = $UTIME $                                              034  LM00016
 00225     -2 46331 4 42560                                                                                             
                 V'S  ITIME = $ITIME $                                              035  LM00017
 00105     +3 16331 4 42560                                                                                             
                 V'S SYSNAM = $000000$                                              036  LM00018
 00126     +0 00000 0 00000                                                                                             
                 V'S SYSTIM = $SYSTIM$                                              037  LM00019
 00127     -2 27062 6 33144                                                                                             
                 V'S SYSDAT = $SYSDAT$                                              038  LM00020
 00125     -2 27062 2 42163                                                                                             
                 V'S     PB = $PB    $                                              039  LM00021
 00113     -0 72260 6 06060                                                                                             
                 D'N ARG (19), TUSED (50)                                           040  LM00024
                 D'N TIME (1), TIMEON (1)                                           041  LM00025
                 V'S SPACE = 605757575757K                                          042  LM00026
 00124     -2 05757 5 75757                                                                                             
                 V'S FENCE = 777777777777K                                          043  LM00027
 00065     -3 77777 7 77777                                                                                             
                 V'S SLPTIM = 0                                                     044  LM00028
 00123     +0 00000 0 00000                                                                                             
                 B'N NUMBER.                                                        045  LM00031
                 V'S FIRST = 1B                                                     046  LM00032
 00066     +0 00000 0 00001                                                                                             
                 V'S HEADSW = 1B                                                    047  LM00033
 00103     +0 00000 0 00001                                                                                             
                 V'S PROBSW = 0B                                                    048  LM00034
 00117     +0 00000 0 00000                                                                                             
                 V'S PROGSW = 0B                                                    049  LM00035
 00122     +0 00000 0 00000                                                                                             
                 V'S NAMESW = 0B                                                    050  LM00036
 00110     +0 00000 0 00000                                                                                             
                 V'S GRPSW = 0B                                                     051  LM00037
 00072     +0 00000 0 00000                                                                                             
                 V'S FOUND = 0B                                                     052  LM00038
 00067     +0 00000 0 00000                                                                                             
                 PRMESS.                                                            053  LM00045
 00274 TSX +0 07400 4 00017                                                                                             
                 SETBRK. (CHN)                                                      054  LM00046
 00275 TSX +0 07400 4 00021    00276 TXH +3 00000 0 00032                                                               
                 GCLS. (ARG, 0)                                                     055  LM00047
 00277 TSX +0 07400 4 00007    00300 TXH +3 00000 0 00063    00301 TXH +3 00000 0 00226                                 
                 T'H ARGLP, FOR I = 1, 1, I .G. 19 .OR. ARG (I) .E. FENCE           056  LM00049
 00302 CLA +0 50000 0 00227    00303 STO +0 60100 0 00104    00304 TRA +0 02000 0 00310    00305 CLA +0 50000 0 00104   
 00306 ADD +0 40000 0 00227    00307 STO +0 60100 0 00104    00310 LXA +0 53400 1 00104    00311 CLA +0 50000 1 00063   
 00312 SUB +0 40200 0 00065    00313 TZE +0 10000 0 00466    00314 CLA +0 50000 0 00104    00315 SUB +0 40200 0 00235   
 00316 TZE +0 10000 0 00320    00317 TPL +0 12000 0 00466                                                               
                 W'R ARG (I) .E. $ GROUP$ .OR. ARG (I) .E. $   GRP$                 057  LM00051
 00320 CLA +0 50000 1 00063    00321 SUB +0 40200 0 00264    00322 TZE +0 10000 0 00326    00323 CLA +0 50000 1 00063   
 00324 SUB +0 40200 0 00263    00325 TNZ -0 10000 0 00361                                                               
                      HEADSW = 0B                                                   058  LM00052
 00326 CLA +0 50000 0 00226    00327 STO +0 60100 0 00103                                                               
                      GRPSW = 1B                                                    059  LM00053
 00330 CLA +0 50000 0 00227    00331 STO +0 60100 0 00072                                                               
                      I = I + 1                                                     060  LM00054
 00332 CLA +0 50000 0 00104    00333 ADD +0 40000 0 00227    00334 STO +0 60100 0 00104                                 
                      W'R ARG (I) .E. FENCE .OR. .NOT. NUMBER. (ARG (I)),           061  LM00055
                1          T'O ILARG                                                061  LM00056
 00335 CLA +0 50000 0 00104    00336 SUB +0 40200 0 00337    00337 TXH +3 00000 0 00063    00340 STA +0 62100 0 00342   
 00341 TSX +0 07400 4 00027    00342 TXH +3 00000 0 00000    00343 TZE +0 10000 0 00350    00344 LXA +0 53400 1 00104   
 00345 CLA +0 50000 1 00063    00346 SUB +0 40200 0 00065    00347 TNZ -0 10000 0 00351    00350 TRA +0 02000 0 00035   
                      TGRP = BCDEC. (ARG (I))                                       062  LM00057
 00351 CLA +0 50000 0 00104    00352 SUB +0 40200 0 00353    00353 TXH +3 00000 0 00063    00354 STA +0 62100 0 00356   
 00355 TSX +0 07400 4 00000    00356 TXH +3 00000 0 00000    00357 STO +0 60100 0 00130                                 
                 O'R ARG (I) .E. $     *$                                           063  LM00059
 00360 TRA +0 02000 0 00465    00361 LXA +0 53400 1 00104    00362 CLA +0 50000 1 00063    00363 SUB +0 40200 0 00265   
 00364 TNZ -0 10000 0 00371                                                                                             
                      HEADSW = 0B                                                   064  LM00060
 00365 CLA +0 50000 0 00226    00366 STO +0 60100 0 00103                                                               
                      T'O CKPG                                                      065  LM00061
 00367 TRA +0 02000 0 00033                                                                                             
                 O'R NUMBER. (ARG (I))                                              066  LM00063
 00370 TRA +0 02000 0 00465    00371 CLA +0 50000 0 00104    00372 SUB +0 40200 0 00373    00373 TXH +3 00000 0 00063   
 00374 STA +0 62100 0 00376    00375 TSX +0 07400 4 00027    00376 TXH +3 00000 0 00000    00377 TZE +0 10000 0 00412   
                      SLPTIM = BCDEC. (ARG (I)) * 60                                067  LM00064
 00400 CLA +0 50000 0 00104    00401 SUB +0 40200 0 00402    00402 TXH +3 00000 0 00063    00403 STA +0 62100 0 00405   
 00404 TSX +0 07400 4 00000    00405 TXH +3 00000 0 00000    00406 XCA +0 13100 0 00000    00407 MPY +0 20000 0 00237   
 00410 STQ -0 60000 0 00123                                                                                             
                 O'E                                                                068  LM00066
 00411 TRA +0 02000 0 00465                                                                                             
                      HEADSW = 0B                                                   069  LM00067
 00412 CLA +0 50000 0 00226    00413 STO +0 60100 0 00103                                                               
                      PROBSW = 1B                                                   070  LM00068
 00414 CLA +0 50000 0 00227    00415 STO +0 60100 0 00117                                                               
                      TPROB = ARG (I)                                               071  LM00069
 00416 LXA +0 53400 2 00104    00417 CLA +0 50000 2 00063    00420 STO +0 60100 0 00136                                 
                      GTPROB. (TPROB, ILARG)                                        072  LM00070
 00421 TSX +0 07400 4 00012    00422 TXH +3 00000 0 00136    00423 TXH +3 00000 0 00035                                 
      CKPG            I = I + 1                                                     073  LM00072
 00424 CLA +0 50000 0 00104    00425 ADD +0 40000 0 00227    00426 STO +0 60100 0 00104                                 
                      W'R ARG (I) .E. FENCE                                         074  LM00073
 00427 LXA +0 53400 1 00104    00430 CLA +0 50000 1 00063    00431 SUB +0 40200 0 00065    00432 TNZ -0 10000 0 00436   
                           ARG(I) = $     *$                                        075  LM00074
 00433 CLA +0 50000 0 00265    00434 STO +0 60100 1 00063                                                               
                           T'O ENDST                                                076  LM00075
 00435 TRA +0 02000 0 00034                                                                                             
                      E'L                                                           077  LM00076
                      W'R NUMBER. (ARG (I))                                         078  LM00077
 00436 CLA +0 50000 0 00104    00437 SUB +0 40200 0 00440    00440 TXH +3 00000 0 00063    00441 STA +0 62100 0 00443   
 00442 TSX +0 07400 4 00027    00443 TXH +3 00000 0 00000    00444 TZE +0 10000 0 00453                                 
                           PROGSW = 1B                                              079  LM00078
 00445 CLA +0 50000 0 00227    00446 STO +0 60100 0 00122                                                               
                           TPROG = ARG (I)                                          080  LM00079
 00447 LXA +0 53400 2 00104    00450 CLA +0 50000 2 00063    00451 STO +0 60100 0 00137                                 
                      O'R ARG (I) .E. $     *$                                      081  LM00080
 00452 TRA +0 02000 0 00465    00453 LXA +0 53400 1 00104    00454 CLA +0 50000 1 00063    00455 SUB +0 40200 0 00265   
 00456 TNZ -0 10000 0 00460                                                                                             
                           C'E                                                      082  LM00081
                      O'E                                                           083  LM00082
 00457 TRA +0 02000 0 00465                                                                                             
                           NAMESW = 1B                                              084  LM00083
 00460 CLA +0 50000 0 00227    00461 STO +0 60100 0 00110                                                               
                           TNAME = ARG (I)                                          085  LM00084
 00462 LXA +0 53400 2 00104    00463 CLA +0 50000 2 00063    00464 STO +0 60100 0 00135                                 
                      E'L                                                           086  LM00085
                 E'L                                                                087  LM00087
      ARGLP      C'E                                                                088  LM00089
 00465 TRA +0 02000 0 00305                                                                                             
      ENDST      N      = COMLOC. (N     )                                          089  LM00095
 00466 TSX +0 07400 4 00003    00467 TXH +3 00000 0 00111    00470 STO +0 60100 0 00111                                 
                 NUSERS = COMLOC. (NUSERS)                                          090  LM00096
 00471 TSX +0 07400 4 00003    00472 TXH +3 00000 0 00112    00473 STO +0 60100 0 00112                                 
                 PROBN  = COMLOC. (PROBN )                                          091  LM00097
 00474 TSX +0 07400 4 00003    00475 TXH +3 00000 0 00115    00476 STO +0 60100 0 00115                                 
                 PROGN  = COMLOC. (PROGN )                                          092  LM00098
 00477 TSX +0 07400 4 00003    00500 TXH +3 00000 0 00120    00501 STO +0 60100 0 00120                                 
                 UNAME  = COMLOC. (UNAME )                                          093  LM00099
 00502 TSX +0 07400 4 00003    00503 TXH +3 00000 0 00223    00504 STO +0 60100 0 00223                                 
                 GRPNO  = COMLOC. (GRPNO )                                          094  LM00100
 00505 TSX +0 07400 4 00003    00506 TXH +3 00000 0 00070    00507 STO +0 60100 0 00070                                 
                 UNITID = COMLOC. (UNITID)                                          095  LM00101
 00510 TSX +0 07400 4 00003    00511 TXH +3 00000 0 00224    00512 STO +0 60100 0 00224                                 
                 UTIME  = COMLOC. (UTIME )                                          096  LM00102
 00513 TSX +0 07400 4 00003    00514 TXH +3 00000 0 00225    00515 STO +0 60100 0 00225                                 
                 ITIME  = COMLOC. (ITIME )                                          097  LM00103
 00516 TSX +0 07400 4 00003    00517 TXH +3 00000 0 00105    00520 STO +0 60100 0 00105                                 
                 SYSNAM = COMLOC. (SYSNAM)                                          098  LM00104
 00521 TSX +0 07400 4 00003    00522 TXH +3 00000 0 00126    00523 STO +0 60100 0 00126                                 
                 SYSTIM = COMLOC. (SYSTIM)                                          099  LM00105
 00524 TSX +0 07400 4 00003    00525 TXH +3 00000 0 00127    00526 STO +0 60100 0 00127                                 
                 SYSDAT = COMLOC. (SYSDAT)                                          100  LM00106
 00527 TSX +0 07400 4 00003    00530 TXH +3 00000 0 00125    00531 STO +0 60100 0 00125                                 
                 PB     = COMLOC. (PB    )                                          101  LM00107
 00532 TSX +0 07400 4 00003    00533 TXH +3 00000 0 00113    00534 STO +0 60100 0 00113                                 
                 PRMESS. (SYSNAM, $ STARTED AT$, CTIME. (GLOC. (SYSTIM)),           102  LM00112
                1     DATEF. (GLOC. (SYSDAT)), $.$)                                 102  LM00113
 00535 TSX +0 07400 4 00010    00536 TXH +3 00000 0 00125    00537 STO +0 60100 0 01425    00540 TSX +0 07400 4 00026   
 00541 TXH +3 00000 0 01425    00542 STO +0 60100 0 01425    00543 TSX +0 07400 4 00010    00544 TXH +3 00000 0 00127   
 00545 STO +0 60100 0 01426    00546 TSX +0 07400 4 00024    00547 TXH +3 00000 0 01426    00550 STO +0 60100 0 01426   
 00551 TSX +0 07400 4 00017    00552 TXH +3 00000 0 00126    00553 TXH +3 00000 0 00270    00554 TXH +3 00000 0 00247   
 00555 TXH +3 00000 0 01426    00556 TXH +3 00000 0 01425    00557 TXH +3 00000 0 00253                                 
      LOOP       PRMESS.                                                            103  LM00118
 00560 TSX +0 07400 4 00017                                                                                             
                 FTIME. (GTDYTM. (0), TIME (1), TIME)                               104  LM00119
 00561 TSX +0 07400 4 00011    00562 TXH +3 00000 0 00226    00563 STO +0 60100 0 01426    00564 TSX +0 07400 4 00006   
 00565 TXH +3 00000 0 01426    00566 TXH +3 00000 0 00133    00567 TXH +3 00000 0 00134                                 
                 PRMESS. (CVT. (GLOC. (NUSERS), 2), $  USERS AT$,                   105  LM00120
                1     BZEL. (TIME), DATEF. (TIME (1)), $.$)                         105  LM00121
 00570 TSX +0 07400 4 00026    00571 TXH +3 00000 0 00133    00572 STO +0 60100 0 01426    00573 TSX +0 07400 4 00001   
 00574 TXH +3 00000 0 00134    00575 STO +0 60100 0 01425    00576 TSX +0 07400 4 00010    00577 TXH +3 00000 0 00112   
 00600 STO +0 60100 0 01427    00601 TSX +0 07400 4 00025    00602 TXH +3 00000 0 01427    00603 TXH +3 00000 0 00230   
 00604 STO +0 60100 0 01427    00605 TSX +0 07400 4 00017    00606 TXH +3 00000 0 01427    00607 TXH +3 00000 0 00267   
 00610 TXH +3 00000 0 00271    00611 TXH +3 00000 0 01425    00612 TXH +3 00000 0 01426    00613 TXH +3 00000 0 00253   
                 PCNT = GLOC. (PB)                                                  106  LM00126
 00614 TSX +0 07400 4 00010    00615 TXH +3 00000 0 00113    00616 STO +0 60100 0 00114                                 
                 W'R PCNT .NE. 0                                                    107  LM00127
 00617 CLA +0 50000 0 00114    00620 SUB +0 40200 0 00226    00621 TZE +0 10000 0 00635                                 
                      PRMESS. ($BACKGROUND PERCENTAGE =$, CVT. (PCNT, 2), $.$)      108  LM00128
 00622 TSX +0 07400 4 00025    00623 TXH +3 00000 0 00114    00624 TXH +3 00000 0 00230    00625 STO +0 60100 0 01427   
 00626 TSX +0 07400 4 00017    00627 TXH +3 00000 0 00243    00630 TXH +3 00000 0 00261    00631 TXH +3 00000 0 00250   
 00632 TXH +3 00000 0 00242    00633 TXH +3 00000 0 01427    00634 TXH +3 00000 0 00253                                 
                 E'L                                                                109  LM00129
                 PRMESS.                                                            110  LM00130
 00635 TSX +0 07400 4 00017                                                                                             
                 W'R HEADSW                                                         111  LM00134
 00636 NZT -0 52000 0 00103    00637 TRA +0 02000 0 00642                                                               
                      PRMESS. (HEADR ... 8)                                         112  LM00135
 00640 TSX +0 07400 4 00017    00641 TIX +2 00233 0 00102                                                               
                 E'L                                                                113  LM00136
                 V'S HEADR = $LINE   USER     NAME  GRP UNIT  TUSED TIMEON$         114  LM00137
 00073     -0 64560 6 06060    00074     +2 46063 3 14425    00075     -2 06063 6 46225    00076     -0 76064 4 53163   
 00077     -0 42560 6 02751    00100     -2 06060 6 04521    00101     -2 06462 2 55160    00102     -0 33145 2 56060   
                 FOUND = 0B                                                         115  LM00142
 00642 CLA +0 50000 0 00226    00643 STO +0 60100 0 00067                                                               
                 T'H USRLP, FOR I = 1, 1, I .G. N                                   116  LM00143
 00644 CLA +0 50000 0 00227    00645 STO +0 60100 0 00104    00646 TRA +0 02000 0 00652    00647 CLA +0 50000 0 00104   
 00650 ADD +0 40000 0 00227    00651 STO +0 60100 0 00104    00652 CLA +0 50000 0 00104    00653 SUB +0 40200 0 00111   
 00654 TZE +0 10000 0 00656    00655 TPL +0 12000 0 01070                                                               
                 PROB = GLOC. (PROBN + I)                                           117  LM00146
 00656 CLA +0 50000 0 00115    00657 ADD +0 40000 0 00104    00660 STO +0 60100 0 01427    00661 TSX +0 07400 4 00010   
 00662 TXH +3 00000 0 01427    00663 STO +0 60100 0 00116                                                               
                 W'R (PROB .NE. TPROB .AND. PROBSW) .OR.                            118  LM00147
                1     PROB .E. 0, T'O USRLP                                         118  LM00148
 00664 CLA +0 50000 0 00116    00665 SUB +0 40200 0 00226    00666 TZE +0 10000 0 00675    00667 NZT -0 52000 0 00117   
 00670 TRA +0 02000 0 00674    00671 CLA +0 50000 0 00116    00672 SUB +0 40200 0 00136    00673 TNZ -0 10000 0 00675   
 00674 TRA +0 02000 0 00676    00675 TRA +0 02000 0 00037                                                               
                 PROG = GLOC. (PROGN+ I)                                            119  LM00151
 00676 CLA +0 50000 0 00120    00677 ADD +0 40000 0 00104    00700 STO +0 60100 0 01427    00701 TSX +0 07400 4 00010   
 00702 TXH +3 00000 0 01427    00703 STO +0 60100 0 00121                                                               
                 W'R PROG .NE. TPROG .AND. PROGSW, T'O USRLP                        120  LM00152
 00704 NZT -0 52000 0 00122    00705 TRA +0 02000 0 00712    00706 CLA +0 50000 0 00121    00707 SUB +0 40200 0 00137   
 00710 TZE +0 10000 0 00712    00711 TRA +0 02000 0 00037                                                               
                 NAME = GLOC. (UNAME + I)                                           121  LM00155
 00712 CLA +0 50000 0 00223    00713 ADD +0 40000 0 00104    00714 STO +0 60100 0 01427    00715 TSX +0 07400 4 00010   
 00716 TXH +3 00000 0 01427    00717 STO +0 60100 0 00107                                                               
                 W'R NAME .NE. TNAME .AND. NAMESW, T'O USRLP                        122  LM00156
 00720 NZT -0 52000 0 00110    00721 TRA +0 02000 0 00726    00722 CLA +0 50000 0 00107    00723 SUB +0 40200 0 00135   
 00724 TZE +0 10000 0 00726    00725 TRA +0 02000 0 00037                                                               
                 GRP = GLOC. (GRPNO + I)                                            123  LM00159
 00726 CLA +0 50000 0 00070    00727 ADD +0 40000 0 00104    00730 STO +0 60100 0 01427    00731 TSX +0 07400 4 00010   
 00732 TXH +3 00000 0 01427    00733 STO +0 60100 0 00071                                                               
                 W'R .ABS. GRP .NE. TGRP .AND. GRPSW, T'O USRLP                     124  LM00160
 00734 NZT -0 52000 0 00072    00735 TRA +0 02000 0 00743    00736 CLA +0 50000 0 00071    00737 SSP +0 76000 0 00003   
 00740 SUB +0 40200 0 00130    00741 TZE +0 10000 0 00743    00742 TRA +0 02000 0 00037                                 
                 TUSED = GLOC. (UTIME + I)                                          125  LM00162
 00743 CLA +0 50000 0 00225    00744 ADD +0 40000 0 00104    00745 STO +0 60100 0 01427    00746 TSX +0 07400 4 00010   
 00747 TXH +3 00000 0 01427    00750 STO +0 60100 0 00222                                                               
                 PRMESA. (CVT. (I, 2), PROB, PROG, SPACE, NAME,                     126  LM00163
                1     SCVT. (GRP, 3), SPACE, GLOC. (UNITID + I),                    126  LM00164
                2     CTIME. (TUSED) )                                              126  LM00165
 00751 TSX +0 07400 4 00024    00752 TXH +3 00000 0 00222    00753 STO +0 60100 0 01427    00754 CLA +0 50000 0 00224   
 00755 ADD +0 40000 0 00104    00756 STO +0 60100 0 01426    00757 TSX +0 07400 4 00010    00760 TXH +3 00000 0 01426   
 00761 STO +0 60100 0 01426    00762 TSX +0 07400 4 00030    00763 TXH +3 00000 0 00071    00764 TXH +3 00000 0 00231   
 00765 STO +0 60100 0 01425    00766 TSX +0 07400 4 00025    00767 TXH +3 00000 0 00104    00770 TXH +3 00000 0 00230   
 00771 STO +0 60100 0 01430    00772 TSX +0 07400 4 00016    00773 TXH +3 00000 0 01430    00774 TXH +3 00000 0 00116   
 00775 TXH +3 00000 0 00121    00776 TXH +3 00000 0 00124    00777 TXH +3 00000 0 00107    01000 TXH +3 00000 0 01425   
 01001 TXH +3 00000 0 00124    01002 TXH +3 00000 0 01426    01003 TXH +3 00000 0 01427                                 
                 W'R FIRST                                                          127  LM00167
 01004 NZT -0 52000 0 00066    01005 TRA +0 02000 0 01043                                                               
                      FTIME. (GLOC. (ITIME + I), TIMEON (1), TIMEON)                128  LM00168
 01006 CLA +0 50000 0 00105    01007 ADD +0 40000 0 00104    01010 STO +0 60100 0 01430    01011 TSX +0 07400 4 00010   
 01012 TXH +3 00000 0 01430    01013 STO +0 60100 0 01430    01014 TSX +0 07400 4 00006    01015 TXH +3 00000 0 01430   
 01016 TXH +3 00000 0 00131    01017 TXH +3 00000 0 00132                                                               
                      W'R TIMEON (1) .E. LASTIM                                     129  LM00169
 01020 CLA +0 50000 0 00131    01021 SUB +0 40200 0 00106    01022 TNZ -0 10000 0 01026                                 
                           TIMEON (1) = $ $                                         130  LM00170
 01023 CLA +0 50000 0 00266    01024 STO +0 60100 0 00131                                                               
                      O'E                                                           131  LM00171
 01025 TRA +0 02000 0 01033                                                                                             
                           LASTIM = TIMEON (1)                                      132  LM00172
 01026 CLA +0 50000 0 00131    01027 STO +0 60100 0 00106                                                               
                           TIMEON (1) = DATEF. (TIMEON (1))                         133  LM00173
 01030 TSX +0 07400 4 00026    01031 TXH +3 00000 0 00131    01032 STO +0 60100 0 00131                                 
                      E'L                                                           134  LM00174
                      PRMESS. (SPACE, BZEL. (TIMEON), TIMEON (1))                   135  LM00175
 01033 TSX +0 07400 4 00001    01034 TXH +3 00000 0 00132    01035 STO +0 60100 0 01430    01036 TSX +0 07400 4 00017   
 01037 TXH +3 00000 0 00124    01040 TXH +3 00000 0 01430    01041 TXH +3 00000 0 00131                                 
                 O'E                                                                136  LM00177
 01042 TRA +0 02000 0 01062                                                                                             
                      DELTA = TUSED - TUSED (I)                                     137  LM00178
 01043 LXA +0 53400 2 00104    01044 CLA +0 50000 0 00222    01045 SUB +0 40200 2 00222    01046 STO +0 60100 0 00064   
                      W'R DELTA .GE. 0                                              138  LM00179
 01047 CLA +0 50000 0 00064    01050 SUB +0 40200 0 00226    01051 TZE +0 10000 0 01053    01052 TMI -0 12000 0 01061   
                           PRMESS. (CTIME. (DELTA))                                 139  LM00180
 01053 TSX +0 07400 4 00024    01054 TXH +3 00000 0 00064    01055 STO +0 60100 0 01430    01056 TSX +0 07400 4 00017   
 01057 TXH +3 00000 0 01430                                                                                             
                      O'E                                                           140  LM00181
 01060 TRA +0 02000 0 01062                                                                                             
                           PRMESS.                                                  141  LM00182
 01061 TSX +0 07400 4 00017                                                                                             
                      E'L                                                           142  LM00183
                 E'L                                                                143  LM00185
                 TUSED (I) = TUSED                                                  144  LM00187
 01062 LXA +0 53400 1 00104    01063 CLA +0 50000 0 00222    01064 STO +0 60100 1 00222                                 
                 FOUND = 1B                                                         145  LM00188
 01065 CLA +0 50000 0 00227    01066 STO +0 60100 0 00067                                                               
      USRLP      C'E                                                                146  LM00190
 01067 TRA +0 02000 0 00647                                                                                             
                 W'R (PROBSW .OR. PROGSW .OR. GRPSW .OR. NAMESW)                    147  LM00195
                1     .AND. .NOT. FOUND                                             147  LM00196
 01070 ZET +0 52000 0 00067    01071 TRA +0 02000 0 01106    01072 ZET +0 52000 0 00110    01073 TRA +0 02000 0 01102   
 01074 ZET +0 52000 0 00072    01075 TRA +0 02000 0 01102    01076 ZET +0 52000 0 00122    01077 TRA +0 02000 0 01102   
 01100 NZT -0 52000 0 00117    01101 TRA +0 02000 0 01106                                                               
                      PRMESS. ($USER(S) NOT FOUND.$)                                148  LM00197
 01102 TSX +0 07400 4 00017    01103 TXH +3 00000 0 00272    01104 TXH +3 00000 0 00254    01105 TXH +3 00000 0 00251   
                 E'L                                                                149  LM00198
                 PRMESS.                                                            150  LM00200
 01106 TSX +0 07400 4 00017                                                                                             
                 W'R FIRST                                                          151  LM00201
 01107 NZT -0 52000 0 00066    01110 TRA +0 02000 0 01117                                                               
                      FIRST = 0B                                                    152  LM00202
 01111 CLA +0 50000 0 00226    01112 STO +0 60100 0 00066                                                               
                      HEADR (6) = $D DUSE$                                          153  LM00203
 01113 CLA +0 50000 0 00245    01114 STO +0 60100 0 00074                                                               
                      HEADR (7) = $D     $                                          154  LM00204
 01115 CLA +0 50000 0 00246    01116 STO +0 60100 0 00073                                                               
                 E'L                                                                155  LM00205
                 W'R SLPTIM .NE. 0                                                  156  LM00207
 01117 CLA +0 50000 0 00123    01120 SUB +0 40200 0 00226    01121 TZE +0 10000 0 01124                                 
                      SLEEP.                                                        157  LM00208
 01122 TSX +0 07400 4 00022                                                                                             
                 O'E                                                                158  LM00209
 01123 TRA +0 02000 0 01126                                                                                             
                      CHNCOM. (1)                                                   159  LM00210
 01124 TSX +0 07400 4 00002    01125 TXH +3 00000 0 00227                                                               
                 E'L                                                                160  LM00211
                 T'O LOOP                                                           161  LM00212
 01126 TRA +0 02000 0 00036                                                                                             
      ILARG      PRMESS. ($ILLEGAL PARAMETER:$, ARG (I))                            162  LM00218
 01127 CLA +0 50000 0 00104    01130 SUB +0 40200 0 01131    01131 TXH +3 00000 0 00063    01132 STA +0 62100 0 01137   
 01133 TSX +0 07400 4 00017    01134 TXH +3 00000 0 00252    01135 TXH +3 00000 0 00257    01136 TXH +3 00000 0 00260   
 01137 TXH +3 00000 0 00000                                                                                             
      CHN        CHNCOM. (0)                                                        163  LM00219
 01140 TSX +0 07400 4 00002    01141 TXH +3 00000 0 00226                                                               
                 INTERNAL FUNCTION CTIME. (T) =                                     164  LM00224
                1     BZEL. (HRMIN. (T))                                            164  LM00225
 01142 TRA +0 02000 0 01166    00024 TTR +0 02100 0 01143    01143 SXA +0 63400 2 01153    01144 TSX +0 07400 2 01153   
 01145 TSX +0 07400 4 00013    01146 TXH +3 00000 0 00024    01147 STO +0 60100 0 01165    01150 TSX +0 07400 4 00001   
 01151 TXH +3 00000 0 01165    01152 TRA +0 02000 0 01161    01153 TXH +3 00000 0 00000    01154 SXD -0 63400 1 01153   
 01155 SXA +0 63400 4 01161    01156 CLA +0 50000 4 00001    01157 STO +0 60100 0 01146    01160 TRA +0 02000 2 00001   
 01161 AXT +0 77400 4 00000    01162 LXA +0 53400 2 01153    01163 LXD -0 53400 1 01153    01164 TRA +0 02000 4 00001   
                 INTERNAL FUNCTION DATEF. (D) =                                     165  LM00227
                1     ((D .RS. 6) .A. 7777K6) .V.                                   165  LM00228
                2     ((D .RS. 12) .A. 7777K) .V.                                   165  LM00229
                3     $ 00/00$                                                      165  LM00230
 01166 TRA +0 02000 0 01225    00026 TTR +0 02100 0 01167    01167 SXA +0 63400 2 01211    01170 TSX +0 07400 2 01211   
 01171 CAL -0 50000 0 00234    01172 STA +0 62100 0 01174    01173 CAL -0 50000 0 00024    01174 LGR -0 76500 0 00000   
 01175 ANA -0 32000 0 00240    01176 SLW +0 60200 0 01224    01177 CAL -0 50000 0 00232    01200 STA +0 62100 0 01202   
 01201 CAL -0 50000 0 00024    01202 LGR -0 76500 0 00000    01203 ANA -0 32000 0 00241    01204 ORA -0 50100 0 01224   
 01205 ORA -0 50100 0 00262    01206 SLW +0 60200 0 01224    01207 CLA +0 50000 0 01224    01210 TRA +0 02000 0 01220   
 01211 TXH +3 00000 0 00000    01212 SXD -0 63400 1 01211    01213 SXA +0 63400 4 01220    01214 CLA +0 50000 4 00001   
 01215 STA +0 62100 0 01173    01216 STA +0 62100 0 01201    01217 TRA +0 02000 2 00001    01220 AXT +0 77400 4 00000   
 01221 LXA +0 53400 2 01211    01222 LXD -0 53400 1 01211    01223 TRA +0 02000 4 00001                                 
                 INTERNAL FUNCTION NUMBER. (N) =                                    166  LM00232
                1     ZEL. (N) .A. $ $ .E. 0                                        166  LM00233
 01225 TRA +0 02000 0 01260    00027 TTR +0 02100 0 01226    01226 SXA +0 63400 2 01245    01227 TSX +0 07400 2 01245   
 01230 TSX +0 07400 4 00023    01231 TXH +3 00000 0 00024    01232 STO +0 60100 0 01257    01233 CAL -0 50000 0 01257   
 01234 ANA -0 32000 0 00266    01235 SLW +0 60200 0 01257    01236 CLA +0 50000 0 01257    01237 SUB +0 40200 0 00226   
 01240 TZE +0 10000 0 01243    01241 PXD -0 75400 0 00000    01242 TRA +0 02000 0 01244    01243 CLA +0 50000 0 00227   
 01244 TRA +0 02000 0 01253    01245 TXH +3 00000 0 00000    01246 SXD -0 63400 1 01245    01247 SXA +0 63400 4 01253   
 01250 CLA +0 50000 4 00001    01251 STO +0 60100 0 01231    01252 TRA +0 02000 2 00001    01253 AXT +0 77400 4 00000   
 01254 LXA +0 53400 2 01245    01255 LXD -0 53400 1 01245    01256 TRA +0 02000 4 00001                                 
                 INTERNAL FUNCTION CVT. (I, N) =                                    167  LM00235
                1     BZEL. (DEFBC. (I)) .XOR.                                      167  LM00236
                2     (373737373737K .LS. (N * 6))                                  167  LM00237
 01260 TRA +0 02000 0 01323    00025 TTR +0 02100 0 01261    01261 SXA +0 63400 2 01305    01262 TSX +0 07400 2 01305   
 01263 LDQ +0 56000 0 00024    01264 MPY +0 20000 0 00232    01265 XCA +0 13100 0 00000    01266 STA +0 62100 0 01270   
 01267 CAL -0 50000 0 00255    01270 ALS +0 76700 0 00000    01271 SLW +0 60200 0 01321    01272 TSX +0 07400 4 00004   
 01273 TXH +3 00000 0 00024    01274 STO +0 60100 0 01322    01275 TSX +0 07400 4 00001    01276 TXH +3 00000 0 01322   
 01277 STO +0 60100 0 01322    01300 CAL -0 50000 0 01322    01301 ERA +0 32200 0 01321    01302 SLW +0 60200 0 01322   
 01303 CLA +0 50000 0 01322    01304 TRA +0 02000 0 01315    01305 TXH +3 00000 0 00000    01306 SXD -0 63400 1 01305   
 01307 SXA +0 63400 4 01315    01310 CLA +0 50000 4 00001    01311 STO +0 60100 0 01273    01312 CLA +0 50000 4 00002   
 01313 STA +0 62100 0 01263    01314 TRA +0 02000 2 00001    01315 AXT +0 77400 4 00000    01316 LXA +0 53400 2 01305   
 01317 LXD -0 53400 1 01305    01320 TRA +0 02000 4 00001                                                               
                 INTERNAL FUNCTION (I, N)                                           168  LM00239
 01323 TRA +0 02000 0 01424                                                                                             
                 E'O SCVT.                                                          169  LM00240
 01324 TRA +0 02000 0 01327    00030 TTR +0 02100 0 01325    01325 SXA +0 63400 2 01403    01326 TSX +0 07400 2 01403   
                 W'R I .RS. 35 .E. 0                                                170  LM00242
 01327 CAL -0 50000 0 00236    01330 STA +0 62100 0 01332    01331 CAL -0 50000 0 00024    01332 LGR -0 76500 0 00000   
 01333 SLW +0 60200 0 01422    01334 CLA +0 50000 0 01422    01335 SUB +0 40200 0 00226    01336 TNZ -0 10000 0 01344   
                      F'N CVT. (I, N)                                               171  LM00243
 01337 TSX +0 07400 4 00025    01340 TXH +3 00000 0 00024    01341 TXH +3 00000 0 00024    01342 TRA +0 02000 0 01416   
                 O'E                                                                172  LM00244
 01343 TRA +0 02000 0 01402                                                                                             
                      F'N RJUST. (((LJUST. (BZEL. (DEFBC. (I)))) .RS. 6)            173  LM00245
                1          .V. $-00000$) .XOR.                                      173  LM00246
                2          (373737373737K .LS. (N * 6))                             173  LM00247
 01344 LDQ +0 56000 0 00024    01345 MPY +0 20000 0 00232    01346 XCA +0 13100 0 00000    01347 STA +0 62100 0 01351   
 01350 CAL -0 50000 0 00255    01351 ALS +0 76700 0 00000    01352 SLW +0 60200 0 01422    01353 TSX +0 07400 4 00004   
 01354 TXH +3 00000 0 00024    01355 STO +0 60100 0 01423    01356 TSX +0 07400 4 00001    01357 TXH +3 00000 0 01423   
 01360 STO +0 60100 0 01423    01361 TSX +0 07400 4 00015    01362 TXH +3 00000 0 01423    01363 STO +0 60100 0 01423   
 01364 CAL -0 50000 0 00232    01365 STA +0 62100 0 01367    01366 CAL -0 50000 0 01423    01367 LGR -0 76500 0 00000   
 01370 ORA -0 50100 0 00256    01371 SLW +0 60200 0 01423    01372 TSX +0 07400 4 00020    01373 TXH +3 00000 0 01423   
 01374 STO +0 60100 0 01423    01375 CAL -0 50000 0 01423    01376 ERA +0 32200 0 01422    01377 SLW +0 60200 0 01423   
 01400 CLA +0 50000 0 01423    01401 TRA +0 02000 0 01416                                                               
                 E'L                                                                174  LM00248
                 E'N                                                                175  LM00249
 01402 TSX +0 07400 4 00005    01403 TXH +3 00000 0 00000    01404 SXD -0 63400 1 01403    01405 SXA +0 63400 4 01416   
 01406 CLA +0 50000 4 00001    01407 STA +0 62100 0 01331    01410 STO +0 60100 0 01340    01411 STO +0 60100 0 01354   
 01412 CLA +0 50000 4 00002    01413 STO +0 60100 0 01341    01414 STA +0 62100 0 01344    01415 TRA +0 02000 2 00001   
 01416 AXT +0 77400 4 00000    01417 LXA +0 53400 2 01403    01420 LXD -0 53400 1 01403    01421 TRA +0 02000 4 00001   
                 E'M                                                                176  LM00255
 01424 TSX +0 07400 4 00005                                                                                             
1            GTPROB - GET PROBLEM NUMBER FOR LOGIN COMMAND.                      05/12/69 2258.4 PAGE 1     
                  
                                             2/19/66 - NOEL I. MORRIS   
                  
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                              *     
                              *      CALLING SEQUENCE -     
                              *     
                              *      GTPROB. (PROBN, ERR)   
                              *     
                              *      PROBN  - CONTAINS UNCONVERTED PROBLEM NUMBER.  AT COMPLETION     
                              *              OF CONVERSION, IT WILL CONTAIN CONVERTED PROBLEM NUMBER. 
                              *      ERR    - ERROR LOCATION FOR ILLEGAL PROBLEM NUMBER.  
                              *     
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                  
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00000         ENTRY   GTPROB   
                  
      00000  0634 00 2 00034  GTPROB SXA     GTPX,2        SAVE XR2     
                  
      00001  0560 60 4 00001         LDQ*    1,4           GET UNCONVERTED PROBLEM NUMBER 
      00002 -0600 00 0 00037         STQ     BAD           SAVE FOR ERROR COMMENT   
                  
      00003  0774 00 2 00036         AXT     30,2          EXTRACT THE LETTER 
      00004 -0754 00 0 00000  PBLOOP ZAC                   ..     
      00005 -0763 00 0 00006         LGL     6             ..     
      00006 -0340 00 0 00044         LAS     =H00000       CHECK FOR NON-BLANK
      00007  0020 00 0 00021         TRA     FCHAR         NON-BLANK FOUND    
      00010  0020 00 0 00012         TRA     *+2           ..     
      00011  0020 00 0 00021         TRA     FCHAR         ..     
      00012  2 00006 2 00004         TIX     PBLOOP,2,6    ..     
                  
      00013  0634 00 4 00016  ERR    SXA     SVX4,4        SAVE XR4     
      00014                          COMENT  BAD,5(       IS NOT A PROBLEM NUMBER)  
      00014  0074 00 4 00036         TSX     WRFLX,4                                                          .003
      00015  3 00005 0 00037         PAR     BAD,,5                                                           .005
      00016  0774 00 4 00000  SVX4   AXT     **,4          RESTORE XR4  
      00017  0522 00 0 00034         XEC     GTPX          RESTORE XR2  
      00020  0020 60 4 00002         TRA*    2,4           ERROR RETURN 
                  
                  
      00021  0767 00 0 00030  FCHAR  ALS     24            SHIFT TO CORRECT POSITION
      00022 -0501 00 0 00046         ORA     =H 00000      AND OR IN PRECEDING BLANK
      00023  0602 60 4 00001         SLW*    1,4           SAVE THIS PART     
      00024 -0320 00 0 00045         ANA     =H0 0000      MUST BE NON-NUMERIC
      00025  0100 00 0 00013         TZE     ERR           ..     
                  
      00026 -0754 00 0 00000         ZAC                   ..     
      00027 -0765 00 2 00044         LGR     36,2          RIGHT-JUSTIFY REMAINING CHARACTERS   
      00030 -0130 00 0 00000         XCL                   ..     
      00031 -0602 60 4 00001         ORS*    1,4           OR INTO PROBLEM NUMBER   
      00032 -0320 00 0 00050         ANA     =O777760606060 MUST BE NUMERIC   
1            GTPROB - GET PROBLEM NUMBER FOR LOGIN COMMAND.                      05/12/69 2258.4 PAGE 2     
                  
      00033 -0100 00 0 00013         TNZ     ERR           ..     
                  
      00034  0774 00 2 00000  GTPX   AXT     **,2          RESTORE XR2  
      00035  0020 00 4 00003         TRA     3,4           RETURN 
                  
                  
      00036                          RMT     *             REMOTE SEQUENCES.  
      00036  0101 00 0 00047  WRFLX  TIA     =HWRFLX                                                          .002
      00037  606060606060     BAD    BCI     5,       IS NOT A PROBLEM NUMBER                                 .002
      00040  603162604546     
      00041  636021604751     
      00042  462243254460     
      00043  456444222551     
                  
                                     END  
                  
        LITERALS  
      00044  000000000060     
      00045  006000000000     
      00046  600000000000     
      00047  665126436760     
      00050  777760606060     
1            GTPROB - GET PROBLEM NUMBER FOR LOGIN COMMAND.                      05/12/69 2258.4 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         51 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         37    BAD     2,   15
         13    ERR    25,   33
         34   GTPX     0,   17
         16   SVX4    13
         21  FCHAR     7,   11
         36  WRFLX    14
          0 GTPROB     0
          4 PBLOOP    12
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




 WRITE   BCD 05/12/69 1851.2    8648         00000    
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 1     
                  
                                             5/24/66 - NOEL I. MORRIS   
                  
                       00005         ENTRY   0  
                       00113         ENTRY   PRWORD   
                       00123         ENTRY   PRBUFF   
                       00167         ENTRY   TYLINE   
                       00170         ENTRY   TYWORD   
                  
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                  
        TRANSFER VECTOR 
      00000  276347514622     GTPROB
      00001  637047466463     TYPOUT
      00002  637047253145     TYPEIN
                  
            LINKAGE DIRECTOR  
      00003  000000000000     
      00004  000000000000     
                  
                       00016  WDSLIN EQU     14 
                       00014  ICWDS  EQU     WDSLIN-2 
                       00011  ABITS  EQU     9  
                       00004  ACHR   EQU     36/ABITS 
                       00014  CBITS  EQU     12 
                       00003  CCHR   EQU     36/CBITS 
                       00170  INSIZE EQU     120
                       00550  N.IN   EQU     360
                       00550  N.OUT  EQU     360
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 2     
                           INITIALIZE.                                              
                  
      00005  0760 00 0 00016         EAXM                  7 XRS  
                  
      00006                          CALL    SETBRK(BRKXIT) SET A BREAK LEVEL 
      00006  0074 00 4 02200         TSX     SETBRK,4                                                         .002
      00007  3 00000 0 00375         PAR     BRKXIT                                                           .004
                  
      00010                          CALL    GETCOM(1)     GET FIRST PARAMETER
      00010  0074 00 4 02201         TSX     GETCOM,4                                                         .002
      00011  3 00000 0 00001         PAR     1                                                                .004
      00012  0602 00 0 00411         SLW     PROB          STORE PROBLEM NO.  
      00013  0322 00 0 02270         ERA     =H(REST)      CHECK FOR SLEEP    
      00014  0100 00 0 00306         TZE     REST          GO SLEEP     
                  
                  
      00015                          CALL    $GTPROB(PROB,CHNXIT) CONVERT PROBLEM NO.     
      00015  0074 00 4 00000         TSX     $GTPROB,4                                                        .002
      00016  3 00000 0 00411         PAR     PROB                                                             .004
      00017  3 00000 0 00401         PAR     CHNXIT                                                           .004
                  
      00020                          CALL    GETCOM(2)     GET PROGRAMMER NO. 
      00020  0074 00 4 02201         TSX     GETCOM,4                                                         .002
      00021  3 00000 0 00002         PAR     2                                                                .004
      00022  0602 00 0 00412         SLW     PROG          STORE PROGRAMMER NO.     
                  
      00023                          CALL    ALLOW(PROB,PROG) PERMIT THE USER 
      00023  0074 00 4 02202         TSX     ALLOW,4                                                          .002
      00024  3 00000 0 00411         PAR     PROB                                                             .004
      00025  3 00000 0 00412         PAR     PROG                                                             .004
                  
      00026 -0500 00 0 00411         CAL     PROB          SET WPROB AND WPROG
      00027  0602 00 0 00414         SLW     WPROB         FOR WRMESS   
      00030 -0500 00 0 00412         CAL     PROG          ..     
      00031  0602 00 0 00415         SLW     WPROG         ..     
                  
      00032                   BEGIN  CALL    SETFUL        INTO 12-BIT MODE   
      00032  0074 00 4 02203         TSX     SETFUL,4                                                         .002
                  
      00033 -0500 00 0 00426         CAL     BGNMSG        GET BEGINNING MESSAGE    
      00034  0602 00 0 00430         SLW     TBUFF         ..     
      00035                          CALL    WRITE(CHNXIT) AND SEND OUT INITIAL MESSAGE   
      00035  0074 00 4 00237         TSX     WRITE,4                                                          .002
      00036  3 00000 0 00401         PAR     CHNXIT                                                           .004
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 3     
                           READIN - READ INPUT AND DISPATCH ON IT.                  
                  
      00037  0520 00 0 00417  LOOP   ZET     ETXSW.        CHECK FOR 'ETX' RECEIVED 
      00040  0020 00 0 00401         TRA     CHNXIT        EXIT ON 'ETX'
                  
      00041                   READIN CALL    RDFLXA((TBUFF,,WDSLIN)) READ INPUT     
      00041  0074 00 4 02204         TSX     RDFLXA,4                                                         .002
      00042  3 00016 0 00430         PAR     TBUFF,,WDSLIN                                                    .004
      00043  0602 00 0 00416         SLW     RDWRD         SAVE RETURN WORD FROM 'RDFLXA' 
                  
      00044                          CALL    COMCHK(SEND)  CHECK FOR I/C MESSAGE    
      00044  0074 00 4 00302         TSX     COMCHK,4                                                         .002
      00045  3 00000 0 00051         PAR     SEND                                                             .004
                  
      00046                          CALL    RECMES(READIN) INTERCONSOLE, RECEIVE THE MESSAGE   
      00046  0074 00 4 00057         TSX     RECMES,4                                                         .002
      00047  3 00000 0 00041         PAR     READIN                                                           .004
      00050  0020 00 0 00037         TRA     LOOP          ..     
                  
      00051                   SEND   CALL    INPUT(READIN) PROCESS CONSOLE INPUT    
      00051  0074 00 4 00135         TSX     INPUT,4                                                          .002
      00052  3 00000 0 00041         PAR     READIN                                                           .004
      00053  0601 00 0 02177         STO     CHRCNT        SAVE NO. OF CHARACTERS READ    
                  
      00054                          CALL    SNDMES(CHRCNT) SEND OUT THE MESSAGE    
      00054  0074 00 4 00177         TSX     SNDMES,4                                                         .002
      00055  3 00000 0 02177         PAR     CHRCNT                                                           .004
      00056  0020 00 0 00037         TRA     LOOP          ..     
                  
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 4     
                           RECMES - RECEIVE I/C MESSAGE.                            
                  
      00057  0634 00 4 00102  RECMES SXA     RECX4,4       SAVE XR4     
                  
      00060  0534 00 2 02175         LXA     INCHR,2       INPUT CHARACTER INDEX    
      00061  0774 00 4 00014         AXT     ICWDS,4       NO. OF WORDS IN TBUFF    
                  
      00062  0560 00 4 00446  LDQ.R  LDQ     TBUFF+WDSLIN,4 PICK UP WORD
      00063  0774 00 1 00044         AXT     36,1          ..     
      00064 -0754 00 0 00000  ZAC.R  ZAC                   ..     
      00065 -0763 00 0 00011         LGL     ABITS         EXTRACT CHARACTER  
      00066 -0340 00 0 00425         LAS     C.EOT         CHECK FOR EOT CHARACTER  
      00067  0020 00 0 00071         TRA     *+2           ..     
      00070  0020 00 0 00104         TRA     EOT.R         END OF THIS MESSAGE
                  
      00071  1 00001 2 00072         TXI     *+1,2,1       STEP INDEX   
      00072  0602 00 2 02004         SLW     AIBUFF,2      AND DEPOSIT CHARACTER    
      00073  0322 00 0 00424         ERA     C.ETX         CHECK FOR 'ETX' CHARACTER
      00074 -0100 00 0 00076         TNZ     *+2           ..     
      00075 -0625 00 0 00417         STL     ETXSW.        SET 'ETX' SWITCH   
                  
      00076  3 00547 2 00104         TXH     EOT.R,2,N.IN-1 TEST FOR BUFFER OVERFLOW
      00077  2 00011 1 00064         TIX     ZAC.R,1,ABITS LOOP   
      00100  2 00001 4 00062         TIX     LDQ.R,4,1     ..     
                  
      00101  0634 00 2 02175         SXA     INCHR,2       SAVE INPUT INDEX   
      00102  0774 00 4 00000  RECX4  AXT     **,4          RESTORE XR4  
      00103  0020 60 4 00001         TRA*    1,4           TAKE INCOMPLETE MESSAGE RETURN 
                  
                  
      00104  0634 00 2 02175  EOT.R  SXA     INCHR,2       SAVE INPUT INDEX   
                  
      00105                          CALL    $TYPOUT(AIBUFF,INCHR) TYPE OUT LINE    
      00105  0074 00 4 00001         TSX     $TYPOUT,4                                                        .002
      00106  3 00000 0 02004         PAR     AIBUFF                                                           .004
      00107  3 00000 0 02175         PAR     INCHR                                                            .004
                  
      00110  0600 00 0 02175         STZ     INCHR         RESET INPUT INDEX  
      00111  0522 00 0 00102         XEC     RECX4         RESTORE XR4  
      00112  0020 00 4 00002         TRA     2,4           AND TAKE NORMAL RETURN   
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 5     
                           PRWORD/PRBUFF - TYPEWRITER OUTPUT BUFFERING ROUTINES.    
                  
      00113  0634 00 4 00121  PRWORD SXA     PRWX4,4       SAVE XR4     
                  
      00114 -0500 60 4 00001         CAL*    1,4           PICK UP OUTPUT WORD
      00115  0774 00 4 00034  PRINDX AXT     2*WDSLIN,4    BUFFER INDEX 
      00116  0602 00 4 00464         SLW     TBUFF+2*WDSLIN,4 STORE WORD
      00117 -2 00001 4 00130         TNX     PRW,4,1       CHECK FOR FULL BUFFER    
      00120  0634 00 4 00115         SXA     PRINDX,4      SAVE INDEX   
                  
      00121  0774 00 4 00000  PRWX4  AXT     **,4          RESTORE XR4  
      00122  0020 00 4 00002         TRA     2,4           AND RETURN   
                  
      00123  1 00001 4 00124  PRBUFF TXI     *+1,4,1       ADJUST XR4   
      00124  0634 00 4 00121         SXA     PRWX4,4       AND SAVE IT  
                  
      00125  0535 00 4 00115         LAC     PRINDX,4      PICK UP PRINT INDEX
      00126  1 00034 4 00127         TXI     *+1,4,2*WDSLIN CALCULATE SIZE OF BUFFER
      00127 -0634 00 4 00131         SXD     PRW+1,4       AND SET UP CALL TO WRFLXA
                  
      00130                   PRW    CALL    WRFLXA((TBUFF,,2*WDSLIN)) PRINT THE LINE     
      00130  0074 00 4 02205         TSX     WRFLXA,4                                                         .002
      00131  3 00034 0 00430         PAR     TBUFF,,2*WDSLIN                                                  .004
                  
      00132  0774 00 4 00034         AXT     2*WDSLIN,4    RESET BUFFER POINTER     
      00133 -0634 00 4 00131         SXD     PRW+1,4       ..     
      00134  0020 00 0 00120         TRA     PRWX4-1       AND RETURN   
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 6     
                           INPUT - READ CONSOLE AND CONVERT TO ASCII.               
                  
      00135  0634 00 4 00151  INPUT  SXA     INX4,4        SAVE XR4     
                  
      00136  0774 00 2 00000  INDEX  AXT     0,2           INPUT WORD INDEX   
      00137  0774 00 4 00016         AXT     WDSLIN,4      TBUFF INDEX  
      00140 -0500 00 4 00446  CAL.I  CAL     TBUFF+WDSLIN,4 PICK UP WORD
      00141  1 00001 2 00142         TXI     *+1,2,1       STEP INPUT INDEX   
      00142  0602 00 2 02174         SLW     INBUFF,2      DEPOSIT WORD 
      00143  3 00167 2 00153         TXH     FULLIN,2,INSIZE-1 CHECK FOR OVERFLOW   
      00144  2 00001 4 00140         TIX     CAL.I,4,1     LOOP   
                  
      00145  0441 00 0 00416         LDI     RDWRD         PICK UP RDFLXA RETURN WORD     
      00146  0056 00  040000         RNT     40000         TEST FOR BREAK     
      00147  0020 00 0 00153         TRA     FULLIN        BREAK FOUND, CONVERT INPUT     
                  
      00150  0634 00 2 00136         SXA     INDEX,2       SAVE INDEX   
      00151  0774 00 4 00000  INX4   AXT     **,4          RESTORE XR4  
      00152  0020 60 4 00001         TRA*    1,4           TAKE INCOMPLETE RETURN   
                  
                  
      00153  0634 00 0 00136  FULLIN ZSA     INDEX         RESET INDICES
      00154  0634 00 0 00171         ZSA     TYNDX         ..     
                  
      00155                          CALL    $TYPEIN(AOBUFF,OUTCHR) CONVERT TO ASCII
      00155  0074 00 4 00002         TSX     $TYPEIN,4                                                        .002
      00156  3 00000 0 01234         PAR     AOBUFF                                                           .004
      00157  3 00000 0 02176         PAR     OUTCHR                                                           .004
                  
      00160  0734 00 2 00000         PAX     ,2            LENGTH OF LINE IN XR2    
      00161 -0500 00 0 00425         CAL     C.EOT         SET LAST CHARACTER TO 'EOT'    
      00162  1 00001 2 00163         TXI     *+1,2,1       ..     
      00163  0602 00 2 01234         SLW     AOBUFF,2      ..     
      00164  0754 00 2 00000         PXA     ,2            CORRECT COUNT IN AC
                  
      00165  0522 00 0 00151         XEC     INX4          RESTORE XR4  
      00166  0020 00 4 00002         TRA     2,4           AND TAKE NORMAL RETURN   
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 7     
                           TYLINE/TYWORD - TYPEWRITER INPUT SUPPLY ROUTINES.        
                  
      00167  0020 00 4 00001  TYLINE TRA     1,4           JUST RETURN  
                  
                  
      00170  0634 00 4 00175  TYWORD SXA     TYX4,4        SAVE XR4     
                  
      00171  0774 00 4 00000  TYNDX  AXT     0,4           PICK UP SUPPLY INDEX     
      00172  1 00001 4 00173         TXI     *+1,4,1       STEP INDEX   
      00173  0500 00 4 02174         CLA     INBUFF,4      PICK UP WORD 
      00174  0634 00 4 00171         SXA     TYNDX,4       AND SAVE IT  
                  
      00175  0774 00 4 00000  TYX4   AXT     **,4          RESTORE XR4  
      00176  0020 00 4 00001         TRA     1,4           AND RETURN WITH WORD     
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 8     
                           SNDMES - PACK ASCII MESSAG AND SEND IT OUT.              
                  
      00177  0634 00 4 00235  SNDMES SXA     SNDX4,4       SAVE XR4     
      00200 -0500 60 4 00001         CAL*    1,4           PICK UP CHARACTER COUNT  
      00201  0734 00 2 00000         PAX     ,2            AND SET 'TXH' INSTRUCTION
      00202 -0634 00 2 00220         SXD     TXH.O,2       ..     
                  
      00203  0774 00 2 00001         AXT     1,2           UNPACKED BUFFER INDEX    
      00204  0774 00 4 00014  NXT.O  AXT     ICWDS,4       PACKED BUFFER INDEX
      00205  0774 00 1 00044         AXT     36,1          SHIFT INDEX  
      00206  0560 00 2 01234  LDQ.O  LDQ     AOBUFF,2      PICK UP CHARACTER  
      00207 -0773 00 0 00033         RQL     36-ABITS      LEFT-JUSTIFY 
      00210 -0500 00 4 00444         CAL     TBUFF+ICWDS,4 PICK UP PARTIAL PACKED WORD    
      00211 -0763 00 0 00011         LGL     ABITS         PACK   
      00212  0602 00 4 00444         SLW     TBUFF+ICWDS,4 AND STORE    
      00213 -0320 00 0 02250         ANA     =O777         MASK RIGHT-MOST CHARACTER
      00214  0322 00 0 00424         ERA     C.ETX         TEST FOR 'ETX' CHARACTER 
      00215 -0100 00 0 00217         TNZ     *+2           ..     
      00216 -0625 00 0 00417         STL     ETXSW.        SET 'ETX' SWITCH   
      00217  1 00001 2 00220         TXI     *+1,2,1       STEP INDEX   
      00220  3 00000 2 00226  TXH.O  TXH     END.O,2,**    TEST FOR COMPLETION
                  
      00221  2 00011 1 00206         TIX     LDQ.O,1,ABITS NEXT CHARACTER     
      00222  2 00001 4 00205         TIX     NXT.O+1,4,1   START NEW WORD     
                  
      00223                          CALL    WRITE(CHNXIT) SEND OUT BUFFER    
      00223  0074 00 4 00237         TSX     WRITE,4                                                          .002
      00224  3 00000 0 00401         PAR     CHNXIT                                                           .004
      00225  0020 00 0 00204         TRA     NXT.O         AND GO BACK FOR MORE     
                  
                  
      00226 -0500 00 4 00444  END.O  CAL     TBUFF+ICWDS,4 PICK UP LAST WORD  
      00227 -2 00011 1 00232         TNX     *+3,1,ABITS   LEFT-JUSTIFY 
      00230 -0763 00 0 00011         LGL     ABITS         ..     
      00231  0020 00 0 00227         TRA     *-2           ..     
      00232  0602 00 4 00444         SLW     TBUFF+ICWDS,4 AND STORE    
                  
      00233                          CALL    WRITE(CHNXIT) WRITE OUT LAST BUFFER FULL     
      00233  0074 00 4 00237         TSX     WRITE,4                                                          .002
      00234  3 00000 0 00401         PAR     CHNXIT                                                           .004
                  
      00235  0774 00 4 00000  SNDX4  AXT     **,4          RESTORE XR4  
      00236  0020 00 4 00001         TRA     1,4           AND RETURN   
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 9     
                           WRITE - CALL WRMESS TO SEND MESSAGE.                     
                  
      00237  0634 00 4 00257  WRITE  SXA     WRX4,4        SAVE XR4     
                  
      00240 -0500 00 4 00001         CAL     1,4           GET ERROR RETURN   
      00241  0621 00 0 00301         STA     WERRET        AND SET IT   
      00242  0600 00 0 00420         STZ     FULL.         RESET BUFFER FULL INDIC. 
                  
      00243                   WRM    CALL    WRMESS(WPROB,WPROG(TBUFF,,ICWDS)) SEND THE MESSAGE 
      00243  0074 00 4 02206         TSX     WRMESS,4                                                         .002
      00244  3 00000 0 00414         PAR     WPROB                                                            .004
      00245  3 00000 0 00415         PAR     WPROG                                                            .004
      00246  3 00014 0 00430         PAR     TBUFF,,ICWDS                                                     .004
      00247  0734 00 4 00000         PAX     ,4            RETURN CODE IN XR4 
      00250  0020 00 4 00254         TRA     WERROR,4      DISPATCH ON RETURN CODE  
                  
      00251  0020 00 0 00277         TRA     WERR3         PERMISSION DENIED  
      00252  0020 00 0 00270         TRA     WERR2         BUFFER FULL  
      00253  0020 00 0 00261         TRA     WERR1         USER NOT LOGGED IN 
                       00254  WERROR SYN     *  
                  
      00254  0520 00 0 00420         ZET     FULL.         CHECK FOR BUFFER OVERFLOW
      00255                          COMENT  CONTIN,6(0P1L1E1A1S1E0 1C1O1N1T1I1N1U1E0.)   
      00255  0074 00 4 02207         TSX     WRFLX,4                                                          .003
      00256  3 00006 0 02210         PAR     CONTIN,,6                                                        .005
                  
      00257  0774 00 4 00000  WRX4   AXT     **,4          RESTORE XR4  
      00260  0020 00 4 00002         TRA     2,4           AND RETURN   
                  
                  
      00261                   WERR1  CALL    SETBCD        INTO 6-BIT MODE    
      00261  0074 00 4 02216         TSX     SETBCD,4                                                         .002
      00262                          CALL    WRFLXA((WPROB,,2)) PRINT PROBN AND PROGN     
      00262  0074 00 4 02205         TSX     WRFLXA,4                                                         .002
      00263  3 00002 0 00414         PAR     WPROB,,2                                                         .004
      00264                          CALL    SETFUL        ..     
      00264  0074 00 4 02203         TSX     SETFUL,4                                                         .002
      00265                          COMENT  NOLOG,6(0 1I1S0 1N1O1T0 1L1O1G1G1E1D0 1I1N0.)
      00265  0074 00 4 02207         TSX     WRFLX,4                                                          .003
      00266  3 00006 0 02217         PAR     NOLOG,,6                                                         .005
      00267  0020 00 0 00301         TRA     WERRET        ..     
                  
      00270 -0520 00 0 00420  WERR2  NZT     FULL.         CHECK FOR BUFFER ALREADY FULL  
      00271                          COMENT  STOP,7(0P1L1E1A1S1E0 1S1T1O1P0 1T1Y1P1I1N1G0.)     
      00271  0074 00 4 02207         TSX     WRFLX,4                                                          .003
      00272  3 00007 0 02225         PAR     STOP,,7                                                          .005
      00273 -0625 00 0 00420         STL     FULL.         SET FULL INDIC.    
      00274 -0500 00 0 02247         CAL     =1            GET OUT OF CORE AND SLEEP
      00275                          CALL    SLEEP         ..     
      00275  0074 00 4 02234         TSX     SLEEP,4                                                          .002
      00276  0020 00 0 00243         TRA     WRM           GO TRY TO WRITE AGAIN    
                  
      00277                   WERR3  COMENT  DENY,6(OP1E1R1M1I1S1S1I1O1N0 1D1E1N1I1E1D0.) 
      00277  0074 00 4 02207         TSX     WRFLX,4                                                          .003
      00300  3 00006 0 02235         PAR     DENY,,6                                                          .005
      00301  0020 00 0 00000  WERRET TRA     **            TAKE ERROR RETURN  
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 10    
                           INTERCONSOLE UTILITY ROUTINES.                           
                  
      00302  0441 00 0 00430  COMCHK LDI     TBUFF         PICK UP FIRST WORD OF MESSAGE  
      00303 -0056 00  770000         LNT     770000        TEST FOR '77' CHARACTER  
      00304  0020 60 4 00001         TRA*    1,4           ERROR RETURN IF NOT INTERCONSOLE     
      00305  0020 00 4 00002         TRA     2,4           NORMAL RETURN
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 11    
                           REST - SLEEPING PROGRAM.                                 
                  
      00306                   REST   CALL    GETCOM(2)     PICK UP SLEEPING PARAMETER     
      00306  0074 00 4 02201         TSX     GETCOM,4                                                         .002
      00307  3 00000 0 00002         PAR     2                                                                .004
      00310  0602 00 0 00422         SLW     NOISE.        ..     
      00311                          CALL    GETCOM(3)     GET ALLOWED PROBLEM NO.  
      00311  0074 00 4 02201         TSX     GETCOM,4                                                         .002
      00312  3 00000 0 00003         PAR     3                                                                .004
      00313  0602 00 0 00411         SLW     PROB          ..     
      00314                          CALL    GETCOM(4)     AND ALLOWED PROGRAMMER NO.     
      00314  0074 00 4 02201         TSX     GETCOM,4                                                         .002
      00315  3 00000 0 00004         PAR     4                                                                .004
      00316  0602 00 0 00412         SLW     PROG          ..     
      00317 -0625 00 0 00421         STL     NAP.          SET INTERCONSOLE SLEEP INDIC.  
                  
      00320                          CALL    ALLOW(PROB,PROG) ALLOW COMMUNICATION   
      00320  0074 00 4 02202         TSX     ALLOW,4                                                          .002
      00321  3 00000 0 00411         PAR     PROB                                                             .004
      00322  3 00000 0 00412         PAR     PROG                                                             .004
                  
      00323                          CALL    UPDATE        NOW IS A GOOD TIME TO UPDATE U.F.D.  
      00323  0074 00 4 02243         TSX     UPDATE,4                                                         .002
                  
      00324 -0520 00 0 00422  RSLOOP NZT     NOISE.        CHECK FOR SLEEP PRINT    
      00325                          CALL    PTIME         GO PRINT TIME COMMENT    
      00325  0074 00 4 00354         TSX     PTIME,4                                                          .002
                  
      00326 -0500 00 0 00374  BKTOSL CAL     SLTIME        GET TIME FOR SLEEPING    
      00327                          CALL    SLEEP         AND GO TO SLEEP    
      00327  0074 00 4 02234         TSX     SLEEP,4                                                          .002
                  
      00330                          CALL    RDMESS((TBUFF,,WDSLIN)) CHECK FOR INPUT
      00330  0074 00 4 02244         TSX     RDMESS,4                                                         .002
      00331  3 00016 0 00430         PAR     TBUFF,,WDSLIN                                                    .004
      00332  0020 00 0 00324         TRA     RSLOOP        IF NONE, BACK TO SLEEP   
                  
      00333                          CALL    COMCHK(BKTOSL) CHECK FOR INTERCONSOLE MESSAGE
      00333  0074 00 4 00302         TSX     COMCHK,4                                                         .002
      00334  3 00000 0 00326         PAR     BKTOSL                                                           .004
                  
      00335 -0500 00 0 00430         CAL     TBUFF         PICK UP PROBLEM NO. OF SENDER  
      00336  0322 00 0 02251         ERA     =O170000000000 RESET THE '77' BITS     
      00337  0602 00 0 00414         SLW     WPROB         ..     
      00340 -0500 00 0 00431         CAL     TBUFF+1       PROGRAMMER NO. OF SENDER 
      00341  0602 00 0 00415         SLW     WPROG         ..     
                  
      00342                          CALL    WRFLX((FROM,,3)) IDENTIFY SENDER 
      00342  0074 00 4 02207         TSX     WRFLX,4                                                          .002
      00343  3 00003 0 00413         PAR     FROM,,3                                                          .004
                  
      00344                          CALL    ALLOW(WPROB,WPROG) ALLOW THE SENDER ONLY     
      00344  0074 00 4 02202         TSX     ALLOW,4                                                          .002
      00345  3 00000 0 00414         PAR     WPROB                                                            .004
      00346  3 00000 0 00415         PAR     WPROG                                                            .004
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 12    
                           REST - SLEEPING PROGRAM.                                 
                  
      00347  0020 00 0 00032         TRA     BEGIN         AND BEGIN COMMUNICATIONS 
                  
                  
      00350                   NAPXIT CALL    ALLOW(PROB,PROG) ALLOW REQUESTED USERS 
      00350  0074 00 4 02202         TSX     ALLOW,4                                                          .002
      00351  3 00000 0 00411         PAR     PROB                                                             .004
      00352  3 00000 0 00412         PAR     PROG                                                             .004
                  
      00353  0020 00 0 00326         TRA     BKTOSL        AND GO BACK TO SLEEP     
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 13    
                           PTIME - PRINT SLEEP TIME FOR USER.                       
                  
      00354  0634 00 4 00365  PTIME  SXA     PTX4,4        SAVE XR4     
      00355  0634 00 2 00364         SXA     PTX2,2        AND XR2
                  
      00356                          CALL    WRFLX((COMNT,,2)) PRINT SLEEP MESSAGE  
      00356  0074 00 4 02207         TSX     WRFLX,4                                                          .002
      00357  3 00002 0 00372         PAR     COMNT,,2                                                         .004
                  
      00360  0534 00 4 00373         LXA     COMNT+1,4     PICK UP TIME 
      00361  1 00100 4 00362         TXI     *+1,4,DMIN    INCREASE MINUTES   
      00362  3 50500 4 00367         TXH     HRS,4,MAXMIN  CHECK FOR OVERFLOW 
      00363  0634 00 4 00373  NEWTIM SXA     COMNT+1,4     SAVE NEW MINUTES   
      00364  0774 00 2 00000  PTX2   AXT     **,2          RESTORE XRS  
      00365  0774 00 4 00000  PTX4   AXT     **,4          ..     
      00366  0020 00 4 00001         TRA     1,4           AND RETURN   
                  
      00367 -0534 00 2 00373  HRS    LXD     COMNT+1,2     PICK UP HOURS PART OF TIME     
      00370  1 00001 2 00371         TXI     *+1,2,1       INCREASE BY 1
      00371  1 77200 4 00363         TXI     NEWTIM,4,-6*DMIN SET MINUTES BACK TO ZERO    
                  
                      000100  DMIN   BOOL    100
                      050500  MAXMIN BOOL    50500    
                  
      00372  636023462425     COMNT  VFD     H6/T,O6/60,H24/CODE,O24/60600035 
      00373  606000350000     
                  
      00374  0 00000 0 01130  SLTIME PZE     60*10    
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 14    
                           EXIT FROM I/C ROUTINES.                                  
                  
                       00375  BRKXIT SYN     *  
      00375 -0500 00 0 00427         CAL     ETXMSG        GET ETX MESSAGE    
      00376  0602 00 0 00430         SLW     TBUFF         AND PLACE IN BUFFER
      00377                          CALL    WRITE(CHNXIT) SEND OUT MESSAGE   
      00377  0074 00 4 00237         TSX     WRITE,4                                                          .002
      00400  3 00000 0 00401         PAR     CHNXIT                                                           .004
                  
      00401                   CHNXIT CALL    FORBID        FORBID ALL COMMUNICATION 
      00401  0074 00 4 02245         TSX     FORBID,4                                                         .002
      00402                          CALL    SETBCD        AND RETURN TO 6-BIT MODE 
      00402  0074 00 4 02216         TSX     SETBCD,4                                                         .002
      00403                          CALL    WRFLX((*,,0)) PRINT A SINGLE C.R.
      00403  0074 00 4 02207         TSX     WRFLX,4                                                          .002
      00404  3 00000 0 00404         PAR     *,,0                                                             .004
                  
      00405  0520 00 0 00421         ZET     NAP.          CHECK FOR SLEEPING 
      00406  0020 00 0 00350         TRA     NAPXIT        YES, GO BACK TO SLEEP    
                  
      00407                          CALL    CHNCOM(0)     EXIT TO CHNCOM     
      00407  0074 00 4 02246         TSX     CHNCOM,4                                                         .002
      00410  3 00000 0 00000         PAR     0                                                                .004
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 15    
                           STORAGE AND CONSTANTS.                                   
                  
      00411  0 00000 0 00000  PROB   PZE  
      00412  0 00000 0 00000  PROG   PZE  
                  
      00413  602651464460     FROM   BCI     1, FROM  
      00414  0 00000 0 00000  WPROB  PZE  
      00415  0 00000 0 00000  WPROG  PZE  
                  
      00416  0 00000 0 00000  RDWRD  PZE  
      00417  0 00000 0 00000  ETXSW. PZE  
      00420  0 00000 0 00000  FULL.  PZE  
      00421  0 00000 0 00000  NAP.   PZE  
      00422  0 00000 0 00000  NOISE. PZE  
      00423  0 00000 0 00004  N.ACHR PZE     ACHR     
                  
                      000003  ETX    BOOL    003
                      000004  EOT    BOOL    004
                      000012  NL     BOOL    012
                  
      00424  000000000003     C.ETX  VFD     O36/ETX  
      00425  000000000004     C.EOT  VFD     O36/EOT  
                  
      00426  012004000000     BGNMSG VFD     O9/NL,O9/EOT   
      00427  003004000000     ETXMSG VFD     O9/ETX,O9/EOT  
                  
      00430                   TBUFF  BSS     2*WDSLIN 
      01234                   AOBUFF BES     N.OUT    
      02004                   AIBUFF BES     N.IN     
      02174                          BES     INSIZE   
      02174                   INBUFF BSS     1  
                  
      02175  0 00000 0 00000  INCHR  PZE  
      02176  0 00000 0 00550  OUTCHR PZE     N.OUT    
      02177  0 00000 0 00000  CHRCNT PZE  
                  
                  
      02200                          RMT     *  
      02200  0101 00 0 02261  SETBRK TIA     =HSETBRK                                                         .002
      02201  0101 00 0 02255  GETCOM TIA     =HGETCOM                                                         .002
      02202  0101 00 0 02252  ALLOW  TIA     =HALLOW                                                          .002
      02203  0101 00 0 02262  SETFUL TIA     =HSETFUL                                                         .002
      02204  0101 00 0 02256  RDFLXA TIA     =HRDFLXA                                                         .002
      02205  0101 00 0 02265  WRFLXA TIA     =HWRFLXA                                                         .002
      02206  0101 00 0 02267  WRMESS TIA     =HWRMESS                                                         .002
      02207  0101 00 0 02266  WRFLX  TIA     =HWRFLX                                                          .002
      02210  004701430125     CONTIN BCI     6,0P1L1E1A1S1E0 1C1O1N1T1I1N1U1E0.                               .002
      02211  012101620125     
      02212  006001230146     
      02213  014501630131     
      02214  014501640125     
      02215  003360606060     
      02216  0101 00 0 02260  SETBCD TIA     =HSETBCD                                                         .002
      02217  006001310162     NOLOG  BCI     6,0 1I1S0 1N1O1T0 1L1O1G1G1E1D0 1I1N0.                           .002
      02220  006001450146     
      02221  016300600143     
      02222  014601270127     
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 16    
                           STORAGE AND CONSTANTS.                                   
                  
      02223  012501240060     
      02224  013101450033     
      02225  004701430125     STOP   BCI     7,0P1L1E1A1S1E0 1S1T1O1P0 1T1Y1P1I1N1G0.                         .002
      02226  012101620125     
      02227  006001620163     
      02230  014601470060     
      02231  016301700147     
      02232  013101450127     
      02233  003360606060     
      02234  0101 00 0 02263  SLEEP  TIA     =HSLEEP                                                          .002
      02235  464701250151     DENY   BCI     6,OP1E1R1M1I1S1S1I1O1N0 1D1E1N1I1E1D0.                           .002
      02236  014401310162     
      02237  016201310146     
      02240  014500600124     
      02241  012501450131     
      02242  012501240033     
      02243  0101 00 0 02264  UPDATE TIA     =HUPDATE                                                         .002
      02244  0101 00 0 02257  RDMESS TIA     =HRDMESS                                                         .002
      02245  0101 00 0 02254  FORBID TIA     =HFORBID                                                         .002
      02246  0101 00 0 02253  CHNCOM TIA     =HCHNCOM                                                         .002
                  
                                     END  
                  
        LITERALS  
      02247  000000000001     
      02250  000000000777     
      02251  170000000000     
      02252  214343466660     
      02253  233045234644     
      02254  264651223124     
      02255  272563234644     
      02256  512426436721     
      02257  512444256262     
      02260  622563222324     
      02261  622563225142     
      02262  622563266443     
      02263  624325254760     
      02264  644724216325     
      02265  665126436721     
      02266  665126436760     
      02267  665144256262     
      02270  745125626334     
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2271 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         12     NL   424,  426
          4    EOT   424,  425,  426,  427
          3    ETX   424,  427
        367    HRS   362
        130    PRW   117,  127,  133
        243    WRM   276
          4   ACHR     5,  423
          3   CCHR     5
       2235   DENY   300
        100   DMIN   361,  371,  372
        413   FROM   343
        151   INX4   135,  165
         37   LOOP    50,   56
        421   NAP.   317,  405
        550   N.IN     5,   76, 1234
        411   PROB    12,   16,   24,   26,  313,  321,  351
        412   PROG    22,   25,   30,  316,  322,  352
        364   PTX2   355
        365   PTX4   354
        306   REST    14
         51   SEND    45
       2225   STOP   272
        175   TYX4   170
        257   WRX4   237
         11  ABITS     5,   65,   77,  207,  211,  221,  227,  230
       2202  ALLOW    23,  320,  344,  350
         32  BEGIN   347
        140  CAL.I   144
         14  CBITS     5
        425  C.EOT    66,  161
        424  C.ETX    73,  214
        372  COMNT   357,  360,  363,  367
        226  END.O   220
        104  EOT.R    70,   76
        420  FULL.   242,  254,  270,  273
         14  ICWDS     5,   61,  204,  210,  212,  226,  232,  246
       2175  INCHR    60,  101,  104,  107,  110
        136  INDEX   150,  153
        135  INPUT    51
        206  LDQ.O   221
         62  LDQ.R   100
        550  N.OUT     5,  464, 2176
       2217  NOLOG   266
        204  NXT.O   222,  225
        121  PRWX4   113,  124,  134
        354  PTIME   325
        416  RDWRD    43,  145
        102  RECX4    57,  111
       2234  SLEEP   275,  327
        235  SNDX4   177
        430  TBUFF    34,   42,   62,  116,  131,  140,  210,  212,  226,  232,  246,  302,  331,  335,  340,  376
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        220  TXH.O   202
        171  TYNDX   154,  174
        261  WERR1   253
        270  WERR2   252
        277  WERR3   251
        414  WPROB    27,  244,  263,  337,  345
        415  WPROG    31,  245,  341,  346
       2207  WRFLX   255,  265,  271,  277,  342,  356,  403
        237  WRITE    35,  223,  233,  377
         64  ZAC.R    77
       2004 AIBUFF    72,  106
       1234 AOBUFF   156,  163,  206
        426 BGNMSG    33
        326 BKTOSL   334,  353
        375 BRKXIT     7,  375
       2246 CHNCOM   407
        401 CHNXIT    17,   36,   40,  224,  234,  400
       2177 CHRCNT    53,   55
        302 COMCHK    44,  333
       2210 CONTIN   256
        427 ETXMSG   375
        417 ETXSW.    37,   75,  216
       2245 FORBID   401
        153 FULLIN   143,  147
       2201 GETCOM    10,   20,  306,  311,  314
          0 GTPROB    15
       2174 INBUFF   142,  173
        170 INSIZE     5,  143, 2004
      50500 MAXMIN   362,  372
        350 NAPXIT   406
        363 NEWTIM   371
        423 N.ACHR      
        422 NOISE.   310,  324
       2176 OUTCHR   157
        123 PRBUFF     0
        115 PRINDX   120,  125
        113 PRWORD     0
       2204 RDFLXA    41
       2244 RDMESS   330
         41 READIN    47,   52
         57 RECMES    46
        324 RSLOOP   332
       2216 SETBCD   261,  402
       2200 SETBRK     6
       2203 SETFUL    32,  264
        374 SLTIME   326
        177 SNDMES    54
        167 TYLINE     0
          2 TYPEIN   155
          1 TYPOUT   105
        170 TYWORD     0
       2243 UPDATE   323
         16 WDSLIN     5,   42,   62,  115,  116,  126,  131,  132,  137,  140,  331,  430
        301 WERRET   241,  267
        254 WERROR   250,  254
1            ASCII INTERCONSOLE COMMUNICATIONS ROUTINES.                         05/12/69 1724.0 PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2205 WRFLXA   130,  262
       2206 WRMESS   243
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            GTPROB - GET PROBLEM NUMBER FOR LOGIN COMMAND.                      05/12/69 1728.5 PAGE 1     
                  
                                             2/19/66 - NOEL I. MORRIS   
                  
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                              *     
                              *      CALLING SEQUENCE -     
                              *     
                              *      GTPROB. (PROBN, ERR)   
                              *     
                              *      PROBN  - CONTAINS UNCONVERTED PROBLEM NUMBER.  AT COMPLETION     
                              *              OF CONVERSION, IT WILL CONTAIN CONVERTED PROBLEM NUMBER. 
                              *      ERR    - ERROR LOCATION FOR ILLEGAL PROBLEM NUMBER.  
                              *     
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                  
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00000         ENTRY   GTPROB   
                  
      00000  0634 00 2 00034  GTPROB SXA     GTPX,2        SAVE XR2     
                  
      00001  0560 60 4 00001         LDQ*    1,4           GET UNCONVERTED PROBLEM NUMBER 
      00002 -0600 00 0 00037         STQ     BAD           SAVE FOR ERROR COMMENT   
                  
      00003  0774 00 2 00036         AXT     30,2          EXTRACT THE LETTER 
      00004 -0754 00 0 00000  PBLOOP ZAC                   ..     
      00005 -0763 00 0 00006         LGL     6             ..     
      00006 -0340 00 0 00044         LAS     =H00000       CHECK FOR NON-BLANK
      00007  0020 00 0 00021         TRA     FCHAR         NON-BLANK FOUND    
      00010  0020 00 0 00012         TRA     *+2           ..     
      00011  0020 00 0 00021         TRA     FCHAR         ..     
      00012  2 00006 2 00004         TIX     PBLOOP,2,6    ..     
                  
      00013  0634 00 4 00016  ERR    SXA     SVX4,4        SAVE XR4     
      00014                          COMENT  BAD,5(       IS NOT A PROBLEM NUMBER)  
      00014  0074 00 4 00036         TSX     WRFLX,4                                                          .003
      00015  3 00005 0 00037         PAR     BAD,,5                                                           .005
      00016  0774 00 4 00000  SVX4   AXT     **,4          RESTORE XR4  
      00017  0522 00 0 00034         XEC     GTPX          RESTORE XR2  
      00020  0020 60 4 00002         TRA*    2,4           ERROR RETURN 
                  
                  
      00021  0767 00 0 00030  FCHAR  ALS     24            SHIFT TO CORRECT POSITION
      00022 -0501 00 0 00046         ORA     =H 00000      AND OR IN PRECEDING BLANK
      00023  0602 60 4 00001         SLW*    1,4           SAVE THIS PART     
      00024 -0320 00 0 00045         ANA     =H0 0000      MUST BE NON-NUMERIC
      00025  0100 00 0 00013         TZE     ERR           ..     
                  
      00026 -0754 00 0 00000         ZAC                   ..     
      00027 -0765 00 2 00044         LGR     36,2          RIGHT-JUSTIFY REMAINING CHARACTERS   
      00030 -0130 00 0 00000         XCL                   ..     
      00031 -0602 60 4 00001         ORS*    1,4           OR INTO PROBLEM NUMBER   
      00032 -0320 00 0 00050         ANA     =O777760606060 MUST BE NUMERIC   
1            GTPROB - GET PROBLEM NUMBER FOR LOGIN COMMAND.                      05/12/69 1728.5 PAGE 2     
                  
      00033 -0100 00 0 00013         TNZ     ERR           ..     
                  
      00034  0774 00 2 00000  GTPX   AXT     **,2          RESTORE XR2  
      00035  0020 00 4 00003         TRA     3,4           RETURN 
                  
                  
      00036                          RMT     *             REMOTE SEQUENCES.  
      00036  0101 00 0 00047  WRFLX  TIA     =HWRFLX                                                          .002
      00037  606060606060     BAD    BCI     5,       IS NOT A PROBLEM NUMBER                                 .002
      00040  603162604546     
      00041  636021604751     
      00042  462243254460     
      00043  456444222551     
                  
                                     END  
                  
        LITERALS  
      00044  000000000060     
      00045  006000000000     
      00046  600000000000     
      00047  665126436760     
      00050  777760606060     
1            GTPROB - GET PROBLEM NUMBER FOR LOGIN COMMAND.                      05/12/69 1728.5 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         51 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         37    BAD     2,   15
         13    ERR    25,   33
         34   GTPX     0,   17
         16   SVX4    13
         21  FCHAR     7,   11
         36  WRFLX    14
          0 GTPROB     0
          4 PBLOOP    12
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




 XPAND   BCD 09/18/68 2339.1   35076         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   XPAND   MAD            04/23/68    2141.2
-                 
                 ..  ROUTINE TO UNTAB AND FIX LINEMARKED FILE.                                         LM00001    
                 ..     J. H. SALTZER, FEBRUARY, 1965.                                                 LM00002    
                 ..     MODIFIED BY S. SCHAFFNER 6-17-67                                               LM00003    
                 ..   MODIFIED BY J. BIXBY 4-22-68 TO USE (INPUT PROG                                  LM00004    
                 ..      INSTEAD OF (INPUT FILE)                                                       LM00005    
                                                                                                       LM00006    
                  NORMAL MODE IS INTEGER                                                          *001 LM00007    
                  FUNCTION NAME DETAB, MAD                                                        *002 LM00008    
                  BOOLEAN TRSW                                                                    *003 LM00009    
                  DIMENSION CARD(100),TEMNAM(1)                                                   *004 LM00010    
                  VECTOR VALUES BCKSPS = 35K                                                      *005 LM00011    
                  VECTOR VALUES FENCE = 777777777777K                                             *006 LM00012    
                  VECTOR VALUES TAB = 072K                                                        *007 LM00013    
                  VECTOR VALUES BLANK = 60K                                                       *008 LM00014    
                                                                                                       LM00015    
                  WHOAMI.(TEMNAM(1)...2)                                                          *009 LM00016    
                  OLDNAM = COMARG.(1)                                                             *010 LM00017    
                  WHENEVER OLDNAM .E. FENCE, TRANSFER TO BADARG                                   *011 LM00018    
                  OLDSEC = COMARG.(2)                                                             *012 LM00019    
                  WHENEVER OLDSEC .E. FENCE, TRANSFER TO BADARG                                   *013 LM00020    
                  NEWNAM = COMARG.(3)                                                             *014 LM00021    
                  WHENEVER NEWNAM .E. FENCE                                                       *015 LM00022    
                    NEWNAM = OLDNAM                                                               *016 LM00023    
                    NEWSEC = OLDSEC                                                               *017 LM00024    
                    TRANSFER TO SKP4                                                              *018 LM00025    
                  END OF CONDITIONAL                                                              *019 LM00026    
                  NEWSEC = COMARG.(4)                                                             *020 LM00027    
                  WHENEVER  NEWSEC .E. FENCE, NEWSEC = OLDSEC                                     *021 LM00028    
      SKP4        WHENEVER NEWSEC .E. $   FAP$                                                    *022 LM00029    
                    DETAB = FAP.                                                                  *023 LM00030    
                  OR WHENEVER NEWSEC .E. $   MAD$                                                 *024 LM00031    
                    DETAB = MAD.                                                                  *025 LM00032    
                  OR WHENEVER OLDSEC .E. $   FAP$                                                 *026 LM00033    
                    DETAB = FAP.                                                                  *027 LM00034    
                  OR WHENEVER OLDSEC .E. $   MAD$                                                 *028 LM00035    
                    DETAB = MAD.                                                                  *029 LM00036    
                  OTHERWISE                                                                       *030 LM00037    
                    DETAB = STRIP.                                                                *031 LM00038    
                  END OF CONDITIONAL                                                              *032 LM00039    
                                                                                                       LM00040    
                  SEEK.(OLDNAM, OLDSEC, CHN)                                                      *033 LM00041    
                  CLRNAM.($(INPUT$, TEMNAM, CHN, 1B)                                              *034 LM00042    
                  ASSIGN.($(INPUT$, TEMNAM)                                                       *035 LM00043    
                  COUNT = 0                                                                       *036 LM00044    
      LOOP        END = READ.(CARD, 100, EOF)                                                     *037 LM00045    
                  COUNT = COUNT + 1                                                               *038 LM00046    
                  TRSW = 0B                                                                       *039 LM00047    
                  END = END-1                                                                     *040 LM00048    
                  DETAB(0).                                                                       *041 LM00049    
                  WRCARD.(CARD, END)                                                              *042 LM00050    
                  WHENEVER TRSW                                                                   *043 LM00051    
                    PRINT COMMENT $0T1H1I1S0 1C1A1R1D0 0T0R0U0N0C0A0T0E0D0:$                      *044 LM00052    
                    TYPOUT.(CARD, 72)                                                             *045 LM00053    
                    PRBUFF.                                                                       *046 LM00054    
                  END OF CONDITIONAL                                                              *047 LM00055    
                  TRANSFER TO LOOP                                                                *048 LM00056    
      EOF         FILE.                                                                           *049 LM00057    
                  CLRNAM.(NEWNAM, NEWSEC, COM, 1B)                                                *050 LM00058    
                  RENAME.($(INPUT$, TEMNAM, NEWNAM, NEWSEC)                                       *051 LM00059    
      CHN         SETBCD.                                                                         *052 LM00060    
                  PRINT COMMENT $ *$                                                              *053 LM00061    
                  CHNCOM.                                                                         *054 LM00062    
                                                                                                       LM00063    
      COM         SETBCD.                                                                         *055 LM00064    
                  PRMESS.($NEW FI$,$LE NAM$,$E IS ($,$INPUT $,TEMNAM)                             *056 LM00065    
                  TRANSFER TO CHN                                                                 *057 LM00066    
                                                                                                       LM00067    
      BADARG      PRINT COMMENT $0N1O1T0 1E1N1O1U1G1H0 1A1R1G1U1M1E1N1T1S0.$                      *058 LM00068    
                  TRANSFER TO CHN                                                                 *059 LM00069    
                                                                                                       LM00070    
                  INTERNAL FUNCTION                                                               *060 LM00071    
                  ENTRY TO STRIP.                                                                 *061 LM00072    
                  FUNCTION RETURN                                                                 *062 LM00073    
                  END OF FUNCTION                                                                 *063 LM00074    
                                                                                                       LM00075    
                  INTERNAL FUNCTION(TSTOP)                                                        *064 LM00076    
                  ENTRY TO OUTTAB.                                                                *065 LM00077    
       FINDTB     THROUGH FINDTB, FOR Q = 1, 1, Q .GE. TSTOP                                      *066 LM00078    
                1      .OR. CARD(Q) .E. TAB .OR. Q .G. END                                        *066 LM00079    
                   WHENEVER Q .GE. TSTOP .OR. Q .G. END, FUNCTION RETURN                          *067 LM00080    
                  DEL = TSTOP - Q - 1                                                             *068 LM00081    
                  THROUGH MVCD, FOR J = END, -1, J .LE. Q                                         *069 LM00082    
       MVCD         WHENEVER J + DEL .LE. 100, CARD(J+DEL) = CARD(J)                              *070 LM00083    
                  THROUGH PKBK, FOR Q = Q, 1, Q .GE. TSTOP                                        *071 LM00084    
       PKBK         CARD(Q) = BLANK                                                               *072 LM00085    
                  WHENEVER END + DEL .G. 100                                                      *073 LM00086    
                    END = 100                                                                     *074 LM00087    
                  OTHERWISE                                                                       *075 LM00088    
                    END = END + DEL                                                               *076 LM00089    
                  END OF CONDITIONAL                                                              *077 LM00090    
                  FUNCTION RETURN                                                                 *078 LM00091    
                  END OF FUNCTION                                                                 *079 LM00092    
                                                                                                       LM00093    
                  INTERNAL FUNCTION                                                               *080 LM00094    
                  ENTRY TO SERIAL.                                                                *081 LM00095    
                    WHENEVER END .G. 72                                                           *082 LM00096    
                    TRSW = 1B                                                                     *083 LM00097    
                    END = 72                                                                      *084 LM00098    
                    END OF CONDITIOANL                                                            *085 LM00099    
                    THROUGH PACKBK, FOR Q = END + 1, 1, Q .G. 75                                  *086 LM00100    
       PACKBK         CARD(Q) = BLANK                                                             *087 LM00101    
                    NUM = COUNT                                                                   *088 LM00102    
                    THROUGH INNO, FOR I = 80, -1, I .L. 76                                        *089 LM00103    
                      CARD(I) = NUM - (NUM/10)*10                                                 *090 LM00104    
       INNO           NUM = NUM/10                                                                *091 LM00105    
                    END = 80                                                                      *092 LM00106    
                    FUNCTION RETURN                                                               *093 LM00107    
                  END OF FUNCTION                                                                 *094 LM00108    
                                                                                                       LM00109    
                  INTERNAL FUNCTION                                                               *095 LM00110    
                  ENTRY TO FAP.                                                                   *096 LM00111    
                  THROUGH FAPLP, FOR VALUES OF TB = 8, 16, 30, 34, 38, 42, 46                     *097 LM00112    
       FAPLP        OUTTAB.(TB)                                                                   *098 LM00113    
                    WHENEVER END .G. 72                                                           *099 LM00114    
                      TRSW = 1B                                                                   *100 LM00115    
                      END = 72                                                                    *101 LM00116    
                    END OF CONDITIONAL                                                            *102 LM00117    
                    FUNCTION RETURN                                                               *103 LM00118    
                  END OF FUNCTION                                                                 *104 LM00119    
                                                                                                       LM00120    
                  INTERNAL FUNCTION                                                               *105 LM00121    
                  ENTRY TO MAD.                                                                   *106 LM00122    
                    OUTTAB.(12)                                                                   *107 LM00123    
                    WHENEVER CARD(12) .E. BCKSPS                                                  *108 LM00124    
                      THROUGH PUSHL, FOR Q = 13, 1, Q .G. END                                     *109 LM00125    
       PUSHL            CARD(Q-2) = CARD(Q)                                                       *110 LM00126    
                      END = END - 2                                                               *111 LM00127    
                    END OF CONDITIONAL                                                            *112 LM00128    
                  THROUGH MDLP, FOR VALUES OF TB = 17, 22, 27, 32, 37, 42, 47                     *113 LM00129    
       MDLP         OUTTAB.(TB)                                                                   *114 LM00130    
                    SERIAL.                                                                       *115 LM00131    
                    FUNCTION RETURN                                                               *116 LM00132    
                  END OF FUNCTION                                                                 *117 LM00133    
                                                                                                       LM00134    
                  END OF PROGRAM                                                                  *118 LM00135    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01227 TRANSFER VECTOR LENGTH  00021 PROGRAM BEGINS    00270
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BADARG 00027   4        DEL    00205   1        INNO   00026   4        NEWSEC 00214   1        Q      00220   1  
      BCKSPS 00035 A 1        DETAB  00206   3        I      00211   1        NUM    00215   1        SKP4   00034   4  
      BLANK  00036 A 1        END    00207   1        J      00212   1        OLDNAM 00216   1        TAB    00221 A 1  
      CARD   00203 A 1        EOF    00032   4        LOOP   00033   4        OLDSEC 00217   1        TB     00222   1  
      CHN    00030   4        FAPLP  00026   4        MDLP   00026   4        PACKBK 00026   4        TEMNAM 00224 A 1  
      COM    00031   4        FENCE  00210 A 1        MVCD   00026   4        PKBK   00026   4        TRSW   00225   2  
      COUNT  00204   1        FINDTB 00026   4        NEWNAM 00213   1        PUSHL  00026   4                          
0FUNCTION DICTIONARY    
      ASSIGN 00000   1        CHNCOM 00001   1        CLRNAM 00002   1        COMARG 00003   1        EXIT   00004   1  
      FILE   00005   1        .PCOMT 00006   1        .SETUP 00007   1        PRBUFF 00010   1        PRMESS 00011   1  
      READ   00012   1        RENAME 00013   1        SEEK   00014   1        SETBCD 00015   1        TYPOUT 00016   1  
      WHOAMI 00017   1        WRCARD 00020   1        FAP    00021   1        MAD    00022   3        OUTTAB 00023   1  
      SERIAL 00024   1        STRIP  00025   1                                                                          
0ABSOLUTE CONSTANTS     
 00252 +000000000057     00246 +000000000045     00244 +000000000040     00242 +000000000033     00241 +000000000026    
 00240 +000000000021     00236 +000000000015     00235 +000000000014     00251 +000000000056     00250 +000000000052    
 00247 +000000000046     00245 +000000000042     00243 +000000000036     00237 +000000000020     00233 +000000000010    
 00234 +000000000012     00255 +000000000114     00256 +000000000120     00254 +000000000113     00262 +314547646360    
 00261 +256031626074     00263 -032560452144     00264 -052566602631     00253 +000000000110     00257 +000000000144    
 00226 +000000000000     00267 -343145476463     00266 -206060442124     00265 -206060262147     00232 +000000000004    
 00231 +000000000003     00230 +000000000002     00227 +000000000001     00260 +233000000000                            
0STATEMENT DICTIONARY   
 00027 TXL -300506000475       00030 TXL -300461000460       00031 TXL -300466000465       00032 TXL -300446000445      
 00033 TXL -300411000404       00034 TXL -300337000334                                                                  
0PROGRAM    
                 NORMAL MODE IS INTEGER                                             001  LM00007
                 FUNCTION NAME DETAB, MAD                                           002  LM00008
                 BOOLEAN TRSW                                                       003  LM00009
                 DIMENSION CARD(100),TEMNAM(1)                                      004  LM00010
                 VECTOR VALUES BCKSPS = 35K                                         005  LM00011
 00270 TSX +0 07400 4 00007    00035     +0 00000 0 00035                                                               
                 VECTOR VALUES FENCE = 777777777777K                                006  LM00012
 00210     -3 77777 7 77777                                                                                             
                 VECTOR VALUES TAB = 072K                                           007  LM00013
 00221     +0 00000 0 00072                                                                                             
                 VECTOR VALUES BLANK = 60K                                          008  LM00014
 00036     +0 00000 0 00060                                                                                             
                 WHOAMI.(TEMNAM(1)...2)                                             009  LM00016
 00271 TSX +0 07400 4 00017    00272 TIX +2 00230 0 00223                                                               
                 OLDNAM = COMARG.(1)                                                010  LM00017
 00273 TSX +0 07400 4 00003    00274 TXH +3 00000 0 00227    00275 STO +0 60100 0 00216                                 
                 W'R OLDNAM .E. FENCE, T'O BADARG                                   011  LM00018
 00276 CLA +0 50000 0 00216    00277 SUB +0 40200 0 00210    00300 TNZ -0 10000 0 00302    00301 TRA +0 02000 0 00027   
                 OLDSEC = COMARG.(2)                                                012  LM00019
 00302 TSX +0 07400 4 00003    00303 TXH +3 00000 0 00230    00304 STO +0 60100 0 00217                                 
                 W'R OLDSEC .E. FENCE, T'O BADARG                                   013  LM00020
 00305 CLA +0 50000 0 00217    00306 SUB +0 40200 0 00210    00307 TNZ -0 10000 0 00311    00310 TRA +0 02000 0 00027   
                 NEWNAM = COMARG.(3)                                                014  LM00021
 00311 TSX +0 07400 4 00003    00312 TXH +3 00000 0 00231    00313 STO +0 60100 0 00213                                 
                 W'R NEWNAM .E. FENCE                                               015  LM00022
 00314 CLA +0 50000 0 00213    00315 SUB +0 40200 0 00210    00316 TNZ -0 10000 0 00324                                 
                   NEWNAM = OLDNAM                                                  016  LM00023
 00317 CLA +0 50000 0 00216    00320 STO +0 60100 0 00213                                                               
                   NEWSEC = OLDSEC                                                  017  LM00024
 00321 CLA +0 50000 0 00217    00322 STO +0 60100 0 00214                                                               
                   T'O SKP4                                                         018  LM00025
 00323 TRA +0 02000 0 00034                                                                                             
                 END OF CONDITIONAL                                                 019  LM00026
                 NEWSEC = COMARG.(4)                                                020  LM00027
 00324 TSX +0 07400 4 00003    00325 TXH +3 00000 0 00232    00326 STO +0 60100 0 00214                                 
                 W'R  NEWSEC .E. FENCE, NEWSEC = OLDSEC                             021  LM00028
 00327 CLA +0 50000 0 00214    00330 SUB +0 40200 0 00210    00331 TNZ -0 10000 0 00334    00332 CLA +0 50000 0 00217   
 00333 STO +0 60100 0 00214                                                                                             
      SKP4       W'R NEWSEC .E. $   FAP$                                            022  LM00029
 00334 CLA +0 50000 0 00214    00335 SUB +0 40200 0 00265    00336 TNZ -0 10000 0 00342                                 
                   DETAB = FAP.                                                     023  LM00030
 00337 CLA +0 50000 0 00021    00340 STO +0 60100 0 00206                                                               
                 O'R NEWSEC .E. $   MAD$                                            024  LM00031
 00341 TRA +0 02000 0 00366    00342 CLA +0 50000 0 00214    00343 SUB +0 40200 0 00266    00344 TNZ -0 10000 0 00350   
                   DETAB = MAD.                                                     025  LM00032
 00345 CLA +0 50000 0 00022    00346 STO +0 60100 0 00206                                                               
                 O'R OLDSEC .E. $   FAP$                                            026  LM00033
 00347 TRA +0 02000 0 00366    00350 CLA +0 50000 0 00217    00351 SUB +0 40200 0 00265    00352 TNZ -0 10000 0 00356   
                   DETAB = FAP.                                                     027  LM00034
 00353 CLA +0 50000 0 00021    00354 STO +0 60100 0 00206                                                               
                 O'R OLDSEC .E. $   MAD$                                            028  LM00035
 00355 TRA +0 02000 0 00366    00356 CLA +0 50000 0 00217    00357 SUB +0 40200 0 00266    00360 TNZ -0 10000 0 00364   
                   DETAB = MAD.                                                     029  LM00036
 00361 CLA +0 50000 0 00022    00362 STO +0 60100 0 00206                                                               
                 OTHERWISE                                                          030  LM00037
 00363 TRA +0 02000 0 00366                                                                                             
                   DETAB = STRIP.                                                   031  LM00038
 00364 CLA +0 50000 0 00025    00365 STO +0 60100 0 00206                                                               
                 END OF CONDITIONAL                                                 032  LM00039
                 SEEK.(OLDNAM, OLDSEC, CHN)                                         033  LM00041
 00366 TSX +0 07400 4 00014    00367 TXH +3 00000 0 00216    00370 TXH +3 00000 0 00217    00371 TXH +3 00000 0 00030   
                 CLRNAM.($(INPUT$, TEMNAM, CHN, 1B)                                 034  LM00042
 00372 TSX +0 07400 4 00002    00373 TXH +3 00000 0 00267    00374 TXH +3 00000 0 00224    00375 TXH +3 00000 0 00030   
 00376 TXH +3 00000 0 00227                                                                                             
                 ASSIGN.($(INPUT$, TEMNAM)                                          035  LM00043
 00377 TSX +0 07400 4 00000    00400 TXH +3 00000 0 00267    00401 TXH +3 00000 0 00224                                 
                 COUNT = 0                                                          036  LM00044
 00402 CLA +0 50000 0 00226    00403 STO +0 60100 0 00204                                                               
      LOOP       END = READ.(CARD, 100, EOF)                                        037  LM00045
 00404 TSX +0 07400 4 00012    00405 TXH +3 00000 0 00203    00406 TXH +3 00000 0 00257    00407 TXH +3 00000 0 00032   
 00410 STO +0 60100 0 00207                                                                                             
                 COUNT = COUNT + 1                                                  038  LM00046
 00411 CLA +0 50000 0 00204    00412 ADD +0 40000 0 00227    00413 STO +0 60100 0 00204                                 
                 TRSW = 0B                                                          039  LM00047
 00414 CLA +0 50000 0 00226    00415 STO +0 60100 0 00225                                                               
                 END = END-1                                                        040  LM00048
 00416 CLA +0 50000 0 00207    00417 SUB +0 40200 0 00227    00420 STO +0 60100 0 00207                                 
                 DETAB(0).                                                          041  LM00049
 00421 TSX +0 07400 4 00206                                                                                             
                 WRCARD.(CARD, END)                                                 042  LM00050
 00422 TSX +0 07400 4 00020    00423 TXH +3 00000 0 00203    00424 TXH +3 00000 0 00207                                 
                 WHENEVER TRSW                                                      043  LM00051
 00425 NZT -0 52000 0 00225    00426 TRA +0 02000 0 00444                                                               
                   PRINT COMMENT $0T1H1I1S0 1C1A1R1D0 0T0R0U0N0C0A0T0E0D0:$         044  LM00052
 00427 TSX +0 07400 4 00006    00430     +0 00000 0 00007    00431     +0 06301 3 00131    00432     +0 16200 6 00123   
 00433     +0 12101 5 10124    00434     +0 06000 6 30051    00435     +0 06400 4 50023    00436     +0 02100 6 30025   
 00437     +0 02400 3 56060                                                                                             
                   TYPOUT.(CARD, 72)                                                045  LM00053
 00440 TSX +0 07400 4 00016    00441 TXH +3 00000 0 00203    00442 TXH +3 00000 0 00253                                 
                   PRBUFF.                                                          046  LM00054
 00443 TSX +0 07400 4 00010                                                                                             
                 END OF CONDITIONAL                                                 047  LM00055
                 T'O LOOP                                                           048  LM00056
 00444 TRA +0 02000 0 00033                                                                                             
      EOF        FILE.                                                              049  LM00057
 00445 TSX +0 07400 4 00005                                                                                             
                 CLRNAM.(NEWNAM, NEWSEC, COM, 1B)                                   050  LM00058
 00446 TSX +0 07400 4 00002    00447 TXH +3 00000 0 00213    00450 TXH +3 00000 0 00214    00451 TXH +3 00000 0 00031   
 00452 TXH +3 00000 0 00227                                                                                             
                 RENAME.($(INPUT$, TEMNAM, NEWNAM, NEWSEC)                          051  LM00059
 00453 TSX +0 07400 4 00013    00454 TXH +3 00000 0 00267    00455 TXH +3 00000 0 00224    00456 TXH +3 00000 0 00213   
 00457 TXH +3 00000 0 00214                                                                                             
      CHN        SETBCD.                                                            052  LM00060
 00460 TSX +0 07400 4 00015                                                                                             
                 PRINT COMMENT $ *$                                                 053  LM00061
 00461 TSX +0 07400 4 00006    00462     +0 00000 0 00001    00463     -2 05460 6 06060                                 
                 CHNCOM.                                                            054  LM00062
 00464 TSX +0 07400 4 00001                                                                                             
      COM        SETBCD.                                                            055  LM00064
 00465 TSX +0 07400 4 00015                                                                                             
                 PRMESS.($NEW FI$,$LE NAM$,$E IS ($,$INPUT $,TEMNAM)                056  LM00065
 00466 TSX +0 07400 4 00011    00467 TXH +3 00000 0 00264    00470 TXH +3 00000 0 00263    00471 TXH +3 00000 0 00261   
 00472 TXH +3 00000 0 00262    00473 TXH +3 00000 0 00224                                                               
                 T'O CHN                                                            057  LM00066
 00474 TRA +0 02000 0 00030                                                                                             
      BADARG     PRINT COMMENT $0N1O1T0 1E1N1O1U1G1H0 1A1R1G1U1M1E1N1T1S0.$         058  LM00068
 00475 TSX +0 07400 4 00006    00476     +0 00000 0 00007    00477     +0 04501 4 60163    00500     +0 06001 2 50145   
 00501     +0 14601 6 40127    00502     +0 13000 6 00121    00503     +0 15101 2 70164    00504     +0 14401 2 50145   
 00505     +0 16301 6 20033                                                                                             
                 T'O CHN                                                            059  LM00069
 00506 TRA +0 02000 0 00030                                                                                             
                 INTERNAL FUNCTION                                                  060  LM00071
 00507 TRA +0 02000 0 00525                                                                                             
                 ENTRY TO STRIP.                                                    061  LM00072
 00510 TRA +0 02000 0 00513    00025 TTR +0 02100 0 00511    00511 SXA +0 63400 2 00515    00512 TSX +0 07400 2 00515   
                 FUNCTION RETURN                                                    062  LM00073
 00513 TRA +0 02000 0 00521                                                                                             
                 END OF FUNCTION                                                    063  LM00074
 00514 TSX +0 07400 4 00004    00515 TXH +3 00000 0 00000    00516 SXD -0 63400 1 00515    00517 SXA +0 63400 4 00521   
 00520 TRA +0 02000 2 00001    00521 AXT +0 77400 4 00000    00522 LXA +0 53400 2 00515    00523 LXD -0 53400 1 00515   
 00524 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION(TSTOP)                                           064  LM00076
 00525 TRA +0 02000 0 00667                                                                                             
                 ENTRY TO OUTTAB.                                                   065  LM00077
 00526 TRA +0 02000 0 00531    00023 TTR +0 02100 0 00527    00527 SXA +0 63400 2 00652    00530 TSX +0 07400 2 00652   
       FINDTB    THROUGH FINDTB, FOR Q = 1, 1, Q .GE. TSTOP                         066  LM00078
                1     .OR. CARD(Q) .E. TAB .OR. Q .G. END                           066  LM00079
 00531 CLA +0 50000 0 00227    00532 STO +0 60100 0 00220    00533 TRA +0 02000 0 00537    00534 CLA +0 50000 0 00220   
 00535 ADD +0 40000 0 00227    00536 STO +0 60100 0 00220    00537 CLA +0 50000 0 00220    00540 SUB +0 40200 0 00207   
 00541 TZE +0 10000 0 00543    00542 TPL +0 12000 0 00554    00543 LXA +0 53400 1 00220    00544 CLA +0 50000 1 00203   
 00545 SUB +0 40200 0 00221    00546 TZE +0 10000 0 00554    00547 CLA +0 50000 0 00220    00550 SUB +0 40200 0 00024   
 00551 TZE +0 10000 0 00554    00552 TPL +0 12000 0 00554    00553 TRA +0 02000 0 00534                                 
                  WHENEVER Q .GE. TSTOP .OR. Q .G. END, FUNCTION RETURN             067  LM00080
 00554 CLA +0 50000 0 00220    00555 SUB +0 40200 0 00207    00556 TZE +0 10000 0 00560    00557 TPL +0 12000 0 00564   
 00560 CLA +0 50000 0 00220    00561 SUB +0 40200 0 00024    00562 TZE +0 10000 0 00564    00563 TMI -0 12000 0 00565   
 00564 TRA +0 02000 0 00663                                                                                             
                 DEL = TSTOP - Q - 1                                                068  LM00081
 00565 CLA +0 50000 0 00024    00566 SUB +0 40200 0 00220    00567 SUB +0 40200 0 00227    00570 STO +0 60100 0 00205   
                 THROUGH MVCD, FOR J = END, -1, J .LE. Q                            069  LM00082
 00571 CLA +0 50000 0 00207    00572 STO +0 60100 0 00212    00573 TRA +0 02000 0 00577    00574 CLS +0 50200 0 00227   
 00575 ADD +0 40000 0 00212    00576 STO +0 60100 0 00212    00577 CLA +0 50000 0 00212    00600 SUB +0 40200 0 00220   
 00601 TZE +0 10000 0 00617    00602 TMI -0 12000 0 00617                                                               
       MVCD        WHENEVER J + DEL .LE. 100, CARD(J+DEL) = CARD(J)                 070  LM00083
 00603 CLA +0 50000 0 00212    00604 ADD +0 40000 0 00205    00605 SUB +0 40200 0 00257    00606 TZE +0 10000 0 00610   
 00607 TPL +0 12000 0 00616    00610 CLA +0 50000 0 00212    00611 ADD +0 40000 0 00205    00612 PAX +0 73400 1 00000   
 00613 LXA +0 53400 2 00212    00614 CLA +0 50000 2 00203    00615 STO +0 60100 1 00203    00616 TRA +0 02000 0 00574   
                 THROUGH PKBK, FOR Q = Q, 1, Q .GE. TSTOP                           071  LM00084
 00617 CLA +0 50000 0 00220    00620 STO +0 60100 0 00220    00621 TRA +0 02000 0 00625    00622 CLA +0 50000 0 00220   
 00623 ADD +0 40000 0 00227    00624 STO +0 60100 0 00220    00625 CLA +0 50000 0 00220    00626 SUB +0 40200 0 00024   
 00627 TZE +0 10000 0 00635    00630 TPL +0 12000 0 00635                                                               
       PKBK        CARD(Q) = BLANK                                                  072  LM00085
 00631 LXA +0 53400 1 00220    00632 CLA +0 50000 0 00036    00633 STO +0 60100 1 00203    00634 TRA +0 02000 0 00622   
                 W'R END + DEL .G. 100                                              073  LM00086
 00635 CLA +0 50000 0 00207    00636 ADD +0 40000 0 00205    00637 SUB +0 40200 0 00257    00640 TZE +0 10000 0 00645   
 00641 TMI -0 12000 0 00645                                                                                             
                   END = 100                                                        074  LM00087
 00642 CLA +0 50000 0 00257    00643 STO +0 60100 0 00207                                                               
                 OTHERWISE                                                          075  LM00088
 00644 TRA +0 02000 0 00650                                                                                             
                   END = END + DEL                                                  076  LM00089
 00645 CLA +0 50000 0 00207    00646 ADD +0 40000 0 00205    00647 STO +0 60100 0 00207                                 
                 END OF CONDITIONAL                                                 077  LM00090
                 FUNCTION RETURN                                                    078  LM00091
 00650 TRA +0 02000 0 00663                                                                                             
                 END OF FUNCTION                                                    079  LM00092
 00651 TSX +0 07400 4 00004    00652 TXH +3 00000 0 00000    00653 SXD -0 63400 1 00652    00654 SXA +0 63400 4 00663   
 00655 CLA +0 50000 4 00001    00656 STA +0 62100 0 00550    00657 STA +0 62100 0 00561    00660 STA +0 62100 0 00565   
 00661 STA +0 62100 0 00626    00662 TRA +0 02000 2 00001    00663 AXT +0 77400 4 00000    00664 LXA +0 53400 2 00652   
 00665 LXD -0 53400 1 00652    00666 TRA +0 02000 4 00001                                                               
                 INTERNAL FUNCTION                                                  080  LM00094
 00667 TRA +0 02000 0 00772                                                                                             
                 ENTRY TO SERIAL.                                                   081  LM00095
 00670 TRA +0 02000 0 00673    00024 TTR +0 02100 0 00671    00671 SXA +0 63400 2 00762    00672 TSX +0 07400 2 00762   
                   WHENEVER END .G. 72                                              082  LM00096
 00673 CLA +0 50000 0 00207    00674 SUB +0 40200 0 00253    00675 TZE +0 10000 0 00703    00676 TMI -0 12000 0 00703   
                   TRSW = 1B                                                        083  LM00097
 00677 CLA +0 50000 0 00227    00700 STO +0 60100 0 00225                                                               
                   END = 72                                                         084  LM00098
 00701 CLA +0 50000 0 00253    00702 STO +0 60100 0 00207                                                               
                   END OF CONDITIOANL                                               085  LM00099
                   THROUGH PACKBK, FOR Q = END + 1, 1, Q .G. 75                     086  LM00100
 00703 CLA +0 50000 0 00207    00704 ADD +0 40000 0 00227    00705 STO +0 60100 0 00220    00706 TRA +0 02000 0 00712   
 00707 CLA +0 50000 0 00220    00710 ADD +0 40000 0 00227    00711 STO +0 60100 0 00220    00712 CLA +0 50000 0 00220   
 00713 SUB +0 40200 0 00254    00714 TZE +0 10000 0 00716    00715 TPL +0 12000 0 00722                                 
       PACKBK        CARD(Q) = BLANK                                                087  LM00101
 00716 LXA +0 53400 1 00220    00717 CLA +0 50000 0 00036    00720 STO +0 60100 1 00203    00721 TRA +0 02000 0 00707   
                   NUM = COUNT                                                      088  LM00102
 00722 CLA +0 50000 0 00204    00723 STO +0 60100 0 00215                                                               
                   THROUGH INNO, FOR I = 80, -1, I .L. 76                           089  LM00103
 00724 CLA +0 50000 0 00256    00725 STO +0 60100 0 00211    00726 TRA +0 02000 0 00732    00727 CLS +0 50200 0 00227   
 00730 ADD +0 40000 0 00211    00731 STO +0 60100 0 00211    00732 CLA +0 50000 0 00211    00733 SUB +0 40200 0 00255   
 00734 TZE +0 10000 0 00736    00735 TMI -0 12000 0 00756                                                               
                     CARD(I) = NUM - (NUM/10)*10                                    090  LM00104
 00736 LDQ +0 56000 0 00215    00737 PXD -0 75400 0 00000    00740 LLS +0 76300 0 00000    00741 DVP +0 22100 0 00234   
 00742 MPY +0 20000 0 00234    00743 XCA +0 13100 0 00000    00744 CHS +0 76000 0 00002    00745 ADD +0 40000 0 00215   
 00746 LXA +0 53400 1 00211    00747 STO +0 60100 1 00203                                                               
       INNO          NUM = NUM/10                                                   091  LM00105
 00750 LDQ +0 56000 0 00215    00751 PXD -0 75400 0 00000    00752 LLS +0 76300 0 00000    00753 DVP +0 22100 0 00234   
 00754 STQ -0 60000 0 00215    00755 TRA +0 02000 0 00727                                                               
                   END = 80                                                         092  LM00106
 00756 CLA +0 50000 0 00256    00757 STO +0 60100 0 00207                                                               
                   FUNCTION RETURN                                                  093  LM00107
 00760 TRA +0 02000 0 00766                                                                                             
                 END OF FUNCTION                                                    094  LM00108
 00761 TSX +0 07400 4 00004    00762 TXH +3 00000 0 00000    00763 SXD -0 63400 1 00762    00764 SXA +0 63400 4 00766   
 00765 TRA +0 02000 2 00001    00766 AXT +0 77400 4 00000    00767 LXA +0 53400 2 00762    00770 LXD -0 53400 1 00762   
 00771 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  095  LM00110
 00772 TRA +0 02000 0 01076                                                                                             
                 ENTRY TO FAP.                                                      096  LM00111
 00773 TRA +0 02000 0 00776    00021 TTR +0 02100 0 00774    00774 SXA +0 63400 2 01066    00775 TSX +0 07400 2 01066   
                 THROUGH FAPLP, FOR VALUES OF TB = 8, 16, 30, 34, 38, 42, 46        097  LM00112
 00776 CLA +0 50000 0 00233    00777 STO +0 60100 0 00222    01000 CLA +0 50000 0 01003    01001 STO +0 60100 0 01050   
 01002 TRA +0 02000 0 01051    01003 TRA +0 02000 0 01004    01004 CLA +0 50000 0 00237    01005 STO +0 60100 0 00222   
 01006 CLA +0 50000 0 01011    01007 STO +0 60100 0 01050    01010 TRA +0 02000 0 01051    01011 TRA +0 02000 0 01012   
 01012 CLA +0 50000 0 00243    01013 STO +0 60100 0 00222    01014 CLA +0 50000 0 01017    01015 STO +0 60100 0 01050   
 01016 TRA +0 02000 0 01051    01017 TRA +0 02000 0 01020    01020 CLA +0 50000 0 00245    01021 STO +0 60100 0 00222   
 01022 CLA +0 50000 0 01025    01023 STO +0 60100 0 01050    01024 TRA +0 02000 0 01051    01025 TRA +0 02000 0 01026   
 01026 CLA +0 50000 0 00247    01027 STO +0 60100 0 00222    01030 CLA +0 50000 0 01033    01031 STO +0 60100 0 01050   
 01032 TRA +0 02000 0 01051    01033 TRA +0 02000 0 01034    01034 CLA +0 50000 0 00250    01035 STO +0 60100 0 00222   
 01036 CLA +0 50000 0 01041    01037 STO +0 60100 0 01050    01040 TRA +0 02000 0 01051    01041 TRA +0 02000 0 01042   
 01042 CLA +0 50000 0 00251    01043 STO +0 60100 0 00222    01044 CLA +0 50000 0 01047    01045 STO +0 60100 0 01050   
 01046 TRA +0 02000 0 01051    01047 TRA +0 02000 0 01054    01050 TRA +0 02000 0 01050                                 
       FAPLP       OUTTAB.(TB)                                                      098  LM00113
 01051 TSX +0 07400 4 00023    01052 TXH +3 00000 0 00222    01053 TRA +0 02000 0 01050                                 
                   WHENEVER END .G. 72                                              099  LM00114
 01054 CLA +0 50000 0 00207    01055 SUB +0 40200 0 00253    01056 TZE +0 10000 0 01064    01057 TMI -0 12000 0 01064   
                     TRSW = 1B                                                      100  LM00115
 01060 CLA +0 50000 0 00227    01061 STO +0 60100 0 00225                                                               
                     END = 72                                                       101  LM00116
 01062 CLA +0 50000 0 00253    01063 STO +0 60100 0 00207                                                               
                   END OF CONDITIONAL                                               102  LM00117
                   FUNCTION RETURN                                                  103  LM00118
 01064 TRA +0 02000 0 01072                                                                                             
                 END OF FUNCTION                                                    104  LM00119
 01065 TSX +0 07400 4 00004    01066 TXH +3 00000 0 00000    01067 SXD -0 63400 1 01066    01070 SXA +0 63400 4 01072   
 01071 TRA +0 02000 2 00001    01072 AXT +0 77400 4 00000    01073 LXA +0 53400 2 01066    01074 LXD -0 53400 1 01066   
 01075 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  105  LM00121
 01076 TRA +0 02000 0 01224                                                                                             
                 ENTRY TO MAD.                                                      106  LM00122
 01077 TRA +0 02000 0 01102    00022 TTR +0 02100 0 01100    01100 SXA +0 63400 2 01214    01101 TSX +0 07400 2 01214   
                   OUTTAB.(12)                                                      107  LM00123
 01102 TSX +0 07400 4 00023    01103 TXH +3 00000 0 00235                                                               
                   WHENEVER CARD(12) .E. BCKSPS                                     108  LM00124
 01104 CLA +0 50000 0 00167    01105 SUB +0 40200 0 00035    01106 TNZ -0 10000 0 01133                                 
                     THROUGH PUSHL, FOR Q = 13, 1, Q .G. END                        109  LM00125
 01107 CLA +0 50000 0 00236    01110 STO +0 60100 0 00220    01111 TRA +0 02000 0 01115    01112 CLA +0 50000 0 00220   
 01113 ADD +0 40000 0 00227    01114 STO +0 60100 0 00220    01115 CLA +0 50000 0 00220    01116 SUB +0 40200 0 00207   
 01117 TZE +0 10000 0 01121    01120 TPL +0 12000 0 01130                                                               
       PUSHL           CARD(Q-2) = CARD(Q)                                          110  LM00126
 01121 CLA +0 50000 0 00220    01122 SUB +0 40200 0 00230    01123 PAX +0 73400 1 00000    01124 LXA +0 53400 2 00220   
 01125 CLA +0 50000 2 00203    01126 STO +0 60100 1 00203    01127 TRA +0 02000 0 01112                                 
                     END = END - 2                                                  111  LM00127
 01130 CLA +0 50000 0 00207    01131 SUB +0 40200 0 00230    01132 STO +0 60100 0 00207                                 
                   END OF CONDITIONAL                                               112  LM00128
                 THROUGH MDLP, FOR VALUES OF TB = 17, 22, 27, 32, 37, 42, 47        113  LM00129
 01133 CLA +0 50000 0 00240    01134 STO +0 60100 0 00222    01135 CLA +0 50000 0 01140    01136 STO +0 60100 0 01205   
 01137 TRA +0 02000 0 01206    01140 TRA +0 02000 0 01141    01141 CLA +0 50000 0 00241    01142 STO +0 60100 0 00222   
 01143 CLA +0 50000 0 01146    01144 STO +0 60100 0 01205    01145 TRA +0 02000 0 01206    01146 TRA +0 02000 0 01147   
 01147 CLA +0 50000 0 00242    01150 STO +0 60100 0 00222    01151 CLA +0 50000 0 01154    01152 STO +0 60100 0 01205   
 01153 TRA +0 02000 0 01206    01154 TRA +0 02000 0 01155    01155 CLA +0 50000 0 00244    01156 STO +0 60100 0 00222   
 01157 CLA +0 50000 0 01162    01160 STO +0 60100 0 01205    01161 TRA +0 02000 0 01206    01162 TRA +0 02000 0 01163   
 01163 CLA +0 50000 0 00246    01164 STO +0 60100 0 00222    01165 CLA +0 50000 0 01170    01166 STO +0 60100 0 01205   
 01167 TRA +0 02000 0 01206    01170 TRA +0 02000 0 01171    01171 CLA +0 50000 0 00250    01172 STO +0 60100 0 00222   
 01173 CLA +0 50000 0 01176    01174 STO +0 60100 0 01205    01175 TRA +0 02000 0 01206    01176 TRA +0 02000 0 01177   
 01177 CLA +0 50000 0 00252    01200 STO +0 60100 0 00222    01201 CLA +0 50000 0 01204    01202 STO +0 60100 0 01205   
 01203 TRA +0 02000 0 01206    01204 TRA +0 02000 0 01211    01205 TRA +0 02000 0 01205                                 
       MDLP        OUTTAB.(TB)                                                      114  LM00130
 01206 TSX +0 07400 4 00023    01207 TXH +3 00000 0 00222    01210 TRA +0 02000 0 01205                                 
                   SERIAL.                                                          115  LM00131
 01211 TSX +0 07400 4 00024                                                                                             
                   FUNCTION RETURN                                                  116  LM00132
 01212 TRA +0 02000 0 01220                                                                                             
                 END OF FUNCTION                                                    117  LM00133
 01213 TSX +0 07400 4 00004    01214 TXH +3 00000 0 00000    01215 SXD -0 63400 1 01214    01216 SXA +0 63400 4 01220   
 01217 TRA +0 02000 2 00001    01220 AXT +0 77400 4 00000    01221 LXA +0 53400 2 01214    01222 LXD -0 53400 1 01214   
 01223 TRA +0 02000 4 00001                                                                                             
                 END OF PROGRAM                                                     118  LM00135
 01224 TSX +0 07400 4 00004                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  SQUASH   MAD            04/23/68    2152.1
-                 
                 ..  ROUTINE TO CONVERT CARD IMAGE TO LINEMARKED WITH TABS.                            LM00001    
                 ..     J. H. SALTZER, FEBRUARY, 1965.                                                 LM00002    
                 ..     MODIFIED BY S. SCHAFFNER 6-17-67                                               LM00003    
                 ..     MODIFIED BY J. BIXBY 4-22-68 TO USE (INPUT PROG                                LM00004    
                 ..        AS THE INTERMEDIATE FILE INSTEAD OF (INPUT FILE)                            LM00005    
                                                                                                       LM00006    
                  NORMAL MODE IS INTEGER                                                          *001 LM00007    
                  FUNCTION NAME DETAB, MAD                                                        *002 LM00008    
                  DIMENSION CARD(84),TEMNAM(1)                                                    *003 LM00009    
                  VECTOR VALUES RETURN = 055K                                                     *004 LM00010    
                  VECTOR VALUES BCKSPS = 35K                                                      *005 LM00011    
                  VECTOR VALUES FENCE = 777777777777K                                             *006 LM00012    
                  VECTOR VALUES TAB = 072K                                                        *007 LM00013    
                  VECTOR VALUES BLANK = 60K                                                       *008 LM00014    
                                                                                                       LM00015    
                  WHOAMI.(TEMNAM(1)...2)                                                          *009 LM00016    
                  OLDNAM = COMARG.(1)                                                             *010 LM00017    
                  WHENEVER OLDNAM .E. FENCE, TRANSFER TO BADARG                                   *011 LM00018    
                  OLDSEC = COMARG.(2)                                                             *012 LM00019    
                  WHENEVER OLDSEC .E. FENCE, TRANSFER TO BADARG                                   *013 LM00020    
                  NEWNAM = COMARG.(3)                                                             *014 LM00021    
                  WHENEVER NEWNAM .E. FENCE                                                       *015 LM00022    
                    NEWNAM = OLDNAM                                                               *016 LM00023    
                    NEWSEC = OLDSEC                                                               *017 LM00024    
                    TRANSFER TO SKP4                                                              *018 LM00025    
                  END OF CONDITIONAL                                                              *019 LM00026    
                  NEWSEC = COMARG.(4)                                                             *020 LM00027    
                  WHENEVER  NEWSEC .E. FENCE, NEWSEC = OLDSEC                                     *021 LM00028    
      SKP4        WHENEVER OLDSEC .E. $   FAP$                                                    *022 LM00029    
                    DETAB = FAP.                                                                  *023 LM00030    
                  OR WHENEVER OLDSEC .E. $   MAD$                                                 *024 LM00031    
                    DETAB = MAD.                                                                  *025 LM00032    
                  OR WHENEVER NEWSEC.E. $   FAP$                                                  *026 LM00033    
                    DETAB = FAP.                                                                  *027 LM00034    
                  OR WHENEVER NEWSEC.E. $   MAD$                                                  *028 LM00035    
                    DETAB = MAD.                                                                  *029 LM00036    
                  OTHERWISE                                                                       *030 LM00037    
                    DETAB = STRIP.                                                                *031 LM00038    
                  END OF CONDITIONAL                                                              *032 LM00039    
                                                                                                       LM00040    
                  SEEK.(OLDNAM, OLDSEC, CHN)                                                      *033 LM00041    
                  CLRNAM.($(INPUT$, TEMNAM, CHN, 1B)                                              *034 LM00042    
                  ASSIGN.($(INPUT$, TEMNAM)                                                       *035 LM00043    
       LOOP       END = RDCARD.(CARD, 84, EOF)                                                    *036 LM00044    
                  DETAB(0).                                                                       *037 LM00045    
                  END = END+1                                                                     *038 LM00046    
                  PRETEND TO ADD A CARRIAGE RETURN TO LINE                                             LM00047    
                  WRITE.(CARD, END)                                                               *039 LM00048    
                  TRANSFER TO LOOP                                                                *040 LM00049    
      EOF         FILE.                                                                           *041 LM00050    
                  CLRNAM.(NEWNAM, NEWSEC, COM, 1B)                                                *042 LM00051    
                  RENAME.($(INPUT$, TEMNAM, NEWNAM, NEWSEC)                                       *043 LM00052    
      CHN         SETBCD.                                                                         *044 LM00053    
                  PRINT COMMENT $ *$                                                              *045 LM00054    
                  CHNCOM.                                                                         *046 LM00055    
                                                                                                       LM00056    
      COM         SETBCD.                                                                         *047 LM00057    
                  PRMESS.($NEW FI$,$LE NAM$,$E IS ($,$INPUT $,TEMNAM)                             *048 LM00058    
                  TRANSFER TO CHN                                                                 *049 LM00059    
                                                                                                       LM00060    
      BADARG      PRINT COMMENT $0N1O1T0 1E1N1O1U1G1H0 1A1R1G1U1M1E1N1T1S0.$                      *050 LM00061    
                  TRANSFER TO CHN                                                                 *051 LM00062    
                                                                                                       LM00063    
                  INTERNAL FUNCTION                                                               *052 LM00064    
                  ENTRY TO STRIP.                                                                 *053 LM00065    
       SLP          THROUGH SLP, FOR END = 72, -1, CARD(END) .NE. BLANK                           *054 LM00066    
                1      .OR. END .LE. 1                                                            *054 LM00067    
                  FUNCTION RETURN                                                                 *055 LM00068    
                  END OF FUNCTION                                                                 *056 LM00069    
                                                                                                       LM00070    
                  INTERNAL FUNCTION(ARG, ARG2)                                                    *057 LM00071    
                  ENTRY TO INTAB.                                                                 *058 LM00072    
                    WHENEVER ARG .G. END, FUNCTION RETURN                                         *059 LM00073    
       BLKCT      THROUGH BLKCT, FOR Q = ARG-1, -1, CARD(Q) .NE. BLANK                            *060 LM00074    
                1     .OR. Q .L. ARG2                                                             *060 LM00075    
                    WHENEVER Q .E. ARG-1, FUNCTION RETURN                                         *061 LM00076    
                    Q = Q + 1                                                                     *062 LM00077    
                    CARD(Q) = TAB                                                                 *063 LM00078    
                    THROUGH MOVE, FOR MVR = ARG, 1, MVR .G. END                                   *064 LM00079    
                      Q = Q + 1                                                                   *065 LM00080    
       MOVE           CARD(Q) = CARD(MVR)                                                         *066 LM00081    
                    END = Q                                                                       *067 LM00082    
                    FUNCTION RETURN                                                               *068 LM00083    
                  END OF FUNCTION                                                                 *069 LM00084    
                                                                                                       LM00085    
                  INTERNAL FUNCTION                                                               *070 LM00086    
                  ENTRY TO FAP.                                                                   *071 LM00087    
                    STRIP.                                                                        *072 LM00088    
                    INTAB.(30, 16)                                                                *073 LM00089    
                    INTAB.(16, 8)                                                                 *074 LM00090    
                    INTAB.(8, 0)                                                                  *075 LM00091    
                    FUNCTION RETURN                                                               *076 LM00092    
                  END OF FUNCTION                                                                 *077 LM00093    
                                                                                                       LM00094    
                  INTERNAL FUNCTION                                                               *078 LM00095    
                  ENTRY TO MAD.                                                                   *079 LM00096    
                    STRIP.                                                                        *080 LM00097    
                    WHENEVER CARD(11) .NE. BLANK                                                  *081 LM00098    
                      THROUGH PUSHR, FOR Q = END, -1, Q .L. 11                                    *082 LM00099    
       PUSHR            CARD(Q+1) = CARD(Q)                                                       *083 LM00100    
                      END = END + 1                                                               *084 LM00101    
                      CARD(11) = BCKSPS                                                           *085 LM00102    
                      INTAB.(11,0)                                                                *086 LM00103    
                    OTHERWISE                                                                     *087 LM00104    
                      INTAB.(12,0)                                                                *088 LM00105    
                    END OF CONDITIONAL                                                            *089 LM00106    
                    FUNCTION RETURN                                                               *090 LM00107    
                  END OF FUNCTION                                                                 *091 LM00108    
                                                                                                       LM00109    
                  END OF PROGRAM                                                                  *092 LM00110    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00674 TRANSFER VECTOR LENGTH  00017 PROGRAM BEGINS    00222
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BADARG 00024   4        CHN    00025   4        FENCE  00163 A 1        NEWSEC 00166   1        RETURN 00172 A 1  
      BCKSPS 00032 A 1        COM    00026   4        LOOP   00030   4        OLDNAM 00167   1        SKP4   00031   4  
      BLANK  00033 A 1        DETAB  00161   3        MOVE   00023   4        OLDSEC 00170   1        SLP    00023   4  
      BLKCT  00023   4        END    00162   1        MVR    00164   1        PUSHR  00023   4        TAB    00173 A 1  
      CARD   00160 A 1        EOF    00027   4        NEWNAM 00165   1        Q      00171   1        TEMNAM 00175 A 1  
0FUNCTION DICTIONARY    
      ASSIGN 00000   1        CHNCOM 00001   1        CLRNAM 00002   1        COMARG 00003   1        EXIT   00004   1  
      FILE   00005   1        .PCOMT 00006   1        .SETUP 00007   1        PRMESS 00010   1        RDCARD 00011   1  
      RENAME 00012   1        SEEK   00013   1        SETBCD 00014   1        WHOAMI 00015   1        WRITE  00016   1  
      FAP    00017   1        INTAB  00020   1        MAD    00021   3        STRIP  00022   1                          
0ABSOLUTE CONSTANTS     
 00205 +000000000014     00204 +000000000013     00176 +000000000000     00203 +000000000010     00206 +000000000020    
 00207 +000000000036     00210 +000000000110     00214 +314547646360     00213 +256031626074     00215 -032560452144    
 00216 -052566602631     00211 +000000000124     00221 -343145476463     00220 -206060442124     00217 -206060262147    
 00202 +000000000004     00201 +000000000003     00200 +000000000002     00177 +000000000001     00212 +233000000000    
0STATEMENT DICTIONARY   
 00024 TXL -300412000401       00025 TXL -300365000364       00026 TXL -300372000371       00027 TXL -300352000351      
 00030 TXL -300341000334       00031 TXL -300271000266                                                                  
0PROGRAM    
                 NORMAL MODE IS INTEGER                                             001  LM00007
                 FUNCTION NAME DETAB, MAD                                           002  LM00008
                 DIMENSION CARD(84),TEMNAM(1)                                       003  LM00009
                 VECTOR VALUES RETURN = 055K                                        004  LM00010
 00222 TSX +0 07400 4 00007    00172     +0 00000 0 00055                                                               
                 VECTOR VALUES BCKSPS = 35K                                         005  LM00011
 00032     +0 00000 0 00035                                                                                             
                 VECTOR VALUES FENCE = 777777777777K                                006  LM00012
 00163     -3 77777 7 77777                                                                                             
                 VECTOR VALUES TAB = 072K                                           007  LM00013
 00173     +0 00000 0 00072                                                                                             
                 VECTOR VALUES BLANK = 60K                                          008  LM00014
 00033     +0 00000 0 00060                                                                                             
                 WHOAMI.(TEMNAM(1)...2)                                             009  LM00016
 00223 TSX +0 07400 4 00015    00224 TIX +2 00200 0 00174                                                               
                 OLDNAM = COMARG.(1)                                                010  LM00017
 00225 TSX +0 07400 4 00003    00226 TXH +3 00000 0 00177    00227 STO +0 60100 0 00167                                 
                 W'R OLDNAM .E. FENCE, T'O BADARG                                   011  LM00018
 00230 CLA +0 50000 0 00167    00231 SUB +0 40200 0 00163    00232 TNZ -0 10000 0 00234    00233 TRA +0 02000 0 00024   
                 OLDSEC = COMARG.(2)                                                012  LM00019
 00234 TSX +0 07400 4 00003    00235 TXH +3 00000 0 00200    00236 STO +0 60100 0 00170                                 
                 W'R OLDSEC .E. FENCE, T'O BADARG                                   013  LM00020
 00237 CLA +0 50000 0 00170    00240 SUB +0 40200 0 00163    00241 TNZ -0 10000 0 00243    00242 TRA +0 02000 0 00024   
                 NEWNAM = COMARG.(3)                                                014  LM00021
 00243 TSX +0 07400 4 00003    00244 TXH +3 00000 0 00201    00245 STO +0 60100 0 00165                                 
                 W'R NEWNAM .E. FENCE                                               015  LM00022
 00246 CLA +0 50000 0 00165    00247 SUB +0 40200 0 00163    00250 TNZ -0 10000 0 00256                                 
                   NEWNAM = OLDNAM                                                  016  LM00023
 00251 CLA +0 50000 0 00167    00252 STO +0 60100 0 00165                                                               
                   NEWSEC = OLDSEC                                                  017  LM00024
 00253 CLA +0 50000 0 00170    00254 STO +0 60100 0 00166                                                               
                   T'O SKP4                                                         018  LM00025
 00255 TRA +0 02000 0 00031                                                                                             
                 END OF CONDITIONAL                                                 019  LM00026
                 NEWSEC = COMARG.(4)                                                020  LM00027
 00256 TSX +0 07400 4 00003    00257 TXH +3 00000 0 00202    00260 STO +0 60100 0 00166                                 
                 W'R  NEWSEC .E. FENCE, NEWSEC = OLDSEC                             021  LM00028
 00261 CLA +0 50000 0 00166    00262 SUB +0 40200 0 00163    00263 TNZ -0 10000 0 00266    00264 CLA +0 50000 0 00170   
 00265 STO +0 60100 0 00166                                                                                             
      SKP4       W'R OLDSEC .E. $   FAP$                                            022  LM00029
 00266 CLA +0 50000 0 00170    00267 SUB +0 40200 0 00217    00270 TNZ -0 10000 0 00274                                 
                   DETAB = FAP.                                                     023  LM00030
 00271 CLA +0 50000 0 00017    00272 STO +0 60100 0 00161                                                               
                 O'R OLDSEC .E. $   MAD$                                            024  LM00031
 00273 TRA +0 02000 0 00320    00274 CLA +0 50000 0 00170    00275 SUB +0 40200 0 00220    00276 TNZ -0 10000 0 00302   
                   DETAB = MAD.                                                     025  LM00032
 00277 CLA +0 50000 0 00021    00300 STO +0 60100 0 00161                                                               
                 O'R NEWSEC.E. $   FAP$                                             026  LM00033
 00301 TRA +0 02000 0 00320    00302 CLA +0 50000 0 00166    00303 SUB +0 40200 0 00217    00304 TNZ -0 10000 0 00310   
                   DETAB = FAP.                                                     027  LM00034
 00305 CLA +0 50000 0 00017    00306 STO +0 60100 0 00161                                                               
                 O'R NEWSEC.E. $   MAD$                                             028  LM00035
 00307 TRA +0 02000 0 00320    00310 CLA +0 50000 0 00166    00311 SUB +0 40200 0 00220    00312 TNZ -0 10000 0 00316   
                   DETAB = MAD.                                                     029  LM00036
 00313 CLA +0 50000 0 00021    00314 STO +0 60100 0 00161                                                               
                 OTHERWISE                                                          030  LM00037
 00315 TRA +0 02000 0 00320                                                                                             
                   DETAB = STRIP.                                                   031  LM00038
 00316 CLA +0 50000 0 00022    00317 STO +0 60100 0 00161                                                               
                 END OF CONDITIONAL                                                 032  LM00039
                 SEEK.(OLDNAM, OLDSEC, CHN)                                         033  LM00041
 00320 TSX +0 07400 4 00013    00321 TXH +3 00000 0 00167    00322 TXH +3 00000 0 00170    00323 TXH +3 00000 0 00025   
                 CLRNAM.($(INPUT$, TEMNAM, CHN, 1B)                                 034  LM00042
 00324 TSX +0 07400 4 00002    00325 TXH +3 00000 0 00221    00326 TXH +3 00000 0 00175    00327 TXH +3 00000 0 00025   
 00330 TXH +3 00000 0 00177                                                                                             
                 ASSIGN.($(INPUT$, TEMNAM)                                          035  LM00043
 00331 TSX +0 07400 4 00000    00332 TXH +3 00000 0 00221    00333 TXH +3 00000 0 00175                                 
       LOOP      END = RDCARD.(CARD, 84, EOF)                                       036  LM00044
 00334 TSX +0 07400 4 00011    00335 TXH +3 00000 0 00160    00336 TXH +3 00000 0 00211    00337 TXH +3 00000 0 00027   
 00340 STO +0 60100 0 00162                                                                                             
                 DETAB(0).                                                          037  LM00045
 00341 TSX +0 07400 4 00161                                                                                             
                 END = END+1                                                        038  LM00046
 00342 CLA +0 50000 0 00162    00343 ADD +0 40000 0 00177    00344 STO +0 60100 0 00162                                 
                 WRITE.(CARD, END)                                                  039  LM00048
 00345 TSX +0 07400 4 00016    00346 TXH +3 00000 0 00160    00347 TXH +3 00000 0 00162                                 
                 T'O LOOP                                                           040  LM00049
 00350 TRA +0 02000 0 00030                                                                                             
      EOF        FILE.                                                              041  LM00050
 00351 TSX +0 07400 4 00005                                                                                             
                 CLRNAM.(NEWNAM, NEWSEC, COM, 1B)                                   042  LM00051
 00352 TSX +0 07400 4 00002    00353 TXH +3 00000 0 00165    00354 TXH +3 00000 0 00166    00355 TXH +3 00000 0 00026   
 00356 TXH +3 00000 0 00177                                                                                             
                 RENAME.($(INPUT$, TEMNAM, NEWNAM, NEWSEC)                          043  LM00052
 00357 TSX +0 07400 4 00012    00360 TXH +3 00000 0 00221    00361 TXH +3 00000 0 00175    00362 TXH +3 00000 0 00165   
 00363 TXH +3 00000 0 00166                                                                                             
      CHN        SETBCD.                                                            044  LM00053
 00364 TSX +0 07400 4 00014                                                                                             
                 PRINT COMMENT $ *$                                                 045  LM00054
 00365 TSX +0 07400 4 00006    00366     +0 00000 0 00001    00367     -2 05460 6 06060                                 
                 CHNCOM.                                                            046  LM00055
 00370 TSX +0 07400 4 00001                                                                                             
      COM        SETBCD.                                                            047  LM00057
 00371 TSX +0 07400 4 00014                                                                                             
                 PRMESS.($NEW FI$,$LE NAM$,$E IS ($,$INPUT $,TEMNAM)                048  LM00058
 00372 TSX +0 07400 4 00010    00373 TXH +3 00000 0 00216    00374 TXH +3 00000 0 00215    00375 TXH +3 00000 0 00213   
 00376 TXH +3 00000 0 00214    00377 TXH +3 00000 0 00175                                                               
                 T'O CHN                                                            049  LM00059
 00400 TRA +0 02000 0 00025                                                                                             
      BADARG     PRINT COMMENT $0N1O1T0 1E1N1O1U1G1H0 1A1R1G1U1M1E1N1T1S0.$         050  LM00061
 00401 TSX +0 07400 4 00006    00402     +0 00000 0 00007    00403     +0 04501 4 60163    00404     +0 06001 2 50145   
 00405     +0 14601 6 40127    00406     +0 13000 6 00121    00407     +0 15101 2 70164    00410     +0 14401 2 50145   
 00411     +0 16301 6 20033                                                                                             
                 T'O CHN                                                            051  LM00062
 00412 TRA +0 02000 0 00025                                                                                             
                 INTERNAL FUNCTION                                                  052  LM00064
 00413 TRA +0 02000 0 00450                                                                                             
                 ENTRY TO STRIP.                                                    053  LM00065
 00414 TRA +0 02000 0 00417    00022 TTR +0 02100 0 00415    00415 SXA +0 63400 2 00440    00416 TSX +0 07400 2 00440   
       SLP         THROUGH SLP, FOR END = 72, -1, CARD(END) .NE. BLANK              054  LM00066
                1     .OR. END .LE. 1                                               054  LM00067
 00417 CLA +0 50000 0 00210    00420 STO +0 60100 0 00162    00421 TRA +0 02000 0 00425    00422 CLS +0 50200 0 00177   
 00423 ADD +0 40000 0 00162    00424 STO +0 60100 0 00162    00425 CLA +0 50000 0 00162    00426 SUB +0 40200 0 00177   
 00427 TZE +0 10000 0 00436    00430 TMI -0 12000 0 00436    00431 LXA +0 53400 1 00162    00432 CLA +0 50000 1 00160   
 00433 SUB +0 40200 0 00033    00434 TNZ -0 10000 0 00436    00435 TRA +0 02000 0 00422                                 
                 FUNCTION RETURN                                                    055  LM00068
 00436 TRA +0 02000 0 00444                                                                                             
                 END OF FUNCTION                                                    056  LM00069
 00437 TSX +0 07400 4 00004    00440 TXH +3 00000 0 00000    00441 SXD -0 63400 1 00440    00442 SXA +0 63400 4 00444   
 00443 TRA +0 02000 2 00001    00444 AXT +0 77400 4 00000    00445 LXA +0 53400 2 00440    00446 LXD -0 53400 1 00440   
 00447 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION(ARG, ARG2)                                       057  LM00071
 00450 TRA +0 02000 0 00562                                                                                             
                 ENTRY TO INTAB.                                                    058  LM00072
 00451 TRA +0 02000 0 00454    00020 TTR +0 02100 0 00452    00452 SXA +0 63400 2 00543    00453 TSX +0 07400 2 00543   
                   W'R ARG .G. END, FUNCTION RETURN                                 059  LM00073
 00454 CLA +0 50000 0 00024    00455 SUB +0 40200 0 00162    00456 TZE +0 10000 0 00461    00457 TMI -0 12000 0 00461   
 00460 TRA +0 02000 0 00556                                                                                             
       BLKCT     THROUGH BLKCT, FOR Q = ARG-1, -1, CARD(Q) .NE. BLANK               060  LM00074
                1    .OR. Q .L. ARG2                                                060  LM00075
 00461 CLA +0 50000 0 00024    00462 SUB +0 40200 0 00177    00463 STO +0 60100 0 00171    00464 TRA +0 02000 0 00470   
 00465 CLS +0 50200 0 00177    00466 ADD +0 40000 0 00171    00467 STO +0 60100 0 00171    00470 CLA +0 50000 0 00171   
 00471 SUB +0 40200 0 00024    00472 TZE +0 10000 0 00474    00473 TMI -0 12000 0 00501    00474 LXA +0 53400 1 00171   
 00475 CLA +0 50000 1 00160    00476 SUB +0 40200 0 00033    00477 TNZ -0 10000 0 00501    00500 TRA +0 02000 0 00465   
                   W'R Q .E. ARG-1, FUNCTION RETURN                                 061  LM00076
 00501 CLA +0 50000 0 00024    00502 SUB +0 40200 0 00177    00503 CHS +0 76000 0 00002    00504 ADD +0 40000 0 00171   
 00505 TNZ -0 10000 0 00507    00506 TRA +0 02000 0 00556                                                               
                   Q = Q + 1                                                        062  LM00077
 00507 CLA +0 50000 0 00171    00510 ADD +0 40000 0 00177    00511 STO +0 60100 0 00171                                 
                   CARD(Q) = TAB                                                    063  LM00078
 00512 LXA +0 53400 1 00171    00513 CLA +0 50000 0 00173    00514 STO +0 60100 1 00160                                 
                   THROUGH MOVE, FOR MVR = ARG, 1, MVR .G. END                      064  LM00079
 00515 CLA +0 50000 0 00024    00516 STO +0 60100 0 00164    00517 TRA +0 02000 0 00523    00520 CLA +0 50000 0 00164   
 00521 ADD +0 40000 0 00177    00522 STO +0 60100 0 00164    00523 CLA +0 50000 0 00164    00524 SUB +0 40200 0 00162   
 00525 TZE +0 10000 0 00527    00526 TPL +0 12000 0 00537                                                               
                     Q = Q + 1                                                      065  LM00080
 00527 CLA +0 50000 0 00171    00530 ADD +0 40000 0 00177    00531 STO +0 60100 0 00171                                 
       MOVE          CARD(Q) = CARD(MVR)                                            066  LM00081
 00532 LXA +0 53400 1 00171    00533 LXA +0 53400 2 00164    00534 CLA +0 50000 2 00160    00535 STO +0 60100 1 00160   
 00536 TRA +0 02000 0 00520                                                                                             
                   END = Q                                                          067  LM00082
 00537 CLA +0 50000 0 00171    00540 STO +0 60100 0 00162                                                               
                   FUNCTION RETURN                                                  068  LM00083
 00541 TRA +0 02000 0 00556                                                                                             
                 END OF FUNCTION                                                    069  LM00084
 00542 TSX +0 07400 4 00004    00543 TXH +3 00000 0 00000    00544 SXD -0 63400 1 00543    00545 SXA +0 63400 4 00556   
 00546 CLA +0 50000 4 00001    00547 STA +0 62100 0 00454    00550 STA +0 62100 0 00461    00551 STA +0 62100 0 00501   
 00552 STA +0 62100 0 00515    00553 CLA +0 50000 4 00002    00554 STA +0 62100 0 00471    00555 TRA +0 02000 2 00001   
 00556 AXT +0 77400 4 00000    00557 LXA +0 53400 2 00543    00560 LXD -0 53400 1 00543    00561 TRA +0 02000 4 00001   
                 INTERNAL FUNCTION                                                  070  LM00086
 00562 TRA +0 02000 0 00612                                                                                             
                 ENTRY TO FAP.                                                      071  LM00087
 00563 TRA +0 02000 0 00566    00017 TTR +0 02100 0 00564    00564 SXA +0 63400 2 00602    00565 TSX +0 07400 2 00602   
                   STRIP.                                                           072  LM00088
 00566 TSX +0 07400 4 00022                                                                                             
                   INTAB.(30, 16)                                                   073  LM00089
 00567 TSX +0 07400 4 00020    00570 TXH +3 00000 0 00207    00571 TXH +3 00000 0 00206                                 
                   INTAB.(16, 8)                                                    074  LM00090
 00572 TSX +0 07400 4 00020    00573 TXH +3 00000 0 00206    00574 TXH +3 00000 0 00203                                 
                   INTAB.(8, 0)                                                     075  LM00091
 00575 TSX +0 07400 4 00020    00576 TXH +3 00000 0 00203    00577 TXH +3 00000 0 00176                                 
                   FUNCTION RETURN                                                  076  LM00092
 00600 TRA +0 02000 0 00606                                                                                             
                 END OF FUNCTION                                                    077  LM00093
 00601 TSX +0 07400 4 00004    00602 TXH +3 00000 0 00000    00603 SXD -0 63400 1 00602    00604 SXA +0 63400 4 00606   
 00605 TRA +0 02000 2 00001    00606 AXT +0 77400 4 00000    00607 LXA +0 53400 2 00602    00610 LXD -0 53400 1 00602   
 00611 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  078  LM00095
 00612 TRA +0 02000 0 00671                                                                                             
                 ENTRY TO MAD.                                                      079  LM00096
 00613 TRA +0 02000 0 00616    00021 TTR +0 02100 0 00614    00614 SXA +0 63400 2 00661    00615 TSX +0 07400 2 00661   
                   STRIP.                                                           080  LM00097
 00616 TSX +0 07400 4 00022                                                                                             
                   W'R CARD(11) .NE. BLANK                                          081  LM00098
 00617 CLA +0 50000 0 00145    00620 SUB +0 40200 0 00033    00621 TZE +0 10000 0 00654                                 
                     THROUGH PUSHR, FOR Q = END, -1, Q .L. 11                       082  LM00099
 00622 CLA +0 50000 0 00162    00623 STO +0 60100 0 00171    00624 TRA +0 02000 0 00630    00625 CLS +0 50200 0 00177   
 00626 ADD +0 40000 0 00171    00627 STO +0 60100 0 00171    00630 CLA +0 50000 0 00171    00631 SUB +0 40200 0 00204   
 00632 TZE +0 10000 0 00634    00633 TMI -0 12000 0 00643                                                               
       PUSHR           CARD(Q+1) = CARD(Q)                                          083  LM00100
 00634 CLA +0 50000 0 00171    00635 ADD +0 40000 0 00177    00636 PAX +0 73400 1 00000    00637 LXA +0 53400 2 00171   
 00640 CLA +0 50000 2 00160    00641 STO +0 60100 1 00160    00642 TRA +0 02000 0 00625                                 
                     END = END + 1                                                  084  LM00101
 00643 CLA +0 50000 0 00162    00644 ADD +0 40000 0 00177    00645 STO +0 60100 0 00162                                 
                     CARD(11) = BCKSPS                                              085  LM00102
 00646 CLA +0 50000 0 00032    00647 STO +0 60100 0 00145                                                               
                     INTAB.(11,0)                                                   086  LM00103
 00650 TSX +0 07400 4 00020    00651 TXH +3 00000 0 00204    00652 TXH +3 00000 0 00176                                 
                   OTHERWISE                                                        087  LM00104
 00653 TRA +0 02000 0 00657                                                                                             
                     INTAB.(12,0)                                                   088  LM00105
 00654 TSX +0 07400 4 00020    00655 TXH +3 00000 0 00205    00656 TXH +3 00000 0 00176                                 
                   END OF CONDITIONAL                                               089  LM00106
                   FUNCTION RETURN                                                  090  LM00107
 00657 TRA +0 02000 0 00665                                                                                             
                 END OF FUNCTION                                                    091  LM00108
 00660 TSX +0 07400 4 00004    00661 TXH +3 00000 0 00000    00662 SXD -0 63400 1 00661    00663 SXA +0 63400 4 00665   
 00664 TRA +0 02000 2 00001    00665 AXT +0 77400 4 00000    00666 LXA +0 53400 2 00661    00667 LXD -0 53400 1 00661   
 00670 TRA +0 02000 4 00001                                                                                             
                 END OF PROGRAM                                                     092  LM00110
 00671 TSX +0 07400 4 00004                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  IOCARD   MAD            04/23/68    2128.7
-                 
                 ..     DISK CARD I/O CHARACTER CONTROL ROUTINE.                                       LM00001    
                 ..     J. H. SALTZER, JANUARY, 1965.                                                  LM00002    
                                                                                                       LM00003    
                  EXTERNAL FUNCTION(LINE, ARG2, EOF)                                              *001 LM00004    
                                                                                                       LM00005    
                  NORMAL MODE IS INTEGER                                                          *002 LM00006    
                  VECTOR VALUES NBITS = 6                                                         *003 LM00007    
                  VECTOR VALUES WRDSIZ = 36                                                       *004 LM00008    
                  VECTOR VALUES BLANK = $00000 $                                                  *005 LM00009    
                  VECTOR VALUES CHMASK = 77K                                                      *006 LM00010    
                                                                                                       LM00011    
                 ..  TO WRITE OUT A CARD . .                                                           LM00012    
                 ..          WRCARD.(CARD, COUNT)                                                      LM00013    
                                                                                                       LM00014    
                  ENTRY TO WRCARD.                                                                *007 LM00015    
                  COUNT = ARG2                                                                    *008 LM00016    
                  WHENEVER COUNT .G. 84, COUNT = 84                                               *009 LM00017    
                    K = 0                                                                         *010 LM00018    
                    THROUGH WRLOOP, FOR J = 1, 1, J .G. COUNT                                     *011 LM00019    
                      TWORD = (TWORD .LS. 6) .V. LINE(J)                                          *012 LM00020    
                      K = K + 1                                                                   *013 LM00021    
                      WHENEVER K .GE. 6                                                           *014 LM00022    
                        K = 0                                                                     *015 LM00023    
                        WRWORD.(TWORD)                                                            *016 LM00024    
       WRLOOP         END OF CONDITIONAL                                                          *017 LM00025    
                    THROUGH FILOOP, FOR J = J, 1, J .G. 84                                        *018 LM00026    
                      TWORD = (TWORD .LS. 6) .V. BLANK                                            *019 LM00027    
                      K = K +1                                                                    *020 LM00028    
                      WHENEVER K .GE. 6                                                           *021 LM00029    
                        K = 0                                                                     *022 LM00030    
                        WRWORD.(TWORD)                                                            *023 LM00031    
       FILOOP         END OF CONDITIONAL                                                          *024 LM00032    
                    FUNCTION RETURN                                                               *025 LM00033    
                                                                                                       LM00034    
                 ..                                                                                    LM00035    
                 ..  TO READ A CARD . .                                                                LM00036    
                 ..          LENGTH = RDCARD.(CARD(0), BUFSIZ, EOF)                                    LM00037    
                                                                                                       LM00038    
                  ENTRY TO RDCARD.                                                                *026 LM00039    
                    SIZE = 0                                                                      *027 LM00040    
                    THROUGH WRDLP, FOR J = 1, 1, J .G. 14                                         *028 LM00041    
                      WORD = RDWORD.(EOF)                                                         *029 LM00042    
                      THROUGH DISECT, FOR I = 30, -6, I .L. 0                                     *030 LM00043    
                        CHAR = (WORD .RS. I) .A. CHMASK                                           *031 LM00044    
                        SIZE = SIZE + 1                                                           *032 LM00045    
       DISECT           LINE(SIZE) = CHAR                                                         *033 LM00046    
       WRDLP          CONTINUE                                                                    *034 LM00047    
                    FUNCTION RETURN 84                                                            *035 LM00048    
                                                                                                       LM00049    
                  END OF FUNCTION                                                                 *036 LM00050    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00234 TRANSFER VECTOR LENGTH  00003 PROGRAM BEGINS    00027
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      RDCARD 00137   0        WRCARD 00030   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BLANK  00004 A 1        DISECT 00003   4        J      00011   1        SIZE   00014   1        WRDLP  00003   4  
      CHAR   00005   1        FILOOP 00003   4        K      00012   1        TWORD  00015   1        WRDSIZ 00017 A 1  
      CHMASK 00006 A 1        I      00010   1        NBITS  00013 A 1        WORD   00016   1        WRLOOP 00003   4  
      COUNT  00007   1                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1        RDWORD 00001   1        WRWORD 00002   1                                                  
0ABSOLUTE CONSTANTS     
 00024 +000000000036     00023 +000000000016     00022 +000000000006     00020 +000000000000     00025 +000000000124    
 00021 +000000000001     00026 +233000000000                                                                            
0PROGRAM    
                 EXTERNAL FUNCTION(LINE, ARG2, EOF)                                 001  LM00004
                 NORMAL MODE IS INTEGER                                             002  LM00006
                 VECTOR VALUES NBITS = 6                                            003  LM00007
 00013     +0 00000 0 00006                                                                                             
                 VECTOR VALUES WRDSIZ = 36                                          004  LM00008
 00017     +0 00000 0 00044                                                                                             
                 VECTOR VALUES BLANK = $00000 $                                     005  LM00009
 00004     +0 00000 0 00060                                                                                             
                 VECTOR VALUES CHMASK = 77K                                         006  LM00010
 00006     +0 00000 0 00077                                                                                             
                 ENTRY TO WRCARD.                                                   007  LM00015
 00027 TRA +0 02000 0 00032    00030 SXA +0 63400 2 00213    00031 TSX +0 07400 2 00213                                 
                 COUNT = ARG2                                                       008  LM00016
 00032 CLA +0 50000 0 00024    00033 STO +0 60100 0 00007                                                               
                 WHENEVER COUNT .G. 84, COUNT = 84                                  009  LM00017
 00034 CLA +0 50000 0 00007    00035 SUB +0 40200 0 00025    00036 TZE +0 10000 0 00042    00037 TMI -0 12000 0 00042   
 00040 CLA +0 50000 0 00025    00041 STO +0 60100 0 00007                                                               
                   K = 0                                                            010  LM00018
 00042 CLA +0 50000 0 00020    00043 STO +0 60100 0 00012                                                               
                   THROUGH WRLOOP, FOR J = 1, 1, J .G. COUNT                        011  LM00019
 00044 CLA +0 50000 0 00021    00045 STO +0 60100 0 00011    00046 TRA +0 02000 0 00052    00047 CLA +0 50000 0 00011   
 00050 ADD +0 40000 0 00021    00051 STO +0 60100 0 00011    00052 CLA +0 50000 0 00011    00053 SUB +0 40200 0 00007   
 00054 TZE +0 10000 0 00056    00055 TPL +0 12000 0 00101                                                               
                     TWORD = (TWORD .LS. 6) .V. LINE(J)                             012  LM00020
 00056 CAL -0 50000 0 00022    00057 STA +0 62100 0 00061    00060 CAL -0 50000 0 00015    00061 ALS +0 76700 0 00000   
 00062 LXA +0 53400 2 00011    00063 ORA -0 50100 2 00024    00064 SLW +0 60200 0 00015                                 
                     K = K + 1                                                      013  LM00021
 00065 CLA +0 50000 0 00012    00066 ADD +0 40000 0 00021    00067 STO +0 60100 0 00012                                 
                     WHENEVER K .GE. 6                                              014  LM00022
 00070 CLA +0 50000 0 00012    00071 SUB +0 40200 0 00022    00072 TZE +0 10000 0 00074    00073 TMI -0 12000 0 00100   
                       K = 0                                                        015  LM00023
 00074 CLA +0 50000 0 00020    00075 STO +0 60100 0 00012                                                               
                       WRWORD.(TWORD)                                               016  LM00024
 00076 TSX +0 07400 4 00002    00077 TXH +3 00000 0 00015                                                               
       WRLOOP        END OF CONDITIONAL                                             017  LM00025
 00100 TRA +0 02000 0 00047                                                                                             
                   THROUGH FILOOP, FOR J = J, 1, J .G. 84                           018  LM00026
 00101 CLA +0 50000 0 00011    00102 STO +0 60100 0 00011    00103 TRA +0 02000 0 00107    00104 CLA +0 50000 0 00011   
 00105 ADD +0 40000 0 00021    00106 STO +0 60100 0 00011    00107 CLA +0 50000 0 00011    00110 SUB +0 40200 0 00025   
 00111 TZE +0 10000 0 00113    00112 TPL +0 12000 0 00135                                                               
                     TWORD = (TWORD .LS. 6) .V. BLANK                               019  LM00027
 00113 CAL -0 50000 0 00022    00114 STA +0 62100 0 00116    00115 CAL -0 50000 0 00015    00116 ALS +0 76700 0 00000   
 00117 ORA -0 50100 0 00004    00120 SLW +0 60200 0 00015                                                               
                     K = K +1                                                       020  LM00028
 00121 CLA +0 50000 0 00012    00122 ADD +0 40000 0 00021    00123 STO +0 60100 0 00012                                 
                     WHENEVER K .GE. 6                                              021  LM00029
 00124 CLA +0 50000 0 00012    00125 SUB +0 40200 0 00022    00126 TZE +0 10000 0 00130    00127 TMI -0 12000 0 00134   
                       K = 0                                                        022  LM00030
 00130 CLA +0 50000 0 00020    00131 STO +0 60100 0 00012                                                               
                       WRWORD.(TWORD)                                               023  LM00031
 00132 TSX +0 07400 4 00002    00133 TXH +3 00000 0 00015                                                               
       FILOOP        END OF CONDITIONAL                                             024  LM00032
 00134 TRA +0 02000 0 00104                                                                                             
                   FUNCTION RETURN                                                  025  LM00033
 00135 TRA +0 02000 0 00226                                                                                             
                 ENTRY TO RDCARD.                                                   026  LM00039
 00136 TRA +0 02000 0 00141    00137 SXA +0 63400 2 00213    00140 TSX +0 07400 2 00213                                 
                   SIZE = 0                                                         027  LM00040
 00141 CLA +0 50000 0 00020    00142 STO +0 60100 0 00014                                                               
                   THROUGH WRDLP, FOR J = 1, 1, J .G. 14                            028  LM00041
 00143 CLA +0 50000 0 00021    00144 STO +0 60100 0 00011    00145 TRA +0 02000 0 00151    00146 CLA +0 50000 0 00011   
 00147 ADD +0 40000 0 00021    00150 STO +0 60100 0 00011    00151 CLA +0 50000 0 00011    00152 SUB +0 40200 0 00023   
 00153 TZE +0 10000 0 00155    00154 TPL +0 12000 0 00210                                                               
                     WORD = RDWORD.(EOF)                                            029  LM00042
 00155 TSX +0 07400 4 00001    00156 TXH +3 00000 0 00024    00157 STO +0 60100 0 00016                                 
                     THROUGH DISECT, FOR I = 30, -6, I .L. 0                        030  LM00043
 00160 CLA +0 50000 0 00024    00161 STO +0 60100 0 00010    00162 TRA +0 02000 0 00166    00163 CLS +0 50200 0 00022   
 00164 ADD +0 40000 0 00010    00165 STO +0 60100 0 00010    00166 CLA +0 50000 0 00010    00167 SUB +0 40200 0 00020   
 00170 TZE +0 10000 0 00172    00171 TMI -0 12000 0 00207                                                               
                       CHAR = (WORD .RS. I) .A. CHMASK                              031  LM00044
 00172 CAL -0 50000 0 00010    00173 STA +0 62100 0 00175    00174 CAL -0 50000 0 00016    00175 LGR -0 76500 0 00000   
 00176 ANA -0 32000 0 00006    00177 SLW +0 60200 0 00005                                                               
                       SIZE = SIZE + 1                                              032  LM00045
 00200 CLA +0 50000 0 00014    00201 ADD +0 40000 0 00021    00202 STO +0 60100 0 00014                                 
       DISECT          LINE(SIZE) = CHAR                                            033  LM00046
 00203 LXA +0 53400 1 00014    00204 CLA +0 50000 0 00005    00205 STO +0 60100 1 00024    00206 TRA +0 02000 0 00163   
       WRDLP         CONTINUE                                                       034  LM00047
 00207 TRA +0 02000 0 00146                                                                                             
                   FUNCTION RETURN 84                                               035  LM00048
 00210 CLA +0 50000 0 00025    00211 TRA +0 02000 0 00226                                                               
                 END OF FUNCTION                                                    036  LM00050
 00212 TSX +0 07400 4 00000    00213 TXH +3 00000 0 00000    00214 SXD -0 63400 1 00213    00215 SXA +0 63400 4 00226   
 00216 CLA +0 50000 4 00001    00217 STA +0 62100 0 00063    00220 STA +0 62100 0 00205    00221 CLA +0 50000 4 00002   
 00222 STA +0 62100 0 00032    00223 CLA +0 50000 4 00003    00224 STO +0 60100 0 00156    00225 TRA +0 02000 2 00001   
 00226 AXT +0 77400 4 00000    00227 LXA +0 53400 2 00213    00230 LXD -0 53400 1 00213    00231 TRA +0 02000 4 00001   
1     MAD PROGRAM LISTING ... ... ...                 FILE    6TYP   MAD            04/23/68    2128.9
-                 
                 ..  TYPEWRITER INPUT CHARACTER CONTROL ROUTINE.                                       LM00001    
                 ..  USAGE. . .   COUNT = TYPEIN.(BUFFER, BUFSIZ, ERASE, KILL)                         LM00002    
                           J. H. SALTZER, JANUARY, 1965.                                               LM00003    
                                                                                                       LM00004    
                  EXTERNAL FUNCTION(LINE, BUFSIZ)                                                 *001 LM00005    
                                                                                                       LM00006    
                  NORMAL MODE IS INTEGER                                                          *002 LM00007    
                  VECTOR VALUES E1 = 0137K                                                        *003 LM00008    
                  VECTOR VALUES K1 = 0156K                                                        *004 LM00009    
                  VECTOR VALUES NBITS = 12                                                        *005 LM00010    
                  VECTOR VALUES NULL = 0057K                                                      *006 LM00011    
                  VECTOR VALUES ERASE = 0504K                                                     *007 LM00012    
                  VECTOR VALUES KILL = 0506K                                                      *008 LM00013    
                  VECTOR VALUES RETURN = 0055K                                                    *009 LM00014    
                  VECTOR VALUES WRDSIZ = 36                                                       *010 LM00015    
                  VECTOR VALUES CHMASK = 7777K                                                    *011 LM00016    
                                                                                                       LM00017    
                  ENTRY TO SETERS.                                                                *012 LM00018    
                    ERASE = LINE                                                                  *013 LM00019    
                    FUNCTION RETURN                                                               *014 LM00020    
                                                                                                       LM00021    
                  ENTRY TO SETKIL.                                                                *015 LM00022    
                    KILL = LINE                                                                   *016 LM00023    
                    FUNCTION RETURN                                                               *017 LM00024    
                                                                                                       LM00025    
                  ENTRY TO CANON.                                                                 *018 LM00026    
                    FUNCTION RETURN                                                               *019 LM00027    
                                                                                                       LM00028    
                  ENTRY TO TYPEIN.                                                                *020 LM00029    
                    SIZE = 0                                                                      *021 LM00030    
                    TYLINE.                                                                       *022 LM00031    
       LOOP         WORD = TYWORD.(0)                                                             *023 LM00032    
                    THROUGH DISECT, FOR I = WRDSIZ-NBITS,-NBITS, I .L. 0                          *024 LM00033    
                      CHAR = (WORD.RS.I) .A. CHMASK                                               *025 LM00034    
                      WHENEVER CHAR .E. ERASE .OR. CHAR .E. E1                                    *026 LM00035    
                        WHENEVER SIZE .G. 0, SIZE = SIZE - 1                                      *027 LM00036    
                      OR WHENEVER CHAR .E. KILL .OR. CHAR .E. K1                                  *028 LM00037    
                        SIZE = 0                                                                  *029 LM00038    
                      OR WHENEVER CHAR .E. RETURN .OR. CHAR.RS.6 .E. RETURN                       *030 LM00039    
                        TRANSFER TO UND                                                           *031 LM00040    
                      OR WHENEVER CHAR .A. 0400K .E. 0                                            *032 LM00041    
                        SIZE = SIZE + 1                                                           *033 LM00042    
                        LINE(SIZE) = CHAR.A.77K                                                   *034 LM00043    
                      END OF CONDITIONAL                                                          *035 LM00044    
       DISECT         WHENEVER SIZE .GE. BUFSIZ, TRANSFER TO UND                                  *036 LM00045    
                    TRANSFER TO LOOP                                                              *037 LM00046    
      UND           SIZE = SIZE + 1                                                               *038 LM00047    
                    LINE(SIZE) = RETURN                                                           *039 LM00048    
                    FUNCTION RETURN SIZE                                                          *040 LM00049    
                                                                                                       LM00050    
                 ..     TYPEWRITER OUTPUT CHARACTER CONTROL ROUTINE.                                   LM00051    
                 ..     USAGE. . .    TYPOUT.(LINE, LENGTH)                                            LM00052    
                                                                                                       LM00053    
                  ENTRY TO TYPOUT.                                                                *041 LM00054    
                    K = 0                                                                         *042 LM00055    
                    SETFUL.                                                                       *043 LM00056    
                    THROUGH PRLOOP, FOR J = 1, 1, J .G. BUFSIZ                                    *044 LM00057    
                      TWORD = (TWORD .LS. NBITS) .V. LINE(J)                                      *045 LM00058    
                      K = K + 1                                                                   *046 LM00059    
                      WHENEVER K .GE. WRDSIZ/NBITS                                                *047 LM00060    
                        K = 0                                                                     *048 LM00061    
                        PRWORD.(TWORD)                                                            *049 LM00062    
       PRLOOP         END OF CONDITIONAL                                                          *050 LM00063    
                    THROUGH NULPK, FOR K = K, 1, K.GE. WRDSIZ/NBITS                               *051 LM00064    
       NULPK          TWORD = (TWORD.LS.NBITS) .V. NULL                                           *052 LM00065    
                    PRWORD.(TWORD)                                                                *053 LM00066    
                    PRBUFF.                                                                       *054 LM00067    
                    FUNCTION RETURN                                                               *055 LM00068    
                                                                                                       LM00069    
                  ENTRY TO HOL.                                                                   *056 LM00070    
                    FUNCTION RETURN LINE .A. 77K                                                  *057 LM00071    
                                                                                                       LM00072    
                  END OF FUNCTION                                                                 *058 LM00073    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00351 TRANSFER VECTOR LENGTH  00006 PROGRAM BEGINS    00037
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      HOL    00314   0        TYPOUT 00212   0        TYPEIN 00060   0        CANON  00054   0        SETKIL 00046   0  
      SETERS 00040   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      CHAR   00011   1        I      00015   1        K      00021   1        NULPK  00006   4        TWORD  00026   1  
      CHMASK 00012 A 1        J      00016   1        LOOP   00007   4        PRLOOP 00006   4        UND    00010   4  
      DISECT 00006   4        K1     00017 A 1        NBITS  00022 A 1        RETURN 00024 A 1        WORD   00027   1  
      E1     00013 A 1        KILL   00020 A 1        NULL   00023 A 1        SIZE   00025   1        WRDSIZ 00030 A 1  
      ERASE  00014 A 1                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1        PRBUFF 00001   1        PRWORD 00002   1        SETFUL 00003   1        TYLINE 00004   1  
      TYWORD 00005   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00034 +000000000077     00035 +000000000400     00033 +000000000006     00031 +000000000000     00032 +000000000001    
 00036 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00007 TXL -300070000065       00010 TXL -300204000201                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION(LINE, BUFSIZ)                                    001  LM00005
                 NORMAL MODE IS INTEGER                                             002  LM00007
                 VECTOR VALUES E1 = 0137K                                           003  LM00008
 00013     +0 00000 0 00137                                                                                             
                 VECTOR VALUES K1 = 0156K                                           004  LM00009
 00017     +0 00000 0 00156                                                                                             
                 VECTOR VALUES NBITS = 12                                           005  LM00010
 00022     +0 00000 0 00014                                                                                             
                 VECTOR VALUES NULL = 0057K                                         006  LM00011
 00023     +0 00000 0 00057                                                                                             
                 VECTOR VALUES ERASE = 0504K                                        007  LM00012
 00014     +0 00000 0 00504                                                                                             
                 VECTOR VALUES KILL = 0506K                                         008  LM00013
 00020     +0 00000 0 00506                                                                                             
                 VECTOR VALUES RETURN = 0055K                                       009  LM00014
 00024     +0 00000 0 00055                                                                                             
                 VECTOR VALUES WRDSIZ = 36                                          010  LM00015
 00030     +0 00000 0 00044                                                                                             
                 VECTOR VALUES CHMASK = 7777K                                       011  LM00016
 00012     +0 00000 0 07777                                                                                             
                 ENTRY TO SETERS.                                                   012  LM00018
 00037 TRA +0 02000 0 00042    00040 SXA +0 63400 2 00324    00041 TSX +0 07400 2 00324                                 
                   ERASE = LINE                                                     013  LM00019
 00042 CLA +0 50000 0 00024    00043 STO +0 60100 0 00014                                                               
                   FUNCTION RETURN                                                  014  LM00020
 00044 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO SETKIL.                                                   015  LM00022
 00045 TRA +0 02000 0 00050    00046 SXA +0 63400 2 00324    00047 TSX +0 07400 2 00324                                 
                   KILL = LINE                                                      016  LM00023
 00050 CLA +0 50000 0 00024    00051 STO +0 60100 0 00020                                                               
                   FUNCTION RETURN                                                  017  LM00024
 00052 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO CANON.                                                    018  LM00026
 00053 TRA +0 02000 0 00056    00054 SXA +0 63400 2 00324    00055 TSX +0 07400 2 00324                                 
                   FUNCTION RETURN                                                  019  LM00027
 00056 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO TYPEIN.                                                   020  LM00029
 00057 TRA +0 02000 0 00062    00060 SXA +0 63400 2 00324    00061 TSX +0 07400 2 00324                                 
                   SIZE = 0                                                         021  LM00030
 00062 CLA +0 50000 0 00031    00063 STO +0 60100 0 00025                                                               
                   TYLINE.                                                          022  LM00031
 00064 TSX +0 07400 4 00004                                                                                             
       LOOP        WORD = TYWORD.(0)                                                023  LM00032
 00065 TSX +0 07400 4 00005    00066 TXH +3 00000 0 00031    00067 STO +0 60100 0 00027                                 
                   THROUGH DISECT, FOR I = WRDSIZ-NBITS,-NBITS, I .L. 0             024  LM00033
 00070 CLA +0 50000 0 00030    00071 SUB +0 40200 0 00022    00072 STO +0 60100 0 00015    00073 TRA +0 02000 0 00077   
 00074 CLS +0 50200 0 00022    00075 ADD +0 40000 0 00015    00076 STO +0 60100 0 00015    00077 CLA +0 50000 0 00015   
 00100 SUB +0 40200 0 00031    00101 TZE +0 10000 0 00103    00102 TMI -0 12000 0 00200                                 
                     CHAR = (WORD.RS.I) .A. CHMASK                                  025  LM00034
 00103 CAL -0 50000 0 00015    00104 STA +0 62100 0 00106    00105 CAL -0 50000 0 00027    00106 LGR -0 76500 0 00000   
 00107 ANA -0 32000 0 00012    00110 SLW +0 60200 0 00011                                                               
                     WHENEVER CHAR .E. ERASE .OR. CHAR .E. E1                       026  LM00035
 00111 CLA +0 50000 0 00011    00112 SUB +0 40200 0 00013    00113 TZE +0 10000 0 00117    00114 CLA +0 50000 0 00011   
 00115 SUB +0 40200 0 00014    00116 TNZ -0 10000 0 00127                                                               
                       WHENEVER SIZE .G. 0, SIZE = SIZE - 1                         027  LM00036
 00117 CLA +0 50000 0 00025    00120 SUB +0 40200 0 00031    00121 TZE +0 10000 0 00126    00122 TMI -0 12000 0 00126   
 00123 CLA +0 50000 0 00025    00124 SUB +0 40200 0 00032    00125 STO +0 60100 0 00025                                 
                     OR WHENEVER CHAR .E. KILL .OR. CHAR .E. K1                     028  LM00037
 00126 TRA +0 02000 0 00172    00127 CLA +0 50000 0 00011    00130 SUB +0 40200 0 00017    00131 TZE +0 10000 0 00135   
 00132 CLA +0 50000 0 00011    00133 SUB +0 40200 0 00020    00134 TNZ -0 10000 0 00140                                 
                       SIZE = 0                                                     029  LM00038
 00135 CLA +0 50000 0 00031    00136 STO +0 60100 0 00025                                                               
                     O'R CHAR .E. RETURN .OR. CHAR.RS.6 .E. RETURN                  030  LM00039
 00137 TRA +0 02000 0 00172    00140 CAL -0 50000 0 00033    00141 STA +0 62100 0 00143    00142 CAL -0 50000 0 00011   
 00143 LGR -0 76500 0 00000    00144 SLW +0 60200 0 00346    00145 CLA +0 50000 0 00346    00146 SUB +0 40200 0 00024   
 00147 TZE +0 10000 0 00153    00150 CLA +0 50000 0 00011    00151 SUB +0 40200 0 00024    00152 TNZ -0 10000 0 00155   
                       TRANSFER TO UND                                              031  LM00040
 00153 TRA +0 02000 0 00010                                                                                             
                     O'R CHAR .A. 0400K .E. 0                                       032  LM00041
 00154 TRA +0 02000 0 00172    00155 CAL -0 50000 0 00011    00156 ANA -0 32000 0 00035    00157 SLW +0 60200 0 00346   
 00160 CLA +0 50000 0 00346    00161 SUB +0 40200 0 00031    00162 TNZ -0 10000 0 00172                                 
                       SIZE = SIZE + 1                                              033  LM00042
 00163 CLA +0 50000 0 00025    00164 ADD +0 40000 0 00032    00165 STO +0 60100 0 00025                                 
                       LINE(SIZE) = CHAR.A.77K                                      034  LM00043
 00166 CAL -0 50000 0 00011    00167 ANA -0 32000 0 00034    00170 LXA +0 53400 1 00025    00171 SLW +0 60200 1 00024   
                     END OF CONDITIONAL                                             035  LM00044
       DISECT        WHENEVER SIZE .GE. BUFSIZ, TRANSFER TO UND                     036  LM00045
 00172 CLA +0 50000 0 00025    00173 SUB +0 40200 0 00024    00174 TZE +0 10000 0 00176    00175 TMI -0 12000 0 00177   
 00176 TRA +0 02000 0 00010    00177 TRA +0 02000 0 00074                                                               
                   TRANSFER TO LOOP                                                 037  LM00046
 00200 TRA +0 02000 0 00007                                                                                             
      UND          SIZE = SIZE + 1                                                  038  LM00047
 00201 CLA +0 50000 0 00025    00202 ADD +0 40000 0 00032    00203 STO +0 60100 0 00025                                 
                   LINE(SIZE) = RETURN                                              039  LM00048
 00204 LXA +0 53400 1 00025    00205 CLA +0 50000 0 00024    00206 STO +0 60100 1 00024                                 
                   FUNCTION RETURN SIZE                                             040  LM00049
 00207 CLA +0 50000 0 00025    00210 TRA +0 02000 0 00342                                                               
                 ENTRY TO TYPOUT.                                                   041  LM00054
 00211 TRA +0 02000 0 00214    00212 SXA +0 63400 2 00324    00213 TSX +0 07400 2 00324                                 
                   K = 0                                                            042  LM00055
 00214 CLA +0 50000 0 00031    00215 STO +0 60100 0 00021                                                               
                   SETFUL.                                                          043  LM00056
 00216 TSX +0 07400 4 00003                                                                                             
                   THROUGH PRLOOP, FOR J = 1, 1, J .G. BUFSIZ                       044  LM00057
 00217 CLA +0 50000 0 00032    00220 STO +0 60100 0 00016    00221 TRA +0 02000 0 00225    00222 CLA +0 50000 0 00016   
 00223 ADD +0 40000 0 00032    00224 STO +0 60100 0 00016    00225 CLA +0 50000 0 00016    00226 SUB +0 40200 0 00024   
 00227 TZE +0 10000 0 00231    00230 TPL +0 12000 0 00261                                                               
                     TWORD = (TWORD .LS. NBITS) .V. LINE(J)                         045  LM00058
 00231 CAL -0 50000 0 00022    00232 STA +0 62100 0 00234    00233 CAL -0 50000 0 00026    00234 ALS +0 76700 0 00000   
 00235 LXA +0 53400 2 00016    00236 ORA -0 50100 2 00024    00237 SLW +0 60200 0 00026                                 
                     K = K + 1                                                      046  LM00059
 00240 CLA +0 50000 0 00021    00241 ADD +0 40000 0 00032    00242 STO +0 60100 0 00021                                 
                     WHENEVER K .GE. WRDSIZ/NBITS                                   047  LM00060
 00243 LDQ +0 56000 0 00030    00244 PXD -0 75400 0 00000    00245 LLS +0 76300 0 00000    00246 DVP +0 22100 0 00022   
 00247 XCA +0 13100 0 00000    00250 CHS +0 76000 0 00002    00251 ADD +0 40000 0 00021    00252 TZE +0 10000 0 00254   
 00253 TMI -0 12000 0 00260                                                                                             
                       K = 0                                                        048  LM00061
 00254 CLA +0 50000 0 00031    00255 STO +0 60100 0 00021                                                               
                       PRWORD.(TWORD)                                               049  LM00062
 00256 TSX +0 07400 4 00002    00257 TXH +3 00000 0 00026                                                               
       PRLOOP        END OF CONDITIONAL                                             050  LM00063
 00260 TRA +0 02000 0 00222                                                                                             
                   THROUGH NULPK, FOR K = K, 1, K.GE. WRDSIZ/NBITS                  051  LM00064
 00261 CLA +0 50000 0 00021    00262 STO +0 60100 0 00021    00263 TRA +0 02000 0 00267    00264 CLA +0 50000 0 00021   
 00265 ADD +0 40000 0 00032    00266 STO +0 60100 0 00021    00267 LDQ +0 56000 0 00030    00270 PXD -0 75400 0 00000   
 00271 LLS +0 76300 0 00000    00272 DVP +0 22100 0 00022    00273 XCA +0 13100 0 00000    00274 CHS +0 76000 0 00002   
 00275 ADD +0 40000 0 00021    00276 TZE +0 10000 0 00307    00277 TPL +0 12000 0 00307                                 
       NULPK         TWORD = (TWORD.LS.NBITS) .V. NULL                              052  LM00065
 00300 CAL -0 50000 0 00022    00301 STA +0 62100 0 00303    00302 CAL -0 50000 0 00026    00303 ALS +0 76700 0 00000   
 00304 ORA -0 50100 0 00023    00305 SLW +0 60200 0 00026    00306 TRA +0 02000 0 00264                                 
                   PRWORD.(TWORD)                                                   053  LM00066
 00307 TSX +0 07400 4 00002    00310 TXH +3 00000 0 00026                                                               
                   PRBUFF.                                                          054  LM00067
 00311 TSX +0 07400 4 00001                                                                                             
                   FUNCTION RETURN                                                  055  LM00068
 00312 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO HOL.                                                      056  LM00070
 00313 TRA +0 02000 0 00316    00314 SXA +0 63400 2 00324    00315 TSX +0 07400 2 00324                                 
                   FUNCTION RETURN LINE .A. 77K                                     057  LM00071
 00316 CAL -0 50000 0 00024    00317 ANA -0 32000 0 00034    00320 SLW +0 60200 0 00346    00321 CLA +0 50000 0 00346   
 00322 TRA +0 02000 0 00342                                                                                             
                 END OF FUNCTION                                                    058  LM00073
 00323 TSX +0 07400 4 00000    00324 TXH +3 00000 0 00000    00325 SXD -0 63400 1 00324    00326 SXA +0 63400 4 00342   
 00327 CLA +0 50000 4 00001    00330 STA +0 62100 0 00042    00331 STA +0 62100 0 00050    00332 STA +0 62100 0 00171   
 00333 STA +0 62100 0 00206    00334 STA +0 62100 0 00236    00335 STA +0 62100 0 00316    00336 CLA +0 50000 4 00002   
 00337 STA +0 62100 0 00173    00340 STA +0 62100 0 00226    00341 TRA +0 02000 2 00001    00342 AXT +0 77400 4 00000   
 00343 LXA +0 53400 2 00324    00344 LXD -0 53400 1 00324    00345 TRA +0 02000 4 00001                                 
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 1     
                  
                              *        J. H. SALTZER, MAY, 1965.  
                              *     
                       00004         ENTRY   RENAME        RENAME FILE. 
                              *     
                                     EXTERN CHFILE,WRFLX    
                              *     
                  
        TRANSFER VECTOR 
      00000  233026314325     CHFILE
      00001  665126436760     WRFLX 
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  512545214425     
                  
      00004  0500 60 4 00001  RENAME CLA*    1,4           GET FILE NAMES.    
      00005  0601 00 0 00071         STO     OLD1          ..     
      00006  0500 60 4 00002         CLA*    2,4           ..     
      00007  0601 00 0 00072         STO     OLD2          ..     
      00010  0601 00 0 00074         STO     NEW2          ASSUME NO CHANGE IN SECONDARY NAMES. 
      00011  0500 60 4 00003         CLA*    3,4           ..     
      00012  0601 00 0 00073         STO     NEW1          ..     
      00013  0560 00 4 00004         LDQ     4,4           CHECK FOR TXH
      00014  0500 00 0 00076         CLA     =O300000000000 ..    
      00015  0040 00 0 00020         TLQ     SKPN2         NO TXH, SECONDARY NAME UNCHANGED.    
      00016  0500 60 4 00004         CLA*    4,4           TXH, CHANGE SECONDARY NAME.    
      00017  0601 00 0 00074         STO     NEW2          ..     
      00020  0634 00 4 00036  SKPN2  SXA     RETURN,4      SAVE LINKAGE.
      00021  0074 00 4 00000         TSX     CHFILE,4      CHANGE NAME WITHOUT CHANGING MODE.   
 TD   00022  3 00000 0 00071         TXH     OLD1          ..     
 TD   00023  3 00000 0 00072         TXH     OLD2          ..     
 TD   00024  3 00000 0 00077         TXH     =-0           MODE UNCHANGED.    
 TD   00025  3 00000 0 00073         TXH     NEW1          ..     
 TD   00026  3 00000 0 00074         TXH     NEW2          ..     
      00027  0074 00 4 00000         TSX     CHFILE,4      CHANGE MODE WITHOUT CHANGING NAME.   
 TD   00030  3 00000 0 00073         TXH     NEW1          ..     
 TD   00031  3 00000 0 00074         TXH     NEW2          ..     
 TD   00032  3 00000 0 00075         TXH     =0            PERMANENT MODE.    
 TD   00033  3 00000 0 00077         TXH     =-0           NAME UNCHANGED.    
 TD   00034  3 00000 0 00077         TXH     =-0           ..     
 TD   00035  3 00000 0 00040         TXH     CHERR         IN CASE MODE UNCHANGEABLE.     
      00036  0774 00 4 00000  RETURN AXT     --,4          RESTORE LINKAGE.   
      00037  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
      00040  0074 00 4 00001  CHERR  TSX     WRFLX,4       ASSUME TRACK QUOTA EXHAUSTED, AND COMMENT. 
      00041  0 00010 0 00045                 TRKQUO,,8     ..     
      00042  0074 00 4 00001         TSX     WRFLX,4       MENTION THAT NEW FILE IS TEMP MODE.  
      00043  0 00013 0 00055                 TMPMOD,,11    ....   
      00044  0020 00 0 00036         TRA     RETURN        EXIT.  
                              *     
                              *              COMMENTS AND STORAGE.
                              *     
      00045  006301510121     TRKQUO BCI     8,0T1R1A1C1K0 1Q1U1O1T1A0 0E0X0H0A0U0S0T0E0D0.     
      00046  012301420060     
      00047  015001640146     
      00050  016301210060     
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 2     
                  
      00051  002500670030     
      00052  002100640062     
      00053  006300250024     
      00054  003360606060     
                              *     
      00055  007001460164     TMPMOD BCI     5,0Y1O1U1R0 1N1E1W0 1F1I1L1E0 1I 
      00056  015100600145     
      00057  012501660060     
      00060  012601310143     
      00061  012500600131     
      00062 +016200600133            OCT     016200600133  S, BLANK, RED SHIFT.     
      00063  006300250044            BCI     3,0T0E0M0P0O0R0A0R0Y 
      00064  004700460051     
      00065  002100510070     
      00066 +013200600144            OCT     013200600144  BLACK SHIFT, BLANK, SMALL M.   
      00067  014601240125            BCI     2,1O1D1E0.     
      00070  003360606060     
                              *     
      00071  0 00000 0 00000  OLD1  
      00072  0 00000 0 00000  OLD2  
      00073  0 00000 0 00000  NEW1  
      00074  0 00000 0 00000  NEW2  
                              *     
                                     END  
                  
        LITERALS  
      00075  000000000000     
      00076  300000000000     
      00077  400000000000     
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        100 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         73   NEW1    12,   25,   30
         74   NEW2    10,   17,   26,   31
         71   OLD1     5,   22
         72   OLD2     7,   23
         40  CHERR    35
         20  SKPN2    15
          1  WRFLX    40,   42
          0 CHFILE    21,   27
          4 RENAME     0
         36 RETURN    20,   44
         55 TMPMOD    43
         45 TRKQUO    41
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            LIBRARY PACKAGE.                                                                    PAGE 1     
                  
                       00024         ENTRY   .PCOMT        PRINT COMMENT ROUTINE    
                       00010         ENTRY   CHNCOM        GO DORMANT.  
                       00005         ENTRY   EXIT          SAME.  
                       00002         ENTRY   .SETUP        CALLED BY MAD MAIN PROGRA.     
                       00013         ENTRY   COMARG        GET COMMAND ARGUMENT.    
                       00106         ENTRY   WHOAMI   
                       00066         ENTRY   SETBCD   
                       00064         ENTRY   SETFUL   
                       00065         ENTRY   SETBRK   
                       00061         ENTRY   WRFLXA   
                       00063         ENTRY   WRFLX    
                       00062         ENTRY   RDFLXA   
                       00067         ENTRY   UPDATE        UPDATE U.F.D.
                       00070         ENTRY   CHFILE   
                       00071         ENTRY   DELFIL   
                       00072         ENTRY   FSTATE   
                       00073         ENTRY   BUFFER   
                       00074         ENTRY   OPEN     
                       00075         ENTRY   WRWAIT   
                       00076         ENTRY   WRFILE   
                       00077         ENTRY   RDWAIT   
                       00100         ENTRY   RDFILE   
                       00101         ENTRY   CLOSE    
                       00043         ENTRY   GETBUF        OBTAIN BUFFERS FROM SUPERVISOR.
                              *     
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  334723464463     
                  
      00002  0760 00 0 00016  .SETUP LMTM                  USE SEVEN TAG MODE.
      00003  0774 00 6 00000         AXT     0,6           SET UP IR6 TO AVOID EARLY CALL TO READ.    
      00004  0020 00 0 00064         TRA     SETFUL        USE FULL MODE.  SETFUL RETURNS 1,4.  
                              *     
      00005  0074 00 4 00066  EXIT   TSX     SETBCD,4      CLEANUP, RESET MODE.     
      00006  0074 00 4 00063         TSX     WRFLX,4       PUT OUT A STAR FOR RUNCOMS.    
      00007  0 00001 0 00060                 STAR,,1       AND THEN PERFORM CHNCOM SEQUENCE.    
      00010  0074 00 4 00102  CHNCOM TSX     CHN,4         THIS CHNCOM ALWAYS GOES DEAD,  
 TD   00011  3 00000 0 00107         TXH     =0            IF NO CHAIN EXISTS.
      00012  0020 00 0 00010         TRA     *-2           IN CASE OF RESTART, DON'T.     
                              *     
      00013  0634 00 4 00022  COMARG SXA     CM4,4         GET COMMAND ARGUMENT FOR MAD.  
      00014 -0500 60 4 00001         CAL*    1,4           GET ARGUMENT NUMBER.     
      00015  0602 00 0 00017         SLW     ARG           GIVE ARGUMENT NUMBER.    
      00016  0074 00 4 00103         TSX     GETCOM,4      GET COMMAND ARGUMENT.    
      00017  0 00000 0 00000   ARG                         ..     
      00020  0602 00 0 00017         SLW     ARG           MOVE TO ARITHMETIC AC.   
      00021  0500 00 0 00017         CLA     ARG           ..     
      00022  0774 00 4 00000   CM4   AXT     --,4          RESTORE LINKAGE.   
      00023  0020 00 4 00002         TRA     2,4           RETURN TO CALLER.  
                              *     
      00024 -0500 00 4 00001  .PCOMT CAL     1,4           GET WORD COUNT.    
      00025  0621 00 0 00042         STA     RETURN        ON RETURN, JUMP BUFFER.  
      00026  0767 00 0 00022         ALS     18            SETUP COUNT. 
      00027  0622 00 0 00036         STD     PCNT          ..     
      00030  1 77776 4 00031         TXI     *+1,4,-2      SETUP UP BUFFER ADDRESS. 
1            LIBRARY PACKAGE.                                                                    PAGE 2     
                  
      00031  0636 00 4 00036         SCA     PCNT,4        SAVE BUFFER ADDRESS, AND LINKAGE.    
      00032  0074 00 4 00064         TSX     SETFUL,4      MAKE SURE MODE SET AND NO LINES COMING IN. 
      00033  0074 00 4 00061         TSX     WRFLXA,4      SWITCH TO RED SHIFT.     
      00034  0 00001 0 00056                 REDS,,1       ..     
      00035  0074 00 4 00063         TSX     WRFLX,4       PRINT LINE.  
      00036  0 00000 0 00000   PCNT          --,,--        ..     
      00037  0074 00 4 00061         TSX     WRFLXA,4      SHIFT BACK TO BLACK.     
      00040  0 00001 0 00057                 BLCKS,,1      ..     
      00041  0535 00 4 00036         LAC     PCNT,4        RESTORE LINKAGE.   
      00042  0020 00 4 00000  RETURN TRA     --,4          RETURN TO CALLER.  
                              *     
      00043  0634 00 4 00052  GETBUF SXA     GX4,4         ENTRY TO GET BUFFERS.    
      00044  0602 00 0 00055         SLW     BUFSIZ        SIZE OF BUFFER IN AC.    
      00045  0074 00 4 00104         TSX     GETMEM,4      GET PRESENT BOUND. 
      00046  0601 00 0 00054         STO     START         SAVE AS BUFFER START.    
      00047  0361 00 0 00055         ACL     BUFSIZ        FORM NEW BOUND.    
      00050  0074 00 4 00105         TSX     SETMEM,4      ASK FOR MORE.
      00051 -0500 00 0 00054         CAL     START         GIVE CALLER LOCATION OF  
      00052  0774 00 4 00000   GX4   AXT     --,4          HIS NEW BUFFER.    
      00053  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      00054  0 00000 0 00000   START                       STORAGE FOR BUFFER LOCATION.   
      00055  0 00000 0 00000  BUFSIZ                       STORAGE FOR BUFFER SIZE. 
                              *     
      00056 +013300570057      REDS  OCT     013300570057  RED SHIFT AND TWO NULLS. 
      00057 +013200570057      BLCKS OCT     013200570057  BLACK SHIFT AND TWO NULLS.     
      00060 -145757575757     STAR   OCT     545757575757  ASTERISK AND 5 NULLS.    
                              *     
                              *              SUPERVISOR SUBROUTINE CALLERS.   
                              *     
      00061  0101 00 0 00133  WRFLXA TIA     =HWRFLXA 
      00062  0101 00 0 00122  RDFLXA TIA     =HRDFLXA 
      00063  0101 00 0 00134  WRFLX  TIA     =HWRFLX  
      00064  0101 00 0 00126  SETFUL TIA     =HSETFUL 
      00065  0101 00 0 00125  SETBRK TIA     =HSETBRK 
      00066  0101 00 0 00124  SETBCD TIA     =HSETBCD 
      00067  0101 00 0 00130  UPDATE TIA     =HUPDATE 
      00070  0101 00 0 00111  CHFILE TIA     =HCHFILE 
      00071  0101 00 0 00114  DELFIL TIA     =HDELFIL 
      00072  0101 00 0 00115  FSTATE TIA     =HFSTATE 
      00073  0101 00 0 00110  BUFFER TIA     =HBUFFER 
      00074  0101 00 0 00120  OPEN   TIA     =HOPEN   
      00075  0101 00 0 00135  WRWAIT TIA     =HWRWAIT 
      00076  0101 00 0 00132  WRFILE TIA     =HWRFILE 
      00077  0101 00 0 00123  RDWAIT TIA     =HRDWAIT 
      00100  0101 00 0 00121  RDFILE TIA     =HRDFILE 
      00101  0101 00 0 00113  CLOSE  TIA     =HCLOSE  
      00102  0101 00 0 00112  CHN    TIA     =HCHNCOM 
      00103  0101 00 0 00116  GETCOM TIA     =HGETCOM 
      00104  0101 00 0 00117  GETMEM TIA     =HGETMEM 
      00105  0101 00 0 00127  SETMEM TIA     =HSETMEM 
      00106  0101 00 0 00131  WHOAMI TIA     =HWHOAMI 
                              *     
                                     END  
1            LIBRARY PACKAGE.                                                                    PAGE 3     
                  
        LITERALS  
      00107  000000000000     
      00110  226426262551     
      00111  233026314325     
      00112  233045234644     
      00113  234346622560     
      00114  242543263143     
      00115  266263216325     
      00116  272563234644     
      00117  272563442544     
      00120  464725456060     
      00121  512426314325     
      00122  512426436721     
      00123  512466213163     
      00124  622563222324     
      00125  622563225142     
      00126  622563266443     
      00127  622563442544     
      00130  644724216325     
      00131  663046214431     
      00132  665126314325     
      00133  665126436721     
      00134  665126436760     
      00135  665166213163     
1            LIBRARY PACKAGE.                                                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        136 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         17    ARG    15,   20,   21
        102    CHN    10
         22    CM4    13
         52    GX4    43
          5   EXIT     0
         74   OPEN     0
         36   PCNT    27,   31,   41
         56   REDS    34
         60   STAR     7
         57  BLCKS    40
        101  CLOSE     0
         54  START    46,   51
         63  WRFLX     0,    6,   35
         73 BUFFER     0
         55 BUFSIZ    44,   47
         70 CHFILE     0
         10 CHNCOM     0
         13 COMARG     0
         71 DELFIL     0
         72 FSTATE     0
         43 GETBUF     0
        103 GETCOM    16
        104 GETMEM    45
         24 .PCOMT     0
          2 .SETUP     0
        100 RDFILE     0
         62 RDFLXA     0
         77 RDWAIT     0
         42 RETURN    25
         66 SETBCD     0,    5
         65 SETBRK     0
         64 SETFUL     0,    4,   32
        105 SETMEM    50
         67 UPDATE     0
        106 WHOAMI     0
         76 WRFILE     0
         61 WRFLXA     0,   33,   37
         75 WRWAIT     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 1     
                  
                              *      NOTE, INDEX REGISTERS SIX AND SEVEN MUST BE PRESERVED
                              *      BY THE CALLING PROGRAM.
                              *      THIS ROUTINE MAKES TYPEWRITER COMMENTS, BUT DOES NOT 
                              *      AFFECT THE BCD-FULL MODE SWITCH.   
                              *     
                              *           J. H. SALTZER, JANUARY, 1965. 
                              *     
                       00015         ENTRY   ASSIGN        TO ASSIGN A NAME TO THE WRITE FILE.  
                       00057         ENTRY   WRWORD        TO ADD A WORD TO THE FILE.     
                       00100         ENTRY   FILE          TO CLOSE THE FILE. 
                              *     
                       00160         ENTRY   SEEK          TO OPEN A FILE FOR READING.    
                       00242         ENTRY   RDWORD        TO GET A WORD FROM FILE. 
                       00275         ENTRY   ENDRD         TO CLOSE THE FILE. 
                              *     
                                     EXTERN  GETBUF,SETBCD,SETFUL,WRFLX,WRFLXA
                                     EXTERN  OPEN,WRWAIT,RDWAIT,CLOSE,FSTATE,BUFFER 
                              *     
                              *      ASSIGN.($NAME1$,$NAME2$)     
                              *     
                  
        TRANSFER VECTOR 
      00000  272563226426     GETBUF
      00001  622563222324     SETBCD
      00002  622563266443     SETFUL
      00003  665126436760     WRFLX 
      00004  665126436721     WRFLXA
      00005  464725456060     OPEN  
      00006  665166213163     WRWAIT
      00007  512466213163     RDWAIT
      00010  234346622560     CLOSE 
      00011  266263216325     FSTATE
      00012  226426262551     BUFFER
                  
            LINKAGE DIRECTOR  
      00013  000000000000     
      00014  216262312745     
                  
      00015 -0500 60 4 00001  ASSIGN CAL*    1,4           OPEN FILE, GET FILE NAME.
      00016  0602 00 0 00304         SLW     OUTNAM        ..     
      00017 -0500 60 4 00002         CAL*    2,4           ..     
      00020  0602 00 0 00305         SLW     OUTNAM+1      ..     
      00021  0634 00 4 00041         SXA     OPX4,4        SAVE LINKAGE.
      00022  0020 00 0 00023   OSW   TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                    *******************
      00023 -0500 00 0 00315         CAL     WBFSZ         GET AN OUTPUT BUFFER FROM SUPERVISOR.
      00024  0074 00 4 00000         TSX     GETBUF,4      ..     
      00025  0621 00 0 00071         STA     WCALL         SAVE LOCATION OF BUFFER. 
      00026  0621 00 0 00113         STA     CLCALL        TO CLOSE OUT FILE. 
      00027  0361 00 0 00315         ACL     WBFSZ         ADD LENGTH, TO FORM END ADDRESS.     
      00030  0621 00 0 00060         STA     WRNM          INSERT IN INSERTER.
      00031 -0500 00 0 00313         CAL     TRKSZ         GET A DISK TRACK BUFFER. 
      00032  0074 00 4 00000         TSX     GETBUF,4      ..     
      00033  0621 00 0 00055         STA     BFCALL        SET UP BUFFER CALLER.    
      00034 -0625 00 0 00022         STL     OSW           RESET ONE-TIME SWITCH.   
                              *                                                    *******************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 2     
                  
      00035  0774 00 4 00040         AXT     OPOK,4        SET QUOTA EXHAUSTED ERROR RETURN.    
      00036  0634 00 4 00143         SXA     WRTN,4        ..     
      00037  0074 00 3 00043         TSX     OPN,3         OPEN THE FILE.     
      00040  0774 00 7 00330  OPOK   AXT     WBFLTH,7      SET UP STORAGE COUNT.    
      00041  0774 00 4 00000   OPX4  AXT     --,4          RESTORE LINKAGE.   
      00042  0020 00 4 00003         TRA     3,4           RETURN.
                              *     
      00043  0074 00 4 00005  OPN    TSX     OPEN,4        OPEN FILE.   
 TD   00044  3 00000 0 00324         TXH     =HW           FOR WRITING. 
 TD   00045  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00046  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00047  3 00000 0 00156         TXH     MODE          MAKE IT PERMANENT IF POSSIBLE. 
 TD   00050  3 00000 0 00320         TXH     =2            PUT IT ON THE DISK.
 TD   00051  3 00000 0 00127  OPERR  TXH     OEXH          IN CASE NO MORE QUOTA AVAILABLE.     
      00052  0074 00 4 00012         TSX     BUFFER,4      ASSIGN A BUFFER FOR THE FILE.  
 TD   00053  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00054  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00055  3 00660 0 00000  BFCALL TXH     --,,TRKLTH    ..     
      00056  0020 00 3 00001         TRA     1,3           RETURN TO CALLER.  
                              *     
                              *     
                              *      ENTRY TO ADD A WORD TO FILE. 
                              *              WRWORD.(WORD)  
                              *     
      00057 -0500 60 4 00001  WRWORD CAL*    1,4           GET WORD TO BE ADDED.    
      00060  0602 00 7 00000   WRNM  SLW     --,7          ADD WORD TO OUTPUT BUFFER.     
      00061  2 00001 7 00077         TIX     RETURN,7,1    COUNT AND CHECK FOR FULL BUFFER.     
      00062  0634 00 4 00076   FULL  SXA     FULX4,4       BUFFER FULL, WRITE IT OUT.     
      00063  0774 00 4 00065         AXT     WRAGN,4       SET UP EXHAUSTED RETURN ADDRESS.     
      00064  0634 00 4 00143         SXA     WRTN,4        ..     
      00065  0074 00 4 00006  WRAGN  TSX     WRWAIT,4      GIVE BUFFER TO SUPERVISOR.     
 TD   00066  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00067  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00070  3 00000 0 00316         TXH     =0            ..     
      00071  3 00330 0 00000  WCALL  TXH     --,,WBFLTH    ..     
 TD   00072  3 00000 0 00321         TXH     =-0           IGNORE POSSIBLE EOF.     
 TD   00073  3 00000 0 00321         TXH     =-0           ..     
 TD   00074  3 00000 0 00124  WRERR  TXH     WEXH          ALLOW ERROR RETURN.
      00075  0774 00 7 00330         AXT     WBFLTH,7      RESET BUFFER POINTER.    
      00076  0774 00 4 00000   FULX4 AXT     --,4          RESTORE LINKAGE.   
      00077  0020 00 4 00002  RETURN TRA     2,4           RETURN TO CALLER.  
                              *     
                              *      FILE.     NO ARGUMENTS.
                              *     
      00100  0634 00 4 00122  FILE   SXA     CL4,4         ENTRY TO CLOSE OUT FILE. 
      00101 -0634 00 7 00103         SXD     *+2,7         FORM COUNT OF WORDS SINCE
      00102  0774 00 7 00330         AXT     WBFLTH,7      LAST BUFFER WAS WRITTEN. 
      00103 -2 00000 7 00117         TNX     NOWR,7,--     IF ZERO, SKIP FINAL WRITE CALL.
      00104 -0634 00 7 00113         SXD     CLCALL,7      NON-ZERO, SET UP WRITE CALL.   
      00105  0774 00 4 00107         AXT     FWR,4         SET UP RETURN ADDRESS FOR EXHAUSTED CASE.  
      00106  0634 00 4 00143         SXA     WRTN,4        ..     
      00107  0074 00 4 00006  FWR    TSX     WRWAIT,4      WRITE OUT PARTIAL BUFFER.
 TD   00110  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00111  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00112  3 00000 0 00316         TXH     =0            ..     
      00113  3 00000 0 00000  CLCALL TXH     --,,--        ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 3     
                  
 TD   00114  3 00000 0 00321         TXH     =-0           IGNORE EOF RETURN. 
 TD   00115  3 00000 0 00321         TXH     =-0           ..     
 TD   00116  3 00000 0 00124         TXH     WEXH          ALLOW ERROR RETURN.
      00117  0074 00 4 00010  NOWR   TSX     CLOSE,4       CLOSE OUT THE FILE.
 TD   00120  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00121  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00122  0774 00 4 00000   CL4   AXT     --,4          RESTORE LINKAGE.   
      00123  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00124  0074 00 4 00010  WEXH   TSX     CLOSE,4       TRACK QUOTA EXHAUSTED, CLOSE FILE.   
 TD   00125  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00126  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00127  0074 00 4 00001  OEXH   TSX     SETBCD,4      ENTRY FROM OPEN ERROR, COMMENT.
      00130  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00131  0074 00 4 00003         TSX     WRFLX,4       ..     
      00132  0 00011 0 00144                 ERMESS,,9
      00133  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00134  0074 00 4 00002         TSX     SETFUL,4      YES, RESET INDICATOR.    
      00135 -0500 00 0 00317         CAL     =1            SWITCH TO TEMPORARY MODE.
      00136  0601 00 0 00156         STO     MODE          ..     
      00137 -0500 00 0 00155         CAL     NOP           BLOCK FUTURE ERROR RETURN.     
      00140  0602 00 0 00051         SLW     OPERR         ..     
      00141  0602 00 0 00074         SLW     WRERR    
      00142  0074 00 3 00043         TSX     OPN,3         NOW, OPEN IT AGAIN.
      00143  0020 00 0 00000  WRTN   TRA     --            ALL FIXED, RETURN TO MAIN STREAM.    
                              *     
      00144  635121234260     ERMESS BCI     9,TRACK QUOTA EXHAUSTED, TEMPORARY MODE WILL BE USED.    
      00145  506446632160     
      00146  256730216462     
      00147  632524736063     
      00150  254447465121     
      00151  517060444624     
      00152  256066314343     
      00153  602225606462     
      00154  252433606060     
      00155  0761 00 0 00000   NOP   NOP                   INSTRUCTION TO BLOCK ERROR RETURN.   
      00156  0 00000 0 00000  MODE           0             START IN PERMANENT MODE. 
      00157  0 00000 0 00000  MODSW                        TEMP STORAGE FOR 6-BIT,12-BIT INDICATOR.   
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     
                              *      SEEK.($NAME1$, $NAME2$, ERRET)     
                              *      ERROR RETURN MEANS FILE NOT FOUND. 
                              *     
      00160 -0500 60 4 00001   SEEK  CAL*    1,4           GET FILE NAME.     
      00161  0602 00 0 00306         SLW     INNAM         ..     
      00162 -0500 60 4 00002         CAL*    2,4           ..     
      00163  0602 00 0 00307         SLW     INNAM+1       ..     
      00164  0634 00 4 00222         SXA     SKX4,4        SAVE LINKAGE.
      00165  0020 00 0 00166   SKSW  TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                  *********************
      00166 -0500 00 0 00314         CAL     RBFSZ         GET A BUFFER FROM SUPERVISOR.  
      00167  0074 00 4 00000         TSX     GETBUF,4      ..     
      00170  0621 00 0 00257         STA     ECALL         STORE BUFFER LOCATION.   
      00171  0621 00 0 00217         STA     STCALL        ..     
      00172 -0625 00 0 00165         STL     SKSW          RESET ONE-TIME SWITCH.   
                              *                                                  *********************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 4     
                  
      00173 -0500 00 0 00217         CAL     STCALL        SET UP PICKUP INSTRUCTION FOR INDEXING.    
      00174  0361 00 0 00314         ACL     RBFSZ         ..     
      00175  0621 00 0 00242         STA     RDWORD        ..     
      00176  0074 00 4 00011         TSX     FSTATE,4      MAKE SURE FILE IS THERE. 
 TD   00177  3 00000 0 00306         TXH     INNAM         ..     
 TD   00200  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00201  3 00000 0 00321         TXH     =-0           DON'T WANT DATA.   
 TD   00202  3 00000 0 00224         TXH     NOTFN         ERROR RETURN MEANS FILE NOT THERE.   
      00203  0074 00 4 00005         TSX     OPEN,4        OPEN THE FILE FOR READING.     
 TD   00204  3 00000 0 00322         TXH     =HR           ..     
 TD   00205  3 00000 0 00306         TXH     INNAM         ..     
 TD   00206  3 00000 0 00307         TXH     INNAM+1       ..     
      00207  0774 00 6 00660         AXT     RBFLTH,6      SET UP BUFFER COUNTER.   
      00210  0774 00 4 00222         AXT     SKX4,4        SET END OF FILE RETURN.  
      00211  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00212  0600 00 0 00312         STZ     EOFR          CLEAR END OF FILE SWITCH.
      00213  0074 00 4 00007         TSX     RDWAIT,4      GET INITIAL BUFFER LOAD. 
 TD   00214  3 00000 0 00306         TXH     INNAM         ..     
 TD   00215  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00216  3 00000 0 00316         TXH     =0            ..     
      00217  3 00660 0 00000  STCALL TXH     --,,RBFLTH    ..     
 TD   00220  3 00000 0 00265         TXH     EOF           END OF FILE RETURN.
 TD   00221  3 00000 0 00311         TXH     EOFCT         ..     
      00222  0774 00 4 00000   SKX4  AXT     --,4          RESTORE LINKAGE.   
      00223  0020 00 4 00004         TRA     4,4           RETURN TO CALLER.  
                              *     
      00224  0074 00 4 00001  NOTFN  TSX     SETBCD,4      FILE NOT FOUND, COMMENT. 
      00225  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00226  0074 00 4 00004         TSX     WRFLXA,4      START UP COMMENT.  
      00227  0 00001 0 00323                 =H FILE ,,1   ..     
      00230  0074 00 4 00004         TSX     WRFLXA,4      INSERT FILE NAME.  
      00231  0 00002 0 00306                 INNAM,,2      ..     
      00232  0074 00 4 00003         TSX     WRFLX,4       END OF COMMENT.    
      00233  0 00002 0 00240                 ECM,,2        ..     
      00234  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00235  0074 00 4 00002         TSX     SETFUL,4      YES, RESET MODE.   
      00236  0534 00 4 00222         LXA     SKX4,4        GIVE ERROR RETURN. 
      00237  0020 60 4 00003         TRA*    3,4           ..     
                              *     
      00240  604546636026     ECM    BCI     2, NOT FOUND.  
      00241  466445243360     
                              *     
                              *      ENTRY TO OBTAIN WORD FROM FILE.    
                              *              WORD = RDWORD.(EOF)  
                              *     
      00242  0500 00 6 00000  RDWORD CLA     --,6          GET WORD FROM INPUT BUFFER.    
      00243  2 00001 6 00264         TIX     GOBACK,6,1    INDEX, AND CHECK FOR EMPTY BUFFER.   
      00244  0520 00 0 00312         ZET     EOFR          BUFFER EMPTY, HAS END OF FILE OCCURRED.    
      00245  0020 60 4 00001         TRA*    1,4           YES, GIVE EOF RETURN.    
      00246  0601 00 0 00310         STO     RTEMP         NO, SAVE WORD AND GET SOME MORE DATA.
      00247  0634 00 4 00263         SXA     EMPX4,4       SAVE LINKAGE, ALSO.
      00250  0774 00 6 00660         AXT     RBFLTH,6      RESET BUFFER POINTER.    
      00251  0774 00 4 00262         AXT     EMPGT,4       SET END OF FILE RETURN.  
      00252  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00253  0074 00 4 00007         TSX     RDWAIT,4      GET ANOTHER BUFFER LOAD OF DATA.     
 TD   00254  3 00000 0 00306         TXH     INNAM         ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 5     
                  
 TD   00255  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00256  3 00000 0 00316         TXH     =0            ..     
      00257  3 00660 0 00000  ECALL  TXH     --,,RBFLTH    ..     
 TD   00260  3 00000 0 00265         TXH     EOF           ..     
 TD   00261  3 00000 0 00311         TXH     EOFCT         ..     
      00262  0500 00 0 00310   EMPGT CLA     RTEMP         RESTORE WORD FOR THIS CALL.    
      00263  0774 00 4 00000   EMPX4 AXT     --,4          RESTORE LINKAGE.   
      00264  0020 00 4 00002  GOBACK TRA     2,4           RETURN TO CALLER.  
                              *     
      00265 -0625 00 0 00312  EOF    STL     EOFR          END OF FILE REACHED, SET SWITCH.     
      00266 -0500 00 0 00311         CAL     EOFCT         GET COUNT OF WORDS LEFT. 
      00267  0361 00 0 00317         ACL     =1            BUGGER WORD COUNT. 
      00270  0734 00 6 00000         PAX     0,6           SET WORD COUNTER.  
      00271  0361 00 0 00257         ACL     ECALL         ADJUST PICKUP INSTRUCTION.     
      00272  0621 00 0 00242         STA     RDWORD        ..     
      00273  0074 00 4 00275         TSX     ENDRD,4       TURN OFF FILE.     
      00274  0020 00 0 00000  EOFRTN TRA     --            RETURN TO END OF RDFILE CALLING SEQUENCE.  
                              *     
                              *      ENTRY TO CLOSE INPUT FILE.   
                              *      ENDRD.     
                              *     
      00275  0634 00 4 00302  ENDRD  SXA     ENDX4,4       SAVE LINKAGE.
      00276  0074 00 4 00010         TSX     CLOSE,4       CLOSE FILE.  
 TD   00277  3 00000 0 00306         TXH     INNAM         ..     
 TD   00300  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00301  3 00000 0 00302         TXH     *+1           IGNORE ANY ERROR RETURN. 
      00302  0774 00 4 00000  ENDX4  AXT     --,4          RESTORE LINKAGE.   
      00303  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00304  545454545454     OUTNAM BCI     2,************  NAME OF OUTPUT FILE.   
      00305  545454545454     
      00306  545454545454      INNAM BCI     2,************  NAME OF INPUT FILE.    
      00307  545454545454     
      00310  0 00000 0 00000   RTEMP                       STORAGE FOR WORD.  
      00311  0 00000 0 00000  EOFCT                        STORAGE FOR END OF FILE COUNTER.     
      00312  0 00000 0 00312   EOFR          *             SWITCH FOR END OF FILE MET.    
                              *     
                       00660  TRKLTH EQU     432           DISK TRACK LENGTH. 
      00313  0 00000 0 00660   TRKSZ         TRKLTH        WORD CONTAINING TRACK LENGTH.  
                       00660  RBFLTH EQU     TRKLTH        READ BUFFER LENGTH.
                       00330  WBFLTH EQU     TRKLTH/2      WRITE BUFFER LENGTH.     
      00314  0 00000 0 00660  RBFSZ          RBFLTH        WORD CONTAINING READ BUFFER SIZE.    
      00315  0 00000 0 00330  WBFSZ          WBFLTH        WORD CONTAINING WRITE BUFFER SIZE.   
                              *     
                                     END  
                  
        LITERALS  
      00316  000000000000     
      00317  000000000001     
      00320  000000000002     
      00321  400000000000     
      00322  516060606060     
      00323  602631432560     
      00324  666060606060     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        325 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        122    CL4   100
        240    ECM   233
        265    EOF   220,  260
        107    FWR   105
        155    NOP   137
         43    OPN    37,  142
         22    OSW    34
        312   EOFR   212,  244,  265
        100   FILE     0
         62   FULL      
        156   MODE    47,  136
        117   NOWR   103
        127   OEXH    51
          5   OPEN    43,  203
         40   OPOK    35
         41   OPX4    21
        160   SEEK     0
        165   SKSW   172
        222   SKX4   164,  210,  236
        124   WEXH    74,  116
         60   WRNM    30
        143   WRTN    36,   64,  106
         10  CLOSE   117,  124,  276
        257  ECALL   170,  271
        262  EMPGT   251
        263  EMPX4   247
        275  ENDRD     0,  273
        302  ENDX4   275
        311  EOFCT   221,  261,  266
         76  FULX4    62
        306  INNAM   161,  163,  177,  200,  205,  206,  214,  215,  231,  254,  255,  277,  300
        157  MODSW   130,  133,  225,  234
        224  NOTFN   202
         51  OPERR   140
        314  RBFSZ   166,  174
        310  RTEMP   246,  262
        313  TRKSZ    31
        315  WBFSZ    23,   27
         71  WCALL    25
         65  WRAGN    63
         74  WRERR   141
          3  WRFLX   131,  232
         15 ASSIGN     0
         55 BFCALL    33
         12 BUFFER    52
        113 CLCALL    26,  104
        274 EOFRTN   211,  252
        144 ERMESS   132
         11 FSTATE   176
          0 GETBUF    24,   32,  167
        264 GOBACK   243
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        304 OUTNAM    16,   20,   45,   46,   53,   54,   66,   67,  110,  111,  120,  121,  125,  126
        660 RBFLTH   207,  217,  250,  257,  314
          7 RDWAIT   213,  253
        242 RDWORD     0,  175,  272
         77 RETURN    61
          1 SETBCD   127,  224
          2 SETFUL   134,  235
        217 STCALL   171,  173
        660 TRKLTH    55,  313,  314
        330 WBFLTH    40,   71,   75,  102,  314,  315
          4 WRFLXA   226,  230
          6 WRWAIT    65,  107
         57 WRWORD     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 1     
                  
                              *      USAGE  CLRNAM.(NAME1, NAME2, CANT, SW)   
                              *        FILE NAME1 NAME2 WILL BE CHECKED FOR AND     
                              *        DELETED IF POSSIBLE.  IF SW
                              *        IS TRUE, USER WILL BE ASKED BEFORE DELETING  
                              *        THE OLD FILE.  
                              *     
                       00012         ENTRY   CLRNAM        CLEAR FILE NAME.   
                              *     
                                     EXTERN  SETFUL,SETBCD,WRFLX,WRFLXA,RDFLXA
                                     EXTERN  FSTATE,CHFILE,DELFIL 
                              *     
                  
        TRANSFER VECTOR 
      00000  622563266443     SETFUL
      00001  622563222324     SETBCD
      00002  665126436760     WRFLX 
      00003  665126436721     WRFLXA
      00004  512426436721     RDFLXA
      00005  266263216325     FSTATE
      00006  233026314325     CHFILE
      00007  242543263143     DELFIL
                  
            LINKAGE DIRECTOR  
      00010  000000000000     
      00011  234351452144     
                  
      00012 -0500 60 4 00001  CLRNAM CAL*    1,4           GET FILE NAME.     
      00013  0602 00 0 00121         SLW     N1            ..     
      00014 -0500 60 4 00002         CAL*    2,4           SECONDARY NAME.    
      00015  0602 00 0 00122         SLW     N2            ..     
      00016  0634 00 4 00147         SXA     SV4,4         SAVE LINKAGE.
      00017  0074 00 4 00005         TSX     FSTATE,4      CHECK STATE OF FILE.     
 TD   00020  3 00000 0 00121         TXH     N1            NAME   
 TD   00021  3 00000 0 00122         TXH     N2            NAME   
      00022  3 00010 0 00156         TXH     DATA,,8       FILE STATE   
 TD   00023  3 00000 0 00112         TXH     FSTERR        IN CASE OF ERROR   
 TD   00024  3 00000 0 00155         TXH     ERNO          GATHER ERROR NUMBER.     
      00025  0441 00 0 00157         LDI     MODE          CHECK MODE OF FILE.
      00026 -0054 00  400000         LFT     400000        IS MODE NEGATIVE.  
      00027  0020 00 0 00100         TRA     LINKED        YES, FILE IS LINKED.     
      00030  0600 00 0 00154         STZ     PROTEC        ASSUME NOT PROTECTED.    
      00031  0056 00  000100         RNT     100           CHECK PROTECTED BIT.     
      00032  0020 00 0 00035         TRA     CKASK         NOT PROTECTED, SHOULD WE ASK ANYWAY. 
      00033 -0625 00 0 00154         STL     PROTEC        PROTECTED, SET SWITCH FOR LONG COMMENT.    
      00034  0020 00 0 00040         TRA     ASK           GO ASK PERMISSION TO DELETE FILE.    
      00035  0534 00 4 00147  CKASK  LXA     SV4,4         GET LINKAGE TO ASK SWITCH.     
      00036 -0520 60 4 00004         NZT*    4,4           SHOULD WE ASK PERMISSION ANYWAY.     
      00037  0020 00 0 00065         TRA     DELETE        NO, GO DELETE FILE.
      00040  0074 00 4 00000  ASK    TSX     SETFUL,4      SET CHARACTER MODE SWITCH.     
      00041  0074 00 4 00003         TSX     WRFLXA,4      BEGIN THE COMMENT. 
      00042  0 00003 0 00116                 MI,,3         ..     
      00043  0074 00 4 00001         TSX     SETBCD,4      SWITCH TO BCD FOR FILE NAME.   
      00044  0074 00 4 00003         TSX     WRFLXA,4      WRITE OUT FILE NAME.     
      00045  0 00002 0 00121                 N1,,2    
      00046  0074 00 4 00000         TSX     SETFUL,4      BACK TO FULL MODE. 
      00047 -0520 00 0 00154         NZT     PROTEC        SHOULD WE CLAIM IT IS PROTECTED.     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 2     
                  
      00050  0020 00 0 00053         TRA     SKPPCM        NO, SKIP THAT PART.
      00051  0074 00 4 00003         TSX     WRFLXA,4      YES, ANNOUNC PROTECTED PART.   
      00052  0 00006 0 00123                 ISPTC,,6      ..     
      00053  0074 00 4 00003  SKPPCM TSX     WRFLXA,4      NOW ASK FOR PERMISSION.  
      00054  0 00012 0 00131                 DOYOU,,10     ..     
      00055  0074 00 4 00001         TSX     SETBCD,4      SWITCH SO ERASE WORKS.   
      00056  0074 00 4 00004         TSX     RDFLXA,4 
      00057  0 00001 0 00150                 IN,,1         GET ONE WORD.
      00060  0074 00 4 00000         TSX     SETFUL,4      RESTORE MODE.
      00061 -0500 00 0 00150         CAL     IN            GET THAT WORD.     
      00062  0771 00 0 00022         ARS     18            GET FIRST THREE CHARACTERS.    
      00063  0322 00 0 00170         ERA     =H000YES      DID HE SAY YES.    
      00064 -0100 00 0 00076         TNZ     ERTN          NO, GIVE ERROR RETURN.   
      00065  0074 00 4 00006  DELETE TSX     CHFILE,4      GOODY, WE CAN DELETE IT. 
 TD   00066  3 00000 0 00121         TXH     N1            MAKE SURE IT IS DELETEABLE.    
 TD   00067  3 00000 0 00122         TXH     N2            ..     
 TD   00070  3 00000 0 00166         TXH     =1            BY CHANGING ITS MODE TO TEMPORARY.   
      00071  0074 00 4 00007         TSX     DELFIL,4      DELETE THE SILLY THING.  
 TD   00072  3 00000 0 00121         TXH     N1            ..     
 TD   00073  3 00000 0 00122         TXH     N2            ..     
      00074  0534 00 4 00147  RTN    LXA     SV4,4         RESTORE THE LINKAGE.     
      00075  0020 00 4 00005         TRA     5,4           RETURN TO CALLER.  
                              *     
      00076  0534 00 4 00147  ERTN   LXA     SV4,4         ERROR RETURN, FILE CANNOT BE DELETED.
      00077  0020 60 4 00003         TRA*    3,4           RETURN THROUGH ERROR RETURN.   
                              *     
      00100  0074 00 4 00000  LINKED TSX     SETFUL,4      FILE IS LINKED, COMMENT AND GIVE UP. 
      00101  0074 00 4 00003         TSX     WRFLXA,4      START THE COMMENT. 
      00102  0 00003 0 00116                 MI,,3         ..     
      00103  0074 00 4 00001         TSX     SETBCD,4      SWITCH MODE FOR FILE NAME.     
      00104  0074 00 4 00003         TSX     WRFLXA,4      TYPE FILE NAME.    
      00105  0 00002 0 00121                 N1,,2         ..     
      00106  0074 00 4 00000         TSX     SETFUL,4      SWITCH FOR REST OF COMMENT.    
      00107  0074 00 4 00002         TSX     WRFLX,4       END THIS PART WITH A C.R.
      00110  0 00004 0 00143                 ISLNK,,4      ..     
      00111  0020 00 0 00076         TRA     ERTN          NOW GIVE AN ERROR RETURN.
                              *     
      00112  0500 00 0 00155  FSTERR CLA     ERNO          ERROR RETURN FROM FSTATE, FIND OUT WHY.    
      00113  0402 00 0 00167         SUB     =3            RETURN 3 MEANS FILE NOT FOUND. 
      00114 -0100 00 0 00100         TNZ     LINKED        WRONG ERROR RETURN, ASSUME LINKED.   
      00115  0020 00 0 00074         TRA     RTN           FILE NOT FOUND, NAME IS OK.    
                              *     
                              *                            DATA, COMMENTS, ETC.     
                              *     
      00116  004601430124     MI     BCI     3,0O1L1D0 1F1I1L1E0  
      00117  006001260131     
      00120  014301250060     
                              *     
      00121  0 00000 0 00000  N1                           STORAGE FOR FILE NAME.   
      00122  0 00000 0 00000  N2                           SECONDARY NAME.    
                              *     
      00123  006001310162     ISPTC  BCI     1,0 1I1S 
      00124 +006001330057            OCT     006001330057  BLANK, RED SHIFT, NULL.  
      00125  004700510046            BCI     3,0P0R0O0T0E0C0T0E0D 
      00126  006300250023     
      00127  006300250024     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 3     
                  
      00130 +013200330060            OCT     013200330060  BLACK SHIFT, PERIOD, BLANK.    
      00131  006000400040     DOYOU  BCI     9,0 0-0-0D1O0 1Y1O1U0 1W1I1S1H0 1T1O0 1D1E1L1E1T1E0 1I1T 
      00132  002401460060     
      00133  017001460164     
      00134  006001660131     
      00135  016201300060     
      00136  016301460060     
      00137  012401250143     
      00140  012501630125     
      00141  006001310163     
      00142 +015600600060            OCT     015600600060  TERMINAL QUESTION MARK.  
                              *     
      00143  006001310162     ISLNK  BCI     4,0 1I1S0 1L1I1N1K1E1D0.   
      00144  006001430131     
      00145  014501420125     
      00146  012400336060     
                              *     
      00147  0 00000 0 00000  SV4                          STORAGE FOR CALLING LINKAGE.   
      00150                   IN     BSS     4             FOR INPUT WORD.    
      00154  0 00000 0 00000  PROTEC                       SWITCH FOR PROTECTED FILE.     
      00155  0 00000 0 00000  ERNO                         STORAGE FOR ERROR NUMBER.
      00156                   DATA   BSS     8             FOR STATE INFORMATION.   
                       00161  DEVICE EQU     DATA+3   
                       00157  MODE   EQU     DATA+1   
                              *     
                                     END  
                  
        LITERALS  
      00166  000000000001     
      00167  000000000003     
      00170  000000702562     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        171 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        150     IN    57,   61
        116     MI    42,  102
        121     N1    13,   20,   45,   66,   72,  105
        122     N2    15,   21,   67,   73
         40    ASK    34
         74    RTN   115
        147    SV4    16,   35,   74,   76
        156   DATA    22,  166
        155   ERNO    24,  112
         76   ERTN    64,  111
        157   MODE    25,  166
         35  CKASK    32
        131  DOYOU    54
        143  ISLNK   110
        123  ISPTC    52
          2  WRFLX   107
          6 CHFILE    65
         12 CLRNAM     0
         65 DELETE    37
          7 DELFIL    71
        161 DEVICE   166
          5 FSTATE    17
        112 FSTERR    23
        100 LINKED    27,  114
        154 PROTEC    30,   33,   47
          4 RDFLXA    56
          1 SETBCD    43,   55,  103
          0 SETFUL    40,   46,   60,  100,  106
         53 SKPPCM    50
          3 WRFLXA    41,   44,   51,   53,  101,  104
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 1     
                  
                              *     
                              *      J. H. SALTZER, JANUARY, 1965.
                              *     
                       00004         ENTRY   PRWORD        ADD A WORD TO PRINT BUFFER.    
                       00021         ENTRY   PRBUFF        PRINT OUT PARTIAL BUFFER.
                       00030         ENTRY   TYWORD        GET NEXT TYPED WORD.     
                       00047         ENTRY   TYLINE        RESET TO START READING NEXT LINE.    
                              *     
                                     EXTERN RDFLXA,WRFLXA   
                              *     
                  
        TRANSFER VECTOR 
      00000  512426436721     RDFLXA
      00001  665126436721     WRFLXA
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  475166465124     
                  
                       00034  BUFLEN EQU     28            TYPEWRITER BUFFER SIZE.  
                              *     
                              *      ADD WORD TO PRINT BUFFER.    
                              *      PRWORD.(WORD)    
                              *     
      00004  0634 00 4 00017  PRWORD SXA     PRX4,4        SAVE LINKAGE.
      00005 -0500 60 4 00001         CAL*    1,4           GET WORD BEING ADDED.    
      00006 -0734 00 4 00000         PDX     0,4           CHECK FOR DISK CONTROL WORD.   
      00007  3 77776 4 00017         TXH     PRX4,4,-2     DON'T STORE CONTROL WORD.
      00010  0774 00 4 00034   PWCNT AXT     BUFLEN,4      SET WORD COUNTER (INITIALLY BUFLEN.) 
      00011  0602 00 4 00105         SLW     BUFF+BUFLEN,4 STORE WORD IN BUFFER.    
      00012  2 00001 4 00016         TIX     PSAVE,4,1     COUNT, CHECK FOR OVERFLOW.     
      00013  0074 00 4 00001         TSX     WRFLXA,4      BUFFER FULL, PRINT W/O C.R.    
      00014  0 00034 0 00051                 BUFF,,BUFLEN  ..     
      00015  0774 00 4 00034  PFRESH AXT     BUFLEN,4      RESET WORD COUNTER.
      00016  0634 00 4 00010   PSAVE SXA     PWCNT,4       SAVE WORD COUNTER. 
      00017  0774 00 4 00000   PRX4  AXT     --,4          RESTORE LINKAGE.   
      00020  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
                              *      PRINT OUT REMAINING BUFFER, RESET COUNTER.     
                              *     
      00021  0634 00 4 00017  PRBUFF SXA     PRX4,4        SAVE LINKAGE.
      00022  0535 00 4 00010         LAC     PWCNT,4       GET WORD COUNT.    
      00023  1 00034 4 00024         TXI     *+1,4,BUFLEN  FORM COMPLEMENT MOD BUFLEN.    
      00024 -0634 00 4 00026         SXD     PRCL,4        SAVE COUNT IN CALLER.    
      00025  0074 00 4 00001         TSX     WRFLXA,4      PRINT REMAINDER.   
      00026  0 00000 0 00051   PRCL          BUFF,,--      ..     
      00027  0020 00 0 00015         TRA     PFRESH        GO REFRESH COUNTER, AND RETURN.
                              *     
                              *      GET A WORD FROM INPUT BUFFER.
                              *         WORD = TYWORD.(0)   
                              *     
      00030  0634 00 4 00045  TYWORD SXA     TYX4,4        SAVE LINKAGE.
      00031  0774 00 5 00000  TYCNT  AXT     --,5          GET WORD COUNTER.  
      00032  0774 00 4 00000  TYPOS  AXT     --,4          GET BUFFER POINTER.
      00033  2 00006 5 00041         TIX     TYGET,5,6     CHECK FOR WORDS LEFT.    
      00034  0074 00 4 00000         TSX     RDFLXA,4      NO, GET SOME.
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 2     
                  
      00035  0 00034 0 00051  TYCALL         BUFF,,BUFLEN  ..     
      00036  0734 00 5 00000         PAX     0,5           INSERT 6-BIT CHARACTER COUNT INTO COUNTER. 
      00037  2 40000 5 00040         TIX     *+1,5,16384   REMOVE BIT 21 IF PRESENT.
      00040  0774 00 4 00000         AXT     0,4           RESET INPUT BUFFER POINTER.    
      00041  0500 00 4 00051  TYGET  CLA     BUFF,4        GET A WORD.  
      00042  1 77777 4 00043         TXI     *+1,4,-1      MOVE POINTER TO NEXT WORD.     
      00043  0634 00 4 00032         SXA     TYPOS,4       SAVE POINTER.
      00044  0634 00 5 00031         SXA     TYCNT,5       SAVE CHARACTER COUNTER.  
      00045  0774 00 4 00000  TYX4   AXT     --,4          RESTORE LINKAGE.   
      00046  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      00047  0634 00 0 00031  TYLINE ZSA     TYCNT         RESET CHARACTER COUNT TO MAKE LINE EMPTY.  
      00050  0020 00 4 00001         TRA     1,4           RETURN 
                              *     
      00051                   BUFF   BSS     BUFLEN            OUTPUT BUFFER. 
                              *     
                                     END  
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        105 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         51   BUFF    11,   14,   26,   35,   41
         26   PRCL    24
         17   PRX4     4,    7,   21
         45   TYX4    30
         16  PSAVE    12
         10  PWCNT    16,   22
         31  TYCNT    44,   47
         41  TYGET    33
         32  TYPOS    43
         34 BUFLEN     4,   10,   11,   14,   15,   23,   35,   51
         15 PFRESH    27
         21 PRBUFF     0
          4 PRWORD     0
          0 RDFLXA    34
         35 TYCALL      
         47 TYLINE     0
         30 TYWORD     0
          1 WRFLXA    13,   25
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 1     
                  
                              *      INPUT AND OUTPUT IS LINE-MARKED FORMAT.  
                              *      J. H. SALTZER, JANUARY, 1965 
                              *     
                       00010         ENTRY   WRITE         WRITE ONE LINE OUT.
                       00071         ENTRY   READ          TO READ NEXT LINE. 
                       00167         ENTRY   BOTTOM        TO RAPIDLY MOVE TO BOTTOM OF FILE.   
                       00062         ENTRY   CLOSEW        CLOSE OUT WRITE FILE.    
                              *     
                                     EXTERN  WRFLX,WRWORD,RDWORD,SETBCD,SETFUL,FILE 
                              *     
                  
        TRANSFER VECTOR 
      00000  665126436760     WRFLX 
      00001  665166465124     WRWORD
      00002  512466465124     RDWORD
      00003  622563222324     SETBCD
      00004  622563266443     SETFUL
      00005  263143256060     FILE  
                  
            LINKAGE DIRECTOR  
      00006  000000000000     
      00007  665131632560     
                  
                       00006   NBITS EQU     6             COULD BE 6, 9, 12, OR 18.
                       00006   NCHRS EQU     36/NBITS      NO. OF CHARACTERS PER WORD ON 7094.  
                              *     
                              *      WRITE.(LINE, LENGTH)   
                              *     
      00010  0634 00 4 00056   WRITE SXA     WX4,4         SAVE LINKAGE AND REGISTERS.    
      00011  0634 00 2 00057         SXA     WX2,2         ..     
      00012  0634 00 1 00060         SXA     WX1,1         ..     
      00013 -0500 00 4 00001         CAL     1,4           GET LINE ADDRESS.  
      00014  0621 00 0 00035         STA     INLP          SET UP LOCATION OF INPUT.
      00015  0500 60 4 00002         CLA*    2,4           GET CHARACTER COUNT.     
      00016  0100 00 4 00003         TZE     3,4           DON'T WORK ON ZERO COUNT.
      00017  0402 00 0 00200         SUB     =1            DISCARD CARRIAGE RETURN AT END.
      00020  0100 00 4 00003         TZE     3,4           ZERO SIZE LINES NOT ALLOWED, EITHER. 
      00021  0767 00 0 00022         ALS     18            SET UP CHARACTER COUNT.  
      00022  0622 00 0 00041         STD     ENDTST        NCHARS = CPW*NWORDS + EXTRAS   
      00023  0361 00 0 00066         ACL     CPWL1         CWP*NWORDS + EXTRAS + CPW - 1  
      00024  0131 00 0 00000         XCA                   (CPW*NWORDS + EXTRAS + CWP - 1)/CPW =
      00025 -0754 00 0 00000         ZAC                        NWORDS + (EXTRAS - 1 + CPW)/CPW 
      00026  0221 00 0 00065         DVP     CPW           SECOND TERM IS 1 IF EXTRAS .G. 0,    
      00027  0131 00 0 00000         XCA                                  0 IF EXTRAS .E. 0     
      00030  0621 00 0 00067         STA     CWD           INSERT IN CONTROL WORD.  
      00031  0074 00 4 00001         TSX     WRWORD,4      INSERT THIS WORD IN OUTPUT BUFFER.   
 TD   00032  3 00000 0 00067         TXH     CWD           ..     
      00033  0774 00 2 00001         AXT     1,2
      00034  0774 00 1 00006   OUTLP AXT     36/NBITS,1    SET CHARACTER COUNTER.   
      00035  0560 00 2 00000   INLP  LDQ     --,2     
      00036 -0773 00 0 00036         RQL     36-NBITS      SHIFT CHARACTER TO POSITION.   
      00037 -0763 00 0 00006         LGL     NBITS         AND INTO WORD.     
      00040  1 00001 2 00041         TXI     *+1,2,1       COUNT INPUT CHARACTERS.  
      00041  3 00000 2 00052  ENDTST TXH     DONE,2,--     CHECK FOR END OF INPUT.  
      00042  2 00001 1 00035         TIX     INLP,1,1 
      00043  0602 00 0 00070         SLW     WDOUT         SAVE COMPLETED WORD.     
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 2     
                  
      00044  0074 00 4 00001   OUT   TSX     WRWORD,4      STORE COMPLETED WORD.    
 TD   00045  3 00000 0 00070         TXH     WDOUT         ..     
      00046  0020 00 0 00034         TRA     OUTLP         GO BACK FOR MORE.  
                              *     
      00047  0560 00 0 00063   NLLP  LDQ     NULL          FILL IN WORD WITH NULLS. 
      00050 -0773 00 0 00036         RQL     36-NBITS      MOVE NULL TO POSITION.   
      00051 -0763 00 0 00006         LGL     NBITS         SHIFT IN A NULL.   
      00052  2 00001 1 00047   DONE  TIX     NLLP,1,1      COUNT SPACES LEFT. 
      00053  0602 00 0 00070         SLW     WDOUT         STORE THIS WORD.   
      00054  0074 00 4 00001         TSX     WRWORD,4      ADD TO OUTPUT BUFFER.    
 TD   00055  3 00000 0 00070         TXH     WDOUT         ..     
      00056  0774 00 4 00000   WX4   AXT     --,4          RESTORE LINKAGE, AND IRS.
      00057  0774 00 2 00000   WX2   AXT     --,2          ..     
      00060  0774 00 1 00000   WX1   AXT     --,1     
      00061  0020 00 4 00003         TRA     3,4           ..     
                              *     
      00062  0020 00 0 00005  CLOSEW TRA     FILE          REFLECT CLOSE CALL TO BUFFER.  
                              *     
                              *     
      00063 +000000000057      NULL  OCT     0057          NULL CHARACTER.    
      00064 +000000000055     RETURN OCT     0055          CARRIAGE RETURN CHARACTER.     
      00065  0 00006 0 00000   CPW           ,,NCHRS       NUMBER OF CHARACTERS PER WORD. 
      00066  0 00005 0 00000   CPWL1         ,,NCHRS-1     CHARACTERS PER WORD LESS ONE.  
                              *     
      00067 -377777000000      CWD   OCT     777777000000   
      00070  0 00000 0 00000   WDOUT                       STORAGE FOR WORD BEING OUTPUT. 
                              *     
                              *      LENGTH = READ.(LINE, BUFSIZ, EOF)  
                              *     
      00071  0634 00 1 00137   READ  SXA     RX1,1         READ NEXT LINE.    
      00072  0634 00 2 00136         SXA     RX2,2    
      00073  0634 00 4 00134         SXA     RX4,4    
      00074  0634 00 3 00135         SXA     RX3,3    
      00075 -0500 00 4 00001         CAL     1,4           GET LOCATION OF BUFFER.  
      00076  0621 00 0 00124         STA     RPUT     
      00077 -0500 60 4 00002         CAL*    2,4           SET UP END TEST.   
      00100  0402 00 0 00200         SUB     =1 
      00101  0767 00 0 00022         ALS     18            ..     
      00102  0622 00 0 00125         STD     BUFTST        ..     
      00103  0074 00 4 00002   RDAGN TSX     RDWORD,4      GET CONTROL WORD.  
      00104  0 00000 0 00141                 EOF           IN CASE WE ARE AT END OF FILE. 
      00105 -0734 00 1 00000         PDX     0,1           PUT FLAG IN IR1.   
      00106  0734 00 3 00000         PAX     0,3           PUT COUNT IN IR3.  
      00107 -2 77776 1 00146         TNX     WOOPS,1,-2    CHECK FLAG.  
      00110 -3 00000 3 00103         TXL     RDAGN,3,0     IGNORE ZERO-LENGTH LINE. 
      00111  0774 00 2 00000   RDON  AXT     0,2           SET OUTPUT COUNTER.
      00112  0074 00 4 00002  ROUTLP TSX     RDWORD,4      READ A WORD. 
      00113  0 00000 0 00141                 EOF           ..     
      00114  0774 00 1 00006         AXT     36/NBITS,1    SET CHARACTER COUNTER.   
      00115  0131 00 0 00000         XCA                   WORD TO MQ.  
      00116 -0754 00 0 00000   RINLP ZAC                   CLEAR AC.    
      00117 -0763 00 0 00006         LGL     NBITS         GET NEXT CHARACTER.
      00120 -0340 00 0 00063         LAS     NULL          IS THIS A NULL CHARACTER.
      00121  0020 00 0 00123         TRA     *+2           NO.    
      00122  0020 00 0 00126         TRA     RCH           YES, SKIP IT.
      00123  1 00001 2 00124         TXI     *+1,2,1       COUNT STORAGE SPACES.    
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 3     
                  
      00124  0602 00 2 00000   RPUT  SLW     --,2          STORE CHARACTER IN LINE. 
      00125  3 00000 2 00133  BUFTST TXH     PXA,2,--      TEST FOR FULL BUFFER.    
      00126  2 00001 1 00116   RCH   TIX     RINLP,1,1     INDEX, AND COUNT CHARACTERS.   
      00127  2 00001 3 00112         TIX     ROUTLP,3,1    INDEX, AND COUNT WORDS.  
      00130 -0500 00 0 00064         CAL     RETURN        PUT RETURN AT END OF LINE.     
      00131  1 00001 2 00132         TXI     *+1,2,1       INCLUDE IN COUNT.  
      00132  0522 00 0 00124         XEC     RPUT          INSTALL IT.  
      00133  0754 00 2 00000   PXA   PXA     0,2           GET WORD COUNT.    
      00134  0774 00 4 00000   RX4   AXT     --,4     
      00135  0774 00 3 00000   RX3   AXT     --,3     
      00136  0774 00 2 00000   RX2   AXT     --,2     
      00137  0774 00 1 00000   RX1   AXT     --,1     
      00140  0020 00 4 00004         TRA     4,4
                              *     
      00141  0534 00 4 00134   EOF   LXA     RX4,4         END OF FILE REACHED, TAKE ERROR
      00142  0534 00 3 00135         LXA     RX3,3         RETURN.
      00143  0534 00 2 00136         LXA     RX2,2    
      00144  0534 00 1 00137         LXA     RX1,1    
      00145  0020 60 4 00003         TRA*    3,4
                              *     
                              *     
      00146  0074 00 4 00003   WOOPS TSX     SETBCD,4      FILE IS NOT LINE-MARKED PROPERLY, COMPLAIN.
      00147  0074 00 4 00000         TSX     WRFLX,4  
      00150  0 00006 0 00161                 MESS1,,6 
      00151  0074 00 4 00004         TSX     SETFUL,4      RESTORE INDICATOR. 
      00152  0074 00 4 00002   LP    TSX     RDWORD,4      SEARCH FOR NEXT LINE MARK.     
      00153  0 00000 0 00141                 EOF
      00154 -0734 00 1 00000         PDX     0,1           CHECK FOR LINE MARK IN THIS WORD.    
      00155 -2 77776 1 00152         TNX     LP,1,-2       ..     
      00156  0734 00 3 00000         PAX     0,3           LINE MARK OK, CHECK COUNT.     
      00157 -3 00000 1 00152         TXL     LP,1,0        ..     
      00160  0020 00 0 00111         TRA     RDON          COUNT NON-ZERO, READ ON. 
                              *     
      00161  314547646360      MESS1 BCI     6,INPUT FILE HAS IMPROPER FORMAT.
      00162  263143256030     
      00163  216260314447     
      00164  514647255160     
      00165  264651442163     
      00166  336060606060     
                              *     
                              *      ROUTINE TO SWING TO BOTTOM OF FILE.
                              *     
      00167  0634 00 4 00176  BOTTOM SXA     EOFB,4        SAVE LINKAGE.
      00170  0074 00 4 00002   LOOP  TSX     RDWORD,4      GET NEXT INPUT WORD.     
      00171  0 00000 0 00176                 EOFB          EXIT ON END OF FILE.     
      00172  0601 00 0 00070         STO     WDOUT         SAVE THIS WORD.    
      00173  0074 00 4 00001         TSX     WRWORD,4      WRITE OUT THIS WORD.     
 TD   00174  3 00000 0 00070         TXH     WDOUT         ..     
      00175  0020 00 0 00170         TRA     LOOP          REPEAT.
                              *     
      00176  0774 00 4 00000  EOFB   AXT     --,4          RESTORE LINKAGE.   
      00177  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
                                     END  
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 4     
                  
        LITERALS  
      00200  000000000001     
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        201 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        152     LP   155,  157
         65    CPW    26
         67    CWD    30,   32
        141    EOF   104,  113,  153
         44    OUT      
        133    PXA   125
        126    RCH   122
        137    RX1    71,  144
        136    RX2    72,  143
        135    RX3    74,  142
        134    RX4    73,  141
         60    WX1    12
         57    WX2    11
         56    WX4    10
         52   DONE    41
        176   EOFB   167,  171
          5   FILE    62
         35   INLP    14,   42
        170   LOOP   175
         47   NLLP    52
         63   NULL    47,  120
        111   RDON   160
         71   READ     0
        124   RPUT    76,  132
         66  CPWL1    23
        161  MESS1   150
          6  NBITS    10,   34,   36,   37,   50,   51,  114,  117
          6  NCHRS    10,   65,   66
         34  OUTLP    46
        103  RDAGN   110
        116  RINLP   126
         70  WDOUT    43,   45,   53,   55,  172,  174
        146  WOOPS   107
          0  WRFLX   147
         10  WRITE     0
        167 BOTTOM     0
        125 BUFTST   102
         62 CLOSEW     0
         41 ENDTST    22
          2 RDWORD   103,  112,  152,  170
         64 RETURN   130
        112 ROUTLP   127
          3 SETBCD   146
          4 SETFUL   151
          1 WRWORD    31,   44,   54,  173
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




   ZOT   BCD 02/08/69 0003.9    6243         00000    
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 1     
                           OCTOBER 19, 1968  LHM                                    
                  
                              *     
                              *     
                                     ABS  
                              *     
                       00000         ORG,0
                              *     
                              *  UNIVERSAL EXIT. MUST BE LOADED AT LOCATION ZERO.   
                              *     
      00000  0074 00 4 00422  EXIT   TSX,WRFLXA,4     
      00001  0 00000 0 00000  ZERO  
      00002  0101 00 0 00434         TIA,CHAIN  
                              *     
                              *  RANDOM CONSTANTS     
                              *     
      00003 +350000350000     COLONS OCT,350000350000 
      00004 +005700570057     NULLS  OCT,005700570057 
      00005 -155757575757     CRWORD OCT,555757575757 
                                     EVEN 
      00006 -175757575757     THEWRD OCT,575757575757 
      00007  545454545454     SPARE  BCI,1,******     
      00010  0 00005 0 00000  CLCWRD PZE,,,5    
      00011  0 00000 0 00074  TIME   PZE,60     
      00012 +000000000060     BLANK  OCT,60     
      00013 +000000000061     SLASH  OCT,61     
                              *     
                              *  REWRITE THE COMMAND BUFFER FOR NEXCOM. 
                              *     
      00014  0622 00 0 00016  FIN    STD,*+2    
      00015  0602 00 1 00416  COMSTO SLW,WRMESS-XR1,1 
      00016  2 00001 1 00042         TIX,COM,1,1
      00017  0074 00 4 00424         TSX,SETCLS,4     
      00020  0 00000 0 00455  SETLOC PZE,WRMESS,,0    
      00021 -0500 00 0 00455         CAL,WRMESS 
      00022  0560 00 0 00456         LDQ,WRMESS+1     
      00023  0074 00 4 00426  NEXLOC TSX,NEXCOM,4     
                              *     
                              *  MAIN LOOP. FIND THE COMMAND.     
                              *   NOTE THAT THIS MUST BEGIN AT LOC (24)8
                              *     
      00024  0774 00 1 00001  LOOP   AXT,1,1    
      00025 -0634 00 0 00061         ZSD,CONV   
      00026  0074 00 2 00040  GETARG TSX,NUM,2  
      00027  2 00003 2 00052         TIX,BUMP,2,XR2-GETARG  
                              *     
                              *  THE ARGUMENT WAS A NUMBER. REPEAT THE LAST CHARACTER TYPED.    
                              *     
      00030  0734 00 1 00000         PAX,,1     
      00031  0020 00 0 00111         TRA,WRTIX  
                              *     
                              *  REGULAR ARGUMENT. GO FIND IT IN THE TABLE.   
                              *     
                       00031  XR2    EQU,*-1    
      00032 -0340 00 2 00463         LAS,TABTOP-XR2,2 
      00033  2 00002 2 00032         TIX,*-1,2,2
      00034  0020 60 2 00464         TRA*,TABTOP+1-XR2,2    
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 2     
                           OCTOBER 19, 1968  LHM                                    
                  
      00035 -0774 00 2 00014         AXC,FIN,2  
      00036  0636 00 2 00057         SCA,NOCOM,2
      00037  0074 00 1 00015  XR1    TSX,COMSTO,1     
                              *     
                              *  PICK UP THE NEXT COMMAND ARGUMENT.     
                              *     
      00040  0441 00 0 00012  NUM    LDI,BLANK  
      00041  0020 00 0 00043         TRA,*+2    
      00042  0441 00 0 00001  COM    LDI,ZERO   
      00043  0074 00 4 00423  COMCAL TSX,GETCOM,4     
      00044  0 00000 0 00000  COMNO 
      00045  0760 00 0 00003         SSP  
      00046  0046 00 0 00050         TIF,*+2    
      00047  0020 00 2 00001         TRA,1,2    
      00050  0054 00  000060         RFT,60     
      00051  1 77777 2 00061         TXI,CONV,2,-1    
      00052  0534 00 4 00044  BUMP   LXA,COMNO,4
      00053  1 00001 4 00054         TXI,*+1,4,1
      00054  0634 00 4 00044         SXA,COMNO,4
      00055 -0340 00 0 00652         LAS,TABBOT 
      00056  0634 00 0 00043         ZSA,COMCAL 
      00057  0074 00 4 00000  NOCOM  TSX,EXIT,4 
      00060  0020 00 2 00001         TRA,1,2    
                              *     
                              *  BCD TO BINARY CONVERSION.  
                              *     
      00061 -3 00000 1 00073  CONV   TXL,DTO,1,**     
      00062 -0130 00 0 00000  DTB    XCL  
      00063  0600 00 0 00477         STZ,TEMP   
      00064  0774 00 1 00006         AXT,6,1    
      00065  0204 04 1 00455         VLM,TABLE,1,4    
      00066 -0765 00 0 00002         LGR,2
      00067  0361 00 0 00477         ACL,TEMP   
      00070  0602 00 0 00477         SLW,TEMP   
      00071  2 00001 1 00065         TIX,*-4,1,1
      00072  0020 00 0 00052         TRA,BUMP   
                              *     
                              *  BCD TO OCTAL CONVERSION.   
                              *     
      00073 -0765 00 0 00003  DTO    LGR,3
      00074  0771 00 0 00003         ARS,3
      00075  2 12525 4 00073         TIX,DTO,4,32767/6
      00076 -0763 00 0 00022         LGL,18     
      00077  0020 00 0 00052         TRA,BUMP   
                              *     
                              *  PRINT A SINGLE CHARACTER.  
                              *     
      00100  0074 00 4 00427  PRINT  TSX,SETFUL,4     
      00101 -0500 00 0 00004         CAL,NULLS  
      00102  0602 00 0 00455         SLW,WRMESS 
      00103 -0500 00 2 00464         CAL,TABTOP+1-XR2,2     
      00104  0622 00 0 00455         STD,WRMESS 
      00105  0774 00 2 00001         AXT,1,2    
      00106 -0634 00 2 00110  SETCNT SXD,COUNT,2
      00107  0074 00 4 00431  WR     TSX,WRFLX,4
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 3     
                           OCTOBER 19, 1968  LHM                                    
                  
      00110  0 00001 0 00455  COUNT  PZE,WRMESS,,1    
      00111  2 00001 1 00107  WRTIX  TIX,WR,1,1 
      00112  0120 00 0 00024         TPL,LOOP   
      00113  0101 00 0 00442  DEATH  TIA,DEAD   
                              *     
                              *  FIDDLE WITH COMMAND BUFFERS.     
                              *     
      00114  0074 00 2 00040  GAZABE TSX,NUM,2  
      00115 -0500 00 0 00501         CAL,TEN    
      00116 -0130 00 0 00000         XCL  
      00117  0204 14 0 00502         VLM,SIXTY,,12    
      00120  0020 00 0 00123         TRA,ZOTIN  
                              *     
      00121  0074 00 2 00040  ZOT    TSX,NUM,2  
      00122 -0500 00 0 00011         CAL,TIME   
      00123  0602 00 0 00011  ZOTIN  SLW,TIME   
      00124  0074 00 2 00040         TSX,NUM,2  
      00125  0754 00 1 00000         PXA,,1     
      00126 -0501 00 0 00010         ORA,CLCWRD 
      00127  0074 00 4 00430         TSX,SETCLC,4     
      00130 -0500 00 0 00011         CAL,TIME   
      00131  0100 00 0 00024  BYEBYE TZE,LOOP   
      00132 -0774 00 4 00023         AXC,LOOP-1,4     
      00133  0101 00 0 00443         TIA,SLEEP  
                              *     
      00134  0074 00 2 00040  WAIT   TSX,NUM,2  
      00135 -0500 00 0 00011         CAL,TIME   
      00136  0602 00 0 00011         SLW,TIME   
      00137  0020 00 0 00131         TRA,BYEBYE 
                              *     
      00140  0074 00 2 00040  CHAINX TSX,NUM,2  
      00141  0754 00 1 00000         PXA,,1     
      00142 -0501 00 0 00010         ORA,CLCWRD 
      00143  0074 00 4 00430         TSX,SETCLC,4     
      00144  0020 00 0 00024         TRA,LOOP   
                              *     
                              *  PRINT THE NEXT WORD FROM THE COMMAND LINE.   
                              *     
      00145  0074 00 2 00042  PRWORD TSX,COM,2  
      00146  0774 00 2 00001  PWRDIN AXT,1,2    
      00147  0602 00 0 00455         SLW,WRMESS 
      00150 -0774 00 4 00105  SETWR  AXC,SETCNT-1,4   
      00151  0101 00 0 00444  GETBCD TIA,SETBCD 
                              *     
                              *  LOAD UP A GIVEN COMMAND BUFFER.  
                              *     
      00152  0634 00 0 00023  SETCOM ZSA,NEXLOC 
      00153  0074 00 2 00040         TSX,NUM,2  
      00154  0754 00 1 00000         PXA,,1     
      00155  0734 00 2 00000         PAX,,2     
      00156 -0634 00 2 00020         SXD,SETLOC,2     
      00157 -0774 00 2 00014  NEXCM  AXC,FIN,2  
      00160  0636 00 2 00057         SCA,NOCOM,2
      00161  1 77740 1 00042         TXI,COM,1,-XR1-1 
                              *     
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 4     
                           OCTOBER 19, 1968  LHM                                    
                  
                              *  REPEAT A FEW ARGUMENTS.    
                              *     
      00162  0074 00 2 00040  TIX    TSX,NUM,2  
      00163 -0754 00 0 00000         ZAC  
      00164  0602 00 0 00500         SLW,TEMP2  
      00165  0074 00 2 00040         TSX,NUM,2  
      00166  0020 00 0 00174         TRA,NEXT   
      00167 -0520 00 0 00503         NZT,REPEAT 
      00170  0602 00 0 00503         SLW,REPEAT 
      00171  0534 00 4 00503         LXA,REPEAT,4     
      00172 -2 00001 4 00177         TNX,WIPE,4,1     
      00173  0634 00 4 00503         SXA,REPEAT,4     
      00174 -0500 00 0 00500  NEXT   CAL,TEMP2  
      00175  0602 00 0 00044         SLW,COMNO  
      00176  0020 00 0 00024         TRA,LOOP   
                              *     
      00177  0600 00 0 00503  WIPE   STZ,REPEAT 
      00200  0020 00 0 00024         TRA,LOOP   
                              *     
                              *  CONVERT TO OCTAL AND PRINT.
                              *     
      00201  0074 00 2 00040  OCT    TSX,NUM,2  
      00202  2 00001 2 00052         TIX,BUMP,2,1     
      00203 -0765 00 0 00022  PNUMO  LGR,18     
      00204  0767 00 0 00003         ALS,3
      00205 -0763 00 0 00003         LGL,3
      00206  2 12525 2 00204         TIX,*-2,2,32767/6
      00207  0020 00 0 00146         TRA,PWRDIN 
                              *     
                              *  CONVERT TO DECIMAL AND PRINT.    
                              *     
      00210 -0634 00 4 00061  DEC    SXD,CONV,4 
      00211  0074 00 2 00040         TSX,NUM,2  
      00212  2 00001 2 00052         TIX,BUMP,2,1     
      00213  0225 06 1 00455  PNUM   VDP,TABLE,1,6    
      00214  0771 00 0 00006         ARS,6
      00215  2 00005 1 00217         TIX,OUT,1,5
      00216  1 00001 1 00213         TXI,*-3,1,1
                              *     
      00217  0131 00 0 00000  OUT    XCA  
      00220  0020 00 0 00146         TRA,PWRDIN 
                              *     
                              *  PICK UP A COMMAND BUFFER AND PRINT IT ON LINE.     
                              *     
      00221  0074 00 2 00040  GETCL  TSX,NUM,2  
      00222  0754 00 1 00000  GETIN  PXA,,1     
      00223  0734 00 4 00000         PAX,,4     
      00224 -0634 00 4 00226         SXD,GETBUF,4     
      00225  0074 00 4 00432         TSX,GETCLS,4     
      00226  0 00000 0 00455  GETBUF PZE,WRMESS,,**   
      00227  0774 00 1 00024         AXT,20,1   
      00230  0560 00 0 00006         LDQ,THEWRD 
      00231 -0500 00 1 00501  GLOOP  CAL,WREND,1
      00232 -0340 00 0 00652         LAS,TABBOT 
      00233 -0600 00 1 00501         STQ,WREND,1
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 5     
                           OCTOBER 19, 1968  LHM                                    
                  
      00234  2 00001 1 00233  GTIX   TIX,*-1,1,1
      00235  2 00001 1 00231         TIX,GLOOP,1,1    
      00236  0074 00 4 00151         TSX,GETBCD,4     
      00237  0074 00 4 00431         TSX,WRFLX,4
      00240  0 00012 0 00455         PZE,WRMESS,,10   
      00241  0074 00 4 00431         TSX,WRFLX,4
      00242  0 00012 0 00467         PZE,WRMESS+10,,10
      00243  0020 00 0 00024  GOUT   TRA,LOOP   
                              *     
                              *  SWITCH BETWEEN WRFLX AND WRFLXA. 
                              *     
      00244  0534 00 4 00000  SWCHCR LXA,EXIT,4 
      00245  0534 00 2 00107         LXA,WR,2   
      00246  0634 00 2 00000         SXA,EXIT,2 
      00247  0634 00 4 00107         SXA,WR,4   
      00250  0020 00 0 00024         TRA,LOOP   
                              *     
                              *  CONDITIONALLY PRINT A CARRIAGE RETURN. 
                              *     
      00251  0754 00 1 00000  IFFCR  PXA,,1     
      00252  0402 00 0 00503         SUB,REPEAT 
      00253  0100 00 0 00024         TZE,LOOP   
      00254  1 77730 2 00100         TXI,PRINT,2,QIFFCR-CR  
                              *     
                              *  EJECT A PAGE.  
                              *     
      00255 -0500 00 0 00005  EJECT  CAL,CRWORD 
      00256  1 00040 1 00146         TXI,PWRDIN,1,32  
                              *     
                              *  DO VARIOUS ARITHMETIC FUNCTIONS. 
                              *     
      00257  1 00657 1 00263  NOREC  TXI,ARITH,1,431  
                              *     
      00260 -0634 00 4 00061  ASOCT  SXD,CONV,4 
      00261  1 77777 1 00263  ADDSUB TXI,ARITH,1,-1   
                              *     
      00262 -0634 00 4 00061  AROCT  SXD,CONV,4 
      00263  0600 00 0 00500  ARITH  STZ,TEMP2  
      00264  0634 00 1 00500         SXA,TEMP2,1
      00265 -0634 00 1 00273         SXD,SWITCH,1     
      00266  0774 00 1 00001         AXT,1,1    
      00267  0560 00 2 00464         LDQ,TABTOP+1-XR2,2     
      00270 -0620 00 0 00274         SLQ,INST   
      00271  0074 00 2 00040  ALOOP  TSX,NUM,2  
      00272  0020 00 0 00306         TRA,PICK   
      00273 -3 00000 1 00277  SWITCH TXL,MQ,1,**
      00274  0 00000 0 00500  INST   ***,TEMP2  
      00275  0602 00 0 00500  STORE  SLW,TEMP2  
      00276  0020 00 0 00271         TRA,ALOOP  
                              *     
      00277  0765 00 0 00043  MQ     LRS,35     
      00300  0522 00 0 00274         XEC,INST   
      00301 -0600 00 0 00500         STQ,TEMP2  
      00302  0100 00 0 00271         TZE,ALOOP  
      00303  0754 00 1 00000         PXA,,1     
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 6     
                           OCTOBER 19, 1968  LHM                                    
                  
      00304  0400 00 0 00500         ADD,TEMP2  
      00305  0020 00 0 00275         TRA,STORE  
                              *     
                              *     
      00306 -0500 00 0 00500  PICK   CAL,TEMP2  
      00307 -0534 00 4 00061         LXD,CONV,4 
      00310  3 00000 4 00203         TXH,PNUMO,4,0    
      00311  0020 00 0 00213         TRA,PNUM   
                              *     
                              *  REPEAT THE CURRENT COMMAND BUFFER
                              *     
      00312  0774 00 4 00157  ECHO   AXT,NEXCM,4
      00313  0634 00 4 00243         SXA,GOUT,4 
      00314  1 77777 1 00222         TXI,GETIN,1,-1   
                              *     
                              *  SWITCH BETWEEN LONG AND SHORT FORM FOR GETCLS.     
                              *     
      00315  0500 00 0 00007  CHGCLS CLA,SPARE  
      00316  0560 00 0 00006         LDQ,THEWRD 
      00317 -0603 00 0 00006         DST,THEWRD 
      00320 -0534 00 4 00234         LXD,GTIX,4 
      00321 -0636 00 4 00234         SCD,GTIX,4 
      00322  0020 00 0 00024         TRA,LOOP   
                              *     
                              *  LEFT OR RIGHT JUSTIFY A FILE NAME.     
                              *     
      00323  1 00001 1 00324  LEFT   TXI,*+1,1,1
      00324  1 00002 1 00325  RIGHT  TXI,*+1,1,2
      00325  0074 00 2 00042  GETNAM TSX,COM,2  
      00326  0602 00 1 00477         SLW,NAMES,1
      00327 -0055 00  770000         SIL,770000 
      00330  0322 00 0 00504         ERA,BLANKS 
      00331  1 00333 2 00334         TXI,JLOOP,2,GETNAM+6   
      00332  0767 00 0 00006         ALS,6
      00333 -2 00001 2 00335         TNX,JOUT,2,1     
      00334  0046 00 0 00332  JLOOP  TIF,*-2    
      00335  0322 00 0 00504  JOUT   ERA,BLANKS 
      00336 -0130 00 0 00000         XCL  
      00337  2 00002 1 00325         TIX,GETNAM,1,2   
      00340  3 00001 1 00342         TXH,*+2,1,1
      00341  1 00002 1 00342         TXI,*+1,1,2
      00342  0602 00 1 00476         SLW,NAMES-1,1    
      00343 -0600 00 1 00500         STQ,NAMES+1,1    
      00344  0074 00 4 00425  CALCHG TSX,CHFILE,4     
      00345  3 00000 0 00473         BRN,OLD1   
      00346  3 00000 0 00475         BRN,OLD2   
      00347  3 00000 0 00001         BRN,ZERO   
      00350  3 00000 0 00474         BRN,NEW1   
      00351  3 00000 0 00476         BRN,NEW2   
      00352  3 00000 0 00354         BRN,*+2    
      00353  0020 00 0 00024         TRA,LOOP   
                              *     
      00354 -0500 00 0 00505         CAL,NOMESS 
      00355  1 77776 1 00146         TXI,PWRDIN,1,-2  
                              *     
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 7     
                           OCTOBER 19, 1968  LHM                                    
                  
                              *  PRINT OUT THE DATE AND TIME.     
                              *     
      00356  0074 00 4 00433  MAKTIM TSX,GETIME,4     
      00357  0602 00 0 00477         SLW,TEMP   
      00360 -0046 00 0 00000         PIA  
      00361 -0763 00 0 00014         LGL,12     
      00362  0767 00 0 00006         ALS,6
      00363 -0501 00 0 00013         ORA,SLASH  
      00364 -0763 00 0 00014         LGL,12     
      00365  0602 00 0 00455         SLW,WRMESS 
      00366 -0500 00 0 00013         CAL,SLASH  
      00367 -0763 00 0 00022         LGL,18     
      00370 -0501 00 0 00012         ORA,BLANK  
      00371 -0763 00 0 00014         LGL,12     
      00372  0044 00 0 00000         PAI  
      00373  0560 00 0 00477         LDQ,TEMP   
      00374 -0754 00 0 00000         ZAC  
      00375  0225 35 0 00506         VDP,Q1,,29 
      00376  0225 06 0 00507         VDP,Q2,,6  
      00377 -0130 00 0 00000         XCL  
      00400  0043 00 0 00000         OAI  
      00401  0604 00 0 00456         STI,WRMESS+1     
      00402 -0754 00 0 00000         ZAC  
      00403  0225 36 0 00510         VDP,Q3,,30 
      00404  0225 06 0 00511         VDP,Q4,,6  
      00405  0225 14 0 00512         VDP,Q5,,12 
      00406  0225 06 0 00513         VDP,Q6,,6  
      00407 -0130 00 0 00000         XCL  
      00410 -0501 00 0 00003         ORA,COLONS 
      00411  0602 00 0 00457         SLW,WRMESS+2     
      00412  2 77624 2 00150         TIX,SETWR,2,TABTOP-XR2-QTIME-3     
                              *     
                              *  PRINT OUT THE NEXT CHARACTER (EXPRESSED IN OCTAL). 
                              *     
      00413  0074 00 2 00042  CHAR   TSX,COM,2  
      00414  0560 00 0 00001         LDQ,ZERO   
      00415 -0765 00 0 00003         LGR,3
      00416  0771 00 0 00003         ARS,3
      00417  2 17777 2 00415         TIX,*-2,2,32767/4
      00420 -0620 00 0 00477         SLQ,TEMP   
      00421  1 60375 2 00100         TXI,PRINT,2,TABTOP+1-XR2-TEMP+CHAR+32767/4*3   
                              *     
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 8     
                           OCTOBER 19, 1968  LHM                                    
                  
                              *     
                              *     
                              *  CONSTANTS AND STORAGE
                              *     
      00422  0101 00 0 00435  WRFLXA TIA,WRFXA  
      00423  0101 00 0 00437  GETCOM TIA,GETC   
      00424  0101 00 0 00644  SETCLS TIA,SETS   
      00425  0101 00 0 00445  CHFILE TIA,CHGFIL 
      00426  0101 00 0 00530  NEXCOM TIA,NEXC   
      00427  0101 00 0 00440  SETFUL TIA,SETF   
      00430  0101 00 0 00441  SETCLC TIA,SETC   
      00431  0101 00 0 00436  WRFLX  TIA,WRFX   
      00432  0101 00 0 00524  GETCLS TIA,QGET   
      00433  0101 00 0 00446  GETIME TIA,QGETTM 
                              *     
      00434  233045234644     CHAIN  BCI,1,CHNCOM     
      00435  665126436721     WRFXA  BCI,1,WRFLXA     
      00436  665126436760     WRFX   BCI,1,WRFLX
      00437  272563234644     GETC   BCI,1,GETCOM     
      00440  622563266443     SETF   BCI,1,SETFUL     
      00441  622563234323     SETC   BCI,1,SETCLC     
      00442  242521246060     DEAD   BCI,1,DEAD 
      00443  624325254760     SLEEP  BCI,1,SLEEP
      00444  622563222324     SETBCD BCI,1,SETBCD     
      00445  233026314325     CHGFIL BCI,1,CHFILE     
      00446  272563314425     QGETTM BCI,1,GETIME     
                              *     
      00447 +000000000100            DEC,1E0B29,1E1B29,1E2B29,1E3B29,1E4B29,1E5B29  
      00450 +000000001200     
      00451 +000000014400     
      00452 +000000175000     
      00453 +000002342000     
      00454 +000030324000     
                       00455  TABLE  EQU,*
                              *     
      00455 -175757575757     WRMESS OCT,575757575757 
      00501                   WREND  BES,19     
                       00477  TEMP   EQU,WREND-2
                       00500  TEMP2  EQU,WREND-1
                              *     
                       00473  OLD1   EQU,WREND-6
                       00474  NEW1   EQU,WREND-5
                       00475  OLD2   EQU,WREND-4
                       00476  NEW2   EQU,WREND-3
                       00477  NAMES  EQU,NEW2+1 
                              *     
      00501  0 00000 0 00012  TEN    PZE,10     
      00502 +000000740000     SIXTY  DEC,60B23  
      00503  0 00000 0 00000  REPEAT
      00504  606060606060     BLANKS BCI,1,     
      00505  454626314325     NOMESS BCI,1,NOFILE     
                              *     
      00506 +000000101726     Q1     DEC,216E4B41     
      00507 +000000645700     Q2     DEC,216E3B35     
      00510 +000000002145     Q3     DEC,36E3B40
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 9     
                           OCTOBER 19, 1968  LHM                                    
                  
      00511 +000000016040     Q4     DEC,36E2B34
      00512 +000022600000     Q5     DEC,60E1B22
      00513 +000170000000     Q6     DEC,60E0B16
                              *     
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 10    
                           OCTOBER 19, 1968  LHM                                    
                  
                              *     
                              *  DISPATCH TABLE 
                              *     
                       00514  TABTOP EQU,*
      00514  212424462363            BCI,1,ADDOCT     
      00515  0400 00 0 00260         ADD,ASOCT  
      00516  233027234362            BCI,1,CHGCLS     
      00517  0 00000 0 00315         PZE,CHGCLS 
      00520  243165462363            BCI,1,DIVOCT     
      00521  0221 00 0 00262         DVP,AROCT  
      00522  272171212225            BCI,1,GAZABE     
      00523  0 00000 0 00114         PZE,GAZABE 
      00524  272563234362     QGET   BCI,1,GETCLS     
      00525  0 00000 0 00221         PZE,GETCL  
      00526  446443462363            BCI,1,MULOCT     
      00527  0200 00 0 00262         MPY,AROCT  
      00530  452567234644     NEXC   BCI,1,NEXCOM     
      00531  0 00000 0 00157         PZE,NEXCM  
      00532  454651252362            BCI,1,NORECS     
      00533  0221 00 0 00257         DVP,NOREC  
      00534  602243212342            BCI,1, BLACK     
      00535  013200000100            VFD,O12/0132,24/PRINT  
      00536  602330213145            BCI,1, CHAIN     
      00537  0 00000 0 00140         PZE,CHAINX 
      00540  602541252363     QEJECT BCI,1, EJECT     
      00541  0 00000 0 00255         PZE,EJECT  
      00542  603126262351     QIFFCR BCI,1, IFFCR     
      00543  0 00000 0 00251         PZE,IFFCR  
      00544  604751314563            BCI,1, PRINT     
      00545  0 00000 0 00145         PZE,PRWORD 
      00546  605131273063            BCI,1, RIGHT     
      00547  0 00000 0 00324         PZE,RIGHT  
      00550  606022254343            BCI,1,  BELL     
      00551  011300000100            VFD,O12/0113,24/PRINT  
      00552  606023302151            BCI,1,  CHAR     
      00553  0 00000 0 00413         PZE,CHAR   
      00554  606025233046            BCI,1,  ECHO     
      00555  0 00000 0 00312         PZE,ECHO   
      00556  606043252663            BCI,1,  LEFT     
      00557  0 00000 0 00323         PZE,LEFT   
      00560  606045644343            BCI,1,  NULL     
      00561  005700000100            VFD,O12/0057,24/PRINT  
      00562  606047462626            BCI,1,  POFF     
      00563  011700000100            VFD,O12/0117,24/PRINT  
      00564  606060212424            BCI,1,   ADD     
      00565  0400 00 0 00261         ADD,ADDSUB 
      00566  606060242523            BCI,1,   DEC     
      00567  0 00000 0 00210         PZE,DEC    
      00570  606060243125            BCI,1,   DIE     
      00571  0 00000 0 00113         PZE,DEATH  
      00572  606060243165            BCI,1,   DIV     
      00573  0221 00 0 00263         DVP,ARITH  
      00574  606060256723            BCI,1,   EXC     
      00575  011400000100            VFD,O12/0114,24/PRINT  
      00576  606060446443            BCI,1,   MUL     
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 11    
                           OCTOBER 19, 1968  LHM                                    
                  
      00577  0200 00 0 00263         MPY,ARITH  
      00600  606060462363            BCI,1,   OCT     
      00601  0 00000 0 00201         PZE,OCT    
      00602  606060474465            BCI,1,   PMV     
      00603  0 00000 0 00652         PZE,TABBOT 
      00604  606060474645            BCI,1,   PON     
      00605  017500000100            VFD,O12/0175,24/PRINT  
      00606  606060512524            BCI,1,   RED     
      00607  013300000100            VFD,O12/0133,24/PRINT  
      00610  606060602262            BCI,1,    BS     
      00611  013500000100            VFD,O12/0135,24/PRINT  
      00612  606060602351     CR     BCI,1,    CR     
      00613  005500000100            VFD,O12/0055,24/PRINT  
      00614  606060604326            BCI,1,    LF     
      00615  010700000100            VFD,O12/0107,24/PRINT  
      00616  606060606040            BCI,1,     -     
      00617  411600000100            VFD,O12/4116,24/PRINT  
      00620  606060606247            BCI,1,    SP     
      00621  006000000100            VFD,O12/0060,24/PRINT  
      00622  606060626422            BCI,1,   SUB     
      00623  0402 00 0 00261         SUB,ADDSUB 
      00624  606060632122            BCI,1,   TAB     
      00625  007200000100            VFD,O12/0072,24/PRINT  
      00626  606060633167            BCI,1,   TIX     
      00627  0 00000 0 00162         PZE,TIX    
      00630  606060702562            BCI,1,   YES     
      00631  005400000100            VFD,O12/0054,24/PRINT  
      00632  606060714663            BCI,1,   ZOT     
      00633  0 00000 0 00121         PZE,ZOT    
      00634  606063314425     QTIME  BCI,1,  TIME     
      00635  0 00000 0 00356         PZE,MAKTIM 
      00636  606066213163            BCI,1,  WAIT     
      00637  0 00000 0 00134         PZE,WAIT   
      00640  606247212325            BCI,1, SPACE     
      00641  005500000100            VFD,O12/0055,24/PRINT  
      00642  606445242551            BCI,1, UNDER     
      00643  014000000100            VFD,O12/0140,24/PRINT  
      00644  622563234362     SETS   BCI,1,SETCLS     
      00645  0 00000 0 00152         PZE,SETCOM 
      00646  626422462363            BCI,1,SUBOCT     
      00647  0402 00 0 00260         SUB,ASOCT  
      00650  626623302351            BCI,1,SWCHCR     
      00651  0 00000 0 00244         PZE,SWCHCR 
                       00652  TABBOT EQU,*
      00652 -377777777776            OCT,777777777776 
                              *     
                       00024         END,LOOP   
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        653 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        612     CR   254
        277     MQ   273
        506     Q1   375
        507     Q2   376
        510     Q3   403
        511     Q4   404
        512     Q5   405
        513     Q6   406
        107     WR   111,  245,  247
         42    COM    16,  145,  161,  325,  413
        210    DEC   567
         62    DTB      
         73    DTO    61,   75
         14    FIN    35,  157
         40    NUM    26,  114,  121,  124,  134,  140,  153,  162,  165,  201,  211,  221,  271
        201    OCT   601
        217    OUT   215
        501    TEN   115
        162    TIX   627
         37    XR1    15,  161
         31    XR2    27,   32,   34,  103,  267,  412,  421
        121    ZOT   633
         52   BUMP    27,   72,   77,  202,  212
        413   CHAR   421,  553
         61   CONV    25,   51,  210,  260,  262,  307
        442   DEAD   113
        312   ECHO   555
          0   EXIT    57,  244,  246
        437   GETC   423
        243   GOUT   313
        234   GTIX   320,  321
        274   INST   270,  300
        335   JOUT   333
        323   LEFT   557
         24   LOOP   112,  131,  132,  144,  176,  200,  243,  250,  253,  322,  353,  653
        474   NEW1   350,  501
        476   NEW2   351,  501
        530   NEXC   426
        174   NEXT   166
        473   OLD1   345,  501
        475   OLD2   346,  501
        306   PICK   272
        213   PNUM   311
        524   QGET   432
        441   SETC   430
        440   SETF   427
        644   SETS   424
        477   TEMP    63,   67,   70,  357,  373,  420,  421,  501
         11   TIME   122,  123,  130,  135,  136
        134   WAIT   637
        177   WIPE   172
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        436   WRFX   431
          1   ZERO    42,  347,  414
        271  ALOOP   276,  302
        263  ARITH   257,  261,  573,  577
        262  AROCT   521,  527
        260  ASOCT   515,  647
         12  BLANK    40,  370
        434  CHAIN     2
         44  COMNO    52,   54,  175
        110  COUNT   106
        113  DEATH   571
        255  EJECT   541
        221  GETCL   525
        222  GETIN   314
        231  GLOOP   235
        251  IFFCR   543
        334  JLOOP   331
        477  NAMES   326,  342,  343,  501
        157  NEXCM   312,  531
         57  NOCOM    36,  160
        257  NOREC   533
          4  NULLS   101
        203  PNUMO   310
        100  PRINT   254,  421,  535,  551,  561,  563,  575,  605,  607,  611,  613,  615,  617,  621,  625,  631,  641
                     643
        634  QTIME   412
        324  RIGHT   547
        150  SETWR   412
        502  SIXTY   117
         13  SLASH   363,  366
        443  SLEEP   133
          7  SPARE   315
        275  STORE   305
        455  TABLE    65,  213,  455
        500  TEMP2   164,  174,  263,  264,  274,  275,  301,  304,  306,  501
        501  WREND   231,  233,  501
        431  WRFLX   107,  237,  241
        435  WRFXA   422
        111  WRTIX    31
        123  ZOTIN   120
        261 ADDSUB   565,  623
        504 BLANKS   330,  335
        131 BYEBYE   137
        344 CALCHG      
        140 CHAINX   537
        425 CHFILE   344
        315 CHGCLS   517
        445 CHGFIL   425
         10 CLCWRD   126,  142
          3 COLONS   410
         43 COMCAL    56
         15 COMSTO    37
          5 CRWORD   255
        114 GAZABE   523
         26 GETARG    27
1       ZOT - NEW GAZABE COMPLEX                                                 68/11/21 2318.0 PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        151 GETBCD   236
        226 GETBUF   224
        432 GETCLS   225
        423 GETCOM    43
        433 GETIME   356
        325 GETNAM   331,  337
        356 MAKTIM   635
        426 NEXCOM    23
         23 NEXLOC   152
        505 NOMESS   354
        145 PRWORD   545
        146 PWRDIN   207,  220,  256,  355
        540 QEJECT      
        446 QGETTM   433
        542 QIFFCR   254
        503 REPEAT   167,  170,  171,  173,  177,  252
        444 SETBCD   151
        430 SETCLC   127,  143
        424 SETCLS    17
        106 SETCNT   150
        152 SETCOM   645
        427 SETFUL   100
         20 SETLOC   156
        244 SWCHCR   651
        273 SWITCH   265
        652 TABBOT    55,  232,  603,  652
        514 TABTOP    32,   34,  103,  267,  412,  421,  514
          6 THEWRD   230,  316,  317
        422 WRFLXA     0
        455 WRMESS    15,   20,   21,   22,  102,  104,  110,  147,  226,  240,  242,  365,  401,  411
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
