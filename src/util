



 7READ   BCD 09/20/68 0218.4    6531         00000    
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 1     
                  
                                             7/20/66 - NOEL I. MORRIS   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                  
                  
        TRANSFER VECTOR 
      00000  222646472545     BFOPEN
      00001  246242255160     DSKER 
      00002  222651252124     BFREAD
      00003  222666513163     BFWRIT
      00004  222623434662     BFCLOS
      00005  462321222360     OCABC 
                  
                       00034  CRDLTH EQU     28 
                       00030  CLTH   EQU     CRDLTH-4 
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 2     
                           PICK UP AND INTERPRET PARAMETERS.                        
                  
      00006                          CALL    SETBRK(CHN)   SET A BREAK LEVEL  
      00006  0074 00 4 00422         TSX     SETBRK,4                                                         .002
      00007  3 00000 0 00324         PAR     CHN                                                              .004
                  
      00010                          CALL    GETCLS((CARD,,0)) PICK UP COMMAND BUFFER     
      00010  0074 00 4 00423         TSX     GETCLS,4                                                         .002
      00011  3 00000 0 00366         PAR     CARD,,0                                                          .004
                  
      00012 -0500 00 0 00366         CAL     CARD          PICK UP NAME OF COMMAND  
      00013 -0340 00 0 00505         LAS     =H 7READ      CHECK FOR 7PUNCH READ    
      00014  0020 00 0 00016         TRA     *+2           ..     
      00015  0020 00 0 00023         TRA     NAM.OK        NAME IS OK   
      00016 -0340 00 0 00476         LAS     =H7PUNCH      CHECK FOR 7PUNCH WRITE   
      00017  0020 00 0 00350         TRA     NAMERR        NEITHER, NAME IS IN ERROR
      00020  0020 00 0 00022         TRA     *+2           ..     
      00021  0020 00 0 00350         TRA     NAMERR        ..     
      00022 -0625 00 0 00362         STL     PUNSW.        SET PUNCH INDIC.   
                  
                       00023  NAM.OK SYN     *  
      00023 -0500 00 0 00367         CAL     CARD+1        GET FIRST PARAMETER
      00024  0602 00 0 00353         SLW     I1            ..     
      00025  0602 00 0 00355         SLW     O1            ..     
      00026  0322 00 0 00037         ERA     FENCE         CHECK FOR NONE     
      00027  0100 00 0 00326         TZE     NOPAR         ERROR IF NO PARAMETER    
                  
      00030 -0500 00 0 00370         CAL     CARD+2        GET SECOND PARAMETER     
      00031  0602 00 0 00354         SLW     I2            ..     
      00032  0602 00 0 00356         SLW     O2            ..     
      00033  0322 00 0 00037         ERA     FENCE         ..     
      00034  0100 00 0 00326         TZE     NOPAR         ..     
                  
      00035 -0500 00 0 00371         CAL     CARD+3        GET THIRD PARAMETER
      00036 -0340 00 0 00037         LAS     FENCE         CHECK FOR NONE     
      00037  777777777777     FENCE  VFD     O36//         ..     
      00040  0020 00 0 00326         TRA     NOPAR         FENCE NOT PERMITTED HERE, EITHER     
      00041 -0340 00 0 00047         LAS     STAR          CHECK FOR ASTERISK 
      00042  0020 00 0 00044         TRA     *+2           ..     
      00043  0020 00 0 00045         TRA     *+2           ..     
      00044  0602 00 0 00355         SLW     O1            IF STAR, FIRST NAMES ARE THE SAME    
                  
      00045 -0500 00 0 00372         CAL     CARD+4        GET LAST PARAMETER 
      00046 -0340 00 0 00037         LAS     FENCE         ..     
      00047  606060606054     STAR   BCI     1,     *      ..     
      00050  0020 00 0 00052         TRA     *+2           ..     
      00051  0602 00 0 00356         SLW     O2            IF NO 4TH, SECOND NAMES ARE THE SAME 
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 3     
                           ASSIGN BUFFERS AND OPEN FILES.                           
                  
      00052                          CALL    GETMEM        GET CURRENT MEMBND 
      00052  0074 00 4 00424         TSX     GETMEM,4                                                         .002
      00053                          EXTEND  (OPR+4,OPR+5,OPW+4,OPW+5,OPW+6) ASSIGN BUFFERS     
      00053  0621 00 0 00072         STA     OPR+4                                                            .003
      00054  0361 00 0 00474         ACL     =432                                                             .002
      00055  0621 00 0 00073         STA     OPR+5                                                            .003
      00056  0361 00 0 00474         ACL     =432                                                             .002
      00057  0621 00 0 00102         STA     OPW+4                                                            .003
      00060  0361 00 0 00474         ACL     =432                                                             .002
      00061  0621 00 0 00103         STA     OPW+5                                                            .003
      00062  0361 00 0 00474         ACL     =432                                                             .002
      00063  0621 00 0 00104         STA     OPW+6                                                            .003
      00064  0361 00 0 00474         ACL     =432                                                             .002
      00065  0074 00 4 00425         TSX     SETMEM,4                                                         .003
                  
                  
      00066                   OPR    BFOPEN  R,I1,I2,$DSKER OPEN INPUT FILE   
      00066  0074 00 4 00000         TSX     $BFOPEN,4                                                        .003
      00067  3 00000 0 00504         PAR     =HR                                                              .005
      00070  3 00000 0 00353         PAR     I1                                                               .005
      00071  3 00000 0 00354         PAR     I2                                                               .005
      00072  3 00000 0 00503         PAR     =-0                                                              .005
      00073  3 00000 0 00503         PAR     =-0                                                              .005
      00074  3 00000 0 00503         PAR     =-0                                                              .005
      00075  3 00000 0 00001         PAR     $DSKER                                                           .005
                  
      00076                   OPW    BFOPEN  W,O1,O2,$DSKER AND OUTPUT FILE   
      00076  0074 00 4 00000         TSX     $BFOPEN,4                                                        .003
      00077  3 00000 0 00512         PAR     =HW                                                              .005
      00100  3 00000 0 00355         PAR     O1                                                               .005
      00101  3 00000 0 00356         PAR     O2                                                               .005
      00102  3 00000 0 00503         PAR     =-0                                                              .005
      00103  3 00000 0 00503         PAR     =-0                                                              .005
      00104  3 00000 0 00503         PAR     =-0                                                              .005
      00105  3 00000 0 00001         PAR     $DSKER                                                           .005
                  
      00106                          CALL    TRFILE(O1,O2,=0,$DSKER) TRUNCATE OUTPUT
      00106  0074 00 4 00426         TSX     TRFILE,4                                                         .002
      00107  3 00000 0 00355         PAR     O1                                                               .004
      00110  3 00000 0 00356         PAR     O2                                                               .004
      00111  3 00000 0 00471         PAR     =0                                                               .004
      00112  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00113 -0520 00 0 00362         NZT     PUNSW.        CHECK FOR 7PUNCH WRITE   
      00114  0020 00 0 00240         TRA     7READ         OTHERWISE, READ 7PUNCH   
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 4     
                           7PUNCH - CREATE 7PUNCH CARD IMAGES.                      
                  
      00115                          CALL    $BFREAD(I1,I2(WORD,,1)U.EOF,EOFCT,$DSKER) READ FIRST WORD
      00115  0074 00 4 00002         TSX     $BFREAD,4                                                        .002
      00116  3 00000 0 00353         PAR     I1                                                               .004
      00117  3 00000 0 00354         PAR     I2                                                               .004
      00120  3 00001 0 00365         PAR     WORD,,1                                                          .004
      00121  3 00000 0 00331         PAR     U.EOF                                                            .004
      00122  3 00000 0 00363         PAR     EOFCT                                                            .004
      00123  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00124  0774 00 4 00030  NEXT   AXT     CLTH,4        ZERO OUT THE CARD  
      00125  0600 00 4 00416         STZ     CARD+CLTH,4   ..     
      00126  2 00001 4 00125         TIX     *-1,4,1       ..     
                  
      00127                          CALL    $BFREAD(I1,I2(CARD+3,,CLTH-2)EOF1,EOFCT,$DSKER)    
      00127  0074 00 4 00002         TSX     $BFREAD,4                                                        .002
      00130  3 00000 0 00353         PAR     I1                                                               .004
      00131  3 00000 0 00354         PAR     I2                                                               .004
      00132  3 00026 0 00371         PAR     CARD+3,,CLTH-2                                                   .004
      00133  3 00000 0 00200         PAR     EOF1                                                             .004
      00134  3 00000 0 00363         PAR     EOFCT                                                            .004
      00135  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00136 -0500 00 0 00365         CAL     WORD          INSERT FIRST WORD FROM PREVIOUS READ 
      00137  0602 00 0 00370         SLW     CARD+2        ..     
      00140 -0500 00 0 00416         CAL     CARD+CLTH     SAVE EXTRA WORD    
      00141  0602 00 0 00365         SLW     WORD          ..     
      00142  0600 00 0 00416         STZ     CARD+CLTH     AND CLEAR IT 
                  
      00143  0774 00 4 00026         AXT     CLTH-2,4      COMPARE ALL WORDS  
      00144 -0340 00 4 00416  LAS    LAS     CARD+CLTH,4   ..     
      00145  0020 00 0 00147         TRA     *+2           ..     
      00146  0020 00 0 00152         TRA     SAME          ..     
                  
      00147                          CALL    WRITE(COUNT)  WORDS ARE DIFFERENT, WRITE OUT CARD  
      00147  0074 00 4 00207         TSX     WRITE,4                                                          .002
      00150  3 00000 0 00364         PAR     COUNT                                                            .004
      00151  0020 00 0 00124         TRA     NEXT          AND CONTINUE 
                  
                  
      00152  2 00001 4 00144  SAME   TIX     LAS,4,1       IF WORDS ARE ALL THE SAME,     
                  
      00153  0774 00 4 00025         AXT     CLTH-3,4      CLEAR ALL BUT FIRST WORD 
      00154  0600 00 4 00416         STZ     CARD+CLTH,4   ..     
      00155  2 00001 4 00154         TIX     *-1,4,1       ..     
                  
      00156  0774 00 1 00027         AXT     CLTH-1,1      KEEP COUNT OF IDENTICAL WORDS IN XR1 
                  
      00157                   RDLP   CALL    $BFREAD(I1,I2(WORD,,1)EOF2,EOFCT,$DSKER) READ NEXT WORD  
      00157  0074 00 4 00002         TSX     $BFREAD,4                                                        .002
      00160  3 00000 0 00353         PAR     I1                                                               .004
      00161  3 00000 0 00354         PAR     I2                                                               .004
      00162  3 00001 0 00365         PAR     WORD,,1                                                          .004
      00163  3 00000 0 00176         PAR     EOF2                                                             .004
      00164  3 00000 0 00363         PAR     EOFCT                                                            .004
      00165  3 00000 0 00001         PAR     $DSKER                                                           .004
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 5     
                           7PUNCH - CREATE 7PUNCH CARD IMAGES.                      
                  
      00166 -0500 00 0 00365         CAL     WORD          PICK UP THE WORD   
      00167  0322 00 0 00370         ERA     CARD+2        AND COMPARE  
      00170 -0100 00 0 00172         TNZ     DIFF          ..     
      00171  1 00001 1 00157         TXI     RDLP,1,1      IF WORD IS THE SAME, KEEP READING    
                  
                  
      00172  0634 00 1 00363  DIFF   SXA     EOFCT,1       SAVE REPETITION COUNT    
                  
      00173                          CALL    WRITE(EOFCT)  WRITE OUT THE CARD 
      00173  0074 00 4 00207         TSX     WRITE,4                                                          .002
      00174  3 00000 0 00363         PAR     EOFCT                                                            .004
                  
      00175  0020 00 0 00124         TRA     NEXT          AND CONTINUE 
                  
                  
      00176  0634 00 1 00363  EOF2   SXA     EOFCT,1       SAVE REPETITION COUNT    
      00177  0020 00 0 00203         TRA     CMEOF         AND GO TO COMMON EOF SECTION   
                  
      00200 -0500 00 0 00363  EOF1   CAL     EOFCT         ADD ONE TO EOF COUNT     
      00201  0361 00 0 00472         ACL     =1            TO INCLUDE WORD PREVIOUSLY READ
      00202  0602 00 0 00363         SLW     EOFCT         ..     
                  
      00203 -0625 00 0 00361  CMEOF  STL     LAST.         SET LAST CARD INDIC.     
      00204                          CALL    WRITE(EOFCT)  AND WRITE OUT LAST CARD  
      00204  0074 00 4 00207         TSX     WRITE,4                                                          .002
      00205  3 00000 0 00363         PAR     EOFCT                                                            .004
                  
      00206  0020 00 0 00320         TRA     CMEXIT        GO CLOSE FILES AND EXIT  
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 6     
                           WRITE - WRITE OUT A 7PUNCH CARD.                         
                  
      00207  0634 00 4 00236  WRITE  SXA     WRX4,4        SAVE XR4     
                  
      00210 -0500 60 4 00001         CAL*    1,4           PICK UP WORD COUNT 
      00211 -0765 00 0 00006         LGR     6             LOW ORDER 6 BITS INTO MQ 
      00212  0767 00 0 00003         ALS     3             LEAVE GAP FOR 7-9 PUNCH  
      00213 -0501 00 0 00473         ORA     =O5           AND INSERT IT
      00214 -0763 00 0 00006         LGL     6             SHIFT FIRST 6 BITS BACK IN     
      00215  0767 00 0 00022         ALS     18            AND SHIFT TO DECREMENT   
                  
      00216  0534 00 4 00360         LXA     SEQNO.,4      PICK UP SEQUENCE NO.     
      00217  1 00001 4 00220         TXI     *+1,4,1       AND CALCULATE NEXT NUMBER
      00220  0634 00 4 00360         SXA     SEQNO.,4      ..     
      00221 -0501 00 0 00360         ORA     SEQNO.        'OR' IN THE SEQ. NO. AND PREFIX
      00222  0520 00 0 00361         ZET     LAST.         CHECK FOR LAST CARD
      00223 -0501 00 0 00357         ORA     1TAG          IF LAST CARD, MAKE TAG NON-ZERO
      00224  0602 00 0 00366         SLW     CARD          AND STORE INTO FIRST WORD OF CARD    
                  
      00225  0774 00 4 00026         AXT     CLTH-2,4      NOW COMPUTE THE CHECKSUM 
      00226  0361 00 4 00416         ACL     CARD+CLTH,4   ..     
      00227  2 00001 4 00226         TIX     *-1,4,1       ..     
      00230  0602 00 0 00367         SLW     CARD+1        AND STORE IN CARD  
                  
      00231                          CALL    $BFWRIT(O1,O2(CARD,,CRDLTH)$DSKER) WRITE OUT CARD  
      00231  0074 00 4 00003         TSX     $BFWRIT,4                                                        .002
      00232  3 00000 0 00355         PAR     O1                                                               .004
      00233  3 00000 0 00356         PAR     O2                                                               .004
      00234  3 00034 0 00366         PAR     CARD,,CRDLTH                                                     .004
      00235  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00236  0774 00 4 00000  WRX4   AXT     **,4          RESTORE XR4  
      00237  0020 00 4 00002         TRA     2,4           AND RETURN   
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 7     
                           7READ - READ AND INTERPRET 7PUNCH CARD IMAGES.           
                  
      00240                   7READ  CALL    $BFREAD(I1,I2(CARD,,28)U.EOF,EOFCT,$DSKER) READ A CARD   
      00240  0074 00 4 00002         TSX     $BFREAD,4                                                        .002
      00241  3 00000 0 00353         PAR     I1                                                               .004
      00242  3 00000 0 00354         PAR     I2                                                               .004
      00243  3 00034 0 00366         PAR     CARD,,28                                                         .004
      00244  3 00000 0 00331         PAR     U.EOF                                                            .004
      00245  3 00000 0 00363         PAR     EOFCT                                                            .004
      00246  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00247 -0500 00 0 00366         CAL     CARD          GET FIRST WORD     
      00250 -0765 00 0 00030         LGR     24            ASSEMBLE WORD-COUNT
      00251  0771 00 0 00003         ARS     3             ..     
      00252 -0763 00 0 00006         LGL     6             ..     
      00253 -0320 00 0 00475         ANA     =O7777        ..     
      00254  0734 00 1 00000         PAX     ,1            WORDCT IN XR1
      00255 -3 00000 1 00240         TXL     7READ,1,0     IGNORE ZERO WDCT   
                  
      00256  0534 00 4 00360         LXA     SEQNO.,4      PICK UP SEQUENCE NUMBER  
      00257  1 00001 4 00260         TXI     *+1,4,1       AND CALCULATE NEXT NUMBER
      00260  0634 00 4 00360         SXA     SEQNO.,4      ..     
                  
      00261 -0500 00 0 00366         CAL     CARD          GET FIRST WORD AGAIN     
      00262  0322 00 0 00360         ERA     SEQNO.        COMPARE AGAINST SEQUENCE NUMBER
      00263 -0320 00 0 00513         ANA     =O700000077777 ..    
      00264 -0100 00 0 00334         TNZ     SEQERR        SEQUENCE/VALIDITY ERROR IF NON-ZERO  
                  
      00265 -0500 00 0 00366  SAVSEQ CAL     CARD          GET FIRST WORD AGAIN     
      00266  0621 00 0 00360         STA     SEQNO.        SAVE SEQUENCE NO. FOR NEXT TEST
      00267  0625 00 0 00357         STT     1TAG          AND TAG FOR LAST CARD CHECK    
                  
      00270  0774 00 4 00026         AXT     CLTH-2,4      ADD UP CKSM  
      00271 -0500 00 0 00366         CAL     CARD          ..     
      00272  0361 00 4 00416         ACL     CARD+CLTH,4   ..     
      00273  2 00001 4 00272         TIX     *-1,4,1       ..     
                  
      00274 -0340 00 0 00367         LAS     CARD+1        COMPARE WITH CHECKSUM    
      00275 -0520 00 0 00367         NZT     CARD+1        IGNORE ZERO CHECKSUM     
      00276  0020 00 0 00300         TRA     *+2           ..     
      00277  0020 00 0 00342         TRA     CHKERR        OOPS   
                  
      00300  3 00026 1 00310  CKRPT  TXH     RPEAT,1,CLTH-2 IF WDCT LARGER THAN 1 CARD    
      00301 -0634 00 1 00305         SXD     WR+3,1        STORE FOR WRITE    
                  
      00302                   WR     CALL    $BFWRIT(O1,O2(CARD+2,,**)$DSKER) WRITE IT OUT
      00302  0074 00 4 00003         TSX     $BFWRIT,4                                                        .002
      00303  3 00000 0 00355         PAR     O1                                                               .004
      00304  3 00000 0 00356         PAR     O2                                                               .004
      00305  3 00000 0 00370         PAR     CARD+2,,**                                                       .004
      00306  3 00000 0 00001         PAR     $DSKER                                                           .004
      00307  0020 00 0 00316         TRA     CHKEOF        CHECK FOR EOF
                  
      00310                   RPEAT  CALL    $BFWRIT(O1,O2(CARD+2,,1)$DSKER) REPEAT SAME WORD   
      00310  0074 00 4 00003         TSX     $BFWRIT,4                                                        .002
      00311  3 00000 0 00355         PAR     O1                                                               .004
      00312  3 00000 0 00356         PAR     O2                                                               .004
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 8     
                           7READ - READ AND INTERPRET 7PUNCH CARD IMAGES.           
                  
      00313  3 00001 0 00370         PAR     CARD+2,,1                                                        .004
      00314  3 00000 0 00001         PAR     $DSKER                                                           .004
      00315  2 00001 1 00310         TIX     RPEAT,1,1     ..     
                  
      00316 -0520 00 0 00357  CHKEOF NZT     1TAG          IF TAG NON-ZERO    
      00317  0020 00 0 00240         TRA     7READ         ..     
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 9     
                           COMMON EXIT SECTION.                                     
                  
      00320                   CMEXIT CALL    $BFCLOS(=HALL,=-0,$DSKER) CLOSE ALL FILES    
      00320  0074 00 4 00004         TSX     $BFCLOS,4                                                        .002
      00321  3 00000 0 00477         PAR     =HALL                                                            .004
      00322  3 00000 0 00503         PAR     =-0                                                              .004
      00323  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00324                   CHN    CALL    CHNCOM(0)     EXIT TO CHNCOM     
      00324  0074 00 4 00427         TSX     CHNCOM,4                                                         .002
      00325  3 00000 0 00000         PAR     0                                                                .004
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 10    
                           ERROR SECTION.                                           
                  
      00326                   NOPAR  COMENT  C1,5( INCOMPLETE SET OF PARAMETERS.)   
      00326  0074 00 4 00430         TSX     WRFLX,4                                                          .003
      00327  3 00005 0 00431         PAR     C1,,5                                                            .005
      00330  0021 00 0 00324         XIT     CHN           ..     
                  
                  
      00331                    U.EOF COMENT  C2,9(UNEXPECTED END-OF-FILE ENCOUNTERED READING INPUT.)  
      00331  0074 00 4 00430         TSX     WRFLX,4                                                          .003
      00332  3 00011 0 00436         PAR     C2,,9                                                            .005
      00333  0021 00 0 00324         XIT     CHN           ..     
                  
                  
      00334                   SEQERR CALL    $OCABC(SEQNO.) CONVERT SEQ. NO. TO BCD 
      00334  0074 00 4 00005         TSX     $OCABC,4                                                         .002
      00335  3 00000 0 00360         PAR     SEQNO.                                                           .004
      00336  0601 00 0 00457         STO     C3+8          AND STORE IN MESSAGE     
                  
      00337                          COMENT  C3,9( 7PUNCH SEQUENCE/VALIDITY ERROR AFTER CARD NO.)     
      00337  0074 00 4 00430         TSX     WRFLX,4                                                          .003
      00340  3 00011 0 00447         PAR     C3,,9                                                            .005
      00341  0021 00 0 00265         XIT     SAVSEQ        CONTINUE PROCESSING CARDS
                  
                  
      00342                   CHKERR CALL    $OCABC(SEQNO.) CONVERT SEQ. NO. TO BCD 
      00342  0074 00 4 00005         TSX     $OCABC,4                                                         .002
      00343  3 00000 0 00360         PAR     SEQNO.                                                           .004
      00344  0601 00 0 00464         STO     C4+4          ..     
                  
      00345                          COMENT  C4,5( CHECKSUM ERROR ON CARD)    
      00345  0074 00 4 00430         TSX     WRFLX,4                                                          .003
      00346  3 00005 0 00460         PAR     C4,,5                                                            .005
      00347  0021 00 0 00300         XIT     CKRPT         KEEP GOING   
                  
                  
      00350                   NAMERR COMENT  C5,4( ILLEGAL COMMAND NAME.)     
      00350  0074 00 4 00430         TSX     WRFLX,4                                                          .003
      00351  3 00004 0 00465         PAR     C5,,4                                                            .005
      00352  0021 00 0 00324         XIT     CHN           ..     
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 11    
                           STORAGE AND CONSTANTS.                                   
                  
      00353  0 00000 0 00000  I1     PZE  
      00354  0 00000 0 00000  I2     PZE  
      00355  0 00000 0 00000  O1     PZE  
      00356  0 00000 0 00000  O2     PZE  
                  
      00357  0 00000 1 00000  1TAG   PZE     ,1 
      00360 -3 00000 0 77777  SEQNO. SVN     -1 
      00361  0 00000 0 00000  LAST.  PZE     0  
      00362  0 00000 0 00000  PUNSW. PZE     0  
      00363  0 00000 0 00000  EOFCT  PZE  
      00364  0 00000 0 00026  COUNT  PZE     CLTH-2   
                  
      00365  0 00000 0 00000  WORD   PZE  
      00366                   CARD   BSS     CRDLTH   
                  
                  
      00422                          RMT     *             REMOTE SEQUENCES   
      00422  0101 00 0 00506  SETBRK TIA     =HSETBRK                                                         .002
      00423  0101 00 0 00501  GETCLS TIA     =HGETCLS                                                         .002
      00424  0101 00 0 00502  GETMEM TIA     =HGETMEM                                                         .002
      00425  0101 00 0 00507  SETMEM TIA     =HSETMEM                                                         .002
      00426  0101 00 0 00510  TRFILE TIA     =HTRFILE                                                         .002
      00427  0101 00 0 00500  CHNCOM TIA     =HCHNCOM                                                         .002
      00430  0101 00 0 00511  WRFLX  TIA     =HWRFLX                                                          .002
      00431  603145234644     C1     BCI     5, INCOMPLETE SET OF PARAMETERS.                                 .002
      00432  474325632560     
      00433  622563604626     
      00434  604721512144     
      00435  256325516233     
      00436  644525674725     C2     BCI     9,UNEXPECTED END-OF-FILE ENCOUNTERED READING INPUT.              .002
      00437  236325246025     
      00440  452440462640     
      00441  263143256025     
      00442  452346644563     
      00443  255125246051     
      00444  252124314527     
      00445  603145476463     
      00446  336060606060     
      00447  600747644523     C3     BCI     9, 7PUNCH SEQUENCE/VALIDITY ERROR AFTER CARD NO.                 .002
      00450  306062255064     
      00451  254523256165     
      00452  214331243163     
      00453  706025515146     
      00454  516021266325     
      00455  516023215124     
      00456  604546336060     
      00457  606060606060     
      00460  602330252342     C4     BCI     5, CHECKSUM ERROR ON CARD                                        .002
      00461  626444602551     
      00462  514651604645     
      00463  602321512460     
      00464  606060606060     
      00465  603143432527     C5     BCI     4, ILLEGAL COMMAND NAME.                                         .002
      00466  214360234644     
      00467  442145246045     
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 12    
                           STORAGE AND CONSTANTS.                                   
                  
      00470  214425336060     
                  
                  
                                     END  
                  
        LITERALS  
      00471  000000000000     
      00472  000000000001     
      00473  000000000005     
      00474  000000000660     
      00475  000000007777     
      00476  074764452330     
      00477  214343606060     
      00500  233045234644     
      00501  272563234362     
      00502  272563442544     
      00503  400000000000     
      00504  516060606060     
      00505  600751252124     
      00506  622563225142     
      00507  622563442544     
      00510  635126314325     
      00511  665126436760     
      00512  666060606060     
      00513  700000077777     
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        514 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        431     C1   327
        436     C2   332
        447     C3   336,  340
        460     C4   344,  346
        465     C5   351
        353     I1    24,   70,  116,  130,  160,  241
        354     I2    31,   71,  117,  131,  161,  242
        355     O1    25,   44,  100,  107,  232,  303,  311
        356     O2    32,   51,  101,  110,  233,  304,  312
        302     WR   301
        324    CHN     7,  330,  333,  352
        144    LAS   152
         66    OPR    53,   55
         76    OPW    57,   61,   63
        357   1TAG   223,  267,  316
        366   CARD    11,   12,   23,   30,   35,   45,  125,  132,  137,  140,  142,  144,  154,  167,  224,  226,  230
                     234,  243,  247,  261,  265,  271,  272,  274,  275,  305,  313
         30   CLTH     6,  124,  125,  132,  140,  142,  143,  144,  153,  154,  156,  225,  226,  270,  272,  300,  364
        172   DIFF   170
        200   EOF1   133
        176   EOF2   163
        124   NEXT   151,  175
        157   RDLP   171
        152   SAME   146
         47   STAR    41
        365   WORD   120,  136,  141,  162,  166
        236   WRX4   207
        240  7READ   114,  255,  317
        300  CKRPT   347
        203  CMEOF   177
        364  COUNT   150
          1  DSKER    75,  105,  112,  123,  135,  165,  235,  246,  306,  314,  323
        363  EOFCT   122,  134,  164,  172,  174,  176,  200,  202,  205,  245
         37  FENCE    26,   33,   36,   46
        361  LAST.   203,  222
        326  NOPAR    27,   34,   40
          5  OCABC   334,  342
        310  RPEAT   300,  315
        331  U.EOF   121,  244
        430  WRFLX   326,  331,  337,  345,  350
        207  WRITE   147,  173,  204
          4 BFCLOS   320
          0 BFOPEN    66,   76
          2 BFREAD   115,  127,  157,  240
          3 BFWRIT   231,  302,  310
        316 CHKEOF   307
        342 CHKERR   277
        427 CHNCOM   324
        320 CMEXIT   206
         34 CRDLTH     6,  234,  366
        423 GETCLS    10
1            7PUNCH/7READ - CREATE AND INTERPRET 7PUNCH CARD IMAGES.                             PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        424 GETMEM    52
        350 NAMERR    17,   21
         23 NAM.OK    15,   23
        362 PUNSW.    22,  113
        265 SAVSEQ   341
        334 SEQERR   264
        360 SEQNO.   216,  220,  221,  256,  260,  262,  266,  335,  343
        422 SETBRK     6
        425 SETMEM    65
        426 TRFILE   106
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            DISK ERROR SUBROUTINE - CALLS PRNTER VIA NEXCOM.                                    PAGE 1     
                  
                                             REVISED 9/14/65 - NOEL I. MORRIS 
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00000         ENTRY   DSKER    
                  
      00000 -0500 00 0 00006  DSKER  CAL     =HPRNTER 
      00001  0560 00 0 00004         LDQ     =O-71    
      00002                          CALL    NEXCOM   
      00002  0074 00 4 00003         TSX     NEXCOM,4                                                         .002
                  
      00003                          RMT     *             REMOTE SEQUENCES   
      00003  0101 00 0 00005  NEXCOM TIA     =HNEXCOM                                                         .002
                  
                                     END  
                  
        LITERALS  
      00004  400000000071     
      00005  452567234644     
      00006  475145632551     
1            DISK ERROR SUBROUTINE - CALLS PRNTER VIA NEXCOM.                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          7 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          0  DSKER     0
          3 NEXCOM     2
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




 A.DBG   BCD 09/20/68 0218.4   40438         00000    
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 1     
                                         DEFINITIONS.                               
                  
                                     PCC     ON            PRINT LBL CARD.    
                                     LBL     FDBG          BINARY CARD LABEL. 
                                     PCC     OFF           DON'T PRINT PMC CARDS.   
                              *     
                       00001         ENTRY   A.DBG    
                              *     
                              *                            USEFUL DEFINITIONS.
                  
      00000  212346512560     ACORE 
                  
                       00000  ..     EQU     **            MODIFICATION SYMBOL.     
            -0625 71 1 20000  SETF   OPSYN   STL           SET FLAG.    
             0600 71 1 60000  CLEAR  OPSYN   STZ           CLEAR FLAG.  
             3 00011 1 60000  PAR    OPSYN   BRN           PARAMETER POINTER. 
             2 00017 1 60000  BLK    OPSYN   TIX           BLOCK POINTER.     
            -1 00011 1 20000  FMT    OPD     500011120000  FORMAT POINTER.    
            -1 00011 1 20000  IOP    OPD     500011120000  I/O PARAMETER POINTER.   
            -1 00001 1 20000  ENDIO  OPSYN   STR           END OF I/O LIST.   
            -0 17560 0 05336  SHOW   OPSYN   PMC           SAVE PRESENT DEFINITION OF PMC.
                              *     
                              TSS    MACRO   A             CALL SUPERVISOR SUBROUTINE.    
                                     GEN     ,TSX(A,4)     GENERATE CALL INSTRUCTION.     
                                     RMT  
                                     IFF     A,X           IF ARGUMENT IS UNDEFINED,
                                     GEN     (A),TIA(=H'A) INSERT THE TRAP INSTRUCTION.   
                                     RMT  
                                     END     TSS
                              *     
                              TYPE   MACRO   N,COM,LOC     TYPE COMMENT.
                                     GEN     ,TSX(TYPE,4)  CALL SUBPROGRAM.   
                                     GEN     ,PAR(LOC)     POINTER TO BCI STRING.   
                                     RMT  
                                     IFF     LOC,X         IF LOCATION SYMBOL UNDEFINED, GENERATE BCI.
                                     GEN     LOC,BCI(N,COM) GENERATE THE BCI STRING.
                                     RMT  
                                     END     TYPE     
                              *     
                              TYPA   MACRO   N,COM,LOC
                                     GEN     ,TSX(TYPA,4)  CALL SUBPROGRAM.   
                                     GEN     ,PAR(LOC)     POINTER TO BCI STRING.   
                                     RMT  
                                     IFF     LOC,X         IF LOCATION SYMBOL UNDEFINED, GENERATE BCI.
                                     GEN     LOC,BCI(N,COM) GENERATE THE BCI STRING.
                                     RMT  
                                     END     TYPA     
                              *     
                              GEN    MACRO   LOC,OP,AD     SURROUND GENERATED WORD WITH PMC ON, OFF.  
                                     PMC     ON            PRINT THE WORD.    
                              LOC    OP      AD            ..     
                                     PMC     OFF           RETURN TO NORMAL MODE.   
                                     END     GEN
                              *     
                              OUTSUB MACRO   NAME          DEFINE SUBROUTINE CALL.  
                                     IRP     NAME          CONSIDER EACH NAME IN LIST.    
                              NAME   MACRO   ARG           DEFINE IT.   
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 2     
                                         DEFINITIONS.                               
                  
                                     GEN     ,CLA(ARG)     GENERATE A CLA.    
                                     GEN     ,TSX(NAME,4)  CALL THE SUBROUTINE.     
                                     END     NAME          THAT'S IT FOR THIS DEFINITION. 
                                     IRP                   ANY MORE.Q   
                                     END     OUTSUB        NO.    
                              *     
      00001                          OUTSUB  (TYO,BCDOUT,NAMOUT,INTOUT,OCTOUT,FLDPRT)     
                              *     
                              TEQ    MACRO   LOC,SAMPLE    TRANSFER IF EQUAL. 
                                     GEN     ,LAS(SAMPLE)   COMPARE C(AC) WITH C(SAMPLE). 
                                     GEN     ,TRA(*+2)     C(AC) .NE. C(SAMPLE), SKIP.    
                                     GEN     ,TRA(LOC)     C(AC) .E. C(SAMPLE), TRANSFER. 
                                     END     TEQ
                              *     
                              TNE    MACRO   LOC,SAMPLE    TRANSFER IF NOT EQUAL.   
                                     TEQ     *+2,(SAMPLE)  IF C(AC) .E. C(SAMPLE), SKIP.  
                                     GEN     ,TRA(LOC)     C(AC) .NE. C(SAMPLE), TRANSFER.
                                     END     TNE
                              *     
                              TBL    MACRO   LOC           TRANSFER IF BLANK. 
                                     TEQ     (LOC),=H00000 ..     
                                     END     TBL
                              *     
                              TNB    MACRO   LOC           TRANSFER IF NOT BLANK.   
                                     TNE     (LOC),=H00000 ..     
                                     END     TNB
                              *     
                              TCR    MACRO   LOC           TRANSFER IF CARRIAGE RETURN.   
                                     TEQ     (LOC),=O55    ..     
                                     END     TCR
                              *     
                              TNCR   MACRO   LOC           TRANSFER IF NOT CARRIAGE RETURN.     
                                     TNE     (LOC),=O55    ..     
                                     END     TNCR     
                              *     
                              MCALL  MACRO   NAME,ARG      GENERATE MAD FUNCTION CALL.    
                                     TSS     NAME          CALL THE FUNCTION. 
                                     IRP     ARG           EXPAND THE ARGUMENT LIST.
                                     PTR     ARG           ..     
                                     IRP  
                                     END     MCALL    
                              *     
                              PTR    MACRO   A,B,C         GENERATE ARGUMENT POINTER.     
                              ...    SET     *             REMEMBER CURRENT LOCATION.     
                                     IFF     1,...,B       IS B '...'.Q 
                                     GEN     ,BLK(A,,C)    YES, USE MAD BLOCK NOTATION.   
                                     IFF     1,,B          IS B VOID.Q  
                                     GEN     ,PAR(A,,C)    YES, USE FAP BLOCK NOTATION.   
                                     IFF     *-...,X       DID EITHER OF THE ABOVE TURN OUT TRUE.Q    
                                     GEN     ,PAR(A)       NO, USE SINGLE ARGUMENT POINTER.     
                                     END     PTR
                              *     
                              FNC    MACRO   NAME          DEFINE FUNCTION NAME.    
                                     IRP     NAME          CONSIDER EACH NAME IN LIST.    
                              NAME   MACRO   ARG           DEFINE IT..  
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 3     
                                         DEFINITIONS.                               
                  
                                     MCALL   NAME(ARG)
                                     END     NAME     
                                     IRP  
                                     END     FNC
                              *     
      00001                          FNC     (OPEN,BUFFER,RDWAIT,CLOSE,IODIAG)
                              *     
            -0 17735 0 05336  PMC    OPSYN   NULL          TURN OFF MACRO EXPANSION 
                              *     
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 4     
                           MAIN CONTROL SECTION, READS AND INTERPRETS REQUESTS.     
                  
                       00001  A.DBG  SYN     *  
                       00001  QBACK  SYN     *  
      00001                          TYPA    2,(BON JOUR.*) 
      00003 -0625 00 0 01426         SETF    CRFLG         MAKE TYI READ A FRESH LINE.    
      00004  0074 00 4 02175  SAME1  TSX     CR,4          THEN CARRIAGE RETURN.    
      00005  0074 00 4 01705         TSX     CHFIL,4       CHECK AND SET UP FOR FILE INPUT.     
      00006  0074 00 4 01377  MAIN   TSX     SKIPCR,4      MOVE TO BEGINNING OF NEXT REQUEST.   
      00007  0074 00 4 02427  IGNORE TSX     BCSCH,4       GET THE FIRST SUBFIELD.  
      00010  0600 00 0 02133         CLEAR   INRUPT        RESET THE INTERRUPT FLAG.
      00011  0601 00 0 00730         STO     BC            SAVE BREAK CHARACTER AND INDICATOR.  
      00012 -0600 00 0 00065         STQ     SUBF          SAVE CHARACTERS IN SUBFIELD.   
      00013                          TBL     RQST          CHECK FOR REQUEST IF BLANK,    
      00016                          TNCR    LOCF          OR CR.  OTHERWISE, LOC FIELD.  
      00022 -0130 00 0 00000  RQST   XCL  
      00023                          TEQ     BLANK,=H      IS FIELD ALL BLANK.Q     
      00026 -0320 00 0 11400         ANA     =O777777777700 
      00027                          TEQ     ONECH,(=H     0) IS IT ONLY ONE CHARACTER.Q  
      00032  0500 00 0 00730  LOCF   CLA     BC            RESTORE THE DATA.  
      00033  0560 00 0 00065         LDQ     SUBF     
      00034  0020 00 0 00053         TRA     LOCNXT        GO CONTINUE SCANNING THE LINE. 
                              *     
      00035  0500 00 0 00730  BLANK  CLA     BC            GET BREAK CHARACTER.     
      00036                          TCR     NEXT          IF CARRIAGE RETURN, LOOK AT NEXT LOCATION. 
      00041                          TBL     IGNORE        IF BLANK, TRY AGAIN.     
      00044  0020 00 0 00032         TRA     LOCF          OTHERWISE WE HAVE A LOCATION FIELD.  
                              *     
      00045 -0500 00 0 00065  ONECH  CAL     SUBF          ONLY ONE CHARACTER.
      00046 -0320 00 0 11326         ANA     =O77          GET RID OF BLANKS. 
      00047 -0340 00 0 11304         LAS     =7            IS CHARACTER A 'LETTER.Q'.     
      00050  0020 00 0 00230         TRA     CMND          YES, ASSUME IT A REQUEST.
      00051  0761 00 0 00000         NOP                   NO,    
      00052  0020 00 0 00032         TRA     LOCF          ASSUME IT A LOCATION.    
                              *     
      00053  0074 00 4 02466  LOCNXT TSX     EVAL,4        EVALUATE THE FIRST FIELD (LOCATION). 
      00054                          TBL     PUT           OK, NOW CHECK THE LOC., GET WORD.    
      00057                          TNCR    ILF           IT MUST BE THE END OF HTE LINE.
      00063 -0600 00 0 00202         STQ     LOC           SAVE THE LOCATION. 
      00064  0020 00 0 00421         TRA     RLOOK         GO PRINT ITS CONTENTS.   
                              *     
      00065  0 00000 0 00000  SUBF  
      00066  0 00000 0 00000  MEMBND                       CURRENT MEMORY BOUND.    
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 5     
                           SYMIN.        GET SYMBOLIC 'FAP WORD' FROM INPUT LINE.   
                  
      00067  0634 00 4 00154  SYMIN  SXA     SYMX,4        SAVE RETURN. 
      00070  0634 00 1 00155         SXA     SYMY,1        SAVE XR 1.   
      00071  0600 00 0 00733         STZ     OP            CLEAR THE WORD PARTS.    
      00072  0600 00 0 00734         STZ     ADD
      00073  0600 00 0 00735         STZ     TAG
      00074  0600 00 0 00736         STZ     DEC
      00075  0074 00 4 02427         TSX     BCSCH,4       GET THE OP. CODE, NEXT DELIMITER.    
      00076  0602 00 0 00730         SLW     BC            SAVE BREAK CHARACTER.    
      00077 -0600 00 0 00733         STQ     OP            SAVE THE RIGHT-ADJUSTED OP CODE.     
      00100 -0130 00 0 00000         XCL  
      00101  0074 00 4 02546         TSX     LADJ,4        ADJUST CODE TO LEFT.     
      00102  0774 00 1 00014         AXT     POPEND-POPORG,1 SET UP COUNT OF PSEUDO-OPS.  
      00103                   POPRET TEQ     LOK,(POPEND,1) GO DISPATCH IF THIS IS IT.    
      00106  2 00002 1 00103         TIX     POPRET,1,2    NOT THIS ONE, TRY AGAIN. 
      00107 -0500 00 0 00733         CAL     OP            NOT A PSEUDO-OP, GET RIGHT-ADJUSTED CODE.  
      00110  0074 00 4 10221         TSX     OPBIN,4       LOOK UP THE CODE.  
      00111  0602 00 0 00733         SLW     OP 
      00112 -0500 00 0 00730         CAL     BC            GET BREAK CHARACTER, CHECK IT. 
      00113                          TNB     SINP          END OF 'LINE', EXIT.     
      00117  0074 00 4 02472  ADNXT  TSX     FLDEVL,4      EVALUATE THE ADDRESS FIELD.    
      00120 -0600 00 0 00734         STQ     ADD
      00121                          TNE     SINP,(=H00000,) END OF LINE IF NOT COMMA.    
      00125  0074 00 4 02472         TSX     FLDEVL,4      EVALUATE THE TAG FIELD.  
      00126 -0600 00 0 00735         STQ     TAG
      00127                          TNE     SINP,(=H00000,) END OF LINE IF NOT COMMA.    
      00133  0074 00 4 02472         TSX     FLDEVL,4      EVALUATE THE DECREMENT FIELD.  
      00134 -0600 00 0 00736         STQ     DEC
      00135  0601 00 0 00730  SINP   STO     BC            SAVE THE BREAK CHARACTER.
      00136 -0500 00 0 00733         CAL     OP            GET THE OP CODE.   
      00137  0602 00 0 00731         SLW     WORD          SAVE IT.     
      00140 -0501 00 0 00734         ORA     ADD           INSERT THE ADDRESS.
      00141  0621 00 0 00731         STA     WORD          AND SAVE THE ADDRESS PART.     
      00142 -0500 00 0 00735         CAL     TAG           GET THE TAG. 
      00143  0767 00 0 00017         ALS     15            SHIFT IT INTO POSITION.  
      00144 -0501 00 0 00731         ORA     WORD          PUT IT INTO THE WORD.    
      00145  0625 00 0 00731         STT     WORD          AND SAVE ONLY THE TAG PART.    
      00146 -0500 00 0 00736         CAL     DEC           GET THE DECREMENT. 
      00147  0767 00 0 00022         ALS     18            SHIFT IT INTO POSITION.  
      00150 -0501 00 0 00731         ORA     WORD          COMBINE IT W/ PREVIOUS.  
      00151  0622 00 0 00731         STD     WORD          AND SAVE ONLY THE DECREMENT PART.    
      00152  0560 00 0 00731         LDQ     WORD          GET THE ENTIRE WORD.     
      00153  0500 00 0 00730         CLA     BC            GET THE BREAK CHARACTER. 
      00154  0774 00 4 00000  SYMX   AXT     ..,4          RESTORE RETURN (HERE FROM POP).
      00155  0774 00 1 00000  SYMY   AXT     ..,1          RESTORE XR 1.
      00156  0020 00 4 00001         TRA     1,4           AND EXIT.    
                              *     
      00157  0500 00 0 00730  LOK    CLA     BC            GET THE BREAK CHARACTER. 
      00160                          TNB     ILF           MAKE SURE WE HAVE A WORD OF DATA.    
      00164 -0774 00 4 00153         AXC     SYMX-1,4      SET UP RETURN INDEX.     
      00165  0020 60 1 00203         TRA*    POPEND+1,1    DISPATCH ON THE PSEUDO-OP.     
                              *     
      00166  222324606060     POPORG BCI     1,BCD         HOLLERITH INPUT.   
      00167  0 00000 0 02273                 BCDIN         ..     
      00170  304643606060            BCI     1,HOL         ..     
      00171  0 00000 0 02273                 BCDIN         ..     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 6     
                           SYMIN.        GET SYMBOLIC 'FAP WORD' FROM INPUT LINE.   
                  
      00172  264346606060            BCI     1,FLO         FLOATING POINT INPUT.    
      00173  0 00000 0 01104                 FLOIN         ..     
      00174  314563606060            BCI     1,INT         DECIMAL INTEGER INPUT.   
      00175  0 00000 0 01007                 INTIN         ..     
      00176  414563606060            BCI     1,JNT         FORTRAN INTEGER INPUT.   
      00177  0 00000 0 01012                 JNTIN         ..     
      00200  462363606060            BCI     1,OCT         OCTAL INPUT. 
      00201  0 00000 0 01004                 OCTIN         ..     
                       00202  POPEND EQU     *  
                              *     
      00202  0 00000 0 00000  LOC                          CURRENT LOCATION.  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 7     
                           ILF.          COMMENT ON UNDECIPHERABLE REQUEST.         
                  
      00203                   ILF    TCR     ILFCR         IF CARRIAGE RETURN, GIVE SPECIAL COMMENT.  
      00206                          TBL     ILFBL         SAME WITH BLANK.   
      00211  0601 00 0 00227         STO     ILFCH         SAVE THE CHARACTER.
      00212  0074 00 4 02201         TSX     QUOTE,4       TYPE LEFT QUOTE.   
      00213                          TYO     ILFCH         TYPE THE CHARACTER.
      00215  0074 00 4 02201         TSX     QUOTE,4       TYPE THE RIGHT QUOTE.    
      00216                   ILFJN  TYPE    5,( ENCOUNTERED UNEXPECTEDLY.*)  
      00220  0020 00 0 00006         TRA     MAIN          GO GET THE NEXT REQUEST. 
                              *     
      00221                   ILFCR  TYPA    3,(END OF REQUEST*)  
      00223  0020 00 0 00216         TRA     ILFJN         GO TYPE THE REST OF THE MESSAGE.     
                              *     
      00224                   ILFBL  NAMOUT  =HBLANK       TYPE THE FIRST PART OF COMMENT.
      00226  0020 00 0 00216         TRA     ILFJN         GO GET THE REST.   
                              *     
      00227  0 00000 0 00000  ILFCH                        STORAGE FOR THE CHARACTER.     
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 8     
                                         DISPATCH ON AND SERVICE REQUEST.           
                  
      00230  0774 00 1 00036  CMND   AXT     CEND-CORG,1   SET UP,
      00231                          TEQ     CDISP,(CEND,1) FOUND, GO DISPATCH.     
      00234  2 00002 1 00231         TIX     *-3,1,2       TRY AGAIN.   
      00235  0020 00 0 00032         TRA     LOCF          NOT A REQUEST, ASSUME A LOCATION.    
                              *     
      00236 -0500 00 1 00300  CDISP  CAL     CEND+1,1      GET LOCATION W/ POINTERS.
      00237 -0737 00 2 00000         PDC     ,2            PUT FIRST POINTER IN XR 2.     
      00240  0020 00 2 00000         TRA     ,2            DISPATCH ON IT.    
                              *     
                       00241  CORG   EQU     *             REQUEST DISPATCH TABLE.  
      00241  000000000021            BCI     1,00000A 
      00242  0 02703 0 00000                 ,,SETABS      SET MODE TO ABSOLUTE     
      00243  000000000023            BCI     1,00000C 
      00244  0 00345 0 00000                 ,,VERIFY      OR COMPARE.  
      00245  000000000024            BCI     1,00000D 
      00246  0 00277 0 00000                 ,,DPOSIT      PATCH IN SYMBOLIC. 
      00247  000000000025            BCI     1,00000E 
      00250  0 00671 0 00000                 ,,DEF         DEFINE.
      00251  000000000026            BCI     1,00000F 
      00252  0 00424 0 06142                 FLOOUT,,LOOK  'LOOK' IN FLOATING-POINT.
      00253  000000000030            BCI     1,00000H 
      00254  0 00424 0 02251                 BCDOUT,,LOOK  LOOK AT A BCD WORD.
      00255  000000000031            BCI     1,00000I 
      00256  0 00424 0 06252                 INTOUT,,LOOK  LOOK AT A FULL-WORD INTEGER.   
      00257  000000000041            BCI     1,00000J 
      00260  0 00424 0 06251                 DECOUT,,LOOK  LOOK AT A FORTRAN INTEGER.     
      00261  000000000043            BCI     1,00000L 
      00262  0 00561 0 00000                 ,,YANK        FIND LOAD ADDRESS OF PROGRAM.  
      00263  000000000046            BCI     1,00000O      OCTAL LOOK.  
      00264  0 00424 0 06247                 OCTOUT,,LOOK  LOOK IN OCTAL.     
      00265  000000000051            BCI     1,00000R 
      00266  0 02712 0 00000                 ,,SETREL      SET MODE TO RELATIVE     
      00267  000000000050            BCI     1,00000Q 
      00270  0 00403 0 00000                 ,,DISMIS      OR QUIT.     
      00271  000000000062            BCI     1,00000S 
      00272  0 00424 0 02343                 SYMPRT,,LOOK  LOOK AT A WORD SYMBOLICALLY.   
      00273  000000000063            BCI     1,00000T      SYMBOL TABLE.
      00274  0 00601 0 00000                 ,,TABLE       READ SYMBOLS (OR KILL TABLE).  
      00275  000000000066            BCI     1,00000W 
      00276  0 00625 0 00000                 ,,AUTO        WORK = FIND ORIGIN, LOAD SYMBOLS.    
                       00277  CEND   EQU     *  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 9     
                           D             REPLACE CONTENTS OF SPECIFIED LOCATION.    
                  
      00277  0500 00 0 00730  DPOSIT CLA     BC            GET BREAK CHARACTER.     
      00300                          TNB     ILF           IF NOT A BLANK, COMPLAIN.
      00304  0074 00 4 02472         TSX     FLDEVL,4      EVALUATE LOCATION FIELD. 
      00305                          TNB     ILF           GRIPE IF NOT ANOTHER ARGUMENT. 
      00311 -0600 00 0 00202  PUT    STQ     LOC           SAVE THE VALUE OF THE FIELD.   
      00312 -0500 00 0 00202         CAL     LOC
      00313  0621 00 0 00342         STA     PUT1          SETUP ADDRESS FOR CALL TO SETLOC.    
      00314  0600 00 0 00344         CLEAR   KEYTST        RESET KEY TEST SWITCH    
      00315  0760 00 0 00004  TSTKEY ENK                   READ IN THE CONSOLE KEYS 
      00316 -0130 00 0 00000         XCL                   PLACE IN LAC 
      00317 -0320 00 0 11331         ANA     =O20000       CHECK FOR KEY 22 DOWN    
      00320 -0100 00 0 00333         TNZ     PATCH         IF DOWN, OK TO PATCH     
      00321                          TYPA    4,(KEY 22 IS NOT DOWN.*)   
      00323 -0520 00 0 00344         NZT     KEYTST        ADDITIONAL MESSAGE FIRST TIME  
      00324                          TYPA    6,( I WILL RETRY EVERY 10 SECONDS.*)   
      00326 -0625 00 0 00344         SETF    KEYTST        SET KEY TEST SWITCH
      00327  0074 00 4 02175         TSX     CR,4          TYPE A CARRIAGE RETURN   
      00330 -0500 00 0 11307         CAL     =10           SLEEP FOR 10 SECONDS     
      00331                          TSS     SLEEP         ..     
      00332  0020 00 0 00315         TRA     TSTKEY        NOW TRY AGAIN
                              *     
                       00333  PATCH  SYN     *  
      00333  0074 00 4 00067         TSX     SYMIN,4       GET THE SYMBOLIC WORD.   
      00334                          TNCR    ILF           IF NOT END OF REQUEST, GRIPE.  
      00340 -0130 00 0 00000         XCL  
      00341                          TSS     SETLOC        DEPOSIT WORD INTO A-CORE.
      00342  0 00000 0 00000  PUT1   PZE     ** 
      00343  0020 00 0 00006         TRA     MAIN     
                              *     
      00344  0 00000 0 00000  KEYTST
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 10    
                           C             COMPARE SUBPROGRAM WITH VIRGIN VERSION.    
                  
      00345  0500 00 0 00730  VERIFY CLA     BC            GET THE BREAK CHARACTER. 
      00346                          TNB     ILF           IF NO ARGUMENTS, GRIPE.  
      00352  0074 00 4 02427         TSX     BCSCH,4       ASSEMBLE THE ENTRY NAME. 
      00353 -0600 00 0 00665         STQ     NAME          SAVE IT.     
      00354  0602 00 0 00730         SLW     BC            AND SAVE THE BREAK CHARACTER.  
      00355 -0130 00 0 00000         XCL                   MOVE THE NAME TO THE AC. 
      00356  0074 00 4 02546         TSX     LADJ,4        LEFT ADJUST IT.    
      00357  0074 00 4 00737         TSX     ORGFND,4      FIND ITS ORIGIN.   
      00360  0602 00 0 00732         SLW     PGMORG        SAVE THE ORIGIN.   
      00361  0500 00 0 00730         CLA     BC            GET THE BREAK CHARACTER. 
      00362                          TCR     VERGO         IF CARR. RET., DON'T TRY ANOTHER ARG.
      00365                          TNB     ILF           ANOTHER ARGUMENT MUST BE SET OFF BY BLANK. 
      00371  0074 00 4 02427         TSX     BCSCH,4       IF NOT, GET THE FILE NAME.     
      00372                          TNCR    ILF           GRIPE IF MORE ARGUMENTS. 
      00376 -0600 00 0 00665         STQ     NAME          SAVE IT.     
      00377 -0500 00 0 00665  VERGO  CAL     NAME          ALL SET, GET THE FILE NAME.    
      00400  0560 00 0 00732         LDQ     PGMORG        AND THE ORIGIN.    
      00401  0074 00 4 01447         TSX     DIFDMP,4      GO TO VERIFY.
      00402  0020 00 0 00006         TRA     MAIN          WHEN DONE, RETURN. 
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 11    
                           Q               END DEBUGGING SESSION.                   
                  
      00403  0500 00 0 00730  DISMIS CLA     BC            GET THE BREAK CHARACTER. 
      00404                          TNCR    ILF           IF NOT A CARRIAGE RETURN, COMPLAIN.  
      00410                          TYPE    2,(AU REVOIR.*)
      00412                          TSS     CHNCOM        RETURN TO CTSS.    
      00413 +000000000001            DEC     1             LEAVE THIS CORE IMAGE.   
      00414  0020 00 0 00001         TRA     QBACK         GO ANNOUNCE RESTART.     
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 12    
                           INT.          RETURN FROM USER'S INTERRUPT.              
                  
      00415  0020 00 0 02106  INT    TRA     NOINT         INTERRUPT NEVER FROM USER
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 13    
                           LOOK.         PRINT CONTENTS OF SPECIFIED LOCATIONS.     
                  
      00416 -0500 00 0 00202  NEXT   CAL     LOC
      00417  0361 00 0 11302         ACL     =1 
      00420  0602 00 0 00202         SLW     LOC
      00421 -0500 00 0 00202  RLOOK  CAL     LOC           PRINT LOCATION.    
      00422  0074 00 4 00544         TSX     DUMP,4        PRINT IT IN THE CURRENT MODE.  
      00423  0020 00 0 00006         TRA     MAIN          AND GO BACK. 
                              *     
      00424 -0500 00 1 00300  LOOK   CAL     CEND+1,1      GET DISPATCH TABLE ENTRY.
      00425  0621 00 0 00461         STA     CTSX          SAVE IT IN THE SUBROUTINE CALL.
      00426  0500 00 0 00730         CLA     BC            GET THE BREAK CHARACTER. 
      00427                          TCR     MAIN          IF CARR. RET., EXIT.     
      00432                          TNB     ILF           IF NOT, IT MUST BE A BLANK.    
      00436  0074 00 4 02472         TSX     FLDEVL,4      EVALUATE THE FIRST FIELD.
      00437 -0600 00 0 00457         STQ     LOC1          SAVE VALUE OF FIRST FIELD.     
      00440                          TCR     GLOOK         IF NOT THERE, SKIP EVALUATING SECOND FIELD.
      00443                          TNB     ILF           COMPLAIN IF IMPROPER FORMAT.   
      00447  0074 00 4 02472         TSX     FLDEVL,4      IF NOT, EVALUATE IT.     
      00450                          TNCR    ILF           COMPLAIN IF TOO MANY ARGUMENTS.
      00454 -0600 00 0 00460  GLOOK  STQ     LOC2          SAVE VALUE OF THE SECOND FIELD.
      00455  0074 00 4 00462         TSX     BLKLK,4       GO LOOK AT THE BLOCK.    
      00456  0020 00 0 00006         TRA     MAIN          GO GET THE NEXT REQUEST. 
                              *     
      00457  0 00000 0 00000  LOC1                         BEGINNING OF THE BLOCK.  
      00460  0 00000 0 00000  LOC2                         END OF THE BLOCK.  
      00461  0074 00 4 02343  CTSX   TSX     ..+SYMPRT,4   OUTPUT MODE SWITCH.
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 14    
                           BLKLK.        PRINT CONTENTS OF BLOCK OF STORAGE.        
                  
      00462  0634 00 1 00537  BLKLK  SXA     BLKXA,1       SAVE THE XR'S.     
      00463  0634 00 2 00540         SXA     BLKXB,2  
      00464  0634 00 4 00541         SXA     BLKXC,4  
      00465  0500 00 0 00460         CLA     LOC2          LOC 1 PASSES, CHECK THE OTHER LIMIT. 
      00466 -0340 00 0 00457         LAS     LOC1          COMPARE IT W/ THE BEGINNING.   
      00467  0761 00 0 00000         NOP                   END .G. BEGINNING, 
      00470  0020 00 0 00473         TRA     FWDLK         END .E. BEGINNING, DIRECTION IS FORWARDS.  
      00471  0774 00 4 00001         AXT     1,4           END .L. BEGINNING, DIRECTION IS BACKWARDS. 
      00472  0020 00 0 00474         TRA     GOLK          GO TO IT.    
                              *     
      00473  0774 00 4 77777  FWDLK  AXT     -1,4          GET INCREMENT FOR FORWARDS.    
      00474 -0634 00 4 00514  GOLK   SXD     BMLK,4        SET UP THE TXI.    
      00475 -0636 00 4 00527         SCD     BNLK,4   
      00476  0535 00 1 00457         LAC     LOC1,1        GET INITIAL LOCATION.    
      00477  0774 00 2 00000  NORPT  AXT     0,2           RESET REPEAT COUNT.
      00500  0636 00 1 00502         SCA     *+2,1         SAVE FOR CALL TO GETLOC  
      00501                          TSS     GETLOC        PICK UP THE LOC'N  
      00502  0 00000 0 00000         PZE     **            ..     
      00503  0602 00 0 00543         SLW     PREV          IT IS THE NEXT PREVIOUS WORD.  
      00504  0756 00 1 00000         PCA     ,1            PUT THIS LOCATION IN THE AC.   
      00505  0074 00 4 00544         TSX     DUMP,4        GO PRINT THIS LOCATION, ITS CONTENTS.
      00506  0756 00 1 00000  LKCMP  PCA     ,1            GET THIS LOCATION. 
      00507                          TEQ     XIT,LOC2      IF WE'VE REACHED THE END, WE ARE DONE.     
      00512  0520 00 0 02133         ZET     INRUPT        WAS THERE AN INTERRUPT.Q 
      00513  0020 00 0 00530         TRA     XIT           YES, EXIT.   
      00514  1 00000 1 00515  BMLK   TXI     *+1,1,..      BUMP POINTER TO THE NEXT LOCATION.   
      00515  0636 00 1 00517         SCA     *+2,1         SAVE FOR CALL TO GETLOC  
      00516                          TSS     GETLOC        PICK UP THE LOC'N  
      00517  0 00000 0 00000         PZE     **            ..     
      00520 -0340 00 0 00543         LAS     PREV          IS IT THE SAME AS THE LAST WORD.Q    
      00521  0020 00 0 00523         TRA     *+2           NO, PROCEED. 
      00522  1 00001 2 00506         TXI     LKCMP,2,1     YES, COUNT REPEAT AND GET NEXT WORD. 
      00523 -3 00000 2 00477         TXL     NORPT,2,0     DIFFERENT, WERE THERE REPEATS.Q
      00524 -3 00001 2 00527         TXL     BNLK,2,1      YES, BUT DON'T COMMENT IF TWO. 
      00525                          TYPE    2,(REPEAT.*),RPTC YES, SAY SO.   
      00527  1 00000 1 00477  BNLK   TXI     NORPT,1,..    GO PRINT THE LAST WORD OF THE GROUP. 
                              *     
      00530  0636 00 1 00202  XIT    SCA     LOC,1         UPDATE CURRENT LOCATION. 
      00531 -3 00000 2 00537         TXL     BLKXA,2,0     END OF BLOCK, ARE WE IN A REPEAT.Q   
      00532 -3 00001 2 00535         TXL     XPCA,2,1      YES, BUT DON'T TYPE REPEAT IF ONLY 1.
      00533                          TYPE    2,(REPEAT.*),RPTC YES, SAY SO.   
      00535  0756 00 1 00000  XPCA   PCA     ,1            TYPE THE LAST WORD.
      00536  0074 00 4 00544         TSX     DUMP,4   
      00537  0774 00 1 00000  BLKXA  AXT     ..,1          RESTORE THE XR'S.  
      00540  0774 00 2 00000  BLKXB  AXT     ..,2     
      00541  0774 00 4 00000  BLKXC  AXT     ..,4     
      00542  0020 00 4 00001         TRA     1,4           EXIT.  
                              *     
      00543  0 00000 0 00000  PREV                         THE 'PREVIOUS' WORD.     
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 15    
                           DUMP.         TYPE CONTENTS OF SINGLE LOCATION.          
                  
      00544  0634 00 4 00557  DUMP   SXA     DMPX,4        SAVE RETURN. 
      00545 -0320 00 0 11332         ANA     =O77777       GET RID OF GARBAGE.
      00546  0621 00 0 00554         STA     DMPL          SAVE POINTER TO LOCATION.
      00547  0074 00 4 02313         TSX     FLDPRT,4      PRINT THE LOCATION FIELD.
      00550                          TYO     =H00000/      TYPE THE DELIMITERS.     
      00552  0074 00 4 02177         TSX     TAB,4         TABULATE.    
      00553                          TSS     GETLOC        GET WORD TO BE DUMPED FROM A-CORE.   
      00554  0 00000 0 00000  DMPL   PZE     ** 
      00555  0522 00 0 00461         XEC     CTSX          CONVERT IT AND TYPE IT.  
      00556  0074 00 4 02175         TSX     CR,4          CARRIAGE RETURN.   
      00557  0774 00 4 00000  DMPX   AXT     ..,4          RESTORE RETURN.    
      00560  0020 00 4 00001         TRA     1,4           EXIT.  
                              *     
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 16    
                           L             FIND LOAD ADDRESS OF SUBPROGRAM.           
                  
      00561  0500 00 0 00730  YANK   CLA     BC            GET BREAK CHARACTER.     
      00562                          TNB     ILF
      00566  0074 00 4 02427         TSX     BCSCH,4       ASSEMBLE THE SYMBOL.     
      00567                          TNCR    ILF           CHECK THAT THAT IS ALL.  
      00573 -0130 00 0 00000         XCL                   MOVE IT TO AC.     
      00574  0074 00 4 02546         TSX     LADJ,4        LEFT ADJUST IT.    
      00575  0074 00 4 00737         TSX     ORGFND,4      FIND THE ORIGIN OF THE SUBPROGRAM.   
      00576  0602 00 0 00732         SLW     PGMORG   
      00577  0602 00 0 00202         SLW     LOC           SET CURRENT LOC. TO ORIGIN.    
      00600  0020 00 0 00006         TRA     MAIN     
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 17    
                           T             READ OR KILL SYMBOL TABLE.                 
                  
      00601  0500 00 0 00730  TABLE  CLA     BC 
      00602                          TCR     KILL          NO ARG., KILL THE TABLE. 
      00605                          TNB     ILF           MAKE SURE WE HAVE THE PROPER FORMAT. 
      00611  0074 00 4 02427         TSX     BCSCH,4       ASSEMBLE THE SYMBOL.     
      00612                          TNCR    ILF           THIS MUST BE THE END OF THE LINE.    
      00616 -0130 00 0 00000         XCL                   MOVE TO AC.  
      00617  0602 00 0 00665         SLW     NAME     
      00620  0560 00 0 00732         LDQ     PGMORG        PICK UP RELOCATION CONSTANT.   
      00621  0074 00 4 02570         TSX     TABRD,4       GO READ AND RELOCATE THE SYMBOLS.    
      00622  0020 00 0 00006         TRA     MAIN     
                              *     
      00623  0074 00 4 02676  KILL   TSX     KILTAB,4      CLEAR THE SYMBOL TABLE.  
      00624  0020 00 0 00006         TRA     MAIN          GET THE NEXT REQUEST.    
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 18    
                           W             FIND ORIGIN AND RELOCATE SYMBOL TABLE.     
                  
      00625  0500 00 0 00730  AUTO   CLA     BC            GET BREAK CHARACTER.     
      00626                          TNB     ILF           IF NOT BLANK, COMPLAIN.  
      00632  0074 00 4 02427         TSX     BCSCH,4       GET THE SYMBOL.    
      00633  0602 00 0 00730         SLW     BC 
      00634 -0130 00 0 00000         XCL  
      00635  0602 00 0 00665         SLW     NAME     
      00636  0074 00 4 02546         TSX     LADJ,4        ADJUST IT TO THE LEFT.   
      00637  0074 00 4 00737         TSX     ORGFND,4      FIND THE ORIGIN OF THE PROGRAM.
      00640  0602 00 0 00732         SLW     PGMORG        SAVE RELOCATION CONSTANT FOR LATER.  
      00641  0602 00 0 00202         SLW     LOC           SET CURRENT LOC. TO ORIGIN.    
      00642  0560 00 0 00665         LDQ     NAME          GET NAME OF THE FILE.    
      00643  0500 00 0 00730         CLA     BC 
      00644                          TCR     WORK     
      00647                          TNB     ILF           NEXT ARGUMENT MUST BE SEPARATED BY BLANK.  
      00653  0074 00 4 02427         TSX     BCSCH,4       ASSEMBLE THE NAME. 
      00654                          TNCR    ILF           CHECK FOR END OF REQUEST.
      00660 -0600 00 0 00665  WORK   STQ     NAME     
      00661 -0130 00 0 00000         XCL                   MOVE FILE NAME TO AC.    
      00662  0560 00 0 00732         LDQ     PGMORG        NOW IS THE TIME.. GET RELOCATION CON.
      00663  0074 00 4 02570         TSX     TABRD,4       READ AND RELOCATE THE SYMBOL TABLE.  
      00664  0020 00 0 00006         TRA     MAIN     
                              *     
      00665  0 00000 0 00000  NAME                         FILE OR ENTRY NAME.
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 19    
                           E             DEFINE SYMBOL.                             
                  
      00666                   FULL   TYPE    6,(TABLE FULL, DEFINITION IGNORED.*)   
      00670  0020 00 0 00726         TRA     OOPS          GO PROCESS NEXT REQUEST. 
                              *     
      00671  0500 00 0 00730  DEF    CLA     BC 
      00672                          TNB     ILF
      00676  0074 00 4 02472         TSX     FLDEVL,4      EVALUATE THE FIRST ARGUMENT.   
      00677                          TNB     ILF           CHECK FOR SYMBOL FOLLOWING.    
      00703 -0600 00 0 00202         STQ     LOC           SAVE SYMBOL VALUE. 
      00704  0074 00 4 02427         TSX     BCSCH,4       GET THE SYMBOL.    
      00705                          TNCR    ILF           GRIPE IF NOT END OF LINE.
      00711 -0130 00 0 00000         XCL  
      00712  0074 00 4 02546         TSX     LADJ,4        ADJUST IT TO THE LEFT.   
      00713  0560 00 0 00202         LDQ     LOC           PICK UP VALUE.     
      00714  0074 00 4 03002         TSX     DEFINE,4      ENTER IT IN THE SYMBOL TABLE.  
      00715  0020 00 0 00666         TRA     FULL          THE TABLE IS FULL. 
      00716  0020 00 0 00006         TRA     MAIN          EXIT.  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 20    
                           UNDEF.        COMMENT ON UNDEFINED SYMBOL.               
                  
      00717  0602 00 0 00727  UNDEF  SLW     USYM          SAVE THE UNDEFINED SYMBOL.     
      00720  0074 00 4 02201         TSX     QUOTE,4       TYPE THE LEFT QUOTES.    
      00721                          NAMOUT  USYM          TYPE THE SYMBOL.   
      00723  0074 00 4 02201         TSX     QUOTE,4       TYPE THE RIGHT QUOTES.   
      00724                          TYPE    3,( IS NOT DEFINED.*)
      00726  0020 00 0 00006  OOPS   TRA     MAIN     
                              *     
      00727  0 00000 0 00000  USYM                         STORAGE FOR UNDEFINED SYMBOL.  
      00730  0 00000 0 00000  BC    
      00731  0 00000 0 00000  WORD                         WORD BEING ASSEMBLED.    
      00732  0 00000 0 00000  PGMORG                       ORIGIN OF CURRENT SUBPROGRAM.  
      00733  0 00000 0 00000  OP                           OP. CODE OF WORD.  
      00734  0 00000 0 00000  ADD                          ADDRESS OF WORD.   
      00735  0 00000 0 00000  TAG                          TAG OF WORD. 
      00736  0 00000 0 00000  DEC                          DECREMENT OF WORD. 
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 21    
                           ORGFND.       ORIGIN FINDING ROUTINE.                    
                  
                              *      ENTER WITH NAME OF PROGRAM ENTRY LEFT ADJUSTED IN AC (LOGICAL).  
                              *      SEARCHES LOADING TABLE FOR ORIGIN.  WHEN FOUND, PRINTS IT AND    
                              *      RETURNS WITH ORIGIN IN AC ADDRESS.  IF IT CANNOT BE FOUND IT     
                              *      TYPES COMMENT AND TRANSFERS TO OOPS.     
      00737  0634 00 4 00766  ORGFND SXA     OFXC,4   
      00740 -0340 00 0 11375         LAS     =H(MAIN) 
      00741  0020 00 0 00743         TRA     *+2
      00742 -0754 00 0 00000         ZAC                   WAS (MAIN), SET TO 0.    
      00743  0602 00 0 01002         SLW     ONAME         SAVE ORIGIN NAME   
      00744  0074 00 4 00000         TSX     $ACORE,4      GO FIND ORIGIN     
      00745  0 00000 0 01002         PZE     ONAME         ..     
      00746 -0320 00 0 11332         ANA     =O77777       MASK ADDRESS 
      00747  0621 00 0 01003         STA     PORG          SAVE ORIGIN  
      00750  0100 00 0 00771         TZE     NOTFND        ZERO, IF NOT FOUND 
      00751  0074 00 4 02201         TSX     QUOTE,4       TYPE THE LEFT QUOTES.    
      00752  0500 00 0 01002         CLA     ONAME         GET THE ENTRY NAME.
      00753 -0100 00 0 00755         TNZ     *+2           UNLESS IT IS ZERO. 
      00754  0500 00 0 11375         CLA     =H(MAIN)      THEN REPLACE IT WITH TRADITIONAL NAME.     
      00755  0074 00 4 02253         TSX     NAMOUT,4      TYPE IT.     
      00756  0074 00 4 02201         TSX     QUOTE,4       FOLLOWED BY THE RIGHT QUOTES.  
      00757                          TYPA    3,( IS LOADED AT *) MIDDLE OF COMMENT. 
      00761                          OCTOUT  PORG          TYPE THE ORIGIN.   
      00763                          TYO     =H00000.      PUNCTUATE THE SENTENCE.  
      00765  0074 00 4 02175         TSX     CR,4          RETURN THE CARRIAGE.     
      00766  0774 00 4 00000  OFXC   AXT     ..,4     
      00767 -0500 00 0 01003         CAL     PORG          GET THE ORIGIN AGAIN.    
      00770  0020 00 4 00001         TRA     1,4           HAPPY RETURN.
                              *     
      00771  0074 00 4 02201  NOTFND TSX     QUOTE,4       NOT FOUND, TYPE QUOTES.  
      00772  0500 00 0 01002         CLA     ONAME         GET THE NAME.
      00773 -0100 00 0 00775         TNZ     *+2           IF ZERO,     
      00774  0500 00 0 11375         CLA     =H(MAIN)      REPLACE IT WITH TRADITIONAL SUBSTITUTE.    
      00775  0074 00 4 02253         TSX     NAMOUT,4      TYPE IT.     
      00776  0074 00 4 02201         TSX     QUOTE,4       TYPE THE RIGHT QUOTES.   
      00777                          TYPE    3,( IS NOT IN CORE.*) TYPE THE REST OF THE COMMENT.
      01001  0020 00 0 00726         TRA     OOPS          UNHAPPY, GO GRIPE. 
                              *     
      01002  0 00000 0 00000  ONAME                        STORAGE FOR THE ENTRY NAME.    
      01003  0 00000 0 00000  PORG                         PROGRAM ORIGIN, TEMP.    
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 22    
                                         INTEGER (BASE 10 AND 8) INPUT CONVERSION.  
                  
                              *              OCTIN.        OCTAL TO BINARY CONVERSION.    
      01004  0600 00 0 01077  OCTIN  CLEAR   SFT           FULL WORD, RESET SHIFT FLAG.   
      01005  0560 00 0 11305         LDQ     =O10          BASE IS 8.   
      01006  0020 00 0 01014         TRA     IJIN          GO JOIN INTIN AND JNTIN. 
                              *     
                              *              DECIMAL TO BINARY CONVERSION, INPUT.   
      01007  0600 00 0 01077  INTIN  CLEAR   SFT           FULL WORD, DON'T SHIFT.  
      01010  0560 00 0 11307         LDQ     =10           BASE IS 10.  
      01011  0020 00 0 01014         TRA     IJIN          GO TO COMMON SECTION.    
                              *     
      01012 -0625 00 0 01077  JNTIN  SETF    SFT           DECREMENT INTEGER, SHIFT AFTER CONVERSION. 
      01013  0560 00 0 11307         LDQ     =10           BASE IS 10.  
      01014 -0600 00 0 01103  IJIN   STQ     BASE          SAVE THE BASE.     
      01015  0634 00 4 01067         SXA     XR,4          SAVE XR 4.   
      01016  0600 00 0 01100         STZ     NUM
      01017  0600 00 0 01102         CLEAR   SGN
      01020  0074 00 4 01336         TSX     TYI,4         GET THE NEXT CHARACTER.  
      01021                          TEQ     IDIG1,=H00000+ IGNORE PLUS SIGN. 
      01024                          TEQ     IMIN,=H00000- TAKE CARE OF MINUS SIGN. 
      01027  0340 00 0 01103         CAS     BASE          IS IT A DIGIT.Q    
      01030  0020 00 0 00203         TRA     ILF           NO, COMPLAIN.
      01031  0761 00 0 00000         NOP                   YES,   
      01032  0020 00 0 01040         TRA     ICNV          GO INTO CONVERSION LOOP. 
                              *     
      01033 -0625 00 0 01102  IMIN   SETF    SGN           MINUS SIGN, SET FLAG.    
      01034  0074 00 4 01336  IDIG1  TSX     TYI,4         GET THE NEXT CHARACTER.  
      01035  0340 00 0 01103         CAS     BASE          IS IT A DIGIT.Q    
      01036  0020 00 0 00203         TRA     ILF           NO, COMPLAIN.
      01037  0761 00 0 00000         NOP                   YES,   
      01040  0601 00 0 01101  ICNV   STO     DGT           SAVE IT.     
      01041  0140 00 0 01041         TOV     *             TURN OFF OVERFLOW LIGHT. 
      01042  0560 00 0 01100         LDQ     NUM           GET THE PREVIOUS NUMBER. 
      01043  0200 00 0 01103         MPY     BASE          INCREASE IT BY THE NEW PLACE.  
      01044  0763 00 0 00043         LLS     35            MOVE RESULT TO AC. 
      01045  0400 00 0 01101         ADD     DGT           ADD IN THE NEW DIGIT.    
      01046  0601 00 0 01100         STO     NUM           SAVE THE RESULT.   
      01047  0140 00 0 01071         TOV     OVDC          IF OVERFLOW, COMPLAIN.   
      01050  0074 00 4 01336         TSX     TYI,4         GET THE NEXT CHARACTER.  
      01051  0340 00 0 01103         CAS     BASE          IS IT A DIGIT.     
      01052  0020 00 0 01055         TRA     IFMT          NO, GO CLEAN UP.   
      01053  0761 00 0 00000         NOP                   YES,   
      01054  0020 00 0 01040         TRA     ICNV          RETURN TO CONVERSION LOOP.     
                              *     
      01055  0601 00 0 01101  IFMT   STO     DGT           SAVE THE TERMINATIGN CHARACTER.
      01056  0500 00 0 01100         CLA     NUM           GET THE NUMBER.    
      01057  0520 00 0 01102         ZET     SGN           SHOULD IT BE NEGATIVE.Q  
      01060 -0760 00 0 00003         SSM                   YES, MAKE IT SO.   
      01061  0140 00 0 01061         TOV     *             TURN OFF OVERFLOW LIGHT. 
      01062  0520 00 0 01077         ZET     SFT           SHOULD WE SHIFT IT.Q     
      01063  0767 00 0 00022         ALS     18            YES, DO SO.  
      01064  0140 00 0 01074         TOV     OVFC          IF TOO BIG, COMPLAIN.    
      01065  0131 00 0 00000         XCA                   MOVE THE RESULT TO THE MQ.     
      01066  0500 00 0 01101         CLA     DGT           GET THE TERMINAL CHARACTER.    
      01067  0774 00 4 00000  XR     AXT     ..,4     
      01070  0020 00 4 00001         TRA     1,4
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 23    
                                         INTEGER (BASE 10 AND 8) INPUT CONVERSION.  
                  
                              *     
      01071                   OVDC   TYPE    5,(OVERFLOW DURING CONVERSION.*) 
      01073  0020 00 0 00726         TRA     OOPS     
                              *     
      01074                   OVFC   TYPE    5,(OVERFLOW DURING SHIFTING.*)   
      01076  0020 00 0 00726         TRA     OOPS     
                              *     
      01077  0 00000 0 00000  SFT   
      01100  0 00000 0 00000  NUM                          ACCUMULATING NUMBER.     
      01101  0 00000 0 00000  DGT                          CURRENT CHARACTER. 
      01102  0 00000 0 00000  SGN                          FLAG.. IS NUMBER NEGATIVE.Q    
      01103  0 00000 0 00000  BASE                         NUMBER CONVERSION BASE.  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 24    
                           FLOIN.        FLOATING POINT DECIMAL INPUT CONVERSION.   
                  
      01104  0634 00 4 01243  FLOIN  SXA     FXRC,4        SAVE RETURN. 
      01105  0634 00 2 01244         SXA     FXRB,2   
      01106  0600 00 0 01333         STZ     MAG           CLEAR THE MAGNITUDE.     
      01107  0600 00 0 01334         CLEAR   MSG           SIGN OF MAGNITUDE. 
      01110  0774 00 2 00000         AXT     0,2
      01111  0560 00 0 00010         LDQ     8             PICK UP AND. 
      01112 -0600 00 0 01335         STQ     FPT           SAVE FPT LOCATION. 
      01113  0560 00 0 00000         LDQ     0             ALSO SAVE THE F.P. ERROR CODE LOC.   
      01114 -0600 00 0 01332         STQ     FPZ
      01115  0560 00 0 01331         LDQ     TTR           INSERT IN IT A TRANSFER BACK HERE.   
      01116 -0600 00 0 00010         STQ     8  
      01117  0074 00 4 01336         TSX     TYI,4         GET THE NEXT CHARACTER.  
      01120                          TEQ     FDIG1,=H00000+ IGNORE PLUS SIGN. 
      01123                          TEQ     MMI,=H00000-  TAKE CARE OF MINUS SIGN. 
      01126                   FRET1  TEQ     FRAC1,=H00000. GO TO FRACTION SECTION, IF NECESSARY.     
      01131  0340 00 0 11306         CAS     =9            IS IT A DIGIT.Q    
      01132  0020 00 0 01255         TRA     FILF          NO, COMPLAIN.
      01133  0761 00 0 00000         NOP                   YES,   
      01134  0020 00 0 01140         TRA     FCNV          GO INTO CONVERSION LOOP. 
                              *     
      01135 -0625 00 0 01334  MMI    SETF    MSG           SET NEGATIVE FLAG. 
      01136  0074 00 4 01336  FDIG1  TSX     TYI,4         GET THE NEXT CHARACTER.  
      01137  0020 00 0 01126         TRA     FRET1         GO CHECK IT OUT.   
                              *     
      01140 -0501 00 0 11342  FCNV   ORA     =O233000000000 FLOAT THE DIGIT.  
      01141  0300 00 0 11342         FAD     =O233000000000 ..    
      01142  0601 00 0 01101         STO     DGT           SAVE IT.     
      01143  0560 00 0 01333         LDQ     MAG           INCREASE MAGNITUDE FOR NEW PLACE.    
      01144  0260 00 0 11337         FMP     =10.          ..     
      01145  0300 00 0 01101         FAD     DGT           ADD IN THE NEW DIGIT.    
      01146  0601 00 0 01333         STO     MAG           SAVE THE RESULT.   
      01147  0074 00 4 01336         TSX     TYI,4         GET THE NEXT CHARACTER.  
      01150                          TEQ     FRAC2,=H00000. GO TO FRACTION SECTION, IF PERIOD.  
      01153                          TEQ     E,=H00000E    GO TO EXPONENT, IF E.    
      01156  0340 00 0 11306         CAS     =9            IS IT A DIGIT.Q    
      01157  0020 00 0 01231         TRA     FFMT          NO, CLEAN UP.
      01160  0761 00 0 00000         NOP                   YES,   
      01161  0020 00 0 01140         TRA     FCNV          CONTINUE CONVERSION LOOP.
                              *     
      01162  0074 00 4 01336  FRAC1  TSX     TYI,4         GET THE NEXT CHARACTER.  
      01163  0340 00 0 11306         CAS     =9            IS IT A DIGIT.Q    
      01164  0020 00 0 01255         TRA     FILF          NO, COMPLAIN.
      01165  0761 00 0 00000         NOP                   YES,   
      01166  1 00001 2 01167         TXI     *+1,2,1       BUMP EXPONENT BY ONE.    
      01167  3 00046 2 01246  FRCNV  TXH     ERR,2,38      COMPLAIN IF TOO BIG.     
      01170 -0501 00 0 11342         ORA     =O233000000000 FLOAT THE DIGIT.  
      01171  0300 00 0 11342         FAD     =O233000000000 ..    
      01172  0241 00 2 01330         FDP     TEN,2         COMPUTE ITS APPARENT VALUE.    
      01173  0131 00 0 00000         XCA                   MOVE THE RESULT TO THE AC.     
      01174  0300 00 0 01333         FAD     MAG           ADD IT INTO THE NUMBER.  
      01175  0601 00 0 01333         STO     MAG           SAVE THE RESULT.   
      01176  0074 00 4 01336  FRAC2  TSX     TYI,4         GET THE NEXT CHARACTER.  
      01177                          TEQ     E,=H00000E    GO TO EXPONENT IF E.     
      01202  0340 00 0 11306         CAS     =9            IS IT A DIGIT.Q    
      01203  0020 00 0 01231         TRA     FFMT          NO, CLEAN UP.
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 25    
                           FLOIN.        FLOATING POINT DECIMAL INPUT CONVERSION.   
                  
      01204  0761 00 0 00000         NOP                   YES,   
      01205  1 00001 2 01167         TXI     FRCNV,2,1     BUMP POWER AND CONTINUE LOOP.  
                              *     
      01206  0560 00 0 01335  E      LDQ     FPT           RESTORE USER'S 0 AND 8.  
      01207 -0600 00 0 00010         STQ     8             ..     
      01210  0560 00 0 01332         LDQ     FPZ           ..     
      01211 -0600 00 0 00000         STQ     0             ..     
      01212  0074 00 4 01007         TSX     INTIN,4       GET THE EXPONENT OF TEN. 
      01213  0601 00 0 01101         STO     DGT           SAVE THE TERMINAL CHARACTER.   
      01214  0131 00 0 00000         XCA                   MOVE THE NUMBER TO THE AC.     
      01215  0734 00 2 00000         PAX     ,2            THENCE TO XR.
      01216  0560 00 0 01331         LDQ     TTR           RESTORE OUR FPT SETTING. 
      01217 -0600 00 0 00010         STQ     8             ..     
      01220  3 00046 2 01246         TXH     ERR,2,38      IS IT REASONABLE.Q 
      01221 -0120 00 0 01225         TMI     FDIV          YES, IF NEGATIVE, WE MUST DIVIDE.    
      01222  0560 00 0 01333         LDQ     MAG           POSITIVE,    
      01223  0260 00 2 01330         FMP     TEN,2         MULTIPLY.    
      01224  0020 00 0 01233         TRA     FASSGN        GO ATTACH THE SIGN.
                              *     
      01225  0500 00 0 01333  FDIV   CLA     MAG           NEGATIVE,    
      01226  0241 00 2 01330         FDP     TEN,2         DIVIDE BY POWER OF TEN.  
      01227  0131 00 0 00000         XCA                   MOVE RESULT TO AC. 
      01230  0020 00 0 01233         TRA     FASSGN        ATTACH THE SIGN.   
                              *     
      01231  0601 00 0 01101  FFMT   STO     DGT           SAVE THE TERMINAL CHARACTER.   
      01232  0500 00 0 01333         CLA     MAG           GET THE NUMBER.    
      01233  0520 00 0 01334  FASSGN ZET     MSG           SHOULD IT BE NEGATIVE.Q  
      01234 -0760 00 0 00003         SSM                   YES, MAKE IT SO.   
      01235  0131 00 0 00000         XCA                   MOVE THE RESULT TO THE MQ.     
      01236  0500 00 0 01335         CLA     FPT           RESTORE LOCATION 8.
      01237  0601 00 0 00010         STO     8             ..     
      01240  0500 00 0 01332         CLA     FPZ           AND 0. 
      01241  0601 00 0 00000         STO     0             ..     
      01242  0500 00 0 01101         CLA     DGT           GET THE TERMINAL CHARACTER.    
      01243  0774 00 4 00000  FXRC   AXT     ..,4          RESTORE THE INDEX REGISTERS.   
      01244  0774 00 2 00000  FXRB   AXT     ..,2          ..     
      01245  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
      01246                   ERR    TYPE    5,(F.P. NUMBER OUT OF RANGE.*)   
      01250  0500 00 0 01335         CLA     FPT           RESTORE LOCATIONS 0 AND 8.     
      01251  0601 00 0 00010         STO     8             ..     
      01252  0500 00 0 01332         CLA     FPZ           ..     
      01253  0601 00 0 00000         STO     0             ..     
      01254  0020 00 0 00726         TRA     OOPS          DO NOT RETURN TO CALLER. 
                              *     
      01255  0560 00 0 01332  FILF   LDQ     FPZ           RESTORE FP TRAP LOCATIONS.     
      01256 -0600 00 0 00000         STQ     0             ..     
      01257  0560 00 0 01335         LDQ     FPT           ..     
      01260 -0600 00 0 00010         STQ     8             ..     
      01261  0020 00 0 00203         TRA     ILF           GO GRIPE ABOUT CHARACTER.
                              *     
      01262 +377454732313            DEC     1E38,1E37,1E36,1E35,1E34,1E33,1E32,1E31,1E30 
      01273 +341503074077            DEC     1E29,1E28,1E27,1E26,1E25,1E24,1E23,1E22,1E21,1E20  
      01305 +300425434430            DEC     1E19,1E18,1E17,1E16,1E15,1E14,1E13,1E12,1E11,1E10  
      01317 +236734654500            DEC     1E9,1E8,1E7,1E6,1E5,1E4,1E3,1E2,1E1    
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 26    
                           FLOIN.        FLOATING POINT DECIMAL INPUT CONVERSION.   
                  
      01330 +201400000000     TEN    DEC     1.            TABLE OF POWERS OF TEN.  
                              *     
      01331  0021 00 0 01246  TTR    TTR     ERR           INSTRUCTION TO BE STORED IN LOC 8.   
      01332  0 00000 0 00000  FPZ                          STORAGE FOR LOCATION 0.  
      01333  0 00000 0 00000  MAG                          MAGNITUDE OF NUMBER.     
      01334  0 00000 0 00000  MSG                          SIGN OF MAGNITUDE. 
      01335  0 00000 0 00000  FPT                          STORAGE FOR CONTENTS OF LOCATION 8.  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 27    
                           TYI.          SINGLE CHARACTER INPUT PACKAGE.            
                  
      01336  0634 00 4 01371  TYI    SXA     TYIX,4        SAVE RETURN INDEX. 
      01337  0774 00 4 00000  TYICP  AXT     ..,4          REMEMBER HOW MANY CHARACTERS IN THIS WORD. 
      01340 -0520 00 0 01426         NZT     CRFLG         SKIP TEST IF BUFFER EMPTY.     
      01341  2 00006 4 01345         TIX     TYIMIW,4,6    COUNT THIS CHARACTER, IF ANY.  
      01342  0074 00 4 01407         TSX     GWORD,4       GET THE NEXT WORD. 
      01343  0601 00 0 01427         STO     TYIB          SAVE IT.     
      01344  0774 00 4 00044         AXT     36,4          RESET CHARACTER COUNT.   
      01345  0634 00 4 01337  TYIMIW SXA     TYICP,4       SAVE THE NEW CHARACTER COUNT.  
      01346  0560 00 0 01427         LDQ     TYIB          GET THE CURRENT WORD.    
      01347 -0763 00 4 00052         LGL     42,4          SHIFT IN THE DESIRED CHARACTER.
      01350 -0320 00 0 11326         ANA     =O77          MASK OFF THE CHARACTER.  
      01351  0340 00 0 11320         CAS     =O55          IS IT A CARRIAGE RETURN.Q
      01352  0020 00 0 01354         TRA     *+2           NO, PROCEED. 
      01353 -0625 00 0 01426         SETF    CRFLG         YES, SIGNAL BUFFER EMPTY.
      01354  0340 00 0 11311         CAS     =H00000'      IS IT AN APOSTROPHE.Q    
      01355  0020 00 0 01357         TRA     *+2           NO,    
      01356  0500 00 0 11320         CLA     =O55          YES, SUBSTITUTE A CARR. RET.   
      01357 -0340 00 0 11310         LAS     =H00000=      IF IT IS A = (CONCATENATION CHAR.).  
      01360  0020 00 0 01362         TRA     *+2
      01361  0500 00 0 11320         CLA     =O55          MAKE IT A CARR. RET.     
      01362 -0340 00 0 11324         LAS     =O72          IF IT IS A TABULATE,     
      01363  0020 00 0 01365         TRA     *+2
      01364 -0500 00 0 11321         CAL     =O60          MAKE IT A BLANK.   
      01365                          TBL     CHPRE         IF BLANK, CHECK PREVIOUS CHARACTER.  
      01370  0602 00 0 01425  OUT    SLW     PREVCH        OK, SAVE AS PREVIOUS CHAR.     
      01371  0774 00 4 00000  TYIX   AXT     ..,4          RESTORE RETURN INDEX.    
      01372  0020 00 4 00001         TRA     1,4
                              *     
      01373                   CHPRE  TEQ     TYICP,PREVCH  IF LAST CHARACTER WAS BLANK, TRY AGAIN.    
      01376  0020 00 0 01370         TRA     OUT           OTHERWISE EXIT W/ THIS BLANK.  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 28    
                           SKIPCR.       FIND BEGINNING OF NEXT REQUEST.            
                  
      01377  0634 00 4 01405  SKIPCR SXA     SKX,4         SAVE RETURN. 
      01400 -0500 00 0 01425         CAL     PREVCH        LAST CHARACTER.    
      01401  0020 00 0 01403         TRA     *+2
      01402  0074 00 4 01336         TSX     TYI,4         GET NEXT CHAR.     
      01403  0322 00 0 11320         ERA     =O55          IS IT A CARR. RET.Q
      01404 -0100 00 0 01402         TNZ     *-2           NO, TRY AGAIN.     
      01405  0774 00 4 00000  SKX    AXT     ..,4          YES, EXIT.   
      01406  0020 00 4 00001         TRA     1,4
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 29    
                           GWORD.        GET NEXT WORD FROM INPUT LINE.             
                  
      01407  0634 00 4 01423  GWORD  SXA     GWX,4         SAVE RETURN INDEX. 
      01410  0535 00 4 01430         LAC     GWBUF,4       REMEMBER CURRENT WORD.   
      01411  1 77777 4 01412         TXI     *+1,4,-1      BUMP POINTER TO NEXT WORD.     
      01412 -0520 00 0 01426         NZT     CRFLG         SKIP TEST IF BUFFER EMPTY.     
      01413  3 77761 4 01421         TXH     GWMIB,4,-15   IS THERE ANY MORE IN BUFFER.Q  
      01414  0074 00 4 02175         TSX     CR,4          NO, RETURN THE CARRIAGE. 
      01415  0074 00 4 00000  TYICW  TSX     ..,4          READ A NEW BUFFER FULL.  
      01416  3 00016 0 01431         PAR     GWBUF+1,,14   ..     
      01417  0600 00 0 01426         CLEAR   CRFLG         INDICATE STUFF IN BUFFER.
      01420 -0774 00 4 00001         AXC     1,4           RESET COUNT OF WORDS.    
      01421  0636 00 4 01430  GWMIB  SCA     GWBUF,4       SAVE POINTER FOR NEXT TIME.    
      01422  0500 00 4 01430         CLA     GWBUF,4       GET THE CURRENT WORD.    
      01423  0774 00 4 00000  GWX    AXT     ..,4          RESTORE RETURN INDEX.    
      01424  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
      01425 +000000000055     PREVCH OCT     55            AT BEGINNING, WE ARE SET UP OK.
      01426  0 00000 0 01426  CRFLG          *             FIRST TIME, WE HAVE NO LINE IN BUFFER.     
      01427  0 00000 0 00000  TYIB                         CURRENT INPUT WORD.
      01430  0 00000 0 00000  GWBUF                        INPUT LINE BUFFER. 
      01431                          BSS     14            ..     
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 30    
                           DIFDMP.       VERIFY OR DIFFERENTIAL DUMP.               
                  
                              *      COMPARE RELOCATABLE BINARY CARDS IN FILE NAME (IN LOGICAL AC)    
                              *      BSS WITH PROGRAM WHOSE ORIGIN IS GIVEN IN MQ.  PRINT LOCATIONS   
                              *      AND THEIR CONTENTS WHICH DISAGREE. 
      01447  0634 00 4 01673  DIFDMP SXA     VXC,4         SAVE THE XR'S.     
      01450  0634 00 2 01674         SXA     VXB,2    
      01451  0634 00 1 01675         SXA     VXA,1    
      01452 -0600 00 0 01003         STQ     PORG          ENTER W/ PROGRAM NAME IN THE AC.,    
      01453  0602 00 0 01704         SLW     FILE          PROGRAM ORIGIN IN MQ.    
      01454  0600 00 0 01702         CLEAR   CELL1         INITIALIZE PROGRAM CARD FLAG.  
      01455                          OPEN    (=HR,FILE,((=H   BSS)),=-0,=-0,DERR) OPEN THE FILE.
      01464                          BUFFER  (FILE,((=H   BSS)),(BUF1,,BUFLTH),DERR) ..   
      01471                   CARDRD RDWAIT  (FILE,((=H   BSS)),=0,(CARD,,28),QUIT,=-0,DERR) GET CARD.
      01501  0500 00 0 01514         CLA     CARD     
      01502  0120 00 0 01550         TPL     DATA          IF SIGN=1, WE HAVE PROGRAM CARD.     
      01503  0520 00 0 01702         ZET     CELL1         IS THIS FIRST PROGRAM CARD.Q   
      01504  0020 00 0 01471         TRA     CARDRD        NO, READ ANOTHER.  
      01505 -0625 00 0 01702         SETF    CELL1         YES, GET PROGRAM BREAK.  
      01506  0534 00 4 01516         LXA     CARD+2,4      GET PROGRAM BREAK. 
      01507  1 77777 4 01510         TXI     *+1,4,-1      DECREASE IT TO GET LAST LOCATION USED.     
      01510 -0634 00 4 01654         SXD     RELSIZ,4      SET UP RELOCATION SUBROUTINE.  
      01511  0534 00 4 01003         LXA     PORG,4        GET PROGRAM ORIGIN.
      01512 -0634 00 4 01656         SXD     RELPRG,4      SET UP RELOCATION SUBROUTINE.  
      01513  0020 00 0 01471         TRA     CARDRD   
                              *     
      01514                   CARD   BSS     28 
                              *     
      01550  0500 00 0 01514  DATA   CLA     CARD     
      01551  0400 00 0 01003         ADD     PORG          RELOCATE THE 'LOAD ADDRESS'.   
      01552  0600 00 0 00202         STZ     LOC
      01553  0621 00 0 00202         STA     LOC
      01554  0621 00 0 01605         STA     CHECK+1       SAVE FOR GETLOC    
      01555  0621 00 0 01622         STA     CHKA          ..     
      01556 -0320 00 0 11335         ANA     =O200077000000 
      01557  0771 00 0 00022         ARS     18 
      01560  0600 00 0 01703         STZ     COUNT    
      01561  0621 00 0 01703         STA     COUNT         NUMBER OF PERTINENT WORDS ON CARD.   
      01562  0767 00 0 00023         ALS     19 
      01563 -0760 00 0 00001         PBT  
      01564  0020 00 0 01677         TRA     NONREL        NON-RELOCATABLE CARD.    
      01565 -0774 00 1 01520         AXC     CARD+4,1 
      01566  0500 00 1 00000  RETURN CLA     0,1           PICK UP WORD.
      01567  0601 00 0 00731         STO     WORD     
      01570  0074 00 4 01642         TSX     RELBIT,4      GET FIRST DECREMENT RELOCATION BIT.  
      01571  0120 00 0 01577         TPL     NODEC         IF ZERO, DECREMENT IS ABSOLUTE.
      01572  0500 00 0 00731         CLA     WORD          IF ONE,
      01573  0771 00 0 00022         ARS     18            DECREMENT IS RELOCATABLE.
      01574  0074 00 4 01650         TSX     RELOC,4       DO SO. 
      01575  0767 00 0 00022         ALS     18            THEN,  
      01576  0622 00 0 00731         STD     WORD          REPLACE THE NEW VERSION. 
      01577  0074 00 4 01642  NODEC  TSX     RELBIT,4      GET THE FIRST ADDRESS BIT.     
      01600  0120 00 0 01604         TPL     CHECK         IF ZERO, ADDRESS IS ABSOLUTE.  
      01601  0500 00 0 00731         CLA     WORD          IF ONE, ADDRESS IS RELOCATABLE.
      01602  0074 00 4 01650         TSX     RELOC,4       DO SO. 
      01603  0621 00 0 00731         STA     WORD          REPLACE THE NEW VERSION. 
      01604                   CHECK  TSS     GETLOC        PICK UP LOC'N FROM A-CORE
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 31    
                           DIFDMP.       VERIFY OR DIFFERENTIAL DUMP.               
                  
      01605  0 00000 0 00000         PZE     **            ..     
      01606                          TEQ     FINCYC,WORD   IF IT MATCHES, DON'T PRINT.    
      01611                          FLDPRT  LOC           TYPE LOCATION.     
      01613                          TYO     =H00000/ 
      01615  0074 00 4 02177         TSX     TAB,4         BCD TABULATE.
      01616  0500 00 0 00731         CLA     WORD          PRINT OUT OLD CONTENTS.  
      01617  0522 00 0 00461         XEC     CTSX     
      01620  0074 00 4 02177         TSX     TAB,4         BCD TABULATE.
      01621                          TSS     GETLOC        PICK UP THE WORD   
      01622  0 00000 0 00000  CHKA   PZE     **            ..     
      01623  0522 00 0 00461         XEC     CTSX          TYPE THE WORD.     
      01624  0074 00 4 02175         TSX     CR,4          END OF LINE, CARRIAGE RETURN.  
      01625 -0500 00 0 00202  FINCYC CAL     LOC
      01626  0400 00 0 11302         ADD     =1 
      01627  0602 00 0 00202         SLW     LOC
      01630  0621 00 0 01605         STA     CHECK+1       SAVE FOR GETLOC    
      01631  0621 00 0 01622         STA     CHKA          ..     
      01632  1 77777 1 01633         TXI     *+1,1,-1 
      01633  0520 00 0 02133         ZET     INRUPT        HAS THERE BEEN AN INTERRUPT.Q  
      01634  0020 00 0 01665         TRA     QUIT          YES, STOP.   
      01635 -0500 00 0 01703         CAL     COUNT    
      01636  0402 00 0 11302         SUB     =1 
      01637  0602 00 0 01703         SLW     COUNT    
      01640 -0100 00 0 01566         TNZ     RETURN   
      01641  0020 00 0 01471         TRA     CARDRD        GO READ NEXT CARD. 
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 32    
                           RELBIT.       GET NEXT RELOCATION BIT.                   
                  
      01642  0500 00 0 01516  RELBIT CLA     CARD+2        GET THE TWO WORDS OF BITS.     
      01643  0560 00 0 01517         LDQ     CARD+3        ..     
      01644 -0763 00 0 00001         LGL     1             MOVE LEFT ONE POSITION.  
      01645  0602 00 0 01516         SLW     CARD+2        SAVE THE TWO NEW WORDS.  
      01646 -0600 00 0 01517         STQ     CARD+3        ..     
      01647  0020 00 4 00001         TRA     1,4           RETURN TO CALLER WITH BIT IN AC SIGN.
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 33    
                           RELOC.        RELOCATE FIELD IN A(AC).                   
                  
      01650  0634 00 4 01660  RELOC  SXA     RELXC,4       SAVE RETURN INDEX. 
      01651  0634 00 1 01661         SXA     RELXA,1       ..     
      01652  0734 00 1 00000         PAX     ,1            GET FIELD TO BE RELOCATED.     
      01653  0074 00 4 01642         TSX     RELBIT,4      GET THE NEXT RELOCATION BIT.   
      01654  3 00000 1 01663  RELSIZ TXH     OUTSID,1,..   IS FIELD WITHIN SUBPROGRAM.Q   
      01655 -0120 00 0 01664         TMI     RELCOM        YES, BIT ON MEANS COMMON RELOCATION. 
      01656  1 00000 1 01657  RELPRG TXI     *+1,1,..      BIT OFF MEANS RELOCATION WITH SUBPROGRAM.  
      01657  0754 00 1 00000  RELXIT PXA     ,1            GET THE RELOCATED FIELD. 
      01660  0774 00 4 00000  RELXC  AXT     ..,4          RESTORE RETURN INDEX.    
      01661  0774 00 1 00000  RELXA  AXT     ..,1          ..     
      01662  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
      01663 -0120 00 0 01656  OUTSID TMI     RELPRG        OUTSIDE, ONE MEANS RELOCATE W/ SUBPROGRAM. 
      01664  1 00000 1 01657  RELCOM TXI     RELXIT,1,COMMON-77461K ZERO MEANS COMMON RELOCATION.     
                              *     
                       77461  COMMON COMMON  0             WHERE COMMON REALLY IS.  
                      077461  77461K BOOL    77461         WHERE IT SHOULD BE.
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 34    
                                         EXIT FROM VERIFY.                          
                  
      01665                   QUIT   CLOSE   (FILE,((=H   BSS)),DERR) CLOSE THE FILE.     
      01671                   VDONE  TYPE    3,(COMPARISON DONE.*)
      01673  0774 00 4 00000  VXC    AXT     ..,4     
      01674  0774 00 2 00000  VXB    AXT     ..,2     
      01675  0774 00 1 00000  VXA    AXT     ..,1     
      01676  0020 00 4 00001         TRA     1,4           AND EXIT.    
                              *     
      01677                   NONREL TYPE    6,(BINARY CARD IS NON-RELOCATABLE.*)   
      01701  0020 00 0 01665         TRA     QUIT          GIVE UP AND GET OUT OF HERE.   
                              *     
      01702  0 00000 0 00000  CELL1                        FLAG.. FIRST PROGRAM CARD ALREADY READ.    
      01703  0 00000 0 00000  COUNT                        NUMBER OF WORDS ON CARD. 
      01704  0 00000 0 00000  FILE                         PRIMARY FILE NAME. 
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 35    
                           CHFIL.        CHECK FOR PRELIMINARY INPUT FROM A FILE.   
                  
      01705  0634 00 4 01726  CHFIL  SXA     CHXC,4        SAVE RETURN. 
      01706  0774 00 4 02053         AXT     RDFLXA,4      SET UP TO READ FROM CONSOLE.   
      01707  0634 00 4 01415         SXA     TYICW,4  
      01710                          TSS     GETCOM        GET THE FIRST COMMAND ARGUMENT.
      01711  0 00000 0 00001                 1  
      01712                          TEQ     CHXC,=O777777777777 EXIT IF FIRST ARGUMENT IS FENCE.     
      01715  0602 00 0 00665         SLW     NAME          REMEMBER IT. 
      01716  0074 00 4 11243         TSX     GETCOM,4      GET THE SECOND ARGUMENT. 
      01717  0 00000 0 00002                 2  
      01720                          TNE     CHXC,=O777777777777 NO FILE IF MORE THAN ONE ARGUMENT.   
      01724  0074 00 4 01730         TSX     SETF,4        SET UP FOR READING FROM A FILE.
      01725  3 00000 0 00665         PAR     NAME     
      01726  0774 00 4 00000  CHXC   AXT     ..,4          RESTORE XR 4.
      01727  0020 00 4 00001         TRA     1,4           EXIT.  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 36    
                           SETF.         SET UP FOR READING FROM A FILE.            
                  
      01730  0634 00 4 01751  SETF   SXA     SETFX,4       SAVE RETURN. 
      01731  0500 60 4 00001         CLA*    1,4           GET THE FILE NAME. 
      01732  0601 00 0 01753         STO     TYIF          SAVE IT.     
      01733                          OPEN    (=HR,TYIF,((=H DEBUG)),=-0,=-0,DERR) OPEN THE FILE.
      01742                          BUFFER  (TYIF,((=H DEBUG)),(BUF2,,BUFLTH),DERR) ..   
      01747  0774 00 4 01754         AXT     READF,4       BUGGER TYI TO READ FROM FILE.  
      01750  0634 00 4 01415         SXA     TYICW,4       ..     
      01751  0774 00 4 00000  SETFX  AXT     ..,4          RESTORE RETURN.    
      01752  0020 00 4 00001         TRA     1,4           EXIT.  
                              *     
      01753  0 00000 0 00000  TYIF                         INPUT FILE NAME.   
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 37    
                           READF.        READ LINE FROM FILE.                       
                  
      01754  0634 00 4 01772  READF  SXA     READX,4       SAVE RETURN. 
      01755  0500 00 4 00001         CLA     1,4           GET THE CONTROL WORD.    
      01756  0601 00 0 01764         STO     READCW+4      SET UP CALL TO DISK SUPERVISOR.
      01757  0621 00 0 01771         STA     FIXCW         SET UP CARRIAGE RETURN INSERTER.     
      01760                   READCW RDWAIT  (TYIF,((=H DEBUG)),=0,(..,,..),RFEND,=-0,RFERR) GET LINE.
      01770  0074 00 4 01774         TSX     FIXCR,4       FIX UP THE CARRIAGE RETURN.    
      01771  3 00000 0 00000  FIXCW  PAR     .. 
      01772  0774 00 4 00000  READX  AXT     ..,4          RESTORE RETURN.    
      01773  0020 00 4 00002         TRA     2,4           EXIT.  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 38    
                           FIXCR.        INSERT CR AT END OF LINE READ FROM FILE.   
                  
      01774  0634 00 4 02031  FIXCR  SXA     FIXXC,4       SAVE THE XR'S.     
      01775  0634 00 1 02030         SXA     FIXXA,1  
      01776  0500 00 4 00001         CLA     1,4           GET THE CONTROL WORD.    
      01777  0400 00 0 11310         ADD     =11           COMPUTE ADDRESS OF LAST WORD.  
      02000  0621 00 0 02005         STA     SWD           SET UP OUR CAL, SLW, STQ.
      02001  0621 00 0 02026         STA     SFW
      02002  0400 00 0 11302         ADD     =1 
      02003  0621 00 0 02027         STA     SRW
      02004  0774 00 1 00000         AXT     0,1           BEGIN W/ THE LAST WORD.  
      02005 -0500 00 1 00000  SWD    CAL     ..,1          GET THE WORD.
      02006                          TEQ     ALLB,=H       IS IT ALL BLANK.Q  
      02011  0774 00 4 00044         AXT     36,4          SET UP COUNT OF 36 BITS. 
      02012  0560 00 0 11301  SCH    LDQ     =0            CLEAR THE MQ.
      02013 -0765 00 0 00006         LGR     6             GET THE RIGHT-HAND CHARACTER.  
      02014 -0773 00 0 00006         RQL     6             MOVE IT TO THE RIGHT OF THE MQ.
      02015 -0130 00 0 00000         XCL                   THEN TO THE AC.    
      02016                          TBL     STILLB        IF A BLANK, GO CHECK THE NEXT. 
      02021 -0130 00 0 00000         XCL                   RESTORE THE CHARACTERS TO ITS LEFT.  
      02022 -0773 00 0 00036         RQL     30            GET IT BACK INTO POSITION.     
      02023 -0763 00 0 00006         LGL     6  
      02024  0560 00 0 11361         LDQ     =O556060606060 GET THE WORD FILLER.    
      02025 -0763 00 4 00044         LGL     36,4          RESTORE THE WORD.  
      02026  0602 00 1 00000  SFW    SLW     ..,1          REPLACE IT.  
      02027 -0600 00 1 00000  SRW    STQ     ..,1          REPLACE THE WORD TO ITS RIGHT. 
      02030  0774 00 1 00000  FIXXA  AXT     ..,1          RESTORE THE XR'S.  
      02031  0774 00 4 00000  FIXXC  AXT     ..,4     
      02032  0020 00 4 00001         TRA     1,4           EXIT.  
                              *     
      02033 -0130 00 0 00000  STILLB XCL                   RESTORE THE TWO HALVES.  
      02034  1 77772 4 02012         TXI     SCH,4,-6      COUNT CHARACTER AND GO GET THE NEXT. 
                              *     
      02035  1 00001 1 02036  ALLB   TXI     *+1,1,1       MOVE POINTER TO NEXT WORD.     
      02036 -3 00014 1 02005         TXL     SWD,1,12      IF NOT DONE, GET THE NEXT WORD.
      02037  0560 00 0 11361         LDQ     =O556060606060 OTHERWISE, GET THE CARRIAGE RETURN CODE.  
      02040  0020 00 0 02027         TRA     SRW           INSERT IT AS THE FIRST WORD.   
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 39    
                                         RESTORE CONSOLE INPUT.                     
                  
      02041  0774 00 4 02053  RFERR  AXT     RDFLXA,4      ERROR ON READING, SET TO CONSOLE INPUT.    
      02042  0634 00 4 01415         SXA     TYICW,4       ..     
      02043  0020 00 0 06321         TRA     DERR          GET DISK DIAGNOSTIC.     
                              *     
      02044  0774 00 4 02053  RFEND  AXT     RDFLXA,4      RESTORE TYI TO READ FROM CONSOLE.    
      02045  0634 00 4 01415         SXA     TYICW,4       ..     
      02046                          CLOSE   (TYIF,((=H DEBUG)),DERR) CLOSE THE FILE.     
      02052  0534 00 4 01772         LXA     READX,4       RESTORE RETURN.    
      02053  0101 00 0 11355  RDFLXA TIA     =HRDFLXA      AND CALL RDFLXA.   
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 40    
                                         TYPE LINE OF TEXT TERMINATED BY ASTERISK.  
                  
      02054 -0625 00 0 02105  TYPE   SETF    TYPCR         SET CARRIAGE RETURN FLAG.
      02055  0020 00 0 02057         TRA     TYPJ          GO TO ROUTINE.     
                              *     
      02056  0600 00 0 02105  TYPA   CLEAR   TYPCR         CLEAR CARRIAGE RETURN FLAG.    
      02057  0634 00 4 02101  TYPJ   SXA     TYPXC,4       SAVE THE INDEX REGISTERS.
      02060  0634 00 1 02102         SXA     TYPXA,1  
      02061  0634 00 2 02103         SXA     TYPXB,2  
      02062  0500 00 4 00001         CLA     1,4           GET THE CONTROL WORD.    
      02063  0737 00 1 00000         PAC     ,1            PLACE POINTER TO BCI STRING IN XR 1. 
      02064  0560 00 1 00000  TYPG   LDQ     0,1           GET A WORD FROM CALLER.  
      02065  0774 00 2 00006         AXT     6,2           PREPARE TO COUNT 6 CHARACTERS. 
      02066 -0754 00 0 00000  TYPL   ZAC                   CLEAR THE AC.
      02067 -0763 00 0 00006         LGL     6             SHIFT A CHARACTER INTO THE AC. 
      02070                          TEQ     TYPX,=H00000* STOP IF CHARACTER IS ASTERISK. 
      02073  0074 00 4 02137         TSX     TYO,4         TYPE IT.     
      02074  2 00001 2 02066         TIX     TYPL,2,1      COUNT THE CHARACTERS IN THIS WORD.   
      02075  1 77777 1 02064         TXI     TYPG,1,-1     DONE, COUNT THIS WORD.   
                              *     
      02076  0500 00 0 11320  TYPX   CLA     =O55          GET A CARRIAGE RETURN.   
      02077  0520 00 0 02105         ZET     TYPCR         SHOULD WE TYPE IT.Q
      02100  0074 00 4 02137         TSX     TYO,4         YES, DO SO.  
      02101  0774 00 4 00000  TYPXC  AXT     ..,4          RESTORE THE INDEX REGISTERS.   
      02102  0774 00 1 00000  TYPXA  AXT     ..,1     
      02103  0774 00 2 00000  TYPXB  AXT     ..,2     
      02104  0020 00 4 00001         TRA     1,4           EXIT.  
                              *     
      02105  0 00000 0 00000  TYPCR                        CARRIAGE RETURN NEEDED FLAG.   
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 41    
                           NOINT.        IGNORE INTERRUPT OCCURRING IN FAPDBG.      
                  
      02106 -0625 00 0 02133  NOINT  SETF    INRUPT        SET FLAG TO SHOW INTERRUPT OCCURRED. 
      02107  0600 00 0 02134         CLEAR   INTOV         ASSUME OVERFLOW LIGHT NOT ON.  
      02110 -0140 00 0 02112         TNO     *+2           TEST IT.     
      02111 -0625 00 0 02134         SETF    INTOV         WAS ON, SET FLAG.  
      02112  0602 00 0 02135         SLW     INTLA         SAVE THE LOGICAL AC.     
      02113  0771 00 0 00002         ARS     2             SHIFT, 
      02114  0601 00 0 02136         STO     INTSA         SAVE THE SIGNED AC.
      02115  0634 00 4 02131         SXA     INTXC,4       SAVE XR 4.   
      02116                          TSS     GETBRK        GET THE LOCATION OF THE INTERRUPT.   
      02117  0621 00 0 02132         STA     INTTRA        SET UP THE TRA.    
      02120                          TSS     SETBRK        SET UP OUR ENTRY AGAIN.  
      02121  0 00000 0 00415                 INT           ..     
      02122  0500 00 0 02122         CLA     *             PREPARE TO TURN ON THE OVERFLOW LIGHT.     
      02123  0767 00 0 00044         ALS     36            TURN IT ON.  
      02124  0500 00 0 02136         CLA     INTSA         GET THE SIGNED AC. 
      02125  0767 00 0 00002         ALS     2             SHIFT IT INTO POSITION.  
      02126 -0501 00 0 02135         ORA     INTLA         INSERT THE LOGICAL AC.   
      02127 -0520 00 0 02134         NZT     INTOV         SHOULD THE OVERFLOW LIGHT BE ON.Q    
      02130  0140 00 0 02130         TOV     *             NO, TURN IT OFF.   
      02131  0774 00 4 00000  INTXC  AXT     ..,4          RESTORE XR 4.
      02132  0020 00 0 00000  INTTRA TRA     ..            RETURN TO INTERRUPTED PROGRAM. 
                              *     
      02133  0 00000 0 00000  INRUPT                       FLAG.. INTERRUPT HAS OCCURRED. 
      02134  0 00000 0 00000  INTOV                        FLAG.. OVERFLOW LIGHT WAS ON.  
      02135  0 00000 0 00000  INTLA                        STORAGE FOR THE LOGICAL AC.    
      02136  0 00000 0 00000  INTSA                        STORAGE FOR THE SIGNED AC.     
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 42    
                           TYO.          SINGLE CHARACTER OUTPUT.                   
                  
      02137  0634 00 4 02172  TYO    SXA     OXRC,4        SAVE RETURN. 
      02140 -0600 00 0 02203         STQ     MQ            SAVE MQ.     
      02141 -0320 00 0 11326         ANA     =O77          CONSIDER ONLY RIGHT CHARACTER. 
      02142  0600 00 0 02204         CLEAR   PFLAG         CLEAR PRINT INDICATOR.   
      02143 -0340 00 0 11320         LAS     =O55          IS IT A CARR. RET. 
      02144  0020 00 0 02146         TRA     *+2           NO, CONTINUE.
      02145 -0625 00 0 02204         SETF    PFLAG         YES, SET PRINT INDICATOR.
      02146 -0765 00 0 00006         LGR     6             SHIFT CHARACTER INTO MQ. 
      02147 -0500 00 0 02205         CAL     TYOB          GET THE WORD BEING ASSEMBLED.  
      02150  0140 00 0 02150         TOV     *             TURN OFF OVERFLOW LIGHT. 
      02151 -0763 00 0 00006         LGL     6             SHIFT IN NEW CHARACTER.  
      02152 -0140 00 0 02155         TNO     TYOMIW        IS THERE ANY MORE ROOM IN THIS WORD.Q
      02153  0074 00 4 02206         TSX     SWORD,4       NO, STORE IT IN BUFFER.  
      02154 -0500 00 0 11302         CAL     =1            GET EMPTY WORD.    
      02155  0602 00 0 02205  TYOMIW SLW     TYOB          RESTORE THE WORD.  
      02156 -0520 00 0 02204         NZT     PFLAG         IF PRINT INDICATOR IS OFF,     
      02157  0020 00 0 02172         TRA     OXRC          EXIT.  
      02160                          TEQ     TYOMT,=1      IS WORD COMPLETELY EMPTY.Q     
      02163  0560 00 0 11362         LDQ     =O575757575757 NO, GET NULL CHARACTERS.
      02164 -0763 00 0 00006         LGL     6             SHIFT ONE INTO WORD.     
      02165 -0140 00 0 02164         TNO     *-1           CONTINUE UNTIL WORD IS FULL.   
      02166  0074 00 4 02206         TSX     SWORD,4       INSERT FILLED WORD INTO BUFFER.
      02167  0074 00 4 02221  TYOMT  TSX     FWORD,4       FORCE OUT THE BUFFER.    
      02170 -0500 00 0 11302         CAL     =1            GET COMPLETELY EMPTY WORD.     
      02171  0602 00 0 02205         SLW     TYOB          SAVE THE WORD.     
      02172  0774 00 4 00000  OXRC   AXT     ..,4          RESTORE RETURN.    
      02173  0560 00 0 02203         LDQ     MQ            AND MQ.
      02174  0020 00 4 00001         TRA     1,4           AND EXIT.    
                              *     
                              *              CR.           TYPE A CARRIAGE RETURN.  
      02175  0500 00 0 11320  CR     CLA     =O55          GET THE CODE.
      02176  0020 00 0 02137         TRA     TYO           GO TYPE IT.  
                              *     
                              *              TAB.          TYPE A TABULATION CHARACTER.   
      02177  0500 00 0 11324  TAB    CLA     =O72          GET THE CHARACTER CODE.  
      02200  0020 00 0 02137         TRA     TYO           GO TYPE IT.  
                              *     
                              *              QUOTE.        TYPE A SINGLE QUOTE (APOSTROPHE).    
      02201  0500 00 0 11311  QUOTE  CLA     =O14          GET THE CHARACTER CODE.  
      02202  0020 00 0 02137         TRA     TYO           GO TYPE IT.  
                              *     
      02203  0 00000 0 00000  MQ    
      02204  0 00000 0 00000  PFLAG 
      02205  0 00000 0 00001  TYOB           1             WORD INITIALLY EMPTY.    
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 43    
                           SWORD.        INSERT WORD IN OUTPUT BUFFER.              
                  
      02206  0634 00 4 02217  SWORD  SXA     SWXC,4        SAVE RETURN INDEX. 
      02207  0535 00 4 02232         LAC     SWBUF,4       GET CURRENT BUFFER POINTER.    
      02210  1 77777 4 02211         TXI     *+1,4,-1      BUMP TO POINT TO NEXT WORD.    
      02211  0636 00 4 02232         SCA     SWBUF,4       REPLACE POINTER FOR NEXT TIME. 
      02212  0602 00 4 02232         SLW     SWBUF,4       INSERT THIS WORD INTO BUFFER.  
      02213  3 77762 4 02217         TXH     SWXC,4,-14    IS THERE ANY MORE ROOM IN BUFFER.Q   
      02214                          TSS     WRFLXA        NO, TYPE OUT THE BUFFER. 
      02215  3 00016 0 02233         PAR     SWBUF+1,,14   ..     
      02216  0600 00 0 02232         STZ     SWBUF         RESET CURRENT WORD INDEX.
      02217  0774 00 4 00000  SWXC   AXT     ..,4          RESTORE RETURN INDEX.    
      02220  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 44    
                           FWORD.        FORCE OUT OUTPUT BUFFER.                   
                  
      02221  0634 00 4 02230  FWORD  SXA     FWXC,4        SAVE RETURN INDEX. 
      02222  0534 00 4 02232         LXA     SWBUF,4       GET POINTER TO CURRENT WORD IN BUFFER.     
      02223 -3 00000 4 02230         TXL     FWXC,4,0      IF EMPTY, IGNORE CALL.   
      02224 -0634 00 4 02226         SXD     FWCW,4        IF NOT EMPTY, SET UP CONTROL WORD.   
      02225                          TSS     WRFLXA        TYPE OUT THE BUFFER.     
      02226  3 00000 0 02233  FWCW   PAR     SWBUF+1,,..   ..     
      02227  0600 00 0 02232         STZ     SWBUF         RESET CURRENT WORD POINTER.    
      02230  0774 00 4 00000  FWXC   AXT     ..,4          RESTORE RETURN INDEX.    
      02231  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
      02232  0 00000 0 00000  SWBUF                        OUTPUT BUFFER.     
      02233                          BSS     14            ..     
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 45    
                                         TYPE UP TO SIX CHARACTERS IN AC.           
                  
                              *              BCDOUT.       TYPE ALL SIX CHARACTERS IN AC. 
      02251  0600 00 0 02312  BCDOUT CLEAR   BOIG          RESET FLAG..  DON'T IGNORE BLANKS.   
      02252  0020 00 0 02254         TRA     BOJN          GO JOIN NAMOUT.    
                              *     
                              *              NAMOUT.       TYPE NON-BLANK CHARACTERS IN AC.     
      02253 -0625 00 0 02312  NAMOUT SETF    BOIG          SET FLAG..  IGNORE BLANKS.     
      02254  0634 00 4 02270  BOJN   SXA     BOXC,4        SAVE RETURN INDEX. 
      02255  0634 00 1 02271         SXA     BOXA,1        ..     
      02256  0131 00 0 00000         XCA                   MOVE INPUT TO MQ.  
      02257  0774 00 1 00006         AXT     6,1           SET UP COUNT OF SIX CHARACTERS.
      02260 -0754 00 0 00000  BOLP   ZAC                   CLEAR THE AC.
      02261 -0763 00 0 00006         LGL     6             GET THE NEXT CHARACTER.  
      02262  0520 00 0 02312         ZET     BOIG          SHOULD WE TEST IT FOR BLANK.Q  
      02263                          TBL     *+2           YES, WE SHOULD.  IS IT.Q 
      02266  0074 00 4 02137         TSX     TYO,4         WE SHOULD TYPE IT.  DO SO.     
      02267  2 00001 1 02260         TIX     BOLP,1,1      COUNT THIS CHARACTER.    
      02270  0774 00 4 00000  BOXC   AXT     ..,4          RESTORE RETURN INDEX.    
      02271  0774 00 1 00000  BOXA   AXT     ..,1          ..     
      02272  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 46    
                           BCDIN.        BCD INPUT.                                 
                  
      02273  0634 00 4 02310  BCDIN  SXA     BCDIX,4  
      02274 -0500 00 0 11367         CAL     =H            GET BLANKS.  
      02275  0602 00 0 06304         SLW     BUFF          AND PUT THEM IN ASSEMBLY REGISTER.   
      02276  0074 00 4 01336  BCDCH  TSX     TYI,4         GET A CHARACTER.   
      02277                          TCR     BCDPT         IF CARRIAGE RETRUN, STOP.
      02302 -0765 00 0 00006         LGR     6             SHIFT AND SAVE THE CHARACTER.  
      02303 -0500 00 0 06304         CAL     BUFF          GET THE ASSEMBLY WORD.   
      02304 -0763 00 0 00006         LGL     6             SHIFT IN THE NEW CHARACTER.    
      02305  0602 00 0 06304         SLW     BUFF          AND RESTORE THE WORD.    
      02306  0020 00 0 02276         TRA     BCDCH         NOW TRY AGAIN.     
                              *     
      02307  0560 00 0 06304  BCDPT  LDQ     BUFF          DONE, GET THE WORD.
      02310  0774 00 4 00000  BCDIX  AXT     ..,4     
      02311  0020 00 4 00001         TRA     1,4
                              *     
      02312  0 00000 0 00000  BOIG                         FLAG..  IGNORE BLANKS.   
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 47    
                           FLDPRT.       SYMBOLIC FIELD PRINTING ROUTINE.           
                  
                              *      ADDS TO PRINT BUFFER THE SYMBOLIC VALUE OF A FIELD PRESENTED     
                              *      IN THE AC ADDRESS IN THE FORM.. SYMBOL+CORRECTION (OCTAL). 
      02313  0634 00 4 02336  FLDPRT SXA     FLDXC,4  
      02314  0634 00 2 02337         SXA     FLDXB,2  
      02315 -0320 00 0 11332         ANA     =O77777       GET RID OF GARBAGE.
      02316  0074 00 4 02722         TSX     SYMBCD,4      GET SYMBOL (MQ) + CORRECTION (AC).   
      02317  0601 00 0 02342         STO     FLDCOR        SAVE CORRECTION.   
      02320 -0600 00 0 02341         STQ     PLS           SAVE THE SYMBOL.   
      02321  0131 00 0 00000         XCA                   MOVE IT TO THE AC. 
      02322  0074 00 4 02253         TSX     NAMOUT,4      TYPE THE SYMBOL.   
      02323 -0500 00 0 02341         CAL     PLS           GET THE SYMBOL.    
      02324                          TEQ     FLDOCT,=H     IS IT ALL BLANK.Q  
      02327  0500 00 0 02342         CLA     FLDCOR        NO, IS THE CORRECTION ZERO.Q   
      02330  0100 00 0 02336         TZE     FLDXC         YES, WE ARE DONE.  
      02331 -0120 00 0 02334         TMI     FLDOCT        NO, WILL OCTOUT TYPE A MINUS SIGN.Q  
      02332                          TYO     =H00000+      NO, WE NEED A PLUS SIGN. 
      02334                   FLDOCT OCTOUT  FLDCOR        NOW TYPE THE 'CORRECTION' FACTOR.    
      02336  0774 00 4 00000  FLDXC  AXT     ..,4     
      02337  0774 00 2 00000  FLDXB  AXT     ..,2     
      02340  0020 00 4 00001         TRA     1,4
                              *     
      02341  0 00000 0 00000  PLS                          STORAGE FOR THE SYMBOL.  
      02342  0 00000 0 00000  FLDCOR                       'CORRECTION FACTOR' TO SYMBOL. 
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 48    
                           SYMPRT.       SYMBOLIC WORD PRINTING ROUTINE.            
                  
                              *      SYMBOLIC WORD PRINT ROUTINE FOR FAP DEBUG II   
                              *      ENTER WITH WORD IN LOGICAL AC.     
                              *      PRINTS SYMBOLIC OP. CODE, ADDRESS, TAG, AND DECREMENT IN THE     
                              *      FORM..  ADD* FOO+100,4 
      02343  0634 00 4 02413  SYMPRT SXA     SPXC,4   
      02344  0634 00 2 02412         SXA     SPXB,2   
      02345  0601 00 0 02426         STO     SPWD          SAVE THE WORD.     
      02346  0600 00 0 02424         CLEAR   DECFLD        CLEAR INDICATOR.   
      02347 -0500 00 0 02426         CAL     SPWD          GET WORD (THIS TIME IN LOG. AC.).    
      02350  0074 00 4 10165         TSX     OPBCD,4       GET THE BCD OP. CODE.    
      02351  0322 00 0 02426         ERA     SPWD          CLEAR BITS ACCOUNTED FOR.
      02352  0602 00 0 00731         SLW     WORD     
      02353  0131 00 0 00000         XCA                   MOVE SYMBOL TO AC. 
      02354  0074 00 4 02253         TSX     NAMOUT,4      TYPE THE SYMBOL.   
      02355 -0500 00 0 00731         CAL     WORD     
      02356 -0320 00 0 11334         ANA     =O77777000000 SAVE DECREMENT.    
      02357                          TEQ     IND,=O60000000 
      02362                   NOFLG  TYO     =H00000       PRINT BLANK. 
      02364                          FLDPRT  WORD          TYPE THE ADDRESS FIELD.  
      02366 -0500 00 0 00731         CAL     WORD     
      02367  0622 00 0 02424         STD     DECFLD   
      02370  0771 00 0 00017         ARS     15 
      02371 -0320 00 0 11304         ANA     =7            SAVE TAG.    
      02372  0602 00 0 02425         SLW     SPTAG    
      02373 -0100 00 0 02376         TNZ     INSTAG        IF TAG IS NOT ZERO, INSERT IT. 
      02374 -0520 00 0 02424         NZT     DECFLD        IF DECREMENT REQUIRED, INSERT TAG.   
      02375  0020 00 0 02413         TRA     SPXC          OTHERWISE BYPASS.  
      02376                   INSTAG TYO     (=H00000,)     
      02400                          FLDPRT  SPTAG         PRINT THE TAG.     
      02402 -0520 00 0 02424         NZT     DECFLD   
      02403  0020 00 0 02413         TRA     SPXC     
      02404                          TYO     (=H00000,)     
      02406 -0500 00 0 00731         CAL     WORD     
      02407  0771 00 0 00022         ARS     18 
      02410 -0320 00 0 11332         ANA     =O77777  
      02411  0074 00 4 02313         TSX     FLDPRT,4      PRINT THE DECREMENT FIELD.     
      02412  0774 00 2 00000  SPXB   AXT     ..,2     
      02413  0774 00 4 00000  SPXC   AXT     ..,4     
      02414  0020 00 4 00001         TRA     1,4
                              *     
      02415 -0500 00 0 02426  IND    CAL     SPWD          GET THE ORIGINAL INPUT WORD.   
      02416 -0320 00 0 11351         ANA     =O300000000000 MASK OFF THE PREFIX, LESS SIGN.     
      02417 -0100 00 0 02362         TNZ     NOFLG         IF EITHER BIT ON, DON'T TYPE *.
      02420                          TYO     =H00000*      BOTH BITS OFF, ASSUME TYPE B.  
      02422 -0634 00 0 00731         ZSD     WORD          CLEAR DECREMENT.   
      02423  0020 00 0 02362         TRA     NOFLG         GO BACK.     
                              *     
      02424  0 00000 0 00000  DECFLD                       DECREMENT FIELD OF THE WORD.   
      02425  0 00000 0 00000  SPTAG                        TAG FIELD OF THE OUTPUT WORD.  
      02426  0 00000 0 00000  SPWD                         THE ORIGINAL SRGUMENT.   
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 49    
                           BCSCH.        BREAK CHARACTER SEARCHING ROUTINE.         
                  
                              *      SEARCHES INPUT BUFFER FOR ONE OF THE BREAK CHARACTERS.  RETURNS  
                              *      WITH LAST SIX CHARACTERS (LEADING BLANKS) IN MQ, BREAK CHARACTER 
                              *      IN AC, SIGN MINUS(=1) IF ANY OF THE CHARACTERS SEEN WAS NOT
                              *      NUMERIC (IE 0 - 7).    
      02427  0634 00 4 02455  BCSCH  SXA     BCEND,4  
      02430  0600 00 0 02464         CLEAR   BCFLG         CLEAR FLAG (INDICATE NUMERIC FIELD). 
      02431 -0500 00 0 11367         CAL     =H 
      02432  0602 00 0 02465         SLW     BCSYM         SET WORD TO BLANKS.
      02433  0074 00 4 01336  BCRET  TSX     TYI,4         GET THE NEXT CHARACTER.  
      02434  0774 00 4 00005         AXT     BCTAB-BCORG,4 SEARCH BREAK CHARACTER TABLE.  
      02435 -0340 00 4 02464  BCLK   LAS     BCTAB,4  
      02436  0020 00 0 02440         TRA     *+2
      02437  0020 00 0 02451         TRA     BCBRK         LEAVE IF BREAK CHARACTER.
      02440  2 00001 4 02435         TIX     BCLK,4,1 
      02441 -0765 00 0 00006         LGR     6             NOT A BREAK CHARACTER.   
      02442 -0500 00 0 02465         CAL     BCSYM    
      02443 -0763 00 0 00006         LGL     6             SHIFT INTO WORD.   
      02444  0602 00 0 02465         SLW     BCSYM    
      02445 -0320 00 0 11323         ANA     =O70          IF IT IS NUMERIC,  
      02446  0100 00 0 02433         TZE     BCRET         GO BACK.     
      02447  0602 00 0 02464         SLW     BCFLG         OTHERWISE SET FLAG AND.  
      02450  0020 00 0 02433         TRA     BCRET         THEN GO BACK.
                              *     
      02451  0760 00 0 00003  BCBRK  SSP  
      02452  0520 00 0 02464         ZET     BCFLG         IF NOT NUMERIC,    
      02453 -0760 00 0 00003         SSM                   SET SIGN TO 1 AS INDICATOR.    
      02454  0560 00 0 02465         LDQ     BCSYM         PICK UP WORD IN MQ.
      02455  0774 00 4 00000  BCEND  AXT     ..,4     
      02456  0020 00 4 00001         TRA     1,4           EXIT.  
                              *     
      02457  000000000020     BCORG  BCI     4,00000+00000-00000,00000  
      02463 +000000000055            OCT     55            CARRIAGE RETURN.   
                       02464  BCTAB  EQU     *             TABLE OF BREAK CHARACTERS.     
      02464  0 00000 0 00000  BCFLG                        FLAG.. FIELD NOT ENTIRELY NUMERIC.   
      02465  0 00000 0 00000  BCSYM                        ASSEMBLED SYMBOL.  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 50    
                           FLDEVL.       FIELD EVALUATION ROUTINE.                  
                  
                              *      EVALUATE A FIELD OF SYMBOLS AND OCTAL NUMBERS SEPARATED BY +     
                              *      AND - SIGNS UNTIL IT ENCOUNTERS ANOTHER BREAK CHARACTER OR AN    
                              *      UNDEFINED SYMBOL.
                              *      RETURNS WITH FIELD VALUE     
                              *      (IN 2'S COMPLEMENT FORM) IN MQ, BREAK CHARACTER IN AC.     
      02466  0634 00 4 02526  EVAL   SXA     EVEND,4       SAVE RETURN INDEX. 
      02467  0600 00 0 02543         STZ     EVTOT         CLEAR FIELD VALUE. 
      02470  0600 00 0 02544         CLEAR   EVSGN         ASSUME INITIAL PLUS SIGN.
      02471  0020 00 0 02476         TRA     EVGO          USE INITIAL DATA IN AC - MQ.   
                              *     
      02472  0634 00 4 02526  FLDEVL SXA     EVEND,4       SAVE RETURN INDEX. 
      02473  0600 00 0 02543         STZ     EVTOT    
      02474  0600 00 0 02544         CLEAR   EVSGN    
      02475  0074 00 4 02427  EVRET  TSX     BCSCH,4       GET NEXT SYMBOL, BREAK CHARACTER.    
      02476  0602 00 0 02545  EVGO   SLW     EVBC          SAVE BREAK CHARACTER.    
      02477  0120 00 0 02530         TPL     EVNUM         SYMBOL IS OCTAL NUMBER.  
      02500 -0130 00 0 00000         XCL  
      02501  0074 00 4 02546         TSX     LADJ,4        ADJUST THE SYMBOL TO THE LEFT. 
      02502  0074 00 4 02761         TSX     SYMBIN,4      LOOK UP THE VALUE OF THE SYMBOL.     
      02503  0760 00 0 00003  EVADD  SSP  
      02504  0520 00 0 02544         ZET     EVSGN         IF NOT ZERO, 
      02505 -0760 00 0 00003         SSM                   SET SIGN MINUS.    
      02506  0400 00 0 02543         ADD     EVTOT    
      02507  0601 00 0 02543         STO     EVTOT    
      02510 -0500 00 0 02545         CAL     EVBC     
      02511                          TEQ     EVPLS,=H00000+ IF PLUS SIGN, NEXT SYMBOL IS TO BE ADDED. 
      02514                          TEQ     EVMIN,=H00000- IF MINUS, NEXT SYMBOL IS TO BE SUBTRACTED.
      02517  0500 00 0 02543         CLA     EVTOT         WAS NOT + OR -.    
      02520  0120 00 0 02523         TPL     *+3
      02521  0737 00 4 00000         PAC     ,4            IF NEGATIVE, COMPLEMENT IN INDEX REG.
      02522  0754 00 4 00000         PXA     ,4            RETURN TO AC.
      02523 -0320 00 0 11332         ANA     =O77777       MASK OFF 15 BITS.  
      02524 -0130 00 0 00000         XCL                   PUT IN MQ.   
      02525 -0500 00 0 02545         CAL     EVBC          PICK UP BREAK CHARACTER. 
      02526  0774 00 4 00000  EVEND  AXT     ..,4     
      02527  0020 00 4 00001         TRA     1,4
                              *     
      02530 -0773 00 0 00006  EVNUM  RQL     6  
      02531  0774 00 4 00005         AXT     5,4           SET UP COUNTER.    
      02532 -0754 00 0 00000         ZAC                   CLEAR AC.    
      02533 -0773 00 0 00003         RQL     3  
      02534 -0763 00 0 00003         LGL     3             CONVERT NUMBER.    
      02535  2 00001 4 02533         TIX     *-2,4,1  
      02536  0020 00 0 02503         TRA     EVADD         GO BACK.     
                              *     
      02537  0600 00 0 02544  EVPLS  CLEAR   EVSGN    
      02540  0020 00 0 02475         TRA     EVRET    
                              *     
      02541 -0625 00 0 02544  EVMIN  SETF    EVSGN    
      02542  0020 00 0 02475         TRA     EVRET    
                              *     
      02543  0 00000 0 00000  EVTOT                        ACCUMULATING VALUE OF FIELD.   
      02544  0 00000 0 00000  EVSGN                        FLAG.. THIS SUBFIELD IS NEGATIVE.    
      02545  0 00000 0 00000  EVBC                         BREAK CHARACTER AT END OF SUBFIELD.  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 51    
                           LADJ.         LEFT ADJUSTING ROUTINE.                    
                  
                              *      SHIFTS A SYMBOL IN LOGICAL AC LEFT, INSERTING BLANKS ON THE RIGHT
                              *      UNTIL THERE ARE NO BLANKS ON THE LEFT.   
                              *      A WORD OF ALL BLANKS IS IGNORED.   
      02546  0602 00 0 02567  LADJ   SLW     LAW           SAVE WORD.   
      02547                          TEQ     (1,4),=H      IF WORD IS BLANK, PREVENT LOOP.
      02552  0560 00 0 02567  LAR    LDQ     LAW
      02553 -0763 00 0 00006         LGL     6             MOVE LEFT CHARACTER INTO AC.   
      02554 -0320 00 0 11326         ANA     =O77          MASK IT OFF. 
      02555                          TBL     LASH          WAS BLANK, GO SHIFT WORD.
      02560 -0500 00 0 02567         CAL     LAW           PICK UP WORD.
      02561  0020 00 4 00001         TRA     1,4           EXIT.  
                              *     
      02562 -0500 00 0 02567  LASH   CAL     LAW           PICK UP WORD.
      02563  0560 00 0 11367         LDQ     =H            BLANKS.
      02564 -0763 00 0 00006         LGL     6             SHIFT (LOSE LEFT BLANK). 
      02565  0602 00 0 02567         SLW     LAW           RESTORE.     
      02566  0020 00 0 02552         TRA     LAR           TRY AGAIN.   
                              *     
      02567  0 00000 0 00000  LAW                          WORD BEING ADJUSTED.     
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 52    
                           TABRD.        READ SYMBOL TABLE FILE.                    
                  
      02570  0634 00 4 02671  TABRD  SXA     SRXC,4   
      02571  0634 00 2 02672         SXA     SRXB,2   
      02572  0634 00 1 02673         SXA     SRXA,1   
      02573  0602 00 0 06141         SLW     TFILE         SAVE THE PRIMARY FILE NAME.    
      02574 -0600 00 0 01003         STQ     PORG          SAVE THE PROGRAM ORIGIN. 
      02575                          OPEN    (=HR,TFILE,((=H SYMTB)),=-0,=-0,DERR) OPEN THE FILE.     
      02604                          BUFFER  (TFILE,((=H SYMTB)),(BUF1,,BUFLTH),DERR) ..  
      02611                   SYMRD  RDWAIT  (TFILE,((=H SYMTB)),=0,(CARD,,14),SYMEOF,=-0,DERR) READ. 
      02621  0774 00 1 00000         AXT     0,1           INITIALIZE CARD POINTER. 
      02622 -0500 00 1 01514  SYMADJ CAL     CARD,1   
      02623                          TEQ     SYMEOF,=H     EXIT IF NO MORE SYMBOLS. 
      02626  0560 00 1 01514         LDQ     CARD,1        PICK UP NUMBER.    
      02627 -0754 00 0 00000         ZAC  
      02630 -0773 00 0 00006         RQL     6  
      02631  0774 00 4 00005         AXT     5,4
      02632 -0773 00 0 00003         RQL     3             CONVERT NUMBER.    
      02633 -0763 00 0 00003         LGL     3  
      02634  2 00001 4 02632         TIX     *-2,4,1  
      02635  0400 00 0 01003         ADD     PORG          RELOCATE THE SYMBOL VALUE.     
      02636 -0320 00 0 11332         ANA     =O77777       ASSUME ALL ARE RELOCATABLE.    
      02637  0602 00 0 00731         SLW     WORD          SAVE VALUE.  
      02640 -0500 00 1 01515         CAL     CARD+1,1      PICK UP SYMBOL.    
      02641  0560 00 1 01516         LDQ     CARD+2,1 
      02642 -0763 00 0 00022         LGL     18            SHIFT SYMBOL INTO 1 WORD.
      02643  0602 00 0 02675         SLW     SFF           SAVE SYMBOL IN CASE OF FULL TABLE.   
      02644  0560 00 0 00731         LDQ     WORD          GET THE SYMBOL VALUE.    
      02645  0074 00 4 03002         TSX     DEFINE,4      TRY TO INSERT IT IN TABLE.     
      02646  0020 00 0 02652         TRA     SYMFUL        FAILURE, NO MORE ROOM.   
      02647  1 77775 1 02650         TXI     *+1,1,-3 
      02650  3 77764 1 02622         TXH     SYMADJ,1,-12   
      02651  0020 00 0 02611         TRA     SYMRD         GET NEXT CARD.     
                              *     
      02652                   SYMFUL TYPA    7,(TABLE FULL, FIRST SYMBOL NOT INSERTED IS *)     
      02654  0074 00 4 02201         TSX     QUOTE,4       TYPE THE LEFT QUOTES.    
      02655                          NAMOUT  SFF           TYPE THE SYMBOL.   
      02657  0074 00 4 02201         TSX     QUOTE,4       TYPE THE RIGHT QUOTES.   
      02660                          TYO     =H00000.      PUNCTUATE THE SENTENCE.  
      02662  0074 00 4 02175         TSX     CR,4          RETURN THE CARRIAGE.     
      02663                   SYMEOF CLOSE   (TFILE,((=H SYMTB)),DERR) CLOSE THE FILE, READING DONE.  
      02667                   TDONE  TYPE    3,(SYMBOLS LOADED.*) 
      02671  0774 00 4 00000  SRXC   AXT     ..,4     
      02672  0774 00 2 00000  SRXB   AXT     ..,2     
      02673  0774 00 1 00000  SRXA   AXT     ..,1     
      02674  0020 00 4 00001         TRA     1,4
                              *     
      02675  0 00000 0 00000  SFF                          STORAGE FOR SYMBOL WHICH DIDN'T MAKE IT.   
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 53    
                           KILTAB.       EMPTY SYMBOL TABLE OF ALL BUT OUR SYMBOLS. 
                  
      02676  0634 00 4 02701  KILTAB SXA     KXR,4    
      02677  0774 00 4 00002         AXT     SYMEND-SYMTAB+2,4 RESET INDEX OF ENTRIES IN TABLE. 
      02700  0634 00 4 03001         SXA     SYMLTH,4 
      02701  0774 00 4 00000  KXR    AXT     ..,4     
      02702  0020 00 4 00001         TRA     1,4
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 54    
                           A/R           SET OUTPUT MODE TO ABSOLUTE OR RELATIVE.   
                  
      02703  0500 00 0 00730  SETABS CLA     BC            PICK UP BREAK CHARACTER  
      02704                          TNCR    ILF           CHECK FOR CR 
      02710 -0625 00 0 02721         SETF    ABSSW         SET ABSOLUTE ADDRESSING MODE   
      02711  0020 00 0 00006         TRA     MAIN          ..     
                              *     
      02712  0500 00 0 00730  SETREL CLA     BC            PICK UP BREAK CHARACTER  
      02713                          TNCR    ILF           ..     
      02717  0600 00 0 02721         CLEAR   ABSSW         CLEAR ABSOLUTE ADDRESSING MODE 
      02720  0020 00 0 00006         TRA     MAIN          ..     
                              *     
      02721  0 00000 0 00000  ABSSW                        ABSOLUTE ADDRESSING MODE SWITCH
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 55    
                           SYMBCD.       GET BEST SYMBOL, CORRECTION, GIVEN VALUE.  
                  
      02722  0634 00 4 02753  SYMBCD SXA     SCHEND,4      ENTER W/ VALUE IN AC (ADDRESS).
      02723 -0320 00 0 11332         ANA     =O77777       MASK AWAY GARBAGE. 
      02724  0601 00 0 02755         STO     SYMVAL        SAVE AS ORIGINAL ARGUMENT.     
      02725  0601 00 0 02757         STO     SYMCOR        SAVE AS BEST CORRECTION FACTOR.
      02726  0601 00 0 02760         STO     SYMABS        SAVE AS .ABS.(BEST FACTOR).    
      02727  0534 00 4 03001         LXA     SYMLTH,4      GET NUMBER OF ENTRIES IN SYMBOL TABLE.     
      02730 -0500 00 0 11367         CAL     =H 
      02731  0602 00 0 02756         SLW     SYMBOL   
      02732  0520 00 0 02721         ZET     ABSSW         CHECK FOR ABSOLUTE ADDRESSING MODE   
      02733  0020 00 0 02751         TRA     SBCF          DON'T CHECK SYMBOL FOR ABSOLUTE MODE 
      02734 -2 00002 4 02751  SCHLOP TNX     SBCF,4,2 
      02735  0500 00 0 02755         CLA     SYMVAL   
      02736  0402 00 4 06142         SUB     SYMEND+1,4     
      02737 -0340 00 0 02760         LAS     SYMABS        IS MAGNITUDE SMALLER THAN 'BEST' MAGNITUDE.
      02740  0020 00 0 02734         TRA     SCHLOP   
      02741  0761 00 0 00000         NOP  
      02742  0100 00 0 02744         TZE     SBOK          IF CORRECTION ZERO, DON'T CHECK SYMBOL.    
      02743 -3 00000 4 02734         TXL     SCHLOP,4,SYMEND-SYMTAB NO, DON'T USE OUR SYMBOL.   
      02744  0601 00 0 02757  SBOK   STO     SYMCOR        BEST SO FAR. 
      02745  0602 00 0 02760         SLW     SYMABS        SAVE ABSOLUTE VALUE OF DIFFERENCE.   
      02746 -0500 00 4 06141         CAL     SYMEND,4 
      02747  0602 00 0 02756         SLW     SYMBOL   
      02750  0020 00 0 02734         TRA     SCHLOP   
                              *     
      02751  0560 00 0 02756  SBCF   LDQ     SYMBOL   
      02752  0500 00 0 02757         CLA     SYMCOR   
      02753  0774 00 4 00000  SCHEND AXT     ..,4     
      02754  0020 00 4 00001         TRA     1,4
                              *     
      02755  0 00000 0 00000  SYMVAL                       VALUE BEING SEARCHED FOR.
      02756  0 00000 0 00000  SYMBOL                       'BEST' SYMBOL SO FAR.    
      02757  0 00000 0 00000  SYMCOR                       CORRECTION NECESSARY FOR THIS SYMBOL.
      02760  0 00000 0 00000  SYMABS                       .ABS.(SYMCOR).     
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 56    
                           SYMBIN.       GET VALUE OF SYMBOL, GIVEN BCD CODE.       
                  
      02761  0634 00 4 02771  SYMBIN SXA     SBXR,4        SAVE RETURN. 
      02762  0534 00 4 03001         LXA     SYMLTH,4      SET UP COUNTER.    
      02763 -2 00002 4 02773  SBRET  TNX     NOSYM,4,2     HAVE WE DONE YET.Q 
      02764                          TNE     SBRET,(SYMEND,4) IF NOT THIS SYMBOL, TRY THE NEXT. 
      02770 -0500 00 4 06142  SBFND  CAL     SYMEND+1,4    PICK UP VALUE.     
      02771  0774 00 4 00000  SBXR   AXT     ..,4     
      02772  0020 00 4 00001         TRA     1,4           RETURN W/ SYMBOL VALUE.  
                              *     
      02773                   NOSYM  TNE     UNDEF,=H*     IS THE SYMBOL '*', FOR THIS LOCATION.
      02777 -0500 00 0 00202  SBPOI  CAL     LOC           GET THE CURRENT LOCATION.
      03000  0020 00 0 02771         TRA     SBXR     
                              *     
      03001  0 00000 0 00002  SYMLTH         SYMEND-SYMTAB+2 SO THAT PERMANENT SYMS ARE DEFINED.
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 57    
                           DEFINE.       INSERT NEW SYMBOL, VALUE INTO TABLE.       
                  
      03002  0634 00 4 03035  DEFINE SXA     DFXC,4        ENTER TO DEFINE SYMBOL.  
      03003  0534 00 4 03001         LXA     SYMLTH,4      SET UP.
      03004 -2 00002 4 03027  DEFRET TNX     DEFNO,4,2     SEARCH SYMBOL TABLE.     
      03005                          TNE     DEFRET,(SYMEND,4) IS THIS THE ONE.Q    
      03011 -3 00000 4 03014  DEFYES TXL     DEFOOP,4,SYMEND-SYMTAB DON'T CHANGE OUR SYMBOLS.   
      03012 -0600 00 4 06142         STQ     SYMEND+1,4    PUT VALUE IN TABLE.
      03013  0020 00 0 03035         TRA     DFXC     
                              *     
      03014  0602 00 0 03026  DEFOOP SLW     DOBS          SAVE THE BAD SYMBOL.     
      03015                          TYPA    7,(ATTEMPT TO REDEFINE INTERNAL SYMBOL *)    
      03017  0074 00 4 02201         TSX     QUOTE,4       TYPE THE LEFT QUOTES.    
      03020                          NAMOUT  DOBS          TYPE THE SYMBOL.   
      03022  0074 00 4 02201         TSX     QUOTE,4       TYPE THE RIGHT QUOTES.   
      03023                          TYPE    2,( IGNORED.*) 
      03025  0020 00 0 03035         TRA     DFXC          IGNORE THE ATTEMPT AT REDEFINITION.  
                              *     
      03026  0 00000 0 00000  DOBS                         STORAGE FOR THE INTERNAL SYMBOL.     
                              *     
      03027  0534 00 4 03001  DEFNO  LXA     SYMLTH,4 
      03030  3 03100 4 03037         TXH     DEFFUL,4,SYMLNG+SYMEND-SYMTAB    
      03031  0602 00 4 06141         SLW     SYMEND,4      STORE IN TABLE.    
      03032 -0600 00 4 06142         STQ     SYMEND+1,4    PUT VALUE IN TABLE.
      03033  1 00002 4 03034         TXI     *+1,4,2       INCREASE LENGTH INDICATOR.     
      03034  0634 00 4 03001         SXA     SYMLTH,4 
      03035  0774 00 4 00000  DFXC   AXT     ..,4          OK.    
      03036  0020 00 4 00002         TRA     2,4           EXIT TO OK LOC.    
                              *     
      03037  0534 00 4 03035  DEFFUL LXA     DFXC,4   
      03040  0020 00 4 00001         TRA     1,4
                              *     
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 58    
                           SYMTAB.       SYMBOL TABLE.                              
                  
                       03100  SYMLNG EQU     1600          MAKE ROOM FOR 800 SYMBOLS.     
      06141                   SYMTAB BES     SYMLNG        TABLE OF USER'S SYMBOLS. 
                       06141  SYMEND EQU     *             END OF SYMBOL TABLE.     
                              *     
      06141  0 00000 0 00000  TFILE                        PRIMARY FILE NAME. 
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 59    
                           FLOOUT.       FLOATING POINT OUTPUT ROUTINE.             
                  
      06142  0634 00 4 06241  FLOOUT SXA     FXC,4         SAVE XR'S.   
      06143  0634 00 2 06242         SXA     FXB,2    
      06144  0634 00 1 06243         SXA     FXA,1    
      06145  0601 00 0 06245         STO     FNUM          SAVE THE INPUT NUMBER.   
      06146  0131 00 0 00000         XCA                   MOVE IT TO THE MQ. 
      06147 -0500 00 0 11316         CAL     =H00000-      ASSUME NEGATIVE.   
      06150  0162 00 0 06152         TQP     *+2           IF IT IS,    
      06151  0074 00 4 02137         TSX     TYO,4         PRINT THE SIGN.    
      06152  0131 00 0 00000         XCA                   GET NUMBER BACK INTO THE AC.   
      06153 -0100 00 0 06163         TNZ     REG           IF NUMBER .E. ZERO, USE BRIEF FORM.  
      06154 -0754 00 0 00000         ZAC                   THEN PRINT A ZERO. 
      06155  0074 00 4 02137         TSX     TYO,4    
      06156                          TYO     =H00000.      THEN A PERIOD.     
      06160 -0754 00 0 00000         ZAC                   THEN ANOTHER ZERO. 
      06161  0074 00 4 02137         TSX     TYO,4    
      06162  0020 00 0 06241         TRA     FXC           THEN EXIT.   
                              *     
      06163  0131 00 0 00000  REG    XCA                   GET NUMBER INTO THE MQ.  
      06164 -0754 00 0 00000         ZAC                   CLEAR THE AC.
      06165  0765 00 0 00000         LRS     0             MAKE MQ POSITIVE.  
      06166  0763 00 0 00010         LLS     8             GET EXPONENT INTO THE AC.
      06167  0402 00 0 11327         SUB     =128          NORMALIZE IT.
      06170  0120 00 0 06172         TPL     *+2           IF NEGATIVE, 
      06171  0402 00 0 11302         SUB     =1            BIAS EXPONENT.     
      06172  0131 00 0 00000         XCA                   PLACE IT IN THE MQ.
      06173  0204 14 0 11330         VLM     =.30103B23,,12 CONVERT TO DECIMALS.    
      06174  0734 00 1 00000         PAX     ,1            PLACE RESULT IN XR 1.    
      06175  0601 00 0 06246         STO     XPNT          SAVE EXPONENT.     
      06176 -0120 00 0 06203         TMI     NEG           GO TO MULTIPLY SECTION IF NEGATIVE.  
      06177  0500 00 0 06245         CLA     FNUM          GET THE NUMBER.    
      06200  0241 00 1 01330         FDP     TEN,1         NORMALIZE IT.
      06201  0131 00 0 00000         XCA                   MOVE TO THE AC.    
      06202  0020 00 0 06205         TRA     NOR           GO NORMALIZE.
                              *     
      06203  0560 00 0 06245  NEG    LDQ     FNUM          GET THE NUMBER.    
      06204  0260 00 1 01330         FMP     TEN,1         NORMALIZE IT.
      06205  0760 00 0 00003  NOR    SSP                   CHECK MAGNITUDE OF NUMBER.     
      06206  0560 00 0 11336         LDQ     =O200777777777 COMPARE W/ ALMOST 1.0.  
      06207  0040 00 0 06215         TLQ     SKIP          IF .G. 1., SKIP.   
      06210  0131 00 0 00000         XCA                   PUT RESULT IN MQ.  
      06211  0500 00 0 06246         CLA     XPNT          ADJUST EXPONENT.   
      06212  0402 00 0 11302         SUB     =1 
      06213  0601 00 0 06246         STO     XPNT     
      06214  0260 00 0 11337         FMP     =10.          NORMALIZE.   
      06215 -0300 00 0 11342  SKIP   UFA     =O233000000000 GET INTEGER.
      06216  0734 00 1 00000         PAX     ,1            PUT IT IN XR 1.    
      06217  0763 00 0 00010         LLS     8             NORMAL FRACTION IN MQ.   
      06220  0754 00 1 00000         PXA     ,1            GET THE DIGIT.     
      06221  0074 00 4 02137         TSX     TYO,4         TYPE IT.     
      06222                          TYO     =H00000.      TYPE A DECIMAL POINT.    
      06224  0774 00 1 00010         AXT     8,1           SET UP FOR MAXIMUM OF 8 DIGITS.
      06225  0131 00 0 00000  FRAC   XCA                   MOVE THE REST OF THE NUMBER INTO THE AC.   
      06226  0100 00 0 06233         TZE     FXP           IF ZERO, GO PRINT THE EXPONENT.
      06227  0131 00 0 00000         XCA                   OTHERWISE, MOVE IT BACK TO THE MQ.   
      06230  0200 00 0 11307         MPY     =10           GET THE NEXT DIGIT.
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 60    
                           FLOOUT.       FLOATING POINT OUTPUT ROUTINE.             
                  
      06231  0074 00 4 02137         TSX     TYO,4         TYPE IT.     
      06232  2 00001 1 06225         TIX     FRAC,1,1      GO BACK FOR THE NEXT DIGIT IF ANY.   
      06233 -0520 00 0 06246  FXP    NZT     XPNT          IS THE EXPONENT ZERO.Q   
      06234  0020 00 0 06241         TRA     FXC           YES, SKIP IT.
      06235                          TYO     =H00000E      TYPE THE 'E'.
      06237                          INTOUT  XPNT          TYPE THE EXPONENT. 
      06241  0774 00 4 00000  FXC    AXT     ..,4          RESTORE THE XR'S.  
      06242  0774 00 2 00000  FXB    AXT     ..,2     
      06243  0774 00 1 00000  FXA    AXT     ..,1     
      06244  0020 00 4 00001         TRA     1,4           EXIT.  
                              *     
      06245  0 00000 0 00000  FNUM                         STORAGE FOR THE NUMBER TO BE OUTPUT. 
      06246  0 00000 0 00000  XPNT                         STORAGE FOR THE EXPONENT.
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 61    
                                         INTEGER (BASE 10 AND 8) OUTPUT.            
                  
                              *              OCTOUT.       OCTAL OUTPUT.
      06247  0560 00 0 11305  OCTOUT LDQ     =O10          BASE IS 8.   
      06250  0020 00 0 06253         TRA     IJON          GO JOIN INTOUT AND JNTOUT.     
                              *     
                              *              DECOUT.       INTEGER DECIMAL OUTPUT.  
      06251  0771 00 0 00022  DECOUT ARS     18            SHIFT DECREMENT INTEGER INTO ADDRESS.
      06252  0560 00 0 11307  INTOUT LDQ     =10           BASE IS 10.  
      06253 -0600 00 0 01103  IJON   STQ     BASE          SAVE THE BASE.     
      06254  0634 00 4 06301         SXA     IXC,4         SAVE RETURN INDEX. 
      06255  0634 00 2 06300         SXA     IXB,2    
      06256  0601 00 0 06303         STO     CQ            SAVE THE INPUT WORD.     
      06257  0131 00 0 00000         XCA                   PREPARE TO OUTPUT SIGN.  
      06260 -0500 00 0 11316         CAL     =H00000-      GET A MINUS SIGN.  
      06261  0162 00 0 06263         TQP     *+2           IF THE SIGN IS NEGATIVE, 
      06262  0074 00 4 02137         TSX     TYO,4         PRINT THE SIGN.    
      06263  0774 00 2 00001         AXT     1,2           SET POINTER TO THE BEGINNING OF THE BUFFER.
      06264  0600 00 0 06320         STZ     BUFF+12       INSERT ZERO INTO BUFFER INITIALLY.   
      06265  0500 00 0 06303  INEXT  CLA     CQ            GET THE (REMAINING) NUMBER.    
      06266  0100 00 0 06274         TZE     IFIX          IF ZERO, QUIT.     
      06267  0765 00 0 00043         LRS     35            IF NOT, SHIFT INTO MQ FOR DIVISION.  
      06270  0221 00 0 01103         DVP     BASE          GET NEXT DIGIT IN THE AC.
      06271 -0600 00 0 06303         STQ     CQ            SAVE THE NEW NUMBER.     
      06272  0602 00 2 06321         SLW     BUFF+13,2     SAVE THIS DIGIT.   
      06273  1 00001 2 06265         TXI     INEXT,2,1     GO GET THE NEXT DIGIT.   
                              *     
      06274  2 00001 2 06275  IFIX   TIX     *+1,2,1       BOUNCE OVER FIRST CHARACTER IF ANY.  
      06275 -0500 00 2 06321  IFOX   CAL     BUFF+13,2     GET THE CHARACTER TO BE TYPED. 
      06276  0074 00 4 02137         TSX     TYO,4         TYPE IT.     
      06277  2 00001 2 06275         TIX     IFOX,2,1      COUNT AND GET NEXT CHARACTER IF ANY. 
      06300  0774 00 2 00000  IXB    AXT     ..,2          RESTORE THE XR'S.  
      06301  0774 00 4 00000  IXC    AXT     ..,4     
      06302  0020 00 4 00001         TRA     1,4           EXIT.  
                              *     
      06303  0 00000 0 00000  CQ                           STORAGE FOR THE WORD BEING CONVERTED.
                              *     
      06304                   BUFF   BSS     13            OUTPUT CHARACTER ARRAY.  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 62    
                           DERR.         DISK ERROR DIAGNOSTIC ROUTINE.             
                  
      06321                   DERR   IODIAG  ((DIAG,,DILTH)) GET THE INFORMATION.   
      06323 -0500 00 0 06420         CAL     DISUBR        GET THE SUBROUTINE NAME. 
      06324                          TEQ     OPEN1,=HOPEN  GO CHECK ERROR CODE IF IT IS 'OPEN'. 
      06327                   NOPE   BCDOUT  =HERROR       GIVE GENERAL COMMENT.    
      06331                          OCTOUT  DICODE        TYPE THE ERROR CODE.     
      06333                          BCDOUT  (=H FROM )    ..     
      06335                          NAMOUT  DISUBR        TYPE THE SUBROUTINE NAME.
      06337                          TYPA    1,( FOR *)    ..     
      06341  0074 00 4 02201         TSX     QUOTE,4       QUOTE THE FILE NAMES.    
      06342                          NAMOUT  DIN1          TYPE THE FILE NAMES.     
      06344                          TYO     =H00000       ..     
      06346                          NAMOUT  DIN2          ..     
      06350  0074 00 4 02201         TSX     QUOTE,4       ..     
      06351                          TYO     =H00000.      TERMINATE THE SENTENCE.  
      06353  0074 00 4 02175         TSX     CR,4          RETURN THE CARRIAGE.     
      06354 -0500 00 0 06420         CAL     DISUBR        GET THE SUBROUTINE NAME AGAIN. 
      06355                          TEQ     OOPS,=HOPEN   IGNORE IF 'OPEN'.  
      06360                          TEQ     OOPS,=HCLOSE  OR IF 'CLOSE'.     
      06363                          CLOSE   (DIN1,DIN2,OOPS) OTHERWISE, TRY TO CLOSE IT. 
      06367  0020 00 0 00726         TRA     OOPS          GO SET ERROR FLAG. 
                              *     
      06370 -0500 00 0 06421  OPEN1  CAL     DICODE        GET THE ERROR CODE.
      06371                          TEQ     OPEN2,=12     IS IT 'FILE NOT FOUND'.Q 
      06374                          TNE     NOPE,=6       NO, IS IT 'LINKED FILE NOT FOUND'.Q  
      06400                          TYPA    2,(LINKED *)  YES, START THE COMMENT.  
      06402                   OPEN2  TYPA    1,(FILE *)    ..     
      06404  0074 00 4 02201         TSX     QUOTE,4       TYPE THE FILE NAMES.     
      06405                          NAMOUT  DIN1          ..     
      06407                          TYO     =H00000       ..     
      06411                          NAMOUT  DIN2          ..     
      06413  0074 00 4 02201         TSX     QUOTE,4       ..     
      06414                          TYPE    2,( NOT FOUND.*) END THE COMMENT.
      06416  0020 00 0 00726         TRA     OOPS          GO SET ERROR FLAG. 
                              *     
                       06417  DIAG   EQU     *             DISK DIAGNOSTIC INFORMATION ARRAY..  
      06417  0 00000 0 00000  DICALL                       CALLER'S LOCATION. 
      06420  0 00000 0 00000  DISUBR                       DISK SUBROUTINE NAME.    
      06421  0 00000 0 00000  DICODE                       ERROR CODE.  
      06422  0 00000 0 00000  DIOCOD                       I/O ERROR CODE.    
      06423  0 00000 0 00000  DIN1                         FIRST NAME OF THE FILE.  
      06424  0 00000 0 00000  DIN2                         SECOND NAME OF THE FILE. 
                       00006  DILTH  EQU     *-DIAG        LENGTH OF THE ARRAY.     
                              *     
                       00660  BUFLTH EQU     432           SIZE OF PRIMARY BUFFERS NEEDED.
      06425                   BUF1   BSS     BUFLTH        THE BUFFER FOR GENERAL USE.    
      07305                   BUF2   BSS     BUFLTH        THE BUFFER FOR REQUEST FILES.  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 63    
                           OPBCD.        GET BCD CODE, GIVEN BINARY VALUE.          
                  
      10165  0634 00 4 10220  OPBCD  SXA     OPXR,4   
      10166  0600 00 0 10253         CLEAR   FLAG     
      10167 -0320 00 0 11377         ANA     =O777700007777 GET RID OF IRRELEVANT PARTS OF THE WORD.  
      10170  0074 00 4 10204         TSX     OPSCH,4       SEARCH TABLE.
      10171  0020 00 0 10202         TRA     FND
      10172 -0320 00 0 11376         ANA     =O777700000000 GET RID OF ADDRESS.     
      10173  0074 00 4 10204         TSX     OPSCH,4       TRY AGAIN.   
      10174  0020 00 0 10202         TRA     FND
      10175  0771 00 0 00040         ARS     32            RETURN IF NOT IN TABLE, USE PREFIX.  
      10176 -0320 00 0 11312         ANA     =O16     
      10177  0734 00 4 00000         PAX     ,4            SET INDEX.   
      10200  0767 00 0 00040         ALS     32            RESTORE AC.  
      10201  0560 00 4 11132         LDQ     OPEND-2,4     PICK UP BCD OP. CODE.    
      10202  0534 00 4 10220  FND    LXA     OPXR,4   
      10203  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      10204  0634 00 4 10212  OPSCH  SXA     OSXR,4   
      10205  0774 00 4 00574         AXT     OPEND-OPORG,4 SET UP COUNT.
      10206                          TEQ     FNDIT,(OPEND+1,4) IS THIS THE ENTRY.Q  
      10211  2 00002 4 10206         TIX     *-3,4,2  
      10212  0774 00 4 00000  OSXR   AXT     ..,4          NOT IN TABLE, EXIT.
      10213  0020 00 4 00002         TRA     2,4
                              *     
      10214  0560 00 4 11134  FNDIT  LDQ     OPEND,4       PICK UP THE BCD CHARACTERS.    
      10215  0534 00 4 10212         LXA     OSXR,4   
      10216  0020 00 4 00001         TRA     1,4           EXIT W/ BINARY IN AC, BCD IN MQ.     
                              *     
      10217  0 00000 0 00000  OPCDE                        BCD OP CODE BEING LOOKED UP.   
      10220  0 00000 0 00000  OPXR                         STORAGE FOR XR 4 (OPBIN).
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 64    
                           OPBIN.        GET BINARY VALUE, GIVEN BCD CODE.          
                  
      10221  0634 00 4 10220  OPBIN  SXA     OPXR,4   
      10222  0602 00 0 10217         SLW     OPCDE    
      10223 -0320 00 0 11326         ANA     =O77     
      10224                          TEQ     OPFLG,=H00000* TAKE CARE OF INDIRECT FLAG.   
      10227  0600 00 0 10253         STZ     FLAG          NOT INDIRECT.  RESET FLAG.     
      10230 -0500 00 0 10217         CAL     OPCDE    
      10231  0074 00 4 02546  OPRET  TSX     LADJ,4        ADJUST THE CODE TO THE LEFT.   
      10232  0774 00 4 00660         AXT     OPEND-OPPRFX,4 SET UP COUNTER.   
      10233                   OPLK   TEQ     OPFND,(OPEND,4) IS THIS IT.Q     
      10236  2 00002 4 10233         TIX     OPLK,4,2      TRY NEXT WORD.     
      10237  0020 00 0 00717         TRA     UNDEF         COMPLAIN ABOUT UNDEFINED SYMBOL.     
                              *     
      10240 -0500 00 4 11135  OPFND  CAL     OPEND+1,4     PICK UP CODE.
      10241 -0501 00 0 10253         ORA     FLAG     
      10242  0534 00 4 10220         LXA     OPXR,4   
      10243  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
      10244 -0500 00 0 11333  OPFLG  CAL     =O60000000     
      10245  0602 00 0 10253         SLW     FLAG     
      10246  0560 00 0 10217         LDQ     OPCDE         GET RID OF '*'.    
      10247 -0500 00 0 11367         CAL     =H 
      10250 -0765 00 0 00006         LGR     6             SHIFT OFF '*,' ENTER BLANK.    
      10251 -0130 00 0 00000         XCL  
      10252  0020 00 0 10231         TRA     OPRET    
                              *     
      10253  0 00000 0 00000  FLAG                         INDIRECT FLAG.     
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 65    
                                         TABLE OF OPERATION CODES.                  
                  
                              RHC    MACRO   A  
                                     IRP     A  
                                     GEN     ,BCI,(1,A)    GENERATE BCD CODE. 
                                     GEN     ,A,(0,0,0)    GENERATE BINARY VALUE.   
                                     IRP  
                                     END     RHC
                              *     
            -0 17560 0 05336  PMC    OPSYN   SHOW          *REVIVE DEFINITION OF PMC TO PRINT TABLE.  
                              *     
                              *      BCD TO BINARY OPERATION CODE TABLE STARTS HERE.
                       10254  OPPRFX EQU     *  
      10254                          RHC     ...
      10254  333333606060            BCI     1,...                                                            .002
      10255  0 00000 0 00000         ...     0,0,0                                                            .002
      10256                          RHC     PON
      10256  474645606060            BCI     1,PON                                                            .002
      10257  1 00000 0 00000         PON     0,0,0                                                            .002
      10260                          RHC     ONE
      10260  464525606060            BCI     1,ONE                                                            .002
      10261  1 00000 0 00000         ONE     0,0,0                                                            .002
      10262                          RHC     PTW
      10262  476366606060            BCI     1,PTW                                                            .002
      10263  2 00000 0 00000         PTW     0,0,0                                                            .002
      10264                          RHC     BLK           BLOCK. 
      10264  224342606060            BCI     1,BLK                                                            .002
      10265  2 00000 0 00000         BLK     0,0,0                                                            .002
      10266                          RHC     TWO
      10266  636646606060            BCI     1,TWO                                                            .002
      10267  2 00000 0 00000         TWO     0,0,0                                                            .002
      10270                          RHC     PTH
      10270  476330606060            BCI     1,PTH                                                            .002
      10271  3 00000 0 00000         PTH     0,0,0                                                            .002
      10272                          RHC     (BRN,PAR)     BRANCH NEVER, PARAMETER. 
      10272  225145606060            BCI     1,BRN                                                            .002
      10273  3 00000 0 00000         BRN     0,0,0                                                            .002
      10274  472151606060            BCI     1,PAR                                                            .002
      10275  3 00000 0 00000         PAR     0,0,0                                                            .002
      10276                          RHC     THREE    
      10276  633051252560            BCI     1,THREE                                                          .002
      10277  3 00000 0 00000         THREE   0,0,0                                                            .002
      10300                          RHC     FOR
      10300  264651606060            BCI     1,FOR                                                            .002
      10301 -0 00000 0 00000         FOR     0,0,0                                                            .002
      10302                          RHC     FOUR     
      10302  264664516060            BCI     1,FOUR                                                           .002
      10303 -0 00000 0 00000         FOUR    0,0,0                                                            .002
      10304                          RHC     MON
      10304  444645606060            BCI     1,MON                                                            .002
      10305 -1 00000 0 00000         MON     0,0,0                                                            .002
      10306                          RHC     FVE
      10306  266525606060            BCI     1,FVE                                                            .002
      10307 -1 00000 0 00000         FVE     0,0,0                                                            .002
      10310                          RHC     (FMT,IOP,ENDIO)  I/O LIST PSEUDOINSTRUCTIONS.
      10310  264463606060            BCI     1,FMT                                                            .002
      10311 -1 00000 0 00000         FMT     0,0,0                                                            .002
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 66    
                                         TABLE OF OPERATION CODES.                  
                  
      10312  314647606060            BCI     1,IOP                                                            .002
      10313 -1 00000 0 00000         IOP     0,0,0                                                            .002
      10314  254524314660            BCI     1,ENDIO                                                          .002
      10315 -1 00000 0 00000         ENDIO   0,0,0                                                            .002
      10316                          RHC     FIVE     
      10316  263165256060            BCI     1,FIVE                                                           .002
      10317 -1 00000 0 00000         FIVE    0,0,0                                                            .002
      10320                          RHC     SIX
      10320  623167606060            BCI     1,SIX                                                            .002
      10321 -2 00000 0 00000         SIX     0,0,0                                                            .002
      10322                          RHC     MTW
      10322  446366606060            BCI     1,MTW                                                            .002
      10323 -2 00000 0 00000         MTW     0,0,0                                                            .002
      10324                          RHC     MTH
      10324  446330606060            BCI     1,MTH                                                            .002
      10325 -3 00000 0 00000         MTH     0,0,0                                                            .002
      10326                          RHC     BRA           BRANCH.
      10326  225121606060            BCI     1,BRA                                                            .002
      10327 -3 00000 0 00000         BRA     0,0,0                                                            .002
      10330                          RHC     XIT           FORTRAN'S NAME FOR 'TTR'.
      10330  673163606060            BCI     1,XIT                                                            .002
      10331  0021 00 0 00000         XIT     0,0,0                                                            .002
      10332                          RHC     (ZSA,ZSD,ZAC)  ZERO ADDRESS, DECREMENT, AC.  
      10332  716221606060            BCI     1,ZSA                                                            .002
      10333  0634 00 0 00000         ZSA     0,0,0                                                            .002
      10334  716224606060            BCI     1,ZSD                                                            .002
      10335 -0634 00 0 00000         ZSD     0,0,0                                                            .002
      10336  712123606060            BCI     1,ZAC                                                            .002
      10337 -0754 00 0 00000         ZAC     0,0,0                                                            .002
                              *      BINARY TO BCD OPERATION CODE TABLE STARTS HERE.
      10340                   OPORG  RHC     TRA
      10340  635121606060            BCI     1,TRA                                                            .002
      10341  0020 00 0 00000         TRA     0,0,0                                                            .002
      10342                          RHC     HTR
      10342  306351606060            BCI     1,HTR                                                            .002
      10343  0000 00 0 00000         HTR     0,0,0                                                            .002
      10344                          RHC     EMTM     
      10344  254463446060            BCI     1,EMTM                                                           .002
      10345 -0760 00 0 00016         EMTM    0,0,0                                                            .002
      10346                          RHC     LMTM     
      10346  434463446060            BCI     1,LMTM                                                           .002
      10347  0760 00 0 00016         LMTM    0,0,0                                                            .002
      10350                          RHC     (LRI,LPI,SEA,SEB)    
      10350  435131606060            BCI     1,LRI                                                            .002
      10351  0562 00 0 00000         LRI     0,0,0                                                            .002
      10352  434731606060            BCI     1,LPI                                                            .002
      10353 -0564 00 0 00000         LPI     0,0,0                                                            .002
      10354  622521606060            BCI     1,SEA                                                            .002
      10355 -0761 00 0 00041         SEA     0,0,0                                                            .002
      10356  622522606060            BCI     1,SEB                                                            .002
      10357 -0761 00 0 00042         SEB     0,0,0                                                            .002
      10360                          RHC     PCA
      10360  472321606060            BCI     1,PCA                                                            .002
      10361  0756 00 0 00000         PCA     0,0,0                                                            .002
      10362                          RHC     PCD
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 67    
                                         TABLE OF OPERATION CODES.                  
                  
      10362  472324606060            BCI     1,PCD                                                            .002
      10363 -0756 00 0 00000         PCD     0,0,0                                                            .002
      10364                          RHC     SCA
      10364  622321606060            BCI     1,SCA                                                            .002
      10365  0636 00 0 00000         SCA     0,0,0                                                            .002
      10366                          RHC     SCD
      10366  622324606060            BCI     1,SCD                                                            .002
      10367 -0636 00 0 00000         SCD     0,0,0                                                            .002
      10370                          RHC     DLD
      10370  244324606060            BCI     1,DLD                                                            .002
      10371  0443 00 0 00000         DLD     0,0,0                                                            .002
      10372                          RHC     DST
      10372  246263606060            BCI     1,DST                                                            .002
      10373 -0603 00 0 00000         DST     0,0,0                                                            .002
      10374                          RHC     DFAD     
      10374  242621246060            BCI     1,DFAD                                                           .002
      10375  0301 00 0 00000         DFAD    0,0,0                                                            .002
      10376                          RHC     DUFA     
      10376  246426216060            BCI     1,DUFA                                                           .002
      10377 -0301 00 0 00000         DUFA    0,0,0                                                            .002
      10400                          RHC     DFSB     
      10400  242662226060            BCI     1,DFSB                                                           .002
      10401  0303 00 0 00000         DFSB    0,0,0                                                            .002
      10402                          RHC     DUFS     
      10402  246426626060            BCI     1,DUFS                                                           .002
      10403 -0303 00 0 00000         DUFS    0,0,0                                                            .002
      10404                          RHC     DFAM     
      10404  242621446060            BCI     1,DFAM                                                           .002
      10405  0305 00 0 00000         DFAM    0,0,0                                                            .002
      10406                          RHC     DUAM     
      10406  246421446060            BCI     1,DUAM                                                           .002
      10407 -0305 00 0 00000         DUAM    0,0,0                                                            .002
      10410                          RHC     DFSM     
      10410  242662446060            BCI     1,DFSM                                                           .002
      10411  0307 00 0 00000         DFSM    0,0,0                                                            .002
      10412                          RHC     DUSM     
      10412  246462446060            BCI     1,DUSM                                                           .002
      10413 -0307 00 0 00000         DUSM    0,0,0                                                            .002
      10414                          RHC     DFMP     
      10414  242644476060            BCI     1,DFMP                                                           .002
      10415  0261 00 0 00000         DFMP    0,0,0                                                            .002
      10416                          RHC     DUFM     
      10416  246426446060            BCI     1,DUFM                                                           .002
      10417 -0261 00 0 00000         DUFM    0,0,0                                                            .002
      10420                          RHC     DFDH     
      10420  242624306060            BCI     1,DFDH                                                           .002
      10421 -0240 00 0 00000         DFDH    0,0,0                                                            .002
      10422                          RHC     DFDP     
      10422  242624476060            BCI     1,DFDP                                                           .002
      10423 -0241 00 0 00000         DFDP    0,0,0                                                            .002
      10424                          RHC     TTR
      10424  636351606060            BCI     1,TTR                                                            .002
      10425  0021 00 0 00000         TTR     0,0,0                                                            .002
      10426                          RHC     TLQ
      10426  634350606060            BCI     1,TLQ                                                            .002
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 68    
                                         TABLE OF OPERATION CODES.                  
                  
      10427  0040 00 0 00000         TLQ     0,0,0                                                            .002
      10430                          RHC     IIA
      10430  313121606060            BCI     1,IIA                                                            .002
      10431  0041 00 0 00000         IIA     0,0,0                                                            .002
      10432                          RHC     TIO
      10432  633146606060            BCI     1,TIO                                                            .002
      10433  0042 00 0 00000         TIO     0,0,0                                                            .002
      10434                          RHC     OAI
      10434  462131606060            BCI     1,OAI                                                            .002
      10435  0043 00 0 00000         OAI     0,0,0                                                            .002
      10436                          RHC     PAI
      10436  472131606060            BCI     1,PAI                                                            .002
      10437  0044 00 0 00000         PAI     0,0,0                                                            .002
      10440                          RHC     TIF
      10440  633126606060            BCI     1,TIF                                                            .002
      10441  0046 00 0 00000         TIF     0,0,0                                                            .002
      10442                          RHC     IIR
      10442  313151606060            BCI     1,IIR                                                            .002
 F    10443  0051 00  000000         IIR     0,0,0                                                            .002
      10444                          RHC     RFT
      10444  512663606060            BCI     1,RFT                                                            .002
 F    10445  0054 00  000000         RFT     0,0,0                                                            .002
      10446                          RHC     SIR
      10446  623151606060            BCI     1,SIR                                                            .002
 F    10447  0055 00  000000         SIR     0,0,0                                                            .002
      10450                          RHC     RNT
      10450  514563606060            BCI     1,RNT                                                            .002
 F    10451  0056 00  000000         RNT     0,0,0                                                            .002
      10452                          RHC     RIR
      10452  513151606060            BCI     1,RIR                                                            .002
 F    10453  0057 00  000000         RIR     0,0,0                                                            .002
      10454                          RHC     (TCOA,TCOB,TCOC,TCOD,TCOE,TCOF,TCOG,TCOH)    
      10454  632346216060            BCI     1,TCOA                                                           .002
      10455  0060 00 0 00000         TCOA    0,0,0                                                            .002
      10456  632346226060            BCI     1,TCOB                                                           .002
      10457  0061 00 0 00000         TCOB    0,0,0                                                            .002
      10460  632346236060            BCI     1,TCOC                                                           .002
      10461  0062 00 0 00000         TCOC    0,0,0                                                            .002
      10462  632346246060            BCI     1,TCOD                                                           .002
      10463  0063 00 0 00000         TCOD    0,0,0                                                            .002
      10464  632346256060            BCI     1,TCOE                                                           .002
      10465  0064 00 0 00000         TCOE    0,0,0                                                            .002
      10466  632346266060            BCI     1,TCOF                                                           .002
      10467  0065 00 0 00000         TCOF    0,0,0                                                            .002
      10470  632346276060            BCI     1,TCOG                                                           .002
      10471  0066 00 0 00000         TCOG    0,0,0                                                            .002
      10472  632346306060            BCI     1,TCOH                                                           .002
      10473  0067 00 0 00000         TCOH    0,0,0                                                            .002
      10474                          RHC     TSX
      10474  636267606060            BCI     1,TSX                                                            .002
      10475  0074 00 0 00000         TSX     0,0,0                                                            .002
      10476                          RHC     TZE
      10476  637125606060            BCI     1,TZE                                                            .002
      10477  0100 00 0 00000         TZE     0,0,0                                                            .002
      10500                          RHC     TIA
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 69    
                                         TABLE OF OPERATION CODES.                  
                  
      10500  633121606060            BCI     1,TIA                                                            .002
      10501  0101 00 0 00000         TIA     0,0,0                                                            .002
      10502                          RHC     CVR
      10502  236551606060            BCI     1,CVR                                                            .002
      10503  0114 00 0 00000         CVR     0,0,0                                                            .002
      10504                          RHC     TPL
      10504  634743606060            BCI     1,TPL                                                            .002
      10505  0120 00 0 00000         TPL     0,0,0                                                            .002
      10506                          RHC     XCA
      10506  672321606060            BCI     1,XCA                                                            .002
      10507  0131 00 0 00000         XCA     0,0,0                                                            .002
      10510                          RHC     TOV
      10510  634665606060            BCI     1,TOV                                                            .002
      10511  0140 00 0 00000         TOV     0,0,0                                                            .002
      10512                          RHC     TQO
      10512  635046606060            BCI     1,TQO                                                            .002
      10513  0161 00 0 00000         TQO     0,0,0                                                            .002
      10514                          RHC     TQP
      10514  635047606060            BCI     1,TQP                                                            .002
      10515  0162 00 0 00000         TQP     0,0,0                                                            .002
      10516                          RHC     MPY
      10516  444770606060            BCI     1,MPY                                                            .002
      10517  0200 00 0 00000         MPY     0,0,0                                                            .002
      10520                          RHC     VLM
      10520  654344606060            BCI     1,VLM                                                            .002
      10521  0204 00 0 00000         VLM     0,0,0                                                            .002
      10522                          RHC     DVH
      10522  246530606060            BCI     1,DVH                                                            .002
      10523  0220 00 0 00000         DVH     0,0,0                                                            .002
      10524                          RHC     DVP
      10524  246547606060            BCI     1,DVP                                                            .002
      10525  0221 00 0 00000         DVP     0,0,0                                                            .002
      10526                          RHC     VDH
      10526  652430606060            BCI     1,VDH                                                            .002
      10527  0224 00 0 00000         VDH     0,0,0                                                            .002
      10530                          RHC     VDP
      10530  652447606060            BCI     1,VDP                                                            .002
      10531  0225 00 0 00000         VDP     0,0,0                                                            .002
      10532                          RHC     FDH
      10532  262430606060            BCI     1,FDH                                                            .002
      10533  0240 00 0 00000         FDH     0,0,0                                                            .002
      10534                          RHC     FDP
      10534  262447606060            BCI     1,FDP                                                            .002
      10535  0241 00 0 00000         FDP     0,0,0                                                            .002
      10536                          RHC     FMP
      10536  264447606060            BCI     1,FMP                                                            .002
      10537  0260 00 0 00000         FMP     0,0,0                                                            .002
      10540                          RHC     FAD
      10540  262124606060            BCI     1,FAD                                                            .002
      10541  0300 00 0 00000         FAD     0,0,0                                                            .002
      10542                          RHC     FSB
      10542  266222606060            BCI     1,FSB                                                            .002
      10543  0302 00 0 00000         FSB     0,0,0                                                            .002
      10544                          RHC     FAM
      10544  262144606060            BCI     1,FAM                                                            .002
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 70    
                                         TABLE OF OPERATION CODES.                  
                  
      10545  0304 00 0 00000         FAM     0,0,0                                                            .002
      10546                          RHC     FSM
      10546  266244606060            BCI     1,FSM                                                            .002
      10547  0306 00 0 00000         FSM     0,0,0                                                            .002
      10550                          RHC     ANS
      10550  214562606060            BCI     1,ANS                                                            .002
      10551  0320 00 0 00000         ANS     0,0,0                                                            .002
      10552                          RHC     ERA
      10552  255121606060            BCI     1,ERA                                                            .002
      10553  0322 00 0 00000         ERA     0,0,0                                                            .002
      10554                          RHC     CAS
      10554  232162606060            BCI     1,CAS                                                            .002
      10555  0340 00 0 00000         CAS     0,0,0                                                            .002
      10556                          RHC     ACL
      10556  212343606060            BCI     1,ACL                                                            .002
      10557  0361 00 0 00000         ACL     0,0,0                                                            .002
      10560                          RHC     ADD
      10560  212424606060            BCI     1,ADD                                                            .002
      10561  0400 00 0 00000         ADD     0,0,0                                                            .002
      10562                          RHC     ADM
      10562  212444606060            BCI     1,ADM                                                            .002
      10563  0401 00 0 00000         ADM     0,0,0                                                            .002
      10564                          RHC     SUB
      10564  626422606060            BCI     1,SUB                                                            .002
      10565  0402 00 0 00000         SUB     0,0,0                                                            .002
      10566                          RHC     HPR
      10566  304751606060            BCI     1,HPR                                                            .002
      10567  0420 00 0 00000         HPR     0,0,0                                                            .002
      10570                          RHC     IIS
      10570  313162606060            BCI     1,IIS                                                            .002
      10571  0440 00 0 00000         IIS     0,0,0                                                            .002
      10572                          RHC     LDI
      10572  432431606060            BCI     1,LDI                                                            .002
      10573  0441 00 0 00000         LDI     0,0,0                                                            .002
      10574                          RHC     OSI
      10574  466231606060            BCI     1,OSI                                                            .002
      10575  0442 00 0 00000         OSI     0,0,0                                                            .002
      10576                          RHC     OFT
      10576  462663606060            BCI     1,OFT                                                            .002
      10577  0444 00 0 00000         OFT     0,0,0                                                            .002
      10600                          RHC     RIS
      10600  513162606060            BCI     1,RIS                                                            .002
      10601  0445 00 0 00000         RIS     0,0,0                                                            .002
      10602                          RHC     ONT
      10602  464563606060            BCI     1,ONT                                                            .002
      10603  0446 00 0 00000         ONT     0,0,0                                                            .002
      10604                          RHC     CLA
      10604  234321606060            BCI     1,CLA                                                            .002
      10605  0500 00 0 00000         CLA     0,0,0                                                            .002
      10606                          RHC     CLS
      10606  234362606060            BCI     1,CLS                                                            .002
      10607  0502 00 0 00000         CLS     0,0,0                                                            .002
      10610                          RHC     ZET
      10610  712563606060            BCI     1,ZET                                                            .002
      10611  0520 00 0 00000         ZET     0,0,0                                                            .002
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 71    
                                         TABLE OF OPERATION CODES.                  
                  
      10612                          RHC     XEC
      10612  672523606060            BCI     1,XEC                                                            .002
      10613  0522 00 0 00000         XEC     0,0,0                                                            .002
      10614                          RHC     LXA
      10614  436721606060            BCI     1,LXA                                                            .002
      10615  0534 00 0 00000         LXA     0,0,0                                                            .002
      10616                          RHC     LAC
      10616  432123606060            BCI     1,LAC                                                            .002
      10617  0535 00 0 00000         LAC     0,0,0                                                            .002
      10620                          RHC     LDQ
      10620  432450606060            BCI     1,LDQ                                                            .002
      10621  0560 00 0 00000         LDQ     0,0,0                                                            .002
      10622                          RHC     (RCHA,RCHC,RCHE,RCHG)
      10622  512330216060            BCI     1,RCHA                                                           .002
      10623  0540 00 0 00000         RCHA    0,0,0                                                            .002
      10624  512330236060            BCI     1,RCHC                                                           .002
      10625  0541 00 0 00000         RCHC    0,0,0                                                            .002
      10626  512330256060            BCI     1,RCHE                                                           .002
      10627  0542 00 0 00000         RCHE    0,0,0                                                            .002
      10630  512330276060            BCI     1,RCHG                                                           .002
      10631  0543 00 0 00000         RCHG    0,0,0                                                            .002
      10632                          RHC     ENB
      10632  254522606060            BCI     1,ENB                                                            .002
      10633  0564 00 0 00000         ENB     0,0,0                                                            .002
      10634                          RHC     STZ
      10634  626371606060            BCI     1,STZ                                                            .002
      10635  0600 00 0 00000         STZ     0,0,0                                                            .002
      10636                          RHC     STO
      10636  626346606060            BCI     1,STO                                                            .002
      10637  0601 00 0 00000         STO     0,0,0                                                            .002
      10640                          RHC     SLW
      10640  624366606060            BCI     1,SLW                                                            .002
      10641  0602 00 0 00000         SLW     0,0,0                                                            .002
      10642                          RHC     STI
      10642  626331606060            BCI     1,STI                                                            .002
      10643  0604 00 0 00000         STI     0,0,0                                                            .002
      10644                          RHC     STD
      10644  626324606060            BCI     1,STD                                                            .002
      10645  0622 00 0 00000         STD     0,0,0                                                            .002
      10646                          RHC     STT
      10646  626363606060            BCI     1,STT                                                            .002
      10647  0625 00 0 00000         STT     0,0,0                                                            .002
      10650                          RHC     STA
      10650  626321606060            BCI     1,STA                                                            .002
      10651  0621 00 0 00000         STA     0,0,0                                                            .002
      10652                          RHC     STP
      10652  626347606060            BCI     1,STP                                                            .002
      10653  0630 00 0 00000         STP     0,0,0                                                            .002
      10654                          RHC     SXA
      10654  626721606060            BCI     1,SXA                                                            .002
      10655  0634 00 0 00000         SXA     0,0,0                                                            .002
      10656                          RHC     PAX
      10656  472167606060            BCI     1,PAX                                                            .002
      10657  0734 00 0 00000         PAX     0,0,0                                                            .002
      10660                          RHC     PAC
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 72    
                                         TABLE OF OPERATION CODES.                  
                  
      10660  472123606060            BCI     1,PAC                                                            .002
      10661  0737 00 0 00000         PAC     0,0,0                                                            .002
      10662                          RHC     PXA
      10662  476721606060            BCI     1,PXA                                                            .002
      10663  0754 00 0 00000         PXA     0,0,0                                                            .002
      10664                          RHC     PSE           FOLLOWING ARE THE 'EXTENDED' VERSIONS.     
      10664  476225606060            BCI     1,PSE                                                            .002
      10665  0760 00 0 00000         PSE     0,0,0                                                            .002
      10666                          RHC     CLM
      10666  234344606060            BCI     1,CLM                                                            .002
      10667  0760 00 0 00000         CLM     0,0,0                                                            .002
      10670                          RHC     LBT
      10670  432263606060            BCI     1,LBT                                                            .002
      10671  0760 00 0 00001         LBT     0,0,0                                                            .002
      10672                          RHC     CHS
      10672  233062606060            BCI     1,CHS                                                            .002
      10673  0760 00 0 00002         CHS     0,0,0                                                            .002
      10674                          RHC     SSP
      10674  626247606060            BCI     1,SSP                                                            .002
      10675  0760 00 0 00003         SSP     0,0,0                                                            .002
      10676                          RHC     ENK
      10676  254542606060            BCI     1,ENK                                                            .002
      10677  0760 00 0 00004         ENK     0,0,0                                                            .002
      10700                          RHC     IOT
      10700  314663606060            BCI     1,IOT                                                            .002
      10701  0760 00 0 00005         IOT     0,0,0                                                            .002
      10702                          RHC     COM
      10702  234644606060            BCI     1,COM                                                            .002
      10703  0760 00 0 00006         COM     0,0,0                                                            .002
      10704                          RHC     RND
      10704  514524606060            BCI     1,RND                                                            .002
      10705  0760 00 0 00010         RND     0,0,0                                                            .002
      10706                          RHC     FRN
      10706  265145606060            BCI     1,FRN                                                            .002
      10707  0760 00 0 00011         FRN     0,0,0                                                            .002
      10710                          RHC     DCT
      10710  242363606060            BCI     1,DCT                                                            .002
      10711  0760 00 0 00012         DCT     0,0,0                                                            .002
      10712                          RHC     SLN
      10712  624345606060            BCI     1,SLN                                                            .002
      10713  0760 00 0 00140         SLN     0,0,0                                                            .002
      10714                          RHC     SLF
      10714  624326606060            BCI     1,SLF                                                            .002
      10715  0760 00 0 00140         SLF     0,0,0                                                            .002
      10716                          RHC     NOP
      10716  454647606060            BCI     1,NOP                                                            .002
      10717  0761 00 0 00000         NOP     0,0,0                                                            .002
      10720                          RHC     RDS
      10720  512462606060            BCI     1,RDS                                                            .002
      10721  0762 00 0 00000         RDS     0,0,0                                                            .002
      10722                          RHC     LLS
      10722  434362606060            BCI     1,LLS                                                            .002
      10723  0763 00 0 00000         LLS     0,0,0                                                            .002
      10724                          RHC     BSR
      10724  226251606060            BCI     1,BSR                                                            .002
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 73    
                                         TABLE OF OPERATION CODES.                  
                  
      10725  0764 00 0 00200         BSR     0,0,0                                                            .002
      10726                          RHC     LRS
      10726  435162606060            BCI     1,LRS                                                            .002
      10727  0765 00 0 00000         LRS     0,0,0                                                            .002
      10730                          RHC     WRS
      10730  665162606060            BCI     1,WRS                                                            .002
      10731  0766 00 0 00000         WRS     0,0,0                                                            .002
      10732                          RHC     ALS
      10732  214362606060            BCI     1,ALS                                                            .002
      10733  0767 00 0 00000         ALS     0,0,0                                                            .002
      10734                          RHC     WEF
      10734  662526606060            BCI     1,WEF                                                            .002
      10735  0770 00 0 00200         WEF     0,0,0                                                            .002
      10736                          RHC     ARS
      10736  215162606060            BCI     1,ARS                                                            .002
      10737  0771 00 0 00000         ARS     0,0,0                                                            .002
      10740                          RHC     REW
      10740  512566606060            BCI     1,REW                                                            .002
      10741  0772 00 0 00200         REW     0,0,0                                                            .002
      10742                          RHC     AXT
      10742  216763606060            BCI     1,AXT                                                            .002
      10743  0774 00 0 00000         AXT     0,0,0                                                            .002
      10744                          RHC     SDN
      10744  622445606060            BCI     1,SDN                                                            .002
      10745  0776 00 0 00200         SDN     0,0,0                                                            .002
      10746                          RHC     RIA
      10746  513121606060            BCI     1,RIA                                                            .002
      10747 -0042 00 0 00000         RIA     0,0,0                                                            .002
      10750                          RHC     PIA
      10750  473121606060            BCI     1,PIA                                                            .002
      10751 -0046 00 0 00000         PIA     0,0,0                                                            .002
      10752                          RHC     IIL
      10752  313143606060            BCI     1,IIL                                                            .002
 F    10753 -0051 00  000000         IIL     0,0,0                                                            .002
      10754                          RHC     LFT
      10754  432663606060            BCI     1,LFT                                                            .002
 F    10755 -0054 00  000000         LFT     0,0,0                                                            .002
      10756                          RHC     SIL
      10756  623143606060            BCI     1,SIL                                                            .002
 F    10757 -0055 00  000000         SIL     0,0,0                                                            .002
      10760                          RHC     LNT
      10760  434563606060            BCI     1,LNT                                                            .002
 F    10761 -0056 00  000000         LNT     0,0,0                                                            .002
      10762                          RHC     RIL
      10762  513143606060            BCI     1,RIL                                                            .002
 F    10763 -0057 00  000000         RIL     0,0,0                                                            .002
      10764                          RHC     TNZ
      10764  634571606060            BCI     1,TNZ                                                            .002
      10765 -0100 00 0 00000         TNZ     0,0,0                                                            .002
      10766                          RHC     TIB
      10766  633122606060            BCI     1,TIB                                                            .002
      10767 -0101 00 0 00000         TIB     0,0,0                                                            .002
      10770                          RHC     CAQ
      10770  232150606060            BCI     1,CAQ                                                            .002
      10771 -0114 00 0 00000         CAQ     0,0,0                                                            .002
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 74    
                                         TABLE OF OPERATION CODES.                  
                  
      10772                          RHC     TMI
      10772  634431606060            BCI     1,TMI                                                            .002
      10773 -0120 00 0 00000         TMI     0,0,0                                                            .002
      10774                          RHC     XCL
      10774  672343606060            BCI     1,XCL                                                            .002
      10775 -0130 00 0 00000         XCL     0,0,0                                                            .002
      10776                          RHC     TNO
      10776  634546606060            BCI     1,TNO                                                            .002
      10777 -0140 00 0 00000         TNO     0,0,0                                                            .002
      11000                          RHC     CRQ
      11000  235150606060            BCI     1,CRQ                                                            .002
      11001 -0154 00 0 00000         CRQ     0,0,0                                                            .002
      11002                          RHC     MPR
      11002  444751606060            BCI     1,MPR                                                            .002
      11003 -0200 00 0 00000         MPR     0,0,0                                                            .002
      11004                          RHC     UFM
      11004  642644606060            BCI     1,UFM                                                            .002
      11005 -0260 00 0 00000         UFM     0,0,0                                                            .002
      11006                          RHC     UFA
      11006  642621606060            BCI     1,UFA                                                            .002
      11007 -0300 00 0 00000         UFA     0,0,0                                                            .002
      11010                          RHC     UFS
      11010  642662606060            BCI     1,UFS                                                            .002
      11011 -0302 00 0 00000         UFS     0,0,0                                                            .002
      11012                          RHC     UAM
      11012  642144606060            BCI     1,UAM                                                            .002
      11013 -0304 00 0 00000         UAM     0,0,0                                                            .002
      11014                          RHC     USM
      11014  646244606060            BCI     1,USM                                                            .002
      11015 -0306 00 0 00000         USM     0,0,0                                                            .002
      11016                          RHC     ANA
      11016  214521606060            BCI     1,ANA                                                            .002
      11017 -0320 00 0 00000         ANA     0,0,0                                                            .002
      11020                          RHC     LAS
      11020  432162606060            BCI     1,LAS                                                            .002
      11021 -0340 00 0 00000         LAS     0,0,0                                                            .002
      11022                          RHC     SBM
      11022  622244606060            BCI     1,SBM                                                            .002
      11023 -0400 00 0 00000         SBM     0,0,0                                                            .002
      11024                          RHC     CAL
      11024  232143606060            BCI     1,CAL                                                            .002
      11025 -0500 00 0 00000         CAL     0,0,0                                                            .002
      11026                          RHC     ORA
      11026  465121606060            BCI     1,ORA                                                            .002
      11027 -0501 00 0 00000         ORA     0,0,0                                                            .002
      11030                          RHC     NZT
      11030  457163606060            BCI     1,NZT                                                            .002
      11031 -0520 00 0 00000         NZT     0,0,0                                                            .002
      11032                          RHC     LXD
      11032  436724606060            BCI     1,LXD                                                            .002
      11033 -0534 00 0 00000         LXD     0,0,0                                                            .002
      11034                          RHC     LDC
      11034  432423606060            BCI     1,LDC                                                            .002
      11035 -0535 00 0 00000         LDC     0,0,0                                                            .002
      11036                          RHC     (RCHB,RCHD,RCHF,RCHH)
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 75    
                                         TABLE OF OPERATION CODES.                  
                  
      11036  512330226060            BCI     1,RCHB                                                           .002
      11037 -0540 00 0 00000         RCHB    0,0,0                                                            .002
      11040  512330246060            BCI     1,RCHD                                                           .002
      11041 -0541 00 0 00000         RCHD    0,0,0                                                            .002
      11042  512330266060            BCI     1,RCHF                                                           .002
      11043 -0542 00 0 00000         RCHF    0,0,0                                                            .002
      11044  512330306060            BCI     1,RCHH                                                           .002
      11045 -0543 00 0 00000         RCHH    0,0,0                                                            .002
      11046                          RHC     STQ
      11046  626350606060            BCI     1,STQ                                                            .002
      11047 -0600 00 0 00000         STQ     0,0,0                                                            .002
      11050                          RHC     ORS
      11050  465162606060            BCI     1,ORS                                                            .002
      11051 -0602 00 0 00000         ORS     0,0,0                                                            .002
      11052                          RHC     SLQ
      11052  624350606060            BCI     1,SLQ                                                            .002
      11053 -0620 00 0 00000         SLQ     0,0,0                                                            .002
      11054                          RHC     STL
      11054  626343606060            BCI     1,STL                                                            .002
      11055 -0625 00 0 00000         STL     0,0,0                                                            .002
      11056                          RHC     SXD
      11056  626724606060            BCI     1,SXD                                                            .002
      11057 -0634 00 0 00000         SXD     0,0,0                                                            .002
      11060                          RHC     PDX
      11060  472467606060            BCI     1,PDX                                                            .002
      11061 -0734 00 0 00000         PDX     0,0,0                                                            .002
      11062                          RHC     PDC
      11062  472423606060            BCI     1,PDC                                                            .002
      11063 -0737 00 0 00000         PDC     0,0,0                                                            .002
      11064                          RHC     PXD
      11064  476724606060            BCI     1,PXD                                                            .002
      11065 -0754 00 0 00000         PXD     0,0,0                                                            .002
      11066                          RHC     MSE           FOLLOWING ARE THE EXTENDED VERSIONS. 
      11066  446225606060            BCI     1,MSE                                                            .002
      11067 -0760 00 0 00000         MSE     0,0,0                                                            .002
      11070                          RHC     PBT
      11070  472263606060            BCI     1,PBT                                                            .002
      11071 -0760 00 0 00001         PBT     0,0,0                                                            .002
      11072                          RHC     SSM
      11072  626244606060            BCI     1,SSM                                                            .002
      11073 -0760 00 0 00003         SSM     0,0,0                                                            .002
      11074                          RHC     SLT
      11074  624363606060            BCI     1,SLT                                                            .002
      11075 -0760 00 0 00140         SLT     0,0,0                                                            .002
      11076                          RHC     SWT
      11076  626663606060            BCI     1,SWT                                                            .002
      11077  0760 00 0 00160         SWT     0,0,0                                                            .002
      11100                          RHC     LGL
      11100  432743606060            BCI     1,LGL                                                            .002
      11101 -0763 00 0 00000         LGL     0,0,0                                                            .002
      11102                          RHC     BSF
      11102  226226606060            BCI     1,BSF                                                            .002
      11103 -0764 00 0 00200         BSF     0,0,0                                                            .002
      11104                          RHC     LGR
      11104  432751606060            BCI     1,LGR                                                            .002
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 76    
                                         TABLE OF OPERATION CODES.                  
                  
      11105 -0765 00 0 00000         LGR     0,0,0                                                            .002
      11106                          RHC     RUN
      11106  516445606060            BCI     1,RUN                                                            .002
      11107 -0772 00 0 00200         RUN     0,0,0                                                            .002
      11110                          RHC     RQL
      11110  515043606060            BCI     1,RQL                                                            .002
      11111 -0773 00 0 00000         RQL     0,0,0                                                            .002
      11112                          RHC     AXC
      11112  216723606060            BCI     1,AXC                                                            .002
      11113 -0774 00 0 00000         AXC     0,0,0                                                            .002
      11114                          RHC     TXL           FOLLOWING ARE ALL PREFIX CODES.
      11114  636743606060            BCI     1,TXL                                                            .002
      11115 -3 00000 0 00000         TXL     0,0,0                                                            .002
      11116                          RHC     TNX
      11116  634567606060            BCI     1,TNX                                                            .002
      11117 -2 00000 0 00000         TNX     0,0,0                                                            .002
      11120                          RHC     STR
      11120  626351606060            BCI     1,STR                                                            .002
      11121 -1 00000 0 00000         STR     0,0,0                                                            .002
      11122                          RHC     MZE
      11122  447125606060            BCI     1,MZE                                                            .002
      11123 -0 00000 0 00000         MZE     0,0,0                                                            .002
      11124                          RHC     TXH
      11124  636730606060            BCI     1,TXH                                                            .002
      11125  3 00000 0 00000         TXH     0,0,0                                                            .002
      11126                          RHC     TIX
      11126  633167606060            BCI     1,TIX                                                            .002
      11127  2 00000 0 00000         TIX     0,0,0                                                            .002
      11130                          RHC     TXI
      11130  636731606060            BCI     1,TXI                                                            .002
      11131  1 00000 0 00000         TXI     0,0,0                                                            .002
      11132                          RHC     PZE
      11132  477125606060            BCI     1,PZE                                                            .002
      11133  0 00000 0 00000         PZE     0,0,0                                                            .002
                       11134  OPEND  EQU     *  
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 77    
                                         REMOTE SEQUENCES.                          
                  
            -0 17560 0 05336  PMC    OPSYN   SHOW          *REVIVE DEFINITION OF PMC TO PRINT THEM.   
      11134                          RMT     *             GO, GO, GO.  
      11134  224645604146     ..001  BCI     2,BON JOUR.*                                                     .002
      11136  602545234664     ..002  BCI     5, ENCOUNTERED UNEXPECTEDLY.*                                    .002
      11143  254524604626     ..003  BCI     3,END OF REQUEST*                                                .002
      11146  422570600202     ..004  BCI     4,KEY 22 IS NOT DOWN.*                                           .002
      11152  603160663143     ..005  BCI     6, I WILL RETRY EVERY 10 SECONDS.*                               .002
      11160  0101 00 0 11373  SLEEP  TIA     =HSLEEP                                                          .002
      11161  0101 00 0 11372  SETLOC TIA     =HSETLOC                                                         .002
      11162  216460512565     ..006  BCI     2,AU REVOIR.*                                                    .002
      11164  0101 00 0 11343  CHNCOM TIA     =HCHNCOM                                                         .002
      11165  0101 00 0 11350  GETLOC TIA     =HGETLOC                                                         .002
      11166  512547252163     RPTC   BCI     2,REPEAT.*                                                       .002
      11170  632122432560     ..007  BCI     6,TABLE FULL, DEFINITION IGNORED.*                               .002
      11176  603162604546     ..008  BCI     3, IS NOT DEFINED.*                                              .002
      11201  603162604346     ..009  BCI     3, IS LOADED AT *                                                .002
      11204  603162604546     ..010  BCI     3, IS NOT IN CORE.*                                              .002
      11207  466525512643     ..011  BCI     5,OVERFLOW DURING CONVERSION.*                                   .002
      11214  466525512643     ..012  BCI     5,OVERFLOW DURING SHIFTING.*                                     .002
      11221  263347336045     ..013  BCI     5,F.P. NUMBER OUT OF RANGE.*                                     .002
      11226  0101 00 0 11354  OPEN   TIA     =HOPEN                                                           .002
      11227  0101 00 0 11341  BUFFER TIA     =HBUFFER                                                         .002
      11230  0101 00 0 11356  RDWAIT TIA     =HRDWAIT                                                         .002
      11231  0101 00 0 11344  CLOSE  TIA     =HCLOSE                                                          .002
      11232  234644472151     ..050  BCI     3,COMPARISON DONE.*                                              .002
      11235  223145215170     ..051  BCI     6,BINARY CARD IS NON-RELOCATABLE.*                               .002
      11243  0101 00 0 11347  GETCOM TIA     =HGETCOM                                                         .002
      11244  0101 00 0 11346  GETBRK TIA     =HGETBRK                                                         .002
      11245  0101 00 0 11371  SETBRK TIA     =HSETBRK                                                         .002
      11246  0101 00 0 11374  WRFLXA TIA     =HWRFLXA                                                         .002
      11247  632122432560     ..118  BCI     7,TABLE FULL, FIRST SYMBOL NOT INSERTED IS *                     .002
      11256  627044224643     ..125  BCI     3,SYMBOLS LOADED.*                                               .002
      11261  216363254447     ..126  BCI     7,ATTEMPT TO REDEFINE INTERNAL SYMBOL *                          .002
      11270  603127454651     ..127  BCI     2, IGNORED.*                                                     .002
      11272  0101 00 0 11352  IODIAG TIA     =HIODIAG                                                         .002
      11273  602646516054     ..128  BCI     1, FOR *                                                         .002
      11274  433145422524     ..135  BCI     2,LINKED *                                                       .002
      11276  263143256054     ..136  BCI     1,FILE *                                                         .002
      11277  604546636026     ..137  BCI     2, NOT FOUND.*                                                   .002
                              *     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 78    
                                         LITERALS.                                  
                  
                                     END  
                  
        LITERALS  
      11301  000000000000     
      11302  000000000001     
      11303  000000000006     
      11304  000000000007     
      11305  000000000010     
      11306  000000000011     
      11307  000000000012     
      11310  000000000013     
      11311  000000000014     
      11312  000000000016     
      11313  000000000020     
      11314  000000000025     
      11315  000000000033     
      11316  000000000040     
      11317  000000000054     
      11320  000000000055     
      11321  000000000060     
      11322  000000000061     
      11323  000000000070     
      11324  000000000072     
      11325  000000000073     
      11326  000000000077     
      11327  000000000200     
      11330  000000002321     
      11331  000000020000     
      11332  000000077777     
      11333  000060000000     
      11334  077777000000     
      11335  200077000000     
      11336  200777777777     
      11337  204500000000     
      11340  224321454260     
      11341  226426262551     
      11342  233000000000     
      11343  233045234644     
      11344  234346622560     
      11345  255151465160     
      11346  272563225142     
      11347  272563234644     
      11350  272563434623     
      11351  300000000000     
      11352  314624312127     
      11353  400000000000     
      11354  464725456060     
      11355  512426436721     
      11356  512466213163     
      11357  516060606060     
      11360  546060606060     
      11361  556060606060     
      11362  575757575757     
      11363  602425226427     
      11364  602651464460     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 79    
                                         LITERALS.                                  
                  
      11365  606060226262     
      11366  606060606000     
      11367  606060606060     
      11370  606270446322     
      11371  622563225142     
      11372  622563434623     
      11373  624325254760     
      11374  665126436721     
      11375  744421314534     
      11376  777700000000     
      11377  777700007777     
      11400  777777777700     
      11401  777777777777     
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77461 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
      11402 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
       1206      E  1155, 1201
        730     BC    11,   32,   35,   76,  112,  135,  153,  157,  277,  345,  354,  361,  403,  426,  561,  601,  625
                     633,  643,  671, 2703, 2712
       6303     CQ  6256, 6265, 6271
       2175     CR     4,  327,  556,  765, 1414, 1624, 2662, 6353
          0     ..     1,  154,  155,  461,  514,  527,  537,  540,  541,  557,  766, 1067, 1243, 1244, 1337, 1371, 1405
                    1415, 1423, 1654, 1656, 1660, 1661, 1673, 1674, 1675, 1726, 1751, 1764, 1771, 1772, 2005, 2026, 2027
                    2030, 2031, 2101, 2102, 2103, 2131, 2132, 2172, 2217, 2226, 2230, 2270, 2271, 2310, 2336, 2337, 2412
                    2413, 2455, 2526, 2671, 2672, 2673, 2701, 2753, 2771, 3035, 6241, 6242, 6243, 6300, 6301,10212
       2203     MQ  2140, 2173
        733     OP    71,   77,  107,  111,  136
       1067     XR  1015
        734    ADD    72,  120,  140
        736    DEC    74,  134,  146
        671    DEF   250
       1101    DGT  1040, 1045, 1055, 1066, 1142, 1145, 1213, 1231, 1242
       1246    ERR  1167, 1220, 1331
      10202    FND 10171,10174
       1335    FPT  1112, 1206, 1236, 1250, 1257
       1332    FPZ  1114, 1210, 1240, 1252, 1255
       6243    FXA  6144
       6242    FXB  6143
       6241    FXC  6142, 6162, 6234
       6233    FXP  6226
       1423    GWX  1407
        203    ILF    62,  163,  303,  310,  337,  351,  370,  375,  407,  435,  446,  453,  565,  572,  610,  615,  631
                     652,  657,  675,  702,  710, 1030, 1036, 1261, 2707, 2716
       2415    IND  2361
        415    INT  2121
       6300    IXB  6255
       6301    IXC  6254
       6366    ...  1456, 1457, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1500
                    1666, 1667, 1670, 1734, 1735, 1736, 1737, 1740, 1741, 1743, 1744, 1745, 1746, 1761, 1762, 1763, 1764
                    1765, 1766, 1767, 2047, 2050, 2051, 2576, 2577, 2600, 2601, 2602, 2603, 2605, 2606, 2607, 2610, 2612
                    2613, 2614, 2615, 2616, 2617, 2620, 2664, 2665, 2666, 6322, 6364, 6365, 6366
       2701    KXR  2676
       2552    LAR  2566
       2567    LAW  2546, 2552, 2560, 2562, 2565
        202    LOC    63,  311,  312,  416,  420,  421,  530,  577,  641,  703,  713, 1552, 1553, 1611, 1625, 1627, 2777
        157    LOK   105
       1333    MAG  1106, 1143, 1146, 1174, 1175, 1222, 1225, 1232
       1135    MMI  1125
       1334    MSG  1107, 1135, 1233
       6203    NEG  6176
       6205    NOR  6202
       1100    NUM  1016, 1042, 1046, 1056
       1370    OUT  1376
       2341    PLS  2320, 2323
        311    PUT    56
       6163    REG  6153
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2012    SCH  2034
       2675    SFF  2643, 2655
       1077    SFT  1004, 1007, 1012, 1062
       2026    SFW  2001
       1102    SGN  1017, 1033, 1057
       1405    SKX  1377
       2027    SRW  2003, 2040
       2005    SWD  2000, 2036
       2177    TAB   552, 1615, 1620
        735    TAG    73,  126,  142
       1330    TEN  1172, 1223, 1226, 6200, 6204
       1331    TTR  1115, 1216
       1336    TYI  1020, 1034, 1050, 1117, 1136, 1147, 1162, 1176, 1402, 2276, 2433
       2137    TYO   214,  551,  764, 1614, 2073, 2100, 2176, 2200, 2202, 2266, 2333, 2363, 2377, 2405, 2421, 2661, 6151
                    6155, 6157, 6161, 6221, 6223, 6231, 6236, 6262, 6276, 6345, 6352, 6410
       1675    VXA  1451
       1674    VXB  1450
       1673    VXC  1447
        530    XIT   511,  513
       2035   ALLB  2010
        625   AUTO   276
       1103   BASE  1014, 1027, 1035, 1043, 1051, 6253, 6270
       2435   BCLK  2440
        514   BMLK   474
        527   BNLK   475,  524
       2312   BOIG  2251, 2253, 2262
       2254   BOJN  2252
       2260   BOLP  2267
       2271   BOXA  2255
       2270   BOXC  2254
       6425   BUF1  1467, 2607
       7305   BUF2  1745
       6304   BUFF  2275, 2303, 2305, 2307, 6264, 6272, 6275
       1514   CARD  1475, 1501, 1506, 1550, 1565, 1642, 1643, 1645, 1646, 2615, 2622, 2626, 2640, 2641
        277   CEND   230,  231,  236,  277,  424
       1622   CHKA  1555, 1631
       1726   CHXC  1705, 1714, 1723
        230   CMND    50
        241   CORG   230,  241
        461   CTSX   425,  555, 1617, 1623
       1550   DATA  1502
       6321   DERR  1463, 1470, 1500, 1670, 1741, 1746, 2043, 2051, 2603, 2610, 2620, 2666
       3035   DFXC  3002, 3013, 3025, 3037
       6417   DIAG  6322, 6417, 6425
       6423   DIN1  6342, 6364, 6405
       6424   DIN2  6346, 6365, 6411
        554   DMPL   546
        557   DMPX   544
       3026   DOBS  3014, 3020
        544   DUMP   422,  505,  536
       2466   EVAL    53
       2545   EVBC  2476, 2510, 2525
       2476   EVGO  2471
       1140   FCNV  1134, 1161
       1225   FDIV  1221
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1231   FFMT  1157, 1203
       1704   FILE  1453, 1457, 1465, 1472, 1666
       1255   FILF  1132, 1164
      10253   FLAG 10166,10227,10241,10245
       6245   FNUM  6145, 6177, 6203
       6225   FRAC  6232
        666   FULL   715
       2226   FWCW  2224
       2230   FWXC  2221, 2223
       1244   FXRB  1105
       1243   FXRC  1104
        474   GOLK   472
       1040   ICNV  1032, 1054
       6274   IFIX  6266
       1055   IFMT  1052
       6275   IFOX  6277
       1014   IJIN  1006, 1011
       6253   IJON  6250
       1033   IMIN  1026
        623   KILL   604
       2546   LADJ   101,  356,  574,  636,  712, 2501,10231
       2562   LASH  2557
        457   LOC1   437,  466,  476
        460   LOC2   454,  465,  507
         32   LOCF    21,   44,   52,  235
        424   LOOK   252,  254,  256,  260,  264,  272
          6   MAIN   220,  343,  402,  423,  431,  456,  600,  622,  624,  664,  716,  726, 2711, 2720
        665   NAME   353,  376,  377,  617,  635,  642,  660, 1715, 1725
        416   NEXT    40
       6327   NOPE  6377
        766   OFXC   737
        726   OOPS   670, 1001, 1073, 1076, 1254, 6357, 6362, 6366, 6367, 6416
      11226   OPEN  1455, 1733, 2575
      10233   OPLK 10236
      10220   OPXR 10165,10202,10221,10242
      10212   OSXR 10204,10215
       1071   OVDC  1047
       1074   OVFC  1064
       2172   OXRC  2137, 2157
       1003   PORG   747,  761,  767, 1452, 1511, 1551, 2574, 2635
        543   PREV   503,  520
        342   PUT1   313
       1665   QUIT  1476, 1634, 1701
      11166   RPTC   526,  534
         22   RQST    15
       2751   SBCF  2733, 2734
       2744   SBOK  2742
       2771   SBXR  2761, 3000
       1730   SETF  1724
        135   SINP   116,  124,  132
       6215   SKIP  6207
       2426   SPWD  2345, 2347, 2351, 2415
       2412   SPXB  2344
       2413   SPXC  2343, 2375, 2403
       2673   SRXA  2572
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 4     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2672   SRXB  2571
       2671   SRXC  2570
         65   SUBF    12,   33,   45
       2217   SWXC  2206, 2213
        154   SYMX    67,  164
        155   SYMY    70
       1427   TYIB  1343, 1346
       1753   TYIF  1732, 1735, 1743, 1761, 2047
       1371   TYIX  1336
       2205   TYOB  2147, 2155, 2171
       2056   TYPA     1,  221,  321,  324,  757, 2652, 3015, 6337, 6400, 6402
       2054   TYPE   216,  410,  525,  533,  666,  724,  777, 1071, 1074, 1246, 1671, 1677, 2667, 3023, 6414
       2064   TYPG  2075
       2057   TYPJ  2055
       2066   TYPL  2074
       2076   TYPX  2072
        727   USYM   717,  721
        731   WORD   137,  141,  144,  145,  150,  151,  152, 1567, 1572, 1576, 1601, 1603, 1606, 1616, 2352, 2355, 2364
                    2366, 2406, 2422, 2637, 2644
        660   WORK   646
        535   XPCA   532
       6246   XPNT  6175, 6211, 6213, 6233, 6237
        561   YANK   262
       2721  ABSSW  2710, 2717, 2732
          0  ACORE   744
        117  ADNXT      
          1  A.DBG     0,    1
       2451  BCBRK  2437
       2276  BCDCH  2306
       2273  BCDIN   167,  171
       2310  BCDIX  2273
       2307  BCDPT  2301
       2455  BCEND  2427
       2464  BCFLG  2430, 2447, 2452
       2457  BCORG  2434
       2433  BCRET  2446, 2450
       2427  BCSCH     7,   75,  352,  371,  566,  611,  632,  653,  704, 2475
       2465  BCSYM  2432, 2442, 2444, 2454
       2464  BCTAB  2434, 2435, 2464
         35  BLANK    25
        462  BLKLK   455
        537  BLKXA   462,  531
        540  BLKXB   463
        541  BLKXC   464
        236  CDISP   233
       1702  CELL1  1454, 1503, 1505
       1604  CHECK  1554, 1600, 1630
       1705  CHFIL     5
       1373  CHPRE  1367
      11231  CLOSE  1665, 2046, 2663, 6363
       1703  COUNT  1560, 1561, 1635, 1637
       1426  CRFLG     3, 1340, 1353, 1412, 1417
       3027  DEFNO  3004
          6  DILTH  6322, 6425
       2503  EVADD  2536
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 5     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2526  EVEND  2466, 2472
       2541  EVMIN  2516
       2530  EVNUM  2477
       2537  EVPLS  2513
       2475  EVRET  2540, 2542
       2544  EVSGN  2470, 2474, 2504, 2537, 2541
       2543  EVTOT  2467, 2473, 2506, 2507, 2517
       1136  FDIG1  1122
       1774  FIXCR  1770
       1771  FIXCW  1757
       2030  FIXXA  1775
       2031  FIXXC  1774
       2337  FLDXB  2314
       2336  FLDXC  2313, 2330
       1104  FLOIN   173
      10214  FNDIT 10210
       1162  FRAC1  1130
       1176  FRAC2  1152
       1167  FRCNV  1205
       1126  FRET1  1137
        473  FWDLK   470
       2221  FWORD  2167
        454  GLOOK   442
       1430  GWBUF  1410, 1416, 1421, 1422
       1421  GWMIB  1413
       1407  GWORD  1342
       1034  IDIG1  1023
        224  ILFBL   210
        227  ILFCH   211,  213
        221  ILFCR   205
        216  ILFJN   223,  226
       6265  INEXT  6273
       1007  INTIN   175, 1212
       2135  INTLA  2112, 2126
       2134  INTOV  2107, 2111, 2127
       2136  INTSA  2114, 2124
       2131  INTXC  2115
      11134  ..001     2
      11136  ..002   217
      11143  ..003   222
      11146  ..004   322
      11152  ..005   325
      11162  ..006   411
      11170  ..007   667
      11176  ..008   725
      11201  ..009   760
      11204  ..010  1000
      11207  ..011  1072
      11214  ..012  1075
      11221  ..013  1247
      11232  ..050  1672
      11235  ..051  1700
      11247  ..118  2653
      11256  ..125  2670
      11261  ..126  3016
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 6     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      11270  ..127  3024
      11273  ..128  6340
      11274  ..135  6401
      11276  ..136  6403
      11277  ..137  6415
       1012  JNTIN   177
        506  LKCMP   522
       1577  NODEC  1571
       2362  NOFLG  2417, 2423
       2106  NOINT   415
        477  NORPT   523,  527
       2773  NOSYM  2763
       1004  OCTIN   201
       1002  ONAME   743,  745,  752,  772
         45  ONECH    31
      10165  OPBCD  2350
      10221  OPBIN   110
      10217  OPCDE 10222,10230,10246
       6370  OPEN1  6326
       6402  OPEN2  6373
      11134  OPEND 10201,10205,10206,10214,10232,10233,10240,11134
      10244  OPFLG 10226
      10240  OPFND 10235
      10340  OPORG 10205
      10231  OPRET 10252
      10204  OPSCH 10170,10173
        333  PATCH   320,  333
       2204  PFLAG  2142, 2145, 2156
          1  QBACK     1,  414
       2201  QUOTE   212,  215,  720,  723,  751,  756,  771,  776, 2654, 2657, 3017, 3022, 6341, 6350, 6404, 6413
       1754  READF  1747
       1772  READX  1754, 2052
       1650  RELOC  1574, 1602
       1661  RELXA  1651
       1660  RELXC  1650
       2044  RFEND  1765
       2041  RFERR  1767
        421  RLOOK    64
          4  SAME1      
       2770  SBFND      
       2777  SBPOI      
       2763  SBRET  2767
       1751  SETFX  1730
      11160  SLEEP   331
       2425  SPTAG  2372, 2400
       2232  SWBUF  2207, 2211, 2212, 2215, 2216, 2222, 2226, 2227
       2206  SWORD  2153, 2166
         67  SYMIN   333
       2611  SYMRD  2651
        601  TABLE   274
       2570  TABRD   621,  663
       2667  TDONE      
       6141  TFILE  2573, 2577, 2605, 2612, 2664
       1337  TYICP  1345, 1375
       1415  TYICW  1707, 1750, 2042, 2045
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 7     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2167  TYOMT  2162
       2105  TYPCR  2054, 2056, 2077
       2102  TYPXA  2060
       2103  TYPXB  2061
       2101  TYPXC  2057
        717  UNDEF  2776,10237
       1671  VDONE      
        377  VERGO   364
      77461 77461K  1664, 1665
       2251 BCDOUT   254, 6330, 6334
      11227 BUFFER  1464, 1742, 2604
        660 BUFLTH  1467, 1745, 2607, 6425, 7305
       1471 CARDRD  1504, 1513, 1641
      11164 CHNCOM   412
      77461 COMMON  1664, 1665
       2424 DECFLD  2346, 2367, 2374, 2402
       6251 DECOUT   260
       3037 DEFFUL  3030
       3002 DEFINE   714, 2645
       3014 DEFOOP  3011
       3004 DEFRET  3010
       3011 DEFYES      
       6417 DICALL      
       6421 DICODE  6331, 6370
       1447 DIFDMP   401
       6422 DIOCOD      
        403 DISMIS   270
       6420 DISUBR  6323, 6335, 6354
        277 DPOSIT   246
       1233 FASSGN  1224, 1230
       1625 FINCYC  1610
       2342 FLDCOR  2317, 2327, 2334
       2472 FLDEVL   117,  125,  133,  304,  436,  447,  676
       2334 FLDOCT  2326, 2331
       2313 FLDPRT   547, 1612, 2365, 2401, 2411
       6142 FLOOUT   252
      11244 GETBRK  2116
      11243 GETCOM  1710, 1716
      11165 GETLOC   501,  516,  553, 1604, 1621
          7 IGNORE    43
       2133 INRUPT    10,  512, 1633, 2106
       2376 INSTAG  2373
       6252 INTOUT   256, 6240
       2132 INTTRA  2117
      11272 IODIAG  6321
        344 KEYTST   314,  323,  326
       2676 KILTAB   623
         53 LOCNXT    34
         66 MEMBND      
       2253 NAMOUT   225,  722,  755,  775, 2322, 2354, 2656, 3021, 6336, 6343, 6347, 6406, 6412
       1677 NONREL  1564
        771 NOTFND   750
       6247 OCTOUT   264,  762, 2335, 6332
      10254 OPPRFX 10232,10254
        737 ORGFND   357,  575,  637
1            A.DEBUG               SYMBOLIC DEBUGGING AID FOR A-CORE.                            PAGE 8     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1663 OUTSID  1654
        732 PGMORG   360,  400,  576,  620,  640,  662
        202 POPEND   102,  103,  165,  202
        166 POPORG   102
        103 POPRET   106
       1425 PREVCH  1370, 1373, 1400
       2053 RDFLXA  1706, 2041, 2044
      11230 RDWAIT  1471, 1760, 2611
       1760 READCW  1756
       1642 RELBIT  1570, 1577, 1653
       1664 RELCOM  1655
       1656 RELPRG  1512, 1663
       1654 RELSIZ  1510
       1657 RELXIT  1664
       1566 RETURN  1640
       2753 SCHEND  2722
       2734 SCHLOP  2740, 2743, 2750
       2703 SETABS   242
      11245 SETBRK  2120
      11161 SETLOC   341
       2712 SETREL   266
       1377 SKIPCR     6
       2033 STILLB  2020
       2760 SYMABS  2726, 2737, 2745
       2622 SYMADJ  2650
       2722 SYMBCD  2316
       2761 SYMBIN  2502
       2756 SYMBOL  2731, 2747, 2751
       2757 SYMCOR  2725, 2744, 2752
       6141 SYMEND  2677, 2736, 2743, 2746, 2764, 2770, 3001, 3005, 3011, 3012, 3030, 3031, 3032, 6141
       2663 SYMEOF  2616, 2625
       2652 SYMFUL  2646
       3100 SYMLNG  3030, 3041
       3001 SYMLTH  2700, 2727, 2762, 3003, 3027, 3034
       2343 SYMPRT   272,  461
       6141 SYMTAB  2677, 2743, 3001, 3011, 3030
       2755 SYMVAL  2724, 2735
        315 TSTKEY   332
       1345 TYIMIW  1341
       2155 TYOMIW  2152
        345 VERIFY   244
      11246 WRFLXA  2214, 2225
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




  ACOR   BCD 10/12/70 1512.6    8359         00000    
1                                                                                                PAGE 1     
                  
                                     EXTERN  COMLOC,ACORE   
                                     EXTERN  BCOCT,BCDEC,ZEL
                                     EXTERN  GETLOC,GETARY  
                                     EXTERN  .FMT,WRFLX     
                                     EXTERN  SETBRK,CHNCOM  
                                     EXTERN  GETCLS,GETARG  
                  
                  
        TRANSFER VECTOR 
      00000  234644434623     COMLOC
      00001  212346512560     ACORE 
      00002  222346236360     BCOCT 
      00003  222324252360     BCDEC 
      00004  712543606060     ZEL   
      00005  272563434623     GETLOC
      00006  272563215170     GETARY
      00007  332644636060     .FMT  
      00010  665126436760     WRFLX 
      00011  622563225142     SETBRK
      00012  233045234644     CHNCOM
      00013  272563234362     GETCLS
      00014  272563215127     GETARG
                  
      00015  0760 00 0 00016         LMTM 
      00016  0074 00 4 00011         TSX     SETBRK,4 
      00017  0 00000 0 00161         PZE     OUT
      00020  0074 00 4 00013         TSX     GETCLS,4 
      00021  0 00000 0 00457         PZE     CBUF,,0  
      00022  0774 00 1 00023         AXT     19,1     
      00023  0600 00 0 00446         STZ     GO 
      00024  0020 00 0 00030         TRA     *+4
      00025  0074 00 4 00014  MORE   TSX     GETARG,4 
      00026  0 00024 0 00457         PZE     CBUF,,20 
      00027  0774 00 1 00024         AXT     20,1     
      00030  0074 00 4 00010         TSX     WRFLX,4  
      00031  0 00000 0 00031         PZE     *,,0     
      00032 -0500 00 1 00503         CAL     CBUF+20,1
      00033  0322 00 0 00554         ERA     =H     * 
      00034  0100 00 0 00106         TZE     NOMOD    
      00035 -0320 00 0 00551         ANA     =O77     
      00036 -0100 00 0 00106         TNZ     NOMOD    
      00037  0600 00 0 00505         STZ     .O.
      00040  0600 00 0 00504         STZ     .D.
      00041  0600 00 0 00503         STZ     .B.
      00042  0600 00 0 00444         STZ     .Q.
      00043  0600 00 0 00445         STZ     .NZ.     
      00044  0560 00 1 00503         LDQ     CBUF+20,1
      00045  0774 00 2 00006         AXT     6,2
      00046 -0754 00 0 00000         ZAC  
      00047 -0763 00 0 00006         LGL     6  
      00050  0774 00 3 00014         AXT     NMODE,3  
      00051 -0340 00 3 00233         LAS     MODES+NMODE,3  
      00052  0020 00 0 00054         TRA     *+2
      00053  0522 00 3 00234         XEC     MODES+NMODE+1,3
      00054  2 00002 3 00051         TIX     *-3,3,2  
      00055  2 00001 2 00046  MLP    TIX     *-7,2,1  
1                                                                                                PAGE 2     
                  
      00056 -2 00001 1 00427         TNX     QTEST,1,1
      00057 -0500 00 1 00503         CAL     CBUF+20,1
      00060  0322 00 0 00326         ERA     FENCE    
      00061  0100 00 0 00427         TZE     QTEST    
                  
      00062 -0774 00 4 00000         AXC     0,4
      00063  0500 00 0 00434         CLA     SP 
      00064 -0520 00 0 00505         NZT     .O.
      00065  0020 00 0 00071         TRA     *+4
      00066  0560 00 0 00436         LDQ     .OCT     
      00067 -0603 00 4 00200         DST     FMT,4    
      00070  1 77776 4 00071         TXI     *+1,4,-2 
      00071 -0520 00 0 00504         NZT     .D.
      00072  0020 00 0 00076         TRA     *+4
      00073  0560 00 0 00437         LDQ     .DEC     
      00074 -0603 00 4 00200         DST     FMT,4    
      00075  1 77776 4 00076         TXI     *+1,4,-2 
      00076 -0520 00 0 00503         NZT     .B.
      00077  0020 00 0 00103         TRA     *+4
      00100  0560 00 0 00435         LDQ     .BCD     
      00101 -0603 00 4 00200         DST     FMT,4    
      00102  1 77776 4 00103         TXI     *+1,4,-2 
      00103 -0754 00 0 00000         ZAC  
      00104  0560 00 0 00440         LDQ     .TRA     
      00105 -0603 00 4 00200         DST     FMT,4    
                  
      00106  0074 00 6 00236  NOMOD  TSX     GETERM,6 
      00107  0621 00 0 00170         STA     ALOC     
      00110  0402 00 0 00550         SUB     =36
      00111  0621 00 0 00136         STA     ADR
      00112 -3 00001 1 00167         TXL     1LOC,1,1 
      00113 -0500 00 1 00503         CAL     CBUF+20,1
      00114  0322 00 0 00326         ERA     FENCE    
      00115  0100 00 0 00167         TZE     1LOC     
      00116  0322 00 0 00552         ERA     =O171717444444 
      00117  0602 00 0 00443         SLW     .N.
      00120 -2 00001 1 00431         TNX     LOSS,1,1 
      00121  0074 00 6 00236         TSX     GETERM,6 
      00122 -0520 00 0 00443         NZT     .N.
      00123  0020 00 0 00127         TRA     *+4
      00124  0402 00 0 00170         SUB     ALOC     
      00125  0400 00 0 00547         ADD     =1 
      00126 -0120 00 0 00431         TMI     LOSS     
      00127  0100 00 0 00431         TZE     LOSS     
      00130  0734 00 2 00000         PAX     ,2 
      00131 -2 00044 2 00145         TNX     LSTBUF,2,36    
                  
      00132 -0500 00 0 00136  NXTBUF CAL     ADR
      00133  0400 00 0 00550         ADD     =36
      00134  0621 00 0 00136         STA     ADR
      00135  0074 00 4 00006         TSX     GETARY,4 
      00136  0 00000 0 00000  ADR    PZE     ** 
      00137  0 00044 0 00503         PZE     BUFF,,36 
      00140  0774 00 3 00044         AXT     36,3     
      00141 -0500 00 3 00547         CAL     BUFF+36,3
      00142  0074 00 7 00173         TSX     PLINE,7  
1                                                                                                PAGE 3     
                  
      00143  2 00001 3 00141         TIX     *-2,3,1  
      00144  2 00044 2 00132         TIX     NXTBUF,2,36    
                  
      00145 -0500 00 0 00136  LSTBUF CAL     ADR
      00146  0400 00 0 00550         ADD     =36
      00147  0621 00 0 00152         STA     *+3
      00150 -0634 00 2 00153         SXD     *+3,2    
      00151  0074 00 4 00006         TSX     GETARY,4 
      00152  0 00000 0 00000         PZE     ** 
      00153  0 00000 0 00503         PZE     BUFF,,** 
      00154  0774 00 3 00044         AXT     36,3     
      00155 -0500 00 3 00547         CAL     BUFF+36,3
      00156  0074 00 7 00173         TSX     PLINE,7  
      00157 -2 00001 3 00161         TNX     *+2,3,1  
      00160  2 00001 2 00155         TIX     *-3,2,1  
                  
      00161  0074 00 4 00010  OUT    TSX     WRFLX,4  
      00162  0 00000 0 00162         PZE     *,,0     
      00163  0520 00 0 00446         ZET     GO 
      00164  0020 00 0 00025         TRA     MORE     
      00165  0074 00 4 00012         TSX     CHNCOM,4 
      00166  0 00000 0 00000         PZE     0  
                  
      00167  0074 00 4 00005  1LOC   TSX     GETLOC,4 
      00170  0 00000 0 00000  ALOC   PZE     ** 
      00171  0074 00 7 00173         TSX     PLINE,7  
      00172  0020 00 0 00161         TRA     OUT
                  
      00173  0520 00 0 00445  PLINE  ZET     .NZ.     
      00174  0100 00 0 00213         TZE     SKIPPR   
      00175  0602 00 0 00447         SLW     PLTEM    
      00176  0074 00 4 00007         TSX     .FMT,4   
      00177  0 00005 2 00170         PZE     ALOC,2,5 
      00200  0 00002 0 00000  FMT    PZE     0,0,2    
      00201  0 00014 2 00447         PZE     PLTEM,2,12     
      00202  0 00000 0 00000         PZE  
      00203  0020 00 0 00210         TRA     WRLIN    
      00204                          BSS     4  
      00210  0602 00 0 00212  WRLIN  SLW     *+2
      00211  0074 00 4 00010         TSX     WRFLX,4  
      00212  0 00000 0 00000         PZE     **,,**   
      00213 -0500 00 0 00170  SKIPPR CAL     ALOC     
      00214  0400 00 0 00547         ADD     =1 
      00215  0621 00 0 00170         STA     ALOC     
      00216  0020 00 7 00001         TRA     1,7
                  
      00217  000000000046     MODES  BCI     1,00000O 
      00220 -0625 00 0 00505         STL     .O.
      00221  000000000024            BCI     1,00000D 
      00222 -0625 00 0 00504         STL     .D.
      00223  000000000022            BCI     1,00000B 
      00224 -0625 00 0 00503         STL     .B.
      00225  000000000027            BCI     1,00000G 
      00226 -0625 00 0 00446         STL     GO 
      00227  000000000050            BCI     1,00000Q 
      00230  0020 00 0 00233         TRA     QUIT     
1                                                                                                PAGE 4     
                  
      00231  000000000045            BCI     1,00000N 
      00232 -0625 00 0 00445         STL     .NZ.     
                       00014  NMODE  EQU     *-MODES  
                  
      00233  0600 00 0 00446  QUIT   STZ     GO 
      00234 -0625 00 0 00444         STL     .Q.
      00235  0020 00 0 00055         TRA     MLP
                  
      00236  0600 00 0 00452  GETERM STZ     EQ 
      00237  0600 00 0 00441         STZ     MNS
      00240  0600 00 0 00442         STZ     NAM
      00241  0600 00 0 00450         STZ     VALUE    
      00242  0600 00 0 00451         STZ     VALTEM   
      00243  0774 00 5 00000         AXT     0,5
      00244 -0500 00 1 00503  GT     CAL     CBUF+20,1
      00245  0774 00 4 00020         AXT     NARG,4   
      00246 -0340 00 4 00330         LAS     ARGS+NARG,4    
      00247  0020 00 0 00251         TRA     *+2
      00250  0522 00 4 00331         XEC     ARGS+NARG+1,4  
      00251  2 00002 4 00246         TIX     *-3,4,2  
      00252  0074 00 7 00352         TSX     EVAL,7   
      00253 -0520 00 0 00452         NZT     EQ 
      00254  0020 00 0 00261         TRA     *+5
      00255  0621 00 0 00257         STA     *+2
      00256  0074 00 4 00005         TSX     GETLOC,4 
      00257  0 00000 0 00000         PZE     ** 
      00260  0600 00 0 00452         STZ     EQ 
      00261  0520 00 0 00441         ZET     MNS
      00262  0020 00 0 00265         TRA     *+3
      00263  0400 00 5 00450         ADD     VALUE,5  
      00264  0020 00 0 00271         TRA     *+5
      00265  0402 00 5 00450         SUB     VALUE,5  
      00266 -0120 00 0 00271         TMI     *+3
      00267  0760 00 0 00006         COM  
      00270  0400 00 0 00547         ADD     =1 
      00271  0621 00 5 00450         STA     VALUE,5  
      00272  0600 00 0 00441         STZ     MNS
      00273 -0625 00 0 00442         STL     NAM
      00274  2 00001 1 00244  GETIX  TIX     GT,1,1   
      00275 -0520 00 0 00442  GOTERM NZT     NAM
      00276  0020 00 0 00431         TRA     LOSS     
      00277  3 00000 5 00302         TXH     *+3,5,0  
      00300 -0500 00 0 00450         CAL     VALUE    
      00301  0020 00 6 00001         TRA     1,6
      00302 -0500 00 0 00451         CAL     VALTEM   
      00303  0621 00 0 00305         STA     *+2
      00304  0074 00 4 00005         TSX     GETLOC,4 
      00305  0 00000 0 00000         PZE     ** 
      00306  0401 00 0 00450         ADM     VALUE    
      00307  0020 00 6 00001         TRA     1,6
                  
      00310  606060606020     ARGS   BCI     1,     + 
      00311  0020 00 0 00331         TRA     PLUS     
      00312  606060606040            BCI     1,     - 
      00313  0020 00 0 00330         TRA     MINUS    
      00314  606060606054            BCI     1,     * 
1                                                                                                PAGE 5     
                  
      00315  0020 00 0 00335         TRA     STAR     
      00316  606060606061            BCI     1,     / 
      00317  0020 00 0 00341         TRA     SLASH    
      00320  606060606013            BCI     1,     = 
      00321  0020 00 0 00337         TRA     EQUAL    
      00322  606060333333            BCI     1,   ... 
      00323  0020 00 0 00275         TRA     GOTERM   
      00324  606063305164            BCI     1,  THRU 
      00325  0020 00 0 00275         TRA     GOTERM   
      00326 -377777777777     FENCE  OCT     777777777777   
      00327  0020 00 0 00275         TRA     GOTERM   
                       00020  NARG   EQU     *-ARGS   
                  
      00330 -0625 00 0 00441  MINUS  STL     MNS
      00331 -0520 00 0 00442  PLUS   NZT     NAM
      00332  0020 00 0 00431         TRA     LOSS     
      00333  0600 00 0 00442         STZ     NAM
      00334  0020 00 0 00274         TRA     GETIX    
      00335  0774 00 5 77777  STAR   AXT     -1,5     
      00336  0020 00 0 00274         TRA     GETIX    
      00337 -0625 00 0 00452  EQUAL  STL     EQ 
      00340  0020 00 0 00274         TRA     GETIX    
      00341  0774 00 5 00000  SLASH  AXT     0,5
      00342 -0500 00 0 00451         CAL     VALTEM   
      00343  0621 00 0 00345         STA     *+2
      00344  0074 00 4 00005         TSX     GETLOC,4 
      00345  0 00000 0 00000         PZE     ** 
      00346  0401 00 0 00450         ADM     VALUE    
      00347  0621 00 0 00450         STA     VALUE    
      00350  0600 00 0 00451         STZ     VALTEM   
      00351  0020 00 0 00274         TRA     GETIX    
                  
      00352  0602 00 0 00447  EVAL   SLW     EVTEM    
      00353  0074 00 4 00004         TSX     ZEL,4    
      00354  3 00000 0 00447         PTH     EVTEM    
      00355  0601 00 0 00447         STO     EVTEM    
      00356  0441 00 0 00447         LDI     EVTEM    
      00357 -0046 00 0 00000         PIA  
      00360 -0320 00 0 00556         ANA     =HYYYYYY 
      00361  0100 00 0 00420         TZE     EVOCT    
      00362 -0046 00 0 00000         PIA  
      00363 -0320 00 0 00555         ANA     =H 
      00364  0100 00 0 00423         TZE     EVDEC    
      00365 -0046 00 0 00000         PIA  
      00366  0322 00 0 00553         ERA     =H     . 
      00367 -0320 00 0 00551         ANA     =O77     
      00370 -0100 00 0 00376         TNZ     *+6
      00371 -0046 00 0 00000         PIA  
      00372  0771 00 0 00006         ARS     6  
      00373  0044 00 0 00000         PAI  
      00374 -0320 00 0 00555         ANA     =H 
      00375  0100 00 0 00423         TZE     EVDEC    
      00376  0774 00 4 00044         AXT     36,4     
      00377  0560 00 0 00447         LDQ     EVTEM    
      00400 -0754 00 0 00000         ZAC  
      00401 -0763 00 0 00006         LGL     6  
1                                                                                                PAGE 6     
                  
      00402 -0100 00 0 00405         TNZ     *+3
      00403  2 00006 4 00401         TIX     *-2,4,6  
      00404  0020 00 7 00001         TRA     1,7
      00405 -0500 00 0 00447         CAL     EVTEM    
      00406  0560 00 0 00555         LDQ     =H 
      00407 -0763 00 4 00044         LGL     36,4     
      00410  0602 00 0 00447         SLW     EVTEM    
      00411  0074 00 4 00000         TSX     COMLOC,4 
      00412  3 00000 0 00447         PTH     EVTEM    
      00413 -0100 00 7 00001         TNZ     1,7
      00414  0074 00 4 00001         TSX     ACORE,4  
      00415  3 00000 0 00447         PTH     EVTEM    
      00416  0771 00 0 00022         ARS     18 
      00417  0020 00 7 00001         TRA     1,7
                  
      00420  0074 00 4 00002  EVOCT  TSX     BCOCT,4  
      00421  3 00000 0 00447         PTH     EVTEM    
      00422  0020 00 7 00001         TRA     1,7
                  
      00423  0604 00 0 00447  EVDEC  STI     EVTEM    
      00424  0074 00 4 00003         TSX     BCDEC,4  
      00425  3 00000 0 00447         PTH     EVTEM    
      00426  0020 00 7 00001         TRA     1,7
                  
      00427  0520 00 0 00444  QTEST  ZET     .Q.
      00430  0020 00 0 00161         TRA     OUT
      00431  0074 00 4 00010  LOSS   TSX     WRFLX,4  
      00432  0 00004 0 00453         PZE     IMP,,4   
                              $IMPROPER USE OF COMMAND.     
      00433  0020 00 0 00161         TRA     OUT
                  
      00434  0 00002 0 00000  SP     PZE     0,0,2    
      00435  0 00006 1 00447  .BCD   PZE     PLTEM,1,6
      00436  0 00014 2 00447  .OCT   PZE     PLTEM,2,12     
      00437  0 00013 4 00447  .DEC   PZE     PLTEM,4,11     
      00440  0020 00 0 00210  .TRA   TRA     WRLIN    
                  
      00441  0 00000 0 00000  MNS   
      00442  0 00000 0 00000  NAM   
      00443  0 00000 0 00000  .N.   
      00444  0 00000 0 00000  .Q.   
      00445  0 00000 0 00000  .NZ.  
      00446  0 00000 0 00000  GO    
      00447                   EVTEM  BSS     0  
      00447  0 00000 0 00000  PLTEM 
      00450  0 00000 0 00000  VALUE                        *
      00451  0 00000 0 00000  VALTEM                       *
      00452  0 00000 0 00000  EQ    
                  
      00453  314447514647     IMP    BCI     4,IMPROPER USE OF COMMAND. 
      00454  255160646225     
      00455  604626602346     
      00456  444421452433     
1                                                                                                PAGE 7     
                  
      00457                   CBUF   BSS     20 
      00503                   BUFF   BSS     36 
                  
                       00503  .B.    EQU     BUFF     
                       00504  .D.    EQU     BUFF+1   
                       00505  .O.    EQU     BUFF+2   
                  
                                     END  
                  
        LITERALS  
      00547  000000000001     
      00550  000000000044     
      00551  000000000077     
      00552  171717444444     
      00553  606060606033     
      00554  606060606054     
      00555  606060606060     
      00556  707070707070     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        557 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        452     EQ   236,  253,  260,  337
        446     GO    23,  163,  226,  233
        244     GT   274
        434     SP    63
        136    ADR   111,  132,  134,  145
        200    FMT    67,   74,  101,  105
        453    IMP   432
        503    .B.    41,   76,  224,  547
        504    .D.    40,   71,  222,  547
        443    .N.   117,  122
        505    .O.    37,   64,  220,  547
        444    .Q.    42,  234,  427
         55    MLP   235
        441    MNS   237,  261,  272,  330
        442    NAM   240,  273,  275,  331,  333
        161    OUT    17,  172,  430,  433
          4    ZEL   353
        167   1LOC   112,  115
        170   ALOC   107,  124,  177,  213,  215
        310   ARGS   246,  250,  330
        503   BUFF   137,  141,  153,  155,  547
        457   CBUF    21,   26,   32,   44,   57,  113,  244
        352   EVAL   252
        435   .BCD   100
        437   .DEC    73
          7   .FMT   176
        445   .NZ.    43,  173,  232
        436   .OCT    66
        440   .TRA   104
        431   LOSS   120,  126,  127,  276,  332
         25   MORE   164
         20   NARG   245,  246,  250,  330
        331   PLUS   311
        233   QUIT   230
        335   STAR   315
          1  ACORE   414
          3  BCDEC   424
          2  BCOCT   420
        337  EQUAL   321
        423  EVDEC   364,  375
        420  EVOCT   361
        447  EVTEM   352,  354,  355,  356,  377,  405,  410,  412,  415,  421,  423,  425
        326  FENCE    60,  114
        274  GETIX   334,  336,  340,  351
        330  MINUS   313
        217  MODES    51,   53,  233
         14  NMODE    50,   51,   53,  233
        106  NOMOD    34,   36
        173  PLINE   142,  156,  171
        447  PLTEM   175,  201,  435,  436,  437
        427  QTEST    56,   61
1                                                                                                PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        341  SLASH   317
        450  VALUE   241,  263,  265,  271,  300,  306,  346,  347
         10  WRFLX    30,  161,  211,  431
        210  WRLIN   203,  440
         12 CHNCOM   165
          0 COMLOC   411
         14 GETARG    25
          6 GETARY   135,  151
         13 GETCLS    20
        236 GETERM   106,  121
          5 GETLOC   167,  256,  304,  344
        275 GOTERM   323,  325,  327
        145 LSTBUF   131
        132 NXTBUF   144
         11 SETBRK    16
        213 SKIPPR   174
        451 VALTEM   242,  302,  342,  350
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1      GETARG     TO GET A STRING OF ARGUMENTS FROM THE CONSOLE                                  PAGE 1     
                  
                              *      TSX     GETARG,4 
                              *      PZE     BUFF,,'N'
                              *     
                              *THE ARGUMENT STRING IS TYPED IN ONE LINE ON THE
                              *   CONSOLE, WITH THE ARGUMENTS SEPARATED BY ONE OR MORE BLANKS.  
                              *UP TO 'N' ARGUMENTS (RIGHT-JUSTIFIED AND BLANK PADDED, OR TRUNCATED    
                              *   IF THEY ARE MORE THAN SIX CHARACTERS LONG) WILL BE RETURNED IN
                              *   LOCATIONS 'BUFF' THROUGH 'BUFF'+'N'-1.  IF FEWER  
                              *   THAN 'N' ARGUMENTS ARE SPECIFIED, THE LAST ONE WILL BE FOLLOWED BY A
                              *     
                       00003         ENTRY   GETARG   
                  
                  
        TRANSFER VECTOR 
      00000  512426436721     RDFLXA
                  
            LINKAGE DIRECTOR  
      00001  000000000000     
      00002  272563215127     
                  
      00003  0634 00 4 00106  GETARG SXA     XR4,4    
      00004  0634 00 2 00105         SXA     XR2,2    
      00005  0634 00 1 00104         SXA     XR1,1    
      00006 -0500 00 4 00001         CAL     1,4
      00007 -0734 00 1 00000         PDX     ,1 
      00010  0754 00 1 00000         PXA     ,1 
      00011  0401 00 4 00001         ADM     1,4
      00012  0621 00 0 00071         STA     OUTPT1   
      00013  0621 00 0 00073         STA     OUTPT2   
      00014 -0625 00 0 00132         STL     FIRST    
      00015  0074 00 4 00000  GETINP TSX     $RDFLXA,4
      00016  0 00016 0 00134         PZE     BUFF,,14 
      00017  0734 00 4 00000         PAX     ,4 
      00020  0600 00 0 00130         STZ     MORE     
      00021 -3 37777 4 00027         TXL     X,4,16383
      00022  0520 00 0 00127         ZET     FULL     
      00023  0020 00 0 00015         TRA     GETINP   
      00024 -0625 00 0 00130         STL     MORE     
      00025 -0500 00 0 00154         CAL     =14
      00026  0020 00 0 00042         TRA     Y  
      00027  0520 00 0 00127  X      ZET     FULL     
      00030  0020 00 0 00104         TRA     XR1
      00031  0754 00 4 00000         PXA     ,4 
      00032 -0130 00 0 00000         XCL  
      00033 -0754 00 0 00000         ZAC  
      00034  0221 00 0 00153         DVP     =6 
      00035 -0100 00 0 00040         TNZ     *+3
      00036 -0130 00 0 00000         XCL  
      00037  0020 00 0 00042         TRA     *+3
      00040 -0130 00 0 00000         XCL  
      00041  0400 00 0 00152         ADD     =1 
      00042  0734 00 4 00000  Y      PAX     ,4 
      00043  0400 00 0 00133         ADD     EBUFF    
      00044  0621 00 0 00054         STA     INPUT    
      00045 -0520 00 0 00132         NZT     FIRST    
      00046  0020 00 0 00054         TRA     INPUT    
1      GETARG     TO GET A STRING OF ARGUMENTS FROM THE CONSOLE                                  PAGE 2     
                  
      00047  0600 00 0 00132         STZ     FIRST    
      00050 -0500 00 0 00157         CAL     =H 
      00051  0602 60 0 00071         SLW*    OUTPT1   
      00052  0600 00 0 00131         STZ     OUTP     
      00053  0600 00 0 00126         STZ     BL 
      00054  0560 00 4 00000  INPUT  LDQ     **,4     
      00055  0774 00 2 00006         AXT     6,2
      00056 -0754 00 0 00000  NXTCHR ZAC  
      00057 -0763 00 0 00006         LGL     6  
      00060 -0340 00 0 00156         LAS     =O60     
      00061  0020 00 0 00066         TRA     OK 
      00062  0020 00 0 00110         TRA     BLANK    
      00063 -0340 00 0 00155         LAS     =O55     
      00064  0020 00 0 00074         TRA     IGNORE   
      00065  0020 00 0 00110         TRA     BLANK    
      00066  0600 00 0 00126  OK     STZ     BL 
      00067 -0625 00 0 00131         STL     OUTP     
      00070 -0765 00 0 00006         LGR     6  
      00071 -0500 00 1 00000  OUTPT1 CAL     **,1     
      00072 -0763 00 0 00006         LGL     6  
      00073  0602 00 1 00000  OUTPT2 SLW     **,1     
      00074  2 00001 2 00056  IGNORE TIX     NXTCHR,2,1     
      00075  2 00001 4 00054         TIX     INPUT,4,1
      00076  0520 00 0 00130         ZET     MORE     
      00077  0020 00 0 00015         TRA     GETINP   
      00100  0520 00 0 00131         ZET     OUTP     
      00101 -2 00001 1 00104         TNX     *+3,1,1  
      00102 -0500 00 0 00160         CAL     =O777777777777 
      00103  0602 60 0 00073         SLW*    OUTPT2   
      00104  0774 00 1 00000  XR1    AXT     **,1     
      00105  0774 00 2 00000  XR2    AXT     **,2     
      00106  0774 00 4 00000  XR4    AXT     **,4     
      00107  0020 00 4 00002         TRA     2,4
      00110  0520 00 0 00126  BLANK  ZET     BL 
      00111  0020 00 0 00074         TRA     IGNORE   
      00112 -0625 00 0 00126         STL     BL 
      00113 -0520 00 0 00131         NZT     OUTP     
      00114  0020 00 0 00074         TRA     IGNORE   
      00115 -2 00001 1 00122         TNX     FILLED,1,1     
      00116  0600 00 0 00131         STZ     OUTP     
      00117 -0500 00 0 00157         CAL     =H 
      00120  0602 60 0 00071         SLW*    OUTPT1   
      00121  0020 00 0 00074         TRA     IGNORE   
      00122 -0520 00 0 00130  FILLED NZT     MORE     
      00123  0020 00 0 00104         TRA     XR1
      00124 -0625 00 0 00127         STL     FULL     
      00125  0020 00 0 00015         TRA     GETINP   
                  
      00126  0 00000 0 00000  BL    
      00127  0 00000 0 00000  FULL  
      00130  0 00000 0 00000  MORE  
      00131  0 00000 0 00000  OUTP  
      00132  0 00000 0 00000  FIRST 
      00133  0 00000 0 00134  EBUFF  PZE     BUFF     
      00134                   BUFF   BSS     14 
1      GETARG     TO GET A STRING OF ARGUMENTS FROM THE CONSOLE                                  PAGE 3     
                  
                                     END  
                  
        LITERALS  
      00152  000000000001     
      00153  000000000006     
      00154  000000000016     
      00155  000000000055     
      00156  000000000060     
      00157  606060606060     
      00160  777777777777     
1      GETARG     TO GET A STRING OF ARGUMENTS FROM THE CONSOLE                                  PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        161 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         27      X    21
         42      Y    26
        126     BL    53,   66,  110,  112
         66     OK    61
        104    XR1     5,   30,  123
        105    XR2     4
        106    XR4     3
        134   BUFF    16,  133
        127   FULL    22,   27,  124
        130   MORE    20,   24,   76,  122
        131   OUTP    52,   67,  100,  113,  116
        110  BLANK    62,   65
        133  EBUFF    43
        132  FIRST    14,   45,   47
         54  INPUT    44,   46,   75
        122 FILLED   115
          3 GETARG     0
         15 GETINP    23,   77,  125
         74 IGNORE    64,  111,  114,  121
         56 NXTCHR    74
         71 OUTPT1    12,   51,  120
         73 OUTPT2    13,  103
          0 RDFLXA    15
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            $.FMT - OUTPUT FORMATTING PROGRAM FOR FAP CALLS.                                    PAGE 1     
                           PETER R. BOS -- OCTOBER 1967                             
                  
                                     PCC     ON 
                                     NOLNK
                       00000         ENTRY   .FMT     
                                     LBL     .FMT     
                                     PCC     OFF
                  
                  
                              *     
                              *  CALLING SEQUENCE IS ...    
                              *      TSX     .FMT,4   
                              *      PZE     LOC,T,N  
                              *       .   
                              *       .   
                              *      PZE     0  
                              *     
                              *  LOC IS A POINTER TO A DATA WORD (OR BLOCK, IN THE  
                              *  CASE OF BCD CONVERSION)    
                              *     
                              *  T SPECIFIES THE TYPE OF CONVERSION -   
                              *      0 = SKIP   
                              *      1 = BCD    
                              *      2 = OCTAL  
                              *      4 = DECIMAL
                              *     
                              *  N SPECIFIES THE NUMBER OF COLUMNS TO BE USED FOR   
                              *  THIS DATA ELEMENT.   
                              *     
                              *  ON RETURN, THE AC WILL CONTAIN A POINTER OF THE    
                              *  FORM  PZE  BUFF,,N  SUCH AS WOULD BE USED FOR WRFLX.     
                              *  THE MQ WILL CONTAIN A POINTER OF THE FORM    
                              *  TXH  BUFF-1,,N+1  WHERE BUFF-1 CONTAINS A LINE-MARK
                              *  SUITABLE FOR WRITING INTO A FILE.
                              *     
                  
                  
      00000  0760 00 0 00016  .FMT   LMTM                  CAN'T WORK WITH ONLY 3.  
      00001  0634 00 1 00167         SXA     FX1,1         SAVE XRS.    
      00002  0634 00 2 00170         SXA     FX2,2         ..     
      00003  0634 00 7 00171         SXA     FX7,7         ..     
      00004  0604 00 0 00257         STI     SIND          ..     
                  
      00005  0774 00 1 00006         AXT     6,1           INITIALIZE INDICES.
      00006  0634 00 1 00176         SXA     .X1,1         ..     
      00007  0634 00 0 00177         ZSA     .X2           ..     
                  
      00010  1 77777 4 00011  GTWD   TXI     *+1,4,-1      GET NEXT POINTER WORD.   
      00011  0500 00 4 00000         CLA     0,4           ..     
      00012  0100 00 0 00147         TZE     EXIT          PZE 0 = DONE.
      00013  0044 00 0 00000         PAI                   CONVERSION (TAG) TO IND. 
      00014 -0734 00 2 00000         PDX     0,2           COLUMN COUNT.
      00015 -3 00000 2 00010         TXL     GTWD,2,0      IGNORE ZERO LENGTH FIELDS.     
      00016  0621 00 0 00254         STA     WORD          DATA POINTER.
1            $.FMT - OUTPUT FORMATTING PROGRAM FOR FAP CALLS.                                    PAGE 2     
                           PETER R. BOS -- OCTOBER 1967                             
                  
      00017  0054 00  100000         RFT     .BCD          TEST CONVERSION MODE.    
      00020  0020 00 0 00031         TRA     BCD           ..     
      00021  0054 00  200000         RFT     .OCT          ..     
      00022  0020 00 0 00056         TRA     OCT           ..     
      00023  0054 00  400000         RFT     .DEC          ..     
      00024  0020 00 0 00076         TRA     DEC           ..     
                  
      00025 -0500 00 0 00265         CAL     =O60          TAG = 0, SKIP N COLS.    
      00026  0074 00 7 00174         TSX     .STC,7        INSERT BLANK IN BUFFER.  
      00027  2 00001 2 00025         TIX     *-2,2,1       REPEAT TILL DONE.  
      00030  0020 00 0 00010         TRA     GTWD          GO GET SOME MORE STUFF.  
                  
      00031 -2 00006 2 00046  BCD    TNX     LASTB,2,6     IF AT LAST WORD, SKIP.   
      00032  0560 60 0 00254         LDQ*    WORD          FULL BCD WORD.     
      00033 -0500 00 0 00254         CAL     WORD          INCREMENT ADDRESS. 
      00034  0400 00 0 00264         ADD     =1            ..     
      00035  0621 00 0 00254         STA     WORD          ..     
      00036  0774 00 1 00006         AXT     6,1           6 CHARACTERS PER WORD.   
      00037 -0754 00 0 00000         ZAC                   JUNK.  
      00040 -0763 00 0 00006  BLP1   LGL     6             SHIFT A CHARACTER. 
      00041 -0600 00 0 00260         STQ     MQ            SAVE THE REST.     
      00042  0074 00 7 00174         TSX     .STC,7        GO STORE IN BUFFER.
      00043  0560 00 0 00260         LDQ     MQ            RESTORE MQ.  
      00044  2 00001 1 00040         TIX     BLP1,1,1      INDEX AND REPEAT.  
      00045  0020 00 0 00031         TRA     BCD           GET NEXT WORD.     
      00046  0560 60 0 00254  LASTB  LDQ*    WORD          LAST WORD OF BCD CONV.   
      00047 -0754 00 0 00000         ZAC                   (COUNT MUST BE .G.0, .LE.6)    
      00050 -0763 00 0 00006         LGL     6             SHIFT OUT A CHARACTER.   
      00051 -0600 00 0 00260         STQ     MQ            DON'T LOSE THE REST.     
      00052  0074 00 7 00174         TSX     .STC,7        STORE CHARACTER IN OUTPUT BUFFER.    
      00053  0560 00 0 00260         LDQ     MQ            RESTORE PARTIAL MQ.
      00054  2 00001 2 00047         TIX     LASTB+1,2,1   GO BACK FOR ANOTHER.     
      00055  0020 00 0 00010         TRA     GTWD          DONE, GO GET NEXT DATA ITEM.   
                  
      00056 -3 00014 2 00060  OCT    TXL     *+2,2,12      IF COUNT .G. 12,   
      00057  0774 00 2 00014         AXT     12,2          COUNT = 12.  
      00060  0754 00 2 00000         PXA     0,2           TO AC. 
      00061  0602 00 0 00255         SLW     T             MPY BY 3.    
      00062  0767 00 0 00001         ALS     1             ..     
      00063  0400 00 0 00255         ADD     T             ..     
      00064  0737 00 7 00000         PAC     0,7           ..     
      00065 -0500 60 0 00254         CAL*    WORD          GET OCTAL WORD.    
      00066 -0765 00 7 00000         LGR     0,7           SAVE ONLY LOW ORDER N DIGITS.  
      00067 -0754 00 0 00000  OCLP   ZAC                   BETTER CLEAR AC.   
      00070 -0763 00 0 00003         LGL     3             GET A DIGIT. 
      00071 -0600 00 0 00260         STQ     MQ            SAVE PARTIAL MQ.   
      00072  0074 00 7 00174         TSX     .STC,7        INSERT DIGIT IN BUFFER.  
      00073  0560 00 0 00260         LDQ     MQ            ... AND AGAIN.     
      00074  2 00001 2 00067         TIX     OCLP,2,1      ..     
      00075  0020 00 0 00010         TRA     GTWD          DONE.  
                  
      00076 -3 00013 2 00100  DEC    TXL     *+2,2,11      IF COUNT .G. 11,   
      00077  0774 00 2 00013         AXT     11,2          SET COUNT TO 11.   
      00100 -0625 00 0 00256         STL     BZEL          SET FLAG FOR LEADING BLANKS.   
      00101  0600 00 0 00261         STZ     SKIP          RESET FLAG FOR IGNORING LEADING BLNKS.     
1            $.FMT - OUTPUT FORMATTING PROGRAM FOR FAP CALLS.                                    PAGE 3     
                           PETER R. BOS -- OCTOBER 1967                             
                  
      00102  0120 00 0 00104         TPL     *+2           WANT LEADING BLANKS. Q   
      00103 -0625 00 0 00261         STL     SKIP          NO, SET FLAG.
      00104 -0500 60 0 00254         CAL*    WORD          NO SIGN, PLEASE.   
      00105  0131 00 0 00000         XCA                   ..     
      00106 -0754 00 0 00000         ZAC                   ..     
      00107  3 00012 2 00112         TXH     DLP,2,10      IF LESS THAN 11,   
      00110  0221 00 2 00146         DVP     DIGIT-1,2     USE ONLY LAST N DIGITS.  
      00111  0131 00 0 00000         XCA                   REMAINDER BECOMES NEW NUMBER.  
      00112 -0754 00 0 00000  DLP    ZAC                   BETTER CLEAR AC FIRST.   
      00113  0221 00 2 00147         DVP     DIGIT,2       GET DIGIT.   
      00114  0601 00 0 00260         STO     MQ            SAVE REMAINDER.    
      00115  0131 00 0 00000         XCA                   DIGIT TO AC. 
      00116 -0320 00 0 00266         ANA     =O77          LAST 6 BITS ONLY.  
      00117 -0100 00 0 00126         TNZ     NOZERO        IF ZERO,     
      00120 -3 00001 2 00126         TXL     NOZERO,2,1    AND NOT LAST DIGIT,
      00121  0520 00 0 00256         ZET     BZEL          AND PREVIOUS ZEROS,
      00122 -0500 00 0 00265         CAL     =O60          CHANGE TO BLANK.   
      00123  0520 00 0 00261         ZET     SKIP          WANT BLANK. Q
      00124  0020 00 0 00131         TRA     SKPBLK        NO, SKIP IT. 
      00125  0020 00 0 00130         TRA     *+3           AND SKIP.    
      00126  0600 00 0 00256  NOZERO STZ     BZEL          ELSE, RESET FLAG.  
      00127  0600 00 0 00261         STZ     SKIP          ..     
      00130  0074 00 7 00174         TSX     .STC,7        ADD CHARACTER TO BUFFER. 
      00131  0560 00 0 00260  SKPBLK LDQ     MQ            RESTORE PARTIAL MQ.
      00132  2 00001 2 00112         TIX     DLP,2,1       AND DO IT AGAIN.   
      00133  0020 00 0 00010         TRA     GTWD          DONE.  
                  
      00134 +112402762000            DEC     10000000000 TABLE OF DIGITS.     
      00135 +007346545000            DEC     1000000000    ..     
      00136 +000575360400            DEC     100000000     ..     
      00137 +000046113200            DEC     10000000      ..     
      00140 +000003641100            DEC     1000000       ..     
      00141 +000000303240            DEC     100000        ..     
      00142 +000000023420            DEC     10000         ..     
      00143 +000000001750            DEC     1000          ..     
      00144 +000000000144            DEC     100           ..     
      00145 +000000000012            DEC     10            ..     
      00146 +000000000001            DEC     1             ..     
                       00147  DIGIT  SYN     *  
                  
      00147  0534 00 1 00176  EXIT   LXA     .X1,1         END OF LINE, FILL IN WITH NULLS.     
      00150  0534 00 2 00177         LXA     .X2,2         ..     
      00151 -3 00000 1 00160         TXL     GTPT,1,0      IF NO HOLES, SKIP. 
      00152 -0500 00 0 00224         CAL     AC 
      00153  0560 00 0 00270         LDQ     =O575757575757 NULLS RIGHT.
      00154 -0763 00 0 00006         LGL     6             SHIFT ONE.   
      00155  2 00001 1 00154         TIX     *-1,1,1       IF THAT WON'T DO, SHIFT IT AGAIN.    
      00156  0602 00 2 00226         SLW     BUF,2         STORE LAST WORD.   
      00157  1 77777 2 00160         TXI     *+1,2,-1      INCREMENT COUNT.   
      00160 -0756 00 2 00000  GTPT   PCD     0,2           TO AC. 
      00161  0622 00 0 00262         STD     PBUF          WORD COUNT.  
      00162  0400 00 0 00267         ADD     =O1000000     ADD ONE FOR LINE MARK.   
      00163  0622 00 0 00263         STD     PLBUF         AND PUT IN OTHER POINTER.
      00164  0636 00 2 00225         SCA     LMARK,2       FIX UP LINE MARK.  
      00165 -0500 00 0 00262         CAL     PBUF          GET POINTERS.
1            $.FMT - OUTPUT FORMATTING PROGRAM FOR FAP CALLS.                                    PAGE 4     
                           PETER R. BOS -- OCTOBER 1967                             
                  
      00166  0560 00 0 00263         LDQ     PLBUF         ..     
                  
      00167  0774 00 1 00000  FX1    AXT     -,1           RESTORE XRS. 
      00170  0774 00 2 00000  FX2    AXT     -,2           ..     
      00171  0774 00 7 00000  FX7    AXT     -,7           ..     
      00172  0441 00 0 00257         LDI     SIND          ..     
      00173  0020 00 4 00001         TRA     1,4           RETURN AFTER LAST ITEM.  
                  
                  
      00174  0634 00 1 00221  .STC   SXA     .SX1,1        SAVE XRS.    
      00175  0634 00 2 00222         SXA     .SX2,2        ..     
                  
      00176  0774 00 1 00000  .X1    AXT     -,1           RESTORE BUFFER INDICES.  
      00177  0774 00 2 00000  .X2    AXT     -,2           ..     
      00200 -0765 00 0 00006         LGR     6             SHIFT CHARACTER TO MQ.   
      00201 -0500 00 0 00224         CAL     AC            PICK UP PARTIAL AC.
      00202 -0763 00 0 00006         LGL     6             SHIFT CHARACTER TO AC.   
      00203  0602 00 0 00224         SLW     AC            AND SAVE.    
      00204  2 00001 1 00217         TIX     XIT,1,1       DECREMENT CHAR. COUNT AND EXIT.
      00205  0602 00 2 00226  STORE  SLW     BUF,2         IF FULL WORD, STORE IN BUFFER. 
      00206 -0500 00 0 00271         CAL     =H            INITIALIZE AC.     
      00207  0602 00 0 00224         SLW     AC            ..     
      00210  1 77777 2 00211         TXI     *+1,2,-1      INCREMENT WORD COUNT.    
      00211  3 77752 2 00216         TXH     *+5,2,-NWRDS  IF BUFFER FULL, EXIT     
      00212  0500 00 4 00000         CLA     0,4           ..     
      00213  1 77777 4 00214         TXI     *+1,4,-1      ..     
      00214 -0100 00 0 00212         TNZ     *-2           ..     
      00215  0020 00 0 00160         TRA     GTPT          ..     
      00216  0774 00 1 00006         AXT     6,1           RESET CHARACTER COUNT.   
      00217  0634 00 1 00176  XIT    SXA     .X1,1         SAVE BUFFER INDICES.     
      00220  0634 00 2 00177         SXA     .X2,2         ..     
      00221  0774 00 1 00000  .SX1   AXT     -,1           RESTORE XRS. 
      00222  0774 00 2 00000  .SX2   AXT     -,2           ..     
      00223  0020 00 7 00001         TRA     1,7           RETURN.
                  
      00224  0 00000 0 00000  AC     PZE                   TEMPORARY.   
                  
                  
                      100000  .BCD   BOOL    100000   
                      200000  .OCT   BOOL    200000   
                      400000  .DEC   BOOL    400000   
                  
                       00026  NWRDS  EQU     22            MAX. WORDS PER LINE.     
      00225 -377777000000     LMARK  OCT     777777000000   
      00226                   BUF    BSS     NWRDS    
      00254  0 00000 0 00000  WORD   PZE  
      00255  0 00000 0 00000  T      PZE                   SUPER-TEMPORARY.   
      00256  0 00000 0 00000  BZEL   PZE                   FLAG FOR LEADING BLANKS ON DEC.
      00257  0 00000 0 00000  SIND   PZE                   STORAGE FOR INDICS.
      00260  0 00000 0 00000  MQ     PZE  
      00261  0 00000 0 00000  SKIP   PZE  
      00262  0 00000 0 00226  PBUF   PZE     BUF,,-   
      00263  3 00000 0 00225  PLBUF  TXH     LMARK,0,-
1            $.FMT - OUTPUT FORMATTING PROGRAM FOR FAP CALLS.                                    PAGE 5     
                           PETER R. BOS -- OCTOBER 1967                             
                  
                                     END  
                  
        LITERALS  
      00264  000000000001     
      00265  000000000060     
      00266  000000000077     
      00267  000001000000     
      00270  575757575757     
      00271  606060606060     
1            $.FMT - OUTPUT FORMATTING PROGRAM FOR FAP CALLS.                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        272 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        255      T    61,   63
        224     AC   152,  201,  203,  207
        260     MQ    41,   43,   51,   53,   71,   73,  114,  131
         31    BCD    20,   45
        226    BUF   156,  205,  262
         76    DEC    24
        112    DLP   107,  132
        167    FX1     1
        170    FX2     2
        171    FX7     3
        176    .X1     6,  147,  217
        177    .X2     7,  150,  220
         56    OCT    22
        217    XIT   204
         40   BLP1    44
        256   BZEL   100,  121,  126
        147   EXIT    12
        160   GTPT   151,  215
         10   GTWD    15,   30,   55,   75,  133
     100000   .BCD    17,  225
     400000   .DEC    23,  225
          0   .FMT     0
     200000   .OCT    21,  225
        174   .STC    26,   42,   52,   72,  130
        221   .SX1   174
        222   .SX2   175
         67   OCLP    74
        262   PBUF   161,  165
        257   SIND     4,  172
        261   SKIP   101,  103,  123,  127
        254   WORD    16,   32,   33,   35,   46,   65,  104
        147  DIGIT   110,  113,  147
         46  LASTB    31,   54
        225  LMARK   164,  263
         26  NWRDS   211,  225,  226
        263  PLBUF   163,  166
        205  STORE      
        126 NOZERO   117,  120
        131 SKPBLK   124
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




AEDBCD   BCD 10/12/70 1512.6    3896         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  AEDBCD   MAD            10/02/69    0152.5
-                 
                  PROGRAM TO CREATE LINE MARKED LISTING FILE OUT OF                                    LM00001    
                  ALGOL SOURCE FILE AND ALGOL COMPILATION LISTING                                      LM00002    
                                                                                                       LM00003    
                  USAGE ...     'AEDBCD NAME1'                                                         LM00004    
                                                                                                       LM00005    
                  EATS 'NAME1 ALGOL' (CARD IMAGE) AND 'NAME1 LIST',                                    LM00006    
                  MAKES 'NAME1 BCD', SUITABLE FOR FRAMING                                              LM00007    
                                                                                                       LM00008    
                  NORMAL MODE IS INTEGER                                                          *001 LM00009    
                  DIMENSION B1(0), B2(0), B3(0), WBUF(0), LINE(16)                                *002 LM00010    
                  VECTOR VALUES LINE(15) = $ $, 777777000017K                                     *003 LM00011    
                                                                                                       LM00012    
                  VECTOR VALUES R      = $R$                                                      *004 LM00013    
                  VECTOR VALUES W      = $W$                                                      *005 LM00014    
                  VECTOR VALUES ALL    = $ALL$                                                    *006 LM00015    
                  VECTOR VALUES ALGOL  = $ ALGOL$                                                 *007 LM00016    
                  VECTOR VALUES LIST   = $  LIST$                                                 *008 LM00017    
                  VECTOR VALUES BCD    = $   BCD$                                                 *009 LM00018    
                  VECTOR VALUES EJECT  = $1     $, 777777000001K                                  *010 LM00019    
                  VECTOR VALUES EOFCT  = 0                                                        *011 LM00020    
                  VECTOR VALUES LMARK  = 777777000000K                                            *012 LM00021    
                                                                                                       LM00022    
                  FERRTN.(OOPS)                                                                   *013 LM00023    
                  N1 = COMARG.(1)                                                                 *014 LM00024    
                  FSTATE.(N1, ALGOL, TEMP)                                                        *015 LM00025    
                  FSTATE.(N1, LIST, TEMP)                                                         *016 LM00026    
                  DELETE.(N1, BCD, 0, CHNCOM.)                                                    *017 LM00027    
                                                                                                       LM00028    
                  GETBUF.(B1, 864)                                                                *018 LM00029    
                  GETBUF.(B2, 864)                                                                *019 LM00030    
                  GETBUF.(B3, 864)                                                                *020 LM00031    
                  GETBUF.(WBUF, 432)                                                              *021 LM00032    
                                                                                                       LM00033    
                  BFOPEN.(R, N1, ALGOL, B1(B1+432), B1(B1+864), -0, OOPS)                         *022 LM00034    
                  BFOPEN.(W, N1, BCD, B2(B2+432), B2(B2+864), B3(B3+432), OOPS)                   *023 LM00035    
                  BFWRIT.(N1, BCD, EJECT(1)...2, OOPS)                                            *024 LM00036    
                                                                                                       LM00037    
      READ        BFREAD.(N1, ALGOL, LINE(14)...14, EOF, EOFCT, OOPS)                             *025 LM00038    
                  BFWRIT.(N1, BCD, LINE(16)...16, OOPS)                                           *026 LM00039    
                  TRANSFER TO READ                                                                *027 LM00040    
                                                                                                       LM00041    
      EOF         WHENEVER EOFCT .NE. 0                                                           *028 LM00042    
                    TEMP = EOFCT + 1                                                              *029 LM00043    
                    LINE(TEMP) = EOFCT .V. LMARK                                                  *030 LM00044    
                    BFWRIT.(N1, BCD, LINE(TEMP)...TEMP, OOPS)                                     *031 LM00045    
                  END OF CONDITIONAL                                                              *032 LM00046    
                                                                                                       LM00047    
                  BFCLOS.(ALL, -0, OOPS)                                                          *033 LM00048    
                                                                                                       LM00049    
                  OPEN.(R, N1, LIST)                                                              *034 LM00050    
                  OPEN.(W, N1, BCD)                                                               *035 LM00051    
                  BUFFER.(N1, BCD, WBUF(WBUF+432)...432)                                          *036 LM00052    
                  COPY.(N1, LIST, N1, BCD, B1(B1+864), B2(B2+864),                                *037 LM00053    
                1   B3(B3+864), 864, OOPS)                                                        *037 LM00054    
                  CLOSE.(ALL, -0)                                                                 *038 LM00055    
                                                                                                       LM00056    
                  WRFLX.($*$...1)                                                                 *039 LM00057    
                  CHNCOM.(0)                                                                      *040 LM00058    
                                                                                                       LM00059    
      OOPS        PRDIAG.                                                                         *041 LM00060    
                  BFCLOS.(ALL, -0)                                                                *042 LM00061    
                  CLOSE.(ALL, -0)                                                                 *043 LM00062    
                  RESETF.                                                                         *044 LM00063    
                  CHNCOM.(0)                                                                      *045 LM00064    
                                                                                                       LM00065    
                  END OF PROGRAM                                                                  *046 LM00066    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00373 TRANSFER VECTOR LENGTH  00023 PROGRAM BEGINS    00101
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ALGOL  00027 A 1        B3     00033 A 1        EOF    00024   4        N1     00063   1        TEMP   00065   1  
      ALL    00030 A 1        BCD    00034 A 1        LINE   00060 A 1        OOPS   00025   4        WBUF   00066 A 1  
      B1     00031 A 1        EJECT  00036 A 1        LIST   00061 A 1        READ   00026   4        W      00067 A 1  
      B2     00032 A 1        EOFCT  00037 A 1        LMARK  00062 A 1        R      00064 A 1                          
0FUNCTION DICTIONARY    
      BFCLOS 00000   1        BFOPEN 00001   1        BFREAD 00002   1        BFWRIT 00003   1        BUFFER 00004   1  
      CHNCOM 00005   1        CLOSE  00006   1        COMARG 00007   1        COPY   00010   1        DELETE 00011   1  
      EXIT   00012   1        FERRTN 00013   1        FSTATE 00014   1        GETBUF 00015   1        .SETUP 00016   1  
      OPEN   00017   1        PRDIAG 00020   1        RESETF 00021   1        WRFLX  00022   1                          
0ABSOLUTE CONSTANTS     
 00100 -146060606060     00074 +000000000020     00073 +000000000016     00072 +000000000002     00075 +000000000660    
 00076 +000000001540     00070 +000000000000     00071 +000000000001     00077 +233000000000                            
0STATEMENT DICTIONARY   
 00024 TXL -300240000235       00025 TXL -300352000351       00026 TXL -300227000220                                    
0PROGRAM    
                 N'R                                                                001  LM00009
                 D'N B1(0), B2(0), B3(0), WBUF(0), LINE(16)                         002  LM00010
                 V'S LINE(15) = $ $, 777777000017K                                  003  LM00011
 00101 TSX +0 07400 4 00016    00040     -3 77777 0 00017    00041     -2 06060 6 06060                                 
                 V'S R      = $R$                                                   004  LM00013
 00064     -1 16060 6 06060                                                                                             
                 V'S W      = $W$                                                   005  LM00014
 00067     -2 66060 6 06060                                                                                             
                 V'S ALL    = $ALL$                                                 006  LM00015
 00030     +2 14343 6 06060                                                                                             
                 V'S ALGOL  = $ ALGOL$                                              007  LM00016
 00027     -2 02143 2 74643                                                                                             
                 V'S LIST   = $  LIST$                                              008  LM00017
 00061     -2 06043 3 16263                                                                                             
                 V'S BCD    = $   BCD$                                              009  LM00018
 00034     -2 06060 2 22324                                                                                             
                 V'S EJECT  = $1     $, 777777000001K                               010  LM00019
 00035     -3 77777 0 00001    00036     +0 16060 6 06060                                                               
                 V'S EOFCT  = 0                                                     011  LM00020
 00037     +0 00000 0 00000                                                                                             
                 V'S LMARK  = 777777000000K                                         012  LM00021
 00062     -3 77777 0 00000                                                                                             
                 FERRTN.(OOPS)                                                      013  LM00023
 00102 TSX +0 07400 4 00013    00103 TXH +3 00000 0 00025                                                               
                 N1 = COMARG.(1)                                                    014  LM00024
 00104 TSX +0 07400 4 00007    00105 TXH +3 00000 0 00071    00106 STO +0 60100 0 00063                                 
                 FSTATE.(N1, ALGOL, TEMP)                                           015  LM00025
 00107 TSX +0 07400 4 00014    00110 TXH +3 00000 0 00063    00111 TXH +3 00000 0 00027    00112 TXH +3 00000 0 00065   
                 FSTATE.(N1, LIST, TEMP)                                            016  LM00026
 00113 TSX +0 07400 4 00014    00114 TXH +3 00000 0 00063    00115 TXH +3 00000 0 00061    00116 TXH +3 00000 0 00065   
                 DELETE.(N1, BCD, 0, CHNCOM.)                                       017  LM00027
 00117 TSX +0 07400 4 00011    00120 TXH +3 00000 0 00063    00121 TXH +3 00000 0 00034    00122 TXH +3 00000 0 00070   
 00123 TXH +3 00000 0 00005                                                                                             
                 GETBUF.(B1, 864)                                                   018  LM00029
 00124 TSX +0 07400 4 00015    00125 TXH +3 00000 0 00031    00126 TXH +3 00000 0 00076                                 
                 GETBUF.(B2, 864)                                                   019  LM00030
 00127 TSX +0 07400 4 00015    00130 TXH +3 00000 0 00032    00131 TXH +3 00000 0 00076                                 
                 GETBUF.(B3, 864)                                                   020  LM00031
 00132 TSX +0 07400 4 00015    00133 TXH +3 00000 0 00033    00134 TXH +3 00000 0 00076                                 
                 GETBUF.(WBUF, 432)                                                 021  LM00032
 00135 TSX +0 07400 4 00015    00136 TXH +3 00000 0 00066    00137 TXH +3 00000 0 00075                                 
                 BFOPEN.(R, N1, ALGOL, B1(B1+432), B1(B1+864), -0, OOPS)            022  LM00034
 00140 CLS +0 50200 0 00070    00141 STO +0 60100 0 00370    00142 CLA +0 50000 0 00031    00143 ADD +0 40000 0 00076   
 00144 SUB +0 40200 0 00145    00145 TXH +3 00000 0 00031    00146 STA +0 62100 0 00161    00147 CLA +0 50000 0 00031   
 00150 ADD +0 40000 0 00075    00151 SUB +0 40200 0 00152    00152 TXH +3 00000 0 00031    00153 STA +0 62100 0 00160   
 00154 TSX +0 07400 4 00001    00155 TXH +3 00000 0 00064    00156 TXH +3 00000 0 00063    00157 TXH +3 00000 0 00027   
 00160 TXH +3 00000 0 00000    00161 TXH +3 00000 0 00000    00162 TXH +3 00000 0 00370    00163 TXH +3 00000 0 00025   
                 BFOPEN.(W, N1, BCD, B2(B2+432), B2(B2+864), B3(B3+432), OOPS)      023  LM00035
 00164 CLA +0 50000 0 00033    00165 ADD +0 40000 0 00075    00166 SUB +0 40200 0 00167    00167 TXH +3 00000 0 00033   
 00170 STA +0 62100 0 00211    00171 CLA +0 50000 0 00032    00172 ADD +0 40000 0 00076    00173 SUB +0 40200 0 00174   
 00174 TXH +3 00000 0 00032    00175 STA +0 62100 0 00210    00176 CLA +0 50000 0 00032    00177 ADD +0 40000 0 00075   
 00200 SUB +0 40200 0 00201    00201 TXH +3 00000 0 00032    00202 STA +0 62100 0 00207    00203 TSX +0 07400 4 00001   
 00204 TXH +3 00000 0 00067    00205 TXH +3 00000 0 00063    00206 TXH +3 00000 0 00034    00207 TXH +3 00000 0 00000   
 00210 TXH +3 00000 0 00000    00211 TXH +3 00000 0 00000    00212 TXH +3 00000 0 00025                                 
                 BFWRIT.(N1, BCD, EJECT(1)...2, OOPS)                               024  LM00036
 00213 TSX +0 07400 4 00003    00214 TXH +3 00000 0 00063    00215 TXH +3 00000 0 00034    00216 TIX +2 00072 0 00035   
 00217 TXH +3 00000 0 00025                                                                                             
      READ       BFREAD.(N1, ALGOL, LINE(14)...14, EOF, EOFCT, OOPS)                025  LM00038
 00220 TSX +0 07400 4 00002    00221 TXH +3 00000 0 00063    00222 TXH +3 00000 0 00027    00223 TIX +2 00073 0 00042   
 00224 TXH +3 00000 0 00024    00225 TXH +3 00000 0 00037    00226 TXH +3 00000 0 00025                                 
                 BFWRIT.(N1, BCD, LINE(16)...16, OOPS)                              026  LM00039
 00227 TSX +0 07400 4 00003    00230 TXH +3 00000 0 00063    00231 TXH +3 00000 0 00034    00232 TIX +2 00074 0 00040   
 00233 TXH +3 00000 0 00025                                                                                             
                 T'O READ                                                           027  LM00040
 00234 TRA +0 02000 0 00026                                                                                             
      EOF        W'R EOFCT .NE. 0                                                   028  LM00042
 00235 CLA +0 50000 0 00037    00236 SUB +0 40200 0 00070    00237 TZE +0 10000 0 00260                                 
                   TEMP = EOFCT + 1                                                 029  LM00043
 00240 CLA +0 50000 0 00037    00241 ADD +0 40000 0 00071    00242 STO +0 60100 0 00065                                 
                   LINE(TEMP) = EOFCT .V. LMARK                                     030  LM00044
 00243 CAL -0 50000 0 00037    00244 ORA -0 50100 0 00062    00245 LXA +0 53400 1 00065    00246 SLW +0 60200 1 00060   
                   BFWRIT.(N1, BCD, LINE(TEMP)...TEMP, OOPS)                        031  LM00045
 00247 CLA +0 50000 0 00065    00250 SUB +0 40200 0 00251    00251 TXH +3 00000 0 00060    00252 STA +0 62100 0 00256   
 00253 TSX +0 07400 4 00003    00254 TXH +3 00000 0 00063    00255 TXH +3 00000 0 00034    00256 TIX +2 00065 0 00000   
 00257 TXH +3 00000 0 00025                                                                                             
                 E'L                                                                032  LM00046
                 BFCLOS.(ALL, -0, OOPS)                                             033  LM00048
 00260 CLS +0 50200 0 00070    00261 STO +0 60100 0 00370    00262 TSX +0 07400 4 00000    00263 TXH +3 00000 0 00030   
 00264 TXH +3 00000 0 00370    00265 TXH +3 00000 0 00025                                                               
                 OPEN.(R, N1, LIST)                                                 034  LM00050
 00266 TSX +0 07400 4 00017    00267 TXH +3 00000 0 00064    00270 TXH +3 00000 0 00063    00271 TXH +3 00000 0 00061   
                 OPEN.(W, N1, BCD)                                                  035  LM00051
 00272 TSX +0 07400 4 00017    00273 TXH +3 00000 0 00067    00274 TXH +3 00000 0 00063    00275 TXH +3 00000 0 00034   
                 BUFFER.(N1, BCD, WBUF(WBUF+432)...432)                             036  LM00052
 00276 CLA +0 50000 0 00066    00277 ADD +0 40000 0 00075    00300 SUB +0 40200 0 00301    00301 TXH +3 00000 0 00066   
 00302 STA +0 62100 0 00306    00303 TSX +0 07400 4 00004    00304 TXH +3 00000 0 00063    00305 TXH +3 00000 0 00034   
 00306 TIX +2 00075 0 00000                                                                                             
                 COPY.(N1, LIST, N1, BCD, B1(B1+864), B2(B2+864),                   037  LM00053
                1  B3(B3+864), 864, OOPS)                                           037  LM00054
 00307 CLA +0 50000 0 00033    00310 ADD +0 40000 0 00076    00311 SUB +0 40200 0 00312    00312 TXH +3 00000 0 00033   
 00313 STA +0 62100 0 00335    00314 CLA +0 50000 0 00032    00315 ADD +0 40000 0 00076    00316 SUB +0 40200 0 00317   
 00317 TXH +3 00000 0 00032    00320 STA +0 62100 0 00334    00321 CLA +0 50000 0 00031    00322 ADD +0 40000 0 00076   
 00323 SUB +0 40200 0 00324    00324 TXH +3 00000 0 00031    00325 STA +0 62100 0 00333    00326 TSX +0 07400 4 00010   
 00327 TXH +3 00000 0 00063    00330 TXH +3 00000 0 00061    00331 TXH +3 00000 0 00063    00332 TXH +3 00000 0 00034   
 00333 TXH +3 00000 0 00000    00334 TXH +3 00000 0 00000    00335 TXH +3 00000 0 00000    00336 TXH +3 00000 0 00076   
 00337 TXH +3 00000 0 00025                                                                                             
                 CLOSE.(ALL, -0)                                                    038  LM00055
 00340 CLS +0 50200 0 00070    00341 STO +0 60100 0 00370    00342 TSX +0 07400 4 00006    00343 TXH +3 00000 0 00030   
 00344 TXH +3 00000 0 00370                                                                                             
                 WRFLX.($*$...1)                                                    039  LM00057
 00345 TSX +0 07400 4 00022    00346 TIX +2 00071 0 00100                                                               
                 CHNCOM.(0)                                                         040  LM00058
 00347 TSX +0 07400 4 00005    00350 TXH +3 00000 0 00070                                                               
      OOPS       PRDIAG.                                                            041  LM00060
 00351 TSX +0 07400 4 00020                                                                                             
                 BFCLOS.(ALL, -0)                                                   042  LM00061
 00352 CLS +0 50200 0 00070    00353 STO +0 60100 0 00370    00354 TSX +0 07400 4 00000    00355 TXH +3 00000 0 00030   
 00356 TXH +3 00000 0 00370                                                                                             
                 CLOSE.(ALL, -0)                                                    043  LM00062
 00357 CLS +0 50200 0 00070    00360 STO +0 60100 0 00370    00361 TSX +0 07400 4 00006    00362 TXH +3 00000 0 00030   
 00363 TXH +3 00000 0 00370                                                                                             
                 RESETF.                                                            044  LM00063
 00364 TSX +0 07400 4 00021                                                                                             
                 CHNCOM.(0)                                                         045  LM00064
 00365 TSX +0 07400 4 00005    00366 TXH +3 00000 0 00070                                                               
                 E'M                                                                046  LM00066
 00367 TSX +0 07400 4 00012                                                                                             




ALSTAT   BCD 02/09/69 0712.9   59917         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  ALSTAT   MAD            02/09/69    0656.4
-                 
      ALSTAT     ...SUMMARIZE DISK USAGE.                                                              LM00001    
                                                                                                       LM00002    
                 ...THIS PROGRAM IS DESIGNED FOR USE WITH THE 'FSTAT' PACKAGE                          LM00003    
                 ...WRITTEN BY NOEL MORRIS.                                                            LM00004    
                                                                                                       LM00005    
                 ...T.H. VAN VLECK 9/66                                                                LM00006    
                                                                                                       LM00007    
                                                                                                       LM00008    
                                                                                                       LM00009    
                  EXTERNAL FUNCTION(PROBN,PROGN,BUFF)                                             *001 LM00010    
                                                                                                       LM00011    
                 ...DEFINE OPERATORS FOR MODULUS AND EXCLUSIVE OR                                      LM00012    
                  INSERT FILE .MOD.                                                               *002 LM00013    
                      DEFINE BINARY OPERATOR .MOD., PRECEDENCE SAME AS /                          *003 LM00001    
                      MODE STRUCTURE 1 .MOD. 1 TO 1                                               *004 LM00002    
             JMP      *+1,AT,*+3                                                                  *005 LM00003    
             JMP      *+11,AC,*+1                                                                 *006 LM00004    
             JMP      *+12,LA,*+6                                                                 *007 LM00005    
             JMP      *+13,AC,*+1                                                                 *008 LM00006    
             JMP      *+2,MQ,*+1                                                                  *009 LM00007    
             JMP      *+13,LA,*+2                                                                 *010 LM00008    
             STQ      T                                                                           *011 LM00009    
             LDQ      A                                                                           *012 LM00010    
             PXD                                                                                  *013 LM00011    
             LLS      0                                                                           *014 LM00012    
             DVP      B                                                                           *015 LM00013    
             OUT      AC                                                                          *016 LM00014    
             XCA                                                                                  *017 LM00015    
             JMP      *-5                                                                         *018 LM00016    
             XCL                                                                                  *019 LM00017    
             JMP      *-7                                                                         *020 LM00018    
             STO      T                                                                           *021 LM00019    
             JMP      *-10                                                                        *022 LM00020    
             SLW      T                                                                           *023 LM00021    
             JMP      *-12                                                                        *024 LM00022    
             END                                                                                  *025 LM00023    
                  INSERT FILE .XOR.                                                               *026 LM00014    
                  DEFINE BINARY OPERATOR .XOR., PRECEDENCE SAME AS .A.                            *027 LM00001    
                  MODE STRUCTURE 1 .XOR. 1 TO 1                                                   *028 LM00002    
             JMP      *+1,LA,*+3                                                                  *029 LM00003    
             JMP      *+15,AT,*+1                                                                 *030 LM00004    
             JMP      *+17,BT,*+9                                                                 *031 LM00005    
             JMP      *+1,MQ,*+3                                                                  *032 LM00006    
             JMP      *+9,AT,*+1                                                                  *033 LM00007    
             JMP      *+13,BT,*+4                                                                 *034 LM00008    
             JMP      *+1,AC,*+9                                                                  *035 LM00009    
             STO      T                                                                           *036 LM00010    
             JMP      *+7                                                                         *037 LM00011    
             STQ      T                                                                           *038 LM00012    
             JMP      *+5                                                                         *039 LM00013    
             SLW      T                                                                           *040 LM00014    
             JMP      *+3                                                                         *041 LM00015    
             XCL                                                                                  *042 LM00016    
             JMP      *+2                                                                         *043 LM00017    
             CAL      A                                                                           *044 LM00018    
             ERA      B                                                                           *045 LM00019    
             OUT      LAC                                                                         *046 LM00020    
             XCL                                                                                  *047 LM00021    
             ERA      A                                                                           *048 LM00022    
             OUT      LAC                                                                         *049 LM00023    
             END                                                                                  *050 LM00024    
                                                                                                       LM00015    
                                                                                                       LM00016    
                 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *                           LM00017    
                                                                                                       LM00018    
                 ...'FINIT' IS CALLED FIRST TO INITIALIZE.                                             LM00019    
                 ...IT READS 'SEARCH FILE'                                                             LM00020    
                 ...TO SEE WHAT NAMES AND CLASSES TO SUMMARIZE.                                        LM00021    
                                                                                                       LM00022    
                  ENTRY TO FINIT.                                                                 *051 LM00023    
                                                                                                       LM00024    
                                                                                                       LM00025    
                  WHENEVER COMARG.(1).E.$ (SYS)$, SYSFLG = 1B                                     *052 LM00026    
                  BOOLEAN SYSFLG                                                                  *053 LM00027    
                  VECTOR VALUES SYSFLG = 0B                                                       *054 LM00028    
                                                                                                       LM00029    
                  GETTM.(DATE,TIME)                                                               *055 LM00030    
                  GETIM.(TEMP,DATE)                                                               *056 LM00031    
                  WHOAMI.(WHO(3)...4)                                                             *057 LM00032    
                  ATTNAM.(ME(1)...2)                                                              *058 LM00033    
                  FERRTN.(ERR)                                                                    *059 LM00034    
                  IOHSIZ.(1)                                                                      *060 LM00035    
                                                                                                       LM00036    
                  BFOPEN.($R$,SEARCH,FL,B1(432),B2(432),-0,ERR)                                   *061 LM00037    
                                                                                                       LM00038    
      READ        BFREAD.(SEARCH,FL,CARD(13)...14,EOF,-0,ERR)                                     *062 LM00039    
                  NAME1(MAX)=RJUST.(CARD(13))                                                     *063 LM00040    
                  NAME2(MAX)=RJUST.(CARD(12))                                                     *064 LM00041    
                  MASK1(MAX) = NAMASK.(NAME1(MAX))                                                *065 LM00042    
                  MASK2(MAX) = NAMASK.(NAME2(MAX))                                                *066 LM00043    
                  TEMP=RJUST.(CARD(11))                                                           *067 LM00044    
                  WHENEVER TEMP .E. $$                                                            *068 LM00045    
                       CLASS(MAX)=0                                                               *069 LM00046    
                                                                                                       LM00047    
                  OTHERWISE                                                                       *070 LM00048    
                       THROUGH SCLS, FOR I=0,1,I.G.MXCLS                                          *071 LM00049    
                       WHENEVER TEMP .E. CLNAME(I), TRANSFER TO SET                               *072 LM00050    
      SCLS             CONTINUE                                                                   *073 LM00051    
                                                                                                       LM00052    
                       MXCLS=MXCLS+1                                                              *074 LM00053    
                       CLNAME(MXCLS)=TEMP                                                         *075 LM00054    
      SET              CLASS(MAX)=I                                                               *076 LM00055    
                  END OF CONDITIONAL                                                              *077 LM00056    
                  MAX=MAX+1                                                                       *078 LM00057    
                  TRANSFER TO READ                                                                *079 LM00058    
                                                                                                       LM00059    
      EOF         BFCLOS.(SEARCH,FL)                                                              *080 LM00060    
                  MAX=MAX-1                                                                       *081 LM00061    
                                                                                                       LM00062    
                  YR = BCDEC.(DATE.A.7777K)                                                       *082 LM00063    
                  MO = BCDEC.((DATE.RS.24).A.7777K)                                               *083 LM00064    
                  DA = BCDEC.((DATE.RS.12).A.7777K)                                               *084 LM00065    
                  NOW = ABSDAT.(MO, DA, YR)                                                       *085 LM00066    
                                                                                                       LM00067    
                 ...SET UP BRKPTS FOR HISTOGRAM                                                        LM00068    
                  MB1 = NOW - DA                                                                  *086 LM00069    
                  MB2 = MB1 - DAYS(MO-1)                                                          *087 LM00070    
                  MO1 = MONNAM(MO-1)                                                              *088 LM00071    
                  MO2 = MONNAM((MO+10).MOD.12)                                                    *089 LM00072    
                                                                                                       LM00073    
                                                                                                       LM00074    
                  FUNCTION RETURN                                                                 *090 LM00075    
                                                                                                       LM00076    
                                                                                                       LM00077    
                 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *                           LM00078    
                                                                                                       LM00079    
                                                                                                       LM00080    
                 ...'COUNTR' IS CALLED ON EACH FILE.                                                   LM00081    
                 .....'BUFF' IS THE ACTUAL UFD ENTRY FOR A FILE                                        LM00082    
                 .....SINCE THE UFD GOES FORWARD IN CORE WE MUST USE                                   LM00083    
                 .....THE 2'S COMPLEMENT OF THE SUBSCRIPT                                              LM00084    
                                                                                                       LM00085    
                 .....BUFF( 0) = NAME1                                                                 LM00086    
                 .....BUFF(-1) = NAME2                                                                 LM00087    
                 .....BUFF(-2) = DATE + TIME LAST MOD.                                                 LM00088    
                 .....BUFF(-3) = DATE LAST USED, AUTHOR                                                LM00089    
                 .....BUFF(-4) = MODE, ILOCK, F, RCOUNT                                                LM00090    
                 .....BUFF(-5) = SWR, NORECS, P, LCOUNT                                                LM00091    
                 .....(WITH THE OBVIOUS EXCEPTION FOR LINKS)                                           LM00092    
                                                                                                       LM00093    
                                                                                                       LM00094    
                  ENTRY TO COUNTR.                                                                *091 LM00095    
                                                                                                       LM00096    
                                                                                                       LM00097    
                  WHENEVER PROGN  .E. $(FILE)$, FUNCTION RETURN                                   *092 LM00098    
                  WHENEVER SYSFLG                                                                 *093 LM00099    
                     WHENEVER PROBN.E.$ M1416$.OR.PROBN.A.77K8.E.$0C0000$,FUNCTION RETURN         *094 LM00100    
                  END OF CONDITIONAL                                                              *095 LM00101    
                                                                                                       LM00102    
                  N2=BUFF(M1)                                                                     *096 LM00103    
                  N1=BUFF                                                                         *097 LM00104    
                                                                                                       LM00105    
                  F=(BUFF(M4).RS.15).A.7K                                                         *098 LM00106    
                                                                                                       LM00107    
                  SIZE=(BUFF(M5).RS.18).A.M1                                                      *099 LM00108    
                  WHENEVER F .NE. 2, SIZE=0                                                       *100 LM00109    
                                                                                                       LM00110    
                  WHENEVER PROBN .NE. OLPROB .OR. PROGN .NE. OLPROG                               *101 LM00111    
                      ...NEW UFD                                                                       LM00112    
                       INTERNAL FUNCTION                                                          *102 LM00113    
                       ENTRY TO NEWUFD.                                                           *103 LM00114    
                       NUFD = NUFD + 1                                                            *104 LM00115    
                       UFDF2 = UFDF2+TSUFDF*TSUFDF                                                *105 LM00116    
                       UFDL2 = UFDL2+TSUFDL*TSUFDL                                                *106 LM00117    
                       UFDR2 = UFDR2+TSUFDR*TSUFDR                                                *107 LM00118    
                       TSUFDF = 0                                                                 *108 LM00119    
                       TSUFDL = 0                                                                 *109 LM00120    
                       TSUFDR = 0                                                                 *110 LM00121    
                       OLPROB = PROBN                                                             *111 LM00122    
                       OLPROG = PROGN                                                             *112 LM00123    
                       FUNCTION RETURN                                                            *113 LM00124    
                       END OF FUNCTION                                                            *114 LM00125    
                       NEWUFD.                                                                    *115 LM00126    
                  END OF CONDITIONAL                                                              *116 LM00127    
                                                                                                       LM00128    
                                                                                                       LM00129    
                  WHENEVER F .E.0                                                                 *117 LM00130    
                      ...FILE IS A LINK                                                                LM00131    
                       LINKS = LINKS + 1                                                          *118 LM00132    
                       TSUFDL = TSUFDL + 1                                                        *119 LM00133    
                       TRANSFER TO CNAME                                                          *120 LM00134    
                  OR WHENEVER F .E. 2                                                             *121 LM00135    
                      ...FILE IS ON DISK.                                                              LM00136    
                       WHENEVER SIZE .A. 1K .E. 1K                                                *122 LM00137    
                            RSIZE = SIZE + 1                                                      *123 LM00138    
                       OTHERWISE                                                                  *124 LM00139    
                            RSIZE = SIZE                                                          *125 LM00140    
                       END OF CONDITIONAL                                                         *126 LM00141    
                      ...THIS FOR THE TWO-FOR-ONE TUT                                                  LM00142    
                       TRSIZE = TRSIZE + RSIZE                                                    *127 LM00143    
                  END OF CONDITIONAL                                                              *128 LM00144    
                                                                                                       LM00145    
                 ...REAL FILE.                                                                         LM00146    
                                                                                                       LM00147    
                 ...TOTALS                                                                             LM00148    
                  TSUFDR = TSUFDR + SIZE                                                          *129 LM00149    
                  TSUFDF = TSUFDF + 1                                                             *130 LM00150    
                  TR = TR + SIZE                                                                  *131 LM00151    
                  TF = TF + 1                                                                     *132 LM00152    
                  TREC2  = TREC2  + SIZE * SIZE                                                   *133 LM00153    
                                                                                                       LM00154    
                 ...MODE                                                                               LM00155    
                  MODE = BUFF(M4) .RS. 28                                                         *134 LM00156    
                  THROUGH MODLP, FOR I = 1,1,I.G.8                                                *135 LM00157    
                  WHENEVER MODE.A.MODBIT(I) .NE. 0                                                *136 LM00158    
                       MODFIL(I) = MODFIL(I) + 1                                                  *137 LM00159    
                       MODREC(I) = MODREC(I) + SIZE                                               *138 LM00160    
                  END OF CONDITIONAL                                                              *139 LM00161    
      MODLP       CONTINUE                                                                        *140 LM00162    
                                                                                                       LM00163    
                 ...CLASS NAME                                                                         LM00164    
                                                                                                       LM00165    
      CNAME       THROUGH LOOP, FOR I=1,1,I.G.MAX                                                 *141 LM00166    
                  WHENEVER  (N1.XOR.NAME1(I)).A.MASK1(I) .E. 0                                    *142 LM00167    
                1 .AND.(N2.XOR.NAME2(I)).A.MASK2(I) .E. 0                                         *142 LM00168    
      TYPE             WHENEVER F .NE. 0                                                          *143 LM00169    
                            COUNT(I)=COUNT(I)+1                                                   *144 LM00170    
                            NRECS(I)=NRECS(I)+SIZE                                                *145 LM00171    
                            CCOUNT(CLASS(I))=CCOUNT(CLASS(I))+1                                   *146 LM00172    
                            CNRECS(CLASS(I))=CNRECS(CLASS(I))+SIZE                                *147 LM00173    
                            TRANSFER TO DOAGE                                                     *148 LM00174    
                       OTHERWISE                                                                  *149 LM00175    
                            COUNTL(I) = COUNTL(I) + 1                                             *150 LM00176    
                            CCOUNL(CLASS(I)) = CCOUNL(CLASS(I)) + 1                               *151 LM00177    
                            FUNCTION RETURN                                                       *152 LM00178    
                           ...LINKS EXIT HERE                                                          LM00179    
                       END OF CONDITIONAL                                                         *153 LM00180    
                  END OF CONDITIONAL                                                              *154 LM00181    
      LOOP        CONTINUE                                                                        *155 LM00182    
                                                                                                       LM00183    
                  I=0                                                                             *156 LM00184    
                  TRANSFER TO TYPE                                                                *157 LM00185    
                                                                                                       LM00186    
                 ...DATE LAST USED.                                                                    LM00187    
      DOAGE       TEMP = BUFF(M3) .RS. 18                                                         *158 LM00188    
                  YEAR = TEMP.RS.9                                                                *159 LM00189    
                  MONTH= (TEMP.RS.5).A.17K                                                        *160 LM00190    
                  DAY  = TEMP.A.37K                                                               *161 LM00191    
                  AGE  = NOW - ABSDAT.(MONTH,DAY,YEAR)                                            *162 LM00192    
                                                                                                       LM00193    
                  WHENEVER AGE.G.90, AGE = 90                                                     *163 LM00194    
                  WHENEVER AGE.L.0, AGE = 0                                                       *164 LM00195    
                  FTBL(AGE) = FTBL(AGE)+1                                                         *165 LM00196    
                  RTBL(AGE) = RTBL(AGE)+SIZE                                                      *166 LM00197    
                                                                                                       LM00198    
                 ...CREATION DATE.                                                                     LM00199    
                  TEMP = BUFF(M2) .RS. 18                                                         *167 LM00200    
                  YEAR = TEMP .RS. 9                                                              *168 LM00201    
                  MONTH = (TEMP.RS.5) .A. 17K                                                     *169 LM00202    
                  DAY = TEMP .A.37K                                                               *170 LM00203    
                  AGE = NOW - ABSDAT.(MONTH,DAY,YEAR)                                             *171 LM00204    
                  AGESUM = AGESUM + AGE                                                           *172 LM00205    
                  AGES2 = AGES2 + AGE*AGE                                                         *173 LM00206    
                  WHENEVER AGE .G. 90, AGE = 90                                                   *174 LM00207    
                  WHENEVER AGE .L. 0, AGE = 0                                                     *175 LM00208    
                  CFTBL(AGE) = CFTBL(AGE) + 1                                                     *176 LM00209    
                  CRTBL(AGE) = CRTBL(AGE) + SIZE                                                  *177 LM00210    
                                                                                                       LM00211    
                  FUNCTION RETURN                                                                 *178 LM00212    
                                                                                                       LM00213    
                                                                                                       LM00214    
                 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *                           LM00215    
                                                                                                       LM00216    
                 ...FPRINT IS CALLED AT THE END.                                                       LM00217    
                                                                                                       LM00218    
                  ENTRY TO FPRINT.                                                                *179 LM00219    
                                                                                                       LM00220    
                  NEWUFD.                                                                         *180 LM00221    
                                                                                                       LM00222    
                  ATTACH.(ME(1),ME)                                                               *181 LM00223    
                                                                                                       LM00224    
                 ...OPEN OUTPUT FILE AND PUT HEADING.                                                  LM00225    
                                                                                                       LM00226    
                  DELETE.(OUT,OUT(1),1,SNAP.)                                                     *182 LM00227    
                  ASSIGN.(OUT,B1,B2,B3)                                                           *183 LM00228    
                  DWRITE.(OUT,HEAD)                                                               *184 LM00229    
                  WHENEVER SYSFLG, DWRITE.(OUT,SYSHED)                                            *185 LM00230    
                  DWRITE.(OUT,F0,TIME,DAYNAM(NOW.MOD.7),MONNAM(MO),                               *186 LM00231    
                1  DA, YR, WHO(1))                                                                *186 LM00232    
                                                                                                       LM00233    
                  XTF = TF                                                                        *187 LM00234    
                  XNUFD = NUFD                                                                    *188 LM00235    
                  X1 = TR/XTF                                                                     *189 LM00236    
                  X2 = SQRT.(TREC2/XTF - X1*X1)                                                   *190 LM00237    
                  X3 = XTF/XNUFD                                                                  *191 LM00238    
                  X4 = SQRT.(UFDF2/XNUFD - X3*X3)                                                 *192 LM00239    
                  X5 = TR/XNUFD                                                                   *193 LM00240    
                  X6 = SQRT.(UFDR2/XNUFD - X5*X5)                                                 *194 LM00241    
                  X7 = LINKS/XNUFD                                                                *195 LM00242    
                  X8 = SQRT.(UFDL2/XNUFD - X7*X7)                                                 *196 LM00243    
                  X9 = AGESUM/XTF                                                                 *197 LM00244    
                  X10 = SQRT.(AGES2/XTF - X9*X9)                                                  *198 LM00245    
                                                                                                       LM00246    
                  DWRITE.(OUT,F1, TF, TR, X3, X4, NUFD, X5, X6, LINKS,                            *199 LM00247    
                1    X7, X8, X1, X2, X9, X10 )                                                    *199 LM00248    
                  DWRITE.(OUT,F3,CAPACY,TRSIZE,CAPACY-TRSIZE,                                     *200 LM00249    
                1    (TRSIZE-TR)*100./CAPACY)                                                     *200 LM00250    
                  DWRITE.(OUT,F4)                                                                 *201 LM00251    
                  THROUGH PML, FOR I=1,1,I.G.8                                                    *202 LM00252    
                  DWRITE.(OUT,F4A,OCRBC.(MODBIT(I)),MODFIL(I),MODREC(I))                          *203 LM00253    
      PML         CONTINUE                                                                        *204 LM00254    
                                                                                                       LM00255    
                  DWRITE.(OUT,HEAD)                                                               *205 LM00256    
                  WHENEVER SYSFLG, DWRITE.(OUT,SYSHED)                                            *206 LM00257    
                                                                                                       LM00258    
                  DWRITE.(OUT,F5)                                                                 *207 LM00259    
                                                                                                       LM00260    
      HGMLP       DWRITE.(OUT,F5A)                                                                *208 LM00261    
                  THROUGH BETA, FOR K = 0,1, K.G.90                                               *209 LM00262    
                  FOLDER = 0                                                                      *210 LM00263    
                  ROLDER = 0                                                                      *211 LM00264    
                  DAY = NOW - K                                                                   *212 LM00265    
                                                                                                       LM00266    
                  THROUGH ALPHA, FOR J = K, 1, J.G. 90                                            *213 LM00267    
                  FOLDER = FOLDER + FTBL(J)                                                       *214 LM00268    
                  ROLDER = ROLDER + RTBL(J)                                                       *215 LM00269    
                  VAR = ROLDER/SCALE                                                              *216 LM00270    
      ALPHA       CONTINUE                                                                        *217 LM00271    
                                                                                                       LM00272    
                  WHENEVER DAY .E. MB1                                                            *218 LM00273    
                       MRK = MO1                                                                  *219 LM00274    
                  OR WHENEVER DAY .E. MB2                                                         *220 LM00275    
                       MRK = MO2                                                                  *221 LM00276    
                  OR WHENEVER DAY.MOD. 7 .E. 0                                                    *222 LM00277    
                       MRK = $SUN$                                                                *223 LM00278    
                  OTHERWISE                                                                       *224 LM00279    
                       MRK = $$                                                                   *225 LM00280    
                  END OF CONDITIONAL                                                              *226 LM00281    
                                                                                                       LM00282    
                  DWRITE.(OUT,F7,MRK,K,FTBL(K),FOLDER,RTBL(K),ROLDER,                             *227 LM00283    
                1  XS(1)...XS(VAR))                                                               *227 LM00284    
                                                                                                       LM00285    
      BETA        CONTINUE                                                                        *228 LM00286    
                                                                                                       LM00287    
                  DWRITE.(OUT,F10,XS,SCALE)                                                       *229 LM00288    
                  WHENEVER REF                                                                    *230 LM00289    
                       REF = 0B                                                                   *231 LM00290    
                       DWRITE.(OUT,HEAD)                                                          *232 LM00291    
                       WHENEVER SYSFLG, DWRITE.(OUT,SYSHED)                                       *233 LM00292    
                       DWRITE.(OUT,F6)                                                            *234 LM00293    
                       MOVE.(91,CFTBL,FTBL)                                                       *235 LM00294    
                       MOVE.(91,CRTBL,RTBL)                                                       *236 LM00295    
                       TRANSFER TO HGMLP                                                          *237 LM00296    
                  END OF CONDITIONAL                                                              *238 LM00297    
                                                                                                       LM00298    
                  DWRITE.(OUT,HEAD)                                                               *239 LM00299    
                  WHENEVER SYSFLG, DWRITE.(OUT,SYSHED)                                            *240 LM00300    
                                                                                                       LM00301    
                  DWRITE.(OUT,F9)                                                                 *241 LM00302    
                                                                                                       LM00303    
                  THROUGH PRN, FOR I=0,1,I.G.MAX                                                  *242 LM00304    
      PRN         DWRITE.(OUT,FM1,NAME1(I),NAME2(I),CLASS(I),COUNT(I),NRECS(I),                   *243 LM00305    
                1 COUNTL(I))                                                                      *243 LM00306    
                                                                                                       LM00307    
                  DWRITE.(OUT,FM2)                                                                *244 LM00308    
                  THROUGH PRC, FOR I=0,1,I.G.MXCLS                                                *245 LM00309    
      PRC         DWRITE.(OUT,FM1,$$,CLNAME(I),I,CCOUNT(I),CNRECS(I),CCOUNL(I))                   *246 LM00310    
                                                                                                       LM00311    
                  FILE.(OUT)                                                                      *247 LM00312    
                                                                                                       LM00313    
                  FUNCTION RETURN                                                                 *248 LM00314    
                                                                                                       LM00315    
      ERR         NCOM.($PRNTER$,777777777777K)                                                   *249 LM00316    
                                                                                                       LM00317    
                                                                                                       LM00318    
                  NORMAL MODE IS INTEGER                                                          *250 LM00319    
                  FLOATING POINT X1, X2, X3, X4, X5, X6, X7, X8, X9, X10                          *251 LM00320    
                  FLOATING POINT AGES2, TREC2, UFDF2, UFDR2, UFDL2                                *252 LM00321    
                  FLOATING POINT SQRT.                                                            *253 LM00322    
                  FLOATING POINT XTF, XNUFD, AGESUM                                               *254 LM00323    
                  VECTOR VALUES REF = 1B                                                          *255 LM00324    
                                                                                                       LM00325    
                 ...CAPACITY OF DISK                                                                   LM00326    
                  VECTOR VALUES CAPACY = 160 000                                                  *256 LM00327    
                  VECTOR VALUES SCALE = 1600                                                      *257 LM00328    
                  SCALE DETERMINES THE NUMBER OF FILES PER 'X' ON THE GRAPH                            LM00329    
                                                                                                       LM00330    
                  VECTOR VALUES DAYS = 31,31,28,31,30,31,30,31,31,30,31,30,31                     *258 LM00331    
                  VECTOR VALUES MONNAM = $DEC$,$JAN$,$FEB$,$MAR$,$APR$,$MAY$,$JUN$,               *259 LM00332    
                1  $JUL$,$AUG$,$SEP$,$OCT$,$NOV$,$DEC$                                            *259 LM00333    
                  VECTOR VALUES DAYNAM = $SUN$,$MON$,$TUE$,$WED$,$THU$,$FRI$,$SAT$                *260 LM00334    
                                                                                                       LM00335    
                  VECTOR VALUES WHO...WHO(3) = 0                                                  *261 LM00336    
                  VECTOR VALUES ME...ME(1) = 0                                                    *262 LM00337    
                                                                                                       LM00338    
                 ...MODE STATS                                                                         LM00339    
                  VECTOR VALUES MODBIT = 0,1K,2K,4K,10K,20K,40K,100K,200K                         *263 LM00340    
                  VECTOR VALUES MODFIL...MODFIL(8) = 0                                            *264 LM00341    
                  VECTOR VALUES MODREC...MODREC(8) = 0                                            *265 LM00342    
                                                                                                       LM00343    
                 ...CLASS NAME STATS                                                                   LM00344    
                  VECTOR VALUES COUNT...COUNT(150)=0                                              *266 LM00345    
                  VECTOR VALUES NRECS...NRECS(150)=0                                              *267 LM00346    
                  VECTOR VALUES CLASS...CLASS(150)=0                                              *268 LM00347    
                  VECTOR VALUES COUNTL...COUNTL(150)=0                                            *269 LM00348    
                  VECTOR VALUES NAME1...NAME1(150)=$OTHER$                                        *270 LM00349    
                  VECTOR VALUES NAME2 ...NAME2 (150)=$FILES$                                      *271 LM00350    
                  VECTOR VALUES MASK1 ...MASK1 (150)=777777777777K                                *272 LM00351    
                  VECTOR VALUES MASK2 ...MASK2 (150) = 777777777777K                              *273 LM00352    
                  VECTOR VALUES CCOUNL...CCOUNL(20)=0                                             *274 LM00353    
                  VECTOR VALUES CCOUNT...CCOUNT(20)=0                                             *275 LM00354    
                  VECTOR VALUES CNRECS...CNRECS(20)=0                                             *276 LM00355    
                  VECTOR VALUES CLNAME...CLNAME(20)=$OTHER$                                       *277 LM00356    
                  VECTOR VALUES MAX=1                                                             *278 LM00357    
                  VECTOR VALUES MXCLS=0                                                           *279 LM00358    
                                                                                                       LM00359    
                 ...STORAGE FOR AGES                                                                   LM00360    
                  VECTOR VALUES FTBL...FTBL(91) = 0                                               *280 LM00361    
                  VECTOR VALUES RTBL...RTBL(91) = 0                                               *281 LM00362    
                  VECTOR VALUES CFTBL...CFTBL(91) = 0                                             *282 LM00363    
                  VECTOR VALUES CRTBL...CRTBL(91) = 0                                             *283 LM00364    
                  VECTOR VALUES XS...XS(100) = $X$                                                *284 LM00365    
                                                                                                       LM00366    
                  DIMENSION B1(432),B2(432),B3(432)                                               *285 LM00367    
                  DIMENSION CARD(13)                                                              *286 LM00368    
                                                                                                       LM00369    
                  VECTOR VALUES OUT=$  STAT  FILE$                                                *287 LM00370    
                  VECTOR VALUES SEARCH=$SEARCH$                                                   *288 LM00371    
                  VECTOR VALUES FL=$  FILE$                                                       *289 LM00372    
                                                                                                       LM00373    
                  VECTOR VALUES M1=77777K                                                         *290 LM00374    
                  VECTOR VALUES M2=77776K                                                         *291 LM00375    
                  VECTOR VALUES M3=77775K                                                         *292 LM00376    
                  VECTOR VALUES M4=77774K                                                         *293 LM00377    
                  VECTOR VALUES M5=77773K                                                         *294 LM00378    
                                                                                                       LM00379    
                 ...FORMAT STATEMENTS..................................                                LM00380    
                                                                                                       LM00381    
                  VECTOR VALUES HEAD=$H'1        M A S S A C H U S E T T S   I N S T I',          *295 LM00382    
                1 H' T U T E   O F   T E C H N O L O G Y',/,/,                                    *295 LM00383    
                2 11X,H'      I N F O R M A T I O N   P R O C E S S I N G ',                      *295 LM00384    
                3 H'  C E N T E R'*$                                                              *295 LM00385    
                                                                                                       LM00386    
                  VECTOR VALUES SYSHED=$1H0,30X,H'(EXCLUDING SYSTEM FILES)'*$                     *296 LM00387    
                                                                                                       LM00388    
                  VECTOR VALUES F0 = $1H0,S8,H'SECONDARY STORAGE USAGE SUMMARY PREPARED'          *297 LM00389    
                1 , S2,C6,S2,C3,2H, C3,I3,4H, 19,I2,H'   SYSTEM ',C6*$                            *297 LM00390    
                                                                                                       LM00391    
                  VECTOR VALUES F1= $1H0,S18,H'FILES   RECORDS',S27,H'MEAN   STD DEV.',/,         *298 LM00392    
                1 1H0,S8,H'DISK ',I10,I10,S7,H'FILES/UFD      ',2F10.3,/,                         *298 LM00393    
                2 1H0,S8,H'UFD  ',I10,S10,S7,H'RECS/UFD       ',2F10.3,/,                         *298 LM00394    
                3 1H0,S8,H'LINKS',I10,S10,S7,H'LINKS/UFD      ',2F10.3,/,                         *298 LM00395    
                4 1H0,S40,                   H'FILE LENGTH    ',2F10.3,/,                         *298 LM00396    
                5 1H0,S40,                   H'FILE AGE (DAYS)',2F10.3*$                          *298 LM00397    
                                                                                                       LM00398    
                  VECTOR VALUES F3 = $1H-,S8,H'CAPACITY',I9,H', USED',I9,                         *299 LM00399    
                1  H', LEFT',I9,H', WASTE',F7.3,H' PER CENT.'*$                                   *299 LM00400    
                                                                                                       LM00401    
                  VECTOR VALUES F4 = $1H-,S8,H'SUMMARY BY MODE BIT',//,S9,                        *300 LM00402    
                1 H'MODE    FILES     RECS ',/*$                                                  *300 LM00403    
                                                                                                       LM00404    
                  VECTOR VALUES F4A = $S10,CR3,2I9*$                                              *301 LM00405    
                                                                                                       LM00406    
                  VECTOR VALUES F5 = $1H0,S8,H'SUMMARY BY DATE OF LAST REFERENCE TO FILE'         *302 LM00407    
                1 *$                                                                              *302 LM00408    
                                                                                                       LM00409    
                  VECTOR VALUES F5A =                                                             *303 LM00410    
                1 $H'0     AGE   FILES  OLDER  RECS   OLDER     LINEAR PLOT'                      *303 LM00411    
                2 ,//*$                                                                           *303 LM00412    
                                                                                                       LM00413    
                  VECTOR VALUES F6 = $1H0,S8,H'SUMMARY BY DATE OF CREATION OF FILE'*$             *304 LM00414    
                                                                                                       LM00415    
                  VECTOR VALUES F7 = $1H ,C5,I3,S1,4I7,S2,100C1*$                                 *305 LM00416    
                                                                                                       LM00417    
                  VECTOR VALUES F9 = $H'0 DISK USAGE BY CLASS NAME',//,                           *306 LM00418    
                1 H'0      NAME1  NAME2  TYPE  FILES  RECORDS  LINKS',/*$                         *306 LM00419    
                                                                                                       LM00420    
                  VECTOR VALUES F10 = $/,/,/,/15H  SCALE - ONE ',C1,4H' = ,I4,                    *307 LM00421    
                1  H' RECORDS.'*$                                                                 *307 LM00422    
                                                                                                       LM00423    
                  VECTOR VALUES FM1=$S6,C6,S1,C6,S3,I2,3I8*$                                      *308 LM00424    
                                                                                                       LM00425    
                  VECTOR VALUES FM2=$H'- USAGE BY TYPE            FILES  RECORDS  LINKS'          *309 LM00426    
                1 ,/*$                                                                            *309 LM00427    
                                                                                                       LM00428    
                  END OF FUNCTION                                                                 *310 LM00429    
                                       MODE STRUCTURE 1 .MOD. 1 TO 1          004  LM00002
 (THE NUMERIC FORM OF THE OPERATOR-MODE ARGUMENT IS    11111 )    
                                         MODE STRUCTURE 1 .XOR. 1 TO 1        028  LM00002
 (THE NUMERIC FORM OF THE OPERATOR-MODE ARGUMENT IS    11211 )    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   10607 TRANSFER VECTOR LENGTH  00031 PROGRAM BEGINS    06653
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      FPRINT 07667   0        COUNTR 07120   0        FINIT  06654   0                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      AGE    00043   1        EOF    00035   4        M1     04553 A 1        NAME2  06001 A 1        TR     06414   1  
      AGES2  00044   0        ERR    00036   4        M2     04554 A 1        NOW    06002   1        TRSIZE 06415   1  
      AGESUM 00045   0        F0     04100 A 1        M3     04555 A 1        NRECS  06231 A 1        TSUFDF 06416   1  
      ALPHA  00032   4        F10    04113 A 1        M4     04556 A 1        NUFD   06232   1        TSUFDL 06417   1  
      B1     00726 A 1        F1     04206 A 1        M5     04557 A 1        OLPROB 06233   1        TSUFDR 06420   1  
      B2     01607 A 1        F3     04226 A 1        MASK1  05006 A 1        OLPROG 06234   1        TYPE   00042   4  
      B3     02470 A 1        F4A    04230 A 1        MASK2  05235 A 1        OUT    06236 A 1        UFDF2  06421   0  
      BETA   00032   4        F4     04246 A 1        MAX    05236 A 1        PML    00032   4        UFDL2  06422   0  
      CAPACY 02471 A 1        F5A    04261 A 1        MB1    05237   1        PRC    00032   4        UFDR2  06423   0  
      CARD   02507 A 1        F5     04272 A 1        MB2    05240   1        PRN    00032   4        VAR    06424   1  
      CCOUNL 02534 A 1        F6     04302 A 1        ME     05242 A 1        READ   00040   4        WHO    06430 A 1  
      CCOUNT 02561 A 1        F7     04307 A 1        MO1    05243   1        REF    06237 A 2        X10    06431   0  
      CFTBL  02715 A 1        F9     04331 A 1        MO2    05244   1        ROLDER 06240   1        X1     06432   0  
      CLASS  03144 A 1        FL     04332 A 1        MODBIT 05255 A 1        RSIZE  06241   1        X2     06433   0  
      CLNAME 03171 A 1        FM1    04336 A 1        MODE   05256   1        RTBL   06375 A 1        X3     06434   0  
      CNAME  00033   4        FM2    04350 A 1        MODFIL 05267 A 1        SCALE  06376 A 1        X4     06435   0  
      CNRECS 03216 A 1        FOLDER 04351   1        MODLP  00032   4        SCLS   00032   4        X5     06436   0  
      COUNTL 03445 A 1        F      04352   1        MODREC 05300 A 1        SEARCH 06377 A 1        X6     06437   0  
      COUNT  03674 A 1        FTBL   04506 A 1        MONNAM 05315 A 1        SET    00041   4        X7     06440   0  
      CRTBL  04030 A 1        HEAD   04546 A 1        MONTH  05316   1        SIZE   06400   1        X8     06441   0  
      DA     04031   1        HGMLP  00037   4        MO     05317   1        SYSFLG 06401 A 2        X9     06442   0  
      DATE   04032   1        I      04547   1        MRK    05320   1        SYSHED 06407 A 1        XNUFD  06443   0  
      DAYNAM 04041 A 1        J      04550   1        MXCLS  05321 A 1        TEMP   06410   1        XS     06610 A 1  
      DAY    04042   1        K      04551   1        N1     05322   1        TF     06411   1        XTF    06611   0  
      DAYS   04057 A 1        LINKS  04552   1        N2     05323   1        TIME   06412   1        YEAR   06612   1  
      DOAGE  00034   4        LOOP   00032   4        NAME1  05552 A 1        TREC2  06413   0        YR     06613   1  
0FUNCTION DICTIONARY    
      ABSDAT 00000   1        ASSIGN 00001   1        ATTACH 00002   1        ATTNAM 00003   1        BCDEC  00004   1  
      BFCLOS 00005   1        BFOPEN 00006   1        BFREAD 00007   1        COMARG 00010   1        DELETE 00011   1  
      DWRITE 00012   1        EXIT   00013   1        FERRTN 00014   1        FILE   00015   1        GETIM  00016   1  
      GETTM  00017   1        IOHSIZ 00020   1        MOVE   00021   1        NAMASK 00022   1        NCOM   00023   1  
      OCRBC  00024   1        RJUST  00025   1        SNAP   00026   1        SQRT   00027   0        WHOAMI 00030   1  
      NEWUFD 00031   1                                                                                                  
0ABSOLUTE CONSTANTS     
 06652 -377777777777     06643 -075145632551     06635 +000000000133     06650 -226445606060     06641 +207620000000    
 06634 +000000000132     06633 +000000000037     06620 +000000000005     06623 +000000000011     06622 +000000000010    
 06632 +000000000034     06630 +000000000022     06621 +000000000007     06627 +000000000017     06645 -204401040106    
 06637 +002300000000     06640 +007700000000     06651 -342631432534     06624 +000000000012     06625 +000000000014    
 06631 +000000000030     06636 +000000007777     06646 -206060606060     06626 +000000000016     06644 -116060606060    
 06614 +000000000000     06616 +000000000002     06617 +000000000004     06647 -207462706234     06615 +000000000001    
 06642 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00033 TXL -307412007400       00034 TXL -307523007515       00035 TXL -307027007024       00036 TXL -310551010546      
 00037 TXL -310221010216       00040 TXL -306725006714       00041 TXL -307020007015       00042 TXL -307434007431      
0PROGRAM    
                 EXTERNAL FUNCTION(PROBN,PROGN,BUFF)                                001  LM00010
                 I'E .MOD.                                                          002  LM00013
                     DEFINE BINARY OPERATOR .MOD., PRECEDENCE SAME AS /             003  LM00001
                     MODE STRUCTURE 1 .MOD. 1 TO 1                                  004  LM00002
                 I'E .XOR.                                                          026  LM00014
                 DEFINE BINARY OPERATOR .XOR., PRECEDENCE SAME AS .A.               027  LM00001
                 MODE STRUCTURE 1 .XOR. 1 TO 1                                      028  LM00002
                 E'O FINIT.                                                         051  LM00023
 06653 TRA +0 02000 0 06656    06654 SXA +0 63400 2 10552    06655 TSX +0 07400 2 10552                                 
                 W'R COMARG.(1).E.$ (SYS)$, SYSFLG = 1B                             052  LM00026
 06656 TSX +0 07400 4 00010    06657 TXH +3 00000 0 06615    06660 SUB +0 40200 0 06647    06661 TNZ -0 10000 0 06664   
 06662 CLA +0 50000 0 06615    06663 STO +0 60100 0 06401                                                               
                 BOOLEAN SYSFLG                                                     053  LM00027
                 V'S SYSFLG = 0B                                                    054  LM00028
 06401     +0 00000 0 00000                                                                                             
                 GETTM.(DATE,TIME)                                                  055  LM00030
 06664 TSX +0 07400 4 00017    06665 TXH +3 00000 0 04032    06666 TXH +3 00000 0 06412                                 
                 GETIM.(TEMP,DATE)                                                  056  LM00031
 06667 TSX +0 07400 4 00016    06670 TXH +3 00000 0 06410    06671 TXH +3 00000 0 04032                                 
                 WHOAMI.(WHO(3)...4)                                                057  LM00032
 06672 TSX +0 07400 4 00030    06673 TIX +2 06617 0 06425                                                               
                 ATTNAM.(ME(1)...2)                                                 058  LM00033
 06674 TSX +0 07400 4 00003    06675 TIX +2 06616 0 05241                                                               
                 FERRTN.(ERR)                                                       059  LM00034
 06676 TSX +0 07400 4 00014    06677 TXH +3 00000 0 00036                                                               
                 IOHSIZ.(1)                                                         060  LM00035
 06700 TSX +0 07400 4 00020    06701 TXH +3 00000 0 06615                                                               
                 BFOPEN.($R$,SEARCH,FL,B1(432),B2(432),-0,ERR)                      061  LM00037
 06702 CLS +0 50200 0 06614    06703 STO +0 60100 0 10603    06704 TSX +0 07400 4 00006    06705 TXH +3 00000 0 06644   
 06706 TXH +3 00000 0 06377    06707 TXH +3 00000 0 04332    06710 TXH +3 00000 0 00046    06711 TXH +3 00000 0 00727   
 06712 TXH +3 00000 0 10603    06713 TXH +3 00000 0 00036                                                               
      READ       BFREAD.(SEARCH,FL,CARD(13)...14,EOF,-0,ERR)                        062  LM00039
 06714 CLS +0 50200 0 06614    06715 STO +0 60100 0 10603    06716 TSX +0 07400 4 00007    06717 TXH +3 00000 0 06377   
 06720 TXH +3 00000 0 04332    06721 TIX +2 06626 0 02472    06722 TXH +3 00000 0 00035    06723 TXH +3 00000 0 10603   
 06724 TXH +3 00000 0 00036                                                                                             
                 NAME1(MAX)=RJUST.(CARD(13))                                        063  LM00040
 06725 TSX +0 07400 4 00025    06726 TXH +3 00000 0 02472    06727 LXA +0 53400 1 05236    06730 STO +0 60100 1 05552   
                 NAME2(MAX)=RJUST.(CARD(12))                                        064  LM00041
 06731 TSX +0 07400 4 00025    06732 TXH +3 00000 0 02473    06733 LXA +0 53400 1 05236    06734 STO +0 60100 1 06001   
                 MASK1(MAX) = NAMASK.(NAME1(MAX))                                   065  LM00042
 06735 CLA +0 50000 0 05236    06736 SUB +0 40200 0 06737    06737 TXH +3 00000 0 05552    06740 STA +0 62100 0 06742   
 06741 TSX +0 07400 4 00022    06742 TXH +3 00000 0 00000    06743 LXA +0 53400 1 05236    06744 STO +0 60100 1 05006   
                 MASK2(MAX) = NAMASK.(NAME2(MAX))                                   066  LM00043
 06745 CLA +0 50000 0 05236    06746 SUB +0 40200 0 06747    06747 TXH +3 00000 0 06001    06750 STA +0 62100 0 06752   
 06751 TSX +0 07400 4 00022    06752 TXH +3 00000 0 00000    06753 LXA +0 53400 1 05236    06754 STO +0 60100 1 05235   
                 TEMP=RJUST.(CARD(11))                                              067  LM00044
 06755 TSX +0 07400 4 00025    06756 TXH +3 00000 0 02474    06757 STO +0 60100 0 06410                                 
                 W'R TEMP .E. $$                                                    068  LM00045
 06760 CLA +0 50000 0 06410    06761 SUB +0 40200 0 06646    06762 TNZ -0 10000 0 06767                                 
                      CLASS(MAX)=0                                                  069  LM00046
 06763 LXA +0 53400 1 05236    06764 CLA +0 50000 0 06614    06765 STO +0 60100 1 03144                                 
                 O'E                                                                070  LM00048
 06766 TRA +0 02000 0 07020                                                                                             
                      T'H SCLS, FOR I=0,1,I.G.MXCLS                                 071  LM00049
 06767 CLA +0 50000 0 06614    06770 STO +0 60100 0 04547    06771 TRA +0 02000 0 06775    06772 CLA +0 50000 0 04547   
 06773 ADD +0 40000 0 06615    06774 STO +0 60100 0 04547    06775 CLA +0 50000 0 04547    06776 SUB +0 40200 0 05321   
 06777 TZE +0 10000 0 07001    07000 TPL +0 12000 0 07007                                                               
                      W'R TEMP .E. CLNAME(I), T'O SET                               072  LM00050
 07001 LXA +0 53400 2 04547    07002 CLA +0 50000 0 06410    07003 SUB +0 40200 2 03171    07004 TNZ -0 10000 0 07006   
 07005 TRA +0 02000 0 00041                                                                                             
      SCLS            C'E                                                           073  LM00051
 07006 TRA +0 02000 0 06772                                                                                             
                      MXCLS=MXCLS+1                                                 074  LM00053
 07007 CLA +0 50000 0 05321    07010 ADD +0 40000 0 06615    07011 STO +0 60100 0 05321                                 
                      CLNAME(MXCLS)=TEMP                                            075  LM00054
 07012 LXA +0 53400 1 05321    07013 CLA +0 50000 0 06410    07014 STO +0 60100 1 03171                                 
      SET             CLASS(MAX)=I                                                  076  LM00055
 07015 LXA +0 53400 1 05236    07016 CLA +0 50000 0 04547    07017 STO +0 60100 1 03144                                 
                 E'L                                                                077  LM00056
                 MAX=MAX+1                                                          078  LM00057
 07020 CLA +0 50000 0 05236    07021 ADD +0 40000 0 06615    07022 STO +0 60100 0 05236                                 
                 T'O READ                                                           079  LM00058
 07023 TRA +0 02000 0 00040                                                                                             
      EOF        BFCLOS.(SEARCH,FL)                                                 080  LM00060
 07024 TSX +0 07400 4 00005    07025 TXH +3 00000 0 06377    07026 TXH +3 00000 0 04332                                 
                 MAX=MAX-1                                                          081  LM00061
 07027 CLA +0 50000 0 05236    07030 SUB +0 40200 0 06615    07031 STO +0 60100 0 05236                                 
                 YR = BCDEC.(DATE.A.7777K)                                          082  LM00063
 07032 CAL -0 50000 0 04032    07033 ANA -0 32000 0 06636    07034 SLW +0 60200 0 10603    07035 TSX +0 07400 4 00004   
 07036 TXH +3 00000 0 10603    07037 STO +0 60100 0 06613                                                               
                 MO = BCDEC.((DATE.RS.24).A.7777K)                                  083  LM00064
 07040 CAL -0 50000 0 06631    07041 STA +0 62100 0 07043    07042 CAL -0 50000 0 04032    07043 LGR -0 76500 0 00000   
 07044 ANA -0 32000 0 06636    07045 SLW +0 60200 0 10603    07046 TSX +0 07400 4 00004    07047 TXH +3 00000 0 10603   
 07050 STO +0 60100 0 05317                                                                                             
                 DA = BCDEC.((DATE.RS.12).A.7777K)                                  084  LM00065
 07051 CAL -0 50000 0 06625    07052 STA +0 62100 0 07054    07053 CAL -0 50000 0 04032    07054 LGR -0 76500 0 00000   
 07055 ANA -0 32000 0 06636    07056 SLW +0 60200 0 10603    07057 TSX +0 07400 4 00004    07060 TXH +3 00000 0 10603   
 07061 STO +0 60100 0 04031                                                                                             
                 NOW = ABSDAT.(MO, DA, YR)                                          085  LM00066
 07062 TSX +0 07400 4 00000    07063 TXH +3 00000 0 05317    07064 TXH +3 00000 0 04031    07065 TXH +3 00000 0 06613   
 07066 STO +0 60100 0 06002                                                                                             
                 MB1 = NOW - DA                                                     086  LM00069
 07067 CLA +0 50000 0 06002    07070 SUB +0 40200 0 04031    07071 STO +0 60100 0 05237                                 
                 MB2 = MB1 - DAYS(MO-1)                                             087  LM00070
 07072 CLA +0 50000 0 05317    07073 SUB +0 40200 0 06615    07074 PAX +0 73400 2 00000    07075 CLA +0 50000 0 05237   
 07076 SUB +0 40200 2 04057    07077 STO +0 60100 0 05240                                                               
                 MO1 = MONNAM(MO-1)                                                 088  LM00071
 07100 CLA +0 50000 0 05317    07101 SUB +0 40200 0 06615    07102 PAX +0 73400 2 00000    07103 CLA +0 50000 2 05315   
 07104 STO +0 60100 0 05243                                                                                             
                 MO2 = MONNAM((MO+10).MOD.12)                                       089  LM00072
 07105 CLA +0 50000 0 05317    07106 ADD +0 40000 0 06624    07107 XCA +0 13100 0 00000    07110 PXD -0 75400 0 00000   
 07111 LLS +0 76300 0 00000    07112 DVP +0 22100 0 06625    07113 PAX +0 73400 2 00000    07114 CLA +0 50000 2 05315   
 07115 STO +0 60100 0 05244                                                                                             
                 F'N                                                                090  LM00075
 07116 TRA +0 02000 0 10577                                                                                             
                 E'O COUNTR.                                                        091  LM00095
 07117 TRA +0 02000 0 07122    07120 SXA +0 63400 2 10552    07121 TSX +0 07400 2 10552                                 
                 W'R PROGN  .E. $(FILE)$, F'N                                       092  LM00098
 07122 CLA +0 50000 0 00024    07123 SUB +0 40200 0 06651    07124 TNZ -0 10000 0 07126    07125 TRA +0 02000 0 10577   
                 W'R SYSFLG                                                         093  LM00099
 07126 NZT -0 52000 0 06401    07127 TRA +0 02000 0 07142                                                               
                    W'R PROBN.E.$ M1416$.OR.PROBN.A.77K8.E.$0C0000$,F'N             094  LM00100
 07130 CAL -0 50000 0 00024    07131 ANA -0 32000 0 06640    07132 SLW +0 60200 0 10603    07133 CLA +0 50000 0 10603   
 07134 SUB +0 40200 0 06637    07135 TZE +0 10000 0 07141    07136 CLA +0 50000 0 00024    07137 SUB +0 40200 0 06645   
 07140 TNZ -0 10000 0 07142    07141 TRA +0 02000 0 10577                                                               
                 E'L                                                                095  LM00101
                 N2=BUFF(M1)                                                        096  LM00103
 07142 LXA +0 53400 2 04553    07143 CLA +0 50000 2 00024    07144 STO +0 60100 0 05323                                 
                 N1=BUFF                                                            097  LM00104
 07145 CLA +0 50000 0 00024    07146 STO +0 60100 0 05322                                                               
                 F=(BUFF(M4).RS.15).A.7K                                            098  LM00106
 07147 LXA +0 53400 1 04556    07150 CAL -0 50000 0 06627    07151 STA +0 62100 0 07153    07152 CAL -0 50000 1 00024   
 07153 LGR -0 76500 0 00000    07154 ANA -0 32000 0 06621    07155 SLW +0 60200 0 04352                                 
                 SIZE=(BUFF(M5).RS.18).A.M1                                         099  LM00108
 07156 LXA +0 53400 1 04557    07157 CAL -0 50000 0 06630    07160 STA +0 62100 0 07162    07161 CAL -0 50000 1 00024   
 07162 LGR -0 76500 0 00000    07163 ANA -0 32000 0 04553    07164 SLW +0 60200 0 06400                                 
                 W'R F .NE. 2, SIZE=0                                               100  LM00109
 07165 CLA +0 50000 0 04352    07166 SUB +0 40200 0 06616    07167 TZE +0 10000 0 07172    07170 CLA +0 50000 0 06614   
 07171 STO +0 60100 0 06400                                                                                             
                 W'R PROBN .NE. OLPROB .OR. PROGN .NE. OLPROG                       101  LM00111
 07172 CLA +0 50000 0 00024    07173 SUB +0 40200 0 06234    07174 TNZ -0 10000 0 07200    07175 CLA +0 50000 0 00024   
 07176 SUB +0 40200 0 06233    07177 TZE +0 10000 0 07261                                                               
                      INTERNAL FUNCTION                                             102  LM00113
 07200 TRA +0 02000 0 07260                                                                                             
                      E'O NEWUFD.                                                   103  LM00114
 07201 TRA +0 02000 0 07204    00031 TTR +0 02100 0 07202    07202 SXA +0 63400 2 07250    07203 TSX +0 07400 2 07250   
                      NUFD = NUFD + 1                                               104  LM00115
 07204 CLA +0 50000 0 06232    07205 ADD +0 40000 0 06615    07206 STO +0 60100 0 06232                                 
                      UFDF2 = UFDF2+TSUFDF*TSUFDF                                   105  LM00116
 07207 LDQ +0 56000 0 06416    07210 MPY +0 20000 0 06416    07211 XCA +0 13100 0 00000    07212 ORA -0 50100 0 06642   
 07213 FAD +0 30000 0 06642    07214 FAD +0 30000 0 06421    07215 STO +0 60100 0 06421                                 
                      UFDL2 = UFDL2+TSUFDL*TSUFDL                                   106  LM00117
 07216 LDQ +0 56000 0 06417    07217 MPY +0 20000 0 06417    07220 XCA +0 13100 0 00000    07221 ORA -0 50100 0 06642   
 07222 FAD +0 30000 0 06642    07223 FAD +0 30000 0 06422    07224 STO +0 60100 0 06422                                 
                      UFDR2 = UFDR2+TSUFDR*TSUFDR                                   107  LM00118
 07225 LDQ +0 56000 0 06420    07226 MPY +0 20000 0 06420    07227 XCA +0 13100 0 00000    07230 ORA -0 50100 0 06642   
 07231 FAD +0 30000 0 06642    07232 FAD +0 30000 0 06423    07233 STO +0 60100 0 06423                                 
                      TSUFDF = 0                                                    108  LM00119
 07234 CLA +0 50000 0 06614    07235 STO +0 60100 0 06416                                                               
                      TSUFDL = 0                                                    109  LM00120
 07236 CLA +0 50000 0 06614    07237 STO +0 60100 0 06417                                                               
                      TSUFDR = 0                                                    110  LM00121
 07240 CLA +0 50000 0 06614    07241 STO +0 60100 0 06420                                                               
                      OLPROB = PROBN                                                111  LM00122
 07242 CLA +0 50000 0 00024    07243 STO +0 60100 0 06233                                                               
                      OLPROG = PROGN                                                112  LM00123
 07244 CLA +0 50000 0 00024    07245 STO +0 60100 0 06234                                                               
                      F'N                                                           113  LM00124
 07246 TRA +0 02000 0 07254                                                                                             
                      E'N                                                           114  LM00125
 07247 TSX +0 07400 4 00013    07250 TXH +3 00000 0 00000    07251 SXD -0 63400 1 07250    07252 SXA +0 63400 4 07254   
 07253 TRA +0 02000 2 00001    07254 AXT +0 77400 4 00000    07255 LXA +0 53400 2 07250    07256 LXD -0 53400 1 07250   
 07257 TRA +0 02000 4 00001                                                                                             
                      NEWUFD.                                                       115  LM00126
 07260 TSX +0 07400 4 00031                                                                                             
                 E'L                                                                116  LM00127
                 W'R F .E.0                                                         117  LM00130
 07261 CLA +0 50000 0 04352    07262 SUB +0 40200 0 06614    07263 TNZ -0 10000 0 07274                                 
                      LINKS = LINKS + 1                                             118  LM00132
 07264 CLA +0 50000 0 04552    07265 ADD +0 40000 0 06615    07266 STO +0 60100 0 04552                                 
                      TSUFDL = TSUFDL + 1                                           119  LM00133
 07267 CLA +0 50000 0 06417    07270 ADD +0 40000 0 06615    07271 STO +0 60100 0 06417                                 
                      T'O CNAME                                                     120  LM00134
 07272 TRA +0 02000 0 00033                                                                                             
                 O'R F .E. 2                                                        121  LM00135
 07273 TRA +0 02000 0 07316    07274 CLA +0 50000 0 04352    07275 SUB +0 40200 0 06616    07276 TNZ -0 10000 0 07316   
                      W'R SIZE .A. 1K .E. 1K                                        122  LM00137
 07277 CAL -0 50000 0 06400    07300 ANA -0 32000 0 06615    07301 SLW +0 60200 0 10603    07302 CLA +0 50000 0 10603   
 07303 SUB +0 40200 0 06615    07304 TNZ -0 10000 0 07311                                                               
                           RSIZE = SIZE + 1                                         123  LM00138
 07305 CLA +0 50000 0 06400    07306 ADD +0 40000 0 06615    07307 STO +0 60100 0 06241                                 
                      O'E                                                           124  LM00139
 07310 TRA +0 02000 0 07313                                                                                             
                           RSIZE = SIZE                                             125  LM00140
 07311 CLA +0 50000 0 06400    07312 STO +0 60100 0 06241                                                               
                      E'L                                                           126  LM00141
                      TRSIZE = TRSIZE + RSIZE                                       127  LM00143
 07313 CLA +0 50000 0 06415    07314 ADD +0 40000 0 06241    07315 STO +0 60100 0 06415                                 
                 E'L                                                                128  LM00144
                 TSUFDR = TSUFDR + SIZE                                             129  LM00149
 07316 CLA +0 50000 0 06420    07317 ADD +0 40000 0 06400    07320 STO +0 60100 0 06420                                 
                 TSUFDF = TSUFDF + 1                                                130  LM00150
 07321 CLA +0 50000 0 06416    07322 ADD +0 40000 0 06615    07323 STO +0 60100 0 06416                                 
                 TR = TR + SIZE                                                     131  LM00151
 07324 CLA +0 50000 0 06414    07325 ADD +0 40000 0 06400    07326 STO +0 60100 0 06414                                 
                 TF = TF + 1                                                        132  LM00152
 07327 CLA +0 50000 0 06411    07330 ADD +0 40000 0 06615    07331 STO +0 60100 0 06411                                 
                 TREC2  = TREC2  + SIZE * SIZE                                      133  LM00153
 07332 LDQ +0 56000 0 06400    07333 MPY +0 20000 0 06400    07334 XCA +0 13100 0 00000    07335 ORA -0 50100 0 06642   
 07336 FAD +0 30000 0 06642    07337 FAD +0 30000 0 06413    07340 STO +0 60100 0 06413                                 
                 MODE = BUFF(M4) .RS. 28                                            134  LM00156
 07341 LXA +0 53400 1 04556    07342 CAL -0 50000 0 06632    07343 STA +0 62100 0 07345    07344 CAL -0 50000 1 00024   
 07345 LGR -0 76500 0 00000    07346 SLW +0 60200 0 05256                                                               
                 T'H MODLP, FOR I = 1,1,I.G.8                                       135  LM00157
 07347 CLA +0 50000 0 06615    07350 STO +0 60100 0 04547    07351 TRA +0 02000 0 07355    07352 CLA +0 50000 0 04547   
 07353 ADD +0 40000 0 06615    07354 STO +0 60100 0 04547    07355 CLA +0 50000 0 04547    07356 SUB +0 40200 0 06622   
 07357 TZE +0 10000 0 07361    07360 TPL +0 12000 0 07400                                                               
                 W'R MODE.A.MODBIT(I) .NE. 0                                        136  LM00158
 07361 LXA +0 53400 2 04547    07362 CAL -0 50000 0 05256    07363 ANA -0 32000 2 05255    07364 SLW +0 60200 0 10603   
 07365 CLA +0 50000 0 10603    07366 SUB +0 40200 0 06614    07367 TZE +0 10000 0 07377                                 
                      MODFIL(I) = MODFIL(I) + 1                                     137  LM00159
 07370 LXA +0 53400 1 04547    07371 CLA +0 50000 1 05267    07372 ADD +0 40000 0 06615    07373 STO +0 60100 1 05267   
                      MODREC(I) = MODREC(I) + SIZE                                  138  LM00160
 07374 CLA +0 50000 1 05300    07375 ADD +0 40000 0 06400    07376 STO +0 60100 1 05300                                 
                 E'L                                                                139  LM00161
      MODLP      C'E                                                                140  LM00162
 07377 TRA +0 02000 0 07352                                                                                             
      CNAME      T'H LOOP, FOR I=1,1,I.G.MAX                                        141  LM00166
 07400 CLA +0 50000 0 06615    07401 STO +0 60100 0 04547    07402 TRA +0 02000 0 07406    07403 CLA +0 50000 0 04547   
 07404 ADD +0 40000 0 06615    07405 STO +0 60100 0 04547    07406 CLA +0 50000 0 04547    07407 SUB +0 40200 0 05236   
 07410 TZE +0 10000 0 07412    07411 TPL +0 12000 0 07512                                                               
                 W'R  (N1.XOR.NAME1(I)).A.MASK1(I) .E. 0                            142  LM00167
                1.AND.(N2.XOR.NAME2(I)).A.MASK2(I) .E. 0                            142  LM00168
 07412 LXA +0 53400 2 04547    07413 CAL -0 50000 0 05323    07414 ERA +0 32200 2 06001    07415 ANA -0 32000 2 05235   
 07416 SLW +0 60200 0 10603    07417 CLA +0 50000 0 10603    07420 SUB +0 40200 0 06614    07421 TNZ -0 10000 0 07511   
 07422 CAL -0 50000 0 05322    07423 ERA +0 32200 2 05552    07424 ANA -0 32000 2 05006    07425 SLW +0 60200 0 10603   
 07426 CLA +0 50000 0 10603    07427 SUB +0 40200 0 06614    07430 TNZ -0 10000 0 07511                                 
      TYPE            W'R F .NE. 0                                                  143  LM00169
 07431 CLA +0 50000 0 04352    07432 SUB +0 40200 0 06614    07433 TZE +0 10000 0 07472                                 
                           COUNT(I)=COUNT(I)+1                                      144  LM00170
 07434 LXA +0 53400 1 04547    07435 CLA +0 50000 1 03674    07436 ADD +0 40000 0 06615    07437 STO +0 60100 1 03674   
                           NRECS(I)=NRECS(I)+SIZE                                   145  LM00171
 07440 CLA +0 50000 1 06231    07441 ADD +0 40000 0 06400    07442 STO +0 60100 1 06231                                 
                           CCOUNT(CLASS(I))=CCOUNT(CLASS(I))+1                      146  LM00172
 07443 CLA +0 50000 1 03144    07444 PAX +0 73400 1 00000    07445 CLA +0 50000 1 02561    07446 ADD +0 40000 0 06615   
 07447 STO +0 60100 0 10603    07450 LXA +0 53400 1 04547    07451 CLA +0 50000 1 03144    07452 PAX +0 73400 1 00000   
 07453 CLA +0 50000 0 10603    07454 STO +0 60100 1 02561                                                               
                           CNRECS(CLASS(I))=CNRECS(CLASS(I))+SIZE                   147  LM00173
 07455 LXA +0 53400 1 04547    07456 CLA +0 50000 1 03144    07457 PAX +0 73400 1 00000    07460 CLA +0 50000 1 03216   
 07461 ADD +0 40000 0 06400    07462 STO +0 60100 0 10603    07463 LXA +0 53400 1 04547    07464 CLA +0 50000 1 03144   
 07465 PAX +0 73400 1 00000    07466 CLA +0 50000 0 10603    07467 STO +0 60100 1 03216                                 
                           T'O DOAGE                                                148  LM00174
 07470 TRA +0 02000 0 00034                                                                                             
                      O'E                                                           149  LM00175
 07471 TRA +0 02000 0 07511                                                                                             
                           COUNTL(I) = COUNTL(I) + 1                                150  LM00176
 07472 LXA +0 53400 1 04547    07473 CLA +0 50000 1 03445    07474 ADD +0 40000 0 06615    07475 STO +0 60100 1 03445   
                           CCOUNL(CLASS(I)) = CCOUNL(CLASS(I)) + 1                  151  LM00177
 07476 CLA +0 50000 1 03144    07477 PAX +0 73400 1 00000    07500 CLA +0 50000 1 02534    07501 ADD +0 40000 0 06615   
 07502 STO +0 60100 0 10603    07503 LXA +0 53400 1 04547    07504 CLA +0 50000 1 03144    07505 PAX +0 73400 1 00000   
 07506 CLA +0 50000 0 10603    07507 STO +0 60100 1 02534                                                               
                           F'N                                                      152  LM00178
 07510 TRA +0 02000 0 10577                                                                                             
                      E'L                                                           153  LM00180
                 E'L                                                                154  LM00181
      LOOP       C'E                                                                155  LM00182
 07511 TRA +0 02000 0 07403                                                                                             
                 I=0                                                                156  LM00184
 07512 CLA +0 50000 0 06614    07513 STO +0 60100 0 04547                                                               
                 T'O TYPE                                                           157  LM00185
 07514 TRA +0 02000 0 00042                                                                                             
      DOAGE      TEMP = BUFF(M3) .RS. 18                                            158  LM00188
 07515 LXA +0 53400 1 04555    07516 CAL -0 50000 0 06630    07517 STA +0 62100 0 07521    07520 CAL -0 50000 1 00024   
 07521 LGR -0 76500 0 00000    07522 SLW +0 60200 0 06410                                                               
                 YEAR = TEMP.RS.9                                                   159  LM00189
 07523 CAL -0 50000 0 06623    07524 STA +0 62100 0 07526    07525 CAL -0 50000 0 06410    07526 LGR -0 76500 0 00000   
 07527 SLW +0 60200 0 06612                                                                                             
                 MONTH= (TEMP.RS.5).A.17K                                           160  LM00190
 07530 CAL -0 50000 0 06620    07531 STA +0 62100 0 07533    07532 CAL -0 50000 0 06410    07533 LGR -0 76500 0 00000   
 07534 ANA -0 32000 0 06627    07535 SLW +0 60200 0 05316                                                               
                 DAY  = TEMP.A.37K                                                  161  LM00191
 07536 CAL -0 50000 0 06410    07537 ANA -0 32000 0 06633    07540 SLW +0 60200 0 04042                                 
                 AGE  = NOW - ABSDAT.(MONTH,DAY,YEAR)                               162  LM00192
 07541 TSX +0 07400 4 00000    07542 TXH +3 00000 0 05316    07543 TXH +3 00000 0 04042    07544 TXH +3 00000 0 06612   
 07545 CHS +0 76000 0 00002    07546 ADD +0 40000 0 06002    07547 STO +0 60100 0 00043                                 
                 W'R AGE.G.90, AGE = 90                                             163  LM00194
 07550 CLA +0 50000 0 00043    07551 SUB +0 40200 0 06634    07552 TZE +0 10000 0 07556    07553 TMI -0 12000 0 07556   
 07554 CLA +0 50000 0 06634    07555 STO +0 60100 0 00043                                                               
                 W'R AGE.L.0, AGE = 0                                               164  LM00195
 07556 CLA +0 50000 0 00043    07557 SUB +0 40200 0 06614    07560 TZE +0 10000 0 07564    07561 TPL +0 12000 0 07564   
 07562 CLA +0 50000 0 06614    07563 STO +0 60100 0 00043                                                               
                 FTBL(AGE) = FTBL(AGE)+1                                            165  LM00196
 07564 LXA +0 53400 1 00043    07565 CLA +0 50000 1 04506    07566 ADD +0 40000 0 06615    07567 STO +0 60100 1 04506   
                 RTBL(AGE) = RTBL(AGE)+SIZE                                         166  LM00197
 07570 CLA +0 50000 1 06375    07571 ADD +0 40000 0 06400    07572 STO +0 60100 1 06375                                 
                 TEMP = BUFF(M2) .RS. 18                                            167  LM00200
 07573 LXA +0 53400 1 04554    07574 CAL -0 50000 0 06630    07575 STA +0 62100 0 07577    07576 CAL -0 50000 1 00024   
 07577 LGR -0 76500 0 00000    07600 SLW +0 60200 0 06410                                                               
                 YEAR = TEMP .RS. 9                                                 168  LM00201
 07601 CAL -0 50000 0 06623    07602 STA +0 62100 0 07604    07603 CAL -0 50000 0 06410    07604 LGR -0 76500 0 00000   
 07605 SLW +0 60200 0 06612                                                                                             
                 MONTH = (TEMP.RS.5) .A. 17K                                        169  LM00202
 07606 CAL -0 50000 0 06620    07607 STA +0 62100 0 07611    07610 CAL -0 50000 0 06410    07611 LGR -0 76500 0 00000   
 07612 ANA -0 32000 0 06627    07613 SLW +0 60200 0 05316                                                               
                 DAY = TEMP .A.37K                                                  170  LM00203
 07614 CAL -0 50000 0 06410    07615 ANA -0 32000 0 06633    07616 SLW +0 60200 0 04042                                 
                 AGE = NOW - ABSDAT.(MONTH,DAY,YEAR)                                171  LM00204
 07617 TSX +0 07400 4 00000    07620 TXH +3 00000 0 05316    07621 TXH +3 00000 0 04042    07622 TXH +3 00000 0 06612   
 07623 CHS +0 76000 0 00002    07624 ADD +0 40000 0 06002    07625 STO +0 60100 0 00043                                 
                 AGESUM = AGESUM + AGE                                              172  LM00205
 07626 CLA +0 50000 0 00043    07627 ORA -0 50100 0 06642    07630 FAD +0 30000 0 06642    07631 FAD +0 30000 0 00045   
 07632 STO +0 60100 0 00045                                                                                             
                 AGES2 = AGES2 + AGE*AGE                                            173  LM00206
 07633 LDQ +0 56000 0 00043    07634 MPY +0 20000 0 00043    07635 XCA +0 13100 0 00000    07636 ORA -0 50100 0 06642   
 07637 FAD +0 30000 0 06642    07640 FAD +0 30000 0 00044    07641 STO +0 60100 0 00044                                 
                 W'R AGE .G. 90, AGE = 90                                           174  LM00207
 07642 CLA +0 50000 0 00043    07643 SUB +0 40200 0 06634    07644 TZE +0 10000 0 07650    07645 TMI -0 12000 0 07650   
 07646 CLA +0 50000 0 06634    07647 STO +0 60100 0 00043                                                               
                 W'R AGE .L. 0, AGE = 0                                             175  LM00208
 07650 CLA +0 50000 0 00043    07651 SUB +0 40200 0 06614    07652 TZE +0 10000 0 07656    07653 TPL +0 12000 0 07656   
 07654 CLA +0 50000 0 06614    07655 STO +0 60100 0 00043                                                               
                 CFTBL(AGE) = CFTBL(AGE) + 1                                        176  LM00209
 07656 LXA +0 53400 1 00043    07657 CLA +0 50000 1 02715    07660 ADD +0 40000 0 06615    07661 STO +0 60100 1 02715   
                 CRTBL(AGE) = CRTBL(AGE) + SIZE                                     177  LM00210
 07662 CLA +0 50000 1 04030    07663 ADD +0 40000 0 06400    07664 STO +0 60100 1 04030                                 
                 F'N                                                                178  LM00212
 07665 TRA +0 02000 0 10577                                                                                             
                 E'O FPRINT.                                                        179  LM00219
 07666 TRA +0 02000 0 07671    07667 SXA +0 63400 2 10552    07670 TSX +0 07400 2 10552                                 
                 NEWUFD.                                                            180  LM00221
 07671 TSX +0 07400 4 00031                                                                                             
                 ATTACH.(ME(1),ME)                                                  181  LM00223
 07672 TSX +0 07400 4 00002    07673 TXH +3 00000 0 05241    07674 TXH +3 00000 0 05242                                 
                 DELETE.(OUT,OUT(1),1,SNAP.)                                        182  LM00227
 07675 TSX +0 07400 4 00011    07676 TXH +3 00000 0 06236    07677 TXH +3 00000 0 06235    07700 TXH +3 00000 0 06615   
 07701 TXH +3 00000 0 00026                                                                                             
                 ASSIGN.(OUT,B1,B2,B3)                                              183  LM00228
 07702 TSX +0 07400 4 00001    07703 TXH +3 00000 0 06236    07704 TXH +3 00000 0 00726    07705 TXH +3 00000 0 01607   
 07706 TXH +3 00000 0 02470                                                                                             
                 DWRITE.(OUT,HEAD)                                                  184  LM00229
 07707 TSX +0 07400 4 00012    07710 TXH +3 00000 0 06236    07711 TXH +3 00000 0 04546                                 
                 W'R SYSFLG, DWRITE.(OUT,SYSHED)                                    185  LM00230
 07712 NZT -0 52000 0 06401    07713 TRA +0 02000 0 07717    07714 TSX +0 07400 4 00012    07715 TXH +3 00000 0 06236   
 07716 TXH +3 00000 0 06407                                                                                             
                 DWRITE.(OUT,F0,TIME,DAYNAM(NOW.MOD.7),MONNAM(MO),                  186  LM00231
                1 DA, YR, WHO(1))                                                   186  LM00232
 07717 CLA +0 50000 0 05317    07720 SUB +0 40200 0 07721    07721 TXH +3 00000 0 05315    07722 STA +0 62100 0 07737   
 07723 LDQ +0 56000 0 06002    07724 PXD -0 75400 0 00000    07725 LLS +0 76300 0 00000    07726 DVP +0 22100 0 06621   
 07727 SUB +0 40200 0 07730    07730 TXH +3 00000 0 04041    07731 STA +0 62100 0 07736    07732 TSX +0 07400 4 00012   
 07733 TXH +3 00000 0 06236    07734 TXH +3 00000 0 04100    07735 TXH +3 00000 0 06412    07736 TXH +3 00000 0 00000   
 07737 TXH +3 00000 0 00000    07740 TXH +3 00000 0 04031    07741 TXH +3 00000 0 06613    07742 TXH +3 00000 0 06427   
                 XTF = TF                                                           187  LM00234
 07743 CLA +0 50000 0 06411    07744 ORA -0 50100 0 06642    07745 FAD +0 30000 0 06642    07746 STO +0 60100 0 06611   
                 XNUFD = NUFD                                                       188  LM00235
 07747 CLA +0 50000 0 06232    07750 ORA -0 50100 0 06642    07751 FAD +0 30000 0 06642    07752 STO +0 60100 0 06443   
                 X1 = TR/XTF                                                        189  LM00236
 07753 CLA +0 50000 0 06414    07754 ORA -0 50100 0 06642    07755 FAD +0 30000 0 06642    07756 FDP +0 24100 0 06611   
 07757 STQ -0 60000 0 06432                                                                                             
                 X2 = SQRT.(TREC2/XTF - X1*X1)                                      190  LM00237
 07760 LDQ +0 56000 0 06432    07761 FMP +0 26000 0 06432    07762 STO +0 60100 0 10603    07763 CLA +0 50000 0 06413   
 07764 FDP +0 24100 0 06611    07765 XCA +0 13100 0 00000    07766 FSB +0 30200 0 10603    07767 STO +0 60100 0 10603   
 07770 TSX +0 07400 4 00027    07771 TXH +3 00000 0 10603    07772 STO +0 60100 0 06433                                 
                 X3 = XTF/XNUFD                                                     191  LM00238
 07773 CLA +0 50000 0 06611    07774 FDP +0 24100 0 06443    07775 STQ -0 60000 0 06434                                 
                 X4 = SQRT.(UFDF2/XNUFD - X3*X3)                                    192  LM00239
 07776 LDQ +0 56000 0 06434    07777 FMP +0 26000 0 06434    10000 STO +0 60100 0 10603    10001 CLA +0 50000 0 06421   
 10002 FDP +0 24100 0 06443    10003 XCA +0 13100 0 00000    10004 FSB +0 30200 0 10603    10005 STO +0 60100 0 10603   
 10006 TSX +0 07400 4 00027    10007 TXH +3 00000 0 10603    10010 STO +0 60100 0 06435                                 
                 X5 = TR/XNUFD                                                      193  LM00240
 10011 CLA +0 50000 0 06414    10012 ORA -0 50100 0 06642    10013 FAD +0 30000 0 06642    10014 FDP +0 24100 0 06443   
 10015 STQ -0 60000 0 06436                                                                                             
                 X6 = SQRT.(UFDR2/XNUFD - X5*X5)                                    194  LM00241
 10016 LDQ +0 56000 0 06436    10017 FMP +0 26000 0 06436    10020 STO +0 60100 0 10603    10021 CLA +0 50000 0 06423   
 10022 FDP +0 24100 0 06443    10023 XCA +0 13100 0 00000    10024 FSB +0 30200 0 10603    10025 STO +0 60100 0 10603   
 10026 TSX +0 07400 4 00027    10027 TXH +3 00000 0 10603    10030 STO +0 60100 0 06437                                 
                 X7 = LINKS/XNUFD                                                   195  LM00242
 10031 CLA +0 50000 0 04552    10032 ORA -0 50100 0 06642    10033 FAD +0 30000 0 06642    10034 FDP +0 24100 0 06443   
 10035 STQ -0 60000 0 06440                                                                                             
                 X8 = SQRT.(UFDL2/XNUFD - X7*X7)                                    196  LM00243
 10036 LDQ +0 56000 0 06440    10037 FMP +0 26000 0 06440    10040 STO +0 60100 0 10603    10041 CLA +0 50000 0 06422   
 10042 FDP +0 24100 0 06443    10043 XCA +0 13100 0 00000    10044 FSB +0 30200 0 10603    10045 STO +0 60100 0 10603   
 10046 TSX +0 07400 4 00027    10047 TXH +3 00000 0 10603    10050 STO +0 60100 0 06441                                 
                 X9 = AGESUM/XTF                                                    197  LM00244
 10051 CLA +0 50000 0 00045    10052 FDP +0 24100 0 06611    10053 STQ -0 60000 0 06442                                 
                 X10 = SQRT.(AGES2/XTF - X9*X9)                                     198  LM00245
 10054 LDQ +0 56000 0 06442    10055 FMP +0 26000 0 06442    10056 STO +0 60100 0 10603    10057 CLA +0 50000 0 00044   
 10060 FDP +0 24100 0 06611    10061 XCA +0 13100 0 00000    10062 FSB +0 30200 0 10603    10063 STO +0 60100 0 10603   
 10064 TSX +0 07400 4 00027    10065 TXH +3 00000 0 10603    10066 STO +0 60100 0 06431                                 
                 DWRITE.(OUT,F1, TF, TR, X3, X4, NUFD, X5, X6, LINKS,               199  LM00247
                1   X7, X8, X1, X2, X9, X10 )                                       199  LM00248
 10067 TSX +0 07400 4 00012    10070 TXH +3 00000 0 06236    10071 TXH +3 00000 0 04206    10072 TXH +3 00000 0 06411   
 10073 TXH +3 00000 0 06414    10074 TXH +3 00000 0 06434    10075 TXH +3 00000 0 06435    10076 TXH +3 00000 0 06232   
 10077 TXH +3 00000 0 06436    10100 TXH +3 00000 0 06437    10101 TXH +3 00000 0 04552    10102 TXH +3 00000 0 06440   
 10103 TXH +3 00000 0 06441    10104 TXH +3 00000 0 06432    10105 TXH +3 00000 0 06433    10106 TXH +3 00000 0 06442   
 10107 TXH +3 00000 0 06431                                                                                             
                 DWRITE.(OUT,F3,CAPACY,TRSIZE,CAPACY-TRSIZE,                        200  LM00249
                1   (TRSIZE-TR)*100./CAPACY)                                        200  LM00250
 10110 CLA +0 50000 0 06415    10111 SUB +0 40200 0 06414    10112 ORA -0 50100 0 06642    10113 FAD +0 30000 0 06642   
 10114 XCA +0 13100 0 00000    10115 FMP +0 26000 0 06641    10116 STO +0 60100 0 10603    10117 CLA +0 50000 0 02471   
 10120 ORA -0 50100 0 06642    10121 FAD +0 30000 0 06642    10122 STO +0 60100 0 10604    10123 CLA +0 50000 0 10603   
 10124 FDP +0 24100 0 10604    10125 STQ -0 60000 0 10604    10126 CLA +0 50000 0 02471    10127 SUB +0 40200 0 06415   
 10130 STO +0 60100 0 10603    10131 TSX +0 07400 4 00012    10132 TXH +3 00000 0 06236    10133 TXH +3 00000 0 04226   
 10134 TXH +3 00000 0 02471    10135 TXH +3 00000 0 06415    10136 TXH +3 00000 0 10603    10137 TXH +3 00000 0 10604   
                 DWRITE.(OUT,F4)                                                    201  LM00251
 10140 TSX +0 07400 4 00012    10141 TXH +3 00000 0 06236    10142 TXH +3 00000 0 04246                                 
                 T'H PML, FOR I=1,1,I.G.8                                           202  LM00252
 10143 CLA +0 50000 0 06615    10144 STO +0 60100 0 04547    10145 TRA +0 02000 0 10151    10146 CLA +0 50000 0 04547   
 10147 ADD +0 40000 0 06615    10150 STO +0 60100 0 04547    10151 CLA +0 50000 0 04547    10152 SUB +0 40200 0 06622   
 10153 TZE +0 10000 0 10155    10154 TPL +0 12000 0 10203                                                               
                 DWRITE.(OUT,F4A,OCRBC.(MODBIT(I)),MODFIL(I),MODREC(I))             203  LM00253
 10155 CLA +0 50000 0 04547    10156 SUB +0 40200 0 10157    10157 TXH +3 00000 0 05300    10160 STA +0 62100 0 10201   
 10161 CLA +0 50000 0 04547    10162 SUB +0 40200 0 10163    10163 TXH +3 00000 0 05267    10164 STA +0 62100 0 10200   
 10165 CLA +0 50000 0 04547    10166 SUB +0 40200 0 10167    10167 TXH +3 00000 0 05255    10170 STA +0 62100 0 10172   
 10171 TSX +0 07400 4 00024    10172 TXH +3 00000 0 00000    10173 STO +0 60100 0 10604    10174 TSX +0 07400 4 00012   
 10175 TXH +3 00000 0 06236    10176 TXH +3 00000 0 04230    10177 TXH +3 00000 0 10604    10200 TXH +3 00000 0 00000   
 10201 TXH +3 00000 0 00000                                                                                             
      PML        C'E                                                                204  LM00254
 10202 TRA +0 02000 0 10146                                                                                             
                 DWRITE.(OUT,HEAD)                                                  205  LM00256
 10203 TSX +0 07400 4 00012    10204 TXH +3 00000 0 06236    10205 TXH +3 00000 0 04546                                 
                 W'R SYSFLG, DWRITE.(OUT,SYSHED)                                    206  LM00257
 10206 NZT -0 52000 0 06401    10207 TRA +0 02000 0 10213    10210 TSX +0 07400 4 00012    10211 TXH +3 00000 0 06236   
 10212 TXH +3 00000 0 06407                                                                                             
                 DWRITE.(OUT,F5)                                                    207  LM00259
 10213 TSX +0 07400 4 00012    10214 TXH +3 00000 0 06236    10215 TXH +3 00000 0 04272                                 
      HGMLP      DWRITE.(OUT,F5A)                                                   208  LM00261
 10216 TSX +0 07400 4 00012    10217 TXH +3 00000 0 06236    10220 TXH +3 00000 0 04261                                 
                 T'H BETA, FOR K = 0,1, K.G.90                                      209  LM00262
 10221 CLA +0 50000 0 06614    10222 STO +0 60100 0 04551    10223 TRA +0 02000 0 10227    10224 CLA +0 50000 0 04551   
 10225 ADD +0 40000 0 06615    10226 STO +0 60100 0 04551    10227 CLA +0 50000 0 04551    10230 SUB +0 40200 0 06634   
 10231 TZE +0 10000 0 10233    10232 TPL +0 12000 0 10350                                                               
                 FOLDER = 0                                                         210  LM00263
 10233 CLA +0 50000 0 06614    10234 STO +0 60100 0 04351                                                               
                 ROLDER = 0                                                         211  LM00264
 10235 CLA +0 50000 0 06614    10236 STO +0 60100 0 06240                                                               
                 DAY = NOW - K                                                      212  LM00265
 10237 CLA +0 50000 0 06002    10240 SUB +0 40200 0 04551    10241 STO +0 60100 0 04042                                 
                 T'H ALPHA, FOR J = K, 1, J.G. 90                                   213  LM00267
 10242 CLA +0 50000 0 04551    10243 STO +0 60100 0 04550    10244 TRA +0 02000 0 10250    10245 CLA +0 50000 0 04550   
 10246 ADD +0 40000 0 06615    10247 STO +0 60100 0 04550    10250 CLA +0 50000 0 04550    10251 SUB +0 40200 0 06634   
 10252 TZE +0 10000 0 10254    10253 TPL +0 12000 0 10271                                                               
                 FOLDER = FOLDER + FTBL(J)                                          214  LM00268
 10254 LXA +0 53400 2 04550    10255 CLA +0 50000 0 04351    10256 ADD +0 40000 2 04506    10257 STO +0 60100 0 04351   
                 ROLDER = ROLDER + RTBL(J)                                          215  LM00269
 10260 CLA +0 50000 0 06240    10261 ADD +0 40000 2 06375    10262 STO +0 60100 0 06240                                 
                 VAR = ROLDER/SCALE                                                 216  LM00270
 10263 LDQ +0 56000 0 06240    10264 PXD -0 75400 0 00000    10265 LLS +0 76300 0 00000    10266 DVP +0 22100 0 06376   
 10267 STQ -0 60000 0 06424                                                                                             
      ALPHA      C'E                                                                217  LM00271
 10270 TRA +0 02000 0 10245                                                                                             
                 W'R DAY .E. MB1                                                    218  LM00273
 10271 CLA +0 50000 0 04042    10272 SUB +0 40200 0 05237    10273 TNZ -0 10000 0 10277                                 
                      MRK = MO1                                                     219  LM00274
 10274 CLA +0 50000 0 05243    10275 STO +0 60100 0 05320                                                               
                 O'R DAY .E. MB2                                                    220  LM00275
 10276 TRA +0 02000 0 10320    10277 CLA +0 50000 0 04042    10300 SUB +0 40200 0 05240    10301 TNZ -0 10000 0 10305   
                      MRK = MO2                                                     221  LM00276
 10302 CLA +0 50000 0 05244    10303 STO +0 60100 0 05320                                                               
                 O'R DAY.MOD. 7 .E. 0                                               222  LM00277
 10304 TRA +0 02000 0 10320    10305 LDQ +0 56000 0 04042    10306 PXD -0 75400 0 00000    10307 LLS +0 76300 0 00000   
 10310 DVP +0 22100 0 06621    10311 SUB +0 40200 0 06614    10312 TNZ -0 10000 0 10316                                 
                      MRK = $SUN$                                                   223  LM00278
 10313 CLA +0 50000 0 06650    10314 STO +0 60100 0 05320                                                               
                 O'E                                                                224  LM00279
 10315 TRA +0 02000 0 10320                                                                                             
                      MRK = $$                                                      225  LM00280
 10316 CLA +0 50000 0 06646    10317 STO +0 60100 0 05320                                                               
                 E'L                                                                226  LM00281
                 DWRITE.(OUT,F7,MRK,K,FTBL(K),FOLDER,RTBL(K),ROLDER,                227  LM00283
                1 XS(1)...XS(VAR))                                                  227  LM00284
 10320 CLA +0 50000 0 06424    10321 SUB +0 40200 0 10322    10322 TXH +3 00000 0 06610    10323 ALS +0 76700 0 00022   
 10324 STD +0 62200 0 10346    10325 CLA +0 50000 0 04551    10326 SUB +0 40200 0 10327    10327 TXH +3 00000 0 06375   
 10330 STA +0 62100 0 10344    10331 CLA +0 50000 0 04551    10332 SUB +0 40200 0 10333    10333 TXH +3 00000 0 04506   
 10334 STA +0 62100 0 10342    10335 TSX +0 07400 4 00012    10336 TXH +3 00000 0 06236    10337 TXH +3 00000 0 04307   
 10340 TXH +3 00000 0 05320    10341 TXH +3 00000 0 04551    10342 TXH +3 00000 0 00000    10343 TXH +3 00000 0 04351   
 10344 TXH +3 00000 0 00000    10345 TXH +3 00000 0 06240    10346 TIX +2 00000 0 06607                                 
      BETA       C'E                                                                228  LM00286
 10347 TRA +0 02000 0 10224                                                                                             
                 DWRITE.(OUT,F10,XS,SCALE)                                          229  LM00288
 10350 TSX +0 07400 4 00012    10351 TXH +3 00000 0 06236    10352 TXH +3 00000 0 04113    10353 TXH +3 00000 0 06610   
 10354 TXH +3 00000 0 06376                                                                                             
                 W'R REF                                                            230  LM00289
 10355 NZT -0 52000 0 06237    10356 TRA +0 02000 0 10405                                                               
                      REF = 0B                                                      231  LM00290
 10357 CLA +0 50000 0 06614    10360 STO +0 60100 0 06237                                                               
                      DWRITE.(OUT,HEAD)                                             232  LM00291
 10361 TSX +0 07400 4 00012    10362 TXH +3 00000 0 06236    10363 TXH +3 00000 0 04546                                 
                      W'R SYSFLG, DWRITE.(OUT,SYSHED)                               233  LM00292
 10364 NZT -0 52000 0 06401    10365 TRA +0 02000 0 10371    10366 TSX +0 07400 4 00012    10367 TXH +3 00000 0 06236   
 10370 TXH +3 00000 0 06407                                                                                             
                      DWRITE.(OUT,F6)                                               234  LM00293
 10371 TSX +0 07400 4 00012    10372 TXH +3 00000 0 06236    10373 TXH +3 00000 0 04302                                 
                      MOVE.(91,CFTBL,FTBL)                                          235  LM00294
 10374 TSX +0 07400 4 00021    10375 TXH +3 00000 0 06635    10376 TXH +3 00000 0 02715    10377 TXH +3 00000 0 04506   
                      MOVE.(91,CRTBL,RTBL)                                          236  LM00295
 10400 TSX +0 07400 4 00021    10401 TXH +3 00000 0 06635    10402 TXH +3 00000 0 04030    10403 TXH +3 00000 0 06375   
                      T'O HGMLP                                                     237  LM00296
 10404 TRA +0 02000 0 00037                                                                                             
                 E'L                                                                238  LM00297
                 DWRITE.(OUT,HEAD)                                                  239  LM00299
 10405 TSX +0 07400 4 00012    10406 TXH +3 00000 0 06236    10407 TXH +3 00000 0 04546                                 
                 W'R SYSFLG, DWRITE.(OUT,SYSHED)                                    240  LM00300
 10410 NZT -0 52000 0 06401    10411 TRA +0 02000 0 10415    10412 TSX +0 07400 4 00012    10413 TXH +3 00000 0 06236   
 10414 TXH +3 00000 0 06407                                                                                             
                 DWRITE.(OUT,F9)                                                    241  LM00302
 10415 TSX +0 07400 4 00012    10416 TXH +3 00000 0 06236    10417 TXH +3 00000 0 04331                                 
                 T'H PRN, FOR I=0,1,I.G.MAX                                         242  LM00304
 10420 CLA +0 50000 0 06614    10421 STO +0 60100 0 04547    10422 TRA +0 02000 0 10426    10423 CLA +0 50000 0 04547   
 10424 ADD +0 40000 0 06615    10425 STO +0 60100 0 04547    10426 CLA +0 50000 0 04547    10427 SUB +0 40200 0 05236   
 10430 TZE +0 10000 0 10432    10431 TPL +0 12000 0 10474                                                               
      PRN        DWRITE.(OUT,FM1,NAME1(I),NAME2(I),CLASS(I),COUNT(I),NRECS(I),      243  LM00305
                1COUNTL(I))                                                         243  LM00306
 10432 CLA +0 50000 0 04547    10433 SUB +0 40200 0 10434    10434 TXH +3 00000 0 03445    10435 STA +0 62100 0 10472   
 10436 CLA +0 50000 0 04547    10437 SUB +0 40200 0 10440    10440 TXH +3 00000 0 06231    10441 STA +0 62100 0 10471   
 10442 CLA +0 50000 0 04547    10443 SUB +0 40200 0 10444    10444 TXH +3 00000 0 03674    10445 STA +0 62100 0 10470   
 10446 CLA +0 50000 0 04547    10447 SUB +0 40200 0 10450    10450 TXH +3 00000 0 03144    10451 STA +0 62100 0 10467   
 10452 CLA +0 50000 0 04547    10453 SUB +0 40200 0 10454    10454 TXH +3 00000 0 06001    10455 STA +0 62100 0 10466   
 10456 CLA +0 50000 0 04547    10457 SUB +0 40200 0 10460    10460 TXH +3 00000 0 05552    10461 STA +0 62100 0 10465   
 10462 TSX +0 07400 4 00012    10463 TXH +3 00000 0 06236    10464 TXH +3 00000 0 04336    10465 TXH +3 00000 0 00000   
 10466 TXH +3 00000 0 00000    10467 TXH +3 00000 0 00000    10470 TXH +3 00000 0 00000    10471 TXH +3 00000 0 00000   
 10472 TXH +3 00000 0 00000    10473 TRA +0 02000 0 10423                                                               
                 DWRITE.(OUT,FM2)                                                   244  LM00308
 10474 TSX +0 07400 4 00012    10475 TXH +3 00000 0 06236    10476 TXH +3 00000 0 04350                                 
                 T'H PRC, FOR I=0,1,I.G.MXCLS                                       245  LM00309
 10477 CLA +0 50000 0 06614    10500 STO +0 60100 0 04547    10501 TRA +0 02000 0 10505    10502 CLA +0 50000 0 04547   
 10503 ADD +0 40000 0 06615    10504 STO +0 60100 0 04547    10505 CLA +0 50000 0 04547    10506 SUB +0 40200 0 05321   
 10507 TZE +0 10000 0 10511    10510 TPL +0 12000 0 10543                                                               
      PRC        DWRITE.(OUT,FM1,$$,CLNAME(I),I,CCOUNT(I),CNRECS(I),CCOUNL(I))      246  LM00310
 10511 CLA +0 50000 0 04547    10512 SUB +0 40200 0 10513    10513 TXH +3 00000 0 02534    10514 STA +0 62100 0 10541   
 10515 CLA +0 50000 0 04547    10516 SUB +0 40200 0 10517    10517 TXH +3 00000 0 03216    10520 STA +0 62100 0 10540   
 10521 CLA +0 50000 0 04547    10522 SUB +0 40200 0 10523    10523 TXH +3 00000 0 02561    10524 STA +0 62100 0 10537   
 10525 CLA +0 50000 0 04547    10526 SUB +0 40200 0 10527    10527 TXH +3 00000 0 03171    10530 STA +0 62100 0 10535   
 10531 TSX +0 07400 4 00012    10532 TXH +3 00000 0 06236    10533 TXH +3 00000 0 04336    10534 TXH +3 00000 0 06646   
 10535 TXH +3 00000 0 00000    10536 TXH +3 00000 0 04547    10537 TXH +3 00000 0 00000    10540 TXH +3 00000 0 00000   
 10541 TXH +3 00000 0 00000    10542 TRA +0 02000 0 10502                                                               
                 FILE.(OUT)                                                         247  LM00312
 10543 TSX +0 07400 4 00015    10544 TXH +3 00000 0 06236                                                               
                 F'N                                                                248  LM00314
 10545 TRA +0 02000 0 10577                                                                                             
      ERR        NCOM.($PRNTER$,777777777777K)                                      249  LM00316
 10546 TSX +0 07400 4 00023    10547 TXH +3 00000 0 06643    10550 TXH +3 00000 0 06652                                 
                 N'R                                                                250  LM00319
                 F'T X1, X2, X3, X4, X5, X6, X7, X8, X9, X10                        251  LM00320
                 F'T AGES2, TREC2, UFDF2, UFDR2, UFDL2                              252  LM00321
                 F'T SQRT.                                                          253  LM00322
                 F'T XTF, XNUFD, AGESUM                                             254  LM00323
                 V'S REF = 1B                                                       255  LM00324
 06237     +0 00000 0 00001                                                                                             
                 V'S CAPACY = 160 000                                               256  LM00327
 02471     +0 00000 4 70400                                                                                             
                 V'S SCALE = 1600                                                   257  LM00328
 06376     +0 00000 0 03100                                                                                             
                 V'S DAYS = 31,31,28,31,30,31,30,31,31,30,31,30,31                  258  LM00331
 04043     +0 00000 0 00037    04044     +0 00000 0 00036    04045     +0 00000 0 00037    04046     +0 00000 0 00036   
 04047     +0 00000 0 00037    04050     +0 00000 0 00037    04051     +0 00000 0 00036    04052     +0 00000 0 00037   
 04053     +0 00000 0 00036    04054     +0 00000 0 00037    04055     +0 00000 0 00034    04056     +0 00000 0 00037   
 04057     +0 00000 0 00037                                                                                             
                 V'S MONNAM = $DEC$,$JAN$,$FEB$,$MAR$,$APR$,$MAY$,$JUN$,            259  LM00332
                1 $JUL$,$AUG$,$SEP$,$OCT$,$NOV$,$DEC$                               259  LM00333
 05301     +2 42523 6 06060    05302     -0 54665 6 06060    05303     -0 62363 6 06060    05304     -2 22547 6 06060   
 05305     +2 16427 6 06060    05306     -0 16443 6 06060    05307     -0 16445 6 06060    05310     -0 42170 6 06060   
 05311     +2 14751 6 06060    05312     -0 42151 6 06060    05313     +2 62522 6 06060    05314     -0 12145 6 06060   
 05315     +2 42523 6 06060                                                                                             
                 V'S DAYNAM = $SUN$,$MON$,$TUE$,$WED$,$THU$,$FRI$,$SAT$             260  LM00334
 04033     -2 22163 6 06060    04034     +2 65131 6 06060    04035     -2 33064 6 06060    04036     -2 62524 6 06060   
 04037     -2 36425 6 06060    04040     -0 44645 6 06060    04041     -2 26445 6 06060                                 
                 V'S WHO...WHO(3) = 0                                               261  LM00336
 06425     +0 00000 0 00000    06426     +0 00000 0 00000    06427     +0 00000 0 00000    06430     +0 00000 0 00000   
                 V'S ME...ME(1) = 0                                                 262  LM00337
 05241     +0 00000 0 00000    05242     +0 00000 0 00000                                                               
                 V'S MODBIT = 0,1K,2K,4K,10K,20K,40K,100K,200K                      263  LM00340
 05245     +0 00000 0 00200    05246     +0 00000 0 00100    05247     +0 00000 0 00040    05250     +0 00000 0 00020   
 05251     +0 00000 0 00010    05252     +0 00000 0 00004    05253     +0 00000 0 00002    05254     +0 00000 0 00001   
 05255     +0 00000 0 00000                                                                                             
                 V'S MODFIL...MODFIL(8) = 0                                         264  LM00341
 05257     +0 00000 0 00000    05260     +0 00000 0 00000    05261     +0 00000 0 00000    05262     +0 00000 0 00000   
 05263     +0 00000 0 00000    05264     +0 00000 0 00000    05265     +0 00000 0 00000    05266     +0 00000 0 00000   
 05267     +0 00000 0 00000                                                                                             
                 V'S MODREC...MODREC(8) = 0                                         265  LM00342
 05270     +0 00000 0 00000    05271     +0 00000 0 00000    05272     +0 00000 0 00000    05273     +0 00000 0 00000   
 05274     +0 00000 0 00000    05275     +0 00000 0 00000    05276     +0 00000 0 00000    05277     +0 00000 0 00000   
 05300     +0 00000 0 00000                                                                                             
                 V'S COUNT...COUNT(150)=0                                           266  LM00345
 03446     +0 00000 0 00000    03447     +0 00000 0 00000    03450     +0 00000 0 00000    03451     +0 00000 0 00000   
 03452     +0 00000 0 00000    03453     +0 00000 0 00000    03454     +0 00000 0 00000    03455     +0 00000 0 00000   
 03456     +0 00000 0 00000    03457     +0 00000 0 00000    03460     +0 00000 0 00000    03461     +0 00000 0 00000   
 03462     +0 00000 0 00000    03463     +0 00000 0 00000    03464     +0 00000 0 00000    03465     +0 00000 0 00000   
 03466     +0 00000 0 00000    03467     +0 00000 0 00000    03470     +0 00000 0 00000    03471     +0 00000 0 00000   
 03472     +0 00000 0 00000    03473     +0 00000 0 00000    03474     +0 00000 0 00000    03475     +0 00000 0 00000   
 03476     +0 00000 0 00000    03477     +0 00000 0 00000    03500     +0 00000 0 00000    03501     +0 00000 0 00000   
 03502     +0 00000 0 00000    03503     +0 00000 0 00000    03504     +0 00000 0 00000    03505     +0 00000 0 00000   
 03506     +0 00000 0 00000    03507     +0 00000 0 00000    03510     +0 00000 0 00000    03511     +0 00000 0 00000   
 03512     +0 00000 0 00000    03513     +0 00000 0 00000    03514     +0 00000 0 00000    03515     +0 00000 0 00000   
 03516     +0 00000 0 00000    03517     +0 00000 0 00000    03520     +0 00000 0 00000    03521     +0 00000 0 00000   
 03522     +0 00000 0 00000    03523     +0 00000 0 00000    03524     +0 00000 0 00000    03525     +0 00000 0 00000   
 03526     +0 00000 0 00000    03527     +0 00000 0 00000    03530     +0 00000 0 00000    03531     +0 00000 0 00000   
 03532     +0 00000 0 00000    03533     +0 00000 0 00000    03534     +0 00000 0 00000    03535     +0 00000 0 00000   
 03536     +0 00000 0 00000    03537     +0 00000 0 00000    03540     +0 00000 0 00000    03541     +0 00000 0 00000   
 03542     +0 00000 0 00000    03543     +0 00000 0 00000    03544     +0 00000 0 00000    03545     +0 00000 0 00000   
 03546     +0 00000 0 00000    03547     +0 00000 0 00000    03550     +0 00000 0 00000    03551     +0 00000 0 00000   
 03552     +0 00000 0 00000    03553     +0 00000 0 00000    03554     +0 00000 0 00000    03555     +0 00000 0 00000   
 03556     +0 00000 0 00000    03557     +0 00000 0 00000    03560     +0 00000 0 00000    03561     +0 00000 0 00000   
 03562     +0 00000 0 00000    03563     +0 00000 0 00000    03564     +0 00000 0 00000    03565     +0 00000 0 00000   
 03566     +0 00000 0 00000    03567     +0 00000 0 00000    03570     +0 00000 0 00000    03571     +0 00000 0 00000   
 03572     +0 00000 0 00000    03573     +0 00000 0 00000    03574     +0 00000 0 00000    03575     +0 00000 0 00000   
 03576     +0 00000 0 00000    03577     +0 00000 0 00000    03600     +0 00000 0 00000    03601     +0 00000 0 00000   
 03602     +0 00000 0 00000    03603     +0 00000 0 00000    03604     +0 00000 0 00000    03605     +0 00000 0 00000   
 03606     +0 00000 0 00000    03607     +0 00000 0 00000    03610     +0 00000 0 00000    03611     +0 00000 0 00000   
 03612     +0 00000 0 00000    03613     +0 00000 0 00000    03614     +0 00000 0 00000    03615     +0 00000 0 00000   
 03616     +0 00000 0 00000    03617     +0 00000 0 00000    03620     +0 00000 0 00000    03621     +0 00000 0 00000   
 03622     +0 00000 0 00000    03623     +0 00000 0 00000    03624     +0 00000 0 00000    03625     +0 00000 0 00000   
 03626     +0 00000 0 00000    03627     +0 00000 0 00000    03630     +0 00000 0 00000    03631     +0 00000 0 00000   
 03632     +0 00000 0 00000    03633     +0 00000 0 00000    03634     +0 00000 0 00000    03635     +0 00000 0 00000   
 03636     +0 00000 0 00000    03637     +0 00000 0 00000    03640     +0 00000 0 00000    03641     +0 00000 0 00000   
 03642     +0 00000 0 00000    03643     +0 00000 0 00000    03644     +0 00000 0 00000    03645     +0 00000 0 00000   
 03646     +0 00000 0 00000    03647     +0 00000 0 00000    03650     +0 00000 0 00000    03651     +0 00000 0 00000   
 03652     +0 00000 0 00000    03653     +0 00000 0 00000    03654     +0 00000 0 00000    03655     +0 00000 0 00000   
 03656     +0 00000 0 00000    03657     +0 00000 0 00000    03660     +0 00000 0 00000    03661     +0 00000 0 00000   
 03662     +0 00000 0 00000    03663     +0 00000 0 00000    03664     +0 00000 0 00000    03665     +0 00000 0 00000   
 03666     +0 00000 0 00000    03667     +0 00000 0 00000    03670     +0 00000 0 00000    03671     +0 00000 0 00000   
 03672     +0 00000 0 00000    03673     +0 00000 0 00000    03674     +0 00000 0 00000                                 
                 V'S NRECS...NRECS(150)=0                                           267  LM00346
 06003     +0 00000 0 00000    06004     +0 00000 0 00000    06005     +0 00000 0 00000    06006     +0 00000 0 00000   
 06007     +0 00000 0 00000    06010     +0 00000 0 00000    06011     +0 00000 0 00000    06012     +0 00000 0 00000   
 06013     +0 00000 0 00000    06014     +0 00000 0 00000    06015     +0 00000 0 00000    06016     +0 00000 0 00000   
 06017     +0 00000 0 00000    06020     +0 00000 0 00000    06021     +0 00000 0 00000    06022     +0 00000 0 00000   
 06023     +0 00000 0 00000    06024     +0 00000 0 00000    06025     +0 00000 0 00000    06026     +0 00000 0 00000   
 06027     +0 00000 0 00000    06030     +0 00000 0 00000    06031     +0 00000 0 00000    06032     +0 00000 0 00000   
 06033     +0 00000 0 00000    06034     +0 00000 0 00000    06035     +0 00000 0 00000    06036     +0 00000 0 00000   
 06037     +0 00000 0 00000    06040     +0 00000 0 00000    06041     +0 00000 0 00000    06042     +0 00000 0 00000   
 06043     +0 00000 0 00000    06044     +0 00000 0 00000    06045     +0 00000 0 00000    06046     +0 00000 0 00000   
 06047     +0 00000 0 00000    06050     +0 00000 0 00000    06051     +0 00000 0 00000    06052     +0 00000 0 00000   
 06053     +0 00000 0 00000    06054     +0 00000 0 00000    06055     +0 00000 0 00000    06056     +0 00000 0 00000   
 06057     +0 00000 0 00000    06060     +0 00000 0 00000    06061     +0 00000 0 00000    06062     +0 00000 0 00000   
 06063     +0 00000 0 00000    06064     +0 00000 0 00000    06065     +0 00000 0 00000    06066     +0 00000 0 00000   
 06067     +0 00000 0 00000    06070     +0 00000 0 00000    06071     +0 00000 0 00000    06072     +0 00000 0 00000   
 06073     +0 00000 0 00000    06074     +0 00000 0 00000    06075     +0 00000 0 00000    06076     +0 00000 0 00000   
 06077     +0 00000 0 00000    06100     +0 00000 0 00000    06101     +0 00000 0 00000    06102     +0 00000 0 00000   
 06103     +0 00000 0 00000    06104     +0 00000 0 00000    06105     +0 00000 0 00000    06106     +0 00000 0 00000   
 06107     +0 00000 0 00000    06110     +0 00000 0 00000    06111     +0 00000 0 00000    06112     +0 00000 0 00000   
 06113     +0 00000 0 00000    06114     +0 00000 0 00000    06115     +0 00000 0 00000    06116     +0 00000 0 00000   
 06117     +0 00000 0 00000    06120     +0 00000 0 00000    06121     +0 00000 0 00000    06122     +0 00000 0 00000   
 06123     +0 00000 0 00000    06124     +0 00000 0 00000    06125     +0 00000 0 00000    06126     +0 00000 0 00000   
 06127     +0 00000 0 00000    06130     +0 00000 0 00000    06131     +0 00000 0 00000    06132     +0 00000 0 00000   
 06133     +0 00000 0 00000    06134     +0 00000 0 00000    06135     +0 00000 0 00000    06136     +0 00000 0 00000   
 06137     +0 00000 0 00000    06140     +0 00000 0 00000    06141     +0 00000 0 00000    06142     +0 00000 0 00000   
 06143     +0 00000 0 00000    06144     +0 00000 0 00000    06145     +0 00000 0 00000    06146     +0 00000 0 00000   
 06147     +0 00000 0 00000    06150     +0 00000 0 00000    06151     +0 00000 0 00000    06152     +0 00000 0 00000   
 06153     +0 00000 0 00000    06154     +0 00000 0 00000    06155     +0 00000 0 00000    06156     +0 00000 0 00000   
 06157     +0 00000 0 00000    06160     +0 00000 0 00000    06161     +0 00000 0 00000    06162     +0 00000 0 00000   
 06163     +0 00000 0 00000    06164     +0 00000 0 00000    06165     +0 00000 0 00000    06166     +0 00000 0 00000   
 06167     +0 00000 0 00000    06170     +0 00000 0 00000    06171     +0 00000 0 00000    06172     +0 00000 0 00000   
 06173     +0 00000 0 00000    06174     +0 00000 0 00000    06175     +0 00000 0 00000    06176     +0 00000 0 00000   
 06177     +0 00000 0 00000    06200     +0 00000 0 00000    06201     +0 00000 0 00000    06202     +0 00000 0 00000   
 06203     +0 00000 0 00000    06204     +0 00000 0 00000    06205     +0 00000 0 00000    06206     +0 00000 0 00000   
 06207     +0 00000 0 00000    06210     +0 00000 0 00000    06211     +0 00000 0 00000    06212     +0 00000 0 00000   
 06213     +0 00000 0 00000    06214     +0 00000 0 00000    06215     +0 00000 0 00000    06216     +0 00000 0 00000   
 06217     +0 00000 0 00000    06220     +0 00000 0 00000    06221     +0 00000 0 00000    06222     +0 00000 0 00000   
 06223     +0 00000 0 00000    06224     +0 00000 0 00000    06225     +0 00000 0 00000    06226     +0 00000 0 00000   
 06227     +0 00000 0 00000    06230     +0 00000 0 00000    06231     +0 00000 0 00000                                 
                 V'S CLASS...CLASS(150)=0                                           268  LM00347
 02716     +0 00000 0 00000    02717     +0 00000 0 00000    02720     +0 00000 0 00000    02721     +0 00000 0 00000   
 02722     +0 00000 0 00000    02723     +0 00000 0 00000    02724     +0 00000 0 00000    02725     +0 00000 0 00000   
 02726     +0 00000 0 00000    02727     +0 00000 0 00000    02730     +0 00000 0 00000    02731     +0 00000 0 00000   
 02732     +0 00000 0 00000    02733     +0 00000 0 00000    02734     +0 00000 0 00000    02735     +0 00000 0 00000   
 02736     +0 00000 0 00000    02737     +0 00000 0 00000    02740     +0 00000 0 00000    02741     +0 00000 0 00000   
 02742     +0 00000 0 00000    02743     +0 00000 0 00000    02744     +0 00000 0 00000    02745     +0 00000 0 00000   
 02746     +0 00000 0 00000    02747     +0 00000 0 00000    02750     +0 00000 0 00000    02751     +0 00000 0 00000   
 02752     +0 00000 0 00000    02753     +0 00000 0 00000    02754     +0 00000 0 00000    02755     +0 00000 0 00000   
 02756     +0 00000 0 00000    02757     +0 00000 0 00000    02760     +0 00000 0 00000    02761     +0 00000 0 00000   
 02762     +0 00000 0 00000    02763     +0 00000 0 00000    02764     +0 00000 0 00000    02765     +0 00000 0 00000   
 02766     +0 00000 0 00000    02767     +0 00000 0 00000    02770     +0 00000 0 00000    02771     +0 00000 0 00000   
 02772     +0 00000 0 00000    02773     +0 00000 0 00000    02774     +0 00000 0 00000    02775     +0 00000 0 00000   
 02776     +0 00000 0 00000    02777     +0 00000 0 00000    03000     +0 00000 0 00000    03001     +0 00000 0 00000   
 03002     +0 00000 0 00000    03003     +0 00000 0 00000    03004     +0 00000 0 00000    03005     +0 00000 0 00000   
 03006     +0 00000 0 00000    03007     +0 00000 0 00000    03010     +0 00000 0 00000    03011     +0 00000 0 00000   
 03012     +0 00000 0 00000    03013     +0 00000 0 00000    03014     +0 00000 0 00000    03015     +0 00000 0 00000   
 03016     +0 00000 0 00000    03017     +0 00000 0 00000    03020     +0 00000 0 00000    03021     +0 00000 0 00000   
 03022     +0 00000 0 00000    03023     +0 00000 0 00000    03024     +0 00000 0 00000    03025     +0 00000 0 00000   
 03026     +0 00000 0 00000    03027     +0 00000 0 00000    03030     +0 00000 0 00000    03031     +0 00000 0 00000   
 03032     +0 00000 0 00000    03033     +0 00000 0 00000    03034     +0 00000 0 00000    03035     +0 00000 0 00000   
 03036     +0 00000 0 00000    03037     +0 00000 0 00000    03040     +0 00000 0 00000    03041     +0 00000 0 00000   
 03042     +0 00000 0 00000    03043     +0 00000 0 00000    03044     +0 00000 0 00000    03045     +0 00000 0 00000   
 03046     +0 00000 0 00000    03047     +0 00000 0 00000    03050     +0 00000 0 00000    03051     +0 00000 0 00000   
 03052     +0 00000 0 00000    03053     +0 00000 0 00000    03054     +0 00000 0 00000    03055     +0 00000 0 00000   
 03056     +0 00000 0 00000    03057     +0 00000 0 00000    03060     +0 00000 0 00000    03061     +0 00000 0 00000   
 03062     +0 00000 0 00000    03063     +0 00000 0 00000    03064     +0 00000 0 00000    03065     +0 00000 0 00000   
 03066     +0 00000 0 00000    03067     +0 00000 0 00000    03070     +0 00000 0 00000    03071     +0 00000 0 00000   
 03072     +0 00000 0 00000    03073     +0 00000 0 00000    03074     +0 00000 0 00000    03075     +0 00000 0 00000   
 03076     +0 00000 0 00000    03077     +0 00000 0 00000    03100     +0 00000 0 00000    03101     +0 00000 0 00000   
 03102     +0 00000 0 00000    03103     +0 00000 0 00000    03104     +0 00000 0 00000    03105     +0 00000 0 00000   
 03106     +0 00000 0 00000    03107     +0 00000 0 00000    03110     +0 00000 0 00000    03111     +0 00000 0 00000   
 03112     +0 00000 0 00000    03113     +0 00000 0 00000    03114     +0 00000 0 00000    03115     +0 00000 0 00000   
 03116     +0 00000 0 00000    03117     +0 00000 0 00000    03120     +0 00000 0 00000    03121     +0 00000 0 00000   
 03122     +0 00000 0 00000    03123     +0 00000 0 00000    03124     +0 00000 0 00000    03125     +0 00000 0 00000   
 03126     +0 00000 0 00000    03127     +0 00000 0 00000    03130     +0 00000 0 00000    03131     +0 00000 0 00000   
 03132     +0 00000 0 00000    03133     +0 00000 0 00000    03134     +0 00000 0 00000    03135     +0 00000 0 00000   
 03136     +0 00000 0 00000    03137     +0 00000 0 00000    03140     +0 00000 0 00000    03141     +0 00000 0 00000   
 03142     +0 00000 0 00000    03143     +0 00000 0 00000    03144     +0 00000 0 00000                                 
                 V'S COUNTL...COUNTL(150)=0                                         269  LM00348
 03217     +0 00000 0 00000    03220     +0 00000 0 00000    03221     +0 00000 0 00000    03222     +0 00000 0 00000   
 03223     +0 00000 0 00000    03224     +0 00000 0 00000    03225     +0 00000 0 00000    03226     +0 00000 0 00000   
 03227     +0 00000 0 00000    03230     +0 00000 0 00000    03231     +0 00000 0 00000    03232     +0 00000 0 00000   
 03233     +0 00000 0 00000    03234     +0 00000 0 00000    03235     +0 00000 0 00000    03236     +0 00000 0 00000   
 03237     +0 00000 0 00000    03240     +0 00000 0 00000    03241     +0 00000 0 00000    03242     +0 00000 0 00000   
 03243     +0 00000 0 00000    03244     +0 00000 0 00000    03245     +0 00000 0 00000    03246     +0 00000 0 00000   
 03247     +0 00000 0 00000    03250     +0 00000 0 00000    03251     +0 00000 0 00000    03252     +0 00000 0 00000   
 03253     +0 00000 0 00000    03254     +0 00000 0 00000    03255     +0 00000 0 00000    03256     +0 00000 0 00000   
 03257     +0 00000 0 00000    03260     +0 00000 0 00000    03261     +0 00000 0 00000    03262     +0 00000 0 00000   
 03263     +0 00000 0 00000    03264     +0 00000 0 00000    03265     +0 00000 0 00000    03266     +0 00000 0 00000   
 03267     +0 00000 0 00000    03270     +0 00000 0 00000    03271     +0 00000 0 00000    03272     +0 00000 0 00000   
 03273     +0 00000 0 00000    03274     +0 00000 0 00000    03275     +0 00000 0 00000    03276     +0 00000 0 00000   
 03277     +0 00000 0 00000    03300     +0 00000 0 00000    03301     +0 00000 0 00000    03302     +0 00000 0 00000   
 03303     +0 00000 0 00000    03304     +0 00000 0 00000    03305     +0 00000 0 00000    03306     +0 00000 0 00000   
 03307     +0 00000 0 00000    03310     +0 00000 0 00000    03311     +0 00000 0 00000    03312     +0 00000 0 00000   
 03313     +0 00000 0 00000    03314     +0 00000 0 00000    03315     +0 00000 0 00000    03316     +0 00000 0 00000   
 03317     +0 00000 0 00000    03320     +0 00000 0 00000    03321     +0 00000 0 00000    03322     +0 00000 0 00000   
 03323     +0 00000 0 00000    03324     +0 00000 0 00000    03325     +0 00000 0 00000    03326     +0 00000 0 00000   
 03327     +0 00000 0 00000    03330     +0 00000 0 00000    03331     +0 00000 0 00000    03332     +0 00000 0 00000   
 03333     +0 00000 0 00000    03334     +0 00000 0 00000    03335     +0 00000 0 00000    03336     +0 00000 0 00000   
 03337     +0 00000 0 00000    03340     +0 00000 0 00000    03341     +0 00000 0 00000    03342     +0 00000 0 00000   
 03343     +0 00000 0 00000    03344     +0 00000 0 00000    03345     +0 00000 0 00000    03346     +0 00000 0 00000   
 03347     +0 00000 0 00000    03350     +0 00000 0 00000    03351     +0 00000 0 00000    03352     +0 00000 0 00000   
 03353     +0 00000 0 00000    03354     +0 00000 0 00000    03355     +0 00000 0 00000    03356     +0 00000 0 00000   
 03357     +0 00000 0 00000    03360     +0 00000 0 00000    03361     +0 00000 0 00000    03362     +0 00000 0 00000   
 03363     +0 00000 0 00000    03364     +0 00000 0 00000    03365     +0 00000 0 00000    03366     +0 00000 0 00000   
 03367     +0 00000 0 00000    03370     +0 00000 0 00000    03371     +0 00000 0 00000    03372     +0 00000 0 00000   
 03373     +0 00000 0 00000    03374     +0 00000 0 00000    03375     +0 00000 0 00000    03376     +0 00000 0 00000   
 03377     +0 00000 0 00000    03400     +0 00000 0 00000    03401     +0 00000 0 00000    03402     +0 00000 0 00000   
 03403     +0 00000 0 00000    03404     +0 00000 0 00000    03405     +0 00000 0 00000    03406     +0 00000 0 00000   
 03407     +0 00000 0 00000    03410     +0 00000 0 00000    03411     +0 00000 0 00000    03412     +0 00000 0 00000   
 03413     +0 00000 0 00000    03414     +0 00000 0 00000    03415     +0 00000 0 00000    03416     +0 00000 0 00000   
 03417     +0 00000 0 00000    03420     +0 00000 0 00000    03421     +0 00000 0 00000    03422     +0 00000 0 00000   
 03423     +0 00000 0 00000    03424     +0 00000 0 00000    03425     +0 00000 0 00000    03426     +0 00000 0 00000   
 03427     +0 00000 0 00000    03430     +0 00000 0 00000    03431     +0 00000 0 00000    03432     +0 00000 0 00000   
 03433     +0 00000 0 00000    03434     +0 00000 0 00000    03435     +0 00000 0 00000    03436     +0 00000 0 00000   
 03437     +0 00000 0 00000    03440     +0 00000 0 00000    03441     +0 00000 0 00000    03442     +0 00000 0 00000   
 03443     +0 00000 0 00000    03444     +0 00000 0 00000    03445     +0 00000 0 00000                                 
                 V'S NAME1...NAME1(150)=$OTHER$                                     270  LM00349
 05324     -0 66330 2 55160    05325     -0 66330 2 55160    05326     -0 66330 2 55160    05327     -0 66330 2 55160   
 05330     -0 66330 2 55160    05331     -0 66330 2 55160    05332     -0 66330 2 55160    05333     -0 66330 2 55160   
 05334     -0 66330 2 55160    05335     -0 66330 2 55160    05336     -0 66330 2 55160    05337     -0 66330 2 55160   
 05340     -0 66330 2 55160    05341     -0 66330 2 55160    05342     -0 66330 2 55160    05343     -0 66330 2 55160   
 05344     -0 66330 2 55160    05345     -0 66330 2 55160    05346     -0 66330 2 55160    05347     -0 66330 2 55160   
 05350     -0 66330 2 55160    05351     -0 66330 2 55160    05352     -0 66330 2 55160    05353     -0 66330 2 55160   
 05354     -0 66330 2 55160    05355     -0 66330 2 55160    05356     -0 66330 2 55160    05357     -0 66330 2 55160   
 05360     -0 66330 2 55160    05361     -0 66330 2 55160    05362     -0 66330 2 55160    05363     -0 66330 2 55160   
 05364     -0 66330 2 55160    05365     -0 66330 2 55160    05366     -0 66330 2 55160    05367     -0 66330 2 55160   
 05370     -0 66330 2 55160    05371     -0 66330 2 55160    05372     -0 66330 2 55160    05373     -0 66330 2 55160   
 05374     -0 66330 2 55160    05375     -0 66330 2 55160    05376     -0 66330 2 55160    05377     -0 66330 2 55160   
 05400     -0 66330 2 55160    05401     -0 66330 2 55160    05402     -0 66330 2 55160    05403     -0 66330 2 55160   
 05404     -0 66330 2 55160    05405     -0 66330 2 55160    05406     -0 66330 2 55160    05407     -0 66330 2 55160   
 05410     -0 66330 2 55160    05411     -0 66330 2 55160    05412     -0 66330 2 55160    05413     -0 66330 2 55160   
 05414     -0 66330 2 55160    05415     -0 66330 2 55160    05416     -0 66330 2 55160    05417     -0 66330 2 55160   
 05420     -0 66330 2 55160    05421     -0 66330 2 55160    05422     -0 66330 2 55160    05423     -0 66330 2 55160   
 05424     -0 66330 2 55160    05425     -0 66330 2 55160    05426     -0 66330 2 55160    05427     -0 66330 2 55160   
 05430     -0 66330 2 55160    05431     -0 66330 2 55160    05432     -0 66330 2 55160    05433     -0 66330 2 55160   
 05434     -0 66330 2 55160    05435     -0 66330 2 55160    05436     -0 66330 2 55160    05437     -0 66330 2 55160   
 05440     -0 66330 2 55160    05441     -0 66330 2 55160    05442     -0 66330 2 55160    05443     -0 66330 2 55160   
 05444     -0 66330 2 55160    05445     -0 66330 2 55160    05446     -0 66330 2 55160    05447     -0 66330 2 55160   
 05450     -0 66330 2 55160    05451     -0 66330 2 55160    05452     -0 66330 2 55160    05453     -0 66330 2 55160   
 05454     -0 66330 2 55160    05455     -0 66330 2 55160    05456     -0 66330 2 55160    05457     -0 66330 2 55160   
 05460     -0 66330 2 55160    05461     -0 66330 2 55160    05462     -0 66330 2 55160    05463     -0 66330 2 55160   
 05464     -0 66330 2 55160    05465     -0 66330 2 55160    05466     -0 66330 2 55160    05467     -0 66330 2 55160   
 05470     -0 66330 2 55160    05471     -0 66330 2 55160    05472     -0 66330 2 55160    05473     -0 66330 2 55160   
 05474     -0 66330 2 55160    05475     -0 66330 2 55160    05476     -0 66330 2 55160    05477     -0 66330 2 55160   
 05500     -0 66330 2 55160    05501     -0 66330 2 55160    05502     -0 66330 2 55160    05503     -0 66330 2 55160   
 05504     -0 66330 2 55160    05505     -0 66330 2 55160    05506     -0 66330 2 55160    05507     -0 66330 2 55160   
 05510     -0 66330 2 55160    05511     -0 66330 2 55160    05512     -0 66330 2 55160    05513     -0 66330 2 55160   
 05514     -0 66330 2 55160    05515     -0 66330 2 55160    05516     -0 66330 2 55160    05517     -0 66330 2 55160   
 05520     -0 66330 2 55160    05521     -0 66330 2 55160    05522     -0 66330 2 55160    05523     -0 66330 2 55160   
 05524     -0 66330 2 55160    05525     -0 66330 2 55160    05526     -0 66330 2 55160    05527     -0 66330 2 55160   
 05530     -0 66330 2 55160    05531     -0 66330 2 55160    05532     -0 66330 2 55160    05533     -0 66330 2 55160   
 05534     -0 66330 2 55160    05535     -0 66330 2 55160    05536     -0 66330 2 55160    05537     -0 66330 2 55160   
 05540     -0 66330 2 55160    05541     -0 66330 2 55160    05542     -0 66330 2 55160    05543     -0 66330 2 55160   
 05544     -0 66330 2 55160    05545     -0 66330 2 55160    05546     -0 66330 2 55160    05547     -0 66330 2 55160   
 05550     -0 66330 2 55160    05551     -0 66330 2 55160    05552     -0 66330 2 55160                                 
                 V'S NAME2 ...NAME2 (150)=$FILES$                                   271  LM00350
 05553     +2 63143 2 56260    05554     +2 63143 2 56260    05555     +2 63143 2 56260    05556     +2 63143 2 56260   
 05557     +2 63143 2 56260    05560     +2 63143 2 56260    05561     +2 63143 2 56260    05562     +2 63143 2 56260   
 05563     +2 63143 2 56260    05564     +2 63143 2 56260    05565     +2 63143 2 56260    05566     +2 63143 2 56260   
 05567     +2 63143 2 56260    05570     +2 63143 2 56260    05571     +2 63143 2 56260    05572     +2 63143 2 56260   
 05573     +2 63143 2 56260    05574     +2 63143 2 56260    05575     +2 63143 2 56260    05576     +2 63143 2 56260   
 05577     +2 63143 2 56260    05600     +2 63143 2 56260    05601     +2 63143 2 56260    05602     +2 63143 2 56260   
 05603     +2 63143 2 56260    05604     +2 63143 2 56260    05605     +2 63143 2 56260    05606     +2 63143 2 56260   
 05607     +2 63143 2 56260    05610     +2 63143 2 56260    05611     +2 63143 2 56260    05612     +2 63143 2 56260   
 05613     +2 63143 2 56260    05614     +2 63143 2 56260    05615     +2 63143 2 56260    05616     +2 63143 2 56260   
 05617     +2 63143 2 56260    05620     +2 63143 2 56260    05621     +2 63143 2 56260    05622     +2 63143 2 56260   
 05623     +2 63143 2 56260    05624     +2 63143 2 56260    05625     +2 63143 2 56260    05626     +2 63143 2 56260   
 05627     +2 63143 2 56260    05630     +2 63143 2 56260    05631     +2 63143 2 56260    05632     +2 63143 2 56260   
 05633     +2 63143 2 56260    05634     +2 63143 2 56260    05635     +2 63143 2 56260    05636     +2 63143 2 56260   
 05637     +2 63143 2 56260    05640     +2 63143 2 56260    05641     +2 63143 2 56260    05642     +2 63143 2 56260   
 05643     +2 63143 2 56260    05644     +2 63143 2 56260    05645     +2 63143 2 56260    05646     +2 63143 2 56260   
 05647     +2 63143 2 56260    05650     +2 63143 2 56260    05651     +2 63143 2 56260    05652     +2 63143 2 56260   
 05653     +2 63143 2 56260    05654     +2 63143 2 56260    05655     +2 63143 2 56260    05656     +2 63143 2 56260   
 05657     +2 63143 2 56260    05660     +2 63143 2 56260    05661     +2 63143 2 56260    05662     +2 63143 2 56260   
 05663     +2 63143 2 56260    05664     +2 63143 2 56260    05665     +2 63143 2 56260    05666     +2 63143 2 56260   
 05667     +2 63143 2 56260    05670     +2 63143 2 56260    05671     +2 63143 2 56260    05672     +2 63143 2 56260   
 05673     +2 63143 2 56260    05674     +2 63143 2 56260    05675     +2 63143 2 56260    05676     +2 63143 2 56260   
 05677     +2 63143 2 56260    05700     +2 63143 2 56260    05701     +2 63143 2 56260    05702     +2 63143 2 56260   
 05703     +2 63143 2 56260    05704     +2 63143 2 56260    05705     +2 63143 2 56260    05706     +2 63143 2 56260   
 05707     +2 63143 2 56260    05710     +2 63143 2 56260    05711     +2 63143 2 56260    05712     +2 63143 2 56260   
 05713     +2 63143 2 56260    05714     +2 63143 2 56260    05715     +2 63143 2 56260    05716     +2 63143 2 56260   
 05717     +2 63143 2 56260    05720     +2 63143 2 56260    05721     +2 63143 2 56260    05722     +2 63143 2 56260   
 05723     +2 63143 2 56260    05724     +2 63143 2 56260    05725     +2 63143 2 56260    05726     +2 63143 2 56260   
 05727     +2 63143 2 56260    05730     +2 63143 2 56260    05731     +2 63143 2 56260    05732     +2 63143 2 56260   
 05733     +2 63143 2 56260    05734     +2 63143 2 56260    05735     +2 63143 2 56260    05736     +2 63143 2 56260   
 05737     +2 63143 2 56260    05740     +2 63143 2 56260    05741     +2 63143 2 56260    05742     +2 63143 2 56260   
 05743     +2 63143 2 56260    05744     +2 63143 2 56260    05745     +2 63143 2 56260    05746     +2 63143 2 56260   
 05747     +2 63143 2 56260    05750     +2 63143 2 56260    05751     +2 63143 2 56260    05752     +2 63143 2 56260   
 05753     +2 63143 2 56260    05754     +2 63143 2 56260    05755     +2 63143 2 56260    05756     +2 63143 2 56260   
 05757     +2 63143 2 56260    05760     +2 63143 2 56260    05761     +2 63143 2 56260    05762     +2 63143 2 56260   
 05763     +2 63143 2 56260    05764     +2 63143 2 56260    05765     +2 63143 2 56260    05766     +2 63143 2 56260   
 05767     +2 63143 2 56260    05770     +2 63143 2 56260    05771     +2 63143 2 56260    05772     +2 63143 2 56260   
 05773     +2 63143 2 56260    05774     +2 63143 2 56260    05775     +2 63143 2 56260    05776     +2 63143 2 56260   
 05777     +2 63143 2 56260    06000     +2 63143 2 56260    06001     +2 63143 2 56260                                 
                 V'S MASK1 ...MASK1 (150)=777777777777K                             272  LM00351
 04560     -3 77777 7 77777    04561     -3 77777 7 77777    04562     -3 77777 7 77777    04563     -3 77777 7 77777   
 04564     -3 77777 7 77777    04565     -3 77777 7 77777    04566     -3 77777 7 77777    04567     -3 77777 7 77777   
 04570     -3 77777 7 77777    04571     -3 77777 7 77777    04572     -3 77777 7 77777    04573     -3 77777 7 77777   
 04574     -3 77777 7 77777    04575     -3 77777 7 77777    04576     -3 77777 7 77777    04577     -3 77777 7 77777   
 04600     -3 77777 7 77777    04601     -3 77777 7 77777    04602     -3 77777 7 77777    04603     -3 77777 7 77777   
 04604     -3 77777 7 77777    04605     -3 77777 7 77777    04606     -3 77777 7 77777    04607     -3 77777 7 77777   
 04610     -3 77777 7 77777    04611     -3 77777 7 77777    04612     -3 77777 7 77777    04613     -3 77777 7 77777   
 04614     -3 77777 7 77777    04615     -3 77777 7 77777    04616     -3 77777 7 77777    04617     -3 77777 7 77777   
 04620     -3 77777 7 77777    04621     -3 77777 7 77777    04622     -3 77777 7 77777    04623     -3 77777 7 77777   
 04624     -3 77777 7 77777    04625     -3 77777 7 77777    04626     -3 77777 7 77777    04627     -3 77777 7 77777   
 04630     -3 77777 7 77777    04631     -3 77777 7 77777    04632     -3 77777 7 77777    04633     -3 77777 7 77777   
 04634     -3 77777 7 77777    04635     -3 77777 7 77777    04636     -3 77777 7 77777    04637     -3 77777 7 77777   
 04640     -3 77777 7 77777    04641     -3 77777 7 77777    04642     -3 77777 7 77777    04643     -3 77777 7 77777   
 04644     -3 77777 7 77777    04645     -3 77777 7 77777    04646     -3 77777 7 77777    04647     -3 77777 7 77777   
 04650     -3 77777 7 77777    04651     -3 77777 7 77777    04652     -3 77777 7 77777    04653     -3 77777 7 77777   
 04654     -3 77777 7 77777    04655     -3 77777 7 77777    04656     -3 77777 7 77777    04657     -3 77777 7 77777   
 04660     -3 77777 7 77777    04661     -3 77777 7 77777    04662     -3 77777 7 77777    04663     -3 77777 7 77777   
 04664     -3 77777 7 77777    04665     -3 77777 7 77777    04666     -3 77777 7 77777    04667     -3 77777 7 77777   
 04670     -3 77777 7 77777    04671     -3 77777 7 77777    04672     -3 77777 7 77777    04673     -3 77777 7 77777   
 04674     -3 77777 7 77777    04675     -3 77777 7 77777    04676     -3 77777 7 77777    04677     -3 77777 7 77777   
 04700     -3 77777 7 77777    04701     -3 77777 7 77777    04702     -3 77777 7 77777    04703     -3 77777 7 77777   
 04704     -3 77777 7 77777    04705     -3 77777 7 77777    04706     -3 77777 7 77777    04707     -3 77777 7 77777   
 04710     -3 77777 7 77777    04711     -3 77777 7 77777    04712     -3 77777 7 77777    04713     -3 77777 7 77777   
 04714     -3 77777 7 77777    04715     -3 77777 7 77777    04716     -3 77777 7 77777    04717     -3 77777 7 77777   
 04720     -3 77777 7 77777    04721     -3 77777 7 77777    04722     -3 77777 7 77777    04723     -3 77777 7 77777   
 04724     -3 77777 7 77777    04725     -3 77777 7 77777    04726     -3 77777 7 77777    04727     -3 77777 7 77777   
 04730     -3 77777 7 77777    04731     -3 77777 7 77777    04732     -3 77777 7 77777    04733     -3 77777 7 77777   
 04734     -3 77777 7 77777    04735     -3 77777 7 77777    04736     -3 77777 7 77777    04737     -3 77777 7 77777   
 04740     -3 77777 7 77777    04741     -3 77777 7 77777    04742     -3 77777 7 77777    04743     -3 77777 7 77777   
 04744     -3 77777 7 77777    04745     -3 77777 7 77777    04746     -3 77777 7 77777    04747     -3 77777 7 77777   
 04750     -3 77777 7 77777    04751     -3 77777 7 77777    04752     -3 77777 7 77777    04753     -3 77777 7 77777   
 04754     -3 77777 7 77777    04755     -3 77777 7 77777    04756     -3 77777 7 77777    04757     -3 77777 7 77777   
 04760     -3 77777 7 77777    04761     -3 77777 7 77777    04762     -3 77777 7 77777    04763     -3 77777 7 77777   
 04764     -3 77777 7 77777    04765     -3 77777 7 77777    04766     -3 77777 7 77777    04767     -3 77777 7 77777   
 04770     -3 77777 7 77777    04771     -3 77777 7 77777    04772     -3 77777 7 77777    04773     -3 77777 7 77777   
 04774     -3 77777 7 77777    04775     -3 77777 7 77777    04776     -3 77777 7 77777    04777     -3 77777 7 77777   
 05000     -3 77777 7 77777    05001     -3 77777 7 77777    05002     -3 77777 7 77777    05003     -3 77777 7 77777   
 05004     -3 77777 7 77777    05005     -3 77777 7 77777    05006     -3 77777 7 77777                                 
                 V'S MASK2 ...MASK2 (150) = 777777777777K                           273  LM00352
 05007     -3 77777 7 77777    05010     -3 77777 7 77777    05011     -3 77777 7 77777    05012     -3 77777 7 77777   
 05013     -3 77777 7 77777    05014     -3 77777 7 77777    05015     -3 77777 7 77777    05016     -3 77777 7 77777   
 05017     -3 77777 7 77777    05020     -3 77777 7 77777    05021     -3 77777 7 77777    05022     -3 77777 7 77777   
 05023     -3 77777 7 77777    05024     -3 77777 7 77777    05025     -3 77777 7 77777    05026     -3 77777 7 77777   
 05027     -3 77777 7 77777    05030     -3 77777 7 77777    05031     -3 77777 7 77777    05032     -3 77777 7 77777   
 05033     -3 77777 7 77777    05034     -3 77777 7 77777    05035     -3 77777 7 77777    05036     -3 77777 7 77777   
 05037     -3 77777 7 77777    05040     -3 77777 7 77777    05041     -3 77777 7 77777    05042     -3 77777 7 77777   
 05043     -3 77777 7 77777    05044     -3 77777 7 77777    05045     -3 77777 7 77777    05046     -3 77777 7 77777   
 05047     -3 77777 7 77777    05050     -3 77777 7 77777    05051     -3 77777 7 77777    05052     -3 77777 7 77777   
 05053     -3 77777 7 77777    05054     -3 77777 7 77777    05055     -3 77777 7 77777    05056     -3 77777 7 77777   
 05057     -3 77777 7 77777    05060     -3 77777 7 77777    05061     -3 77777 7 77777    05062     -3 77777 7 77777   
 05063     -3 77777 7 77777    05064     -3 77777 7 77777    05065     -3 77777 7 77777    05066     -3 77777 7 77777   
 05067     -3 77777 7 77777    05070     -3 77777 7 77777    05071     -3 77777 7 77777    05072     -3 77777 7 77777   
 05073     -3 77777 7 77777    05074     -3 77777 7 77777    05075     -3 77777 7 77777    05076     -3 77777 7 77777   
 05077     -3 77777 7 77777    05100     -3 77777 7 77777    05101     -3 77777 7 77777    05102     -3 77777 7 77777   
 05103     -3 77777 7 77777    05104     -3 77777 7 77777    05105     -3 77777 7 77777    05106     -3 77777 7 77777   
 05107     -3 77777 7 77777    05110     -3 77777 7 77777    05111     -3 77777 7 77777    05112     -3 77777 7 77777   
 05113     -3 77777 7 77777    05114     -3 77777 7 77777    05115     -3 77777 7 77777    05116     -3 77777 7 77777   
 05117     -3 77777 7 77777    05120     -3 77777 7 77777    05121     -3 77777 7 77777    05122     -3 77777 7 77777   
 05123     -3 77777 7 77777    05124     -3 77777 7 77777    05125     -3 77777 7 77777    05126     -3 77777 7 77777   
 05127     -3 77777 7 77777    05130     -3 77777 7 77777    05131     -3 77777 7 77777    05132     -3 77777 7 77777   
 05133     -3 77777 7 77777    05134     -3 77777 7 77777    05135     -3 77777 7 77777    05136     -3 77777 7 77777   
 05137     -3 77777 7 77777    05140     -3 77777 7 77777    05141     -3 77777 7 77777    05142     -3 77777 7 77777   
 05143     -3 77777 7 77777    05144     -3 77777 7 77777    05145     -3 77777 7 77777    05146     -3 77777 7 77777   
 05147     -3 77777 7 77777    05150     -3 77777 7 77777    05151     -3 77777 7 77777    05152     -3 77777 7 77777   
 05153     -3 77777 7 77777    05154     -3 77777 7 77777    05155     -3 77777 7 77777    05156     -3 77777 7 77777   
 05157     -3 77777 7 77777    05160     -3 77777 7 77777    05161     -3 77777 7 77777    05162     -3 77777 7 77777   
 05163     -3 77777 7 77777    05164     -3 77777 7 77777    05165     -3 77777 7 77777    05166     -3 77777 7 77777   
 05167     -3 77777 7 77777    05170     -3 77777 7 77777    05171     -3 77777 7 77777    05172     -3 77777 7 77777   
 05173     -3 77777 7 77777    05174     -3 77777 7 77777    05175     -3 77777 7 77777    05176     -3 77777 7 77777   
 05177     -3 77777 7 77777    05200     -3 77777 7 77777    05201     -3 77777 7 77777    05202     -3 77777 7 77777   
 05203     -3 77777 7 77777    05204     -3 77777 7 77777    05205     -3 77777 7 77777    05206     -3 77777 7 77777   
 05207     -3 77777 7 77777    05210     -3 77777 7 77777    05211     -3 77777 7 77777    05212     -3 77777 7 77777   
 05213     -3 77777 7 77777    05214     -3 77777 7 77777    05215     -3 77777 7 77777    05216     -3 77777 7 77777   
 05217     -3 77777 7 77777    05220     -3 77777 7 77777    05221     -3 77777 7 77777    05222     -3 77777 7 77777   
 05223     -3 77777 7 77777    05224     -3 77777 7 77777    05225     -3 77777 7 77777    05226     -3 77777 7 77777   
 05227     -3 77777 7 77777    05230     -3 77777 7 77777    05231     -3 77777 7 77777    05232     -3 77777 7 77777   
 05233     -3 77777 7 77777    05234     -3 77777 7 77777    05235     -3 77777 7 77777                                 
                 V'S CCOUNL...CCOUNL(20)=0                                          274  LM00353
 02510     +0 00000 0 00000    02511     +0 00000 0 00000    02512     +0 00000 0 00000    02513     +0 00000 0 00000   
 02514     +0 00000 0 00000    02515     +0 00000 0 00000    02516     +0 00000 0 00000    02517     +0 00000 0 00000   
 02520     +0 00000 0 00000    02521     +0 00000 0 00000    02522     +0 00000 0 00000    02523     +0 00000 0 00000   
 02524     +0 00000 0 00000    02525     +0 00000 0 00000    02526     +0 00000 0 00000    02527     +0 00000 0 00000   
 02530     +0 00000 0 00000    02531     +0 00000 0 00000    02532     +0 00000 0 00000    02533     +0 00000 0 00000   
 02534     +0 00000 0 00000                                                                                             
                 V'S CCOUNT...CCOUNT(20)=0                                          275  LM00354
 02535     +0 00000 0 00000    02536     +0 00000 0 00000    02537     +0 00000 0 00000    02540     +0 00000 0 00000   
 02541     +0 00000 0 00000    02542     +0 00000 0 00000    02543     +0 00000 0 00000    02544     +0 00000 0 00000   
 02545     +0 00000 0 00000    02546     +0 00000 0 00000    02547     +0 00000 0 00000    02550     +0 00000 0 00000   
 02551     +0 00000 0 00000    02552     +0 00000 0 00000    02553     +0 00000 0 00000    02554     +0 00000 0 00000   
 02555     +0 00000 0 00000    02556     +0 00000 0 00000    02557     +0 00000 0 00000    02560     +0 00000 0 00000   
 02561     +0 00000 0 00000                                                                                             
                 V'S CNRECS...CNRECS(20)=0                                          276  LM00355
 03172     +0 00000 0 00000    03173     +0 00000 0 00000    03174     +0 00000 0 00000    03175     +0 00000 0 00000   
 03176     +0 00000 0 00000    03177     +0 00000 0 00000    03200     +0 00000 0 00000    03201     +0 00000 0 00000   
 03202     +0 00000 0 00000    03203     +0 00000 0 00000    03204     +0 00000 0 00000    03205     +0 00000 0 00000   
 03206     +0 00000 0 00000    03207     +0 00000 0 00000    03210     +0 00000 0 00000    03211     +0 00000 0 00000   
 03212     +0 00000 0 00000    03213     +0 00000 0 00000    03214     +0 00000 0 00000    03215     +0 00000 0 00000   
 03216     +0 00000 0 00000                                                                                             
                 V'S CLNAME...CLNAME(20)=$OTHER$                                    277  LM00356
 03145     -0 66330 2 55160    03146     -0 66330 2 55160    03147     -0 66330 2 55160    03150     -0 66330 2 55160   
 03151     -0 66330 2 55160    03152     -0 66330 2 55160    03153     -0 66330 2 55160    03154     -0 66330 2 55160   
 03155     -0 66330 2 55160    03156     -0 66330 2 55160    03157     -0 66330 2 55160    03160     -0 66330 2 55160   
 03161     -0 66330 2 55160    03162     -0 66330 2 55160    03163     -0 66330 2 55160    03164     -0 66330 2 55160   
 03165     -0 66330 2 55160    03166     -0 66330 2 55160    03167     -0 66330 2 55160    03170     -0 66330 2 55160   
 03171     -0 66330 2 55160                                                                                             
                 V'S MAX=1                                                          278  LM00357
 05236     +0 00000 0 00001                                                                                             
                 V'S MXCLS=0                                                        279  LM00358
 05321     +0 00000 0 00000                                                                                             
                 V'S FTBL...FTBL(91) = 0                                            280  LM00361
 04353     +0 00000 0 00000    04354     +0 00000 0 00000    04355     +0 00000 0 00000    04356     +0 00000 0 00000   
 04357     +0 00000 0 00000    04360     +0 00000 0 00000    04361     +0 00000 0 00000    04362     +0 00000 0 00000   
 04363     +0 00000 0 00000    04364     +0 00000 0 00000    04365     +0 00000 0 00000    04366     +0 00000 0 00000   
 04367     +0 00000 0 00000    04370     +0 00000 0 00000    04371     +0 00000 0 00000    04372     +0 00000 0 00000   
 04373     +0 00000 0 00000    04374     +0 00000 0 00000    04375     +0 00000 0 00000    04376     +0 00000 0 00000   
 04377     +0 00000 0 00000    04400     +0 00000 0 00000    04401     +0 00000 0 00000    04402     +0 00000 0 00000   
 04403     +0 00000 0 00000    04404     +0 00000 0 00000    04405     +0 00000 0 00000    04406     +0 00000 0 00000   
 04407     +0 00000 0 00000    04410     +0 00000 0 00000    04411     +0 00000 0 00000    04412     +0 00000 0 00000   
 04413     +0 00000 0 00000    04414     +0 00000 0 00000    04415     +0 00000 0 00000    04416     +0 00000 0 00000   
 04417     +0 00000 0 00000    04420     +0 00000 0 00000    04421     +0 00000 0 00000    04422     +0 00000 0 00000   
 04423     +0 00000 0 00000    04424     +0 00000 0 00000    04425     +0 00000 0 00000    04426     +0 00000 0 00000   
 04427     +0 00000 0 00000    04430     +0 00000 0 00000    04431     +0 00000 0 00000    04432     +0 00000 0 00000   
 04433     +0 00000 0 00000    04434     +0 00000 0 00000    04435     +0 00000 0 00000    04436     +0 00000 0 00000   
 04437     +0 00000 0 00000    04440     +0 00000 0 00000    04441     +0 00000 0 00000    04442     +0 00000 0 00000   
 04443     +0 00000 0 00000    04444     +0 00000 0 00000    04445     +0 00000 0 00000    04446     +0 00000 0 00000   
 04447     +0 00000 0 00000    04450     +0 00000 0 00000    04451     +0 00000 0 00000    04452     +0 00000 0 00000   
 04453     +0 00000 0 00000    04454     +0 00000 0 00000    04455     +0 00000 0 00000    04456     +0 00000 0 00000   
 04457     +0 00000 0 00000    04460     +0 00000 0 00000    04461     +0 00000 0 00000    04462     +0 00000 0 00000   
 04463     +0 00000 0 00000    04464     +0 00000 0 00000    04465     +0 00000 0 00000    04466     +0 00000 0 00000   
 04467     +0 00000 0 00000    04470     +0 00000 0 00000    04471     +0 00000 0 00000    04472     +0 00000 0 00000   
 04473     +0 00000 0 00000    04474     +0 00000 0 00000    04475     +0 00000 0 00000    04476     +0 00000 0 00000   
 04477     +0 00000 0 00000    04500     +0 00000 0 00000    04501     +0 00000 0 00000    04502     +0 00000 0 00000   
 04503     +0 00000 0 00000    04504     +0 00000 0 00000    04505     +0 00000 0 00000    04506     +0 00000 0 00000   
                 V'S RTBL...RTBL(91) = 0                                            281  LM00362
 06242     +0 00000 0 00000    06243     +0 00000 0 00000    06244     +0 00000 0 00000    06245     +0 00000 0 00000   
 06246     +0 00000 0 00000    06247     +0 00000 0 00000    06250     +0 00000 0 00000    06251     +0 00000 0 00000   
 06252     +0 00000 0 00000    06253     +0 00000 0 00000    06254     +0 00000 0 00000    06255     +0 00000 0 00000   
 06256     +0 00000 0 00000    06257     +0 00000 0 00000    06260     +0 00000 0 00000    06261     +0 00000 0 00000   
 06262     +0 00000 0 00000    06263     +0 00000 0 00000    06264     +0 00000 0 00000    06265     +0 00000 0 00000   
 06266     +0 00000 0 00000    06267     +0 00000 0 00000    06270     +0 00000 0 00000    06271     +0 00000 0 00000   
 06272     +0 00000 0 00000    06273     +0 00000 0 00000    06274     +0 00000 0 00000    06275     +0 00000 0 00000   
 06276     +0 00000 0 00000    06277     +0 00000 0 00000    06300     +0 00000 0 00000    06301     +0 00000 0 00000   
 06302     +0 00000 0 00000    06303     +0 00000 0 00000    06304     +0 00000 0 00000    06305     +0 00000 0 00000   
 06306     +0 00000 0 00000    06307     +0 00000 0 00000    06310     +0 00000 0 00000    06311     +0 00000 0 00000   
 06312     +0 00000 0 00000    06313     +0 00000 0 00000    06314     +0 00000 0 00000    06315     +0 00000 0 00000   
 06316     +0 00000 0 00000    06317     +0 00000 0 00000    06320     +0 00000 0 00000    06321     +0 00000 0 00000   
 06322     +0 00000 0 00000    06323     +0 00000 0 00000    06324     +0 00000 0 00000    06325     +0 00000 0 00000   
 06326     +0 00000 0 00000    06327     +0 00000 0 00000    06330     +0 00000 0 00000    06331     +0 00000 0 00000   
 06332     +0 00000 0 00000    06333     +0 00000 0 00000    06334     +0 00000 0 00000    06335     +0 00000 0 00000   
 06336     +0 00000 0 00000    06337     +0 00000 0 00000    06340     +0 00000 0 00000    06341     +0 00000 0 00000   
 06342     +0 00000 0 00000    06343     +0 00000 0 00000    06344     +0 00000 0 00000    06345     +0 00000 0 00000   
 06346     +0 00000 0 00000    06347     +0 00000 0 00000    06350     +0 00000 0 00000    06351     +0 00000 0 00000   
 06352     +0 00000 0 00000    06353     +0 00000 0 00000    06354     +0 00000 0 00000    06355     +0 00000 0 00000   
 06356     +0 00000 0 00000    06357     +0 00000 0 00000    06360     +0 00000 0 00000    06361     +0 00000 0 00000   
 06362     +0 00000 0 00000    06363     +0 00000 0 00000    06364     +0 00000 0 00000    06365     +0 00000 0 00000   
 06366     +0 00000 0 00000    06367     +0 00000 0 00000    06370     +0 00000 0 00000    06371     +0 00000 0 00000   
 06372     +0 00000 0 00000    06373     +0 00000 0 00000    06374     +0 00000 0 00000    06375     +0 00000 0 00000   
                 V'S CFTBL...CFTBL(91) = 0                                          282  LM00363
 02562     +0 00000 0 00000    02563     +0 00000 0 00000    02564     +0 00000 0 00000    02565     +0 00000 0 00000   
 02566     +0 00000 0 00000    02567     +0 00000 0 00000    02570     +0 00000 0 00000    02571     +0 00000 0 00000   
 02572     +0 00000 0 00000    02573     +0 00000 0 00000    02574     +0 00000 0 00000    02575     +0 00000 0 00000   
 02576     +0 00000 0 00000    02577     +0 00000 0 00000    02600     +0 00000 0 00000    02601     +0 00000 0 00000   
 02602     +0 00000 0 00000    02603     +0 00000 0 00000    02604     +0 00000 0 00000    02605     +0 00000 0 00000   
 02606     +0 00000 0 00000    02607     +0 00000 0 00000    02610     +0 00000 0 00000    02611     +0 00000 0 00000   
 02612     +0 00000 0 00000    02613     +0 00000 0 00000    02614     +0 00000 0 00000    02615     +0 00000 0 00000   
 02616     +0 00000 0 00000    02617     +0 00000 0 00000    02620     +0 00000 0 00000    02621     +0 00000 0 00000   
 02622     +0 00000 0 00000    02623     +0 00000 0 00000    02624     +0 00000 0 00000    02625     +0 00000 0 00000   
 02626     +0 00000 0 00000    02627     +0 00000 0 00000    02630     +0 00000 0 00000    02631     +0 00000 0 00000   
 02632     +0 00000 0 00000    02633     +0 00000 0 00000    02634     +0 00000 0 00000    02635     +0 00000 0 00000   
 02636     +0 00000 0 00000    02637     +0 00000 0 00000    02640     +0 00000 0 00000    02641     +0 00000 0 00000   
 02642     +0 00000 0 00000    02643     +0 00000 0 00000    02644     +0 00000 0 00000    02645     +0 00000 0 00000   
 02646     +0 00000 0 00000    02647     +0 00000 0 00000    02650     +0 00000 0 00000    02651     +0 00000 0 00000   
 02652     +0 00000 0 00000    02653     +0 00000 0 00000    02654     +0 00000 0 00000    02655     +0 00000 0 00000   
 02656     +0 00000 0 00000    02657     +0 00000 0 00000    02660     +0 00000 0 00000    02661     +0 00000 0 00000   
 02662     +0 00000 0 00000    02663     +0 00000 0 00000    02664     +0 00000 0 00000    02665     +0 00000 0 00000   
 02666     +0 00000 0 00000    02667     +0 00000 0 00000    02670     +0 00000 0 00000    02671     +0 00000 0 00000   
 02672     +0 00000 0 00000    02673     +0 00000 0 00000    02674     +0 00000 0 00000    02675     +0 00000 0 00000   
 02676     +0 00000 0 00000    02677     +0 00000 0 00000    02700     +0 00000 0 00000    02701     +0 00000 0 00000   
 02702     +0 00000 0 00000    02703     +0 00000 0 00000    02704     +0 00000 0 00000    02705     +0 00000 0 00000   
 02706     +0 00000 0 00000    02707     +0 00000 0 00000    02710     +0 00000 0 00000    02711     +0 00000 0 00000   
 02712     +0 00000 0 00000    02713     +0 00000 0 00000    02714     +0 00000 0 00000    02715     +0 00000 0 00000   
                 V'S CRTBL...CRTBL(91) = 0                                          283  LM00364
 03675     +0 00000 0 00000    03676     +0 00000 0 00000    03677     +0 00000 0 00000    03700     +0 00000 0 00000   
 03701     +0 00000 0 00000    03702     +0 00000 0 00000    03703     +0 00000 0 00000    03704     +0 00000 0 00000   
 03705     +0 00000 0 00000    03706     +0 00000 0 00000    03707     +0 00000 0 00000    03710     +0 00000 0 00000   
 03711     +0 00000 0 00000    03712     +0 00000 0 00000    03713     +0 00000 0 00000    03714     +0 00000 0 00000   
 03715     +0 00000 0 00000    03716     +0 00000 0 00000    03717     +0 00000 0 00000    03720     +0 00000 0 00000   
 03721     +0 00000 0 00000    03722     +0 00000 0 00000    03723     +0 00000 0 00000    03724     +0 00000 0 00000   
 03725     +0 00000 0 00000    03726     +0 00000 0 00000    03727     +0 00000 0 00000    03730     +0 00000 0 00000   
 03731     +0 00000 0 00000    03732     +0 00000 0 00000    03733     +0 00000 0 00000    03734     +0 00000 0 00000   
 03735     +0 00000 0 00000    03736     +0 00000 0 00000    03737     +0 00000 0 00000    03740     +0 00000 0 00000   
 03741     +0 00000 0 00000    03742     +0 00000 0 00000    03743     +0 00000 0 00000    03744     +0 00000 0 00000   
 03745     +0 00000 0 00000    03746     +0 00000 0 00000    03747     +0 00000 0 00000    03750     +0 00000 0 00000   
 03751     +0 00000 0 00000    03752     +0 00000 0 00000    03753     +0 00000 0 00000    03754     +0 00000 0 00000   
 03755     +0 00000 0 00000    03756     +0 00000 0 00000    03757     +0 00000 0 00000    03760     +0 00000 0 00000   
 03761     +0 00000 0 00000    03762     +0 00000 0 00000    03763     +0 00000 0 00000    03764     +0 00000 0 00000   
 03765     +0 00000 0 00000    03766     +0 00000 0 00000    03767     +0 00000 0 00000    03770     +0 00000 0 00000   
 03771     +0 00000 0 00000    03772     +0 00000 0 00000    03773     +0 00000 0 00000    03774     +0 00000 0 00000   
 03775     +0 00000 0 00000    03776     +0 00000 0 00000    03777     +0 00000 0 00000    04000     +0 00000 0 00000   
 04001     +0 00000 0 00000    04002     +0 00000 0 00000    04003     +0 00000 0 00000    04004     +0 00000 0 00000   
 04005     +0 00000 0 00000    04006     +0 00000 0 00000    04007     +0 00000 0 00000    04010     +0 00000 0 00000   
 04011     +0 00000 0 00000    04012     +0 00000 0 00000    04013     +0 00000 0 00000    04014     +0 00000 0 00000   
 04015     +0 00000 0 00000    04016     +0 00000 0 00000    04017     +0 00000 0 00000    04020     +0 00000 0 00000   
 04021     +0 00000 0 00000    04022     +0 00000 0 00000    04023     +0 00000 0 00000    04024     +0 00000 0 00000   
 04025     +0 00000 0 00000    04026     +0 00000 0 00000    04027     +0 00000 0 00000    04030     +0 00000 0 00000   
                 V'S XS...XS(100) = $X$                                             284  LM00365
 06444     -2 76060 6 06060    06445     -2 76060 6 06060    06446     -2 76060 6 06060    06447     -2 76060 6 06060   
 06450     -2 76060 6 06060    06451     -2 76060 6 06060    06452     -2 76060 6 06060    06453     -2 76060 6 06060   
 06454     -2 76060 6 06060    06455     -2 76060 6 06060    06456     -2 76060 6 06060    06457     -2 76060 6 06060   
 06460     -2 76060 6 06060    06461     -2 76060 6 06060    06462     -2 76060 6 06060    06463     -2 76060 6 06060   
 06464     -2 76060 6 06060    06465     -2 76060 6 06060    06466     -2 76060 6 06060    06467     -2 76060 6 06060   
 06470     -2 76060 6 06060    06471     -2 76060 6 06060    06472     -2 76060 6 06060    06473     -2 76060 6 06060   
 06474     -2 76060 6 06060    06475     -2 76060 6 06060    06476     -2 76060 6 06060    06477     -2 76060 6 06060   
 06500     -2 76060 6 06060    06501     -2 76060 6 06060    06502     -2 76060 6 06060    06503     -2 76060 6 06060   
 06504     -2 76060 6 06060    06505     -2 76060 6 06060    06506     -2 76060 6 06060    06507     -2 76060 6 06060   
 06510     -2 76060 6 06060    06511     -2 76060 6 06060    06512     -2 76060 6 06060    06513     -2 76060 6 06060   
 06514     -2 76060 6 06060    06515     -2 76060 6 06060    06516     -2 76060 6 06060    06517     -2 76060 6 06060   
 06520     -2 76060 6 06060    06521     -2 76060 6 06060    06522     -2 76060 6 06060    06523     -2 76060 6 06060   
 06524     -2 76060 6 06060    06525     -2 76060 6 06060    06526     -2 76060 6 06060    06527     -2 76060 6 06060   
 06530     -2 76060 6 06060    06531     -2 76060 6 06060    06532     -2 76060 6 06060    06533     -2 76060 6 06060   
 06534     -2 76060 6 06060    06535     -2 76060 6 06060    06536     -2 76060 6 06060    06537     -2 76060 6 06060   
 06540     -2 76060 6 06060    06541     -2 76060 6 06060    06542     -2 76060 6 06060    06543     -2 76060 6 06060   
 06544     -2 76060 6 06060    06545     -2 76060 6 06060    06546     -2 76060 6 06060    06547     -2 76060 6 06060   
 06550     -2 76060 6 06060    06551     -2 76060 6 06060    06552     -2 76060 6 06060    06553     -2 76060 6 06060   
 06554     -2 76060 6 06060    06555     -2 76060 6 06060    06556     -2 76060 6 06060    06557     -2 76060 6 06060   
 06560     -2 76060 6 06060    06561     -2 76060 6 06060    06562     -2 76060 6 06060    06563     -2 76060 6 06060   
 06564     -2 76060 6 06060    06565     -2 76060 6 06060    06566     -2 76060 6 06060    06567     -2 76060 6 06060   
 06570     -2 76060 6 06060    06571     -2 76060 6 06060    06572     -2 76060 6 06060    06573     -2 76060 6 06060   
 06574     -2 76060 6 06060    06575     -2 76060 6 06060    06576     -2 76060 6 06060    06577     -2 76060 6 06060   
 06600     -2 76060 6 06060    06601     -2 76060 6 06060    06602     -2 76060 6 06060    06603     -2 76060 6 06060   
 06604     -2 76060 6 06060    06605     -2 76060 6 06060    06606     -2 76060 6 06060    06607     -2 76060 6 06060   
 06610     -2 76060 6 06060                                                                                             
                 D'N B1(432),B2(432),B3(432)                                        285  LM00367
                 D'N CARD(13)                                                       286  LM00368
                 V'S OUT=$  STAT  FILE$                                             287  LM00370
 06235     -2 06026 3 14325    06236     -2 06062 6 32163                                                               
                 V'S SEARCH=$SEARCH$                                                288  LM00371
 06377     -2 22521 5 12330                                                                                             
                 V'S FL=$  FILE$                                                    289  LM00372
 04332     -2 06026 3 14325                                                                                             
                 V'S M1=77777K                                                      290  LM00374
 04553     +0 00000 0 77777                                                                                             
                 V'S M2=77776K                                                      291  LM00375
 04554     +0 00000 0 77776                                                                                             
                 V'S M3=77775K                                                      292  LM00376
 04555     +0 00000 0 77775                                                                                             
                 V'S M4=77774K                                                      293  LM00377
 04556     +0 00000 0 77774                                                                                             
                 V'S M5=77773K                                                      294  LM00378
 04557     +0 00000 0 77773                                                                                             
                 V'S HEAD=$H'1        M A S S A C H U S E T T S   I N S T I',       295  LM00382
                1H' T U T E   O F   T E C H N O L O G Y',/,/,                       295  LM00383
                211X,H'      I N F O R M A T I O N   P R O C E S S I N G ',         295  LM00384
                3H'  C E N T E R'*$                                                 295  LM00385
 04507     -2 05114 5 46060    04510     -2 04560 6 36025    04511     +1 46060 2 36025    04512     +1 47360 6 06030   
 04513     +3 16045 6 02760    04514     +2 56062 6 06260    04515     -1 16046 6 02360    04516     -0 56060 6 04760   
 04517     -2 36031 6 04660    04520     -1 16044 6 02160    04521     -0 56026 6 04660    04522     -2 06060 6 03160   
 04523     -2 77330 1 46060    04524     -2 06060 6 00101    04525     -2 06060 6 06060    04526     -2 06060 6 06060   
 04527     -3 36173 6 17360    04530     -0 66027 6 07014    04531     -0 56046 6 04360    04532     +2 56023 6 03060   
 04533     +2 66060 6 06360    04534     +2 56060 6 04660    04535     -2 36064 6 06360    04536     +1 47360 3 01460   
 04537     -2 06260 6 36031    04540     -2 06060 3 16045    04541     -2 06360 6 36062    04542     -2 06460 6 26025   
 04543     -2 02160 2 36030    04544     -2 02160 6 26062    04545     -2 06060 6 06044    04546     +3 01401 6 06060   
                 V'S SYSHED=$1H0,30X,H'(EXCLUDING SYSTEM FILES)'*$                  296  LM00387
 06402     -0 32562 3 41454    06403     -2 32544 6 02631    06404     -0 52760 6 27062    06405     -2 72343 6 42431   
 06406     -2 77330 1 47425    06407     +0 13000 7 30300                                                               
                 V'S F0 = $1H0,S8,H'SECONDARY STORAGE USAGE SUMMARY PREPARED'       297  LM00389
                1, S2,C6,S2,C3,2H, C3,I3,4H, 19,I2,H'   SYSTEM ',C6*$               297  LM00390
 04060     -2 01473 2 30654    04061     -2 27062 6 32544    04062     -3 33014 6 06060    04063     -2 00111 7 33102   
 04064     +3 10373 0 43073    04065     +3 07360 2 30373    04066     +0 27323 0 37302    04067     +0 27323 0 67362   
 04070     +2 41460 7 36062    04071     -1 12547 2 15125    04072     -0 42151 7 06047    04073     +2 72560 6 26444   
 04074     +2 72560 6 46221    04075     -2 06263 4 65121    04076     -0 64524 2 15170    04077     -3 33014 6 22523   
 04100     +0 13000 7 36210                                                                                             
                 V'S F1= $1H0,S18,H'FILES   RECORDS',S27,H'MEAN   STD DEV.',/,      298  LM00392
                11H0,S8,H'DISK ',I10,I10,S7,H'FILES/UFD      ',2F10.3,/,            298  LM00393
                21H0,S8,H'UFD  ',I10,S10,S7,H'RECS/UFD       ',2F10.3,/,            298  LM00394
                31H0,S8,H'LINKS',I10,S10,S7,H'LINKS/UFD      ',2F10.3,/,            298  LM00395
                41H0,S40,                   H'FILE LENGTH    ',2F10.3,/,            298  LM00396
                51H0,S40,                   H'FILE AGE (DAYS)',2F10.3*$             298  LM00397
 04114     -1 46060 6 06060    04115     +0 22601 0 03303    04116     +2 17062 3 41473    04117     +2 12725 6 07424   
 04120     +1 42631 4 32560    04121     -2 06060 6 06030    04122     -2 06060 6 06060    04123     -2 06060 6 06060   
 04124     -2 20400 7 36060    04125     -2 06001 3 00073    04126     -2 17360 6 06060    04127     +2 60100 3 30373   
 04130     -2 06060 1 47302    04131     +2 54527 6 33060    04132     +2 63143 2 56043    04133     -2 06060 6 03014   
 04134     -2 06060 6 06060    04135     -2 06060 6 06060    04136     +0 40073 6 06060    04137     -2 00130 0 07362   
 04140     -3 36060 6 06060    04141     +0 10033 0 37361    04142     -2 06014 7 30226    04143     +2 62460 6 06060   
 04144     +3 14542 6 26164    04145     -2 20773 3 01443    04146     +0 07362 0 10073    04147     -0 26214 7 33101   
 04150     -3 33014 4 33145    04151     +0 13000 7 36210    04152     -2 06060 6 06060    04153     +0 03303 7 36173   
 04154     -2 01473 0 22601    04155     -2 06060 6 06060    04156     +2 36261 6 42624    04157     +0 77330 1 45125   
 04160     -3 36201 0 07362    04161     -2 01473 3 10100    04162     +3 01464 2 62460    04163     +3 00073 6 21073   
 04164     -2 06060 6 06001    04165     +3 30373 6 17360    04166     +1 47302 2 60100    04167     -2 06060 6 06060   
 04170     +2 56261 6 42624    04171     -3 33014 2 63143    04172     +3 10100 7 36207    04173     +1 47331 0 10073   
 04174     +1 42431 6 24260    04175     +0 07362 1 07330    04176     +1 47361 7 30130    04177     +2 46024 2 56533   
 04200     -0 56060 6 06263    04201     -3 33014 4 42521    04202     -2 21473 6 20207    04203     -1 12523 4 65124   
 04204     -0 32562 6 06060    04205     +1 07330 1 42631    04206     +0 13000 7 36201                                 
                 V'S F3 = $1H-,S8,H'CAPACITY',I9,H', USED',I9,                      299  LM00399
                1 H', LEFT',I9,H', WASTE',F7.3,H' PER CENT.'*$                      299  LM00400
 04207     -0 56333 1 45460    04210     -0 72551 6 02325    04211     +3 30373 3 01460    04212     -2 32514 7 32607   
 04213     +1 47360 6 62162    04214     +1 47331 1 17330    04215     -3 36043 2 52663    04216     -2 06060 6 03014   
 04217     -2 06060 6 06060    04220     -2 06060 6 06060    04221     +1 47331 1 17360    04222     -3 36064 6 22524   
 04223     -3 33111 7 33014    04224     +2 12331 6 37014    04225     -3 33014 2 32147    04226     +0 13040 7 36210   
                 V'S F4 = $1H-,S8,H'SUMMARY BY MODE BIT',//,S9,                     300  LM00402
                1H'MODE    FILES     RECS ',/*$                                     300  LM00403
 04231     -2 15460 6 06060    04232     +2 52362 6 01473    04233     -2 06060 6 06051    04234     -2 02631 4 32562   
 04235     -0 62425 6 06060    04236     -2 06060 3 01444    04237     -2 06060 6 06060    04240     -2 06060 6 06060   
 04241     -2 16173 6 21173    04242     -2 02231 6 31473    04243     -3 06044 4 62425    04244     -0 42151 7 06022   
 04245     -3 33014 6 26444    04246     +0 13040 7 36210                                                               
                 V'S F4A = $S10,CR3,2I9*$                                           301  LM00405
 04227     +0 37302 3 11154    04230     -2 20100 7 32351                                                               
                 V'S F5 = $1H0,S8,H'SUMMARY BY DATE OF LAST REFERENCE TO FILE'      302  LM00407
                1*$                                                                 302  LM00408
 04262     -0 32514 5 46060    04263     -2 06346 6 02631    04264     +2 55125 4 52325    04265     -2 26360 5 12526   
 04266     -2 04626 6 04321    04267     -3 06024 2 16325    04270     -0 42151 7 06022    04271     -3 33014 6 26444   
 04272     +0 13000 7 36210                                                                                             
                 V'S F5A =                                                          303  LM00410
                1$H'0     AGE   FILES  OLDER  RECS   OLDER     LINEAR PLOT'         303  LM00411
                2,//*$                                                              303  LM00412
 04247     -3 36161 5 46060    04250     -0 66314 6 06060    04251     +2 52151 6 04743    04252     -2 06060 4 33145   
 04253     -0 32425 5 16060    04254     +2 36260 6 06046    04255     +2 55160 6 05125    04256     -2 26060 4 64324   
 04257     -2 06026 3 14325    04260     -2 06021 2 72560    04261     +3 01400 6 06060                                 
                 V'S F6 = $1H0,S8,H'SUMMARY BY DATE OF CREATION OF FILE'*$          304  LM00414
 04273     -0 32514 5 46060    04274     -2 04626 6 02631    04275     +2 52163 3 14645    04276     -2 04626 6 02351   
 04277     -3 06024 2 16325    04300     -0 42151 7 06022    04301     -3 33014 6 26444    04302     +0 13000 7 36210   
                 V'S F7 = $1H ,C5,I3,S1,4I7,S2,100C1*$                              305  LM00416
 04303     +0 15460 6 06060    04304     +0 27301 0 00023    04305     -3 30431 0 77362    04306     -3 33103 7 36201   
 04307     +0 13060 7 32305                                                                                             
                 V'S F9 = $H'0 DISK USAGE BY CLASS NAME',//,                        306  LM00418
                1H'0      NAME1  NAME2  TYPE  FILES  RECORDS  LINKS',/*$            306  LM00419
 04310     -3 36154 6 06060    04311     -0 33145 4 26214    04312     -0 65124 6 26060    04313     -2 26060 5 12523   
 04314     -2 06026 3 14325    04315     -2 06063 7 04725    04316     -2 04521 4 42502    04317     -0 52144 2 50160   
 04320     -2 06060 6 06060    04321     -2 06060 3 01400    04322     -2 06060 6 06060    04323     -2 06060 6 06060   
 04324     -2 16173 6 06060    04325     -0 52144 2 51473    04326     +2 34321 6 26260    04327     +2 72560 2 27060   
 04330     -2 24260 6 46221    04331     +3 01400 6 02431                                                               
                 V'S F10 = $/,/,/,/15H  SCALE - ONE ',C1,4H' = ,I4,                 307  LM00421
                1 H' RECORDS.'*$                                                    307  LM00422
 04101     -2 23314 5 46060    04102     -1 12523 4 65124    04103     -2 06060 3 01460    04104     -2 06060 6 06060   
 04105     +3 10473 6 06060    04106     +3 01460 1 36073    04107     +1 47323 0 17304    04110     -0 06046 4 52560   
 04111     -2 22321 4 32560    04112     -2 10105 3 06060    04113     -2 17361 7 36173                                 
                 V'S FM1=$S6,C6,S1,C6,S3,I2,3I8*$                                   308  LM00424
 04333     +0 33110 5 46060    04334     -2 20373 3 10273    04335     -2 20173 2 30673    04336     -2 20673 2 30673   
                 V'S FM2=$H'- USAGE BY TYPE            FILES  RECORDS  LINKS'       309  LM00426
                1,/*$                                                               309  LM00427
 04337     -1 46060 6 06060    04340     -0 26214 6 07361    04341     -2 26060 4 33145    04342     -1 12523 4 65124   
 04343     +3 14325 6 26060    04344     -2 06060 6 06026    04345     -2 06060 6 06060    04346     -2 06370 4 72560   
 04347     +2 12725 6 02270    04350     +3 01440 6 06462                                                               
                 E'N                                                                310  LM00429
 10551 TSX +0 07400 4 00013    10552 TXH +3 00000 0 00000    10553 SXD -0 63400 1 10552    10554 SXA +0 63400 4 10577   
 10555 CLA +0 50000 4 00001    10556 STA +0 62100 0 07130    10557 STA +0 62100 0 07136    10560 STA +0 62100 0 07175   
 10561 STA +0 62100 0 07242    10562 CLA +0 50000 4 00002    10563 STA +0 62100 0 07122    10564 STA +0 62100 0 07172   
 10565 STA +0 62100 0 07244    10566 CLA +0 50000 4 00003    10567 STA +0 62100 0 07143    10570 STA +0 62100 0 07145   
 10571 STA +0 62100 0 07152    10572 STA +0 62100 0 07161    10573 STA +0 62100 0 07344    10574 STA +0 62100 0 07520   
 10575 STA +0 62100 0 07576    10576 TRA +0 02000 2 00001    10577 AXT +0 77400 4 00000    10600 LXA +0 53400 2 10552   
 10601 LXD -0 53400 1 10552    10602 TRA +0 02000 4 00001                                                               
1        FSTAT - CALLING  PROGRAM FOR ALSTAT PROGRAMS                            02/09/69  658.9 PAGE 1     
                  
                              *     
                              * RECONSTRUCTED FROM FSTAT BSS BY ROGER ROACH 6/7/67  
                              *     
                                     EXTERN  FINIT,COUNTR,FPRINT  
                  
        TRANSFER VECTOR 
      00000  263145316360     FINIT 
      00001  234664456351     COUNTR
      00002  264751314563     FPRINT
                  
      00003  0074 00 4 00153         TSX     ATTNAM,4 
      00004  3 00002 0 00140         PTH     HOME,,2  
      00005  0074 00 4 00161         TSX     SETBRK,4 
      00006  3 00000 0 00131         PTH     INTERP   
      00007  0074 00 4 00000         TSX     FINIT,4       INITIALIZE SUB PROGRAMS  
      00010  0074 00 4 00154         TSX     ATTACH,4      GO TO MFD    
      00011  3 00000 0 00136         PTH     MFD
      00012  3 00000 0 00137         PTH     FILE     
      00013  0074 00 4 00152         TSX     FSTATE,4 
      00014  3 00000 0 00136         PTH     MFD
      00015  3 00000 0 00137         PTH     FILE     
      00016  3 00001 0 00144         PTH     LEN,,1        GET LENGTH OF MFD  
      00017  0500 00 0 00144         CLA     LEN
      00020  0402 00 0 00164         SUB     =25           BYPASS USAGE TABLE AND DSKEDT FILE   
      00021  0601 00 0 00144         STO     LEN
      00022  0734 00 4 00000         PAX     ,4 
      00023 -0636 00 4 00127         SCD     TST1,4   
      00024  0074 00 4 00157         TSX     GETMEM,4 
      00025  0621 00 0 00052         STA     LOC1          BEGINNING OF MFD FILE    
      00026  0621 00 0 00057         STA     LOC2     
      00027  0361 00 0 00144         ACL     LEN           EXTEND FOR LENGTH OF MFD FILE  
      00030  0621 00 0 00076         STA     LOC4          BOTTOM OF MFD FILE 
      00031  0621 00 0 00145         STA     LEN2          FIRST LOC OF FREE LOCATIONS    
      00032  0621 00 0 00114         STA     ZETTST        USED IN TESTS
      00033  0361 00 0 00162         ACL     =1            GET NEXT LOCATION  
      00034  0621 00 0 00116         STA     ZETST2        FOR TEST OF LOC+1  
                              *     
      00035 -0500 00 0 00057         CAL     LOC2     
      00036  0361 00 0 00162         ACL     =1 
      00037  0621 00 0 00062         STA     LOC3     
      00040 -0500 00 0 00165         CAL     =O77777       WANT ALL OF CORE   
      00041  0074 00 4 00160         TSX     SETMEM,4 
      00042  0074 00 4 00147         TSX     OPEN,4        READ IN THE MFD    
      00043  3 00000 0 00177         PTH     =HR
      00044  3 00000 0 00136         PTH     MFD
      00045  3 00000 0 00137         PTH     FILE     
      00046  0074 00 4 00150         TSX     RDFILE,4 
      00047  3 00000 0 00136         PTH     MFD
      00050  3 00000 0 00137         PTH     FILE     
      00051  3 00000 0 00164         PTH     =25
      00052  2 00144 0 00000  LOC1   PTW     **,,LEN  
      00053  0074 00 4 00151         TSX     CLOSE,4  
      00054  3 00000 0 00136         PTH     MFD
      00055  3 00000 0 00137         PTH     FILE     
                              *     
1        FSTAT - CALLING  PROGRAM FOR ALSTAT PROGRAMS                            02/09/69  658.9 PAGE 2     
                  
      00056 -0774 00 1 00000         AXC     0,1           PLACE -1 IN XR1    
      00057 -0500 00 1 00000  LOC2   CAL     **,1          GET FIRST WORD IN ENTRY  
      00060  0100 00 0 00125         TZE     OVER          BYPASS IF 0  
      00061  0602 00 0 00142         SLW     NAME1    
      00062 -0500 00 1 00000  LOC3   CAL     **,1     
      00063  0100 00 0 00125         TZE     OVER     
      00064  0602 00 0 00143         SLW     NAME2    
1        FSTAT - CALLING  PROGRAM FOR ALSTAT PROGRAMS                            02/09/69  658.9 PAGE 3     
                  
      00065  0074 00 4 00147         TSX     OPEN,4        READ IN THE UFD    
      00066  3 00000 0 00177         PTH     =HR
      00067  3 00000 0 00142         PTH     NAME1    
      00070  3 00000 0 00143         PTH     NAME2    
      00071  3 00000 0 00125         PTH     OVER     
      00072  0074 00 4 00150         TSX     RDFILE,4 
      00073  3 00000 0 00142         PTH     NAME1    
      00074  3 00000 0 00143         PTH     NAME2    
      00075  3 00000 0 00163         PTH     =4            BYPASS POINTERS    
      00076  3 23420 0 00000  LOC4   PTH     **,,10000
      00077  3 00000 0 00102         PTH     *+3
      00100  3 00000 0 00146         PTH     EOFCT    
      00101  0020 00 0 00125         TRA     OVER          SHOULDN'T HIT EOF  
      00102  0534 00 4 00146         LXA     EOFCT,4  
      00103 -3 00000 4 00125         TXL     OVER,4,0      ZERO LENGTH FILE DIRECTORY     
      00104 -0636 00 4 00124         SCD     OVER-1,4      SAVE -LENGTH OF FILE DIRECTORY 
      00105  0074 00 4 00151         TSX     CLOSE,4  
      00106  3 00000 0 00142         PTH     NAME1    
      00107  3 00000 0 00143         PTH     NAME2    
1        FSTAT - CALLING  PROGRAM FOR ALSTAT PROGRAMS                            02/09/69  658.9 PAGE 4     
                  
      00110 -0774 00 2 00000         AXC     0,2           -1 INTO XR2  
      00111  0756 00 2 00000  LOOP   PCA     ,2 
      00112  0361 00 0 00145         ACL     LEN2     
      00113  0621 00 0 00122         STA     LOC5     
      00114  0520 00 2 00000  ZETTST ZET     **,2     
      00115  0020 00 0 00117         TRA     *+2
      00116  0520 00 2 00000  ZETST2 ZET     **,2     
      00117  0074 00 4 00001         TSX     COUNTR,4      A VALUE IS NON-ZERO
      00120  3 00000 0 00142         PTH     NAME1    
      00121  3 00000 0 00143         PTH     NAME2    
      00122  3 00000 0 00000  LOC5   PTH     ** 
      00123  1 77771 2 00124         TXI     *+1,2,-7 
      00124  3 00000 2 00111         TXH     LOOP,2,**
      00125  0074 00 4 00156  OVER   TSX     RESETF,4 
      00126  1 77771 1 00127         TXI     *+1,1,-7      GO TO NEXT UFD IN MFD    
      00127  3 00000 1 00057  TST1   TXH     LOC2,1,**
      00130  0074 00 4 00002         TSX     FPRINT,4 
      00131  0074 00 4 00154  INTERP TSX     ATTACH,4 
      00132  3 00000 0 00140         PTH     HOME     
      00133  3 00000 0 00141         PTH     HOME+1   
      00134  0074 00 4 00155         TSX     CHNCOM,4 
      00135  3 00000 0 00000         PTH     0  
                              *     
                              *     
      00136  443326332433     MFD    BCI     1,M.F.D. 
      00137  742631432534     FILE   BCI     1,(FILE) 
      00140                   HOME   BSS     2  
      00142  0 00000 0 00000  NAME1 
      00143  0 00000 0 00000  NAME2 
      00144  0 00000 0 00000  LEN   
      00145  0 00000 0 00000  LEN2  
      00146  0 00000 0 00000  EOFCT 
      00147  0101 00 0 00174  OPEN   TIA     =HOPEN   
      00150  0101 00 0 00175  RDFILE TIA     =HRDFILE 
      00151  0101 00 0 00171  CLOSE  TIA     =HCLOSE  
      00152  0101 00 0 00172  FSTATE TIA     =HFSTATE 
      00153  0101 00 0 00167  ATTNAM TIA     =HATTNAM 
      00154  0101 00 0 00166  ATTACH TIA     =HATTACH 
      00155  0101 00 0 00170  CHNCOM TIA     =HCHNCOM 
      00156  0101 00 0 00176  RESETF TIA     =HRESETF 
      00157  0101 00 0 00173  GETMEM TIA     =HGETMEM 
      00160  0101 00 0 00201  SETMEM TIA     =HSETMEM 
      00161  0101 00 0 00200  SETBRK TIA     =HSETBRK 
                                     END  
                  
        LITERALS  
      00162  000000000001     
      00163  000000000004     
      00164  000000000031     
      00165  000000077777     
      00166  216363212330     
      00167  216363452144     
      00170  233045234644     
      00171  234346622560     
      00172  266263216325     
      00173  272563442544     
1        FSTAT - CALLING  PROGRAM FOR ALSTAT PROGRAMS                            02/09/69  658.9 PAGE 5     
                  
      00174  464725456060     
      00175  512426314325     
      00176  512562256326     
      00177  516060606060     
      00200  622563225142     
      00201  622563442544     
1        FSTAT - CALLING  PROGRAM FOR ALSTAT PROGRAMS                            02/09/69  658.9 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        202 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        144    LEN    16,   17,   21,   27,   52
        136    MFD    11,   14,   44,   47,   54
        137   FILE    12,   15,   45,   50,   55
        140   HOME     4,  132,  133
        145   LEN2    31,  112
         52   LOC1    25
         57   LOC2    26,   35,  127
         62   LOC3    37
         76   LOC4    30
        122   LOC5   113
        111   LOOP   124
        147   OPEN    42,   65
        125   OVER    60,   63,   71,  101,  103,  104
        127   TST1    23
        151  CLOSE    53,  105
        146  EOFCT   100,  102
          0  FINIT     7
        142  NAME1    61,   67,   73,  106,  120
        143  NAME2    64,   70,   74,  107,  121
        154 ATTACH    10,  131
        153 ATTNAM     3
        155 CHNCOM   134
          1 COUNTR   117
          2 FPRINT   130
        152 FSTATE    13
        157 GETMEM    24
        131 INTERP     6
        150 RDFILE    46,   72
        156 RESETF   125
        161 SETBRK     5
        160 SETMEM    41
        116 ZETST2    34
        114 ZETTST    32
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1     MAD PROGRAM LISTING ... ... ...                 FILE  FPRINT   MAD            02/09/69    0656.8
-                 
                  EXTERNAL FUNCTION                                                               *001 LM00001    
                                                                                                       LM00002    
                  NORMAL MODE IS INTEGER                                                          *002 LM00003    
                                                                                                       LM00004    
                  VECTOR VALUES TOTAL = $/H'TOTAL FILES = 'I6,/H'TOTAL RECORDS = 'I6//*$          *003 LM00005    
                  VECTOR VALUES MOD = $I2,H' MOD'I2,H' = 'I6*$                                    *004 LM00006    
                  VECTOR VALUES USED = $I3,H' = 'I6,S5,'AMT'(1HX)*$                               *005 LM00007    
                  VECTOR VALUES GOP = $H'PERCENTAGE WASTE = ',2PF6.2*$                            *006 LM00008    
                  FORMAT VARIABLE AMT                                                             *007 LM00009    
                  FLOATING POINT FAMT, PCNT, WASTE, LOG.                                          *008 LM00010    
                                                                                                       LM00011    
                                                                                                       LM00012    
                  PROGRAM COMMON MODTBL (3), STATBL (78), TFILS, TRECS                            *009 LM00013    
                                                                                                       LM00014    
                                                                                                       LM00015    
                  ENTRY TO FPRINT.                                                                *010 LM00016    
                                                                                                       LM00017    
                  PRINT FORMAT TOTAL, TFILS, TRECS                                                *011 LM00018    
                                                                                                       LM00019    
                  THROUGH LOOP2, FOR VALUES OF I = 0, 1                                           *012 LM00020    
                  PRINT FORMAT MOD, I, 2, MODTBL (I) + MODTBL (I + 2)                             *013 LM00021    
      LOOP2       CONTINUE                                                                        *014 LM00022    
                                                                                                       LM00023    
                  WASTE = MODTBL (1) + MODTBL (3)                                                 *015 LM00024    
                  PCNT = WASTE / (WASTE + TRECS)                                                  *016 LM00025    
                  PRINT FORMAT GOP, PCNT                                                          *017 LM00026    
                  WASTE = 0.0                                                                     *018 LM00027    
                                                                                                       LM00028    
                  PRINT FORMAT $//*$                                                              *019 LM00029    
                                                                                                       LM00030    
                  THROUGH LOOP4, FOR I = 0, 1, I .GE. 4                                           *020 LM00031    
                  PRINT FORMAT MOD, I, 4, MODTBL (I)                                              *021 LM00032    
                  WHENEVER I .NE. 0, WASTE = WASTE + MODTBL (I) * (4 - I)                         *022 LM00033    
      LOOP4       CONTINUE                                                                        *023 LM00034    
                                                                                                       LM00035    
                  PCNT = WASTE / (WASTE + TRECS)                                                  *024 LM00036    
                  PRINT FORMAT GOP, PCNT                                                          *025 LM00037    
                                                                                                       LM00038    
                  PRINT FORMAT $//*$                                                              *026 LM00039    
                                                                                                       LM00040    
                  THROUGH SLOOP, FOR I = 0, 1, I .G. 78                                           *027 LM00041    
                  FAMT = STATBL (I)                                                               *028 LM00042    
                  AMT = 0                                                                         *029 LM00043    
                  WHENEVER STATBL (I) .NE. 0, AMT = 5.0 * LOG. (FAMT)                             *030 LM00044    
                  PRINT FORMAT USED,  I, STATBL (I)                                               *031 LM00045    
      SLOOP       CONTINUE                                                                        *032 LM00046    
                                                                                                       LM00047    
                                                                                                       LM00048    
                  FUNCTION RETURN                                                                 *033 LM00049    
                                                                                                       LM00050    
                                                                                                       LM00051    
                  END OF FUNCTION                                                                 *034 LM00052    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00307 TRANSFER VECTOR LENGTH  00003 PROGRAM BEGINS    00047 FIRST UNUSED COMMON/ERASABLE  77334
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      FPRINT 00050   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      AMT    00004   1        LOOP2  00003   4        MODTBL 77461 AC1        STATBL 77455 AC1        TRECS  77335  C1  
      FAMT   00005   0        LOOP4  00003   4        PCNT   00020   0        TFILS  77336  C1        USED   00035 A 1  
      GOP    00012 A 1        MOD    00017 A 1        SLOOP  00003   4        TOTAL  00030 A 1        WASTE  00036   0  
      I      00013   1                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1        .PRINT 00001   1        LOG    00002   0                                                  
0ABSOLUTE CONSTANTS     
 00044 +203500000000     00043 +000000000116     00042 +000000000004     00046 -216154606060     00041 +000000000002    
 00037 +000000000000     00040 +000000000001     00045 +233000000000                                                    
0PROGRAM    
                 EXTERNAL FUNCTION                                                  001  LM00001
                 N'R                                                                002  LM00003
                 V'S TOTAL = $/H'TOTAL FILES = 'I6,/H'TOTAL RECORDS = 'I6//*$       003  LM00005
 00021     +0 66161 5 46060    00022     -2 26013 6 01431    00023     -1 12523 4 65124    00024     -2 34663 2 14360   
 00025     +3 10673 6 13014    00026     +2 56260 1 36014    00027     +2 14360 2 63143    00030     -2 13014 6 34663   
                 V'S MOD = $I2,H' MOD'I2,H' = 'I6*$                                 004  LM00006
 00014     +1 43106 5 46060    00015     -3 33014 6 01360    00016     -0 44624 1 43102    00017     +3 10273 3 01460   
                 V'S USED = $I3,H' = 'I6,S5,'AMT'(1HX)*$                            005  LM00007
 00031     +3 45460 6 06060    00032     -2 31474 0 13067    00033     -2 20573 1 42144    00034     +1 36014 3 10673   
 00035     +3 10373 3 01460                                                                                             
                 V'S GOP = $H'PERCENTAGE WASTE = ',2PF6.2*$                         006  LM00008
 00006     -0 72606 3 30254    00007     -2 01360 1 47302    00010     -2 06621 6 26325    00011     +2 54563 2 12725   
 00012     +3 01447 2 55123                                                                                             
                 FORMAT VARIABLE AMT                                                007  LM00009
                 F'T FAMT, PCNT, WASTE, LOG.                                        008  LM00010
                 P'N MODTBL (3), STATBL (78), TFILS, TRECS                          009  LM00013
                 E'O FPRINT.                                                        010  LM00016
 00047 TRA +0 02000 0 00052    00050 SXA +0 63400 2 00272    00051 TSX +0 07400 2 00272                                 
                 P'T TOTAL, TFILS, TRECS                                            011  LM00018
 00052 TSX +0 07400 4 00001    00053 STR -1 00030 1 00305    00054 STR -1 00000 0 77336    00055 STR -1 00000 0 77335   
 00056 STR -1 00000 0 00000                                                                                             
                 T'H LOOP2, FOR VALUES OF I = 0, 1                                  012  LM00020
 00057 CLA +0 50000 0 00037    00060 STO +0 60100 0 00013    00061 CLA +0 50000 0 00064    00062 STO +0 60100 0 00073   
 00063 TRA +0 02000 0 00074    00064 TRA +0 02000 0 00065    00065 CLA +0 50000 0 00040    00066 STO +0 60100 0 00013   
 00067 CLA +0 50000 0 00072    00070 STO +0 60100 0 00073    00071 TRA +0 02000 0 00074    00072 TRA +0 02000 0 00112   
 00073 TRA +0 02000 0 00073                                                                                             
                 P'T MOD, I, 2, MODTBL (I) + MODTBL (I + 2)                         013  LM00021
 00074 TSX +0 07400 4 00001    00075 STR -1 00017 1 00305    00076 STR -1 00000 0 00013    00077 STR -1 00000 0 00041   
 00100 CLA +0 50000 0 00013    00101 ADD +0 40000 0 00041    00102 LXA +0 53400 1 00013    00103 PAX +0 73400 2 00000   
 00104 CLA +0 50000 1 77461    00105 ADD +0 40000 2 77461    00106 STO +0 60100 0 00302    00107 STR -1 00000 0 00302   
 00110 STR -1 00000 0 00000                                                                                             
      LOOP2      C'E                                                                014  LM00022
 00111 TRA +0 02000 0 00073                                                                                             
                 WASTE = MODTBL (1) + MODTBL (3)                                    015  LM00024
 00112 CLA +0 50000 0 77460    00113 ADD +0 40000 0 77456    00114 ORA -0 50100 0 00045    00115 FAD +0 30000 0 00045   
 00116 STO +0 60100 0 00036                                                                                             
                 PCNT = WASTE / (WASTE + TRECS)                                     016  LM00025
 00117 CLA +0 50000 0 77335    00120 ORA -0 50100 0 00045    00121 FAD +0 30000 0 00045    00122 FAD +0 30000 0 00036   
 00123 STO +0 60100 0 00302    00124 CLA +0 50000 0 00036    00125 FDP +0 24100 0 00302    00126 STQ -0 60000 0 00020   
                 P'T GOP, PCNT                                                      017  LM00026
 00127 TSX +0 07400 4 00001    00130 STR -1 00012 1 00305    00131 STR -1 00000 0 00020    00132 STR -1 00000 0 00000   
                 WASTE = 0.0                                                        018  LM00027
 00133 CLA +0 50000 0 00037    00134 STO +0 60100 0 00036                                                               
                 P'T $//*$                                                          019  LM00029
 00135 TSX +0 07400 4 00001    00136 STR -1 00046 1 00305    00137 STR -1 00000 0 00000                                 
                 T'H LOOP4, FOR I = 0, 1, I .GE. 4                                  020  LM00031
 00140 CLA +0 50000 0 00037    00141 STO +0 60100 0 00013    00142 TRA +0 02000 0 00146    00143 CLA +0 50000 0 00013   
 00144 ADD +0 40000 0 00040    00145 STO +0 60100 0 00013    00146 CLA +0 50000 0 00013    00147 SUB +0 40200 0 00042   
 00150 TZE +0 10000 0 00202    00151 TPL +0 12000 0 00202                                                               
                 P'T MOD, I, 4, MODTBL (I)                                          021  LM00032
 00152 TSX +0 07400 4 00001    00153 STR -1 00017 1 00305    00154 STR -1 00000 0 00013    00155 STR -1 00000 0 00042   
 00156 CLA +0 50000 0 00013    00157 SUB +0 40200 0 00160    00160 TXH +3 00000 0 77461    00161 STA +0 62100 0 00162   
 00162 STR -1 00000 0 00000    00163 STR -1 00000 0 00000                                                               
                 W'R I .NE. 0, WASTE = WASTE + MODTBL (I) * (4 - I)                 022  LM00033
 00164 CLA +0 50000 0 00013    00165 SUB +0 40200 0 00037    00166 TZE +0 10000 0 00201    00167 CLA +0 50000 0 00042   
 00170 SUB +0 40200 0 00013    00171 LXA +0 53400 1 00013    00172 XCA +0 13100 0 00000    00173 MPY +0 20000 1 77461   
 00174 XCA +0 13100 0 00000    00175 ORA -0 50100 0 00045    00176 FAD +0 30000 0 00045    00177 FAD +0 30000 0 00036   
 00200 STO +0 60100 0 00036                                                                                             
      LOOP4      C'E                                                                023  LM00034
 00201 TRA +0 02000 0 00143                                                                                             
                 PCNT = WASTE / (WASTE + TRECS)                                     024  LM00036
 00202 CLA +0 50000 0 77335    00203 ORA -0 50100 0 00045    00204 FAD +0 30000 0 00045    00205 FAD +0 30000 0 00036   
 00206 STO +0 60100 0 00302    00207 CLA +0 50000 0 00036    00210 FDP +0 24100 0 00302    00211 STQ -0 60000 0 00020   
                 P'T GOP, PCNT                                                      025  LM00037
 00212 TSX +0 07400 4 00001    00213 STR -1 00012 1 00305    00214 STR -1 00000 0 00020    00215 STR -1 00000 0 00000   
                 P'T $//*$                                                          026  LM00039
 00216 TSX +0 07400 4 00001    00217 STR -1 00046 1 00305    00220 STR -1 00000 0 00000                                 
                 T'H SLOOP, FOR I = 0, 1, I .G. 78                                  027  LM00041
 00221 CLA +0 50000 0 00037    00222 STO +0 60100 0 00013    00223 TRA +0 02000 0 00227    00224 CLA +0 50000 0 00013   
 00225 ADD +0 40000 0 00040    00226 STO +0 60100 0 00013    00227 CLA +0 50000 0 00013    00230 SUB +0 40200 0 00043   
 00231 TZE +0 10000 0 00233    00232 TPL +0 12000 0 00270                                                               
                 FAMT = STATBL (I)                                                  028  LM00042
 00233 LXA +0 53400 2 00013    00234 CLA +0 50000 2 77455    00235 ORA -0 50100 0 00045    00236 FAD +0 30000 0 00045   
 00237 STO +0 60100 0 00005                                                                                             
                 AMT = 0                                                            029  LM00043
 00240 CLA +0 50000 0 00037    00241 STO +0 60100 0 00004                                                               
                 W'R STATBL (I) .NE. 0, AMT = 5.0 * LOG. (FAMT)                     030  LM00044
 00242 LXA +0 53400 1 00013    00243 CLA +0 50000 1 77455    00244 SUB +0 40200 0 00037    00245 TZE +0 10000 0 00256   
 00246 TSX +0 07400 4 00002    00247 TXH +3 00000 0 00005    00250 XCA +0 13100 0 00000    00251 FMP +0 26000 0 00044   
 00252 UFA -0 30000 0 00045    00253 ERA +0 32200 0 00045    00254 LLS +0 76300 0 00000    00255 STO +0 60100 0 00004   
                 P'T USED,  I, STATBL (I)                                           031  LM00045
 00256 TSX +0 07400 4 00001    00257 STR -1 00035 1 00305    00260 STR -1 00000 0 00013    00261 CLA +0 50000 0 00013   
 00262 SUB +0 40200 0 00263    00263 TXH +3 00000 0 77455    00264 STA +0 62100 0 00265    00265 STR -1 00000 0 00000   
 00266 STR -1 00000 0 00000                                                                                             
      SLOOP      C'E                                                                032  LM00046
 00267 TRA +0 02000 0 00224                                                                                             
                 F'N                                                                033  LM00049
 00270 TRA +0 02000 0 00276                                                                                             
                 E'N                                                                034  LM00052
 00271 TSX +0 07400 4 00000    00272 TXH +3 00000 0 00000    00273 SXD -0 63400 1 00272    00274 SXA +0 63400 4 00276   
 00275 TRA +0 02000 2 00001    00276 AXT +0 77400 4 00000    00277 LXA +0 53400 2 00272    00300 LXD -0 53400 1 00272   
 00301 TRA +0 02000 4 00001                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  COUNTR   MAD            02/09/69    0656.9
-                 
                  EXTERNAL FUNCTION ( PROBN, PROGN, BUFF )                                        *001 LM00001    
                                                                                                       LM00002    
                                                                                                       LM00003    
                  PROGRAM COMMON MODTBL (3), STATBL (78), TFILS, TRECS                            *002 LM00004    
                  NORMAL MODE IS INTEGER                                                          *003 LM00005    
                  VECTOR VALUES M1 = 77777K                                                       *004 LM00006    
                  VECTOR VALUES M4 = 77774 K                                                      *005 LM00007    
                  VECTOR VALUES M5 = 77773 K                                                      *006 LM00008    
                                                                                                       LM00009    
                  VECTOR VALUES EXC = $4(C6,S2),I6*$                                              *007 LM00010    
                                                                                                       LM00011    
                                                                                                       LM00012    
                  ENTRY TO COUNTR.                                                                *008 LM00013    
                                                                                                       LM00014    
                  F = (BUFF (M4) .RS. 15) .A. 7K                                                  *009 LM00015    
                                                                                                       LM00016    
                  WHENEVER F .E. 2                                                                *010 LM00017    
                                                                                                       LM00018    
                  NRECS =  (BUFF (M5) .RS. 18 ) .A. M1                                            *011 LM00019    
                       QUART = NRECS .RS. 2                                                       *012 LM00020    
                       MOD = NRECS - (QUART .LS. 2)                                               *013 LM00021    
                       MODTBL (MOD) = MODTBL (MOD) + 1                                            *014 LM00022    
                                                                                                       LM00023    
                       WHENEVER NRECS .L. 78                                                      *015 LM00024    
                            STAT = NRECS                                                          *016 LM00025    
                       OTHERWISE                                                                  *017 LM00026    
                            STAT = 78                                                             *018 LM00027    
                            PRINT FORMAT EXC, PROBN, PROGN, BUFF , BUFF (M1), NRECS               *019 LM00028    
                       END OF CONDITIONAL                                                         *020 LM00029    
                                                                                                       LM00030    
                       STATBL (STAT) = STATBL (STAT) + 1                                          *021 LM00031    
                                                                                                       LM00032    
                       TRECS = TRECS + NRECS                                                      *022 LM00033    
                       TFILS = TFILS + 1                                                          *023 LM00034    
                                                                                                       LM00035    
                  END OF CONDITIONAL                                                              *024 LM00036    
                                                                                                       LM00037    
                                                                                                       LM00038    
                  FUNCTION RETURN                                                                 *025 LM00039    
                                                                                                       LM00040    
                  END OF FUNCTION                                                                 *026 LM00041    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00156 TRANSFER VECTOR LENGTH  00002 PROGRAM BEGINS    00024 FIRST UNUSED COMMON/ERASABLE  77334
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      COUNTR 00025   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      EXC    00004 A 1        M4     00007 A 1        MODTBL 77461 AC1        STATBL 77455 AC1        TFILS  77336  C1  
      F      00005   1        M5     00010 A 1        NRECS  00012   1        STAT   00014   1        TRECS  77335  C1  
      M1     00006 A 1        MOD    00011   1        QUART  00013   1                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1        .PRINT 00001   1                                                                          
0ABSOLUTE CONSTANTS     
 00022 +000000000116     00021 +000000000022     00016 +000000000002     00017 +000000000007     00020 +000000000017    
 00015 +000000000001     00023 +233000000000                                                                            
0PROGRAM    
                 EXTERNAL FUNCTION ( PROBN, PROGN, BUFF )                           001  LM00001
                 P'N MODTBL (3), STATBL (78), TFILS, TRECS                          002  LM00004
                 N'R                                                                003  LM00005
                 V'S M1 = 77777K                                                    004  LM00006
 00006     +0 00000 0 77777                                                                                             
                 V'S M4 = 77774 K                                                   005  LM00007
 00007     +0 00000 0 77774                                                                                             
                 V'S M5 = 77773 K                                                   006  LM00008
 00010     +0 00000 0 77773                                                                                             
                 V'S EXC = $4(C6,S2),I6*$                                           007  LM00010
 00003     +0 23473 3 10654    00004     +0 47423 0 67362                                                               
                 E'O COUNTR.                                                        008  LM00013
 00024 TRA +0 02000 0 00027    00025 SXA +0 63400 2 00132    00026 TSX +0 07400 2 00132                                 
                 F = (BUFF (M4) .RS. 15) .A. 7K                                     009  LM00015
 00027 LXA +0 53400 1 00007    00030 CAL -0 50000 0 00020    00031 STA +0 62100 0 00033    00032 CAL -0 50000 1 00000   
 00033 LGR -0 76500 0 00000    00034 ANA -0 32000 0 00017    00035 SLW +0 60200 0 00005                                 
                 W'R F .E. 2                                                        010  LM00017
 00036 CLA +0 50000 0 00005    00037 SUB +0 40200 0 00016    00040 TNZ -0 10000 0 00130                                 
                 NRECS =  (BUFF (M5) .RS. 18 ) .A. M1                               011  LM00019
 00041 LXA +0 53400 1 00010    00042 CAL -0 50000 0 00021    00043 STA +0 62100 0 00045    00044 CAL -0 50000 1 00000   
 00045 LGR -0 76500 0 00000    00046 ANA -0 32000 0 00006    00047 SLW +0 60200 0 00012                                 
                      QUART = NRECS .RS. 2                                          012  LM00020
 00050 CAL -0 50000 0 00016    00051 STA +0 62100 0 00053    00052 CAL -0 50000 0 00012    00053 LGR -0 76500 0 00000   
 00054 SLW +0 60200 0 00013                                                                                             
                      MOD = NRECS - (QUART .LS. 2)                                  013  LM00021
 00055 CAL -0 50000 0 00016    00056 STA +0 62100 0 00060    00057 CAL -0 50000 0 00013    00060 ALS +0 76700 0 00000   
 00061 SLW +0 60200 0 00153    00062 CLA +0 50000 0 00012    00063 SUB +0 40200 0 00153    00064 STO +0 60100 0 00011   
                      MODTBL (MOD) = MODTBL (MOD) + 1                               014  LM00022
 00065 LXA +0 53400 1 00011    00066 CLA +0 50000 1 77461    00067 ADD +0 40000 0 00015    00070 STO +0 60100 1 77461   
                      W'R NRECS .L. 78                                              015  LM00024
 00071 CLA +0 50000 0 00012    00072 SUB +0 40200 0 00022    00073 TZE +0 10000 0 00100    00074 TPL +0 12000 0 00100   
                           STAT = NRECS                                             016  LM00025
 00075 CLA +0 50000 0 00012    00076 STO +0 60100 0 00014                                                               
                      O'E                                                           017  LM00026
 00077 TRA +0 02000 0 00116                                                                                             
                           STAT = 78                                                018  LM00027
 00100 CLA +0 50000 0 00022    00101 STO +0 60100 0 00014                                                               
                           P'T EXC, PROBN, PROGN, BUFF , BUFF (M1), NRECS           019  LM00028
 00102 TSX +0 07400 4 00001    00103 STR -1 00004 1 00154    00104 STR -1 00000 0 00000    00105 STR -1 00000 0 00000   
 00106 STR -1 00000 0 00000    00107 CLA +0 50000 0 00006    00110 SUB +0 40200 0 00111    00111 TXH +3 00000 0 00000   
 00112 STA +0 62100 0 00113    00113 STR -1 00000 0 00000    00114 STR -1 00000 0 00012    00115 STR -1 00000 0 00000   
                      E'L                                                           020  LM00029
                      STATBL (STAT) = STATBL (STAT) + 1                             021  LM00031
 00116 LXA +0 53400 1 00014    00117 CLA +0 50000 1 77455    00120 ADD +0 40000 0 00015    00121 STO +0 60100 1 77455   
                      TRECS = TRECS + NRECS                                         022  LM00033
 00122 CLA +0 50000 0 77335    00123 ADD +0 40000 0 00012    00124 STO +0 60100 0 77335                                 
                      TFILS = TFILS + 1                                             023  LM00034
 00125 CLA +0 50000 0 77336    00126 ADD +0 40000 0 00015    00127 STO +0 60100 0 77336                                 
                 E'L                                                                024  LM00036
                 F'N                                                                025  LM00039
 00130 TRA +0 02000 0 00147                                                                                             
                 E'N                                                                026  LM00041
 00131 TSX +0 07400 4 00000    00132 TXH +3 00000 0 00000    00133 SXD -0 63400 1 00132    00134 SXA +0 63400 4 00147   
 00135 CLA +0 50000 4 00001    00136 STA +0 62100 0 00104    00137 CLA +0 50000 4 00002    00140 STA +0 62100 0 00105   
 00141 CLA +0 50000 4 00003    00142 STA +0 62100 0 00032    00143 STA +0 62100 0 00044    00144 STA +0 62100 0 00106   
 00145 STO +0 60100 0 00111    00146 TRA +0 02000 2 00001    00147 AXT +0 77400 4 00000    00150 LXA +0 53400 2 00132   
 00151 LXD -0 53400 1 00132    00152 TRA +0 02000 4 00001                                                               
1     MAD PROGRAM LISTING ... ... ...                 FILE   FINIT   MAD            02/09/69    0656.9
-                 
                  DUMMY FINIT PROGRAM FOR ALSTAT PROGRAMS                                              LM00001    
                                                                                                       LM00002    
                                                                                                       LM00003    
                  EXTERNAL FUNCTION ( X )                                                         *001 LM00004    
                  ENTRY TO FINIT.                                                                 *002 LM00005    
                  FUNCTION RETURN                                                                 *003 LM00006    
                  END OF FUNCTION                                                                 *004 LM00007    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00023 TRANSFER VECTOR LENGTH  00001 PROGRAM BEGINS    00004
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      FINIT  00005   0                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   0                                                                                                  
0ABSOLUTE CONSTANTS     
 00002 +000000000001     00003 +233000000000                                                                            
0PROGRAM    
                 EXTERNAL FUNCTION ( X )                                            001  LM00004
                 E'O FINIT.                                                         002  LM00005
 00004 TRA +0 02000 0 00007    00005 SXA +0 63400 2 00011    00006 TSX +0 07400 2 00011                                 
                 F'N                                                                003  LM00006
 00007 TRA +0 02000 0 00015                                                                                             
                 E'N                                                                004  LM00007
 00010 TSX +0 07400 4 00000    00011 TXH +3 00000 0 00000    00012 SXD -0 63400 1 00011    00013 SXA +0 63400 4 00015   
 00014 TRA +0 02000 2 00001    00015 AXT +0 77400 4 00000    00016 LXA +0 53400 2 00011    00017 LXD -0 53400 1 00011   
 00020 TRA +0 02000 4 00001                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE   PLINK   MAD            02/09/69    0657.0
-                 
       PLINK          PRINT USER'S LINKS                                                               LM00001    
                                                                                                       LM00002    
                  EXTERNAL FUNCTION ( PROBN, PROGN, BUFF )                                        *001 LM00003    
                                                                                                       LM00004    
                  VECTOR VALUES FIRST = 1B                                                        *002 LM00005    
                  BOOLEAN FIRST                                                                   *003 LM00006    
                  VECTOR VALUES M1 = 77777K                                                       *004 LM00007    
                  VECTOR VALUES M2 = 77776K                                                       *005 LM00008    
                  VECTOR VALUES M3 = 77775K                                                       *006 LM00009    
                  VECTOR VALUES M5 = 77773K                                                       *007 LM00010    
                  VECTOR VALUES M6 = 77772K                                                       *008 LM00011    
                                                                                                       LM00012    
                  ENTRY TO COUNTR.                                                                *009 LM00013    
                                                                                                       LM00014    
                  WHENEVER FIRST                                                                  *010 LM00015    
                       MYPROB = COMARG. (1)                                                       *011 LM00016    
                       MYPROG = COMARG. (2)                                                       *012 LM00017    
                       FIRST = 0B                                                                 *013 LM00018    
                  END OF CONDITIONAL                                                              *014 LM00019    
                                                                                                       LM00020    
                  WHENEVER BUFF (M2) .E. MYPROB .AND. BUFF (M3) .E. MYPROG                        *015 LM00021    
                       PRINT FORMAT PLINK, PROBN, PROGN, BUFF, BUFF (M1),                         *016 LM00022    
                1      BUFF (M5), BUFF (M6)                                                       *016 LM00023    
                  VECTOR VALUES PLINK = $6(C6,S2)*$                                               *017 LM00024    
                  END OF CONDITIONAL                                                              *018 LM00025    
                                                                                                       LM00026    
                  FUNCTION RETURN                                                                 *019 LM00027    
                                                                                                       LM00028    
                                                                                                       LM00029    
                  ENTRY TO FPRINT.                                                                *020 LM00030    
                  CONTINUE                                                                        *021 LM00031    
                  FUNCTION RETURN                                                                 *022 LM00032    
                                                                                                       LM00033    
                                                                                                       LM00034    
                  END OF FUNCTION                                                                 *023 LM00035    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00127 TRANSFER VECTOR LENGTH  00003 PROGRAM BEGINS    00022
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      FPRINT 00076   0        COUNTR 00023   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      FIRST  00004 A 2        M2     00006 A 1        M5     00010 A 1        MYPROB 00012   0        PLINK  00015 A 1  
      M1     00005 A 1        M3     00007 A 1        M6     00011 A 1        MYPROG 00013   0                          
0FUNCTION DICTIONARY    
      COMARG 00000   0        EXIT   00001   0        .PRINT 00002   0                                                  
0ABSOLUTE CONSTANTS     
 00016 +000000000000     00020 +000000000002     00017 +000000000001     00021 +233000000000                            
0PROGRAM    
                 EXTERNAL FUNCTION ( PROBN, PROGN, BUFF )                           001  LM00003
                 V'S FIRST = 1B                                                     002  LM00005
 00004     +0 00000 0 00001                                                                                             
                 B'N FIRST                                                          003  LM00006
                 V'S M1 = 77777K                                                    004  LM00007
 00005     +0 00000 0 77777                                                                                             
                 V'S M2 = 77776K                                                    005  LM00008
 00006     +0 00000 0 77776                                                                                             
                 V'S M3 = 77775K                                                    006  LM00009
 00007     +0 00000 0 77775                                                                                             
                 V'S M5 = 77773K                                                    007  LM00010
 00010     +0 00000 0 77773                                                                                             
                 V'S M6 = 77772K                                                    008  LM00011
 00011     +0 00000 0 77772                                                                                             
                 E'O COUNTR.                                                        009  LM00013
 00022 TRA +0 02000 0 00025    00023 SXA +0 63400 2 00102    00024 TSX +0 07400 2 00102                                 
                 W'R FIRST                                                          010  LM00015
 00025 NZT -0 52000 0 00004    00026 TRA +0 02000 0 00037                                                               
                      MYPROB = COMARG. (1)                                          011  LM00016
 00027 TSX +0 07400 4 00000    00030 TXH +3 00000 0 00017    00031 STO +0 60100 0 00012                                 
                      MYPROG = COMARG. (2)                                          012  LM00017
 00032 TSX +0 07400 4 00000    00033 TXH +3 00000 0 00020    00034 STO +0 60100 0 00013                                 
                      FIRST = 0B                                                    013  LM00018
 00035 CLA +0 50000 0 00016    00036 STO +0 60100 0 00004                                                               
                 E'L                                                                014  LM00019
                 W'R BUFF (M2) .E. MYPROB .AND. BUFF (M3) .E. MYPROG                015  LM00021
 00037 LXA +0 53400 1 00007    00040 CLA +0 50000 1 00024    00041 SUB +0 40200 0 00013    00042 TNZ -0 10000 0 00074   
 00043 LXA +0 53400 1 00006    00044 CLA +0 50000 1 00024    00045 SUB +0 40200 0 00012    00046 TNZ -0 10000 0 00074   
                      P'T PLINK, PROBN, PROGN, BUFF, BUFF (M1),                     016  LM00022
                1     BUFF (M5), BUFF (M6)                                          016  LM00023
 00047 TSX +0 07400 4 00002    00050 STR -1 00015 1 00125    00051 STR -1 00000 0 00024    00052 STR -1 00000 0 00024   
 00053 STR -1 00000 0 00024    00054 CLA +0 50000 0 00005    00055 SUB +0 40200 0 00056    00056 TXH +3 00000 0 00024   
 00057 STA +0 62100 0 00060    00060 STR -1 00000 0 00000    00061 CLA +0 50000 0 00010    00062 SUB +0 40200 0 00063   
 00063 TXH +3 00000 0 00024    00064 STA +0 62100 0 00065    00065 STR -1 00000 0 00000    00066 CLA +0 50000 0 00011   
 00067 SUB +0 40200 0 00070    00070 TXH +3 00000 0 00024    00071 STA +0 62100 0 00072    00072 STR -1 00000 0 00000   
 00073 STR -1 00000 0 00000                                                                                             
                 V'S PLINK = $6(C6,S2)*$                                            017  LM00024
 00014     +0 23454 6 06060    00015     +0 67423 0 67362                                                               
                 E'L                                                                018  LM00025
                 F'N                                                                019  LM00027
 00074 TRA +0 02000 0 00121                                                                                             
                 E'O FPRINT.                                                        020  LM00030
 00075 TRA +0 02000 0 00100    00076 SXA +0 63400 2 00102    00077 TSX +0 07400 2 00102                                 
                 C'E                                                                021  LM00031
                 F'N                                                                022  LM00032
 00100 TRA +0 02000 0 00121                                                                                             
                 E'N                                                                023  LM00035
 00101 TSX +0 07400 4 00001    00102 TXH +3 00000 0 00000    00103 SXD -0 63400 1 00102    00104 SXA +0 63400 4 00121   
 00105 CLA +0 50000 4 00001    00106 STA +0 62100 0 00051    00107 CLA +0 50000 4 00002    00110 STA +0 62100 0 00052   
 00111 CLA +0 50000 4 00003    00112 STA +0 62100 0 00040    00113 STA +0 62100 0 00044    00114 STA +0 62100 0 00053   
 00115 STO +0 60100 0 00056    00116 STO +0 60100 0 00063    00117 STO +0 60100 0 00070    00120 TRA +0 02000 2 00001   
 00121 AXT +0 77400 4 00000    00122 LXA +0 53400 2 00102    00123 LXD -0 53400 1 00102    00124 TRA +0 02000 4 00001   
1     MAD PROGRAM LISTING ... ... ...                 FILE   PFILE   MAD            02/09/69    0657.0
-                 
       PFILE          PRINT ALL OCCURENCES OF A FILE.                                                  LM00001    
                  EXTERNAL FUNCTION ( PROBN, PROGN, BUFF )                                        *001 LM00002    
                                                                                                       LM00003    
                                                                                                       LM00004    
                  NORMAL MODE IS INTEGER                                                          *002 LM00005    
                  VECTOR VALUES M1 = 77777K                                                       *003 LM00006    
                  VECTOR VALUES M2 = 77776K                                                       *004 LM00007    
                  VECTOR VALUES M3 = 77775K                                                       *005 LM00008    
                  VECTOR VALUES M4 = 77774K                                                       *006 LM00009    
                  VECTOR VALUES FIRST = 1B                                                        *007 LM00010    
                  BOOLEAN FIRST                                                                   *008 LM00011    
                                                                                                       LM00012    
                                                                                                       LM00013    
                  ENTRY TO COUNTR.                                                                *009 LM00014    
                                                                                                       LM00015    
                  WHENEVER FIRST                                                                  *010 LM00016    
                       NAME1 = COMARG. (1)                                                        *011 LM00017    
                       NAME2 = COMARG. (2)                                                        *012 LM00018    
                       FIRST = 0B                                                                 *013 LM00019    
                  END OF CONDITIONAL                                                              *014 LM00020    
                                                                                                       LM00021    
                  WHENEVER (BUFF.E.NAME1 .OR. NAME1.E.$     *$) .AND.                             *015 LM00022    
                1  (BUFF(M1).E.NAME2 .OR. NAME2.E.$     *$)                                       *015 LM00023    
                       COUNT =  COUNT + 1                                                         *016 LM00024    
                                                                                                       LM00025    
                       WHENEVER (BUFF (M4) .A. 7K5) .E. 0                                         *017 LM00026    
                            PRINT FORMAT OUT2, PROBN, PROGN,BUFF, BUFF(M1),                       *018 LM00027    
                1           BUFF (M2) , BUFF (M3)                                                 *018 LM00028    
                  VECTOR VALUES OUT2 = $4(C6,S2),1HL,2(S2,C6)*$                                   *019 LM00029    
                       OTHERWISE                                                                  *020 LM00030    
                            DATLU = BUFF (M3)                                                     *021 LM00031    
                            YEAR = DATLU .RS. 27                                                  *022 LM00032    
                            MONTH = (DATLU .RS. 23) .A. 17K                                       *023 LM00033    
                            DAY = (DATLU .RS. 18) .A. 37K                                         *024 LM00034    
                       PRINT FORMAT OUT, PROBN, PROGN, BUFF, BUFF(M1)                             *025 LM00035    
                1           , MONTH, DAY, YEAR                                                    *025 LM00036    
                  VECTOR VALUES OUT = $4(C6,S2),I2,1H/,I2,1H/,I2*$                                *026 LM00037    
                  END OF CONDITIONAL                                                              *027 LM00038    
                  END OF CONDITIONAL                                                              *028 LM00039    
                                                                                                       LM00040    
                  FUNCTION RETURN                                                                 *029 LM00041    
                                                                                                       LM00042    
                                                                                                       LM00043    
                  ENTRY TO FPRINT.                                                                *030 LM00044    
                  PRINT RESULTS COUNT                                                             *031 LM00045    
                  FUNCTION RETURN                                                                 *032 LM00046    
                                                                                                       LM00047    
                                                                                                       LM00048    
                  END OF FUNCTION                                                                 *033 LM00049    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00307 TRANSFER VECTOR LENGTH  00004 PROGRAM BEGINS    00045
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      FPRINT 00203   0        COUNTR 00046   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      COUNT  00005   1        FIRST  00010 A 2        M3     00013 A 1        NAME1  00016   1        OUT    00030 A 1  
      DATLU  00006   1        M1     00011 A 1        M4     00014 A 1        NAME2  00017   1        YEAR   00031   1  
      DAY    00007   1        M2     00012 A 1        MONTH  00015   1        OUT2   00023 A 1                          
0FUNCTION DICTIONARY    
      COMARG 00000   1        EXIT   00001   1        .PRINT 00002   1        .PRSLT 00003   1                          
0ABSOLUTE CONSTANTS     
 00041 +000000000037     00036 +000000000022     00035 +000000000017     00037 +000000000027     00040 +000000000033    
 00042 +000000700000     00044 -206060606054     00032 +000000000000     00034 +000000000002     00033 +000000000001    
 00043 +233000000000                                                                                                    
0PROGRAM    
                 EXTERNAL FUNCTION ( PROBN, PROGN, BUFF )                           001  LM00002
                 N'R                                                                002  LM00005
                 V'S M1 = 77777K                                                    003  LM00006
 00011     +0 00000 0 77777                                                                                             
                 V'S M2 = 77776K                                                    004  LM00007
 00012     +0 00000 0 77776                                                                                             
                 V'S M3 = 77775K                                                    005  LM00008
 00013     +0 00000 0 77775                                                                                             
                 V'S M4 = 77774K                                                    006  LM00009
 00014     +0 00000 0 77774                                                                                             
                 V'S FIRST = 1B                                                     007  LM00010
 00010     +0 00000 0 00001                                                                                             
                 B'N FIRST                                                          008  LM00011
                 E'O COUNTR.                                                        009  LM00014
 00045 TRA +0 02000 0 00050    00046 SXA +0 63400 2 00213    00047 TSX +0 07400 2 00213                                 
                 W'R FIRST                                                          010  LM00016
 00050 NZT -0 52000 0 00010    00051 TRA +0 02000 0 00062                                                               
                      NAME1 = COMARG. (1)                                           011  LM00017
 00052 TSX +0 07400 4 00000    00053 TXH +3 00000 0 00033    00054 STO +0 60100 0 00016                                 
                      NAME2 = COMARG. (2)                                           012  LM00018
 00055 TSX +0 07400 4 00000    00056 TXH +3 00000 0 00034    00057 STO +0 60100 0 00017                                 
                      FIRST = 0B                                                    013  LM00019
 00060 CLA +0 50000 0 00032    00061 STO +0 60100 0 00010                                                               
                 E'L                                                                014  LM00020
                 W'R (BUFF.E.NAME1 .OR. NAME1.E.$     *$) .AND.                     015  LM00022
                1 (BUFF(M1).E.NAME2 .OR. NAME2.E.$     *$)                          015  LM00023
 00062 CLA +0 50000 0 00017    00063 SUB +0 40200 0 00044    00064 TZE +0 10000 0 00071    00065 LXA +0 53400 1 00011   
 00066 CLA +0 50000 1 00024    00067 SUB +0 40200 0 00017    00070 TNZ -0 10000 0 00201    00071 CLA +0 50000 0 00016   
 00072 SUB +0 40200 0 00044    00073 TZE +0 10000 0 00077    00074 CLA +0 50000 0 00024    00075 SUB +0 40200 0 00016   
 00076 TNZ -0 10000 0 00201                                                                                             
                      COUNT =  COUNT + 1                                            016  LM00024
 00077 CLA +0 50000 0 00005    00100 ADD +0 40000 0 00033    00101 STO +0 60100 0 00005                                 
                      W'R (BUFF (M4) .A. 7K5) .E. 0                                 017  LM00026
 00102 LXA +0 53400 1 00014    00103 CAL -0 50000 1 00024    00104 ANA -0 32000 0 00042    00105 SLW +0 60200 0 00244   
 00106 CLA +0 50000 0 00244    00107 SUB +0 40200 0 00032    00110 TNZ -0 10000 0 00137                                 
                           P'T OUT2, PROBN, PROGN,BUFF, BUFF(M1),                   018  LM00027
                1          BUFF (M2) , BUFF (M3)                                    018  LM00028
 00111 TSX +0 07400 4 00002    00112 STR -1 00023 1 00305    00113 STR -1 00000 0 00024    00114 STR -1 00000 0 00024   
 00115 STR -1 00000 0 00024    00116 CLA +0 50000 0 00011    00117 SUB +0 40200 0 00120    00120 TXH +3 00000 0 00024   
 00121 STA +0 62100 0 00122    00122 STR -1 00000 0 00000    00123 CLA +0 50000 0 00012    00124 SUB +0 40200 0 00125   
 00125 TXH +3 00000 0 00024    00126 STA +0 62100 0 00127    00127 STR -1 00000 0 00000    00130 CLA +0 50000 0 00013   
 00131 SUB +0 40200 0 00132    00132 TXH +3 00000 0 00024    00133 STA +0 62100 0 00134    00134 STR -1 00000 0 00000   
 00135 STR -1 00000 0 00000                                                                                             
                 V'S OUT2 = $4(C6,S2),1HL,2(S2,C6)*$                                019  LM00029
 00020     +2 30634 5 46060    00021     -3 30274 6 20273    00022     +0 23473 0 13043    00023     +0 47423 0 67362   
                      O'E                                                           020  LM00030
 00136 TRA +0 02000 0 00201                                                                                             
                           DATLU = BUFF (M3)                                        021  LM00031
 00137 LXA +0 53400 2 00013    00140 CLA +0 50000 2 00024    00141 STO +0 60100 0 00006                                 
                           YEAR = DATLU .RS. 27                                     022  LM00032
 00142 CAL -0 50000 0 00040    00143 STA +0 62100 0 00145    00144 CAL -0 50000 0 00006    00145 LGR -0 76500 0 00000   
 00146 SLW +0 60200 0 00031                                                                                             
                           MONTH = (DATLU .RS. 23) .A. 17K                          023  LM00033
 00147 CAL -0 50000 0 00037    00150 STA +0 62100 0 00152    00151 CAL -0 50000 0 00006    00152 LGR -0 76500 0 00000   
 00153 ANA -0 32000 0 00035    00154 SLW +0 60200 0 00015                                                               
                           DAY = (DATLU .RS. 18) .A. 37K                            024  LM00034
 00155 CAL -0 50000 0 00036    00156 STA +0 62100 0 00160    00157 CAL -0 50000 0 00006    00160 LGR -0 76500 0 00000   
 00161 ANA -0 32000 0 00041    00162 SLW +0 60200 0 00007                                                               
                      P'T OUT, PROBN, PROGN, BUFF, BUFF(M1)                         025  LM00035
                1          , MONTH, DAY, YEAR                                       025  LM00036
 00163 TSX +0 07400 4 00002    00164 STR -1 00030 1 00305    00165 STR -1 00000 0 00024    00166 STR -1 00000 0 00024   
 00167 STR -1 00000 0 00024    00170 CLA +0 50000 0 00011    00171 SUB +0 40200 0 00172    00172 TXH +3 00000 0 00024   
 00173 STA +0 62100 0 00174    00174 STR -1 00000 0 00000    00175 STR -1 00000 0 00015    00176 STR -1 00000 0 00007   
 00177 STR -1 00000 0 00031    00200 STR -1 00000 0 00000                                                               
                 V'S OUT = $4(C6,S2),I2,1H/,I2,1H/,I2*$                             026  LM00037
 00024     +0 25460 6 06060    00025     -3 30130 6 17331    00026     +0 13061 7 33102    00027     +0 23473 3 10273   
 00030     +0 47423 0 67362                                                                                             
                 E'L                                                                027  LM00038
                 E'L                                                                028  LM00039
                 F'N                                                                029  LM00041
 00201 TRA +0 02000 0 00240                                                                                             
                 E'O FPRINT.                                                        030  LM00044
 00202 TRA +0 02000 0 00205    00203 SXA +0 63400 2 00213    00204 TSX +0 07400 2 00213                                 
                 P'S COUNT                                                          031  LM00045
 00205 TSX +0 07400 4 00003    00206 TXH +3 00000 0 00305    00207 TXH +3 00000 0 00005    00210 TXH +3 00000 0 00000   
                 F'N                                                                032  LM00046
 00211 TRA +0 02000 0 00240                                                                                             
                 E'N                                                                033  LM00049
 00212 TSX +0 07400 4 00001    00213 TXH +3 00000 0 00000    00214 SXD -0 63400 1 00213    00215 SXA +0 63400 4 00240   
 00216 CLA +0 50000 4 00001    00217 STA +0 62100 0 00113    00220 STA +0 62100 0 00165    00221 CLA +0 50000 4 00002   
 00222 STA +0 62100 0 00114    00223 STA +0 62100 0 00166    00224 CLA +0 50000 4 00003    00225 STA +0 62100 0 00066   
 00226 STA +0 62100 0 00074    00227 STA +0 62100 0 00103    00230 STA +0 62100 0 00115    00231 STO +0 60100 0 00120   
 00232 STO +0 60100 0 00125    00233 STO +0 60100 0 00132    00234 STA +0 62100 0 00140    00235 STA +0 62100 0 00167   
 00236 STO +0 60100 0 00172    00237 TRA +0 02000 2 00001    00240 AXT +0 77400 4 00000    00241 LXA +0 53400 2 00213   
 00242 LXD -0 53400 1 00213    00243 TRA +0 02000 4 00001                                                               
1     MAD PROGRAM LISTING ... ... ...                 FILE   PMODE   MAD            02/09/69    0657.2
-                 
                    PMODE - PRINTS FILES OF CERTAIN MODE FOR ALL OF SYSTEM                             LM00001    
                                                                                                       LM00002    
                    WRITTEN BY ROGER ROACH 6/8/67                                                      LM00003    
                                                                                                       LM00004    
                  EXTERNAL FUNCTION (PROBN,PROGN,BUFF)                                            *001 LM00005    
                  NORMAL MODE IS INTEGER                                                          *002 LM00006    
                  VECTOR VALUES COLON = 355757575757K                                             *003 LM00007    
                  VECTOR VALUES TAB1 = 557257575757K                                              *004 LM00008    
                  VECTOR VALUES TAB2 = 727257575757K                                              *005 LM00009    
                  VECTOR VALUES BL = 605757575757K                                                *006 LM00010    
                  VECTOR VALUES CR = 555757575757K                                                *007 LM00011    
                  VECTOR VALUES M1 = 77777K                                                       *008 LM00012    
                  VECTOR VALUES M3 = 77775K                                                       *009 LM00013    
                  VECTOR VALUES M4 = 77774K                                                       *010 LM00014    
                  VECTOR VALUES M5 = 77773K                                                       *011 LM00015    
                  VECTOR VALUES TOTAL = 0                                                         *012 LM00016    
                  VECTOR VALUES COUNT = 0                                                         *013 LM00017    
                  VECTOR VALUES SUBTOT = 0                                                        *014 LM00018    
                  VECTOR VALUES FIRST = 1B                                                        *015 LM00019    
                                                                                                       LM00020    
                  COUNTR - COUNTS THE FILES                                                            LM00021    
                                                                                                       LM00022    
                  ENTRY TO COUNTR.                                                                *016 LM00023    
                  WHENEVER FIRST                                                                  *017 LM00024    
                       GETTM.(DATE,TIME)                                                          *018 LM00025    
                       PRMESS.(CR,$      $,DATE,TIME,CR,CR,                                       *019 LM00026    
                1      $     NAME       MOD RECS  DATE$)                                          *019 LM00027    
                       FIRST = 0B                                                                 *020 LM00028    
                       MASK = BCOCT.(COMARG.(1))                                                  *021 LM00029    
                       END OF CONDITIONAL                                                         *022 LM00030    
                  N1 = BUFF                                                                       *023 LM00031    
                  N2 = BUFF(M1)                                                                   *024 LM00032    
                  WHENEVER N1.E.0 .AND. N2.E.0, FUNCTION RETURN                                   *025 LM00033    
                  MODE = (BUFF(M4).A.776K9).RS.28                                                 *026 LM00034    
                  AUTH = BZEL.(DERBC.(BUFF(M3)))                                                  *027 LM00035    
                  WHENEVER AUTH .E. PROGN, AUTH = $ $                                             *028 LM00036    
                  WHENEVER (MODE.A.MASK).NE. MASK, FUNCTION RETURN                                *029 LM00037    
                  DEVIC = (BUFF(M4).A.7K5).RS.15                                                  *030 LM00038    
                  WHENEVER DEVIC .NE. 2, FUNCTION RETURN                                          *031 LM00039    
                  NOREC = (BUFF(M5).RS.18).A.M1                                                   *032 LM00040    
                  WHENEVER PB .NE. PROBN .OR. PG .NE. PROGN                                       *033 LM00041    
                       SUBTOT = BZEL.(DERBC.(SUBTOT))                                             *034 LM00042    
                       WHENEVER SUBTOT.NE.$     0$,PRMESS.(TAB2,SUBTOT)                           *035 LM00043    
                       SUBTOT = 0                                                                 *036 LM00044    
                       PRMESS.(TAB1,PROBN,BL,PROGN,COLON)                                         *037 LM00045    
                       PB = PROBN                                                                 *038 LM00046    
                       PG = PROGN                                                                 *039 LM00047    
                       END OF CONDITIONAL                                                         *040 LM00048    
                                                                                                       LM00049    
                   PRINT FILE NAME, LENGTH ETC.                                                        LM00050    
                                                                                                       LM00051    
                  SUBTOT = SUBTOT + NOREC                                                         *041 LM00052    
                  TOTAL = TOTAL + NOREC                                                           *042 LM00053    
                  COUNT = COUNT + 1                                                               *043 LM00054    
                  MOD = (OCABC.(MODE)).V.606060K6                                                 *044 LM00055    
                  NOREC = BZEL.(DERBC.(NOREC))                                                    *045 LM00056    
                  TEMP = BUFF(M3).RS.18                                                           *046 LM00057    
                  MO = DERBC.((TEMP.RS.5).A.17K)                                                  *047 LM00058    
                  DA = DERBC.(TEMP.A.37K)                                                         *048 LM00059    
                  DATE = (MO.LS.18).V.DA.V.$ 00/00$                                               *049 LM00060    
                  PRMESS.(N1,BL,N2,MOD,NOREC,DATE,AUTH)                                           *050 LM00061    
                  FUNCTION RETURN                                                                 *051 LM00062    
                                                                                                       LM00063    
                                                                                                       LM00064    
                    FPRINT - FINAL PRINT OF TOTALS                                                     LM00065    
                                                                                                       LM00066    
                  ENTRY TO FPRINT.                                                                *052 LM00067    
                  SUBTOT = BZEL.(DERBC.(SUBTOT))                                                  *053 LM00068    
                  COUNT = BZ57.(DERBC.(COUNT))                                                    *054 LM00069    
                  WHENEVER SUBTOT.NE.$     0$,PRMESS.(TAB2,SUBTOT)                                *055 LM00070    
                  TOTAL = BZEL.(DERBC.(TOTAL))                                                    *056 LM00071    
                  PRMESS.(CR,CR,CR,$TOTAL FILES =$,COUNT,$, TOTAL RECORDS =$                      *057 LM00072    
                1  ,TOTAL,CR,CR)                                                                  *057 LM00073    
                  FUNCTION RETURN                                                                 *058 LM00074    
                  END OF FUNCTION                                                                 *059 LM00075    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00472 TRANSFER VECTOR LENGTH  00011 PROGRAM BEGINS    00100
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      FPRINT 00364   0        COUNTR 00101   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      AUTH   00012   1        DATE   00020   1        M5     00026 A 1        N2     00034   1        TAB1   00041 A 1  
      BL     00013 A 1        DEVIC  00021   1        MASK   00027   1        NOREC  00035   1        TAB2   00042 A 1  
      COLON  00014 A 1        FIRST  00022 A 2        MODE   00030   1        PB     00036   1        TEMP   00043   1  
      COUNT  00015 A 1        M1     00023 A 1        MOD    00031   1        PG     00037   1        TIME   00044   1  
      CR     00016 A 1        M3     00024 A 1        MO     00032   1        SUBTOT 00040 A 1        TOTAL  00045 A 1  
      DA     00017   1        M4     00025 A 1        N1     00033   1                                                  
0FUNCTION DICTIONARY    
      BCOCT  00000   1        BZ57   00001   1        BZEL   00002   1        COMARG 00003   1        DERBC  00004   1  
      EXIT   00005   1        GETTM  00006   1        OCABC  00007   1        PRMESS 00010   1                          
0ABSOLUTE CONSTANTS     
 00065 -112462601360     00064 -036051252346     00076 -336063466321     00057 +136060606060     00063 +263143256260    
 00075 -234663214360     00066 -200000610000     00055 +000000000037     00051 +000000000005     00070 -206060000000    
 00072 -206060606000     00053 +000000000022     00050 +000000000002     00052 +000000000017     00056 +000000700000    
 00054 +000000000034     00077 -376000000000     00046 +000000000000     00067 -206024216325     00062 +246051252362    
 00071 -206060604446     00060 +214425606060     00073 -206060606045     00074 -206060606060     00047 +000000000001    
 00061 +233000000000                                                                                                    
0PROGRAM    
                 EXTERNAL FUNCTION (PROBN,PROGN,BUFF)                               001  LM00005
                 N'R                                                                002  LM00006
                 V'S COLON = 355757575757K                                          003  LM00007
 00014     +3 55757 5 75757                                                                                             
                 V'S TAB1 = 557257575757K                                           004  LM00008
 00041     -1 57257 5 75757                                                                                             
                 V'S TAB2 = 727257575757K                                           005  LM00009
 00042     -3 27257 5 75757                                                                                             
                 V'S BL = 605757575757K                                             006  LM00010
 00013     -2 05757 5 75757                                                                                             
                 V'S CR = 555757575757K                                             007  LM00011
 00016     -1 55757 5 75757                                                                                             
                 V'S M1 = 77777K                                                    008  LM00012
 00023     +0 00000 0 77777                                                                                             
                 V'S M3 = 77775K                                                    009  LM00013
 00024     +0 00000 0 77775                                                                                             
                 V'S M4 = 77774K                                                    010  LM00014
 00025     +0 00000 0 77774                                                                                             
                 V'S M5 = 77773K                                                    011  LM00015
 00026     +0 00000 0 77773                                                                                             
                 V'S TOTAL = 0                                                      012  LM00016
 00045     +0 00000 0 00000                                                                                             
                 V'S COUNT = 0                                                      013  LM00017
 00015     +0 00000 0 00000                                                                                             
                 V'S SUBTOT = 0                                                     014  LM00018
 00040     +0 00000 0 00000                                                                                             
                 V'S FIRST = 1B                                                     015  LM00019
 00022     +0 00000 0 00001                                                                                             
                 E'O COUNTR.                                                        016  LM00023
 00100 TRA +0 02000 0 00103    00101 SXA +0 63400 2 00436    00102 TSX +0 07400 2 00436                                 
                 W'R FIRST                                                          017  LM00024
 00103 NZT -0 52000 0 00022    00104 TRA +0 02000 0 00134                                                               
                      GETTM.(DATE,TIME)                                             018  LM00025
 00105 TSX +0 07400 4 00006    00106 TXH +3 00000 0 00020    00107 TXH +3 00000 0 00044                                 
                      PRMESS.(CR,$      $,DATE,TIME,CR,CR,                          019  LM00026
                1     $     NAME       MOD RECS  DATE$)                             019  LM00027
 00110 TSX +0 07400 4 00010    00111 TXH +3 00000 0 00016    00112 TXH +3 00000 0 00074    00113 TXH +3 00000 0 00020   
 00114 TXH +3 00000 0 00044    00115 TXH +3 00000 0 00016    00116 TXH +3 00000 0 00016    00117 TXH +3 00000 0 00073   
 00120 TXH +3 00000 0 00060    00121 TXH +3 00000 0 00071    00122 TXH +3 00000 0 00062    00123 TXH +3 00000 0 00067   
                      FIRST = 0B                                                    020  LM00028
 00124 CLA +0 50000 0 00046    00125 STO +0 60100 0 00022                                                               
                      MASK = BCOCT.(COMARG.(1))                                     021  LM00029
 00126 TSX +0 07400 4 00003    00127 TXH +3 00000 0 00047    00130 STO +0 60100 0 00467    00131 TSX +0 07400 4 00000   
 00132 TXH +3 00000 0 00467    00133 STO +0 60100 0 00027                                                               
                      E'L                                                           022  LM00030
                 N1 = BUFF                                                          023  LM00031
 00134 CLA +0 50000 0 00024    00135 STO +0 60100 0 00033                                                               
                 N2 = BUFF(M1)                                                      024  LM00032
 00136 LXA +0 53400 2 00023    00137 CLA +0 50000 2 00024    00140 STO +0 60100 0 00034                                 
                 W'R N1.E.0 .AND. N2.E.0, F'N                                       025  LM00033
 00141 CLA +0 50000 0 00034    00142 SUB +0 40200 0 00046    00143 TNZ -0 10000 0 00150    00144 CLA +0 50000 0 00033   
 00145 SUB +0 40200 0 00046    00146 TNZ -0 10000 0 00150    00147 TRA +0 02000 0 00463                                 
                 MODE = (BUFF(M4).A.776K9).RS.28                                    026  LM00034
 00150 LXA +0 53400 1 00025    00151 CAL -0 50000 1 00024    00152 ANA -0 32000 0 00077    00153 SLW +0 60200 0 00467   
 00154 CAL -0 50000 0 00054    00155 STA +0 62100 0 00157    00156 CAL -0 50000 0 00467    00157 LGR -0 76500 0 00000   
 00160 SLW +0 60200 0 00030                                                                                             
                 AUTH = BZEL.(DERBC.(BUFF(M3)))                                     027  LM00035
 00161 CLA +0 50000 0 00024    00162 SUB +0 40200 0 00163    00163 TXH +3 00000 0 00024    00164 STA +0 62100 0 00166   
 00165 TSX +0 07400 4 00004    00166 TXH +3 00000 0 00000    00167 STO +0 60100 0 00467    00170 TSX +0 07400 4 00002   
 00171 TXH +3 00000 0 00467    00172 STO +0 60100 0 00012                                                               
                 W'R AUTH .E. PROGN, AUTH = $ $                                     028  LM00036
 00173 CLA +0 50000 0 00012    00174 SUB +0 40200 0 00024    00175 TNZ -0 10000 0 00200    00176 CLA +0 50000 0 00074   
 00177 STO +0 60100 0 00012                                                                                             
                 W'R (MODE.A.MASK).NE. MASK, F'N                                    029  LM00037
 00200 CAL -0 50000 0 00030    00201 ANA -0 32000 0 00027    00202 SLW +0 60200 0 00467    00203 CLA +0 50000 0 00467   
 00204 SUB +0 40200 0 00027    00205 TZE +0 10000 0 00207    00206 TRA +0 02000 0 00463                                 
                 DEVIC = (BUFF(M4).A.7K5).RS.15                                     030  LM00038
 00207 LXA +0 53400 1 00025    00210 CAL -0 50000 1 00024    00211 ANA -0 32000 0 00056    00212 SLW +0 60200 0 00467   
 00213 CAL -0 50000 0 00052    00214 STA +0 62100 0 00216    00215 CAL -0 50000 0 00467    00216 LGR -0 76500 0 00000   
 00217 SLW +0 60200 0 00021                                                                                             
                 W'R DEVIC .NE. 2, F'N                                              031  LM00039
 00220 CLA +0 50000 0 00021    00221 SUB +0 40200 0 00050    00222 TZE +0 10000 0 00224    00223 TRA +0 02000 0 00463   
                 NOREC = (BUFF(M5).RS.18).A.M1                                      032  LM00040
 00224 LXA +0 53400 1 00026    00225 CAL -0 50000 0 00053    00226 STA +0 62100 0 00230    00227 CAL -0 50000 1 00024   
 00230 LGR -0 76500 0 00000    00231 ANA -0 32000 0 00023    00232 SLW +0 60200 0 00035                                 
                 W'R PB .NE. PROBN .OR. PG .NE. PROGN                               033  LM00041
 00233 CLA +0 50000 0 00037    00234 SUB +0 40200 0 00024    00235 TNZ -0 10000 0 00241    00236 CLA +0 50000 0 00036   
 00237 SUB +0 40200 0 00024    00240 TZE +0 10000 0 00271                                                               
                      SUBTOT = BZEL.(DERBC.(SUBTOT))                                034  LM00042
 00241 TSX +0 07400 4 00004    00242 TXH +3 00000 0 00040    00243 STO +0 60100 0 00467    00244 TSX +0 07400 4 00002   
 00245 TXH +3 00000 0 00467    00246 STO +0 60100 0 00040                                                               
                      W'R SUBTOT.NE.$     0$,PRMESS.(TAB2,SUBTOT)                   035  LM00043
 00247 CLA +0 50000 0 00040    00250 SUB +0 40200 0 00072    00251 TZE +0 10000 0 00255    00252 TSX +0 07400 4 00010   
 00253 TXH +3 00000 0 00042    00254 TXH +3 00000 0 00040                                                               
                      SUBTOT = 0                                                    036  LM00044
 00255 CLA +0 50000 0 00046    00256 STO +0 60100 0 00040                                                               
                      PRMESS.(TAB1,PROBN,BL,PROGN,COLON)                            037  LM00045
 00257 TSX +0 07400 4 00010    00260 TXH +3 00000 0 00041    00261 TXH +3 00000 0 00024    00262 TXH +3 00000 0 00013   
 00263 TXH +3 00000 0 00024    00264 TXH +3 00000 0 00014                                                               
                      PB = PROBN                                                    038  LM00046
 00265 CLA +0 50000 0 00024    00266 STO +0 60100 0 00036                                                               
                      PG = PROGN                                                    039  LM00047
 00267 CLA +0 50000 0 00024    00270 STO +0 60100 0 00037                                                               
                      E'L                                                           040  LM00048
                 SUBTOT = SUBTOT + NOREC                                            041  LM00052
 00271 CLA +0 50000 0 00040    00272 ADD +0 40000 0 00035    00273 STO +0 60100 0 00040                                 
                 TOTAL = TOTAL + NOREC                                              042  LM00053
 00274 CLA +0 50000 0 00045    00275 ADD +0 40000 0 00035    00276 STO +0 60100 0 00045                                 
                 COUNT = COUNT + 1                                                  043  LM00054
 00277 CLA +0 50000 0 00015    00300 ADD +0 40000 0 00047    00301 STO +0 60100 0 00015                                 
                 MOD = (OCABC.(MODE)).V.606060K6                                    044  LM00055
 00302 TSX +0 07400 4 00007    00303 TXH +3 00000 0 00030    00304 STO +0 60100 0 00467    00305 CAL -0 50000 0 00467   
 00306 ORA -0 50100 0 00070    00307 SLW +0 60200 0 00031                                                               
                 NOREC = BZEL.(DERBC.(NOREC))                                       045  LM00056
 00310 TSX +0 07400 4 00004    00311 TXH +3 00000 0 00035    00312 STO +0 60100 0 00467    00313 TSX +0 07400 4 00002   
 00314 TXH +3 00000 0 00467    00315 STO +0 60100 0 00035                                                               
                 TEMP = BUFF(M3).RS.18                                              046  LM00057
 00316 LXA +0 53400 1 00024    00317 CAL -0 50000 0 00053    00320 STA +0 62100 0 00322    00321 CAL -0 50000 1 00024   
 00322 LGR -0 76500 0 00000    00323 SLW +0 60200 0 00043                                                               
                 MO = DERBC.((TEMP.RS.5).A.17K)                                     047  LM00058
 00324 CAL -0 50000 0 00051    00325 STA +0 62100 0 00327    00326 CAL -0 50000 0 00043    00327 LGR -0 76500 0 00000   
 00330 ANA -0 32000 0 00052    00331 SLW +0 60200 0 00467    00332 TSX +0 07400 4 00004    00333 TXH +3 00000 0 00467   
 00334 STO +0 60100 0 00032                                                                                             
                 DA = DERBC.(TEMP.A.37K)                                            048  LM00059
 00335 CAL -0 50000 0 00043    00336 ANA -0 32000 0 00055    00337 SLW +0 60200 0 00467    00340 TSX +0 07400 4 00004   
 00341 TXH +3 00000 0 00467    00342 STO +0 60100 0 00017                                                               
                 DATE = (MO.LS.18).V.DA.V.$ 00/00$                                  049  LM00060
 00343 CAL -0 50000 0 00053    00344 STA +0 62100 0 00346    00345 CAL -0 50000 0 00032    00346 ALS +0 76700 0 00000   
 00347 ORA -0 50100 0 00017    00350 ORA -0 50100 0 00066    00351 SLW +0 60200 0 00020                                 
                 PRMESS.(N1,BL,N2,MOD,NOREC,DATE,AUTH)                              050  LM00061
 00352 TSX +0 07400 4 00010    00353 TXH +3 00000 0 00033    00354 TXH +3 00000 0 00013    00355 TXH +3 00000 0 00034   
 00356 TXH +3 00000 0 00031    00357 TXH +3 00000 0 00035    00360 TXH +3 00000 0 00020    00361 TXH +3 00000 0 00012   
                 F'N                                                                051  LM00062
 00362 TRA +0 02000 0 00463                                                                                             
                 E'O FPRINT.                                                        052  LM00067
 00363 TRA +0 02000 0 00366    00364 SXA +0 63400 2 00436    00365 TSX +0 07400 2 00436                                 
                 SUBTOT = BZEL.(DERBC.(SUBTOT))                                     053  LM00068
 00366 TSX +0 07400 4 00004    00367 TXH +3 00000 0 00040    00370 STO +0 60100 0 00467    00371 TSX +0 07400 4 00002   
 00372 TXH +3 00000 0 00467    00373 STO +0 60100 0 00040                                                               
                 COUNT = BZ57.(DERBC.(COUNT))                                       054  LM00069
 00374 TSX +0 07400 4 00004    00375 TXH +3 00000 0 00015    00376 STO +0 60100 0 00467    00377 TSX +0 07400 4 00001   
 00400 TXH +3 00000 0 00467    00401 STO +0 60100 0 00015                                                               
                 W'R SUBTOT.NE.$     0$,PRMESS.(TAB2,SUBTOT)                        055  LM00070
 00402 CLA +0 50000 0 00040    00403 SUB +0 40200 0 00072    00404 TZE +0 10000 0 00410    00405 TSX +0 07400 4 00010   
 00406 TXH +3 00000 0 00042    00407 TXH +3 00000 0 00040                                                               
                 TOTAL = BZEL.(DERBC.(TOTAL))                                       056  LM00071
 00410 TSX +0 07400 4 00004    00411 TXH +3 00000 0 00045    00412 STO +0 60100 0 00467    00413 TSX +0 07400 4 00002   
 00414 TXH +3 00000 0 00467    00415 STO +0 60100 0 00045                                                               
                 PRMESS.(CR,CR,CR,$TOTAL FILES =$,COUNT,$, TOTAL RECORDS =$         057  LM00072
                1 ,TOTAL,CR,CR)                                                     057  LM00073
 00416 TSX +0 07400 4 00010    00417 TXH +3 00000 0 00016    00420 TXH +3 00000 0 00016    00421 TXH +3 00000 0 00016   
 00422 TXH +3 00000 0 00075    00423 TXH +3 00000 0 00063    00424 TXH +3 00000 0 00057    00425 TXH +3 00000 0 00015   
 00426 TXH +3 00000 0 00076    00427 TXH +3 00000 0 00064    00430 TXH +3 00000 0 00065    00431 TXH +3 00000 0 00045   
 00432 TXH +3 00000 0 00016    00433 TXH +3 00000 0 00016                                                               
                 F'N                                                                058  LM00074
 00434 TRA +0 02000 0 00463                                                                                             
                 E'N                                                                059  LM00075
 00435 TSX +0 07400 4 00005    00436 TXH +3 00000 0 00000    00437 SXD -0 63400 1 00436    00440 SXA +0 63400 4 00463   
 00441 CLA +0 50000 4 00001    00442 STA +0 62100 0 00237    00443 STO +0 60100 0 00261    00444 STA +0 62100 0 00265   
 00445 CLA +0 50000 4 00002    00446 STA +0 62100 0 00174    00447 STA +0 62100 0 00234    00450 STO +0 60100 0 00263   
 00451 STA +0 62100 0 00267    00452 CLA +0 50000 4 00003    00453 STA +0 62100 0 00134    00454 STA +0 62100 0 00137   
 00455 STA +0 62100 0 00151    00456 STO +0 60100 0 00163    00457 STA +0 62100 0 00210    00460 STA +0 62100 0 00227   
 00461 STA +0 62100 0 00321    00462 TRA +0 02000 2 00001    00463 AXT +0 77400 4 00000    00464 LXA +0 53400 2 00436   
 00465 LXD -0 53400 1 00436    00466 TRA +0 02000 4 00001                                                               
1     MAD PROGRAM LISTING ... ... ...                 FILE   PDATE   MAD            02/09/69    0657.1
-                 
       PDATE          PRINT ALL FILES OLDER THAN GIVEN DATE.                                           LM00001    
                  EXTERNAL FUNCTION ( PROBN, PROGN, BUFF )                                        *001 LM00002    
                  NORMAL MODE IS INTEGER                                                          *002 LM00003    
                                                                                                       LM00004    
                  DIMENSION FTBL (90), RTBL (90)                                                  *003 LM00005    
                                                                                                       LM00006    
                                                                                                       LM00007    
                  VECTOR VALUES M3 = 77775K                                                       *004 LM00008    
                  VECTOR VALUES M4 = 77774K                                                       *005 LM00009    
                  VECTOR VALUES M5 = 77773K                                                       *006 LM00010    
                                                                                                       LM00011    
                  VECTOR VALUES FIRST = 1B                                                        *007 LM00012    
                                                                                                       LM00013    
                                                                                                       LM00014    
                                                                                                       LM00015    
                  ENTRY TO COUNTR.                                                                *008 LM00016    
                                                                                                       LM00017    
                                                                                                       LM00018    
                  WHENEVER FIRST                                                                  *009 LM00019    
                       DATE = COMARG. (1)                                                         *010 LM00020    
                       YEAR = BCDEC. ( DATE .A. 7777K )                                           *011 LM00021    
                       MONTH = BCDEC. ( (DATE .RS. 24) .A. 7777K )                                *012 LM00022    
                       DAY = BCDEC. ( (DATE .RS. 12) .A. 7777K )                                  *013 LM00023    
                                                                                                       LM00024    
                       NOW = ABSDAT. (MONTH, DAY, YEAR)                                           *014 LM00025    
                       FIRST = 0B                                                                 *015 LM00026    
                                                                                                       LM00027    
                  ZERO. (FTBL ... FTBL (90), RTBL ... RTBL (90) )                                 *016 LM00028    
                  END OF CONDITIONAL                                                              *017 LM00029    
                                                                                                       LM00030    
                                                                                                       LM00031    
                  WHENEVER (BUFF (M4) .RS. 15) .A. 7K .E. 2                                       *018 LM00032    
                                                                                                       LM00033    
                       TEMP = BUFF (M3) .RS. 18                                                   *019 LM00034    
                       YEAR = TEMP .RS. 9                                                         *020 LM00035    
                       MONTH = TEMP .RS. 5 .A. 17K                                                *021 LM00036    
                       DAY = TEMP .A. 37 K                                                        *022 LM00037    
                       AGE = NOW - ABSDAT. (MONTH, DAY, YEAR)                                     *023 LM00038    
                       WHENEVER AGE .G. 90, AGE = 90                                              *024 LM00039    
                       WHENEVER AGE .L. 0, AGE = 0                                                *025 LM00040    
                                                                                                       LM00041    
                       NORECS = (BUFF (M5) .RS. 18) .A. 77777K                                    *026 LM00042    
                                                                                                       LM00043    
                       FTBL (AGE) = FTBL (AGE) + 1                                                *027 LM00044    
                       RTBL (AGE) = RTBL (AGE) + NORECS                                           *028 LM00045    
                                                                                                       LM00046    
                                                                                                       LM00047    
                  END OF CONDITIONAL                                                              *029 LM00048    
                                                                                                       LM00049    
                                                                                                       LM00050    
                                                                                                       LM00051    
                                                                                                       LM00052    
                  FUNCTION RETURN                                                                 *030 LM00053    
                                                                                                       LM00054    
                                                                                                       LM00055    
                                                                                                       LM00056    
                  ENTRY TO FPRINT.                                                                *031 LM00057    
                                                                                                       LM00058    
                                                                                                       LM00059    
                  PRINT COMMENT $AGE  FILES  OLDER  RECS   OLDER$                                 *032 LM00060    
                  PRINT COMMENT $ $                                                               *033 LM00061    
                                                                                                       LM00062    
                  THROUGH BETA, FOR K = 0, 1, K .G. 90                                            *034 LM00063    
                  FOLDER = 0                                                                      *035 LM00064    
                  ROLDER = 0                                                                      *036 LM00065    
                                                                                                       LM00066    
                  THROUGH ALPHA, FOR J = K, 1, J .G. 90                                           *037 LM00067    
                  FOLDER = FOLDER + FTBL (J)                                                      *038 LM00068    
                  ROLDER = ROLDER + RTBL (J)                                                      *039 LM00069    
                  VAR = ROLDER / 1000                                                             *040 LM00070    
      ALPHA       CONTINUE                                                                        *041 LM00071    
                                                                                                       LM00072    
                  PRINT FORMAT OUTPT, K, FTBL (K), FOLDER, RTBL (K), ROLDER                       *042 LM00073    
                                                                                                       LM00074    
                  VECTOR VALUES OUTPT = $I3,S1,4I7,S2,'VAR'(1HX)*$                                *043 LM00075    
                  FORMAT VARIABLE VAR                                                             *044 LM00076    
                                                                                                       LM00077    
      BETA        CONTINUE                                                                        *045 LM00078    
                                                                                                       LM00079    
                                                                                                       LM00080    
                                                                                                       LM00081    
                  FUNCTION RETURN                                                                 *046 LM00082    
                                                                                                       LM00083    
                                                                                                       LM00084    
                                                                                                       LM00085    
                  END OF FUNCTION                                                                 *047 LM00086    
       THE FOLLOWING NAMES HAVE OCCURRED ONLY ONCE IN THIS PROGRAM.     
       COMPILATION WILL CONTINUE.   
      VAR   
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00644 TRANSFER VECTOR LENGTH  00007 PROGRAM BEGINS    00343
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      FPRINT 00516   0        COUNTR 00344   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      AGE    00010   1        FIRST  00013 A 2        M3     00152 A 1        NORECS 00156   1        RTBL   00317 A 1  
      ALPHA  00007   4        FOLDER 00014   1        M4     00153 A 1        NOW    00157   1        TEMP   00320   1  
      BETA   00007   4        FTBL   00147 A 1        M5     00154 A 1        OUTPT  00163 A 1        VAR    00321   1  
      DATE   00011   1        J      00150   1        MONTH  00155   1        ROLDER 00164   1        YEAR   00322   1  
      DAY    00012   1        K      00151   1                                                                          
0FUNCTION DICTIONARY    
      ABSDAT 00000   1        BCDEC  00001   1        COMARG 00002   1        EXIT   00003   1        .PCOMT 00004   1  
      .PRINT 00005   1        ZERO   00006   1                                                                          
0ABSOLUTE CONSTANTS     
 00337 +000000001750     00341 +000000077777     00336 +000000000132     00335 +000000000037     00326 +000000000005    
 00330 +000000000011     00333 +000000000022     00325 +000000000002     00327 +000000000007     00332 +000000000017    
 00323 +000000000000     00331 +000000000014     00334 +000000000030     00340 +000000007777     00324 +000000000001    
 00342 +233000000000                                                                                                    
0PROGRAM    
                 EXTERNAL FUNCTION ( PROBN, PROGN, BUFF )                           001  LM00002
                 N'R                                                                002  LM00003
                 D'N FTBL (90), RTBL (90)                                           003  LM00005
                 V'S M3 = 77775K                                                    004  LM00008
 00152     +0 00000 0 77775                                                                                             
                 V'S M4 = 77774K                                                    005  LM00009
 00153     +0 00000 0 77774                                                                                             
                 V'S M5 = 77773K                                                    006  LM00010
 00154     +0 00000 0 77773                                                                                             
                 V'S FIRST = 1B                                                     007  LM00012
 00013     +0 00000 0 00001                                                                                             
                 E'O COUNTR.                                                        008  LM00016
 00343 TRA +0 02000 0 00346    00344 SXA +0 63400 2 00623    00345 TSX +0 07400 2 00623                                 
                 W'R FIRST                                                          009  LM00019
 00346 NZT -0 52000 0 00013    00347 TRA +0 02000 0 00415                                                               
                      DATE = COMARG. (1)                                            010  LM00020
 00350 TSX +0 07400 4 00002    00351 TXH +3 00000 0 00324    00352 STO +0 60100 0 00011                                 
                      YEAR = BCDEC. ( DATE .A. 7777K )                              011  LM00021
 00353 CAL -0 50000 0 00011    00354 ANA -0 32000 0 00340    00355 SLW +0 60200 0 00637    00356 TSX +0 07400 4 00001   
 00357 TXH +3 00000 0 00637    00360 STO +0 60100 0 00322                                                               
                      MONTH = BCDEC. ( (DATE .RS. 24) .A. 7777K )                   012  LM00022
 00361 CAL -0 50000 0 00334    00362 STA +0 62100 0 00364    00363 CAL -0 50000 0 00011    00364 LGR -0 76500 0 00000   
 00365 ANA -0 32000 0 00340    00366 SLW +0 60200 0 00637    00367 TSX +0 07400 4 00001    00370 TXH +3 00000 0 00637   
 00371 STO +0 60100 0 00155                                                                                             
                      DAY = BCDEC. ( (DATE .RS. 12) .A. 7777K )                     013  LM00023
 00372 CAL -0 50000 0 00331    00373 STA +0 62100 0 00375    00374 CAL -0 50000 0 00011    00375 LGR -0 76500 0 00000   
 00376 ANA -0 32000 0 00340    00377 SLW +0 60200 0 00637    00400 TSX +0 07400 4 00001    00401 TXH +3 00000 0 00637   
 00402 STO +0 60100 0 00012                                                                                             
                      NOW = ABSDAT. (MONTH, DAY, YEAR)                              014  LM00025
 00403 TSX +0 07400 4 00000    00404 TXH +3 00000 0 00155    00405 TXH +3 00000 0 00012    00406 TXH +3 00000 0 00322   
 00407 STO +0 60100 0 00157                                                                                             
                      FIRST = 0B                                                    015  LM00026
 00410 CLA +0 50000 0 00323    00411 STO +0 60100 0 00013                                                               
                 ZERO. (FTBL ... FTBL (90), RTBL ... RTBL (90) )                    016  LM00028
 00412 TSX +0 07400 4 00006    00413 TIX +2 00015 0 00147    00414 TIX +2 00165 0 00317                                 
                 E'L                                                                017  LM00029
                 W'R (BUFF (M4) .RS. 15) .A. 7K .E. 2                               018  LM00032
 00415 LXA +0 53400 1 00153    00416 CAL -0 50000 0 00332    00417 STA +0 62100 0 00421    00420 CAL -0 50000 1 00024   
 00421 LGR -0 76500 0 00000    00422 ANA -0 32000 0 00327    00423 SLW +0 60200 0 00637    00424 CLA +0 50000 0 00637   
 00425 SUB +0 40200 0 00325    00426 TNZ -0 10000 0 00514                                                               
                      TEMP = BUFF (M3) .RS. 18                                      019  LM00034
 00427 LXA +0 53400 1 00152    00430 CAL -0 50000 0 00333    00431 STA +0 62100 0 00433    00432 CAL -0 50000 1 00024   
 00433 LGR -0 76500 0 00000    00434 SLW +0 60200 0 00320                                                               
                      YEAR = TEMP .RS. 9                                            020  LM00035
 00435 CAL -0 50000 0 00330    00436 STA +0 62100 0 00440    00437 CAL -0 50000 0 00320    00440 LGR -0 76500 0 00000   
 00441 SLW +0 60200 0 00322                                                                                             
                      MONTH = TEMP .RS. 5 .A. 17K                                   021  LM00036
 00442 CAL -0 50000 0 00326    00443 STA +0 62100 0 00445    00444 CAL -0 50000 0 00320    00445 LGR -0 76500 0 00000   
 00446 ANA -0 32000 0 00332    00447 SLW +0 60200 0 00155                                                               
                      DAY = TEMP .A. 37 K                                           022  LM00037
 00450 CAL -0 50000 0 00320    00451 ANA -0 32000 0 00335    00452 SLW +0 60200 0 00012                                 
                      AGE = NOW - ABSDAT. (MONTH, DAY, YEAR)                        023  LM00038
 00453 TSX +0 07400 4 00000    00454 TXH +3 00000 0 00155    00455 TXH +3 00000 0 00012    00456 TXH +3 00000 0 00322   
 00457 CHS +0 76000 0 00002    00460 ADD +0 40000 0 00157    00461 STO +0 60100 0 00010                                 
                      W'R AGE .G. 90, AGE = 90                                      024  LM00039
 00462 CLA +0 50000 0 00010    00463 SUB +0 40200 0 00336    00464 TZE +0 10000 0 00470    00465 TMI -0 12000 0 00470   
 00466 CLA +0 50000 0 00336    00467 STO +0 60100 0 00010                                                               
                      W'R AGE .L. 0, AGE = 0                                        025  LM00040
 00470 CLA +0 50000 0 00010    00471 SUB +0 40200 0 00323    00472 TZE +0 10000 0 00476    00473 TPL +0 12000 0 00476   
 00474 CLA +0 50000 0 00323    00475 STO +0 60100 0 00010                                                               
                      NORECS = (BUFF (M5) .RS. 18) .A. 77777K                       026  LM00042
 00476 LXA +0 53400 1 00154    00477 CAL -0 50000 0 00333    00500 STA +0 62100 0 00502    00501 CAL -0 50000 1 00024   
 00502 LGR -0 76500 0 00000    00503 ANA -0 32000 0 00341    00504 SLW +0 60200 0 00156                                 
                      FTBL (AGE) = FTBL (AGE) + 1                                   027  LM00044
 00505 LXA +0 53400 1 00010    00506 CLA +0 50000 1 00147    00507 ADD +0 40000 0 00324    00510 STO +0 60100 1 00147   
                      RTBL (AGE) = RTBL (AGE) + NORECS                              028  LM00045
 00511 CLA +0 50000 1 00317    00512 ADD +0 40000 0 00156    00513 STO +0 60100 1 00317                                 
                 E'L                                                                029  LM00048
                 F'N                                                                030  LM00053
 00514 TRA +0 02000 0 00633                                                                                             
                 E'O FPRINT.                                                        031  LM00057
 00515 TRA +0 02000 0 00520    00516 SXA +0 63400 2 00623    00517 TSX +0 07400 2 00623                                 
                 PRINT COMMENT $AGE  FILES  OLDER  RECS   OLDER$                    032  LM00060
 00520 TSX +0 07400 4 00004    00521     +0 00000 0 00006    00522     +2 12725 6 06026    00523     +3 14325 6 26060   
 00524     -0 64324 2 55160    00525     -2 05125 2 36260    00526     -2 06046 4 32425    00527     -1 16060 6 06060   
                 PRINT COMMENT $ $                                                  033  LM00061
 00530 TSX +0 07400 4 00004    00531     +0 00000 0 00001    00532     -2 06060 6 06060                                 
                 T'H BETA, FOR K = 0, 1, K .G. 90                                   034  LM00063
 00533 CLA +0 50000 0 00323    00534 STO +0 60100 0 00151    00535 TRA +0 02000 0 00541    00536 CLA +0 50000 0 00151   
 00537 ADD +0 40000 0 00324    00540 STO +0 60100 0 00151    00541 CLA +0 50000 0 00151    00542 SUB +0 40200 0 00336   
 00543 TZE +0 10000 0 00545    00544 TPL +0 12000 0 00621                                                               
                 FOLDER = 0                                                         035  LM00064
 00545 CLA +0 50000 0 00323    00546 STO +0 60100 0 00014                                                               
                 ROLDER = 0                                                         036  LM00065
 00547 CLA +0 50000 0 00323    00550 STO +0 60100 0 00164                                                               
                 T'H ALPHA, FOR J = K, 1, J .G. 90                                  037  LM00067
 00551 CLA +0 50000 0 00151    00552 STO +0 60100 0 00150    00553 TRA +0 02000 0 00557    00554 CLA +0 50000 0 00150   
 00555 ADD +0 40000 0 00324    00556 STO +0 60100 0 00150    00557 CLA +0 50000 0 00150    00560 SUB +0 40200 0 00336   
 00561 TZE +0 10000 0 00563    00562 TPL +0 12000 0 00600                                                               
                 FOLDER = FOLDER + FTBL (J)                                         038  LM00068
 00563 LXA +0 53400 2 00150    00564 CLA +0 50000 0 00014    00565 ADD +0 40000 2 00147    00566 STO +0 60100 0 00014   
                 ROLDER = ROLDER + RTBL (J)                                         039  LM00069
 00567 CLA +0 50000 0 00164    00570 ADD +0 40000 2 00317    00571 STO +0 60100 0 00164                                 
                 VAR = ROLDER / 1000                                                040  LM00070
 00572 LDQ +0 56000 0 00164    00573 PXD -0 75400 0 00000    00574 LLS +0 76300 0 00000    00575 DVP +0 22100 0 00337   
 00576 STQ -0 60000 0 00321                                                                                             
      ALPHA      C'E                                                                041  LM00071
 00577 TRA +0 02000 0 00554                                                                                             
                 P'T OUTPT, K, FTBL (K), FOLDER, RTBL (K), ROLDER                   042  LM00073
 00600 TSX +0 07400 4 00005    00601 STR -1 00163 1 00642    00602 STR -1 00000 0 00151    00603 CLA +0 50000 0 00151   
 00604 SUB +0 40200 0 00605    00605 TXH +3 00000 0 00147    00606 STA +0 62100 0 00607    00607 STR -1 00000 0 00000   
 00610 STR -1 00000 0 00014    00611 CLA +0 50000 0 00151    00612 SUB +0 40200 0 00613    00613 TXH +3 00000 0 00317   
 00614 STA +0 62100 0 00615    00615 STR -1 00000 0 00000    00616 STR -1 00000 0 00164    00617 STR -1 00000 0 00000   
                 V'S OUTPT = $I3,S1,4I7,S2,'VAR'(1HX)*$                             043  LM00075
 00160     -3 40130 6 73454    00161     -3 31465 2 15114    00162     +0 43107 7 36202    00163     +3 10373 6 20173   
                 FORMAT VARIABLE VAR                                                044  LM00076
      BETA       C'E                                                                045  LM00078
 00620 TRA +0 02000 0 00536                                                                                             
                 F'N                                                                046  LM00082
 00621 TRA +0 02000 0 00633                                                                                             
                 E'N                                                                047  LM00086
 00622 TSX +0 07400 4 00003    00623 TXH +3 00000 0 00000    00624 SXD -0 63400 1 00623    00625 SXA +0 63400 4 00633   
 00626 CLA +0 50000 4 00003    00627 STA +0 62100 0 00420    00630 STA +0 62100 0 00432    00631 STA +0 62100 0 00501   
 00632 TRA +0 02000 2 00001    00633 AXT +0 77400 4 00000    00634 LXA +0 53400 2 00623    00635 LXD -0 53400 1 00623   
 00636 TRA +0 02000 4 00001                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE   PTEMP   MAD            02/09/69    0657.1
-                 
                    PTEMP - PRINTS OUT TEMPORARY DISK FILES FOR ALL OF SYSTEM                          LM00001    
                                                                                                       LM00002    
                    WRITTEN BY ROGER ROACH 6/8/67                                                      LM00003    
                                                                                                       LM00004    
                  EXTERNAL FUNCTION (PROBN,PROGN,BUFF)                                            *001 LM00005    
                  NORMAL MODE IS INTEGER                                                          *002 LM00006    
                  VECTOR VALUES COLON = 355757575757K                                             *003 LM00007    
                  VECTOR VALUES TAB1 = 557257575757K                                              *004 LM00008    
                  VECTOR VALUES TAB2 = 727257575757K                                              *005 LM00009    
                  VECTOR VALUES BL = 605757575757K                                                *006 LM00010    
                  VECTOR VALUES CR = 555757575757K                                                *007 LM00011    
                  VECTOR VALUES M1 = 77777K                                                       *008 LM00012    
                  VECTOR VALUES M3 = 77775K                                                       *009 LM00013    
                  VECTOR VALUES M4 = 77774K                                                       *010 LM00014    
                  VECTOR VALUES M5 = 77773K                                                       *011 LM00015    
                  VECTOR VALUES TOTAL = 0                                                         *012 LM00016    
                  VECTOR VALUES SUBTOT = 0                                                        *013 LM00017    
                  VECTOR VALUES COUNT = 0                                                         *014 LM00018    
                  VECTOR VALUES FIRST = 1B                                                        *015 LM00019    
                                                                                                       LM00020    
                  COUNTR - COUNTS TEMPORARY FILES                                                      LM00021    
                                                                                                       LM00022    
                  ENTRY TO COUNTR.                                                                *016 LM00023    
                  WHENEVER FIRST                                                                  *017 LM00024    
                       GETTM.(DATE,TIME)                                                          *018 LM00025    
                       PRMESS.(CR,CR,$TEMPORARY FILES$,DATE,TIME,CR,CR,                           *019 LM00026    
                1      $     NAME       MOD RECS  DATE$)                                          *019 LM00027    
                       FIRST = 0B                                                                 *020 LM00028    
                       END OF CONDITIONAL                                                         *021 LM00029    
                  N1 = BUFF                                                                       *022 LM00030    
                  N2 = BUFF(M1)                                                                   *023 LM00031    
                  WHENEVER N1.E.0 .AND. N2.E.0, FUNCTION RETURN                                   *024 LM00032    
                  MODE = (BUFF(M4).A.776K9).RS.28                                                 *025 LM00033    
                  AUTH = BZEL.(DERBC.(BUFF(M3)))                                                  *026 LM00034    
                  WHENEVER AUTH .E. PROGN, AUTH = $ $                                             *027 LM00035    
                  WHENEVER (MODE.A.1).NE. 1, FUNCTION RETURN                                      *028 LM00036    
                  DEVIC = (BUFF(M4).A.7K5).RS.15                                                  *029 LM00037    
                  WHENEVER DEVIC .NE. 2, FUNCTION RETURN                                          *030 LM00038    
                  NOREC = (BUFF(M5).RS.18).A.M1                                                   *031 LM00039    
                  WHENEVER PB .NE. PROBN .OR. PG .NE. PROGN                                       *032 LM00040    
                       SUBTOT = BZEL.(DERBC.(SUBTOT))                                             *033 LM00041    
                       WHENEVER SUBTOT.NE.$     0$,PRMESS.(TAB2,SUBTOT)                           *034 LM00042    
                       SUBTOT = 0                                                                 *035 LM00043    
                       PRMESS.(TAB1,PROBN,BL,PROGN,COLON)                                         *036 LM00044    
                       PB = PROBN                                                                 *037 LM00045    
                       PG = PROGN                                                                 *038 LM00046    
                       END OF CONDITIONAL                                                         *039 LM00047    
                                                                                                       LM00048    
                   PRINT FILE NAME, LENGTH ETC.                                                        LM00049    
                                                                                                       LM00050    
                  SUBTOT = SUBTOT + NOREC                                                         *040 LM00051    
                  TOTAL = TOTAL + NOREC                                                           *041 LM00052    
                  COUNT = COUNT + 1                                                               *042 LM00053    
                  MOD = (OCABC.(MODE)).V.606060K6                                                 *043 LM00054    
                  NOREC = BZEL.(DERBC.(NOREC))                                                    *044 LM00055    
                  TEMP = BUFF(M3).RS.18                                                           *045 LM00056    
                  MO = DERBC.((TEMP.RS.5).A.17K)                                                  *046 LM00057    
                  DA = DERBC.(TEMP.A.37K)                                                         *047 LM00058    
                  DATE = (MO.LS.18).V.DA.V.$ 00/00$                                               *048 LM00059    
                  PRMESS.(N1,BL,N2,MOD,NOREC,DATE,AUTH)                                           *049 LM00060    
                  FUNCTION RETURN                                                                 *050 LM00061    
                                                                                                       LM00062    
                                                                                                       LM00063    
                    FPRINT - FINAL PRINT OF TOTALS                                                     LM00064    
                                                                                                       LM00065    
                  ENTRY TO FPRINT.                                                                *051 LM00066    
                  COUNT = BZ57.(DERBC.(COUNT))                                                    *052 LM00067    
                  SUBTOT = BZEL.(DERBC.(SUBTOT))                                                  *053 LM00068    
                  PRMESS.(TAB2,SUBTOT)                                                            *054 LM00069    
                  TOTAL = BZEL.(DERBC.(TOTAL))                                                    *055 LM00070    
                  PRMESS.(CR,CR,CR,$TOTAL FILES =$,COUNT, $,  TOTAL RECORDS =$,                   *056 LM00071    
                1  TOTAL,CR,CR,CR)                                                                *056 LM00072    
                  FUNCTION RETURN                                                                 *057 LM00073    
                  END OF FUNCTION                                                                 *058 LM00074    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00465 TRANSFER VECTOR LENGTH  00007 PROGRAM BEGINS    00100
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      FPRINT 00361   0        COUNTR 00101   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      AUTH   00010   1        DATE   00016   1        M5     00024 A 1        N2     00031   1        TAB1   00036 A 1  
      BL     00011 A 1        DEVIC  00017   1        MODE   00025   1        NOREC  00032   1        TAB2   00037 A 1  
      COLON  00012 A 1        FIRST  00020 A 2        MOD    00026   1        PB     00033   1        TEMP   00040   1  
      COUNT  00013 A 1        M1     00021 A 1        MO     00027   1        PG     00034   1        TIME   00041   1  
      CR     00014 A 1        M3     00022 A 1        N1     00030   1        SUBTOT 00035 A 1        TOTAL  00042 A 1  
      DA     00015   1        M4     00023 A 1                                                                          
0FUNCTION DICTIONARY    
      BZ57   00000   1        BZEL   00001   1        DERBC  00002   1        EXIT   00003   1        GETTM  00004   1  
      OCABC  00005   1        PRMESS 00006   1                                                                          
0ABSOLUTE CONSTANTS     
 00064 -065124626013     00055 +214360512523     00076 -336060634663     00054 +136060606060     00062 +263143256260    
 00075 -234663214360     00065 -200000610000     00052 +000000000037     00046 +000000000005     00067 -206060000000    
 00071 -206060606000     00050 +000000000022     00045 +000000000002     00047 +000000000017     00053 +000000700000    
 00073 -206060606060     00051 +000000000034     00077 -376000000000     00043 +000000000000     00066 -206024216325    
 00061 +246051252362     00070 -206060604446     00056 +214425606060     00072 -206060606045     00063 -032562606060    
 00057 +215170602631     00074 -232544474651     00044 +000000000001     00060 +233000000000                            
0PROGRAM    
                 EXTERNAL FUNCTION (PROBN,PROGN,BUFF)                               001  LM00005
                 N'R                                                                002  LM00006
                 V'S COLON = 355757575757K                                          003  LM00007
 00012     +3 55757 5 75757                                                                                             
                 V'S TAB1 = 557257575757K                                           004  LM00008
 00036     -1 57257 5 75757                                                                                             
                 V'S TAB2 = 727257575757K                                           005  LM00009
 00037     -3 27257 5 75757                                                                                             
                 V'S BL = 605757575757K                                             006  LM00010
 00011     -2 05757 5 75757                                                                                             
                 V'S CR = 555757575757K                                             007  LM00011
 00014     -1 55757 5 75757                                                                                             
                 V'S M1 = 77777K                                                    008  LM00012
 00021     +0 00000 0 77777                                                                                             
                 V'S M3 = 77775K                                                    009  LM00013
 00022     +0 00000 0 77775                                                                                             
                 V'S M4 = 77774K                                                    010  LM00014
 00023     +0 00000 0 77774                                                                                             
                 V'S M5 = 77773K                                                    011  LM00015
 00024     +0 00000 0 77773                                                                                             
                 V'S TOTAL = 0                                                      012  LM00016
 00042     +0 00000 0 00000                                                                                             
                 V'S SUBTOT = 0                                                     013  LM00017
 00035     +0 00000 0 00000                                                                                             
                 V'S COUNT = 0                                                      014  LM00018
 00013     +0 00000 0 00000                                                                                             
                 V'S FIRST = 1B                                                     015  LM00019
 00020     +0 00000 0 00001                                                                                             
                 E'O COUNTR.                                                        016  LM00023
 00100 TRA +0 02000 0 00103    00101 SXA +0 63400 2 00431    00102 TSX +0 07400 2 00431                                 
                 W'R FIRST                                                          017  LM00024
 00103 NZT -0 52000 0 00020    00104 TRA +0 02000 0 00131                                                               
                      GETTM.(DATE,TIME)                                             018  LM00025
 00105 TSX +0 07400 4 00004    00106 TXH +3 00000 0 00016    00107 TXH +3 00000 0 00041                                 
                      PRMESS.(CR,CR,$TEMPORARY FILES$,DATE,TIME,CR,CR,              019  LM00026
                1     $     NAME       MOD RECS  DATE$)                             019  LM00027
 00110 TSX +0 07400 4 00006    00111 TXH +3 00000 0 00014    00112 TXH +3 00000 0 00014    00113 TXH +3 00000 0 00074   
 00114 TXH +3 00000 0 00057    00115 TXH +3 00000 0 00063    00116 TXH +3 00000 0 00016    00117 TXH +3 00000 0 00041   
 00120 TXH +3 00000 0 00014    00121 TXH +3 00000 0 00014    00122 TXH +3 00000 0 00072    00123 TXH +3 00000 0 00056   
 00124 TXH +3 00000 0 00070    00125 TXH +3 00000 0 00061    00126 TXH +3 00000 0 00066                                 
                      FIRST = 0B                                                    020  LM00028
 00127 CLA +0 50000 0 00043    00130 STO +0 60100 0 00020                                                               
                      E'L                                                           021  LM00029
                 N1 = BUFF                                                          022  LM00030
 00131 CLA +0 50000 0 00024    00132 STO +0 60100 0 00030                                                               
                 N2 = BUFF(M1)                                                      023  LM00031
 00133 LXA +0 53400 2 00021    00134 CLA +0 50000 2 00024    00135 STO +0 60100 0 00031                                 
                 W'R N1.E.0 .AND. N2.E.0, F'N                                       024  LM00032
 00136 CLA +0 50000 0 00031    00137 SUB +0 40200 0 00043    00140 TNZ -0 10000 0 00145    00141 CLA +0 50000 0 00030   
 00142 SUB +0 40200 0 00043    00143 TNZ -0 10000 0 00145    00144 TRA +0 02000 0 00456                                 
                 MODE = (BUFF(M4).A.776K9).RS.28                                    025  LM00033
 00145 LXA +0 53400 1 00023    00146 CAL -0 50000 1 00024    00147 ANA -0 32000 0 00077    00150 SLW +0 60200 0 00462   
 00151 CAL -0 50000 0 00051    00152 STA +0 62100 0 00154    00153 CAL -0 50000 0 00462    00154 LGR -0 76500 0 00000   
 00155 SLW +0 60200 0 00025                                                                                             
                 AUTH = BZEL.(DERBC.(BUFF(M3)))                                     026  LM00034
 00156 CLA +0 50000 0 00022    00157 SUB +0 40200 0 00160    00160 TXH +3 00000 0 00024    00161 STA +0 62100 0 00163   
 00162 TSX +0 07400 4 00002    00163 TXH +3 00000 0 00000    00164 STO +0 60100 0 00462    00165 TSX +0 07400 4 00001   
 00166 TXH +3 00000 0 00462    00167 STO +0 60100 0 00010                                                               
                 W'R AUTH .E. PROGN, AUTH = $ $                                     027  LM00035
 00170 CLA +0 50000 0 00010    00171 SUB +0 40200 0 00024    00172 TNZ -0 10000 0 00175    00173 CLA +0 50000 0 00073   
 00174 STO +0 60100 0 00010                                                                                             
                 W'R (MODE.A.1).NE. 1, F'N                                          028  LM00036
 00175 CAL -0 50000 0 00025    00176 ANA -0 32000 0 00044    00177 SLW +0 60200 0 00462    00200 CLA +0 50000 0 00462   
 00201 SUB +0 40200 0 00044    00202 TZE +0 10000 0 00204    00203 TRA +0 02000 0 00456                                 
                 DEVIC = (BUFF(M4).A.7K5).RS.15                                     029  LM00037
 00204 LXA +0 53400 1 00023    00205 CAL -0 50000 1 00024    00206 ANA -0 32000 0 00053    00207 SLW +0 60200 0 00462   
 00210 CAL -0 50000 0 00047    00211 STA +0 62100 0 00213    00212 CAL -0 50000 0 00462    00213 LGR -0 76500 0 00000   
 00214 SLW +0 60200 0 00017                                                                                             
                 W'R DEVIC .NE. 2, F'N                                              030  LM00038
 00215 CLA +0 50000 0 00017    00216 SUB +0 40200 0 00045    00217 TZE +0 10000 0 00221    00220 TRA +0 02000 0 00456   
                 NOREC = (BUFF(M5).RS.18).A.M1                                      031  LM00039
 00221 LXA +0 53400 1 00024    00222 CAL -0 50000 0 00050    00223 STA +0 62100 0 00225    00224 CAL -0 50000 1 00024   
 00225 LGR -0 76500 0 00000    00226 ANA -0 32000 0 00021    00227 SLW +0 60200 0 00032                                 
                 W'R PB .NE. PROBN .OR. PG .NE. PROGN                               032  LM00040
 00230 CLA +0 50000 0 00034    00231 SUB +0 40200 0 00024    00232 TNZ -0 10000 0 00236    00233 CLA +0 50000 0 00033   
 00234 SUB +0 40200 0 00024    00235 TZE +0 10000 0 00266                                                               
                      SUBTOT = BZEL.(DERBC.(SUBTOT))                                033  LM00041
 00236 TSX +0 07400 4 00002    00237 TXH +3 00000 0 00035    00240 STO +0 60100 0 00462    00241 TSX +0 07400 4 00001   
 00242 TXH +3 00000 0 00462    00243 STO +0 60100 0 00035                                                               
                      W'R SUBTOT.NE.$     0$,PRMESS.(TAB2,SUBTOT)                   034  LM00042
 00244 CLA +0 50000 0 00035    00245 SUB +0 40200 0 00071    00246 TZE +0 10000 0 00252    00247 TSX +0 07400 4 00006   
 00250 TXH +3 00000 0 00037    00251 TXH +3 00000 0 00035                                                               
                      SUBTOT = 0                                                    035  LM00043
 00252 CLA +0 50000 0 00043    00253 STO +0 60100 0 00035                                                               
                      PRMESS.(TAB1,PROBN,BL,PROGN,COLON)                            036  LM00044
 00254 TSX +0 07400 4 00006    00255 TXH +3 00000 0 00036    00256 TXH +3 00000 0 00024    00257 TXH +3 00000 0 00011   
 00260 TXH +3 00000 0 00024    00261 TXH +3 00000 0 00012                                                               
                      PB = PROBN                                                    037  LM00045
 00262 CLA +0 50000 0 00024    00263 STO +0 60100 0 00033                                                               
                      PG = PROGN                                                    038  LM00046
 00264 CLA +0 50000 0 00024    00265 STO +0 60100 0 00034                                                               
                      E'L                                                           039  LM00047
                 SUBTOT = SUBTOT + NOREC                                            040  LM00051
 00266 CLA +0 50000 0 00035    00267 ADD +0 40000 0 00032    00270 STO +0 60100 0 00035                                 
                 TOTAL = TOTAL + NOREC                                              041  LM00052
 00271 CLA +0 50000 0 00042    00272 ADD +0 40000 0 00032    00273 STO +0 60100 0 00042                                 
                 COUNT = COUNT + 1                                                  042  LM00053
 00274 CLA +0 50000 0 00013    00275 ADD +0 40000 0 00044    00276 STO +0 60100 0 00013                                 
                 MOD = (OCABC.(MODE)).V.606060K6                                    043  LM00054
 00277 TSX +0 07400 4 00005    00300 TXH +3 00000 0 00025    00301 STO +0 60100 0 00462    00302 CAL -0 50000 0 00462   
 00303 ORA -0 50100 0 00067    00304 SLW +0 60200 0 00026                                                               
                 NOREC = BZEL.(DERBC.(NOREC))                                       044  LM00055
 00305 TSX +0 07400 4 00002    00306 TXH +3 00000 0 00032    00307 STO +0 60100 0 00462    00310 TSX +0 07400 4 00001   
 00311 TXH +3 00000 0 00462    00312 STO +0 60100 0 00032                                                               
                 TEMP = BUFF(M3).RS.18                                              045  LM00056
 00313 LXA +0 53400 1 00022    00314 CAL -0 50000 0 00050    00315 STA +0 62100 0 00317    00316 CAL -0 50000 1 00024   
 00317 LGR -0 76500 0 00000    00320 SLW +0 60200 0 00040                                                               
                 MO = DERBC.((TEMP.RS.5).A.17K)                                     046  LM00057
 00321 CAL -0 50000 0 00046    00322 STA +0 62100 0 00324    00323 CAL -0 50000 0 00040    00324 LGR -0 76500 0 00000   
 00325 ANA -0 32000 0 00047    00326 SLW +0 60200 0 00462    00327 TSX +0 07400 4 00002    00330 TXH +3 00000 0 00462   
 00331 STO +0 60100 0 00027                                                                                             
                 DA = DERBC.(TEMP.A.37K)                                            047  LM00058
 00332 CAL -0 50000 0 00040    00333 ANA -0 32000 0 00052    00334 SLW +0 60200 0 00462    00335 TSX +0 07400 4 00002   
 00336 TXH +3 00000 0 00462    00337 STO +0 60100 0 00015                                                               
                 DATE = (MO.LS.18).V.DA.V.$ 00/00$                                  048  LM00059
 00340 CAL -0 50000 0 00050    00341 STA +0 62100 0 00343    00342 CAL -0 50000 0 00027    00343 ALS +0 76700 0 00000   
 00344 ORA -0 50100 0 00015    00345 ORA -0 50100 0 00065    00346 SLW +0 60200 0 00016                                 
                 PRMESS.(N1,BL,N2,MOD,NOREC,DATE,AUTH)                              049  LM00060
 00347 TSX +0 07400 4 00006    00350 TXH +3 00000 0 00030    00351 TXH +3 00000 0 00011    00352 TXH +3 00000 0 00031   
 00353 TXH +3 00000 0 00026    00354 TXH +3 00000 0 00032    00355 TXH +3 00000 0 00016    00356 TXH +3 00000 0 00010   
                 F'N                                                                050  LM00061
 00357 TRA +0 02000 0 00456                                                                                             
                 E'O FPRINT.                                                        051  LM00066
 00360 TRA +0 02000 0 00363    00361 SXA +0 63400 2 00431    00362 TSX +0 07400 2 00431                                 
                 COUNT = BZ57.(DERBC.(COUNT))                                       052  LM00067
 00363 TSX +0 07400 4 00002    00364 TXH +3 00000 0 00013    00365 STO +0 60100 0 00462    00366 TSX +0 07400 4 00000   
 00367 TXH +3 00000 0 00462    00370 STO +0 60100 0 00013                                                               
                 SUBTOT = BZEL.(DERBC.(SUBTOT))                                     053  LM00068
 00371 TSX +0 07400 4 00002    00372 TXH +3 00000 0 00035    00373 STO +0 60100 0 00462    00374 TSX +0 07400 4 00001   
 00375 TXH +3 00000 0 00462    00376 STO +0 60100 0 00035                                                               
                 PRMESS.(TAB2,SUBTOT)                                               054  LM00069
 00377 TSX +0 07400 4 00006    00400 TXH +3 00000 0 00037    00401 TXH +3 00000 0 00035                                 
                 TOTAL = BZEL.(DERBC.(TOTAL))                                       055  LM00070
 00402 TSX +0 07400 4 00002    00403 TXH +3 00000 0 00042    00404 STO +0 60100 0 00462    00405 TSX +0 07400 4 00001   
 00406 TXH +3 00000 0 00462    00407 STO +0 60100 0 00042                                                               
                 PRMESS.(CR,CR,CR,$TOTAL FILES =$,COUNT, $,  TOTAL RECORDS =$,      056  LM00071
                1 TOTAL,CR,CR,CR)                                                   056  LM00072
 00410 TSX +0 07400 4 00006    00411 TXH +3 00000 0 00014    00412 TXH +3 00000 0 00014    00413 TXH +3 00000 0 00014   
 00414 TXH +3 00000 0 00075    00415 TXH +3 00000 0 00062    00416 TXH +3 00000 0 00054    00417 TXH +3 00000 0 00013   
 00420 TXH +3 00000 0 00076    00421 TXH +3 00000 0 00055    00422 TXH +3 00000 0 00064    00423 TXH +3 00000 0 00042   
 00424 TXH +3 00000 0 00014    00425 TXH +3 00000 0 00014    00426 TXH +3 00000 0 00014                                 
                 F'N                                                                057  LM00073
 00427 TRA +0 02000 0 00456                                                                                             
                 E'N                                                                058  LM00074
 00430 TSX +0 07400 4 00003    00431 TXH +3 00000 0 00000    00432 SXD -0 63400 1 00431    00433 SXA +0 63400 4 00456   
 00434 CLA +0 50000 4 00001    00435 STA +0 62100 0 00234    00436 STO +0 60100 0 00256    00437 STA +0 62100 0 00262   
 00440 CLA +0 50000 4 00002    00441 STA +0 62100 0 00171    00442 STA +0 62100 0 00231    00443 STO +0 60100 0 00260   
 00444 STA +0 62100 0 00264    00445 CLA +0 50000 4 00003    00446 STA +0 62100 0 00131    00447 STA +0 62100 0 00134   
 00450 STA +0 62100 0 00146    00451 STO +0 60100 0 00160    00452 STA +0 62100 0 00205    00453 STA +0 62100 0 00224   
 00454 STA +0 62100 0 00316    00455 TRA +0 02000 2 00001    00456 AXT +0 77400 4 00000    00457 LXA +0 53400 2 00431   
 00460 LXD -0 53400 1 00431    00461 TRA +0 02000 4 00001                                                               




 AUDIT   BCD 10/12/70 1514.4    8710         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   AUDIT   MAD            02/15/68    1319.3
-                 
                      PROGRAM TO AUDIT LENGTHS OF COMMANDS                                             LM00001    
                      AND CHECK FOR ANOMALIES                                                          LM00002    
                                                                                                       LM00003    
                      LOADING INSTRUCTIONS                                                             LM00004    
                                                                                                       LM00005    
                           MAD AUDIT (LIST)                                                            LM00006    
                           NCLOAD AUDIT (CFL1) (LIBE) XLIBE                                            LM00007    
                           SAVE AUDIT                                                                  LM00008    
                           R AUDIT                                                                     LM00009    
                                                                                                       LM00010    
                      D.R. WIDRIG  DEC. 1965                                                           LM00011    
                                                                                                       LM00012    
                  NORMAL MODE IS INTEGER                                                          *001 LM00013    
                  BOOLEAN SW                                                                      *002 LM00014    
                                                                                                       LM00015    
                  DIMENSION DRAIN(7),V(2),BUFF1(432),BUFF2(432)                                   *003 LM00016    
                  DIMENSION COMAND(600),DIR(400)                                                  *004 LM00017    
                                                                                                       LM00018    
                  VECTOR VALUES M = $ M1416$                                                      *005 LM00019    
                  VECTOR VALUES CF2 = $CMFL02$                                                    *006 LM00020    
                  VECTOR VALUES UFD = $U.F.D.$                                                    *007 LM00021    
                  VECTOR VALUES FILE = $(FILE)$                                                   *008 LM00022    
                  VECTOR VALUES TSSDC = $TSSDC.$                                                  *009 LM00023    
                                                                                                       LM00024    
                  VECTOR VALUES MZE = 4K11                                                        *010 LM00025    
                  VECTOR VALUES R = 432                                                           *011 LM00026    
                                                                                                       LM00027    
                  VECTOR VALUES MESS1 = 0,$ TSSDC. LENGTH IS $,0,777777777777K                    *012 LM00028    
                  VECTOR VALUES MESS2 = 0,$ TSSDC. NOT FOUND$,777777777777K                       *013 LM00029    
                  VECTOR VALUES MESS3 = $CANNOT CONTINUE$,777777777777K                           *014 LM00030    
                  VECTOR VALUES MESS4 = $     PRIVILEGED COMMAND $,0,                             *015 LM00031    
                1      $ TSSDC. IS LINKED$,777777777777K                                          *015 LM00032    
                  VECTOR VALUES MESS5 = $LINKED COMMAND... $,0,$ TSSDC.$,                         *016 LM00033    
                1      777777777777K                                                              *016 LM00034    
                  VECTOR VALUES MESS6 = $ MODE $,0,$ FOR COMMAND FILE $,0,                        *017 LM00035    
                1      $ TSSDC.$,777777777777K                                                    *017 LM00036    
                                                                                                       LM00037    
                      REMEMBERING WHERE YOU WERE, ATTACH TO COMFIL 2                                   LM00038    
                                                                                                       LM00039    
                  ATTNAM.(V(2)...2,ERR1)                                                          *018 LM00040    
                  ATTACH.(M,CF2,ERR1)                                                             *019 LM00041    
                                                                                                       LM00042    
                      SET POINTERS AND GET MAX. ALLOWABLE LENGTH                                       LM00043    
                                                                                                       LM00044    
                  C = 0                                                                           *020 LM00045    
                  D = 0                                                                           *021 LM00046    
                  LMAX = 4096 + 37 + 124                                                          *022 LM00047    
                                                                                                       LM00048    
                      OPEN UFD AND DRAIN OFF QUOTA WORDS                                               LM00049    
                                                                                                       LM00050    
                  BFOPEN.($R$,UFD,FILE,BUFF1(R),BUFF2(R),MZE,ERR1)                                *023 LM00051    
                  BFREAD.(UFD,FILE,DRAIN(3)...3,REOF,EOFCT,ERR2)                                  *024 LM00052    
                                                                                                       LM00053    
                      READ UFD AND TEST FOR COMMAND FILE                                               LM00054    
                                                                                                       LM00055    
      READ        BFREAD.(UFD,FILE,DRAIN(7)...7,REOF,EOFCT,ERR2)                                  *025 LM00056    
                  WHENEVER (DRAIN(6) .NE. TSSDC), TRANSFER TO READ                                *026 LM00057    
                                                                                                       LM00058    
                      COMMAND FILE, GET LENGTH                                                         LM00059    
                                                                                                       LM00060    
                  FSTATE.(DRAIN(7),DRAIN(6),DRAIN(2)...2,ERR3,ERCODE)                             *027 LM00061    
                  COMAND(C) = DRAIN(7)                                                            *028 LM00062    
                  COMAND(C+1) = DRAIN(2)                                                          *029 LM00063    
                  COMAND(C+2) = DRAIN(1)                                                          *030 LM00064    
                  C = C + 3                                                                       *031 LM00065    
                  TRANSFER TO READ                                                                *032 LM00066    
                                                                                                       LM00067    
                      ERROR FROM FSTATE, CHECK IT                                                      LM00068    
                                                                                                       LM00069    
      ERR3        WHENEVER (ERCODE .NE. 3)                                                        *033 LM00070    
                       COMAND(C) = DRAIN(7)                                                       *034 LM00071    
                       COMAND(C+1) = 0                                                            *035 LM00072    
                       COMAND(C+2) = MZE                                                          *036 LM00073    
                       C = C +3                                                                   *037 LM00074    
                       TRANSFER TO READ                                                           *038 LM00075    
                  OTHERWISE                                                                       *039 LM00076    
                       PRNTER.                                                                    *040 LM00077    
                       TRANSFER TO READ                                                           *041 LM00078    
                  END OF CONDITIONAL                                                              *042 LM00079    
                                                                                                       LM00080    
                      EOF, DIG INTO SUPERVISOR COMMAND DIRECTORY                                       LM00081    
                                                                                                       LM00082    
      REOF        COMDIR = ACORE.($COMDIR$) .RS. 18                                               *043 LM00083    
                  CTABL = GLOC.(COMDIR) .A. 77777K - 1                                            *044 LM00084    
                  LENGTH = GLOC.(COMDIR) .RS. 18                                                  *045 LM00085    
                  STOP = CTABL - LENGTH + 1                                                       *046 LM00086    
                                                                                                       LM00087    
                  THROUGH LOOP2, FOR I = CTABL,-3,(I.L.STOP)                                      *047 LM00088    
                       WORD = GLOC.(I-1)                                                          *048 LM00089    
                       CONTRL = WORD .RS. 33                                                      *049 LM00090    
                       POINTR = (WORD .RS. 18) .A. 77777K                                         *050 LM00091    
                                                                                                       LM00092    
                      TEST FOR TRANSFER COMMANDS                                                       LM00093    
                                                                                                       LM00094    
                       WHENEVER (POINTR .E. 0), TRANSFER TO LOOP2                                 *051 LM00095    
                       DIR(D) = GLOC.(POINTR)                                                     *052 LM00096    
                       DIR(D+1) = CONTRL                                                          *053 LM00097    
                       D = D + 2                                                                  *054 LM00098    
      LOOP2       CONTINUE                                                                        *055 LM00099    
                                                                                                       LM00100    
                      NOW MATCH TWO COMMAND LISTS                                                      LM00101    
                                                                                                       LM00102    
                  THROUGH LOOP4, FOR I = 0,3,(I.GE.C)                                             *056 LM00103    
                                                                                                       LM00104    
                      CHECK FOR LINKED COMMAND AND MODE                                                LM00105    
                                                                                                       LM00106    
                       WHENEVER ((COMAND(I+2).RS.35).NE.0)                                        *057 LM00107    
                            MESS5(3) = COMAND(I)                                                  *058 LM00108    
                            PRNTP.(MESS5)                                                         *059 LM00109    
                       OR WHENEVER (COMAND(I+2).NE.104K)                                          *060 LM00110    
                            MESS6(5) = COMAND(I)                                                  *061 LM00111    
                            MESS6(1) = OCRBC.(COMAND(I+2)) .V. 575757K6                           *062 LM00112    
                            PRNTP.(MESS6)                                                         *063 LM00113    
                       END OF CONDITIONAL                                                         *064 LM00114    
                                                                                                       LM00115    
                      CHECK FOR DUMMY LENGTHS                                                          LM00116    
                                                                                                       LM00117    
                       WHENEVER (COMAND(I+1) .E. 0)                                               *065 LM00118    
                            MESS1(0) = COMAND(I)                                                  *066 LM00119    
                            MESS1(4) = 575757576000K                                              *067 LM00120    
                            PRNTP.(MESS1)                                                         *068 LM00121    
                       END OF CONDITIONAL                                                         *069 LM00122    
                                                                                                       LM00123    
                       SW = 0B                                                                    *070 LM00124    
                       THROUGH LOOP3, FOR J = 0,2,(J.GE.D)                                        *071 LM00125    
                            WHENEVER COMAND(I) .NE. DIR(J)                                        *072 LM00126    
                                 TRANSFER TO LOOP3                                                *073 LM00127    
                            OTHERWISE                                                             *074 LM00128    
                                 WHENEVER (DIR(J+1).E.2).AND.                                     *075 LM00129    
                1                (COMAND(I+2).RS.35).NE.0                                         *075 LM00130    
                                      MESS4(4) = DIR(J)                                           *076 LM00131    
                                      PRNTP.(MESS4)                                               *077 LM00132    
                                 END OF CONDITIONAL                                               *078 LM00133    
                                 DIR(J) = 0                                                       *079 LM00134    
                                 SW = 1B                                                          *080 LM00135    
                            END OF CONDITIONAL                                                    *081 LM00136    
      LOOP3            CONTINUE                                                                   *082 LM00137    
                       WHENEVER SW, TRANSFER TO LOOP4                                             *083 LM00138    
                                                                                                       LM00139    
                      NOT IN DIRECTORY, CHECK LENGTH                                                   LM00140    
                                                                                                       LM00141    
                       WHENEVER (COMAND(I+1) .G. LMAX)                                            *084 LM00142    
                            MESS1(0) = COMAND(I)                                                  *085 LM00143    
                            MESS1(4) = BZEL.(DERBC.(COMAND(I+1)))                                 *086 LM00144    
                            PRNTP.(MESS1)                                                         *087 LM00145    
                       END OF CONDITIONAL                                                         *088 LM00146    
      LOOP4       CONTINUE                                                                        *089 LM00147    
                                                                                                       LM00148    
                      NOW CHECK FOR COMMANDS NOT FOUND                                                 LM00149    
                                                                                                       LM00150    
                  THROUGH LOOP5, FOR I = 0,2,(I.GE.D)                                             *090 LM00151    
                       WHENEVER DIR(I) .NE. 0                                                     *091 LM00152    
                            MESS2(0) = DIR(I)                                                     *092 LM00153    
                            PRNTP.(MESS2)                                                         *093 LM00154    
                       END OF CONDITIONAL                                                         *094 LM00155    
      LOOP5       CONTINUE                                                                        *095 LM00156    
                                                                                                       LM00157    
      SCRAM       ATTACH.(V(2),V(1),NERR1)                                                        *096 LM00158    
      NERR1       CHNCOM.(0)                                                                      *097 LM00159    
                                                                                                       LM00160    
      ERR1        PRNTER.                                                                         *098 LM00161    
                  PRNTP.(MESS3)                                                                   *099 LM00162    
                  TRANSFER TO SCRAM                                                               *100 LM00163    
                                                                                                       LM00164    
      ERR2        PRNTER.                                                                         *101 LM00165    
                  PRNTP.(MESS3)                                                                   *102 LM00166    
                  BFCLOS.(UFD,FILE,SCRAM)                                                         *103 LM00167    
                  TRANSFER TO SCRAM                                                               *104 LM00168    
                                                                                                       LM00169    
                  END OF PROGRAM                                                                  *105 LM00170    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   04435 TRANSFER VECTOR LENGTH  00020 PROGRAM BEGINS    03702
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BUFF1  00713 A 1        DRAIN  03563 A 1        J      03571   1        MESS3  03612 A 1        REOF   00031   4  
      BUFF2  01574 A 1        D      03564   1        LENGTH 03572   1        MESS4  03623 A 1        R      03647 A 1  
      CF2    01575 A 1        EOFCT  03565   1        LMAX   03573   1        MESS5  03632 A 1        SCRAM  00032   4  
      COMAND 02726 A 1        ERCODE 03566   1        LOOP2  00024   4        MESS6  03643 A 1        STOP   03650   1  
      COMDIR 02727   1        ERR1   00021   4        LOOP3  00025   4        M      03644 A 1        SW     03651   2  
      CONTRL 02730   1        ERR2   00022   4        LOOP4  00026   4        MZE    03645 A 1        TSSDC  03652 A 1  
      C      02731   1        ERR3   00023   4        LOOP5  00020   4        NERR1  00027   4        UFD    03653 A 1  
      CTABL  02732   1        FILE   03567 A 1        MESS1  03601 A 1        POINTR 03646   1        V      03656 A 1  
      DIR    03553 A 1        I      03570   1        MESS2  03606 A 1        READ   00030   4        WORD   03657   1  
0FUNCTION DICTIONARY    
      ACORE  00000   1        ATTACH 00001   1        ATTNAM 00002   1        BFCLOS 00003   1        BFOPEN 00004   1  
      BFREAD 00005   1        BZEL   00006   1        CHNCOM 00007   1        DERBC  00010   1        EXIT   00011   1  
      FSTATE 00012   1        GLOC   00013   1        .SETUP 00014   1        OCRBC  00015   1        PRNTER 00016   1  
      PRNTP  00017   1                                                                                                  
0ABSOLUTE CONSTANTS     
 03701 -175757576000     03700 -175757000000     03671 +000000000104     03667 +000000000043     03666 +000000000041    
 03674 +000000077777     03665 +000000000022     03676 +234644243151     03664 +000000000007     03663 +000000000003    
 03677 -116060606060     03672 +000000000174     03670 +000000000045     03673 +000000010000     03660 +000000000000    
 03662 +000000000002     03661 +000000000001     03675 +233000000000                                                    
0STATEMENT DICTIONARY   
 00021 TXL -304416004415       00022 TXL -304422004421       00023 TXL -304016004013       00024 TXL -304153004152      
 00025 TXL -304330004327       00026 TXL -304363004362       00027 TXL -304415004413       00030 TXL -303760003751      
 00031 TXL -304052004042       00032 TXL -304413004407                                                                  
0PROGRAM    
                 N'R                                                                001  LM00013
                 B'N SW                                                             002  LM00014
                 D'N DRAIN(7),V(2),BUFF1(432),BUFF2(432)                            003  LM00016
                 D'N COMAND(600),DIR(400)                                           004  LM00017
                 V'S M = $ M1416$                                                   005  LM00019
 03702 TSX +0 07400 4 00014    03644     -2 04401 0 40106                                                               
                 V'S CF2 = $CMFL02$                                                 006  LM00020
 01575     +2 34426 4 30002                                                                                             
                 V'S UFD = $U.F.D.$                                                 007  LM00021
 03653     -2 43326 3 32433                                                                                             
                 V'S FILE = $(FILE)$                                                008  LM00022
 03567     -3 42631 4 32534                                                                                             
                 V'S TSSDC = $TSSDC.$                                               009  LM00023
 03652     -2 36262 2 42333                                                                                             
                 V'S MZE = 4K11                                                     010  LM00025
 03645     -0 00000 0 00000                                                                                             
                 V'S R = 432                                                        011  LM00026
 03647     +0 00000 0 00660                                                                                             
                 V'S MESS1 = 0,$ TSSDC. LENGTH IS $,0,777777777777K                 012  LM00028
 03574     -3 77777 7 77777    03575     +0 00000 0 00000    03576     -2 33060 3 16260    03577     +3 36043 2 54527   
 03600     -2 06362 6 22423    03601     +0 00000 0 00000                                                               
                 V'S MESS2 = 0,$ TSSDC. NOT FOUND$,777777777777K                    013  LM00029
 03602     -3 77777 7 77777    03603     +2 64664 4 52460    03604     +3 36045 4 66360    03605     -2 06362 6 22423   
 03606     +0 00000 0 00000                                                                                             
                 V'S MESS3 = $CANNOT CONTINUE$,777777777777K                        014  LM00030
 03607     -3 77777 7 77777    03610     -0 56425 6 06060    03611     -2 02346 4 56331    03612     +2 32145 4 54663   
                 V'S MESS4 = $     PRIVILEGED COMMAND $,0,                          015  LM00031
                1     $ TSSDC. IS LINKED$,777777777777K                             015  LM00032
 03613     -3 77777 7 77777    03614     +3 14542 2 52460    03615     +3 36031 6 26043    03616     -2 06362 6 22423   
 03617     +0 00000 0 00000    03620     -0 44421 4 52460    03621     +2 72524 6 02346    03622     -1 13165 3 14325   
 03623     -2 06060 6 06047                                                                                             
                 V'S MESS5 = $LINKED COMMAND... $,0,$ TSSDC.$,                      016  LM00033
                1     777777777777K                                                 016  LM00034
 03624     -3 77777 7 77777    03625     +3 36060 6 06060    03626     -2 06362 6 22423    03627     +0 00000 0 00000   
 03630     -0 52433 3 33360    03631     -2 02346 4 44421    03632     -0 33145 4 22524                                 
                 V'S MESS6 = $ MODE $,0,$ FOR COMMAND FILE $,0,                     017  LM00035
                1     $ TSSDC.$,777777777777K                                       017  LM00036
 03633     -3 77777 7 77777    03634     +3 36060 6 06060    03635     -2 06362 6 22423    03636     +0 00000 0 00000   
 03637     -2 02631 4 32560    03640     -0 64444 2 14524    03641     -2 02646 5 16023    03642     +0 00000 0 00000   
 03643     -2 04446 2 42560                                                                                             
                 ATTNAM.(V(2)...2,ERR1)                                             018  LM00040
 03703 TSX +0 07400 4 00002    03704 TIX +2 03662 0 03654    03705 TXH +3 00000 0 00021                                 
                 ATTACH.(M,CF2,ERR1)                                                019  LM00041
 03706 TSX +0 07400 4 00001    03707 TXH +3 00000 0 03644    03710 TXH +3 00000 0 01575    03711 TXH +3 00000 0 00021   
                 C = 0                                                              020  LM00045
 03712 CLA +0 50000 0 03660    03713 STO +0 60100 0 02731                                                               
                 D = 0                                                              021  LM00046
 03714 CLA +0 50000 0 03660    03715 STO +0 60100 0 03564                                                               
                 LMAX = 4096 + 37 + 124                                             022  LM00047
 03716 CLA +0 50000 0 03673    03717 ADD +0 40000 0 03670    03720 ADD +0 40000 0 03672    03721 STO +0 60100 0 03573   
                 BFOPEN.($R$,UFD,FILE,BUFF1(R),BUFF2(R),MZE,ERR1)                   023  LM00051
 03722 CLA +0 50000 0 03647    03723 SUB +0 40200 0 03724    03724 TXH +3 00000 0 01574    03725 STA +0 62100 0 03737   
 03726 CLA +0 50000 0 03647    03727 SUB +0 40200 0 03730    03730 TXH +3 00000 0 00713    03731 STA +0 62100 0 03736   
 03732 TSX +0 07400 4 00004    03733 TXH +3 00000 0 03677    03734 TXH +3 00000 0 03653    03735 TXH +3 00000 0 03567   
 03736 TXH +3 00000 0 00000    03737 TXH +3 00000 0 00000    03740 TXH +3 00000 0 03645    03741 TXH +3 00000 0 00021   
                 BFREAD.(UFD,FILE,DRAIN(3)...3,REOF,EOFCT,ERR2)                     024  LM00052
 03742 TSX +0 07400 4 00005    03743 TXH +3 00000 0 03653    03744 TXH +3 00000 0 03567    03745 TIX +2 03663 0 03560   
 03746 TXH +3 00000 0 00031    03747 TXH +3 00000 0 03565    03750 TXH +3 00000 0 00022                                 
      READ       BFREAD.(UFD,FILE,DRAIN(7)...7,REOF,EOFCT,ERR2)                     025  LM00056
 03751 TSX +0 07400 4 00005    03752 TXH +3 00000 0 03653    03753 TXH +3 00000 0 03567    03754 TIX +2 03664 0 03554   
 03755 TXH +3 00000 0 00031    03756 TXH +3 00000 0 03565    03757 TXH +3 00000 0 00022                                 
                 W'R (DRAIN(6) .NE. TSSDC), T'O READ                                026  LM00057
 03760 CLA +0 50000 0 03555    03761 SUB +0 40200 0 03652    03762 TZE +0 10000 0 03764    03763 TRA +0 02000 0 00030   
                 FSTATE.(DRAIN(7),DRAIN(6),DRAIN(2)...2,ERR3,ERCODE)                027  LM00061
 03764 TSX +0 07400 4 00012    03765 TXH +3 00000 0 03554    03766 TXH +3 00000 0 03555    03767 TIX +2 03662 0 03561   
 03770 TXH +3 00000 0 00023    03771 TXH +3 00000 0 03566                                                               
                 COMAND(C) = DRAIN(7)                                               028  LM00062
 03772 LXA +0 53400 1 02731    03773 CLA +0 50000 0 03554    03774 STO +0 60100 1 02726                                 
                 COMAND(C+1) = DRAIN(2)                                             029  LM00063
 03775 CLA +0 50000 0 02731    03776 ADD +0 40000 0 03661    03777 PAX +0 73400 1 00000    04000 CLA +0 50000 0 03561   
 04001 STO +0 60100 1 02726                                                                                             
                 COMAND(C+2) = DRAIN(1)                                             030  LM00064
 04002 CLA +0 50000 0 02731    04003 ADD +0 40000 0 03662    04004 PAX +0 73400 1 00000    04005 CLA +0 50000 0 03562   
 04006 STO +0 60100 1 02726                                                                                             
                 C = C + 3                                                          031  LM00065
 04007 CLA +0 50000 0 02731    04010 ADD +0 40000 0 03663    04011 STO +0 60100 0 02731                                 
                 T'O READ                                                           032  LM00066
 04012 TRA +0 02000 0 00030                                                                                             
      ERR3       W'R (ERCODE .NE. 3)                                                033  LM00070
 04013 CLA +0 50000 0 03566    04014 SUB +0 40200 0 03663    04015 TZE +0 10000 0 04040                                 
                      COMAND(C) = DRAIN(7)                                          034  LM00071
 04016 LXA +0 53400 1 02731    04017 CLA +0 50000 0 03554    04020 STO +0 60100 1 02726                                 
                      COMAND(C+1) = 0                                               035  LM00072
 04021 CLA +0 50000 0 02731    04022 ADD +0 40000 0 03661    04023 PAX +0 73400 1 00000    04024 CLA +0 50000 0 03660   
 04025 STO +0 60100 1 02726                                                                                             
                      COMAND(C+2) = MZE                                             036  LM00073
 04026 CLA +0 50000 0 02731    04027 ADD +0 40000 0 03662    04030 PAX +0 73400 1 00000    04031 CLA +0 50000 0 03645   
 04032 STO +0 60100 1 02726                                                                                             
                      C = C +3                                                      037  LM00074
 04033 CLA +0 50000 0 02731    04034 ADD +0 40000 0 03663    04035 STO +0 60100 0 02731                                 
                      T'O READ                                                      038  LM00075
 04036 TRA +0 02000 0 00030                                                                                             
                 O'E                                                                039  LM00076
 04037 TRA +0 02000 0 04042                                                                                             
                      PRNTER.                                                       040  LM00077
 04040 TSX +0 07400 4 00016                                                                                             
                      T'O READ                                                      041  LM00078
 04041 TRA +0 02000 0 00030                                                                                             
                 E'L                                                                042  LM00079
      REOF       COMDIR = ACORE.($COMDIR$) .RS. 18                                  043  LM00083
 04042 TSX +0 07400 4 00000    04043 TXH +3 00000 0 03676    04044 STO +0 60100 0 04432    04045 CAL -0 50000 0 03665   
 04046 STA +0 62100 0 04050    04047 CAL -0 50000 0 04432    04050 LGR -0 76500 0 00000    04051 SLW +0 60200 0 02727   
                 CTABL = GLOC.(COMDIR) .A. 77777K - 1                               044  LM00084
 04052 TSX +0 07400 4 00013    04053 TXH +3 00000 0 02727    04054 STO +0 60100 0 04432    04055 CAL -0 50000 0 04432   
 04056 ANA -0 32000 0 03674    04057 SLW +0 60200 0 04432    04060 CLA +0 50000 0 04432    04061 SUB +0 40200 0 03661   
 04062 STO +0 60100 0 02732                                                                                             
                 LENGTH = GLOC.(COMDIR) .RS. 18                                     045  LM00085
 04063 TSX +0 07400 4 00013    04064 TXH +3 00000 0 02727    04065 STO +0 60100 0 04432    04066 CAL -0 50000 0 03665   
 04067 STA +0 62100 0 04071    04070 CAL -0 50000 0 04432    04071 LGR -0 76500 0 00000    04072 SLW +0 60200 0 03572   
                 STOP = CTABL - LENGTH + 1                                          046  LM00086
 04073 CLA +0 50000 0 02732    04074 SUB +0 40200 0 03572    04075 ADD +0 40000 0 03661    04076 STO +0 60100 0 03650   
                 T'H LOOP2, FOR I = CTABL,-3,(I.L.STOP)                             047  LM00088
 04077 CLA +0 50000 0 02732    04100 STO +0 60100 0 03570    04101 TRA +0 02000 0 04105    04102 CLS +0 50200 0 03663   
 04103 ADD +0 40000 0 03570    04104 STO +0 60100 0 03570    04105 CLA +0 50000 0 03570    04106 SUB +0 40200 0 03650   
 04107 TZE +0 10000 0 04111    04110 TMI -0 12000 0 04153                                                               
                      WORD = GLOC.(I-1)                                             048  LM00089
 04111 CLA +0 50000 0 03570    04112 SUB +0 40200 0 03661    04113 STO +0 60100 0 04432    04114 TSX +0 07400 4 00013   
 04115 TXH +3 00000 0 04432    04116 STO +0 60100 0 03657                                                               
                      CONTRL = WORD .RS. 33                                         049  LM00090
 04117 CAL -0 50000 0 03666    04120 STA +0 62100 0 04122    04121 CAL -0 50000 0 03657    04122 LGR -0 76500 0 00000   
 04123 SLW +0 60200 0 02730                                                                                             
                      POINTR = (WORD .RS. 18) .A. 77777K                            050  LM00091
 04124 CAL -0 50000 0 03665    04125 STA +0 62100 0 04127    04126 CAL -0 50000 0 03657    04127 LGR -0 76500 0 00000   
 04130 ANA -0 32000 0 03674    04131 SLW +0 60200 0 03646                                                               
                      W'R (POINTR .E. 0), T'O LOOP2                                 051  LM00095
 04132 CLA +0 50000 0 03646    04133 SUB +0 40200 0 03660    04134 TNZ -0 10000 0 04136    04135 TRA +0 02000 0 00024   
                      DIR(D) = GLOC.(POINTR)                                        052  LM00096
 04136 TSX +0 07400 4 00013    04137 TXH +3 00000 0 03646    04140 LXA +0 53400 1 03564    04141 STO +0 60100 1 03553   
                      DIR(D+1) = CONTRL                                             053  LM00097
 04142 CLA +0 50000 0 03564    04143 ADD +0 40000 0 03661    04144 PAX +0 73400 1 00000    04145 CLA +0 50000 0 02730   
 04146 STO +0 60100 1 03553                                                                                             
                      D = D + 2                                                     054  LM00098
 04147 CLA +0 50000 0 03564    04150 ADD +0 40000 0 03662    04151 STO +0 60100 0 03564                                 
      LOOP2      C'E                                                                055  LM00099
 04152 TRA +0 02000 0 04102                                                                                             
                 T'H LOOP4, FOR I = 0,3,(I.GE.C)                                    056  LM00103
 04153 CLA +0 50000 0 03660    04154 STO +0 60100 0 03570    04155 TRA +0 02000 0 04161    04156 CLA +0 50000 0 03570   
 04157 ADD +0 40000 0 03663    04160 STO +0 60100 0 03570    04161 CLA +0 50000 0 03570    04162 SUB +0 40200 0 02731   
 04163 TZE +0 10000 0 04363    04164 TPL +0 12000 0 04363                                                               
                      W'R ((COMAND(I+2).RS.35).NE.0)                                057  LM00107
 04165 CLA +0 50000 0 03570    04166 ADD +0 40000 0 03662    04167 PAX +0 73400 1 00000    04170 CAL -0 50000 0 03667   
 04171 STA +0 62100 0 04173    04172 CAL -0 50000 1 02726    04173 LGR -0 76500 0 00000    04174 SLW +0 60200 0 04432   
 04175 CLA +0 50000 0 04432    04176 SUB +0 40200 0 03660    04177 TZE +0 10000 0 04206                                 
                           MESS5(3) = COMAND(I)                                     058  LM00108
 04200 LXA +0 53400 2 03570    04201 CLA +0 50000 2 02726    04202 STO +0 60100 0 03627                                 
                           PRNTP.(MESS5)                                            059  LM00109
 04203 TSX +0 07400 4 00017    04204 TXH +3 00000 0 03632                                                               
                      O'R (COMAND(I+2).NE.104K)                                     060  LM00110
 04205 TRA +0 02000 0 04234    04206 CLA +0 50000 0 03570    04207 ADD +0 40000 0 03662    04210 PAX +0 73400 1 00000   
 04211 CLA +0 50000 1 02726    04212 SUB +0 40200 0 03671    04213 TZE +0 10000 0 04234                                 
                           MESS6(5) = COMAND(I)                                     061  LM00111
 04214 LXA +0 53400 2 03570    04215 CLA +0 50000 2 02726    04216 STO +0 60100 0 03636                                 
                           MESS6(1) = OCRBC.(COMAND(I+2)) .V. 575757K6              062  LM00112
 04217 CLA +0 50000 0 03570    04220 ADD +0 40000 0 03662    04221 SUB +0 40200 0 04222    04222 TXH +3 00000 0 02726   
 04223 STA +0 62100 0 04225    04224 TSX +0 07400 4 00015    04225 TXH +3 00000 0 00000    04226 STO +0 60100 0 04432   
 04227 CAL -0 50000 0 04432    04230 ORA -0 50100 0 03700    04231 SLW +0 60200 0 03642                                 
                           PRNTP.(MESS6)                                            063  LM00113
 04232 TSX +0 07400 4 00017    04233 TXH +3 00000 0 03643                                                               
                      E'L                                                           064  LM00114
                      W'R (COMAND(I+1) .E. 0)                                       065  LM00118
 04234 CLA +0 50000 0 03570    04235 ADD +0 40000 0 03661    04236 PAX +0 73400 1 00000    04237 CLA +0 50000 1 02726   
 04240 SUB +0 40200 0 03660    04241 TNZ -0 10000 0 04251                                                               
                           MESS1(0) = COMAND(I)                                     066  LM00119
 04242 LXA +0 53400 2 03570    04243 CLA +0 50000 2 02726    04244 STO +0 60100 0 03601                                 
                           MESS1(4) = 575757576000K                                 067  LM00120
 04245 CLA +0 50000 0 03701    04246 STO +0 60100 0 03575                                                               
                           PRNTP.(MESS1)                                            068  LM00121
 04247 TSX +0 07400 4 00017    04250 TXH +3 00000 0 03601                                                               
                      E'L                                                           069  LM00122
                      SW = 0B                                                       070  LM00124
 04251 CLA +0 50000 0 03660    04252 STO +0 60100 0 03651                                                               
                      T'H LOOP3, FOR J = 0,2,(J.GE.D)                               071  LM00125
 04253 CLA +0 50000 0 03660    04254 STO +0 60100 0 03571    04255 TRA +0 02000 0 04261    04256 CLA +0 50000 0 03571   
 04257 ADD +0 40000 0 03662    04260 STO +0 60100 0 03571    04261 CLA +0 50000 0 03571    04262 SUB +0 40200 0 03564   
 04263 TZE +0 10000 0 04330    04264 TPL +0 12000 0 04330                                                               
                           W'R COMAND(I) .NE. DIR(J)                                072  LM00126
 04265 LXA +0 53400 1 03570    04266 LXA +0 53400 2 03571    04267 CLA +0 50000 1 02726    04270 SUB +0 40200 2 03553   
 04271 TZE +0 10000 0 04274                                                                                             
                                T'O LOOP3                                           073  LM00127
 04272 TRA +0 02000 0 00025                                                                                             
                           O'E                                                      074  LM00128
 04273 TRA +0 02000 0 04327                                                                                             
                                W'R (DIR(J+1).E.2).AND.                             075  LM00129
                1               (COMAND(I+2).RS.35).NE.0                            075  LM00130
 04274 CLA +0 50000 0 03570    04275 ADD +0 40000 0 03662    04276 PAX +0 73400 1 00000    04277 CAL -0 50000 0 03667   
 04300 STA +0 62100 0 04302    04301 CAL -0 50000 1 02726    04302 LGR -0 76500 0 00000    04303 SLW +0 60200 0 04432   
 04304 CLA +0 50000 0 04432    04305 SUB +0 40200 0 03660    04306 TZE +0 10000 0 04322    04307 CLA +0 50000 0 03571   
 04310 ADD +0 40000 0 03661    04311 PAX +0 73400 1 00000    04312 CLA +0 50000 1 03553    04313 SUB +0 40200 0 03662   
 04314 TNZ -0 10000 0 04322                                                                                             
                                     MESS4(4) = DIR(J)                              076  LM00131
 04315 LXA +0 53400 2 03571    04316 CLA +0 50000 2 03553    04317 STO +0 60100 0 03617                                 
                                     PRNTP.(MESS4)                                  077  LM00132
 04320 TSX +0 07400 4 00017    04321 TXH +3 00000 0 03623                                                               
                                E'L                                                 078  LM00133
                                DIR(J) = 0                                          079  LM00134
 04322 LXA +0 53400 1 03571    04323 CLA +0 50000 0 03660    04324 STO +0 60100 1 03553                                 
                                SW = 1B                                             080  LM00135
 04325 CLA +0 50000 0 03661    04326 STO +0 60100 0 03651                                                               
                           E'L                                                      081  LM00136
      LOOP3           C'E                                                           082  LM00137
 04327 TRA +0 02000 0 04256                                                                                             
                      W'R SW, T'O LOOP4                                             083  LM00138
 04330 NZT -0 52000 0 03651    04331 TRA +0 02000 0 04333    04332 TRA +0 02000 0 00026                                 
                      W'R (COMAND(I+1) .G. LMAX)                                    084  LM00142
 04333 CLA +0 50000 0 03570    04334 ADD +0 40000 0 03661    04335 PAX +0 73400 1 00000    04336 CLA +0 50000 1 02726   
 04337 SUB +0 40200 0 03573    04340 TZE +0 10000 0 04362    04341 TMI -0 12000 0 04362                                 
                           MESS1(0) = COMAND(I)                                     085  LM00143
 04342 LXA +0 53400 2 03570    04343 CLA +0 50000 2 02726    04344 STO +0 60100 0 03601                                 
                           MESS1(4) = BZEL.(DERBC.(COMAND(I+1)))                    086  LM00144
 04345 CLA +0 50000 0 03570    04346 ADD +0 40000 0 03661    04347 SUB +0 40200 0 04350    04350 TXH +3 00000 0 02726   
 04351 STA +0 62100 0 04353    04352 TSX +0 07400 4 00010    04353 TXH +3 00000 0 00000    04354 STO +0 60100 0 04432   
 04355 TSX +0 07400 4 00006    04356 TXH +3 00000 0 04432    04357 STO +0 60100 0 03575                                 
                           PRNTP.(MESS1)                                            087  LM00145
 04360 TSX +0 07400 4 00017    04361 TXH +3 00000 0 03601                                                               
                      E'L                                                           088  LM00146
      LOOP4      C'E                                                                089  LM00147
 04362 TRA +0 02000 0 04156                                                                                             
                 T'H LOOP5, FOR I = 0,2,(I.GE.D)                                    090  LM00151
 04363 CLA +0 50000 0 03660    04364 STO +0 60100 0 03570    04365 TRA +0 02000 0 04371    04366 CLA +0 50000 0 03570   
 04367 ADD +0 40000 0 03662    04370 STO +0 60100 0 03570    04371 CLA +0 50000 0 03570    04372 SUB +0 40200 0 03564   
 04373 TZE +0 10000 0 04407    04374 TPL +0 12000 0 04407                                                               
                      W'R DIR(I) .NE. 0                                             091  LM00152
 04375 LXA +0 53400 1 03570    04376 CLA +0 50000 1 03553    04377 SUB +0 40200 0 03660    04400 TZE +0 10000 0 04406   
                           MESS2(0) = DIR(I)                                        092  LM00153
 04401 LXA +0 53400 2 03570    04402 CLA +0 50000 2 03553    04403 STO +0 60100 0 03606                                 
                           PRNTP.(MESS2)                                            093  LM00154
 04404 TSX +0 07400 4 00017    04405 TXH +3 00000 0 03606                                                               
                      E'L                                                           094  LM00155
      LOOP5      C'E                                                                095  LM00156
 04406 TRA +0 02000 0 04366                                                                                             
      SCRAM      ATTACH.(V(2),V(1),NERR1)                                           096  LM00158
 04407 TSX +0 07400 4 00001    04410 TXH +3 00000 0 03654    04411 TXH +3 00000 0 03655    04412 TXH +3 00000 0 00027   
      NERR1      CHNCOM.(0)                                                         097  LM00159
 04413 TSX +0 07400 4 00007    04414 TXH +3 00000 0 03660                                                               
      ERR1       PRNTER.                                                            098  LM00161
 04415 TSX +0 07400 4 00016                                                                                             
                 PRNTP.(MESS3)                                                      099  LM00162
 04416 TSX +0 07400 4 00017    04417 TXH +3 00000 0 03612                                                               
                 T'O SCRAM                                                          100  LM00163
 04420 TRA +0 02000 0 00032                                                                                             
      ERR2       PRNTER.                                                            101  LM00165
 04421 TSX +0 07400 4 00016                                                                                             
                 PRNTP.(MESS3)                                                      102  LM00166
 04422 TSX +0 07400 4 00017    04423 TXH +3 00000 0 03612                                                               
                 BFCLOS.(UFD,FILE,SCRAM)                                            103  LM00167
 04424 TSX +0 07400 4 00003    04425 TXH +3 00000 0 03653    04426 TXH +3 00000 0 03567    04427 TXH +3 00000 0 00032   
                 T'O SCRAM                                                          104  LM00168
 04430 TRA +0 02000 0 00032                                                                                             
                 E'M                                                                105  LM00170
 04431 TSX +0 07400 4 00011                                                                                             




BACKUP   BCD 10/12/70 1514.4    4381         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  BACKUP   MAD            02/25/69    1223.9
-                 
      BACKUP      PROGRAM TO BACKUP CTSS SYSTEMS                                                       LM00001    
                                                                                                       LM00002    
                  THE PROGRAM WILL READ A CTSSLD FILE AND CREATE A                                     LM00003    
                  COMBINED FILE OF ALL THE BSS FILES SPECIFIED IN                                      LM00004    
                  THE CTSSLD FILE.                                                                     LM00005    
                                                                                                       LM00006    
                  STAN DUNTEN (MODIFIED 2/25/69 BY RAR)                                                LM00007    
                                                                                                       LM00008    
                  FNI=COMARG.(1)                                                                  *001 LM00009    
                  FNBO=COMARG.(2)                                                                 *002 LM00010    
                  WHENEVER FNI.E.FEN .OR. FNBO.E.FEN                                              *003 LM00011    
                     PRMESS.($R BACKUP SYSTEM BACKUP$)                                            *004 LM00012    
                     EXITM.                                                                       *005 LM00013    
                  END OF CONDITIONAL                                                              *006 LM00014    
                  FERRTN.(DSKER.)                                                                 *007 LM00015    
                  VECTOR VALUES FEN=777777777777K                                                 *008 LM00016    
                                                                                                       LM00017    
                  GETBUF.(A,N)                                                                    *009 LM00018    
                  GETBUF.(B,432)                                                                  *010 LM00019    
                  FNCO=FNBO                                                                       *011 LM00020    
                  DELETE.(FNCO(0),FNCO(1),1,EXITM.)                                               *012 LM00021    
                  DELETE.(FNBO(0),FNBO(1),1,EXITM.)                                               *013 LM00022    
                  OPEN.($R$,FNI,$CTSSLD$)                                                         *014 LM00023    
                  RDFILE.(FNI,$CTSSLD$,0,A(A+N)...N,EOFC,EOFCT)                                   *015 LM00024    
      EOFC        CLOSE.(FNI,$CTSSLD$)                                                            *016 LM00025    
                  JMAX=N                                                                          *017 LM00026    
                  THROUGH SQ, FOR I=N,-14,I.LE.N-EOFCT                                            *018 LM00027    
                  A(A+JMAX)=A(A+I)                                                                *019 LM00028    
                  JMAX=JMAX-1                                                                     *020 LM00029    
      SQ          CONTINUE                                                                        *021 LM00030    
                  J=N                                                                             *022 LM00031    
                  N=(JMAX/432)*432                                                                *023 LM00032    
                  I=N                                                                             *024 LM00033    
                  OPEN.($W$,FNBO,$   BSS$)                                                        *025 LM00034    
                  BUFFER.(FNBO,$   BSS$,B(B+432)...432)                                           *026 LM00035    
      LOOP        WHENEVER J.LE.JMAX, TRANSFER TO END                                             *027 LM00036    
                  OPEN.($R$,A(A+J),$   BSS$)                                                      *028 LM00037    
      L1          RDFILE.(A(A+J),$   BSS$,0,A(A+I)...I,EOF,EOFCT)                                 *029 LM00038    
                  FWAIT.(A(A+J),$   BSS$)                                                         *030 LM00039    
                  WRWAIT.(FNBO,$   BSS$,0,A(A+N)...N)                                             *031 LM00040    
                  I=N                                                                             *032 LM00041    
                  TRANSFER TO L1                                                                  *033 LM00042    
      EOF         I=I-EOFCT                                                                       *034 LM00043    
                  CLOSE.(A(A+J),$   BSS$)                                                         *035 LM00044    
                  J=J-1                                                                           *036 LM00045    
                  TRANSFER TO LOOP                                                                *037 LM00046    
      END         X=N-I                                                                           *038 LM00047    
                  WRFILE.(FNBO,$   BSS$,0,A(A+N)...X)                                             *039 LM00048    
                  CLOSE.(FNBO,$   BSS$)                                                           *040 LM00049    
                  OPEN.($W$,FNCO,$CTSSLD$)                                                        *041 LM00050    
                  C(14)=FNBO                                                                      *042 LM00051    
                  C(11)=FNI                                                                       *043 LM00052    
                  WRFILE.(FNCO,$CTSSLD$,0,C(14)...14)                                             *044 LM00053    
                  CLOSE.(FNCO,$CTSSLD$)                                                           *045 LM00054    
                  VECTOR VALUES C(14)=0                                                           *046 LM00055    
                  VECTOR VALUES C(13)=$ BACKU$                                                    *047 LM00056    
                  VECTOR VALUES C(12)=$P TO$                                                      *048 LM00057    
                  VECTOR VALUES C(1)=$                                     $                      *049 LM00058    
                  VECTOR VALUES C(7)=$                              $                             *050 LM00059    
                  EXITM.                                                                          *051 LM00060    
                  VECTOR VALUES N=6000                                                            *052 LM00061    
                  VECTOR VALUES FNCO(1)=$CTSSLD$                                                  *053 LM00062    
                  VECTOR VALUES FNBO(1)=$   BSS$                                                  *054 LM00063    
                  DIMENSION A(0),B(0)                                                             *055 LM00064    
                  NORMAL MODE IS INTEGER                                                          *056 LM00065    
                  END OF PROGRAM                                                                  *057 LM00066    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00425 TRANSFER VECTOR LENGTH  00020 PROGRAM BEGINS    00101
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      A      00026 A 1        EOFC   00022   4        FNBO   00052 A 1        JMAX   00057   1        N      00061 A 1  
      B      00027 A 1        EOFCT  00047   1        FNCO   00054 A 1        J      00060   1        SQ     00020   4  
      C      00046 A 1        EOF    00023   4        FNI    00055   1        L1     00024   4        X      00062   1  
      END    00021   4        FEN    00050 A 1        I      00056   1        LOOP   00025   4                          
0FUNCTION DICTIONARY    
      BUFFER 00000   1        CLOSE  00001   1        COMARG 00002   1        DELETE 00003   1        DSKER  00004   1  
      EXITM  00005   1        EXIT   00006   1        FERRTN 00007   1        FWAIT  00010   1        GETBUF 00011   1  
      .SETUP 00012   1        OPEN   00013   1        PRMESS 00014   1        RDFILE 00015   1        WRFILE 00016   1  
      WRWAIT 00017   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00075 -206060226262     00100 -266060606060     00066 +000000000016     00063 +000000000000     00072 +236362624324    
 00074 -116060606060     00067 +000000000660     00071 +234264476060     00076 -232544602221     00077 -244760627062    
 00073 -116022212342     00065 +000000000002     00064 +000000000001     00070 +233000000000                            
0STATEMENT DICTIONARY   
 00021 TXL -300363000360       00022 TXL -300173000170       00023 TXL -300344000341       00024 TXL -300314000273      
 00025 TXL -300262000255                                                                                                
0PROGRAM    
                 FNI=COMARG.(1)                                                     001  LM00009
 00101 TSX +0 07400 4 00012    00102 TSX +0 07400 4 00002    00103 TXH +3 00000 0 00064    00104 STO +0 60100 0 00055   
                 FNBO=COMARG.(2)                                                    002  LM00010
 00105 TSX +0 07400 4 00002    00106 TXH +3 00000 0 00065    00107 STO +0 60100 0 00052                                 
                 W'R FNI.E.FEN .OR. FNBO.E.FEN                                      003  LM00011
 00110 CLA +0 50000 0 00052    00111 SUB +0 40200 0 00050    00112 TZE +0 10000 0 00116    00113 CLA +0 50000 0 00055   
 00114 SUB +0 40200 0 00050    00115 TNZ -0 10000 0 00124                                                               
                    PRMESS.($R BACKUP SYSTEM BACKUP$)                               004  LM00012
 00116 TSX +0 07400 4 00014    00117 TXH +3 00000 0 00073    00120 TXH +3 00000 0 00077    00121 TXH +3 00000 0 00076   
 00122 TXH +3 00000 0 00071                                                                                             
                    EXITM.                                                          005  LM00013
 00123 TSX +0 07400 4 00005                                                                                             
                 E'L                                                                006  LM00014
                 FERRTN.(DSKER.)                                                    007  LM00015
 00124 TSX +0 07400 4 00007    00125 TXH +3 00000 0 00004                                                               
                 V'S FEN=777777777777K                                              008  LM00016
 00050     -3 77777 7 77777                                                                                             
                 GETBUF.(A,N)                                                       009  LM00018
 00126 TSX +0 07400 4 00011    00127 TXH +3 00000 0 00026    00130 TXH +3 00000 0 00061                                 
                 GETBUF.(B,432)                                                     010  LM00019
 00131 TSX +0 07400 4 00011    00132 TXH +3 00000 0 00027    00133 TXH +3 00000 0 00067                                 
                 FNCO=FNBO                                                          011  LM00020
 00134 CLA +0 50000 0 00052    00135 STO +0 60100 0 00054                                                               
                 DELETE.(FNCO(0),FNCO(1),1,EXITM.)                                  012  LM00021
 00136 TSX +0 07400 4 00003    00137 TXH +3 00000 0 00054    00140 TXH +3 00000 0 00053    00141 TXH +3 00000 0 00064   
 00142 TXH +3 00000 0 00005                                                                                             
                 DELETE.(FNBO(0),FNBO(1),1,EXITM.)                                  013  LM00022
 00143 TSX +0 07400 4 00003    00144 TXH +3 00000 0 00052    00145 TXH +3 00000 0 00051    00146 TXH +3 00000 0 00064   
 00147 TXH +3 00000 0 00005                                                                                             
                 OPEN.($R$,FNI,$CTSSLD$)                                            014  LM00023
 00150 TSX +0 07400 4 00013    00151 TXH +3 00000 0 00074    00152 TXH +3 00000 0 00055    00153 TXH +3 00000 0 00072   
                 RDFILE.(FNI,$CTSSLD$,0,A(A+N)...N,EOFC,EOFCT)                      015  LM00024
 00154 CLA +0 50000 0 00026    00155 ADD +0 40000 0 00061    00156 SUB +0 40200 0 00157    00157 TXH +3 00000 0 00026   
 00160 STA +0 62100 0 00165    00161 TSX +0 07400 4 00015    00162 TXH +3 00000 0 00055    00163 TXH +3 00000 0 00072   
 00164 TXH +3 00000 0 00063    00165 TIX +2 00061 0 00000    00166 TXH +3 00000 0 00022    00167 TXH +3 00000 0 00047   
      EOFC       CLOSE.(FNI,$CTSSLD$)                                               016  LM00025
 00170 TSX +0 07400 4 00001    00171 TXH +3 00000 0 00055    00172 TXH +3 00000 0 00072                                 
                 JMAX=N                                                             017  LM00026
 00173 CLA +0 50000 0 00061    00174 STO +0 60100 0 00057                                                               
                 T'H SQ, FOR I=N,-14,I.LE.N-EOFCT                                   018  LM00027
 00175 CLA +0 50000 0 00061    00176 STO +0 60100 0 00056    00177 TRA +0 02000 0 00203    00200 CLS +0 50200 0 00066   
 00201 ADD +0 40000 0 00056    00202 STO +0 60100 0 00056    00203 CLA +0 50000 0 00061    00204 SUB +0 40200 0 00047   
 00205 CHS +0 76000 0 00002    00206 ADD +0 40000 0 00056    00207 TZE +0 10000 0 00226    00210 TMI -0 12000 0 00226   
                 A(A+JMAX)=A(A+I)                                                   019  LM00028
 00211 CLA +0 50000 0 00026    00212 ADD +0 40000 0 00056    00213 STO +0 60100 0 00422    00214 CLA +0 50000 0 00026   
 00215 ADD +0 40000 0 00057    00216 PAX +0 73400 1 00000    00217 LXA +0 53400 2 00422    00220 CLA +0 50000 2 00026   
 00221 STO +0 60100 1 00026                                                                                             
                 JMAX=JMAX-1                                                        020  LM00029
 00222 CLA +0 50000 0 00057    00223 SUB +0 40200 0 00064    00224 STO +0 60100 0 00057                                 
      SQ         CONTINUE                                                           021  LM00030
 00225 TRA +0 02000 0 00200                                                                                             
                 J=N                                                                022  LM00031
 00226 CLA +0 50000 0 00061    00227 STO +0 60100 0 00060                                                               
                 N=(JMAX/432)*432                                                   023  LM00032
 00230 LDQ +0 56000 0 00057    00231 PXD -0 75400 0 00000    00232 LLS +0 76300 0 00000    00233 DVP +0 22100 0 00067   
 00234 MPY +0 20000 0 00067    00235 STQ -0 60000 0 00061                                                               
                 I=N                                                                024  LM00033
 00236 CLA +0 50000 0 00061    00237 STO +0 60100 0 00056                                                               
                 OPEN.($W$,FNBO,$   BSS$)                                           025  LM00034
 00240 TSX +0 07400 4 00013    00241 TXH +3 00000 0 00100    00242 TXH +3 00000 0 00052    00243 TXH +3 00000 0 00075   
                 BUFFER.(FNBO,$   BSS$,B(B+432)...432)                              026  LM00035
 00244 CLA +0 50000 0 00027    00245 ADD +0 40000 0 00067    00246 SUB +0 40200 0 00247    00247 TXH +3 00000 0 00027   
 00250 STA +0 62100 0 00254    00251 TSX +0 07400 4 00000    00252 TXH +3 00000 0 00052    00253 TXH +3 00000 0 00075   
 00254 TIX +2 00067 0 00000                                                                                             
      LOOP       W'R J.LE.JMAX, T'O END                                             027  LM00036
 00255 CLA +0 50000 0 00060    00256 SUB +0 40200 0 00057    00257 TZE +0 10000 0 00261    00260 TPL +0 12000 0 00262   
 00261 TRA +0 02000 0 00021                                                                                             
                 OPEN.($R$,A(A+J),$   BSS$)                                         028  LM00037
 00262 CLA +0 50000 0 00026    00263 ADD +0 40000 0 00060    00264 SUB +0 40200 0 00265    00265 TXH +3 00000 0 00026   
 00266 STA +0 62100 0 00271    00267 TSX +0 07400 4 00013    00270 TXH +3 00000 0 00074    00271 TXH +3 00000 0 00000   
 00272 TXH +3 00000 0 00075                                                                                             
      L1         RDFILE.(A(A+J),$   BSS$,0,A(A+I)...I,EOF,EOFCT)                    029  LM00038
 00273 CLA +0 50000 0 00026    00274 ADD +0 40000 0 00056    00275 SUB +0 40200 0 00276    00276 TXH +3 00000 0 00026   
 00277 STA +0 62100 0 00311    00300 CLA +0 50000 0 00026    00301 ADD +0 40000 0 00060    00302 SUB +0 40200 0 00303   
 00303 TXH +3 00000 0 00026    00304 STA +0 62100 0 00306    00305 TSX +0 07400 4 00015    00306 TXH +3 00000 0 00000   
 00307 TXH +3 00000 0 00075    00310 TXH +3 00000 0 00063    00311 TIX +2 00056 0 00000    00312 TXH +3 00000 0 00023   
 00313 TXH +3 00000 0 00047                                                                                             
                 FWAIT.(A(A+J),$   BSS$)                                            030  LM00039
 00314 CLA +0 50000 0 00026    00315 ADD +0 40000 0 00060    00316 SUB +0 40200 0 00317    00317 TXH +3 00000 0 00026   
 00320 STA +0 62100 0 00322    00321 TSX +0 07400 4 00010    00322 TXH +3 00000 0 00000    00323 TXH +3 00000 0 00075   
                 WRWAIT.(FNBO,$   BSS$,0,A(A+N)...N)                                031  LM00040
 00324 CLA +0 50000 0 00026    00325 ADD +0 40000 0 00061    00326 SUB +0 40200 0 00327    00327 TXH +3 00000 0 00026   
 00330 STA +0 62100 0 00335    00331 TSX +0 07400 4 00017    00332 TXH +3 00000 0 00052    00333 TXH +3 00000 0 00075   
 00334 TXH +3 00000 0 00063    00335 TIX +2 00061 0 00000                                                               
                 I=N                                                                032  LM00041
 00336 CLA +0 50000 0 00061    00337 STO +0 60100 0 00056                                                               
                 T'O L1                                                             033  LM00042
 00340 TRA +0 02000 0 00024                                                                                             
      EOF        I=I-EOFCT                                                          034  LM00043
 00341 CLA +0 50000 0 00056    00342 SUB +0 40200 0 00047    00343 STO +0 60100 0 00056                                 
                 CLOSE.(A(A+J),$   BSS$)                                            035  LM00044
 00344 CLA +0 50000 0 00026    00345 ADD +0 40000 0 00060    00346 SUB +0 40200 0 00347    00347 TXH +3 00000 0 00026   
 00350 STA +0 62100 0 00352    00351 TSX +0 07400 4 00001    00352 TXH +3 00000 0 00000    00353 TXH +3 00000 0 00075   
                 J=J-1                                                              036  LM00045
 00354 CLA +0 50000 0 00060    00355 SUB +0 40200 0 00064    00356 STO +0 60100 0 00060                                 
                 T'O LOOP                                                           037  LM00046
 00357 TRA +0 02000 0 00025                                                                                             
      END        X=N-I                                                              038  LM00047
 00360 CLA +0 50000 0 00061    00361 SUB +0 40200 0 00056    00362 STO +0 60100 0 00062                                 
                 WRFILE.(FNBO,$   BSS$,0,A(A+N)...X)                                039  LM00048
 00363 CLA +0 50000 0 00026    00364 ADD +0 40000 0 00061    00365 SUB +0 40200 0 00366    00366 TXH +3 00000 0 00026   
 00367 STA +0 62100 0 00374    00370 TSX +0 07400 4 00016    00371 TXH +3 00000 0 00052    00372 TXH +3 00000 0 00075   
 00373 TXH +3 00000 0 00063    00374 TIX +2 00062 0 00000                                                               
                 CLOSE.(FNBO,$   BSS$)                                              040  LM00049
 00375 TSX +0 07400 4 00001    00376 TXH +3 00000 0 00052    00377 TXH +3 00000 0 00075                                 
                 OPEN.($W$,FNCO,$CTSSLD$)                                           041  LM00050
 00400 TSX +0 07400 4 00013    00401 TXH +3 00000 0 00100    00402 TXH +3 00000 0 00054    00403 TXH +3 00000 0 00072   
                 C(14)=FNBO                                                         042  LM00051
 00404 CLA +0 50000 0 00052    00405 STO +0 60100 0 00030                                                               
                 C(11)=FNI                                                          043  LM00052
 00406 CLA +0 50000 0 00055    00407 STO +0 60100 0 00033                                                               
                 WRFILE.(FNCO,$CTSSLD$,0,C(14)...14)                                044  LM00053
 00410 TSX +0 07400 4 00016    00411 TXH +3 00000 0 00054    00412 TXH +3 00000 0 00072    00413 TXH +3 00000 0 00063   
 00414 TIX +2 00066 0 00030                                                                                             
                 CLOSE.(FNCO,$CTSSLD$)                                              045  LM00054
 00415 TSX +0 07400 4 00001    00416 TXH +3 00000 0 00054    00417 TXH +3 00000 0 00072                                 
                 V'S C(14)=0                                                        046  LM00055
 00030     +0 00000 0 00000                                                                                             
                 V'S C(13)=$ BACKU$                                                 047  LM00056
 00031     -2 02221 2 34264                                                                                             
                 V'S C(12)=$P TO$                                                   048  LM00057
 00032     -0 76063 4 66060                                                                                             
                 V'S C(1)=$                                     $                   049  LM00058
 00037     -2 06060 6 06060    00040     -2 06060 6 06060    00041     -2 06060 6 06060    00042     -2 06060 6 06060   
 00043     -2 06060 6 06060    00044     -2 06060 6 06060    00045     -2 06060 6 06060                                 
                 V'S C(7)=$                              $                          050  LM00059
 00033     -2 06060 6 06060    00034     -2 06060 6 06060    00035     -2 06060 6 06060    00036     -2 06060 6 06060   
 00037     -2 06060 6 06060                                                                                             
                 EXITM.                                                             051  LM00060
 00420 TSX +0 07400 4 00005                                                                                             
                 V'S N=6000                                                         052  LM00061
 00061     +0 00000 0 13560                                                                                             
                 V'S FNCO(1)=$CTSSLD$                                               053  LM00062
 00053     +2 36362 6 24324                                                                                             
                 V'S FNBO(1)=$   BSS$                                               054  LM00063
 00051     -2 06060 2 26262                                                                                             
                 D'N A(0),B(0)                                                      055  LM00064
                 N'R                                                                056  LM00065
                 E'M                                                                057  LM00066
 00421 TSX +0 07400 4 00006                                                                                             




 CALIB   BCD 09/20/68 0219.7    2093         00000    
1                                                                                                PAGE 1     
                  
                  
        TRANSFER VECTOR 
      00000  334751314563     .PRINT
                  
      00001  0774 00 0 00000  *EVEN*
                  
      00002  0760 00 0 00016         LMTM 
      00003  0600 00 0 00005         STZ     5  
      00004  0074 00 4 00361         TSX     CLOCON,4 
      00005 -0500 00 0 00332         CAL     7TRA     
      00006  0602 00 0 00007         SLW     7  
      00007  0600 00 0 00006         STZ     6  
      00010  0774 00 1 00000         AXT     0,1
      00011  0500 00 0 00375         CLA     =614     
      00012  0760 00 0 00006         COM  
      00013 -0320 00 0 00401         ANA     =O377777777777 
      00014  0602 00 0 00005         SLW     5  
      00015 -0340 00 0 00005         LAS     5  
      00016  0000 00 0 00016         HTR     *  
      00017  0020 00 0 00015         TRA     *-2
      00020  0020 00 0 00022         TRA     TEST1    
      00021  0774 00 0 00000         EVEN 
                       00022  TEST1  DUP     2,99     
      00022  0625 00 0 00360         STT     TEM
      00023  0131 00 0 00000         XCA  
      00024  0625 00 0 00360  
      00025  0131 00 0 00000  
      00026  0625 00 0 00360  
      00027  0131 00 0 00000  
      00030  0625 00 0 00360  
      00031  0131 00 0 00000  
      00032  0625 00 0 00360  
      00033  0131 00 0 00000  
      00034  0625 00 0 00360  
      00035  0131 00 0 00000  
      00036  0625 00 0 00360  
      00037  0131 00 0 00000  
      00040  0625 00 0 00360  
      00041  0131 00 0 00000  
      00042  0625 00 0 00360  
      00043  0131 00 0 00000  
      00044  0625 00 0 00360  
      00045  0131 00 0 00000  
      00046  0625 00 0 00360  
      00047  0131 00 0 00000  
      00050  0625 00 0 00360  
      00051  0131 00 0 00000  
      00052  0625 00 0 00360  
      00053  0131 00 0 00000  
      00054  0625 00 0 00360  
      00055  0131 00 0 00000  
      00056  0625 00 0 00360  
      00057  0131 00 0 00000  
      00060  0625 00 0 00360  
      00061  0131 00 0 00000  
1                                                                                                PAGE 2     
                  
      00062  0625 00 0 00360  
      00063  0131 00 0 00000  
      00064  0625 00 0 00360  
      00065  0131 00 0 00000  
      00066  0625 00 0 00360  
      00067  0131 00 0 00000  
      00070  0625 00 0 00360  
      00071  0131 00 0 00000  
      00072  0625 00 0 00360  
      00073  0131 00 0 00000  
      00074  0625 00 0 00360  
      00075  0131 00 0 00000  
      00076  0625 00 0 00360  
      00077  0131 00 0 00000  
      00100  0625 00 0 00360  
      00101  0131 00 0 00000  
      00102  0625 00 0 00360  
      00103  0131 00 0 00000  
      00104  0625 00 0 00360  
      00105  0131 00 0 00000  
      00106  0625 00 0 00360  
      00107  0131 00 0 00000  
      00110  0625 00 0 00360  
      00111  0131 00 0 00000  
      00112  0625 00 0 00360  
      00113  0131 00 0 00000  
      00114  0625 00 0 00360  
      00115  0131 00 0 00000  
      00116  0625 00 0 00360  
      00117  0131 00 0 00000  
      00120  0625 00 0 00360  
      00121  0131 00 0 00000  
      00122  0625 00 0 00360  
      00123  0131 00 0 00000  
      00124  0625 00 0 00360  
      00125  0131 00 0 00000  
      00126  0625 00 0 00360  
      00127  0131 00 0 00000  
      00130  0625 00 0 00360  
      00131  0131 00 0 00000  
      00132  0625 00 0 00360  
      00133  0131 00 0 00000  
      00134  0625 00 0 00360  
      00135  0131 00 0 00000  
      00136  0625 00 0 00360  
      00137  0131 00 0 00000  
      00140  0625 00 0 00360  
      00141  0131 00 0 00000  
      00142  0625 00 0 00360  
      00143  0131 00 0 00000  
      00144  0625 00 0 00360  
      00145  0131 00 0 00000  
      00146  0625 00 0 00360  
      00147  0131 00 0 00000  
      00150  0625 00 0 00360  
      00151  0131 00 0 00000  
1                                                                                                PAGE 3     
                  
      00152  0625 00 0 00360  
      00153  0131 00 0 00000  
      00154  0625 00 0 00360  
      00155  0131 00 0 00000  
      00156  0625 00 0 00360  
      00157  0131 00 0 00000  
      00160  0625 00 0 00360  
      00161  0131 00 0 00000  
      00162  0625 00 0 00360  
      00163  0131 00 0 00000  
      00164  0625 00 0 00360  
      00165  0131 00 0 00000  
      00166  0625 00 0 00360  
      00167  0131 00 0 00000  
      00170  0625 00 0 00360  
      00171  0131 00 0 00000  
      00172  0625 00 0 00360  
      00173  0131 00 0 00000  
      00174  0625 00 0 00360  
      00175  0131 00 0 00000  
      00176  0625 00 0 00360  
      00177  0131 00 0 00000  
      00200  0625 00 0 00360  
      00201  0131 00 0 00000  
      00202  0625 00 0 00360  
      00203  0131 00 0 00000  
      00204  0625 00 0 00360  
      00205  0131 00 0 00000  
      00206  0625 00 0 00360  
      00207  0131 00 0 00000  
      00210  0625 00 0 00360  
      00211  0131 00 0 00000  
      00212  0625 00 0 00360  
      00213  0131 00 0 00000  
      00214  0625 00 0 00360  
      00215  0131 00 0 00000  
      00216  0625 00 0 00360  
      00217  0131 00 0 00000  
      00220  0625 00 0 00360  
      00221  0131 00 0 00000  
      00222  0625 00 0 00360  
      00223  0131 00 0 00000  
      00224  0625 00 0 00360  
      00225  0131 00 0 00000  
      00226  0625 00 0 00360  
      00227  0131 00 0 00000  
      00230  0625 00 0 00360  
      00231  0131 00 0 00000  
      00232  0625 00 0 00360  
      00233  0131 00 0 00000  
      00234  0625 00 0 00360  
      00235  0131 00 0 00000  
      00236  0625 00 0 00360  
      00237  0131 00 0 00000  
      00240  0625 00 0 00360  
      00241  0131 00 0 00000  
1                                                                                                PAGE 4     
                  
      00242  0625 00 0 00360  
      00243  0131 00 0 00000  
      00244  0625 00 0 00360  
      00245  0131 00 0 00000  
      00246  0625 00 0 00360  
      00247  0131 00 0 00000  
      00250  0625 00 0 00360  
      00251  0131 00 0 00000  
      00252  0625 00 0 00360  
      00253  0131 00 0 00000  
      00254  0625 00 0 00360  
      00255  0131 00 0 00000  
      00256  0625 00 0 00360  
      00257  0131 00 0 00000  
      00260  0625 00 0 00360  
      00261  0131 00 0 00000  
      00262  0625 00 0 00360  
      00263  0131 00 0 00000  
      00264  0625 00 0 00360  
      00265  0131 00 0 00000  
      00266  0625 00 0 00360  
      00267  0131 00 0 00000  
      00270  0625 00 0 00360  
      00271  0131 00 0 00000  
      00272  0625 00 0 00360  
      00273  0131 00 0 00000  
      00274  0625 00 0 00360  
      00275  0131 00 0 00000  
      00276  0625 00 0 00360  
      00277  0131 00 0 00000  
      00300  0625 00 0 00360  
      00301  0131 00 0 00000  
      00302  0625 00 0 00360  
      00303  0131 00 0 00000  
      00304  0625 00 0 00360  
      00305  0131 00 0 00000  
      00306  0625 00 0 00360  
      00307  0131 00 0 00000  
      00310  0625 00 0 00360  
      00311  0131 00 0 00000  
      00312  0625 00 0 00360  
      00313  0131 00 0 00000  
      00314  0625 00 0 00360  
      00315  0131 00 0 00000  
      00316  0625 00 0 00360  
      00317  0131 00 0 00000  
      00320  0625 00 0 00360  
      00321  0131 00 0 00000  
      00322  0625 00 0 00360  
      00323  0131 00 0 00000  
      00324  0625 00 0 00360  
      00325  0131 00 0 00000  
      00326  0625 00 0 00360  
      00327  0131 00 0 00000  
      00330  0625 00 0 00360         STT     TEM
      00331  1 00001 1 00022         TXI     TEST1,1,1
1                                                                                                PAGE 5     
                  
                              *     
      00332  0020 00 0 00333  7TRA   TRA     *+1
      00333  0600 00 0 00005         STZ     5  
      00334  0535 00 2 00006         LAC     6,2
      00335  1 00022 2 00336         TXI     *+1,2,TEST1    
      00336  0636 00 2 00356         SCA     LENGTH,2 
      00337  0754 00 1 00000         PXA     0,1
      00340  0131 00 0 00000         XCA  
      00341  0200 00 0 00374         MPY     =200     
      00342  0131 00 0 00000         XCA  
      00343  0400 00 0 00356         ADD     LENGTH   
      00344  0601 00 0 00356         STO     LENGTH   
      00345  0765 00 0 00043         LRS     35 
      00346  0221 00 0 00376         DVP     =50000   
      00347 -0600 00 0 00357         STQ     PCNT     
      00350  0074 00 4 00000         TSX     $.PRINT,4
      00351 -1 00000 0 00362         STR     FMT
      00352 -1 00000 0 00356         STR     LENGTH   
      00353 -1 00000 0 00357         STR     PCNT     
      00354 -1 00000 0 00000         STR  
      00355  0101 00 0 00400         TIA     =HDORMNT 
      00356  0 00000 0 00000  LENGTH
      00357  0 00000 0 00000  PCNT  
      00360  0 00000 0 00000  TEM   
      00361  0101 00 0 00377  CLOCON TIA     =HCLOCON 
      00362  036773653101     FMT    BCI ,3X,VI12,H' IN 10 SEC. ', I4, H' PERCENT '*
      00363  027330146031     
      00364  456001006062     
      00365  252333601473     
      00366  603104736030     
      00367  146047255123     
      00370  254563601454     
      00371  606060606060     
      00372  606060606060     
      00373  606060606060     
                                     END  
                  
        LITERALS  
      00374  000000000310     
      00375  000000001146     
      00376  000000141520     
      00377  234346234645     
      00400  244651444563     
      00401  377777777777     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        402 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        362    FMT   351
        360    TEM    22,   24,   26,   30,   32,   34,   36,   40,   42,   44,   46,   50,   52,   54,   56,   60,   62
                      64,   66,   70,   72,   74,   76,  100,  102,  104,  106,  110,  112,  114,  116,  120,  122,  124
                     126,  130,  132,  134,  136,  140,  142,  144,  146,  150,  152,  154,  156,  160,  162,  164,  166
                     170,  172,  174,  176,  200,  202,  204,  206,  210,  212,  214,  216,  220,  222,  224,  226,  230
                     232,  234,  236,  240,  242,  244,  246,  250,  252,  254,  256,  260,  262,  264,  266,  270,  272
                     274,  276,  300,  302,  304,  306,  310,  312,  314,  316,  320,  322,  324,  326,  330
        332   7TRA     5
        357   PCNT   347,  353
         22  TEST1    20,  331,  335
        361 CLOCON     4
          0 .PRINT   350
        356 LENGTH   336,  343,  344,  352
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




CLM2RW   BCD 09/20/68 0219.7    1480         00000    
1                                                                                                PAGE 1     
                  
 M                            CALL   MACRO   NAME,LIST                                                            
                                     TSX     $'NAME,4 
                                     IRP     LIST     
                                     PTH     LIST     
                                     IRP  
                              CALL   END  
                  
                  
      00000  272563234644     GETCOM
      00001  242543263143     DELFIL
      00002  222646472545     BFOPEN
      00003  222651252124     BFREAD
      00004  222666513163     BFWRIT
      00005  222623434662     BFCLOS
      00006  233045234644     CHNCOM
      00007  665126436760     WRFLX 
                  
      00010  0074 00 4 00000         TSX     $GETCOM,4
      00011  0 00000 0 00001                 1  
      00012  0602 00 0 00311         SLW     NAME     
      00013                          CALL    DELFIL(NAME,ROW,DELERR,DELCOD)   
      00020                   DELOK  CALL    BFOPEN(=HR,NAME,ABS,B1,B2,=-0,BFERR)   
      00030                          CALL    BFOPEN(=HW,NAME,ROW,B3,B4,B5,BFERR)    
                  
      00040                   LOOP   CALL    BFREAD(NAME,ABS(IN,,28)DONE,EOFCT,BFERR)     
      00047  0774 00 1 00030         AXT     24,1     
      00050  0600 00 1 00400         STZ     OUT+24,1 
      00051  2 00001 1 00050         TIX     *-1,1,1  
      00052  0774 00 1 00004         AXT     4,1
      00053 -0500 00 1 00350         CAL     IN+28,1  
      00054  0602 00 1 00404         SLW     OUT+28,1 
      00055  2 00001 1 00053         TIX     *-2,1,1  
                  
      00056  0774 00 1 00030         AXT     24,1     
      00057  0774 00 2 00044  WRDLP  AXT     36,2     
      00060  0560 00 1 00344         LDQ     IN+24,1  
      00061 -0754 00 0 00000  BITLP  ZAC  
      00062 -0763 00 0 00001         LGL     1  
      00063  0522 00 1 00151         XEC     WRDLS,1  
      00064  0522 00 2 00215         XEC     BITLS,2  
      00065  0522 00 2 00311         XEC     ADR,2    
      00066  0522 00 1 00245         XEC     ORS,1    
      00067  2 00001 2 00061         TIX     BITLP,2,1
      00070  2 00001 1 00057         TIX     WRDLP,1,1
                  
      00071                          CALL    BFWRIT(NAME,ROW(OUT,,28)BFERR)   
      00076  0020 00 0 00040         TRA     LOOP     
                  
      00077                   DONE   CALL    BFCLOS(=HALL,=-0,BFERR)    
      00103  0520 00 0 00404         ZET     EOFCT    
      00104  0020 00 0 00107         TRA     OOPS     
      00105                          CALL    CHNCOM(=0)     
                  
      00107  0074 00 4 00007  OOPS   TSX     $WRFLX,4 
      00110  0 00002 0 00406                 OOPSMS,,2
      00111                          CALL    CHNCOM(=0)     
1                                                                                                PAGE 2     
                  
      00113 -0500 00 0 00405  DELERR CAL     DELCOD   
      00114  0402 00 0 04571         SUB     =3 
      00115  0100 00 0 00020         TZE     DELOK    
                  
      00116 -0500 00 0 04575  BFERR  CAL     =HPRNTER 
      00117  0560 00 0 04600         LDQ     =O777777777777 
      00120  0101 00 0 04574         TIA     =HNEXCOM 
                  
      00121                   X1     BSS     0  
                       00121         DUP     2,24     
                       00000  X2     SET     *-X1     
      00121  0767 00 0 00000         ALS     X2/2     
      00151                   WRDLS  BSS     0  
                  
                       00151         DUP     3,12     
      00151  0767 00 0 00030         ALS     24 
      00152  0767 00 0 00014         ALS     12 
      00153  0767 00 0 00000         ALS     0  
      00215                   BITLS  BSS     0  
                  
                       00215         DUP     2,12     
      00215 -0602 00 4 00364         ORS     OUT+12,4 
      00216 -0602 00 4 00400         ORS     OUT+24,4 
      00245                   ORS    BSS     0  
                  
      00245                   ADR1   BSS     0  
                       00245         DUP     2,36     
                       00000  ADR2   SET     *-ADR1   
      00245  0774 00 4 00014         AXT     12-ADR2/3,4    
      00311                   ADR    BSS     0  
                  
      00311  0 00000 0 00000  NAME  
      00312  606060212262     ABS    BCI     1,   ABS 
      00313  606060514666     ROW    BCI     1,   ROW 
      00314                   IN     BSS     28 
      00350                   OUT    BSS     28 
      00404  0 00000 0 00000  EOFCT 
      00405  0 00000 0 00000  DELCOD
      00406  472151633121     OOPSMS BCI     2,PARTIAL CARD 
      00410                   B1     BSS     432
      01270                   B2     BSS     432
      02150                   B3     BSS     432
      03030                   B4     BSS     432
      03710                   B5     BSS     432
                  
                                     END  
                  
        LITERALS  
      04570  000000000000     
      04571  000000000003     
      04572  214343606060     
      04573  400000000000     
      04574  452567234644     
      04575  475145632551     
      04576  516060606060     
      04577  666060606060     
1                                                                                                PAGE 3     
                  
      04600  777777777777     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       4601 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        410     B1    24
       1270     B2    25
       2150     B3    34
       3030     B4    35
       3710     B5    36
        314     IN    43,   53,   60
        121     X1   121,  122,  123,  124,  125,  126,  127,  130,  131,  132,  133,  134,  135,  136,  137,  140,  141
                     142,  143,  144,  145,  146,  147,  150
         27     X2   121,  122,  123,  124,  125,  126,  127,  130,  131,  132,  133,  134,  135,  136,  137,  140,  141
                     142,  143,  144,  145,  146,  147,  150
        312    ABS    23,   42
        311    ADR    65
        245    ORS    66
        350    OUT    50,   54,   74,  215,  216,  217,  220,  221,  222,  223,  224,  225,  226,  227,  230,  231,  232
                     233,  234,  235,  236,  237,  240,  241,  242,  243,  244
        313    ROW    15,   33,   73
        245   ADR1   245,  246,  247,  250,  251,  252,  253,  254,  255,  256,  257,  260,  261,  262,  263,  264,  265
                     266,  267,  270,  271,  272,  273,  274,  275,  276,  277,  300,  301,  302,  303,  304,  305,  306
                     307,  310
         43   ADR2   245,  246,  247,  250,  251,  252,  253,  254,  255,  256,  257,  260,  261,  262,  263,  264,  265
                     266,  267,  270,  271,  272,  273,  274,  275,  276,  277,  300,  301,  302,  303,  304,  305,  306
                     307,  310
         77   DONE    44
         40   LOOP    76
        311   NAME    12,   14,   22,   32,   41,   72
        107   OOPS   104
        116  BFERR    27,   37,   46,   75,  102
         61  BITLP    67
        215  BITLS    64
         20  DELOK   115
        404  EOFCT    45,  103
         57  WRDLP    70
        151  WRDLS    63
          7  WRFLX   107
          5 BFCLOS    77
          2 BFOPEN    20,   30
          3 BFREAD    40
          4 BFWRIT    71
          6 CHNCOM   105,  111
        405 DELCOD    17,  113
        113 DELERR    16
          1 DELFIL    13
          0 GETCOM    10
        406 OOPSMS   110
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




    DO   BCD 09/20/68 0219.7    2240         00000    
1            DO - RESUME A SAVED FILE FROM A COMMON FILE.                                        PAGE 1     
                  
                                             8/30/66 - NOEL I. MORRIS   
                                             MODIFIED FOR '*' 4/3/68 R.A. ROACH     
                  
                  
                                     ABS  
                  
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                  
                      000024  LOWMEM BOOL    24 
1            DO - RESUME A SAVED FILE FROM A COMMON FILE.                                        PAGE 2     
                           SET UP AND READ FILE CONDITIONS.                         
                  
                       00024         ORG     LOWMEM   
                  
      00024                          CALL    GETCLS((CBUF,,0)) PICK UP COMMAND BUFFER     
      00024  0074 00 4 00113         TSX     GETCLS,4                                                         .002
      00025  3 00000 0 00131         PAR     CBUF,,0                                                          .004
                  
      00026                          CALL    SETCLS((CBUF+2,,0)) FIX IT UP FOR SAVED FILE 
      00026  0074 00 4 00115         TSX     SETCLS,4                                                         .002
      00027  3 00000 0 00133         PAR     CBUF+2,,0                                                        .004
                  
      00030                          CALL    GETCF         GET COMMON FILE NO.
      00030  0074 00 4 00117         TSX     GETCF,4                                                          .002
      00031  0602 00 0 00131         SLW     CF0           AND SAVE     
                  
      00032 -0500 00 0 00132         CAL     CFN           GET TARGET COMMON FILE   
      00033 -0340 00 0 00162         LAS     STAR     
      00034  0020 00 0 00036         TRA     *+2
      00035 -0500 00 0 00131         CAL     CF0
      00036 -0320 00 0 00160         ANA     ZLB           ZERO LEADING BLANKS
      00037  0602 00 0 00132         SLW     CFN           AND SAVE     
      00040  0322 00 0 00131         ERA     CF0           IS IT THE SAME AS HOME COMMON FILE   
      00041  0602 00 0 00161         SLW     SAME.         ..     
                  
      00042 -0500 00 0 00132         CAL     CFN           NOW SWITCH TO COMMON FILE,     
      00043  0520 00 0 00161         ZET     SAME.         IF NECESSARY 
      00044                          CALL    COMFIL(-)     AND SWITCH TO IT   
      00044  0074 00 4 00121         TSX     COMFIL,4                                                         .002
      00045  3 00000 0 00000         PAR     -                                                                .004
                  
      00046 -0500 00 0 00133         CAL     CBUF+2        NAME OF SAVED FILE 
      00047  0602 00 0 00016         SLW     NAME          ..     
                  
      00050                          CALL    OPEN(R,NAME,SAVED,MZE,MZE,ERR) TRY TO OPEN THE FILE
      00050  0074 00 4 00123         TSX     OPEN,4                                                           .002
      00051  3 00000 0 00157         PAR     R                                                                .004
      00052  3 00000 0 00016         PAR     NAME                                                             .004
      00053  3 00000 0 00017         PAR     SAVED                                                            .004
      00054  3 00000 0 00155         PAR     MZE                                                              .004
      00055  3 00000 0 00155         PAR     MZE                                                              .004
      00056  3 00000 0 00104         PAR     ERR                                                              .004
                  
      00057 -0500 00 0 00131         CAL     CF0           SWITCH BACK TO HOME COMMON FILE
      00060  0520 00 0 00161         ZET     SAME.         IF NECESSARY 
      00061                          CALL    COMFIL(-)     ..     
      00061  0074 00 4 00121         TSX     COMFIL,4                                                         .002
      00062  3 00000 0 00000         PAR     -                                                                .004
                  
      00063                          CALL    RDWAIT(NAME,SAVED,ZERO(WORDS,,2)) READ TWO WORDS   
      00063  0074 00 4 00125         TSX     RDWAIT,4                                                         .002
      00064  3 00000 0 00016         PAR     NAME                                                             .004
      00065  3 00000 0 00017         PAR     SAVED                                                            .004
      00066  3 00000 0 00156         PAR     ZERO                                                             .004
      00067  3 00002 0 00134         PAR     WORDS,,2                                                         .004
1            DO - RESUME A SAVED FILE FROM A COMMON FILE.                                        PAGE 3     
                           SET UP AND READ FILE CONDITIONS.                         
                  
      00070 -0500 00 0 00135         CAL     WORDS+1       GET THE ILC  
      00071  0621 00 0 00011         STA     ILC           AND SAVE FOR TRANSFER    
                  
      00072 -0534 00 4 00134         LXD     WORDS,4       NO. OF LOC'NS OF CONDITIONS    
      00073  1 00026 4 00074         TXI     *+1,4,LOWMEM+2 PLUS BOTTOM OF CORE     
      00074  0634 00 4 00020         SXA     LOC,4         GIVES 'RELLOC' FOR FILE  
                  
      00075  0534 00 4 00134         LXA     WORDS,4       MEMBND IN XR4
      00076  0754 00 4 00000         PXA     ,4            AND IN AC    
      00077  1 77754 4 00100         TXI     *+1,4,-LOWMEM GET NUMBER OF WORDS TO READ    
      00100 -0634 00 4 00005         SXD     READ+4,4      AND SET UP CALL TO RDFILE
                  
      00101 -0774 00 4 00000         AXC     SETM,4        SET XR4 FOR CALL TO SETMEM     
      00102  0101 00 0 00103         TIA     *+1           AND GO TO A-CORE   
      00103  622563442544            BCI     1,SETMEM      RETURN TO SETM+1   
1            DO - RESUME A SAVED FILE FROM A COMMON FILE.                                        PAGE 4     
                           MISCELLANEOUS, STORAGE, AND CONSTANTS.                   
                  
      00104 -0500 00 0 00131  ERR    CAL     CF0           GET HOME COMMON FILE AND 
      00105  0520 00 0 00161         ZET     SAME.         SWITCH BACK, IF NECESSARY
      00106                          CALL    COMFIL(-)     ..     
      00106  0074 00 4 00121         TSX     COMFIL,4                                                         .002
      00107  3 00000 0 00000         PAR     -                                                                .004
                  
      00110 -0500 00 0 00163         CAL     PRNTER        CHAIN TO PRNTER COMMAND  
      00111  0560 00 0 00164         LDQ     MASK          ..     
      00112                          CALL    NEXCOM        ..     
      00112  0074 00 4 00127         TSX     NEXCOM,4                                                         .002
                  
                  
      00113  0101 00 0 00114  GETCLS TIA     *+1
      00114  272563234362            BCI     1,GETCLS 
      00115  0101 00 0 00116  SETCLS TIA     *+1
      00116  622563234362            BCI     1,SETCLS 
      00117  0101 00 0 00120  GETCF  TIA     *+1
      00120  272563232660            BCI     1,GETCF  
      00121  0101 00 0 00122  COMFIL TIA     *+1
      00122  234644263143            BCI     1,COMFIL 
      00123  0101 00 0 00124  OPEN   TIA     *+1
      00124  464725456060            BCI     1,OPEN   
      00125  0101 00 0 00126  RDWAIT TIA     *+1
      00126  512466213163            BCI     1,RDWAIT 
      00127  0101 00 0 00130  NEXCOM TIA     *+1
      00130  452567234644            BCI     1,NEXCOM 
                  
                  
      00131                   CBUF   BSS     20 
                  
                       00131  CF0    SYN     CBUF     
                       00132  CFN    SYN     CBUF+1   
                       00134  WORDS  SYN     CBUF+3   
                  
      00155 -0 00000 0 00000  MZE    MZE  
      00156  0 00000 0 00000  ZERO   PZE  
      00157  516060606060     R      BCI     1,R
      00160  000000000077     ZLB    VFD     O36/77   
      00161  0 00000 0 00000  SAME.  PZE  
      00162  606060606054     STAR   BCI     1,     * 
                  
      00163  475145632551     PRNTER BCI     1,PRNTER 
      00164 -000000000071     MASK   OCT     -71
1            DO - RESUME A SAVED FILE FROM A COMMON FILE.                                        PAGE 5     
                           SETM - READ FILE AND EXECUTE IT.                         
                  
                       00000         ORG     0  
                  
      00000  0 00000 0 00000  SETM   PZE                   FOR STR'S    
                  
      00001                   READ   CALL    RDFILE(NAME,SAVED,LOC(LOWMEM,,**)) READ THE FILE   
      00001  0074 00 4 00012         TSX     RDFILE,4                                                         .002
      00002  3 00000 0 00016         PAR     NAME                                                             .004
      00003  3 00000 0 00017         PAR     SAVED                                                            .004
      00004  3 00000 0 00020         PAR     LOC                                                              .004
      00005  3 00000 0 00024         PAR     LOWMEM,,**                                                       .004
                  
      00006                          CALL    CLOSE(NAME,SAVED) CLOSE IT 
      00006  0074 00 4 00014         TSX     CLOSE,4                                                          .002
      00007  3 00000 0 00016         PAR     NAME                                                             .004
      00010  3 00000 0 00017         PAR     SAVED                                                            .004
                  
      00011  0020 00 0 00000  ILC    TRA     **            GO TO IT     
                  
                  
      00012  0101 00 0 00013  RDFILE TIA     *+1
      00013  512426314325            BCI     1,RDFILE 
      00014  0101 00 0 00015  CLOSE  TIA     *+1
      00015  234346622560            BCI     1,CLOSE  
                  
      00016  0 00000 0 00000  NAME   PZE  
      00017  606221652524     SAVED  BCI     1, SAVED 
      00020  0 00000 0 00000  LOC    PZE  
                  
                  
                       00024         END     LOWMEM   
                                              REMOTE SEQUENCES    
1            DO - RESUME A SAVED FILE FROM A COMMON FILE.                                        PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        165 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        157      R    51
        131    CF0    31,   35,   40,   57,  104,  155
        132    CFN    32,   37,   42,  155
        104    ERR    56
         11    ILC    71
         20    LOC    74,    4
        155    MZE    54,   55
        160    ZLB    36
        131   CBUF    25,   27,   46,  155
        164   MASK   111
         16   NAME    47,   52,   64,    2,    7
        123   OPEN    50
          1   READ   100
          0   SETM   101
        162   STAR    33
        156   ZERO    66
         14  CLOSE     6
        117  GETCF    30
        161  SAME.    41,   43,   60,  105
         17  SAVED    53,   65,    3,   10
        134  WORDS    67,   70,   72,   75,  155
        121 COMFIL    44,   61,  106
        113 GETCLS    24
         24 LOWMEM     0,   24,   73,   77,    5,   21
        127 NEXCOM   112
        163 PRNTER   110
         12 RDFILE     1
        125 RDWAIT    63
        115 SETCLS    26
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




  DRUM   BCD 02/09/69 0651.2    5477         00000    
1       M1416-3845  PETER R. BOS  2/02/68 -- HIGH SPEED DRUM STATISTICS.         01/08/69 1749.3 PAGE 1     
                  
                                     PCC     ON 
                                     LBL     DRUM0000 
                                     PCC     OFF
                  
                                     EXTERN  SETBRK,GETMEM,GETCOM,GETLOC,WRFLX,WRFLXA     
                                     EXTERN  SETMEM,SLEEP,CHNCOM  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,ARGS,CRS                                                        
 M                            ACORE  MACRO   NAME,BLK,N,LOC                                                       
                  
                  
                  
                  
        TRANSFER VECTOR 
      00000  622563225142     SETBRK
      00001  272563442544     GETMEM
      00002  272563234644     GETCOM
      00003  272563434623     GETLOC
      00004  665126436760     WRFLX 
      00005  665126436721     WRFLXA
      00006  622563442544     SETMEM
      00007  624325254760     SLEEP 
      00010  233045234644     CHNCOM
      00011  222324252360     BCDEC 
      00012  212346512560     ACORE 
      00013  234644434623     COMLOC
      00014  272563634460     GETTM 
      00015  332644636060     .FMT  
      00016  305144314560     HRMIN 
      00017  624546467125     SNOOZE
                  
      00020                          CALL    SETBRK(XIT)   SET INTERRUPT.     
      00022  0074 00 4 00001         TSX     GETMEM,4 
      00023  0602 00 0 00710         SLW     MEMBND        SAVE CURRENT CORE SIZE.  
      00024                          CALL    GETCOM(1)     GET SLEEP TIME, IF ANY.  
      00026  0602 00 0 00664         SLW     SLPTIM        ..     
      00027  0322 00 0 00627         ERA     FENCE         CHECK FOR NO ARGUMENT.   
      00030 -0100 00 0 00032         TNZ     *+2           ..     
      00031  0600 00 0 00664         STZ     SLPTIM        IF SO, ZERO TIME.  
      00032                          CALL    $BCDEC(SLPTIM) CONVERT TO BINARY.
      00034  0131 00 0 00000         XCA                   TO MQ. 
      00035  0200 00 0 01666         MPY     =60           ..     
      00036 -0600 00 0 00664         STQ     SLPTIM        ..     
                  
      00037                          CALL    GETCOM(0)     GET NAME OF COMMAND.     
      00041  0322 00 0 01717         ERA     =H    Q.      IF 'Q.', NO DRUM MAP.    
      00042  0602 00 0 00665         SLW     MAP.          ..     
                  
                  
      00043                          ACORE   (DUMP,,LPNT)   
      00055  0322 00 0 00630         ERA     LDRMWD        MAKE SURE WE ARE AT RIGHT PLACE IN DUMP.   
      00056 -0100 00 0 00623         TNZ     BAD           IF NOT, CAN'T GO ON.     
1       M1416-3845  PETER R. BOS  2/02/68 -- HIGH SPEED DRUM STATISTICS.         01/08/69 1749.3 PAGE 2     
                  
                       00057  START  SYN     *             BACK HERE AFTER WAKING UP.     
      00057                          CALL    WRFLX((*,,0)) TYPE A C.R.  
      00061                          ACORE   (DUMP,,LSCT),,,SCOUNT
      00073                          ACORE   (OVRFLO,*),...,3,OVRFLO    
      00103                          ACORE   (AVQLEN,*),,,AVQLEN  
      00113                          COMLOC  NUSERS,,,NUSERS
      00122                          COMLOC  MXUSRS,,,MXUSRS
      00131 -0520 00 0 00665         NZT     MAP.          WANT DRUM MAP. Q   
      00132  0020 00 0 00266         TRA     NOMAP         NO, SKIP.    
                  
      00133                          COMLOC  PROBN,...,N+1,PROBN  
      00142                          COMLOC  PROGN,...,N+1,PROGN  
      00151                          COMLOC  IOD,...,N+1,IOD
      00160                          ACORE   (DUMP,,LSGCT),...,N+1,SEGCNT     
      00172                          ACORE   (DUMP,,LPRTL),...,N+1,PRTIAL     
      00204                          COMLOC  STATUS,...,N+1,STATUS
      00213                          COMLOC  AWAKE,...,N+1,AWAKE  
      00222                          COMLOC  WATTIM,...,N+1,WATTIM
      00231                          COMLOC  TOTTIM,,,TOTTIM
      00240                          COMLOC  COMMND,...,N+1,COMMND
      00247                          ACORE   (LOGIN,*),,,LOGIN    
      00257                          COMLOC  USER,,,USER    
                  
                       00266  NOMAP  SYN     *             HERE TO SKIP COMLOCS FOR MAP.  
      00266  0500 00 0 00626         CLA     SECTRS        GET TOTAL SECTORS. 
      00267  0402 00 0 00722         SUB     SCOUNT        MINUS NUMBER LEFT. 
      00270  0131 00 0 00000         XCA                   NOW COMPUTE PERCENTAGE.  
      00271  0200 00 0 01667         MPY     =100          ..     
      00272 -0754 00 0 00000         ZAC  
      00273  0221 00 0 00626         DVP     SECTRS        ..     
      00274 -0754 00 0 00000         ZAC  
      00275  0221 00 0 01667         DVP     =100          GET UNITS.   
      00276 -0600 00 0 00666         STQ     PCT1          ..     
      00277  0131 00 0 00000         XCA  
      00300 -0754 00 0 00000         ZAC  
      00301  0221 00 0 01664         DVP     =10           GET TENTHS.  
      00302 -0600 00 0 00667         STQ     PCT2          ..     
      00303  0601 00 0 00670         STO     PCT3          HUNDRETHS.   
      00304                          CALL    $GETTM(DATE,TIME) GET DATE AND TIME NOW.     
      00307  0560 00 0 00672         LDQ     TIME          MAKE IT LOOK NICE. 
      00310 -0754 00 0 00000         ZAC  
      00311 -0763 00 0 00006         LGL     6             ..     
      00312 -0100 00 0 00316         TNZ     *+4           ..     
      00313 -0500 00 0 01665         CAL     =O57          ..     
      00314 -0765 00 0 00006         LGR     6  
      00315 -0600 00 0 00672         STQ     TIME          ..     
      00316  0560 00 0 00671         LDQ     DATE          DO DATE SAME WAY.  
      00317 -0754 00 0 00000         ZAC  
      00320 -0763 00 0 00006         LGL     6             ..     
      00321 -0100 00 0 00325         TNZ     *+4           ..     
      00322 -0500 00 0 01665         CAL     =O57          ..     
      00323 -0765 00 0 00006         LGR     6             ..     
      00324 -0600 00 0 00671         STQ     DATE          ..     
1       M1416-3845  PETER R. BOS  2/02/68 -- HIGH SPEED DRUM STATISTICS.         01/08/69 1749.3 PAGE 3     
                  
      00325  0074 00 4 00015         TSX     $.FMT,4       GO FORMAT FIRST LINE.    
      00326  0 00020 1 00631         PZE     DRUM,1,16
      00327  0 00001 4 00666         PZE     PCT1,4,1 
      00330  0 00001 1 00644         PZE     DOT,1,1  
      00331  0 00001 4 00667         PZE     PCT2,4,1 
      00332  0 00001 4 00670         PZE     PCT3,4,1 
      00333  0 00012 1 00634         PZE     AT,1,10  
      00334  0 00006 1 00672         PZE     TIME,1,6 
      00335  0 00001 0 00335         PZE     *,0,1    
      00336  0 00005 1 00671         PZE     DATE,1,5 
      00337  0 00000 0 00000         PZE     0  
      00340  0602 00 0 00342         SLW     *+2           POINTER TO OUTPUT. 
      00341                          CALL    WRFLX((-,,-))  
                  
      00343  0500 00 0 00626         CLA     SECTRS        COMPUTE SECTORS USED.    
      00344  0402 00 0 00722         SUB     SCOUNT        ..     
      00345  0601 00 0 00673         STO     SCTUSD        ..     
      00346  0074 00 4 00015         TSX     $.FMT,4       FORMAT THIS LINE.  
      00347 -0 00003 4 00673         MZE     SCTUSD,4,3     
      00350  0 00020 1 00636         PZE     USED,1,16
      00351 -0 00003 4 00722         MZE     SCOUNT,4,3     
      00352  0 00005 1 00641         PZE     LEFT,1,5 
      00353  0 00000 0 00000         PZE     0  
      00354  0602 00 0 00356         SLW     *+2           ..     
      00355                          CALL    WRFLX((-,,-))  
                  
      00357  0500 00 0 00726         CLA     AVQLEN        GET AVG. QUEUE LENGTH.   
      00360  0241 00 0 01674         FDP     =1E2     
      00361  0131 00 0 00000         XCA  
      00362  0300 00 0 01673         FAD     =5E-1         MAKE SURE NON-ZERO.
      00363 -0300 00 0 01677         UFA     =O233000000000 CONVERT TO INTEGER.     
      00364  0322 00 0 01677         ERA     =O233000000000 ..    
      00365  0131 00 0 00000         XCA  
      00366 -0754 00 0 00000         ZAC  
      00367  0221 00 0 01664         DVP     =10           ..     
      00370 -0600 00 0 00674         STQ     AVQL1         ..     
      00371  0601 00 0 00675         STO     AVQL2         ..     
                  
      00372  0074 00 4 00015         TSX     $.FMT,4       GO FORMAT SECOND LINE.   
      00373  0 00017 1 00646         PZE     QLEN,1,15
      00374 -0 00002 4 00674         MZE     AVQL1,4,2
      00375  0 00001 1 00644         PZE     DOT,1,1  
      00376  0 00001 4 00675         PZE     AVQL2,4,1
      00377  0 00003 1 00645         PZE     CMA,1,3  
      00400  0 00006 1 00642         PZE     USRS,1,6 
      00401  0 00001 0 00401         PZE     *,0,1    
      00402 -0 00002 4 00727         MZE     NUSERS,4,2     
      00403  0 00003 1 00645         PZE     CMA,1,3  
      00404  0 00005 1 00643         PZE     MAX,1,5  
      00405 -0 00002 4 00730         MZE     MXUSRS,4,2     
      00406  0 00000 0 00000         PZE     0  
      00407  0602 00 0 00411         SLW     *+2           ..     
      00410                          CALL    WRFLX((-,,-))  
1       M1416-3845  PETER R. BOS  2/02/68 -- HIGH SPEED DRUM STATISTICS.         01/08/69 1749.3 PAGE 4     
                  
      00412 -0520 00 0 00725         NZT     OVRCNT        ANYONE OVERFLOWING DRUM NOW. Q 
      00413  0020 00 0 00445         TRA     NOBODY        NO, SKIP.    
      00414 -0500 00 0 01672         CAL     =O5000000     FIX UP COMMENT.    
      00415  0622 00 0 00435         STD     OVRUSR        ..     
      00416 -0500 00 0 00725         CAL     OVRCNT        IF ONLY ONE GUY,   
      00417  0402 00 0 01663         SUB     =1            ..     
      00420 -0100 00 0 00423         TNZ     *+3           ..     
      00421 -0500 00 0 01671         CAL     =O4000000     PRINT 'USER' INSTEAD OF 'USERS'.     
      00422  0622 00 0 00435         STD     OVRUSR        ..     
      00423                          CALL    $HRMIN(OVRTIM) CONVERT TIME OF OVERFLOW.     
      00425 -0765 00 0 00036         LGR     30            MAKE IT LOOOK PRETTY.    
      00426 -0100 00 0 00430         TNZ     *+2           ..     
      00427 -0500 00 0 01665         CAL     =O57          ..     
      00430 -0765 00 0 00006         LGR     6  
      00431 -0600 00 0 00723         STQ     OVRTIM        ..     
      00432  0074 00 4 00015         TSX     $.FMT,4       FORMAT OVERFLOW COMMENT. 
      00433 -0 00002 4 00725         MZE     OVRCNT,4,2     
      00434  0 00001 0 00434         PZE     *,0,1    
      00435  0 00005 1 00642  OVRUSR PZE     USRS,1,5 
      00436  0 00025 1 00651         PZE     OVER,1,21
      00437  0 00006 1 00723         PZE     OVRTIM,1,6     
      00440  0 00002 1 00645         PZE     CMA,1,2  
      00441  0 00000 0 00000         PZE     0  
      00442  0602 00 0 00444         SLW     *+2           ..     
      00443                          CALL    WRFLXA((-,,-)) 
                  
      00445 -0500 00 0 00724  NOBODY CAL     OVRDLT        GET CURRENT SWAP TIME.   
      00446 -0340 00 0 00706         LAS     LASTDL        COMPARE WITH PREVIOUS VALUE.   
      00447  0020 00 0 00451         TRA     *+2           IF DIFFERENT, WANT TO PRINT.   
      00450  0020 00 0 00473         TRA     C.R.          IF SAME, SKIP.     
      00451  0602 00 0 00706         SLW     LASTDL        SAVE AS 'LAST' VALUE.    
      00452  0131 00 0 00000         XCA                   NOW TO MQ.   
      00453 -0754 00 0 00000         ZAC  
      00454  0221 00 0 01670         DVP     =360          TENTHS OF MINUTES. 
      00455 -0754 00 0 00000         ZAC  
      00456  0221 00 0 01664         DVP     =10           ..     
      00457 -0600 00 0 00676         STQ     OVRDL1        ..     
      00460  0601 00 0 00677         STO     OVRDL2        ..     
      00461  0074 00 4 00015         TSX     $.FMT,4       GO FORMAT THIS TOO.
      00462  0 00021 1 00655         PZE     SWAP,1,17
      00463 -0 00003 4 00676         MZE     OVRDL1,4,3     
      00464  0 00001 1 00644         PZE     DOT,1,1  
      00465  0 00001 4 00677         PZE     OVRDL2,4,1     
      00466  0 00006 1 00660         PZE     MINS.,1,6
      00467  0 00000 0 00000         PZE     0  
      00470  0602 00 0 00472         SLW     *+2
      00471                          CALL    WRFLX((-,,-)) ..     
      00473                   C.R.   CALL    WRFLX((*,,0)) TYPE A C.R.  
                  
      00475 -0520 00 0 00665         NZT     MAP.          DO WE WANT DRUM MAP. Q   
      00476  0020 00 0 00611         TRA     SNORE         NO, GO SLEEP.
                  
      00477                          TYPE    7(LINE     USER     WDCNT SEGCNT STATUS)     
      00501 -0500 00 0 01716         CAL     =H  BACK      SET UP PROB-PROG FOR BACKGROUND.     
      00502  0602 00 0 00731         SLW     PROBN    
      00503 -0500 00 0 01703         CAL     =HGROUND      ..     
1       M1416-3845  PETER R. BOS  2/02/68 -- HIGH SPEED DRUM STATISTICS.         01/08/69 1749.3 PAGE 5     
                  
      00504  0602 00 0 01014         SLW     PROGN    
                  
      00505 -0774 00 1 00000         AXC     0,1           START WITH USER 0. 
                       00506  LOOP   SYN     *             AND LOOP AROUND HERE.    
      00506  0520 00 1 00731         ZET     PROBN,1       IS THIS USER LOGGED IN. Q
      00507  0020 00 0 00521         TRA     ISIN          YES, SKIP.   
      00510 -0500 00 1 01562         CAL     COMMND,1      IS HE LOGGING IN. Q
      00511 -0340 00 0 01645         LAS     LOGIN         ..     
      00512  0020 00 0 00605         TRA     ENDLP         NO.    
      00513  0020 00 0 00515         TRA     *+2           YES.   
      00514  0020 00 0 00605         TRA     ENDLP         NO.    
      00515 -0500 00 0 01721         CAL     =H   (LO      SET UP DUMMY PROBN-PROGN.
      00516  0602 00 1 00731         SLW     PROBN,1  
      00517 -0500 00 0 01702         CAL     =HGIN)        ..     
      00520  0602 00 1 01014         SLW     PROGN,1       ..     
      00521  0636 00 1 00700  ISIN   SCA     LINE,1        SAVE LINE NUMBER.  
      00522 -0500 00 1 01330         CAL     STATUS,1      GET STATUS.  
      00523  0734 00 4 00000         PAX     0,4           PICK UP WORD FROM TABLE. 
      00524 -3 00000 4 00605         TXL     ENDLP,4,0     SKIP IF USER DEAD  
      00525 -0500 00 4 00720         CAL     STABLE,4      ..     
      00526 -0340 00 0 01715         LAS     =H DRMT       IS USER DORMANT. Q 
      00527  0020 00 0 00533         TRA     *+4           NO, SKIP.    
      00530 -0520 00 1 01413         NZT     AWAKE,1       IS HE SLEEPING. Q  
      00531  0020 00 0 00533         TRA     *+2           ..     
      00532 -0500 00 0 01714         CAL     =H ASLP       IF SO, HE GETS SPECIAL NAME.   
      00533  0602 00 0 00701         SLW     STATE         SAVE STATUS. 
      00534 -0500 00 1 00731         CAL     PROBN,1       GET PROB,    
      00535  0602 00 0 00702         SLW     PROB          ..     
      00536 -0500 00 1 01014         CAL     PROGN,1       PROG,  
      00537  0602 00 0 00703         SLW     PROG          ..     
      00540 -0500 00 1 01077         CAL     IOD,1         MEMORY BOUND.
      00541  0771 00 0 00022         ARS     18            (SHIFT OUT OF DECREMENT) 
      00542  0602 00 0 00704         SLW     WDCNT         ..     
      00543 -0500 00 1 01162         CAL     SEGCNT,1      GET SECTOR COUNT FOR USER.     
      00544  0602 00 0 00705         SLW     SCTCNT   
      00545 -0500 00 0 01720         CAL     =H            IF NOT PARTIAL DUMP, BLANK.    
      00546  0520 00 1 01245         ZET     PRTIAL,1      TEST FOR PARTIAL DUMP.   
      00547 -0500 00 0 01713         CAL     =H*           ELSE, PRINT '*'.   
      00550  0602 00 0 00707         SLW     PART          ..     
      00551  0535 00 4 01646         LAC     USER,4        GET MY USER NUMBER, SO MAP WON'T     
      00552 -0634 00 4 00557         SXD     ME,4          CLAIM I'M SWAPPING FROM DISK.  
      00553  1 77777 4 00554         TXI     *+1,4,-1      ..     
      00554 -0634 00 4 00556         SXD     NEXT,4        ..     
      00555  0560 00 0 00663         LDQ     SCTPT         SET UP FORMATTER   
      00556 -3 00000 1 00560  NEXT   TXL     *+2,1,-       IF NOT ME, SKIP.   
      00557 -3 00000 1 00563  ME     TXL     *+4,1,-       IF ME, SKIP NOW.   
      00560 -0100 00 0 00563         TNZ     *+3           TO SAY 'DISK'
      00561 -0520 00 0 00704         NZT     WDCNT         FOR USER SWAPPING FROM   
      00562  0560 00 0 00662         LDQ     DSKPT         DISK INSTEAD OF DRUM.    
      00563 -0600 00 0 00575         STQ     DSKDRM        ..     
      00564  0074 00 4 00015         TSX     $.FMT,4       GO FORMAT LINE.    
      00565  0 00001 0 00565         PZE     *,0,1    
      00566  0 00002 4 00700         PZE     LINE,4,2 
      00567  0 00001 0 00567         PZE     *,0,1    
      00570  0 00006 1 00702         PZE     PROB,1,6 
      00571  0 00006 1 00703         PZE     PROG,1,6 
1       M1416-3845  PETER R. BOS  2/02/68 -- HIGH SPEED DRUM STATISTICS.         01/08/69 1749.3 PAGE 6     
                  
      00572  0 00002 0 00572         PZE     *,0,2    
      00573  0 00005 4 00704         PZE     WDCNT,4,5
      00574  0 00002 0 00574         PZE     *,0,2    
      00575  0 00000 0 00000  DSKDRM PZE     -,-,-    
      00576  0 00001 1 00707         PZE     PART,1,1 
      00577  0 00001 0 00577         PZE     *,0,1    
      00600  0 00006 1 00701         PZE     STATE,1,6
      00601  0 00000 0 00000         PZE     0  
      00602  0602 00 0 00604         SLW     *+2
      00603                          CALL    WRFLX((-,,-))  
      00605  1 77777 1 00606  ENDLP  TXI     *+1,1,-1      INCREMENT LINE COUNT.    
      00606  3 77715 1 00506         TXH     LOOP,1,-N-1   IF NOT DONE, DO SOME MORE.     
      00607                          CALL    WRFLX((*,,0)) TYPE A C.R.  
                  
      00611 -0520 00 0 00664  SNORE  NZT     SLPTIM        ARE WE SLEEPING. Q 
      00612  0020 00 0 00621         TRA     XIT           NO, EXIT.    
      00613 -0500 00 0 00710         CAL     MEMBND        RESET MEMBND NOW THAT COMLOC AND     
      00614  0074 00 4 00006         TSX     SETMEM,4      ACORE ARE DONE.    
      00615                          CALL    $SNOOZE(SLPTIM,=0)   
      00620  0020 00 0 00057         TRA     START         (YAWN) .. MORE WORK TO DO.     
                  
      00621                   XIT    CALL    CHNCOM(0)     EXIT VIA CHNCOM.   
                  
      00623                   BAD    TYPE    4(BAD DUMP MODULE ADDRESS) 
      00625  0020 00 0 00621         TRA     XIT           AND EXIT.    
                  
                  
                                             STORAGE AND CONSTANTS.     
                  
                       00062  N      EQU     50            MUST BE CHANGED WHEN CTSS IS CHANGED****** 
                      001435  LPNT   BOOL    1435          POINTER TO LAST WORD IN DUMP TABLE.  
                      001103  LSCT   BOOL    1103          REL. ADDRESS OF 'SCOUNT' 
                      002052  LSGCT  BOOL    2052          REL. ADDRESS OF 'SEGCNT' 
                      001704  LPRTL  BOOL    1704          REL. ADDRESS OF 'PRTIAL' 
                      000246  NSECTS BOOL    246           NUMBER OF DRUM SECTORS.  
                  
      00626  0 00000 0 00246  SECTRS PZE     NSECTS        ..     
      00627 -377777777777     FENCE  OCT     777777777777   
      00630 +010006074000     LDRMWD OCT     010006074000  LAST WORD IN DRUM TABLE. 
                  
      00631  303127306062     DRUM   BCI     3,HIGH SPEED DRUM    
      00632  472525246024     
      00633  516444606060     
      00634  602664434360     AT     BCI     2, FULL AT     
      00635  216360606060     
      00636  606225236346     USED   BCI     3, SECTORS USED,     
      00637  516260646225     
      00640  247360606060     
      00641  604325266360     LEFT   BCI     1, LEFT  
      00642  646225516213     USRS   BCI     1,USERS= 
      00643  442167136060     MAX    BCI     1,MAX=   
      00644  336060606060     DOT    BCI     1,.
      00645  736060606060     CMA    BCI     1,,
      00646  506425642560     QLEN   BCI     3,QUEUE LENGTH =     
      00647  432545276330     
      00650  601360606060     
1       M1416-3845  PETER R. BOS  2/02/68 -- HIGH SPEED DRUM STATISTICS.         01/08/69 1749.3 PAGE 7     
                  
      00651  604665255126     OVER   BCI     4, OVERFLOWING DRUM AT     
      00652  434666314527     
      00653  602451644460     
      00654  216360606060     
      00655  243162426062     SWAP   BCI     3,DISK SWAP TIME =   
      00656  662147606331     
      00657  442560136060     
      00660  604431456233     MINS.  BCI     1, MINS. 
                  
      00661  243162426060     DISK   BCI     1,DISK   
      00662  0 00004 1 00661  DSKPT  PZE     DISK,1,4 
      00663  0 00004 4 00705  SCTPT  PZE     SCTCNT,4,4     
                  
      00664  0 00000 0 00000  SLPTIM PZE  
      00665  0 00000 0 00000  MAP.   PZE  
      00666  0 00000 0 00000  PCT1   PZE  
      00667  0 00000 0 00000  PCT2   PZE  
      00670  0 00000 0 00000  PCT3   PZE  
      00671  0 00000 0 00000  DATE   PZE  
      00672  0 00000 0 00000  TIME   PZE  
      00673  0 00000 0 00000  SCTUSD PZE  
      00674  0 00000 0 00000  AVQL1  PZE  
      00675  0 00000 0 00000  AVQL2  PZE  
      00676  0 00000 0 00000  OVRDL1 PZE  
      00677  0 00000 0 00000  OVRDL2 PZE  
      00700  0 00000 0 00000  LINE   PZE  
      00701  0 00000 0 00000  STATE  PZE  
      00702  0 00000 0 00000  PROB   PZE  
      00703  0 00000 0 00000  PROG   PZE  
      00704  0 00000 0 00000  WDCNT  PZE  
      00705  0 00000 0 00000  SCTCNT PZE  
      00706  0 00000 0 00000  LASTDL PZE  
      00707  0 00000 0 00000  PART   PZE  
      00710  0 00000 0 00000  MEMBND PZE  
                  
      00711  602622666360            BCI     1, FBWT  
      00712  602643666360            BCI     1, FLWT  
      00713  604640666360            BCI     1, O-WT  
      00714  603140666360            BCI     1, I-WT  
      00715  602346442460            BCI     1, COMD  
      00716  606651422760            BCI     1, WRKG  
      00717  602451446360            BCI     1, DRMT  
      00720  602425212460     STABLE BCI     1, DEAD  
                  
      00721                          RMT     *  
                       00723  OVRTIM SYN     OVRFLO   
                       00724  OVRDLT SYN     OVRFLO+1 
                       00725  OVRCNT SYN     OVRFLO+2 
                  
                                     END  
                  
        LITERALS  
      01662  000000000000     
      01663  000000000001     
      01664  000000000012     
      01665  000000000057     
1       M1416-3845  PETER R. BOS  2/02/68 -- HIGH SPEED DRUM STATISTICS.         01/08/69 1749.3 PAGE 8     
                  
      01666  000000000074     
      01667  000000000144     
      01670  000000000550     
      01671  000004000000     
      01672  000005000000     
      01673  200400000000     
      01674  207620000000     
      01675  216550432545     
      01676  216621422560     
      01677  233000000000     
      01700  234644444524     
      01701  246444476060     
      01702  273145346060     
      01703  275146644524     
      01704  314624606060     
      01705  434627314560     
      01706  446764625162     
      01707  456462255162     
      01710  466551264346     
      01711  475146224560     
      01712  475146274560     
      01713  546060606060     
      01714  602162434760     
      01715  602451446360     
      01716  606022212342     
      01717  606060605033     
      01720  606060606060     
      01721  606060744346     
      01722  626321636462     
      01723  634663633144     
      01724  646225516060     
      01725  662163633144     
1       M1416-3845  PETER R. BOS  2/02/68 -- HIGH SPEED DRUM STATISTICS.         01/08/69 1749.3 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1726 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         62      N   140,  147,  156,  170,  202,  211,  220,  227,  245,  606,  626,  731, 1014, 1077, 1162, 1245, 1330
                    1413, 1476, 1562
        634     AT   333
        557     ME   552
        623    BAD    56
        645    CMA   377,  403,  440
        644    DOT   330,  375,  464
       1077    IOD   157,  540
          1    ..A    21,   25,   33,   40,   60,  305,  306,  342,  356,  411,  424,  444,  472,  474,  604,  610,  616
                     617,  622
          0    ..D    21,   25,   33,   40,   60,  305,  306,  342,  356,  411,  424,  444,  472,  474,  604,  610,  616
                     617,  622
          0    ..T    21,   25,   33,   40,   60,  305,  306,  342,  356,  411,  424,  444,  472,  474,  604,  610,  616
                     617,  622
        643    MAX   404
        621    XIT    21,  612,  625
        473   C.R.   450
        671   DATE   305,  316,  324,  336
        661   DISK   662
        631   DRUM   326
        521   ISIN   507
         15   .FMT   325,  346,  372,  432,  461,  564
          0   ..OP    21,   25,   33,   40,   60,  305,  306,  342,  356,  411,  424,  444,  472,  474,  604,  610,  616
                     617,  622
        641   LEFT   352
        700   LINE   521,  566
        506   LOOP   506,  606
       1435   LPNT    46,  626
       1103   LSCT    64,  626
        665   MAP.    42,  131,  475
        556   NEXT   554
        651   OVER   436
        707   PART   550,  576
        666   PCT1   276,  327
        667   PCT2   302,  331
        670   PCT3   303,  332
        702   PROB   535,  570
        703   PROG   537,  571
        646   QLEN   373
        655   SWAP   462
        672   TIME   306,  307,  315,  334
        636   USED   350
       1646   USER   265,  551
        642   USRS   400,  435
         12  ACORE    43,   61,   73,  103,  160,  172,  247
        674  AVQL1   370,  374
        675  AVQL2   371,  376
       1413  AWAKE   221,  530
         11  BCDEC    32
        662  DSKPT   562
        605  ENDLP   512,  514,  524
1       M1416-3845  PETER R. BOS  2/02/68 -- HIGH SPEED DRUM STATISTICS.         01/08/69 1749.3 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        627  FENCE    27
         14  GETTM   304
         16  HRMIN   423
        721  ..007    54
         43  ..008    51
         61  ..010    67
         73  ..011    77
        103  ..012   107
        113  ..013   116
        122  ..014   125
        133  ..015   136
        142  ..016   145
        151  ..017   154
        160  ..018   166
        172  ..019   200
        204  ..020   207
        213  ..021   216
        222  ..022   225
        231  ..023   234
        240  ..024   243
        247  ..025   253
        257  ..026   262
       1647  ..035   500
       1656  ..041   624
          1  ..PZE    21,   25,   33,   40,   60,  305,  342,  356,  411,  424,  444,  472,  474,  604,  610,  616,  622
       1645  LOGIN   256,  511
       1704  LPRTL   175,  626
       2052  LSGCT   163,  626
        660  MINS.   466
        266  NOMAP   132,  266
        731  PROBN   141,  502,  506,  516,  534
       1014  PROGN   150,  504,  520,  536
        663  SCTPT   555
          7  SLEEP      
        611  SNORE   476
         57  START    57,  620
        701  STATE   533,  600
        704  WDCNT   542,  561,  573
          4  WRFLX    57,  341,  355,  410,  471,  473,  477,  603,  607,  623
        726 AVQLEN   112,  357
         10 CHNCOM   621
         13 COMLOC   113,  122,  133,  142,  151,  204,  213,  222,  231,  240,  257
       1562 COMMND   246,  510
        575 DSKDRM   563
          2 GETCOM    24,   37
          3 GETLOC    52,   70,  100,  110,  117,  126,  137,  146,  155,  167,  201,  210,  217,  226,  235,  244,  254
                     263
          1 GETMEM    22
        706 LASTDL   446,  451
        630 LDRMWD    55
        710 MEMBND    23,  613
        730 MXUSRS   130,  405
        445 NOBODY   413
        246 NSECTS   626
        727 NUSERS   121,  402
1       M1416-3845  PETER R. BOS  2/02/68 -- HIGH SPEED DRUM STATISTICS.         01/08/69 1749.3 PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        725 OVRCNT   412,  416,  433, 1662
        676 OVRDL1   457,  463
        677 OVRDL2   460,  465
        724 OVRDLT   445, 1662
        723 OVRFLO   102, 1662
        723 OVRTIM   424,  431,  437, 1662
        435 OVRUSR   415,  422
       1245 PRTIAL   203,  546
        722 SCOUNT    72,  267,  344,  351
        705 SCTCNT   544,  663
        673 SCTUSD   345,  347
        626 SECTRS   266,  273,  343
       1162 SEGCNT   171,  543
          0 SETBRK    20
          6 SETMEM   614
        664 SLPTIM    26,   31,   33,   36,  611,  616
         17 SNOOZE   615
        720 STABLE   525
       1330 STATUS   212,  522
       1561 TOTTIM   237
       1476 WATTIM   230
          5 WRFLXA   443
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




FAPCOM   BCD 09/20/68 0219.9    6116         00000    
1                                                                                                PAGE 1     
                  
                  
        TRANSFER VECTOR 
      00000  272563442544     GETMEM
      00001  622563442544     SETMEM
      00002  262147234644     FAPCOM
                  
      00003  0074 00 4 00000         TSX     $GETMEM,4
      00004  0400 00 0 00011         ADD     =2160    
      00005  0074 00 4 00001         TSX     $SETMEM,4
      00006  0621 00 0 00010         STA     CALL     
      00007  0074 00 4 00002         TSX     $FAPCOM,4
      00010  3 00000 0 00000  CALL   PTH  
                                     END  
                  
        LITERALS  
      00011  000000004160     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         12 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         10   CALL     6
          2 FAPCOM     7
          0 GETMEM     3
          1 SETMEM     5
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1     MAD PROGRAM LISTING ... ... ...                 FILE  FAPCOM   MAD            02/13/68    0145.9
-                 
                   FAPCOM                                                                              LM00001    
                                                                                                       LM00002    
                   ROUTINE FOR INSERTING COMENTS IN FAP PROGRAMS                                       LM00003    
                   ALL PROGRAMS MUST BE 'XPAND'ED                                                      LM00004    
                   NEEDS FCMAIN FAP AND REDWRT FAP                                                     LM00005    
                                                                                                       LM00006    
                   BY MICHAEL R COMER 7/18/67                                                          LM00007    
                                                                                                       LM00008    
                  EXTERNAL FUNCTION (B)                                                           *001 LM00009    
                  DIMENSION L(8),F(13)                                                            *002 LM00010    
                  NORMAL MODE IS INTEGER                                                          *003 LM00011    
                  BOOLEAN QUITSW,PRNTSW,FULLSW                                                    *004 LM00012    
                  VECTOR VALUES QUITSW = 0B                                                       *005 LM00013    
                  VECTOR VALUES PRNTSW = 1B                                                       *006 LM00014    
                  VECTOR VALUES FULLSW = 0B                                                       *007 LM00015    
                  VECTOR VALUES FENCE = 777777777777K                                             *008 LM00016    
                  VECTOR VALUES T = $GAZABE$                                                      *009 LM00017    
                  ENTRY TO FAPCOM.                                                                *010 LM00018    
                  SETBRK.(TIXE)                                                                   *011 LM00019    
                  COMARG.(1,N1)                                                                   *012 LM00020    
                  COMARG.(2,N2)                                                                   *013 LM00021    
                  COMARG.(3,N3)                                                                   *014 LM00022    
                  COMARG.(4,N4)                                                                   *015 LM00023    
                  WHENEVER N1 .E. FENCE, ERR.(5)                                                  *016 LM00024    
                  WHENEVER N2 .E. FENCE, TRANSFER TO SKIP1                                        *017 LM00025    
                  WHENEVER N3 .E. FENCE, TRANSFER TO SKIP2                                        *018 LM00026    
                  WHENEVER N4 .E. FENCE, N4 = N2                                                  *019 LM00027    
                  TRANSFER TO SKIP3                                                               *020 LM00028    
      SKIP1       N2 = $   FAP$                                                                   *021 LM00029    
      SKIP2       N3 = N1                                                                         *022 LM00030    
                  N4 = N2                                                                         *023 LM00031    
      SKIP3       BFOPEN.($R$,N1,N2,B(431),B(863),-0,IERR)                                        *024 LM00032    
                  BFOPEN.($W$,T,T,B(1295),B(1727),B(2159),IERR)                                   *025 LM00033    
                  BFREAD.(N1,N2,F(13)...14,EOF,F,IERR)                                            *026 LM00034    
                  WHENEVER F(13).A.777777K6.E.777777K6,ERR.(6)                                    *027 LM00035    
                  TRANSFER TO PRINT                                                               *028 LM00036    
      LOOP        BFREAD.(N1,N2,F(13)...14,EOF,F,IERR)                                            *029 LM00037    
                  WHENEVER QUITSW,TRANSFER TO SKIP                                                *030 LM00038    
      PRINT       WHENEVER PRNTSW,WRTA.(F(13)...5)                                                *031 LM00039    
                  WHENEVER FULLSW,WRT.(F(8)...9)                                                  *032 LM00040    
                  RED.(L(8)...7)                                                                  *033 LM00041    
                  WHENEVER L(8).E.$ $                                                             *034 LM00042    
                    TRANSFER TO SKIP                                                              *035 LM00043    
                  OR WHENEVER L(8) .E.$.KILL$                                                     *036 LM00044    
                    L(8) = $ $                                                                    *037 LM00045    
                  OR WHENEVER L(8).E.$.PRINT$                                                     *038 LM00046    
                    PRNTSW = 1B                                                                   *039 LM00047    
                    FULLSW = 0B                                                                   *040 LM00048    
                    TRANSFER TO PRINT                                                             *041 LM00049    
                  OR WHENEVER L(8).E.$.OFF$                                                       *042 LM00050    
                    PRNTSW = 0B                                                                   *043 LM00051    
                    FULLSW = 0B                                                                   *044 LM00052    
                    TRANSFER TO PRINT                                                             *045 LM00053    
                  OR WHENEVER L(8) .E. $.FULL$                                                    *046 LM00054    
                    PRNTSW = 1B                                                                   *047 LM00055    
                    FULLSW = 1B                                                                   *048 LM00056    
                    TRANSFER TO PRINT                                                             *049 LM00057    
                  OR WHENEVER L(8).E.$.FILE$                                                      *050 LM00058    
                    PRNTSW = 0B                                                                   *051 LM00059    
                    FULLSW = 0B                                                                   *052 LM00060    
                    QUITSW = 1B                                                                   *053 LM00061    
                    TRANSFER TO SKIP                                                              *054 LM00062    
                  END OF CONDITIONAL                                                              *055 LM00063    
                  F(9) = (F(9).A.7777777777K2).V.$00000$                                          *056 LM00064    
                  THROUGH TNSFER,FOR I = 8,-1, I .LE. 0                                           *057 LM00065    
      TNSFER      F(I) = L(I)                                                                     *058 LM00066    
      SKIP        BFWRIT.(T,T,F(13)...14,IERR)                                                    *059 LM00067    
                  TRANSFER TO LOOP                                                                *060 LM00068    
      EOF         BFCLOS.(N1,N2,IERR)                                                             *061 LM00069    
                  BFCLOS.(T,T,IERR)                                                               *062 LM00070    
                  FSTATE.(N3,N4,F,OK)                                                             *063 LM00071    
                  DELFIL.(N3,N4)                                                                  *064 LM00072    
      OK          CHFILE.(T,T,0,N3,N4)                                                            *065 LM00073    
      TIXE        CHNCOM.(0)                                                                      *066 LM00074    
      IERR        CODE = BFCODE.(0)                                                               *067 LM00075    
                  ERR.(CODE)                                                                      *068 LM00076    
                  INTERNAL FUNCTION (X)                                                           *069 LM00077    
                  ENTRY TO ERR.                                                                   *070 LM00078    
                  Y = X.V.$ERROR0$                                                                *071 LM00079    
                  WRT.(Y...1)                                                                     *072 LM00080    
                  DORMNT.                                                                         *073 LM00081    
                  END OF FUNCTION                                                                 *074 LM00082    
                  END OF FUNCTION                                                                 *075 LM00083    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00514 TRANSFER VECTOR LENGTH  00020 PROGRAM BEGINS    00130
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      FAPCOM 00131   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      CODE   00034   1        IERR   00023   4        N2     00070   1        PRNTSW 00073 A 2        SKIP   00032   4  
      EOF    00022   4        I      00055   1        N3     00071   1        QUITSW 00074 A 2        TIXE   00033   4  
      FENCE  00035 A 1        LOOP   00024   4        N4     00072   1        SKIP1  00027   4        TNSFER 00021   4  
      F      00053 A 1        L      00066 A 1        OK     00025   4        SKIP2  00030   4        T      00075 A 1  
      FULLSW 00054 A 2        N1     00067   1        PRINT  00026   4        SKIP3  00031   4        Y      00076   1  
0FUNCTION DICTIONARY    
      BFCLOS 00000   1        BFCODE 00001   1        BFOPEN 00002   1        BFREAD 00003   1        BFWRIT 00004   1  
      CHFILE 00005   1        CHNCOM 00006   1        COMARG 00007   1        DELFIL 00010   1        DORMNT 00011   1  
      EXIT   00012   1        FSTATE 00013   1        RED    00014   1        SETBRK 00015   1        WRTA   00016   1  
      WRT    00017   1        ERR    00020   1                                                                          
0ABSOLUTE CONSTANTS     
 00114 +255151465100     00107 +000000000010     00112 +000000000060     00127 -377777777700     00115 +332631432560    
 00116 +332664434360     00120 +334626266060     00121 +334751314563     00117 +334231434360     00124 -206060606060    
 00106 +000000000007     00110 +000000000011     00105 +000000000006     00126 -377777000000     00111 +000000000016    
 00125 -266060606060     00122 -116060606060     00077 +000000000000     00123 -206060262147     00104 +000000000005    
 00103 +000000000004     00102 +000000000003     00101 +000000000002     00100 +000000000001     00113 +233000000000    
0STATEMENT DICTIONARY   
 00022 TXL -300405000401       00023 TXL -300434000431       00024 TXL -300253000244       00025 TXL -300427000421      
 00026 TXL -300262000256       00027 TXL -300176000174       00030 TXL -300200000176       00031 TXL -300214000202      
 00032 TXL -300400000373       00033 TXL -300431000427                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION (B)                                              001  LM00009
                 D'N L(8),F(13)                                                     002  LM00010
                 N'S INTEGER                                                        003  LM00011
                 BOOLEAN QUITSW,PRNTSW,FULLSW                                       004  LM00012
                 V'S QUITSW = 0B                                                    005  LM00013
 00074     +0 00000 0 00000                                                                                             
                 V'S PRNTSW = 1B                                                    006  LM00014
 00073     +0 00000 0 00001                                                                                             
                 V'S FULLSW = 0B                                                    007  LM00015
 00054     +0 00000 0 00000                                                                                             
                 V'S FENCE = 777777777777K                                          008  LM00016
 00035     -3 77777 7 77777                                                                                             
                 V'S T = $GAZABE$                                                   009  LM00017
 00075     +2 72171 2 12225                                                                                             
                 E'O FAPCOM.                                                        010  LM00018
 00130 TRA +0 02000 0 00133    00131 SXA +0 63400 2 00466    00132 TSX +0 07400 2 00466                                 
                 SETBRK.(TIXE)                                                      011  LM00019
 00133 TSX +0 07400 4 00015    00134 TXH +3 00000 0 00033                                                               
                 COMARG.(1,N1)                                                      012  LM00020
 00135 TSX +0 07400 4 00007    00136 TXH +3 00000 0 00100    00137 TXH +3 00000 0 00067                                 
                 COMARG.(2,N2)                                                      013  LM00021
 00140 TSX +0 07400 4 00007    00141 TXH +3 00000 0 00101    00142 TXH +3 00000 0 00070                                 
                 COMARG.(3,N3)                                                      014  LM00022
 00143 TSX +0 07400 4 00007    00144 TXH +3 00000 0 00102    00145 TXH +3 00000 0 00071                                 
                 COMARG.(4,N4)                                                      015  LM00023
 00146 TSX +0 07400 4 00007    00147 TXH +3 00000 0 00103    00150 TXH +3 00000 0 00072                                 
                 W'R N1 .E. FENCE, ERR.(5)                                          016  LM00024
 00151 CLA +0 50000 0 00067    00152 SUB +0 40200 0 00035    00153 TNZ -0 10000 0 00156    00154 TSX +0 07400 4 00020   
 00155 TXH +3 00000 0 00104                                                                                             
                 W'R N2 .E. FENCE, T'O SKIP1                                        017  LM00025
 00156 CLA +0 50000 0 00070    00157 SUB +0 40200 0 00035    00160 TNZ -0 10000 0 00162    00161 TRA +0 02000 0 00027   
                 W'R N3 .E. FENCE, T'O SKIP2                                        018  LM00026
 00162 CLA +0 50000 0 00071    00163 SUB +0 40200 0 00035    00164 TNZ -0 10000 0 00166    00165 TRA +0 02000 0 00030   
                 W'R N4 .E. FENCE, N4 = N2                                          019  LM00027
 00166 CLA +0 50000 0 00072    00167 SUB +0 40200 0 00035    00170 TNZ -0 10000 0 00173    00171 CLA +0 50000 0 00070   
 00172 STO +0 60100 0 00072                                                                                             
                 T'O SKIP3                                                          020  LM00028
 00173 TRA +0 02000 0 00031                                                                                             
      SKIP1      N2 = $   FAP$                                                      021  LM00029
 00174 CLA +0 50000 0 00123    00175 STO +0 60100 0 00070                                                               
      SKIP2      N3 = N1                                                            022  LM00030
 00176 CLA +0 50000 0 00067    00177 STO +0 60100 0 00071                                                               
                 N4 = N2                                                            023  LM00031
 00200 CLA +0 50000 0 00070    00201 STO +0 60100 0 00072                                                               
      SKIP3      BFOPEN.($R$,N1,N2,B(431),B(863),-0,IERR)                           024  LM00032
 00202 CLS +0 50200 0 00077    00203 STO +0 60100 0 00511    00204 TSX +0 07400 4 00002    00205 TXH +3 00000 0 00122   
 00206 TXH +3 00000 0 00067    00207 TXH +3 00000 0 00070    00210 TXH +3 00000 0 00633    00211 TXH +3 00000 0 01513   
 00212 TXH +3 00000 0 00511    00213 TXH +3 00000 0 00023                                                               
                 BFOPEN.($W$,T,T,B(1295),B(1727),B(2159),IERR)                      025  LM00033
 00214 TSX +0 07400 4 00002    00215 TXH +3 00000 0 00125    00216 TXH +3 00000 0 00075    00217 TXH +3 00000 0 00075   
 00220 TXH +3 00000 0 02373    00221 TXH +3 00000 0 03253    00222 TXH +3 00000 0 04133    00223 TXH +3 00000 0 00023   
                 BFREAD.(N1,N2,F(13)...14,EOF,F,IERR)                               026  LM00034
 00224 TSX +0 07400 4 00003    00225 TXH +3 00000 0 00067    00226 TXH +3 00000 0 00070    00227 TIX +2 00111 0 00036   
 00230 TXH +3 00000 0 00022    00231 TXH +3 00000 0 00053    00232 TXH +3 00000 0 00023                                 
                 W'R F(13).A.777777K6.E.777777K6,ERR.(6)                            027  LM00035
 00233 CAL -0 50000 0 00036    00234 ANA -0 32000 0 00126    00235 SLW +0 60200 0 00511    00236 CLA +0 50000 0 00511   
 00237 SUB +0 40200 0 00126    00240 TNZ -0 10000 0 00243    00241 TSX +0 07400 4 00020    00242 TXH +3 00000 0 00105   
                 T'O PRINT                                                          028  LM00036
 00243 TRA +0 02000 0 00026                                                                                             
      LOOP       BFREAD.(N1,N2,F(13)...14,EOF,F,IERR)                               029  LM00037
 00244 TSX +0 07400 4 00003    00245 TXH +3 00000 0 00067    00246 TXH +3 00000 0 00070    00247 TIX +2 00111 0 00036   
 00250 TXH +3 00000 0 00022    00251 TXH +3 00000 0 00053    00252 TXH +3 00000 0 00023                                 
                 W'R QUITSW,T'O SKIP                                                030  LM00038
 00253 NZT -0 52000 0 00074    00254 TRA +0 02000 0 00256    00255 TRA +0 02000 0 00032                                 
      PRINT      W'R PRNTSW,WRTA.(F(13)...5)                                        031  LM00039
 00256 NZT -0 52000 0 00073    00257 TRA +0 02000 0 00262    00260 TSX +0 07400 4 00016    00261 TIX +2 00104 0 00036   
                 W'R FULLSW,WRT.(F(8)...9)                                          032  LM00040
 00262 NZT -0 52000 0 00054    00263 TRA +0 02000 0 00266    00264 TSX +0 07400 4 00017    00265 TIX +2 00110 0 00043   
                 RED.(L(8)...7)                                                     033  LM00041
 00266 TSX +0 07400 4 00014    00267 TIX +2 00106 0 00056                                                               
                 W'R L(8).E.$ $                                                     034  LM00042
 00270 CLA +0 50000 0 00056    00271 SUB +0 40200 0 00124    00272 TNZ -0 10000 0 00275                                 
                   T'O SKIP                                                         035  LM00043
 00273 TRA +0 02000 0 00032                                                                                             
                 O'R L(8) .E.$.KILL$                                                036  LM00044
 00274 TRA +0 02000 0 00350    00275 CLA +0 50000 0 00056    00276 SUB +0 40200 0 00117    00277 TNZ -0 10000 0 00303   
                   L(8) = $ $                                                       037  LM00045
 00300 CLA +0 50000 0 00124    00301 STO +0 60100 0 00056                                                               
                 O'R L(8).E.$.PRINT$                                                038  LM00046
 00302 TRA +0 02000 0 00350    00303 CLA +0 50000 0 00056    00304 SUB +0 40200 0 00121    00305 TNZ -0 10000 0 00314   
                   PRNTSW = 1B                                                      039  LM00047
 00306 CLA +0 50000 0 00100    00307 STO +0 60100 0 00073                                                               
                   FULLSW = 0B                                                      040  LM00048
 00310 CLA +0 50000 0 00077    00311 STO +0 60100 0 00054                                                               
                   T'O PRINT                                                        041  LM00049
 00312 TRA +0 02000 0 00026                                                                                             
                 O'R L(8).E.$.OFF$                                                  042  LM00050
 00313 TRA +0 02000 0 00350    00314 CLA +0 50000 0 00056    00315 SUB +0 40200 0 00120    00316 TNZ -0 10000 0 00325   
                   PRNTSW = 0B                                                      043  LM00051
 00317 CLA +0 50000 0 00077    00320 STO +0 60100 0 00073                                                               
                   FULLSW = 0B                                                      044  LM00052
 00321 CLA +0 50000 0 00077    00322 STO +0 60100 0 00054                                                               
                   T'O PRINT                                                        045  LM00053
 00323 TRA +0 02000 0 00026                                                                                             
                 O'R L(8) .E. $.FULL$                                               046  LM00054
 00324 TRA +0 02000 0 00350    00325 CLA +0 50000 0 00056    00326 SUB +0 40200 0 00116    00327 TNZ -0 10000 0 00336   
                   PRNTSW = 1B                                                      047  LM00055
 00330 CLA +0 50000 0 00100    00331 STO +0 60100 0 00073                                                               
                   FULLSW = 1B                                                      048  LM00056
 00332 CLA +0 50000 0 00100    00333 STO +0 60100 0 00054                                                               
                   T'O PRINT                                                        049  LM00057
 00334 TRA +0 02000 0 00026                                                                                             
                 O'R L(8).E.$.FILE$                                                 050  LM00058
 00335 TRA +0 02000 0 00350    00336 CLA +0 50000 0 00056    00337 SUB +0 40200 0 00115    00340 TNZ -0 10000 0 00350   
                   PRNTSW = 0B                                                      051  LM00059
 00341 CLA +0 50000 0 00077    00342 STO +0 60100 0 00073                                                               
                   FULLSW = 0B                                                      052  LM00060
 00343 CLA +0 50000 0 00077    00344 STO +0 60100 0 00054                                                               
                   QUITSW = 1B                                                      053  LM00061
 00345 CLA +0 50000 0 00100    00346 STO +0 60100 0 00074                                                               
                   T'O SKIP                                                         054  LM00062
 00347 TRA +0 02000 0 00032                                                                                             
                 E'L                                                                055  LM00063
                 F(9) = (F(9).A.7777777777K2).V.$00000$                             056  LM00064
 00350 CAL -0 50000 0 00042    00351 ANA -0 32000 0 00127    00352 ORA -0 50100 0 00112    00353 SLW +0 60200 0 00042   
                 T'H TNSFER,FOR I = 8,-1, I .LE. 0                                  057  LM00065
 00354 CLA +0 50000 0 00107    00355 STO +0 60100 0 00055    00356 TRA +0 02000 0 00362    00357 CLS +0 50200 0 00100   
 00360 ADD +0 40000 0 00055    00361 STO +0 60100 0 00055    00362 CLA +0 50000 0 00055    00363 SUB +0 40200 0 00077   
 00364 TZE +0 10000 0 00373    00365 TMI -0 12000 0 00373                                                               
      TNSFER     F(I) = L(I)                                                        058  LM00066
 00366 LXA +0 53400 1 00055    00367 LXA +0 53400 2 00055    00370 CLA +0 50000 2 00066    00371 STO +0 60100 1 00053   
 00372 TRA +0 02000 0 00357                                                                                             
      SKIP       BFWRIT.(T,T,F(13)...14,IERR)                                       059  LM00067
 00373 TSX +0 07400 4 00004    00374 TXH +3 00000 0 00075    00375 TXH +3 00000 0 00075    00376 TIX +2 00111 0 00036   
 00377 TXH +3 00000 0 00023                                                                                             
                 T'O LOOP                                                           060  LM00068
 00400 TRA +0 02000 0 00024                                                                                             
      EOF        BFCLOS.(N1,N2,IERR)                                                061  LM00069
 00401 TSX +0 07400 4 00000    00402 TXH +3 00000 0 00067    00403 TXH +3 00000 0 00070    00404 TXH +3 00000 0 00023   
                 BFCLOS.(T,T,IERR)                                                  062  LM00070
 00405 TSX +0 07400 4 00000    00406 TXH +3 00000 0 00075    00407 TXH +3 00000 0 00075    00410 TXH +3 00000 0 00023   
                 FSTATE.(N3,N4,F,OK)                                                063  LM00071
 00411 TSX +0 07400 4 00013    00412 TXH +3 00000 0 00071    00413 TXH +3 00000 0 00072    00414 TXH +3 00000 0 00053   
 00415 TXH +3 00000 0 00025                                                                                             
                 DELFIL.(N3,N4)                                                     064  LM00072
 00416 TSX +0 07400 4 00010    00417 TXH +3 00000 0 00071    00420 TXH +3 00000 0 00072                                 
      OK         CHFILE.(T,T,0,N3,N4)                                               065  LM00073
 00421 TSX +0 07400 4 00005    00422 TXH +3 00000 0 00075    00423 TXH +3 00000 0 00075    00424 TXH +3 00000 0 00077   
 00425 TXH +3 00000 0 00071    00426 TXH +3 00000 0 00072                                                               
      TIXE       CHNCOM.(0)                                                         066  LM00074
 00427 TSX +0 07400 4 00006    00430 TXH +3 00000 0 00077                                                               
      IERR       CODE = BFCODE.(0)                                                  067  LM00075
 00431 TSX +0 07400 4 00001    00432 TXH +3 00000 0 00077    00433 STO +0 60100 0 00034                                 
                 ERR.(CODE)                                                         068  LM00076
 00434 TSX +0 07400 4 00020    00435 TXH +3 00000 0 00034                                                               
                 INTERNAL FUNCTION (X)                                              069  LM00077
 00436 TRA +0 02000 0 00463                                                                                             
                 E'O ERR.                                                           070  LM00078
 00437 TRA +0 02000 0 00442    00020 TTR +0 02100 0 00440    00440 SXA +0 63400 2 00451    00441 TSX +0 07400 2 00451   
                 Y = X.V.$ERROR0$                                                   071  LM00079
 00442 CAL -0 50000 0 00024    00443 ORA -0 50100 0 00114    00444 SLW +0 60200 0 00076                                 
                 WRT.(Y...1)                                                        072  LM00080
 00445 TSX +0 07400 4 00017    00446 TIX +2 00100 0 00076                                                               
                 DORMNT.                                                            073  LM00081
 00447 TSX +0 07400 4 00011                                                                                             
                 END OF FUNCTION                                                    074  LM00082
 00450 TSX +0 07400 4 00012    00451 TXH +3 00000 0 00000    00452 SXD -0 63400 1 00451    00453 SXA +0 63400 4 00457   
 00454 CLA +0 50000 4 00001    00455 STA +0 62100 0 00442    00456 TRA +0 02000 2 00001    00457 AXT +0 77400 4 00000   
 00460 LXA +0 53400 2 00451    00461 LXD -0 53400 1 00451    00462 TRA +0 02000 4 00001                                 
                 END OF FUNCTION                                                    075  LM00083
 00463 TSX +0 07400 4 00012    00464 PZE +0 00000 0 00657    00465 PZE +0 00000 0 00660    00466 TXH +3 00000 0 00000   
 00467 SXD -0 63400 1 00466    00470 SXA +0 63400 4 00505    00471 CLA +0 50000 4 00001    00472 SUB +0 40200 0 00464   
 00473 STO +0 60100 0 00210    00474 SUB +0 40200 0 00465    00475 STO +0 60100 0 00211    00476 SUB +0 40200 0 00465   
 00477 STO +0 60100 0 00220    00500 SUB +0 40200 0 00465    00501 STO +0 60100 0 00221    00502 SUB +0 40200 0 00465   
 00503 STO +0 60100 0 00222    00504 TRA +0 02000 2 00001    00505 AXT +0 77400 4 00000    00506 LXA +0 53400 2 00466   
 00507 LXD -0 53400 1 00466    00510 TRA +0 02000 4 00001                                                               
1                                                                                                PAGE 1     
                  
                       00005         ENTRY   RED
                       00020         ENTRY   WRT
                       00033         ENTRY   WRTA     
                  
        TRANSFER VECTOR 
      00000  512426436760     RDFLX 
      00001  665126436760     WRFLX 
      00002  665126436721     WRFLXA
                  
            LINKAGE DIRECTOR  
      00003  000000000000     
      00004  512524606060     
                  
      00005  0634 00 4 00016  RED    SXA     RX4,4    
      00006  0500 00 4 00001         CLA     1,4
      00007  0621 00 0 00015         STA     ARG
      00010  0771 00 0 00022         ARS     18 
      00011  0621 00 0 00012         STA     GET
      00012  0534 00 4 00000  GET    LXA     --,4     
      00013 -0634 00 4 00015         SXD     ARG,4    
      00014  0074 00 4 00000         TSX     $RDFLX,4 
      00015  0 00000 0 00000  ARG    PZE  
      00016  0774 00 4 00000  RX4    AXT     ,4 
      00017  0020 00 4 00002         TRA     2,4
                              *     
      00020  0634 00 4 00031  WRT    SXA     WX4,4    
      00021  0500 00 4 00001         CLA     1,4
      00022  0621 00 0 00030         STA     WARG     
      00023  0771 00 0 00022         ARS     18 
      00024  0621 00 0 00025         STA     WGET     
      00025  0534 00 4 00000  WGET   LXA     --,4     
      00026 -0634 00 4 00030         SXD     WARG,4   
      00027  0074 00 4 00001         TSX     $WRFLX,4 
      00030  0 00000 0 00000  WARG   PZE  
      00031  0774 00 4 00000  WX4    AXT     ,4 
      00032  0020 00 4 00002         TRA     2,4
                              *     
      00033  0634 00 4 00044  WRTA   SXA     AX4,4    
      00034  0500 00 4 00001         CLA     1,4
      00035  0621 00 0 00043         STA     AARG     
      00036  0771 00 0 00022         ARS     18 
      00037  0621 00 0 00040         STA     AGET     
      00040  0534 00 4 00000  AGET   LXA     --,4     
      00041 -0634 00 4 00043         SXD     AARG,4   
      00042  0074 00 4 00002         TSX     $WRFLXA,4
      00043  0 00000 0 00000  AARG   PZE  
      00044  0774 00 4 00000  AX4    AXT     ,4 
      00045  0020 00 4 00001         TRA     1,4
                                     END  
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         46 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         15    ARG     7,   13
         44    AX4    33
         12    GET    11
          5    RED     0
         16    RX4     5
         20    WRT     0
         31    WX4    20
         43   AARG    35,   41
         40   AGET    37
         30   WARG    22,   26
         25   WGET    24
         33   WRTA     0
          0  RDFLX    14
          1  WRFLX    27
          2 WRFLXA    42
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




  KEYS   BCD 09/20/68 0219.9    1849         00000    
1       M1416-3845  PETER R. BOS  --  TEST SENSE SWITCHES AND CONSOLE KEYS.                      PAGE 1     
                  
                                     PCC     ON 
                                     LBL     KEYS0000 
                                     PCC     OFF
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,ARGS                                                            
 M                            TSX    MACRO   SUBR,T        DEFINES TIA IF SUBR UNDEF.                             
                  
                  
                  
                              *     
                              *  USAGE IS ..    RESUME KEYS -N-   
                              *  WHERE N IS TIME TO SLEEP IN MINUTES    
                              *  BEFORE REPEATING.    
                              *     
                  
                  
                  
        TRANSFER VECTOR 
      00000  222324252360     BCDEC 
      00001  272563634460     GETTM 
                  
      00002                          CALL    GETCOM(1)     GET SLEEP TIME IF ANY.   
      00002                          TSX     GETCOM,4                                                         .003
      00003  3 00000 0 00001         PAR     1                                                                .003
      00004  0602 00 0 00121         SLW     SLPTIM        SAVE.  
      00005 -0340 00 0 00120         LAS     FENCE         TEST FOR FENCE.    
      00006  0020 00 0 00010         TRA     *+2           NO, SKIP.    
      00007  0600 00 0 00121         STZ     SLPTIM        YES, CLEAR IT.     
      00010                          CALL    $BCDEC(SLPTIM) CONVERT TO DECIMAL.     
      00010                          TSX     $BCDEC,4                                                         .003
      00011  3 00000 0 00121         PAR     SLPTIM                                                           .003
      00012  0131 00 0 00000         XCA                   TO MQ. 
      00013  0200 00 0 00131         MPY     =60           MAKE IT SECONDS.   
      00014 -0600 00 0 00121         STQ     SLPTIM        AND PUT AWAY.
      00015                          CALL    WRFLX((*,,0)) TYPE A C.R.  
      00015                          TSX     WRFLX,4                                                          .003
      00016  3 00000 0 00016         PAR     *,,0                                                             .003
                  
      00017                          TSX     SETFUL,4      TO 12-BIT MODE.    
      00020                          CALL    WRFLXA((HDR,,14)) TYPE FIRST 14 WORDS OF HEADER.   
      00020                          TSX     WRFLXA,4                                                         .003
      00021  3 00016 0 00061         PAR     HDR,,14                                                          .003
      00022                          CALL    WRFLX((HDR+14,,LHDR-14)) TYPE THE REST.
      00022                          TSX     WRFLX,4                                                          .003
      00023  3 00004 0 00077         PAR     HDR+14,,LHDR-14                                                  .003
                  
      00024  0774 00 1 00006  WORK   AXT     6,1           6 SENSE SWITCHES.  
      00025 -0500 00 0 00135         CAL     =O575760464560 PRESET TO 'ON'.   
      00026  0760 00 1 00167         SWT     7,1           TEST A SENSE SWITCH.     
      00027 -0500 00 0 00134         CAL     =O575746262660 IF SWITCH OFF, SAY SO.  
      00030  0602 00 1 00115         SLW     SS+6,1        SAVE CONDITION OF SWITCH.
      00031  2 00001 1 00025         TIX     *-4,1,1       LOOP TILL DONE.    
      00032  0760 00 0 00004         ENK                   NOW GET CONSOLE KEYS.    
      00033  0774 00 1 00002         AXT     2,1           CONVERT TO SPREAD OCTAL. 
      00034  0774 00 4 00006         AXT     6,4           ..     
1       M1416-3845  PETER R. BOS  --  TEST SENSE SWITCHES AND CONSOLE KEYS.                      PAGE 2     
                  
      00035  0767 00 0 00003         ALS     3  
      00036 -0763 00 0 00003         LGL     3             ..     
      00037  2 00001 4 00035         TIX     *-2,4,1  
      00040  0602 00 1 00120         SLW     KEYS+2,1      ..     
      00041  2 00001 1 00034         TIX     *-5,1,1  
                  
      00042  0520 00 0 00121         ZET     SLPTIM        WATCH OUT FOR MACRO BELOW.     
      00043                          CALL    $GETTM(DATE,TIME) IF WE ARE TO SLEEP, PRINT TIME NOW.    
      00043                          TSX     $GETTM,4                                                         .003
      00044  3 00000 0 00104         PAR     DATE                                                             .003
      00045  3 00000 0 00105         PAR     TIME                                                             .003
                  
      00046                          TSX     SETBCD,4      BACK TO 6-BIT MODE.
      00047                          CALL    WRFLX((MESS,,LMESS)) 
      00047                          TSX     WRFLX,4                                                          .003
      00050  3 00015 0 00103         PAR     MESS,,LMESS                                                      .003
      00051 -0500 00 0 00121         CAL     SLPTIM        ARE WE TO SLEEP. Q 
      00052  0100 00 0 00055         TZE     XIT           NO, GO AWAY QUIETLY.     
      00053                          TSX     SLEEP,4       ZZZ .. ZZZ .. ZZZ  
      00054  0020 00 0 00024         TRA     WORK          (YAWN) .. MORE WORK TO DO.     
                  
      00055                   XIT    CALL    WRFLX((*,,0)) TYPE ANOTHER C.R.  
      00055                          TSX     WRFLX,4                                                          .003
      00056  3 00000 0 00056         PAR     *,,0                                                             .003
      00057                          CALL    CHNCOM(0)     AND EXIT TO CHNCOM.
      00057                          TSX     CHNCOM,4                                                         .003
      00060  3 00000 0 00000         PAR     0                                                                .003
                  
                  
      00061  006201250145     HDR    BCI     8,0S1E1N1S1E0 1S1W1I1T1C1H1E1S0 0 010 0 0 020 0 0  
      00062  016201250060     
      00063  016201660131     
      00064  016301230130     
      00065  012501620060     
      00066  006000010060     
      00067  006000600002     
      00070  006000600060     
      00071  000300600060            BCI     8,030 0 0 040 0 0 050 0 0 060 0 0 0 0 0C1O1N1S1O1L 
      00072  006000040060     
      00073  006000600005     
      00074  006000600060     
      00075  000600600060     
      00076  006000600060     
      00077  002301460145     
      00100  016201460143     
      00101  012500600142            BCI     2,1E0 1K1E1Y1S 
      00102  012501700162     
                       00022  LHDR   EQU     *-HDR    
                  
      00103 -205757575757     MESS   OCT     605757575757  A SPACE.     
      00104  606060606060     DATE   BCI     1, 
      00105  606060606060     TIME   BCI     1, 
      00106 -206057575757            OCT     606057575757  SOME SPACES. 
      00107                   SS     BSS     6             CONDITION OF SENSE SWITCHES.   
      00115 -206060575757            OCT     606060575757  SOME MORE SPACES.  
      00116                   KEYS   BSS     2             CONSOLE KEYS.
1       M1416-3845  PETER R. BOS  --  TEST SENSE SWITCHES AND CONSOLE KEYS.                      PAGE 3     
                  
                       00015  LMESS  EQU     *-MESS   
                  
      00120 -377777777777     FENCE  OCT     777777777777   
      00121  0 00000 0 00000  SLPTIM PZE  
                  
                                     END  
                                              REMOTE SEQUENCES    
      00122  0101 00 0 00133  GETCOM TIA     =HGETCOM                                                         .002
      00123  0101 00 0 00142  WRFLX  TIA     =HWRFLX                                                          .002
      00124  0101 00 0 00137  SETFUL TIA     =HSETFUL                                                         .002
      00125  0101 00 0 00141  WRFLXA TIA     =HWRFLXA                                                         .002
      00126  0101 00 0 00136  SETBCD TIA     =HSETBCD                                                         .002
      00127  0101 00 0 00140  SLEEP  TIA     =HSLEEP                                                          .002
      00130  0101 00 0 00132  CHNCOM TIA     =HCHNCOM                                                         .002
1       M1416-3845  PETER R. BOS  --  TEST SENSE SWITCHES AND CONSOLE KEYS.                      PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        143 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        107     SS    30
         61    HDR    21,   23,  103
          1    ..A     3,   11,   16,   21,   23,   44,   45,   50,   56,   60
          0    ..D     3,   11,   16,   21,   23,   44,   45,   50,   56,   60
          0    ..T     3,   11,   16,   21,   23,   44,   45,   50,   56,   60
         55    XIT    52
        104   DATE    44
          3   ..OP     3,   11,   16,   21,   23,   44,   45,   50,   56,   60
        116   KEYS    40
         22   LHDR    23,  103
        103   MESS    50,  120
        105   TIME    45
         24   WORK    54
          0  BCDEC    10
        120  FENCE     5
          1  GETTM    43
          0  ..PZE     3,   11,   16,   21,   23,   44,   50,   56,   60
         15  LMESS    50,  120
        127  SLEEP    53
        123  WRFLX    15,   22,   47,   55
        130 CHNCOM    57
        122 GETCOM     2
        126 SETBCD    46
        124 SETFUL    17
        121 SLPTIM     4,    7,   11,   14,   42,   51
        125 WRFLXA    20
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




LCHECK   BCD 09/20/68 0219.9    3310         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  LINECK   MAD            02/13/68    0152.1
-                 
                      LINE TESTER AND CHECKER                                                          LM00001    
                                                                                                       LM00002    
                      LOADING INSTRUCTIONS                                                             LM00003    
                           MAD LINECK (LIST)                                                           LM00004    
                           LAED NCLOAD LINECK (SQZ) (SRCH) XLIBE                                       LM00005    
                           SAVE LCHECK                                                                 LM00006    
                           R LCHECK PROBNO PROGNO                                                      LM00007    
                                                                                                       LM00008    
                      PROBNO MUST BE IN STANDARD FORM                                                  LM00009    
                           D.R. WIDRIG  DEC. 1965                                                      LM00010    
                                                                                                       LM00011    
                  NORMAL MODE IS INTEGER                                                          *001 LM00012    
                  VECTOR VALUES LINE1 = 0,0,777777777777K                                         *002 LM00013    
                  VECTOR VALUES MESS2 = $ BS = $,0,$,TRUNK$,0,$UNITID IS $                        *003 LM00014    
                  VECTOR VALUES LTABL = $= INK,=1620,=PDP6,=NONE,=  67,=  66,$,                   *004 LM00015    
                1      $=  84,=  83,=  76,=  77,=  75,=  74,$,                                    *004 LM00016    
                2      $=  88,=  86,=  87,=  80,=  82,=  81,=  79,$,                              *004 LM00017    
                3      $=  70,=  69,=  68,=  89,=  85,= 101,= 102,= 103,$,                        *004 LM00018    
                4      $= 104,= 105,= 106,= 107,= 108,= 111,= 112,= 113,$,                        *004 LM00019    
                5      $= 114,= 115,= 116,= 117,= 118,= 121,= 122,= 109,$,                        *004 LM00020    
                6      $= 120,= 119,= 124,= 110,= 123,=NONE,=NONE,$,                              *004 LM00021    
                7      $=NONE,=NONE,=  71,=  72,=  73,=  78,=TELX,= TWX,= TWX,$                   *004 LM00022    
                8      ,$= TWX,= TWX,=MOD33,=MOD33$                                               *004 LM00023    
                                                                                                       LM00024    
                      GET A-CORE LOCATION POINTERS                                                     LM00025    
                                                                                                       LM00026    
                  N = COMLOC.($N$)                                                                *005 LM00027    
                  PROBN = COMLOC.($PROBN$)                                                        *006 LM00028    
                  PROGN = COMLOC.($PROGN$)                                                        *007 LM00029    
                  UNITID = COMLOC.($UNITID$)                                                      *008 LM00030    
                  LUTBL = ACORE.($LUTBL$).RS.18                                                   *009 LM00031    
                                                                                                       LM00032    
                      PICK UP ARGUMENTS                                                                LM00033    
                                                                                                       LM00034    
                  COMARG.(1,LINE1)                                                                *010 LM00035    
                  COMARG.(2,LINE1(1))                                                             *011 LM00036    
                  PRMESS.($SEARCHING FOR$,LINE1(0),LINE1(1))                                      *012 LM00037    
                                                                                                       LM00038    
                      LOOK THROUGH USER ARRAYS FOR INDICATED USER                                      LM00039    
      START       THROUGH LOOP1, FOR I=3,1,I.G.N                                                  *013 LM00041    
                       PROBNO = GLOC.(PROBN+I)                                                    *014 LM00042    
                       WHENEVER (PROBNO .NE. LINE1), TRANSFER TO LOOP1                            *015 LM00043    
                       PROGNO = GLOC.(PROGN+I)                                                    *016 LM00044    
                       WHENEVER (PROGNO .NE. LINE1(1)), TRANSFER TO LOOP1                         *017 LM00045    
                                                                                                       LM00046    
                      FOUND USER, GET INFO                                                             LM00047    
                                                                                                       LM00048    
                       BSNO = GLOC.(LUTBL+I)                                                      *018 LM00049    
                       MESS2(3) = LTABL(BSNO)                                                     *019 LM00050    
                       MESS2(1) = OCRBC.(BSNO) .V. 575757K6                                       *020 LM00051    
                       MESS2(6) = GLOC.(UNITID+I)                                                 *021 LM00052    
                       PRMESS.($USER FOUND, CALL MIT X4750 FOR TRACE$)                            *022 LM00053    
                       PRMESS.(MESS2...7)                                                         *023 LM00054    
                       CHNCOM.(0)                                                                 *024 LM00055    
      LOOP1       CONTINUE                                                                        *025 LM00056    
                                                                                                       LM00057    
                      USER NOT FOUND, SNOOZE A LITTLE                                                  LM00058    
                                                                                                       LM00059    
                  N = 60                                                                          *026 LM00060    
                  SLEEP.                                                                          *027 LM00061    
                  TRANSFER TO START                                                               *028 LM00062    
                  END OF PROGRAM                                                                  *029 LM00063    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00336 TRANSFER VECTOR LENGTH  00012 PROGRAM BEGINS    00166
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BSNO   00015   1        LOOP1  00013   4        MESS2  00130 A 1        PROBN  00133   1        START  00014   4  
      I      00016   1        LTABL  00121 A 1        N      00131   1        PROGNO 00134   1        UNITID 00136   1  
      LINE1  00021 A 1        LUTBL  00122   1        PROBNO 00132   1        PROGN  00135   1                          
0FUNCTION DICTIONARY    
      ACORE  00000   1        CHNCOM 00001   1        COMARG 00002   1        COMLOC 00003   1        EXIT   00004   1  
      GLOC   00005   1        .SETUP 00006   1        OCRBC  00007   1        PRMESS 00010   1        SLEEP  00011   1  
0ABSOLUTE CONSTANTS     
 00145 +000000000074     00137 +000000000000     00143 +000000000007     00162 -206351212325     00146 +050060264651    
 00152 +316360670407     00147 +232143436044     00155 -066445247360     00165 -246225516026     00161 -175757000000    
 00142 +000000000003     00160 -116060606060     00151 +314527602646     00163 -222521512330     00141 +000000000002    
 00144 +000000000022     00153 -036463224360     00164 -244531633124     00157 -075146274560     00156 -075146224560    
 00154 -056060606060     00140 +000000000001     00150 +233000000000                                                    
0STATEMENT DICTIONARY   
 00013 TXL -300326000325       00014 TXL -300241000227                                                                  
0PROGRAM    
                 N'R                                                                001  LM00012
                 V'S LINE1 = 0,0,777777777777K                                      002  LM00013
 00166 TSX +0 07400 4 00006    00017     -3 77777 7 77777    00020     +0 00000 0 00000    00021     +0 00000 0 00000   
                 V'S MESS2 = $ BS = $,0,$,TRUNK$,0,$UNITID IS $                     003  LM00014
 00123     -2 03162 6 06060    00124     -2 44531 6 33124    00125     +0 00000 0 00000    00126     -3 36351 6 44542   
 00127     +0 00000 0 00000    00130     -2 02262 6 01360                                                               
                 V'S LTABL = $= INK,=1620,=PDP6,=NONE,=  67,=  66,$,                004  LM00015
                1     $=  84,=  83,=  76,=  77,=  75,=  74,$,                       004  LM00016
                2     $=  88,=  86,=  87,=  80,=  82,=  81,=  79,$,                 004  LM00017
                3     $=  70,=  69,=  68,=  89,=  85,= 101,= 102,= 103,$,           004  LM00018
                4     $= 104,= 105,= 106,= 107,= 108,= 111,= 112,= 113,$,           004  LM00019
                5     $= 114,= 115,= 116,= 117,= 118,= 121,= 122,= 109,$,           004  LM00020
                6     $= 120,= 119,= 124,= 110,= 123,=NONE,=NONE,$,                 004  LM00021
                7     $=NONE,=NONE,=  71,=  72,=  73,=  78,=TELX,= TWX,= TWX,$      004  LM00022
                8     ,$= TWX,= TWX,=MOD33,=MOD33$                                  004  LM00023
 00022     +0 36060 6 06060    00023     -3 31344 4 62403    00024     +1 34446 2 40303    00025     +1 36063 6 66773   
 00026     +1 36063 6 66773    00027     +1 36063 6 66773    00030     +1 36063 6 66773    00031     +1 36325 4 36773   
 00032     +1 36060 0 71073    00033     +1 36060 0 70373    00034     +1 36060 0 70273    00035     +1 36060 0 70173   
 00036     +1 34546 4 52573    00037     +1 34546 4 52573    00040     +1 34546 4 52573    00041     +1 34546 4 52573   
 00042     +1 36001 0 20373    00043     +1 36001 0 10073    00044     +1 36001 0 20473    00045     +1 36001 0 11173   
 00046     +1 36001 0 20073    00047     +1 36001 0 01173    00050     +1 36001 0 20273    00051     +1 36001 0 20173   
 00052     +1 36001 0 11073    00053     +1 36001 0 10773    00054     +1 36001 0 10673    00055     +1 36001 0 10573   
 00056     +1 36001 0 10473    00057     +1 36001 0 10373    00060     +1 36001 0 10273    00061     +1 36001 0 10173   
 00062     +1 36001 0 01073    00063     +1 36001 0 00773    00064     +1 36001 0 00673    00065     +1 36001 0 00573   
 00066     +1 36001 0 00473    00067     +1 36001 0 00373    00070     +1 36001 0 00273    00071     +1 36001 0 00173   
 00072     +1 36060 1 00573    00073     +1 36060 1 01173    00074     +1 36060 0 61073    00075     +1 36060 0 61173   
 00076     +1 36060 0 70073    00077     +1 36060 0 71173    00100     +1 36060 1 00173    00101     +1 36060 1 00273   
 00102     +1 36060 1 00073    00103     +1 36060 1 00773    00104     +1 36060 1 00673    00105     +1 36060 1 01073   
 00106     +1 36060 0 70473    00107     +1 36060 0 70573    00110     +1 36060 0 70773    00111     +1 36060 0 70673   
 00112     +1 36060 1 00373    00113     +1 36060 1 00473    00114     +1 36060 0 60673    00115     +1 36060 0 60773   
 00116     +1 34546 4 52573    00117     +1 34724 4 70673    00120     +1 30106 0 20073    00121     +1 36031 4 54273   
                 N = COMLOC.($N$)                                                   005  LM00027
 00167 TSX +0 07400 4 00003    00170 TXH +3 00000 0 00154    00171 STO +0 60100 0 00131                                 
                 PROBN = COMLOC.($PROBN$)                                           006  LM00028
 00172 TSX +0 07400 4 00003    00173 TXH +3 00000 0 00156    00174 STO +0 60100 0 00133                                 
                 PROGN = COMLOC.($PROGN$)                                           007  LM00029
 00175 TSX +0 07400 4 00003    00176 TXH +3 00000 0 00157    00177 STO +0 60100 0 00135                                 
                 UNITID = COMLOC.($UNITID$)                                         008  LM00030
 00200 TSX +0 07400 4 00003    00201 TXH +3 00000 0 00164    00202 STO +0 60100 0 00136                                 
                 LUTBL = ACORE.($LUTBL$).RS.18                                      009  LM00031
 00203 TSX +0 07400 4 00000    00204 TXH +3 00000 0 00153    00205 STO +0 60100 0 00333    00206 CAL -0 50000 0 00144   
 00207 STA +0 62100 0 00211    00210 CAL -0 50000 0 00333    00211 LGR -0 76500 0 00000    00212 SLW +0 60200 0 00122   
                 COMARG.(1,LINE1)                                                   010  LM00035
 00213 TSX +0 07400 4 00002    00214 TXH +3 00000 0 00140    00215 TXH +3 00000 0 00021                                 
                 COMARG.(2,LINE1(1))                                                011  LM00036
 00216 TSX +0 07400 4 00002    00217 TXH +3 00000 0 00141    00220 TXH +3 00000 0 00020                                 
                 PRMESS.($SEARCHING FOR$,LINE1(0),LINE1(1))                         012  LM00037
 00221 TSX +0 07400 4 00010    00222 TXH +3 00000 0 00163    00223 TXH +3 00000 0 00151    00224 TXH +3 00000 0 00160   
 00225 TXH +3 00000 0 00021    00226 TXH +3 00000 0 00020                                                               
      START      T'H LOOP1, FOR I=3,1,I.G.N                                         013  LM00041
 00227 CLA +0 50000 0 00142    00230 STO +0 60100 0 00016    00231 TRA +0 02000 0 00235    00232 CLA +0 50000 0 00016   
 00233 ADD +0 40000 0 00140    00234 STO +0 60100 0 00016    00235 CLA +0 50000 0 00016    00236 SUB +0 40200 0 00131   
 00237 TZE +0 10000 0 00241    00240 TPL +0 12000 0 00326                                                               
                      PROBNO = GLOC.(PROBN+I)                                       014  LM00042
 00241 CLA +0 50000 0 00133    00242 ADD +0 40000 0 00016    00243 STO +0 60100 0 00333    00244 TSX +0 07400 4 00005   
 00245 TXH +3 00000 0 00333    00246 STO +0 60100 0 00132                                                               
                      W'R (PROBNO .NE. LINE1), T'O LOOP1                            015  LM00043
 00247 CLA +0 50000 0 00132    00250 SUB +0 40200 0 00021    00251 TZE +0 10000 0 00253    00252 TRA +0 02000 0 00013   
                      PROGNO = GLOC.(PROGN+I)                                       016  LM00044
 00253 CLA +0 50000 0 00135    00254 ADD +0 40000 0 00016    00255 STO +0 60100 0 00333    00256 TSX +0 07400 4 00005   
 00257 TXH +3 00000 0 00333    00260 STO +0 60100 0 00134                                                               
                      W'R (PROGNO .NE. LINE1(1)), T'O LOOP1                         017  LM00045
 00261 CLA +0 50000 0 00134    00262 SUB +0 40200 0 00020    00263 TZE +0 10000 0 00265    00264 TRA +0 02000 0 00013   
                      BSNO = GLOC.(LUTBL+I)                                         018  LM00049
 00265 CLA +0 50000 0 00122    00266 ADD +0 40000 0 00016    00267 STO +0 60100 0 00333    00270 TSX +0 07400 4 00005   
 00271 TXH +3 00000 0 00333    00272 STO +0 60100 0 00015                                                               
                      MESS2(3) = LTABL(BSNO)                                        019  LM00050
 00273 LXA +0 53400 2 00015    00274 CLA +0 50000 2 00121    00275 STO +0 60100 0 00125                                 
                      MESS2(1) = OCRBC.(BSNO) .V. 575757K6                          020  LM00051
 00276 TSX +0 07400 4 00007    00277 TXH +3 00000 0 00015    00300 STO +0 60100 0 00333    00301 CAL -0 50000 0 00333   
 00302 ORA -0 50100 0 00161    00303 SLW +0 60200 0 00127                                                               
                      MESS2(6) = GLOC.(UNITID+I)                                    021  LM00052
 00304 CLA +0 50000 0 00136    00305 ADD +0 40000 0 00016    00306 STO +0 60100 0 00333    00307 TSX +0 07400 4 00005   
 00310 TXH +3 00000 0 00333    00311 STO +0 60100 0 00122                                                               
                      PRMESS.($USER FOUND, CALL MIT X4750 FOR TRACE$)               022  LM00053
 00312 TSX +0 07400 4 00010    00313 TXH +3 00000 0 00165    00314 TXH +3 00000 0 00155    00315 TXH +3 00000 0 00147   
 00316 TXH +3 00000 0 00152    00317 TXH +3 00000 0 00146    00320 TXH +3 00000 0 00162                                 
                      PRMESS.(MESS2...7)                                            023  LM00054
 00321 TSX +0 07400 4 00010    00322 TIX +2 00143 0 00130                                                               
                      CHNCOM.(0)                                                    024  LM00055
 00323 TSX +0 07400 4 00001    00324 TXH +3 00000 0 00137                                                               
      LOOP1      C'E                                                                025  LM00056
 00325 TRA +0 02000 0 00232                                                                                             
                 N = 60                                                             026  LM00060
 00326 CLA +0 50000 0 00145    00327 STO +0 60100 0 00131                                                               
                 SLEEP.                                                             027  LM00061
 00330 TSX +0 07400 4 00011                                                                                             
                 T'O START                                                          028  LM00062
 00331 TRA +0 02000 0 00014                                                                                             
                 E'M                                                                029  LM00063
 00332 TSX +0 07400 4 00004                                                                                             




 LDCMP   BCD 09/20/68 0220.0    4321         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   LDCMP   MAD            02/13/68    0154.9
-                 
                  NORMAL MODE IS INTEGER                                                          *001 LM00001    
                  DIMENSION BUF1(432), BUF2(432), A(14)                                           *002 LM00002    
                  DIMENSION LOADS(3000, QQ2)                                                      *003 LM00003    
                  VECTOR VALUES QQ2=2,1,300                                                       *004 LM00004    
                  VECTOR VALUES SVNS=377777777777K                                                *005 LM00005    
                  VECTOR VALUES BUFZ=432                                                          *006 LM00006    
                  VECTOR VALUES FOUR=77777777K4                                                   *007 LM00007    
                  WHENEVER COMARG.(1).A.SVNS .E. SVNS                                             *008 LM00008    
                       PRINT COMMENT $R LDCMP L1 L2 L3 ...$                                       *009 LM00009    
                       PRINT COMMENT $TO COMPARE UP TO TEN CTSSLD'S$                              *010 LM00010    
                       CHNCOM.(0)                                                                 *011 LM00011    
                  END OF CONDITIONAL                                                              *012 LM00012    
                  THROUGH ARGS, FOR I=1,1,I.G.10 .OR. COMARG.(I).A.SVNS .E. SVNS                  *013 LM00013    
                       NAM=COMARG.(I)                                                             *014 LM00014    
                       BFOPEN.($R$,NAM,$CTSSLD$,BUF1(BUFZ),BUF2(BUFZ),-0,ERRP)                    *015 LM00015    
                       THROUGH READ, FOR J=1,1, 0B                                                *016 LM00016    
                            BFREAD.(NAM,$CTSSLD$, A(14)...14, EOF, -0, -0)                        *017 LM00017    
      READ                  LOADS(I, J)=A(14)                                                     *018 LM00018    
      EOF              BFCLOS.(NAM, $CTSSLD$, -0)                                                 *019 LM00019    
                       TRANSFER TO ARGS                                                           *020 LM00020    
      ERRP             PRINT FORMAT ERRF, NAM                                                     *021 LM00021    
                       VECTOR VALUES ERRF=$(C6,H'CTSSLD NOT FOUND')*$                             *022 LM00022    
                       CHNCOM.(0)                                                                 *023 LM00023    
      ARGS        CONTINUE                                                                        *024 LM00024    
                  LOADS(I,J)=0                                                                    *025 LM00025    
                  LOADS=I-1                                                                       *026 LM00026    
                  PRINT FORMAT $(1H )$                                                            *027 LM00027    
                  PRINT FORMAT $(10A7)$, (I=1,1, I.G.LOADS, COMARG.(I))                           *028 LM00028    
                  PRINT FORMAT $(1H )$                                                            *029 LM00029    
                  THROUGH CM03, FOR K=1,1, K.G.LOADS                                              *030 LM00030    
                  THROUGH CM03, FOR L=1,1, LOADS(K,L).E.0                                         *031 LM00031    
                  WHENEVER LOADS(K,L).NE.77K                                                      *032 LM00032    
                       THROUGH CMP2, FOR M=1,1,M.G.K-1                                            *033 LM00033    
      CMP2                  A(M)=$      $                                                         *034 LM00034    
                       A(K)=LOADS(K,L)                                                            *035 LM00035    
                       THROUGH CM02, FOR I=K+1,1, I.G.LOADS                                       *036 LM00036    
                            THROUGH CM01, FOR J=1,1,LOADS(I,J).E.0                                *037 LM00037    
                            WHENEVER LOADS(K,L).A.FOUR .E. LOADS(I,J).A.FOUR                      *038 LM00038    
                                 A(I)=LOADS(I,J)                                                  *039 LM00039    
                                 LOADS(I,J)=77K                                                   *040 LM00040    
                                 TRANSFER TO  CM02                                                *041 LM00041    
                            END OF CONDITIONAL                                                    *042 LM00042    
      CM01                  CONTINUE                                                              *043 LM00043    
                            A(I)=$      $                                                         *044 LM00044    
      CM02             CONTINUE                                                                   *045 LM00045    
                       THROUGH CMP1, FOR I=2,1,I.G.LOADS                                          *046 LM00046    
                            WHENEVER A(I).NE.A(1)                                                 *047 LM00047    
                            PRINT FORMAT $(10A7)$, A(1)...A(LOADS)                                *048 LM00048    
                            TRANSFER TO CM03                                                      *049 LM00049    
      CMP1                  END OF CONDITIONAL                                                    *050 LM00050    
                  END OF CONDITIONAL                                                              *051 LM00051    
      CM03        CONTINUE                                                                        *052 LM00052    
                  CHNCOM.(0)                                                                      *053 LM00053    
                  END OF PROGRAM                                                                  *054 LM00054    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   10176 TRANSFER VECTOR LENGTH  00012 PROGRAM BEGINS    07527
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ARGS   00013   4        CM01   00012   4        EOF    00016   4        J      01611   1        NAM    07506   1  
      A      00036 A 1        CM02   00014   4        ERRF   01606 A 1        K      01612   1        QQ2    07511 A 1  
      BUF1   00717 A 1        CM03   00015   4        ERRP   00017   4        LOADS  07503 A 1        READ   00012   4  
      BUF2   01600 A 1        CMP1   00012   4        FOUR   01607 A 1        L      07504   1        SVNS   07512 A 1  
      BUFZ   01601 A 1        CMP2   00012   4        I      01610   1        M      07505   1                          
0FUNCTION DICTIONARY    
      .03311 00000   0        BFCLOS 00001   1        BFOPEN 00002   1        BFREAD 00003   1        CHNCOM 00004   1  
      COMARG 00005   1        EXIT   00006   1        .PCOMT 00007   1        .PRINT 00010   1        .SETUP 00011   1  
0ABSOLUTE CONSTANTS     
 07515 +000000000002     07524 -206060606060     07520 +000000000077     07525 -340100210734     07526 -340130603460    
 07517 +000000000016     07522 +236362624324     07523 -116060606060     07516 +000000000012     07513 +000000000000    
 07514 +000000000001     07521 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00013 TXL -307701007700       00014 TXL -310134010133       00015 TXL -310167010165       00016 TXL -307671007663      
 00017 TXL -307676007672                                                                                                
0PROGRAM    
                 NORMAL MODE IS INTEGER                                             001  LM00001
                 D'N BUF1(432), BUF2(432), A(14)                                    002  LM00002
                 D'N LOADS(3000, QQ2)                                               003  LM00003
                 V'S QQ2=2,1,300                                                    004  LM00004
 07527 TSX +0 07400 4 00011    07507     +0 00000 0 00454    07510     +0 00000 0 00001    07511     +0 00000 0 00002   
                 V'S SVNS=377777777777K                                             005  LM00005
 07512     +3 77777 7 77777                                                                                             
                 V'S BUFZ=432                                                       006  LM00006
 01601     +0 00000 0 00660                                                                                             
                 V'S FOUR=77777777K4                                                007  LM00007
 01607     -3 77777 7 70000                                                                                             
                 W'R COMARG.(1).A.SVNS .E. SVNS                                     008  LM00008
 07530 TSX +0 07400 4 00005    07531 TXH +3 00000 0 07514    07532 STO +0 60100 0 10172    07533 CAL -0 50000 0 10172   
 07534 ANA -0 32000 0 07512    07535 SLW +0 60200 0 10172    07536 CLA +0 50000 0 10172    07537 SUB +0 40200 0 07512   
 07540 TNZ -0 10000 0 07560                                                                                             
                      PRINT COMMENT $R LDCMP L1 L2 L3 ...$                          009  LM00009
 07541 TSX +0 07400 4 00007    07542     +0 00000 0 00004    07543     -1 16043 2 42344    07544     -0 76043 0 16043   
 07545     +0 26043 0 36033    07546     +3 33360 6 06060                                                               
                      PRINT COMMENT $TO COMPARE UP TO TEN CTSSLD'S$                 010  LM00010
 07547 TSX +0 07400 4 00007    07550     +0 00000 0 00005    07551     -2 34660 2 34644    07552     -0 72151 2 56064   
 07553     -0 76063 4 66063    07554     +2 54560 2 36362    07555     -2 24324 1 46260                                 
                      CHNCOM.(0)                                                    011  LM00011
 07556 TSX +0 07400 4 00004    07557 TXH +3 00000 0 07513                                                               
                 E'L                                                                012  LM00012
                 T'H ARGS, FOR I=1,1,I.G.10 .OR. COMARG.(I).A.SVNS .E. SVNS         013  LM00013
 07560 CLA +0 50000 0 07514    07561 STO +0 60100 0 01610    07562 TRA +0 02000 0 07566    07563 CLA +0 50000 0 01610   
 07564 ADD +0 40000 0 07514    07565 STO +0 60100 0 01610    07566 TSX +0 07400 4 00005    07567 TXH +3 00000 0 01610   
 07570 STO +0 60100 0 10172    07571 CAL -0 50000 0 10172    07572 ANA -0 32000 0 07512    07573 SLW +0 60200 0 10172   
 07574 CLA +0 50000 0 10172    07575 SUB +0 40200 0 07512    07576 TZE +0 10000 0 07701    07577 CLA +0 50000 0 01610   
 07600 SUB +0 40200 0 07516    07601 TZE +0 10000 0 07603    07602 TPL +0 12000 0 07701                                 
                      NAM=COMARG.(I)                                                014  LM00014
 07603 TSX +0 07400 4 00005    07604 TXH +3 00000 0 01610    07605 STO +0 60100 0 07506                                 
                      BFOPEN.($R$,NAM,$CTSSLD$,BUF1(BUFZ),BUF2(BUFZ),-0,ERRP)       015  LM00015
 07606 CLS +0 50200 0 07513    07607 STO +0 60100 0 10172    07610 CLA +0 50000 0 01601    07611 SUB +0 40200 0 07612   
 07612 TXH +3 00000 0 01600    07613 STA +0 62100 0 07625    07614 CLA +0 50000 0 01601    07615 SUB +0 40200 0 07616   
 07616 TXH +3 00000 0 00717    07617 STA +0 62100 0 07624    07620 TSX +0 07400 4 00002    07621 TXH +3 00000 0 07523   
 07622 TXH +3 00000 0 07506    07623 TXH +3 00000 0 07522    07624 TXH +3 00000 0 00000    07625 TXH +3 00000 0 00000   
 07626 TXH +3 00000 0 10172    07627 TXH +3 00000 0 00017                                                               
                      T'H READ, FOR J=1,1, 0B                                       016  LM00016
 07630 CLA +0 50000 0 07514    07631 STO +0 60100 0 01611    07632 TRA +0 02000 0 07636    07633 CLA +0 50000 0 01611   
 07634 ADD +0 40000 0 07514    07635 STO +0 60100 0 01611    07636 ZET +0 52000 0 07513    07637 TRA +0 02000 0 07663   
                           BFREAD.(NAM,$CTSSLD$, A(14)...14, EOF, -0, -0)           017  LM00017
 07640 CLS +0 50200 0 07513    07641 STO +0 60100 0 10172    07642 CLS +0 50200 0 07513    07643 STO +0 60100 0 10173   
 07644 TSX +0 07400 4 00003    07645 TXH +3 00000 0 07506    07646 TXH +3 00000 0 07522    07647 TIX +2 07517 0 00020   
 07650 TXH +3 00000 0 00016    07651 TXH +3 00000 0 10173    07652 TXH +3 00000 0 10172                                 
      READ                 LOADS(I, J)=A(14)                                        018  LM00018
 07653 LDQ +0 56000 0 01611    07654 CLA +0 50000 0 01610    07655 TSX +0 07400 4 00000    07656 TXH +3 07511 0 07503   
 07657 PAX +0 73400 1 00000    07660 CLA +0 50000 0 00020    07661 STO +0 60100 1 07503    07662 TRA +0 02000 0 07633   
      EOF             BFCLOS.(NAM, $CTSSLD$, -0)                                    019  LM00019
 07663 CLS +0 50200 0 07513    07664 STO +0 60100 0 10173    07665 TSX +0 07400 4 00001    07666 TXH +3 00000 0 07506   
 07667 TXH +3 00000 0 07522    07670 TXH +3 00000 0 10173                                                               
                      T'O ARGS                                                      020  LM00020
 07671 TRA +0 02000 0 00013                                                                                             
      ERRP            P'T ERRF, NAM                                                 021  LM00021
 07672 TSX +0 07400 4 00010    07673 STR -1 01606 1 10174    07674 STR -1 00000 0 07506    07675 STR -1 00000 0 00000   
                      V'S ERRF=$(C6,H'CTSSLD NOT FOUND')*$                          022  LM00022
 01602     -1 46060 6 06060    01603     -0 66445 2 41434    01604     -2 04546 6 36026    01605     +2 36362 6 24324   
 01606     -3 42306 7 33014                                                                                             
                      CHNCOM.(0)                                                    023  LM00023
 07676 TSX +0 07400 4 00004    07677 TXH +3 00000 0 07513                                                               
      ARGS       CONTINUE                                                           024  LM00024
 07700 TRA +0 02000 0 07563                                                                                             
                 LOADS(I,J)=0                                                       025  LM00025
 07701 LDQ +0 56000 0 01611    07702 CLA +0 50000 0 01610    07703 TSX +0 07400 4 00000    07704 TXH +3 07511 0 07503   
 07705 PAX +0 73400 1 00000    07706 CLA +0 50000 0 07513    07707 STO +0 60100 1 07503                                 
                 LOADS=I-1                                                          026  LM00026
 07710 CLA +0 50000 0 01610    07711 SUB +0 40200 0 07514    07712 STO +0 60100 0 07503                                 
                 P'T $(1H )$                                                        027  LM00027
 07713 TSX +0 07400 4 00010    07714 STR -1 07526 1 10174    07715 STR -1 00000 0 00000                                 
                 P'T $(10A7)$, (I=1,1, I.G.LOADS, COMARG.(I))                       028  LM00028
 07716 TSX +0 07400 4 00010    07717 STR -1 07525 1 10174    07720 CLA +0 50000 0 07514    07721 STO +0 60100 0 01610   
 07722 TRA +0 02000 0 07726    07723 CLA +0 50000 0 01610    07724 ADD +0 40000 0 07514    07725 STO +0 60100 0 01610   
 07726 CLA +0 50000 0 01610    07727 SUB +0 40200 0 07503    07730 TZE +0 10000 0 07732    07731 TPL +0 12000 0 07737   
 07732 TSX +0 07400 4 00005    07733 TXH +3 00000 0 01610    07734 STO +0 60100 0 10173    07735 STR -1 00000 0 10173   
 07736 TRA +0 02000 0 07723    07737 STR -1 00000 0 00000                                                               
                 P'T $(1H )$                                                        029  LM00029
 07740 TSX +0 07400 4 00010    07741 STR -1 07526 1 10174    07742 STR -1 00000 0 00000                                 
                 T'H CM03, FOR K=1,1, K.G.LOADS                                     030  LM00030
 07743 CLA +0 50000 0 07514    07744 STO +0 60100 0 01612    07745 TRA +0 02000 0 07751    07746 CLA +0 50000 0 01612   
 07747 ADD +0 40000 0 07514    07750 STO +0 60100 0 01612    07751 CLA +0 50000 0 01612    07752 SUB +0 40200 0 07503   
 07753 TZE +0 10000 0 07755    07754 TPL +0 12000 0 10167                                                               
                 T'H CM03, FOR L=1,1, LOADS(K,L).E.0                                031  LM00031
 07755 CLA +0 50000 0 07514    07756 STO +0 60100 0 07504    07757 TRA +0 02000 0 07763    07760 CLA +0 50000 0 07504   
 07761 ADD +0 40000 0 07514    07762 STO +0 60100 0 07504    07763 LDQ +0 56000 0 07504    07764 CLA +0 50000 0 01612   
 07765 TSX +0 07400 4 00000    07766 TXH +3 07511 0 07503    07767 PAX +0 73400 1 00000    07770 CLA +0 50000 1 07503   
 07771 SUB +0 40200 0 07513    07772 TZE +0 10000 0 10166                                                               
                 W'R LOADS(K,L).NE.77K                                              032  LM00032
 07773 LDQ +0 56000 0 07504    07774 CLA +0 50000 0 01612    07775 TSX +0 07400 4 00000    07776 TXH +3 07511 0 07503   
 07777 PAX +0 73400 1 00000    10000 CLA +0 50000 1 07503    10001 SUB +0 40200 0 07520    10002 TZE +0 10000 0 10165   
                      T'H CMP2, FOR M=1,1,M.G.K-1                                   033  LM00033
 10003 CLA +0 50000 0 07514    10004 STO +0 60100 0 07505    10005 TRA +0 02000 0 10011    10006 CLA +0 50000 0 07505   
 10007 ADD +0 40000 0 07514    10010 STO +0 60100 0 07505    10011 CLA +0 50000 0 01612    10012 SUB +0 40200 0 07514   
 10013 CHS +0 76000 0 00002    10014 ADD +0 40000 0 07505    10015 TZE +0 10000 0 10017    10016 TPL +0 12000 0 10023   
      CMP2                 A(M)=$      $                                            034  LM00034
 10017 LXA +0 53400 1 07505    10020 CLA +0 50000 0 07524    10021 STO +0 60100 1 00036    10022 TRA +0 02000 0 10006   
                      A(K)=LOADS(K,L)                                               035  LM00035
 10023 LDQ +0 56000 0 07504    10024 CLA +0 50000 0 01612    10025 TSX +0 07400 4 00000    10026 TXH +3 07511 0 07503   
 10027 LXA +0 53400 1 01612    10030 PAX +0 73400 2 00000    10031 CLA +0 50000 2 07503    10032 STO +0 60100 1 00036   
                      T'H CM02, FOR I=K+1,1, I.G.LOADS                              036  LM00036
 10033 CLA +0 50000 0 01612    10034 ADD +0 40000 0 07514    10035 STO +0 60100 0 01610    10036 TRA +0 02000 0 10042   
 10037 CLA +0 50000 0 01610    10040 ADD +0 40000 0 07514    10041 STO +0 60100 0 01610    10042 CLA +0 50000 0 01610   
 10043 SUB +0 40200 0 07503    10044 TZE +0 10000 0 10046    10045 TPL +0 12000 0 10134                                 
                           T'H CM01, FOR J=1,1,LOADS(I,J).E.0                       037  LM00037
 10046 CLA +0 50000 0 07514    10047 STO +0 60100 0 01611    10050 TRA +0 02000 0 10054    10051 CLA +0 50000 0 01611   
 10052 ADD +0 40000 0 07514    10053 STO +0 60100 0 01611    10054 LDQ +0 56000 0 01611    10055 CLA +0 50000 0 01610   
 10056 TSX +0 07400 4 00000    10057 TXH +3 07511 0 07503    10060 PAX +0 73400 1 00000    10061 CLA +0 50000 1 07503   
 10062 SUB +0 40200 0 07513    10063 TZE +0 10000 0 10130                                                               
                           W'R LOADS(K,L).A.FOUR .E. LOADS(I,J).A.FOUR              038  LM00038
 10064 LDQ +0 56000 0 01611    10065 CLA +0 50000 0 01610    10066 TSX +0 07400 4 00000    10067 TXH +3 07511 0 07503   
 10070 PAX +0 73400 1 00000    10071 CAL -0 50000 1 07503    10072 ANA -0 32000 0 01607    10073 SLW +0 60200 0 10173   
 10074 LDQ +0 56000 0 07504    10075 CLA +0 50000 0 01612    10076 TSX +0 07400 4 00000    10077 TXH +3 07511 0 07503   
 10100 PAX +0 73400 1 00000    10101 CAL -0 50000 1 07503    10102 ANA -0 32000 0 01607    10103 SLW +0 60200 0 10172   
 10104 CLA +0 50000 0 10172    10105 SUB +0 40200 0 10173    10106 TNZ -0 10000 0 10127                                 
                                A(I)=LOADS(I,J)                                     039  LM00039
 10107 LDQ +0 56000 0 01611    10110 CLA +0 50000 0 01610    10111 TSX +0 07400 4 00000    10112 TXH +3 07511 0 07503   
 10113 LXA +0 53400 1 01610    10114 PAX +0 73400 2 00000    10115 CLA +0 50000 2 07503    10116 STO +0 60100 1 00036   
                                LOADS(I,J)=77K                                      040  LM00040
 10117 LDQ +0 56000 0 01611    10120 CLA +0 50000 0 01610    10121 TSX +0 07400 4 00000    10122 TXH +3 07511 0 07503   
 10123 PAX +0 73400 1 00000    10124 CLA +0 50000 0 07520    10125 STO +0 60100 1 07503                                 
                                T'O  CM02                                           041  LM00041
 10126 TRA +0 02000 0 00014                                                                                             
                           E'L                                                      042  LM00042
      CM01                 CONTINUE                                                 043  LM00043
 10127 TRA +0 02000 0 10051                                                                                             
                           A(I)=$      $                                            044  LM00044
 10130 LXA +0 53400 1 01610    10131 CLA +0 50000 0 07524    10132 STO +0 60100 1 00036                                 
      CM02            CONTINUE                                                      045  LM00045
 10133 TRA +0 02000 0 10037                                                                                             
                      T'H CMP1, FOR I=2,1,I.G.LOADS                                 046  LM00046
 10134 CLA +0 50000 0 07515    10135 STO +0 60100 0 01610    10136 TRA +0 02000 0 10142    10137 CLA +0 50000 0 01610   
 10140 ADD +0 40000 0 07514    10141 STO +0 60100 0 01610    10142 CLA +0 50000 0 01610    10143 SUB +0 40200 0 07503   
 10144 TZE +0 10000 0 10146    10145 TPL +0 12000 0 10165                                                               
                           W'R A(I).NE.A(1)                                         047  LM00047
 10146 LXA +0 53400 1 01610    10147 CLA +0 50000 1 00036    10150 SUB +0 40200 0 00035    10151 TZE +0 10000 0 10164   
                           P'T $(10A7)$, A(1)...A(LOADS)                            048  LM00048
 10152 TSX +0 07400 4 00010    10153 STR -1 07525 1 10174    10154 CLA +0 50000 0 07503    10155 SUB +0 40200 0 10156   
 10156 TXH +3 00000 0 00036    10157 ALS +0 76700 0 00022    10160 STD +0 62200 0 10161    10161 STR -1 00000 0 00035   
 10162 STR -1 00000 0 00000                                                                                             
                           T'O CM03                                                 049  LM00049
 10163 TRA +0 02000 0 00015                                                                                             
      CMP1                 E'L                                                      050  LM00050
 10164 TRA +0 02000 0 10137                                                                                             
                 E'L                                                                051  LM00051
      CM03       CONTINUE                                                           052  LM00052
 10165 TRA +0 02000 0 07760    10166 TRA +0 02000 0 07746                                                               
                 CHNCOM.(0)                                                         053  LM00053
 10167 TSX +0 07400 4 00004    10170 TXH +3 00000 0 07513                                                               
                 E'M                                                                054  LM00054
 10171 TSX +0 07400 4 00006                                                                                             




 LKREM   BCD 09/20/68 0220.0   18097         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   LKREM   MAD            02/15/68    1512.0
-                 
                      LINK-REMOVE PROGRAM                                                              LM00001    
                                                                                                       LM00002    
                      LOADING INSTRUCTIONS                                                             LM00003    
                                                                                                       LM00004    
                           MAD LKREM (LIST)                                                            LM00005    
                           MAD SEARCH (LIST)                                                           LM00006    
                           NCLOAD LKREM  SEARCH (SQZ) (SRCH) TALIB                                     LM00007    
                           SAVE LKREM                                                                  LM00008    
                           R LKREM                                                                     LM00009    
                                                                                                       LM00010    
                      LINKS WHICH POINT NOWHERE WILL GO AWAY                                           LM00011    
                      T. H. VAN VLECK 10/66                                                            LM00012    
                           BASED ON 'REMOVE', BY                                                       LM00013    
                           D.R. WIDRIG  DEC. 1965                                                      LM00014    
                                                                                                       LM00015    
                  NORMAL MODE IS INTEGER                                                          *001 LM00016    
                  DIMENSION V(2),UFD(7),USR(7),LKSTAT(7)                                          *002 LM00017    
                                                                                                       LM00018    
                  VECTOR VALUES MFD = $M.F.D.$                                                    *003 LM00019    
                  VECTOR VALUES UF = $U.F.D.$                                                     *004 LM00020    
                  VECTOR VALUES FILE = $(FILE)$                                                   *005 LM00021    
                  VECTOR VALUES TESTSW = 0B                                                       *006 LM00022    
                  VECTOR VALUES NPNDSW = 0B                                                       *007 LM00023    
                  VECTOR VALUES TRECS  = 0                                                        *008 LM00024    
                  VECTOR VALUES DRECS  = 0                                                        *009 LM00025    
                  VECTOR VALUES DCNT   = 0                                                        *010 LM00026    
                  VECTOR VALUES DONTSW = 0B                                                       *011 LM00027    
                  VECTOR VALUES PRTSW  = 0B                                                       *012 LM00028    
                  VECTOR VALUES B1B    = 60 5757575757K                                           *013 LM00029    
                                                                                                       LM00030    
                  VECTOR VALUES R = 432                                                           *014 LM00031    
                  VECTOR VALUES MZE = 4K11                                                        *015 LM00032    
                  VECTOR VALUES FENCE = 777777777777K                                             *016 LM00033    
                                                                                                       LM00034    
                                                                                                       LM00035    
                  WHENEVER COMARG.(1,ARG) .E. $(PRNT)$                                            *017 LM00036    
                       PRTSW = 1B                                                                 *018 LM00037    
                  OR WHENEVER ARG  .E. $(TEST)$                                                   *019 LM00038    
                       PRTSW = 1B                                                                 *020 LM00039    
                       TESTSW = 1B                                                                *021 LM00040    
                  END OF CONDITIONAL                                                              *022 LM00041    
                  WHENEVER COMARG.(2,ARG) .E. $(NPND)$, NPNDSW = 1B                               *023 LM00042    
                  SETBRK.(EOF1)                                                                   *024 LM00043    
                                                                                                       LM00044    
                      REMEMBERING WHERE YOU WERE, ATTACH TO MFD                                        LM00045    
                                                                                                       LM00046    
                  ATTNAM.(V(2)...2,NERR3)                                                         *025 LM00047    
                  ATTACH.(MFD,FILE,ERR1)                                                          *026 LM00048    
                  ATTPB = MFD                                                                     *027 LM00049    
                  ATTPG = FILE                                                                    *028 LM00050    
                                                                                                       LM00051    
                      OPEN AND READ MFD                                                                LM00052    
                                                                                                       LM00053    
                  MFDSLT = 1                                                                      *029 LM00054    
                                                                                                       LM00055    
                                                                                                       LM00056    
      READM       VAL1 = GETENT.(MFD,FILE,USR,MFDSLT)                                             *030 LM00057    
                  WHENEVER VAL1 .E. 4                                                             *031 LM00058    
                       TRANSFER TO EOF1                                                           *032 LM00059    
                  OR WHENEVER VAL1 .G. 0                                                          *033 LM00060    
                       TRANSFER TO ERR1                                                           *034 LM00061    
                  END OF CONDITIONAL                                                              *035 LM00062    
                  MFDSLT = MFDSLT + 1                                                             *036 LM00063    
                  WHENEVER ((USR.E.0)).OR.                                                        *037 LM00064    
                1      (USR(1).E.FILE), TRANSFER TO READM                                         *037 LM00065    
                                                                                                       LM00066    
                      FOUND USER, OPEN AND READ HIS UFD                                                LM00067    
                      MAKE SURE ATTACHED TO MFD                                                        LM00068    
                                                                                                       LM00069    
                  WHENEVER ATTPB .NE. MFD .OR. ATTPG .NE. FILE                                    *038 LM00070    
                       ATTPB = MFD                                                                *039 LM00071    
                       ATTPG = FILE                                                               *040 LM00072    
                       ATTACH.(MFD,FILE,ERR1)                                                     *041 LM00073    
                  END OF CONDITIONAL                                                              *042 LM00074    
                  USRSLT = 1                                                                      *043 LM00075    
                                                                                                       LM00076    
                      IS THIS FILE DIRECTORY PROTECTED.Q.                                              LM00077    
                                                                                                       LM00078    
                  WHENEVER USR .E. $ M1416$                                                       *044 LM00079    
                       DONTSW = 1B                                                                *045 LM00080    
                  OTHERWISE                                                                       *046 LM00081    
                       DONTSW = 0B                                                                *047 LM00082    
                  END OF CONDITIONAL                                                              *048 LM00083    
                                                                                                       LM00084    
                                                                                                       LM00085    
      READU       VAL2 = GETENT.(USR,USR(1),UFD,USRSLT)                                           *049 LM00086    
                  WHENEVER VAL2 .E.4                                                              *050 LM00087    
                       TRANSFER TO READM                                                          *051 LM00088    
                  OR WHENEVER VAL2 .G.0                                                           *052 LM00089    
                       TRANSFER TO ERR2                                                           *053 LM00090    
                  END OF CONDITIONAL                                                              *054 LM00091    
                  USRSLT = USRSLT + 1                                                             *055 LM00092    
                  DEVICE = (UFD(4).RS.15).A.7K                                                    *056 LM00093    
                  WHENEVER ((UFD.E.0).AND.(UFD(1).E.0)).OR.                                       *057 LM00094    
                1      (DEVICE.NE.0),                                                             *057 LM00095    
                2      TRANSFER TO READU                                                          *057 LM00096    
                                                                                                       LM00097    
                  WHENEVER UFD(5) .E. UF .AND. UFD(6) .E. FILE                                    *058 LM00098    
                       UFD(5) = UFD(2)                                                            *059 LM00099    
                       UFD(6) = UFD(3)                                                            *060 LM00100    
                       UFD(2) = MFD                                                               *061 LM00101    
                       UFD(3) = FILE                                                              *062 LM00102    
                  END OF CONDITIONAL                                                              *063 LM00103    
                                                                                                       LM00104    
                  TRECS = TRECS + 1                                                               *064 LM00105    
                                                                                                       LM00106    
                  CODE = SEARCH.(UFD(2),UFD(3),LKSTAT,UFD(5),UFD(6))                              *065 LM00107    
                  WH = CODE                                                                       *066 LM00108    
                  WHENEVER CODE + ((LKSTAT(4).RS.15).A.7K) .E. 0                                  *067 LM00109    
                       CODE = SEARCH.(LKSTAT(2),LKSTAT(3),LKSTAT,LKSTAT(5),                       *068 LM00110    
                1         LKSTAT(6))                                                              *068 LM00111    
                       WHENEVER (LKSTAT(4).RS.15).A.7K .E. 0, CODE = 5                            *069 LM00112    
                       WH = WH .V. (CODE.LS.6)                                                    *070 LM00113    
                  END OF CONDITIONAL                                                              *071 LM00114    
                  WHENEVER CODE .NE. 0, TRANSFER TO GOTCHA                                        *072 LM00115    
                  TRANSFER TO READU                                                               *073 LM00116    
                                                                                                       LM00117    
      GOTCHA      WHENEVER PRTSW                                                                  *074 LM00118    
                       WHENEVER NPNDSW.AND.DONTSW, TRANSFER TO READU                              *075 LM00119    
                       PRMESS.(USR,B1B,USR(1),B1B,UFD,B1B,UFD(1),B1B,                             *076 LM00120    
                1      UFD(2),B1B,UFD(3),B1B,UFD(5),B1B,UFD(6),B1B,WH)                            *076 LM00121    
                  END OF CONDITIONAL                                                              *077 LM00122    
                  WHENEVER DONTSW, TRANSFER TO READU                                              *078 LM00123    
                  DCNT = DCNT + 1                                                                 *079 LM00124    
                  WHENEVER TESTSW, TRANSFER TO READU                                              *080 LM00125    
                  WHENEVER ATTPB.NE.USR .OR. ATTPG .NE. USR(1)                                    *081 LM00126    
                       ATTPB = USR                                                                *082 LM00127    
                       ATTPG = USR(1)                                                             *083 LM00128    
                       ATTACH.(USR,USR(1),ERR2)                                                   *084 LM00129    
                  END OF CONDITIONAL                                                              *085 LM00130    
                  UNLINK.(UFD,UFD(1),ERR3)                                                        *086 LM00131    
                  TRANSFER TO READU                                                               *087 LM00132    
                                                                                                       LM00133    
                      EOF ON MFD, FINISH UP AND QUIT                                                   LM00134    
                                                                                                       LM00135    
      EOF1        CONTINUE                                                                        *088 LM00136    
      BAIL        ATTACH.(V(2),V(1),NERR3)                                                        *089 LM00137    
                  WHENEVER TESTSW, PRMESA.($WOULD HAVE$)                                          *090 LM00138    
                  PRMESS.($UNLINKED$,BZEL.(DERBC.(DCNT)), $ LINKS$)                               *091 LM00139    
                  PRMESS.                                                                         *092 LM00140    
                  PRMESS.(BZEL.(DERBC.(TRECS)),$ LINKS IN$)                                       *093 LM00141    
                  PRMESS.                                                                         *094 LM00142    
      NERR3       CHNCOM.(0)                                                                      *095 LM00143    
                                                                                                       LM00144    
                      ERROR IN MFD, FATAL                                                              LM00145    
                                                                                                       LM00146    
      ERR1        PRNTER.                                                                         *096 LM00147    
                  PRMESS.($FATAL ERROR$,DERBC.(VAL1),B1B,DERBC.(MFDSLT))                          *097 LM00148    
                  TRANSFER TO BAIL                                                                *098 LM00149    
                                                                                                       LM00150    
                      ERROR IN UFD, SKIP AND CONTINUE                                                  LM00151    
                                                                                                       LM00152    
      ERR2        PRNTER.                                                                         *099 LM00153    
                  PRMESS.(DERBC.(VAL2),B1B,DERBC.(USRSLT))                                        *100 LM00154    
                  USRSLT = USRSLT + 1                                                             *101 LM00155    
                  TRANSFER TO READM                                                               *102 LM00156    
                                                                                                       LM00157    
                      ERROR IN REMOVING FILE, CONTINUE                                                 LM00158    
                                                                                                       LM00159    
      ERR3        PRNTER.                                                                         *103 LM00160    
                  TRANSFER TO READU                                                               *104 LM00161    
                                                                                                       LM00162    
                  END OF PROGRAM                                                                  *105 LM00163    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00631 TRANSFER VECTOR LENGTH  00017 PROGRAM BEGINS    00141
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ARG    00031   1        DONTSW 00040 A 2        GOTCHA 00025   4        PRTSW  00060 A 2        UF     00074 A 1  
      ATTPB  00032   1        DRECS  00041 A 1        LKSTAT 00053 A 1        READM  00027   4        USR    00104 A 1  
      ATTPG  00033   1        EOF1   00021   4        MFD    00054 A 1        READU  00030   4        USRSLT 00105   1  
      B1B    00034 A 1        ERR1   00022   4        MFDSLT 00055   1        R      00061 A 1        VAL1   00106   1  
      BAIL   00020   4        ERR2   00023   4        MZE    00056 A 1        TESTSW 00062 A 2        VAL2   00107   1  
      CODE   00035   1        ERR3   00024   4        NERR3  00026   4        TRECS  00063 A 1        V      00112 A 1  
      DCNT   00036 A 1        FENCE  00042 A 1        NPNDSW 00057 A 2        UFD    00073 A 1        WH     00113   1  
      DEVICE 00037   1        FILE   00043 A 1                                                                          
0FUNCTION DICTIONARY    
      ATTACH 00000   1        ATTNAM 00001   1        BZEL   00002   1        CHNCOM 00003   1        COMARG 00004   1  
      DERBC  00005   1        EXIT   00006   1        GETENT 00007   1        .SETUP 00010   1        PRMESA 00011   1  
      PRMESS 00012   1        PRNTER 00013   1        SEARCH 00014   1        SETBRK 00015   1        UNLINK 00016   1  
0ABSOLUTE CONSTANTS     
 00126 +255151465160     00127 +262163214360     00131 -203145606060     00132 -204331454262     00125 +252460606060    
 00134 -244543314542     00130 +302165256060     00135 -264664432460     00121 +000000000006     00120 +000000000005    
 00122 +000000000007     00123 +000000000017     00133 -204401040106     00114 +000000000000     00117 +000000000004    
 00136 -344547452434     00116 +000000000002     00140 -346325626334     00137 -344751456334     00115 +000000000001    
 00124 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00020 TXL -300527000523       00021 TXL -300523000523       00022 TXL -300566000565       00023 TXL -300604000603      
 00024 TXL -300623000622       00025 TXL -300440000436       00026 TXL -300565000563       00027 TXL -300215000207      
 00030 TXL -300277000271                                                                                                
0PROGRAM    
                 N'R                                                                001  LM00016
                 D'N V(2),UFD(7),USR(7),LKSTAT(7)                                   002  LM00017
                 V'S MFD = $M.F.D.$                                                 003  LM00019
 00141 TSX +0 07400 4 00010    00054     -0 43326 3 32433                                                               
                 V'S UF = $U.F.D.$                                                  004  LM00020
 00074     -2 43326 3 32433                                                                                             
                 V'S FILE = $(FILE)$                                                005  LM00021
 00043     -3 42631 4 32534                                                                                             
                 V'S TESTSW = 0B                                                    006  LM00022
 00062     +0 00000 0 00000                                                                                             
                 V'S NPNDSW = 0B                                                    007  LM00023
 00057     +0 00000 0 00000                                                                                             
                 V'S TRECS  = 0                                                     008  LM00024
 00063     +0 00000 0 00000                                                                                             
                 V'S DRECS  = 0                                                     009  LM00025
 00041     +0 00000 0 00000                                                                                             
                 V'S DCNT   = 0                                                     010  LM00026
 00036     +0 00000 0 00000                                                                                             
                 V'S DONTSW = 0B                                                    011  LM00027
 00040     +0 00000 0 00000                                                                                             
                 V'S PRTSW  = 0B                                                    012  LM00028
 00060     +0 00000 0 00000                                                                                             
                 V'S B1B    = 60 5757575757K                                        013  LM00029
 00034     -2 05757 5 75757                                                                                             
                 V'S R = 432                                                        014  LM00031
 00061     +0 00000 0 00660                                                                                             
                 V'S MZE = 4K11                                                     015  LM00032
 00056     -0 00000 0 00000                                                                                             
                 V'S FENCE = 777777777777K                                          016  LM00033
 00042     -3 77777 7 77777                                                                                             
                 W'R COMARG.(1,ARG) .E. $(PRNT)$                                    017  LM00036
 00142 TSX +0 07400 4 00004    00143 TXH +3 00000 0 00115    00144 TXH +3 00000 0 00031    00145 SUB +0 40200 0 00137   
 00146 TNZ -0 10000 0 00152                                                                                             
                      PRTSW = 1B                                                    018  LM00037
 00147 CLA +0 50000 0 00115    00150 STO +0 60100 0 00060                                                               
                 O'R ARG  .E. $(TEST)$                                              019  LM00038
 00151 TRA +0 02000 0 00161    00152 CLA +0 50000 0 00031    00153 SUB +0 40200 0 00140    00154 TNZ -0 10000 0 00161   
                      PRTSW = 1B                                                    020  LM00039
 00155 CLA +0 50000 0 00115    00156 STO +0 60100 0 00060                                                               
                      TESTSW = 1B                                                   021  LM00040
 00157 CLA +0 50000 0 00115    00160 STO +0 60100 0 00062                                                               
                 E'L                                                                022  LM00041
                 W'R COMARG.(2,ARG) .E. $(NPND)$, NPNDSW = 1B                       023  LM00042
 00161 TSX +0 07400 4 00004    00162 TXH +3 00000 0 00116    00163 TXH +3 00000 0 00031    00164 SUB +0 40200 0 00136   
 00165 TNZ -0 10000 0 00170    00166 CLA +0 50000 0 00115    00167 STO +0 60100 0 00057                                 
                 SETBRK.(EOF1)                                                      024  LM00043
 00170 TSX +0 07400 4 00015    00171 TXH +3 00000 0 00021                                                               
                 ATTNAM.(V(2)...2,NERR3)                                            025  LM00047
 00172 TSX +0 07400 4 00001    00173 TIX +2 00116 0 00110    00174 TXH +3 00000 0 00026                                 
                 ATTACH.(MFD,FILE,ERR1)                                             026  LM00048
 00175 TSX +0 07400 4 00000    00176 TXH +3 00000 0 00054    00177 TXH +3 00000 0 00043    00200 TXH +3 00000 0 00022   
                 ATTPB = MFD                                                        027  LM00049
 00201 CLA +0 50000 0 00054    00202 STO +0 60100 0 00032                                                               
                 ATTPG = FILE                                                       028  LM00050
 00203 CLA +0 50000 0 00043    00204 STO +0 60100 0 00033                                                               
                 MFDSLT = 1                                                         029  LM00054
 00205 CLA +0 50000 0 00115    00206 STO +0 60100 0 00055                                                               
      READM      VAL1 = GETENT.(MFD,FILE,USR,MFDSLT)                                030  LM00057
 00207 TSX +0 07400 4 00007    00210 TXH +3 00000 0 00054    00211 TXH +3 00000 0 00043    00212 TXH +3 00000 0 00104   
 00213 TXH +3 00000 0 00055    00214 STO +0 60100 0 00106                                                               
                 W'R VAL1 .E. 4                                                     031  LM00058
 00215 CLA +0 50000 0 00106    00216 SUB +0 40200 0 00117    00217 TNZ -0 10000 0 00222                                 
                      T'O EOF1                                                      032  LM00059
 00220 TRA +0 02000 0 00021                                                                                             
                 O'R VAL1 .G. 0                                                     033  LM00060
 00221 TRA +0 02000 0 00227    00222 CLA +0 50000 0 00106    00223 SUB +0 40200 0 00114    00224 TZE +0 10000 0 00227   
 00225 TMI -0 12000 0 00227                                                                                             
                      T'O ERR1                                                      034  LM00061
 00226 TRA +0 02000 0 00022                                                                                             
                 E'L                                                                035  LM00062
                 MFDSLT = MFDSLT + 1                                                036  LM00063
 00227 CLA +0 50000 0 00055    00230 ADD +0 40000 0 00115    00231 STO +0 60100 0 00055                                 
                 W'R ((USR.E.0)).OR.                                                037  LM00064
                1     (USR(1).E.FILE), T'O READM                                    037  LM00065
 00232 CLA +0 50000 0 00103    00233 SUB +0 40200 0 00043    00234 TZE +0 10000 0 00240    00235 CLA +0 50000 0 00104   
 00236 SUB +0 40200 0 00114    00237 TNZ -0 10000 0 00241    00240 TRA +0 02000 0 00027                                 
                 W'R ATTPB .NE. MFD .OR. ATTPG .NE. FILE                            038  LM00070
 00241 CLA +0 50000 0 00033    00242 SUB +0 40200 0 00043    00243 TNZ -0 10000 0 00247    00244 CLA +0 50000 0 00032   
 00245 SUB +0 40200 0 00054    00246 TZE +0 10000 0 00257                                                               
                      ATTPB = MFD                                                   039  LM00071
 00247 CLA +0 50000 0 00054    00250 STO +0 60100 0 00032                                                               
                      ATTPG = FILE                                                  040  LM00072
 00251 CLA +0 50000 0 00043    00252 STO +0 60100 0 00033                                                               
                      ATTACH.(MFD,FILE,ERR1)                                        041  LM00073
 00253 TSX +0 07400 4 00000    00254 TXH +3 00000 0 00054    00255 TXH +3 00000 0 00043    00256 TXH +3 00000 0 00022   
                 E'L                                                                042  LM00074
                 USRSLT = 1                                                         043  LM00075
 00257 CLA +0 50000 0 00115    00260 STO +0 60100 0 00105                                                               
                 W'R USR .E. $ M1416$                                               044  LM00079
 00261 CLA +0 50000 0 00104    00262 SUB +0 40200 0 00133    00263 TNZ -0 10000 0 00267                                 
                      DONTSW = 1B                                                   045  LM00080
 00264 CLA +0 50000 0 00115    00265 STO +0 60100 0 00040                                                               
                 O'E                                                                046  LM00081
 00266 TRA +0 02000 0 00271                                                                                             
                      DONTSW = 0B                                                   047  LM00082
 00267 CLA +0 50000 0 00114    00270 STO +0 60100 0 00040                                                               
                 E'L                                                                048  LM00083
      READU      VAL2 = GETENT.(USR,USR(1),UFD,USRSLT)                              049  LM00086
 00271 TSX +0 07400 4 00007    00272 TXH +3 00000 0 00104    00273 TXH +3 00000 0 00103    00274 TXH +3 00000 0 00073   
 00275 TXH +3 00000 0 00105    00276 STO +0 60100 0 00107                                                               
                 W'R VAL2 .E.4                                                      050  LM00087
 00277 CLA +0 50000 0 00107    00300 SUB +0 40200 0 00117    00301 TNZ -0 10000 0 00304                                 
                      T'O READM                                                     051  LM00088
 00302 TRA +0 02000 0 00027                                                                                             
                 O'R VAL2 .G.0                                                      052  LM00089
 00303 TRA +0 02000 0 00311    00304 CLA +0 50000 0 00107    00305 SUB +0 40200 0 00114    00306 TZE +0 10000 0 00311   
 00307 TMI -0 12000 0 00311                                                                                             
                      T'O ERR2                                                      053  LM00090
 00310 TRA +0 02000 0 00023                                                                                             
                 E'L                                                                054  LM00091
                 USRSLT = USRSLT + 1                                                055  LM00092
 00311 CLA +0 50000 0 00105    00312 ADD +0 40000 0 00115    00313 STO +0 60100 0 00105                                 
                 DEVICE = (UFD(4).RS.15).A.7K                                       056  LM00093
 00314 CAL -0 50000 0 00123    00315 STA +0 62100 0 00317    00316 CAL -0 50000 0 00067    00317 LGR -0 76500 0 00000   
 00320 ANA -0 32000 0 00122    00321 SLW +0 60200 0 00037                                                               
                 W'R ((UFD.E.0).AND.(UFD(1).E.0)).OR.                               057  LM00094
                1     (DEVICE.NE.0),                                                057  LM00095
                2     T'O READU                                                     057  LM00096
 00322 CLA +0 50000 0 00037    00323 SUB +0 40200 0 00114    00324 TNZ -0 10000 0 00334    00325 CLA +0 50000 0 00072   
 00326 SUB +0 40200 0 00114    00327 TNZ -0 10000 0 00333    00330 CLA +0 50000 0 00073    00331 SUB +0 40200 0 00114   
 00332 TZE +0 10000 0 00334    00333 TRA +0 02000 0 00335    00334 TRA +0 02000 0 00030                                 
                 W'R UFD(5) .E. UF .AND. UFD(6) .E. FILE                            058  LM00098
 00335 CLA +0 50000 0 00065    00336 SUB +0 40200 0 00043    00337 TNZ -0 10000 0 00353    00340 CLA +0 50000 0 00066   
 00341 SUB +0 40200 0 00074    00342 TNZ -0 10000 0 00353                                                               
                      UFD(5) = UFD(2)                                               059  LM00099
 00343 CLA +0 50000 0 00071    00344 STO +0 60100 0 00066                                                               
                      UFD(6) = UFD(3)                                               060  LM00100
 00345 CLA +0 50000 0 00070    00346 STO +0 60100 0 00065                                                               
                      UFD(2) = MFD                                                  061  LM00101
 00347 CLA +0 50000 0 00054    00350 STO +0 60100 0 00071                                                               
                      UFD(3) = FILE                                                 062  LM00102
 00351 CLA +0 50000 0 00043    00352 STO +0 60100 0 00070                                                               
                 E'L                                                                063  LM00103
                 TRECS = TRECS + 1                                                  064  LM00105
 00353 CLA +0 50000 0 00063    00354 ADD +0 40000 0 00115    00355 STO +0 60100 0 00063                                 
                 CODE = SEARCH.(UFD(2),UFD(3),LKSTAT,UFD(5),UFD(6))                 065  LM00107
 00356 TSX +0 07400 4 00014    00357 TXH +3 00000 0 00071    00360 TXH +3 00000 0 00070    00361 TXH +3 00000 0 00053   
 00362 TXH +3 00000 0 00066    00363 TXH +3 00000 0 00065    00364 STO +0 60100 0 00035                                 
                 WH = CODE                                                          066  LM00108
 00365 CLA +0 50000 0 00035    00366 STO +0 60100 0 00113                                                               
                 W'R CODE + ((LKSTAT(4).RS.15).A.7K) .E. 0                          067  LM00109
 00367 CAL -0 50000 0 00123    00370 STA +0 62100 0 00372    00371 CAL -0 50000 0 00047    00372 LGR -0 76500 0 00000   
 00373 ANA -0 32000 0 00122    00374 SLW +0 60200 0 00625    00375 CLA +0 50000 0 00035    00376 ADD +0 40000 0 00625   
 00377 SUB +0 40200 0 00114    00400 TNZ -0 10000 0 00431                                                               
                      CODE = SEARCH.(LKSTAT(2),LKSTAT(3),LKSTAT,LKSTAT(5),          068  LM00110
                1        LKSTAT(6))                                                 068  LM00111
 00401 TSX +0 07400 4 00014    00402 TXH +3 00000 0 00051    00403 TXH +3 00000 0 00050    00404 TXH +3 00000 0 00053   
 00405 TXH +3 00000 0 00046    00406 TXH +3 00000 0 00045    00407 STO +0 60100 0 00035                                 
                      W'R (LKSTAT(4).RS.15).A.7K .E. 0, CODE = 5                    069  LM00112
 00410 CAL -0 50000 0 00123    00411 STA +0 62100 0 00413    00412 CAL -0 50000 0 00047    00413 LGR -0 76500 0 00000   
 00414 ANA -0 32000 0 00122    00415 SLW +0 60200 0 00625    00416 CLA +0 50000 0 00625    00417 SUB +0 40200 0 00114   
 00420 TNZ -0 10000 0 00423    00421 CLA +0 50000 0 00120    00422 STO +0 60100 0 00035                                 
                      WH = WH .V. (CODE.LS.6)                                       070  LM00113
 00423 CAL -0 50000 0 00121    00424 STA +0 62100 0 00426    00425 CAL -0 50000 0 00035    00426 ALS +0 76700 0 00000   
 00427 ORA -0 50100 0 00113    00430 SLW +0 60200 0 00113                                                               
                 E'L                                                                071  LM00114
                 W'R CODE .NE. 0, T'O GOTCHA                                        072  LM00115
 00431 CLA +0 50000 0 00035    00432 SUB +0 40200 0 00114    00433 TZE +0 10000 0 00435    00434 TRA +0 02000 0 00025   
                 T'O READU                                                          073  LM00116
 00435 TRA +0 02000 0 00030                                                                                             
      GOTCHA     W'R PRTSW                                                          074  LM00118
 00436 NZT -0 52000 0 00060    00437 TRA +0 02000 0 00467                                                               
                      W'R NPNDSW.AND.DONTSW, T'O READU                              075  LM00119
 00440 NZT -0 52000 0 00040    00441 TRA +0 02000 0 00445    00442 NZT -0 52000 0 00057    00443 TRA +0 02000 0 00445   
 00444 TRA +0 02000 0 00030                                                                                             
                      PRMESS.(USR,B1B,USR(1),B1B,UFD,B1B,UFD(1),B1B,                076  LM00120
                1     UFD(2),B1B,UFD(3),B1B,UFD(5),B1B,UFD(6),B1B,WH)               076  LM00121
 00445 TSX +0 07400 4 00012    00446 TXH +3 00000 0 00104    00447 TXH +3 00000 0 00034    00450 TXH +3 00000 0 00103   
 00451 TXH +3 00000 0 00034    00452 TXH +3 00000 0 00073    00453 TXH +3 00000 0 00034    00454 TXH +3 00000 0 00072   
 00455 TXH +3 00000 0 00034    00456 TXH +3 00000 0 00071    00457 TXH +3 00000 0 00034    00460 TXH +3 00000 0 00070   
 00461 TXH +3 00000 0 00034    00462 TXH +3 00000 0 00066    00463 TXH +3 00000 0 00034    00464 TXH +3 00000 0 00065   
 00465 TXH +3 00000 0 00034    00466 TXH +3 00000 0 00113                                                               
                 E'L                                                                077  LM00122
                 W'R DONTSW, T'O READU                                              078  LM00123
 00467 NZT -0 52000 0 00040    00470 TRA +0 02000 0 00472    00471 TRA +0 02000 0 00030                                 
                 DCNT = DCNT + 1                                                    079  LM00124
 00472 CLA +0 50000 0 00036    00473 ADD +0 40000 0 00115    00474 STO +0 60100 0 00036                                 
                 W'R TESTSW, T'O READU                                              080  LM00125
 00475 NZT -0 52000 0 00062    00476 TRA +0 02000 0 00500    00477 TRA +0 02000 0 00030                                 
                 W'R ATTPB.NE.USR .OR. ATTPG .NE. USR(1)                            081  LM00126
 00500 CLA +0 50000 0 00033    00501 SUB +0 40200 0 00103    00502 TNZ -0 10000 0 00506    00503 CLA +0 50000 0 00032   
 00504 SUB +0 40200 0 00104    00505 TZE +0 10000 0 00516                                                               
                      ATTPB = USR                                                   082  LM00127
 00506 CLA +0 50000 0 00104    00507 STO +0 60100 0 00032                                                               
                      ATTPG = USR(1)                                                083  LM00128
 00510 CLA +0 50000 0 00103    00511 STO +0 60100 0 00033                                                               
                      ATTACH.(USR,USR(1),ERR2)                                      084  LM00129
 00512 TSX +0 07400 4 00000    00513 TXH +3 00000 0 00104    00514 TXH +3 00000 0 00103    00515 TXH +3 00000 0 00023   
                 E'L                                                                085  LM00130
                 UNLINK.(UFD,UFD(1),ERR3)                                           086  LM00131
 00516 TSX +0 07400 4 00016    00517 TXH +3 00000 0 00073    00520 TXH +3 00000 0 00072    00521 TXH +3 00000 0 00024   
                 T'O READU                                                          087  LM00132
 00522 TRA +0 02000 0 00030                                                                                             
      EOF1       C'E                                                                088  LM00136
      BAIL       ATTACH.(V(2),V(1),NERR3)                                           089  LM00137
 00523 TSX +0 07400 4 00000    00524 TXH +3 00000 0 00110    00525 TXH +3 00000 0 00111    00526 TXH +3 00000 0 00026   
                 W'R TESTSW, PRMESA.($WOULD HAVE$)                                  090  LM00138
 00527 NZT -0 52000 0 00062    00530 TRA +0 02000 0 00534    00531 TSX +0 07400 4 00011    00532 TXH +3 00000 0 00135   
 00533 TXH +3 00000 0 00130                                                                                             
                 PRMESS.($UNLINKED$,BZEL.(DERBC.(DCNT)), $ LINKS$)                  091  LM00139
 00534 TSX +0 07400 4 00005    00535 TXH +3 00000 0 00036    00536 STO +0 60100 0 00625    00537 TSX +0 07400 4 00002   
 00540 TXH +3 00000 0 00625    00541 STO +0 60100 0 00625    00542 TSX +0 07400 4 00012    00543 TXH +3 00000 0 00134   
 00544 TXH +3 00000 0 00125    00545 TXH +3 00000 0 00625    00546 TXH +3 00000 0 00132                                 
                 PRMESS.                                                            092  LM00140
 00547 TSX +0 07400 4 00012                                                                                             
                 PRMESS.(BZEL.(DERBC.(TRECS)),$ LINKS IN$)                          093  LM00141
 00550 TSX +0 07400 4 00005    00551 TXH +3 00000 0 00063    00552 STO +0 60100 0 00625    00553 TSX +0 07400 4 00002   
 00554 TXH +3 00000 0 00625    00555 STO +0 60100 0 00625    00556 TSX +0 07400 4 00012    00557 TXH +3 00000 0 00625   
 00560 TXH +3 00000 0 00132    00561 TXH +3 00000 0 00131                                                               
                 PRMESS.                                                            094  LM00142
 00562 TSX +0 07400 4 00012                                                                                             
      NERR3      CHNCOM.(0)                                                         095  LM00143
 00563 TSX +0 07400 4 00003    00564 TXH +3 00000 0 00114                                                               
      ERR1       PRNTER.                                                            096  LM00147
 00565 TSX +0 07400 4 00013                                                                                             
                 PRMESS.($FATAL ERROR$,DERBC.(VAL1),B1B,DERBC.(MFDSLT))             097  LM00148
 00566 TSX +0 07400 4 00005    00567 TXH +3 00000 0 00055    00570 STO +0 60100 0 00625    00571 TSX +0 07400 4 00005   
 00572 TXH +3 00000 0 00106    00573 STO +0 60100 0 00626    00574 TSX +0 07400 4 00012    00575 TXH +3 00000 0 00127   
 00576 TXH +3 00000 0 00126    00577 TXH +3 00000 0 00626    00600 TXH +3 00000 0 00034    00601 TXH +3 00000 0 00625   
                 T'O BAIL                                                           098  LM00149
 00602 TRA +0 02000 0 00020                                                                                             
      ERR2       PRNTER.                                                            099  LM00153
 00603 TSX +0 07400 4 00013                                                                                             
                 PRMESS.(DERBC.(VAL2),B1B,DERBC.(USRSLT))                           100  LM00154
 00604 TSX +0 07400 4 00005    00605 TXH +3 00000 0 00105    00606 STO +0 60100 0 00626    00607 TSX +0 07400 4 00005   
 00610 TXH +3 00000 0 00107    00611 STO +0 60100 0 00625    00612 TSX +0 07400 4 00012    00613 TXH +3 00000 0 00625   
 00614 TXH +3 00000 0 00034    00615 TXH +3 00000 0 00626                                                               
                 USRSLT = USRSLT + 1                                                101  LM00155
 00616 CLA +0 50000 0 00105    00617 ADD +0 40000 0 00115    00620 STO +0 60100 0 00105                                 
                 T'O READM                                                          102  LM00156
 00621 TRA +0 02000 0 00027                                                                                             
      ERR3       PRNTER.                                                            103  LM00160
 00622 TSX +0 07400 4 00013                                                                                             
                 T'O READU                                                          104  LM00161
 00623 TRA +0 02000 0 00030                                                                                             
                 E'M                                                                105  LM00163
 00624 TSX +0 07400 4 00006                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  SEARCH   MAD            02/15/68    1512.1
-                 
                      PROGRAM TO SEARCH M.F.D./U.F.D. FOR FILES                                        LM00001    
                           D.R. WIDRIG  NOV. 1966                                                      LM00002    
                                                                                                       LM00003    
                      THIS PROGRAM TRIES TO IMPROVE ON SPEED OF                                        LM00004    
                      SEARCHES OVER THE ENTIRE FILE HIERARCHY.  A                                      LM00005    
                      SMALL AMOUNT OF ASSOCIATIVE MEMORY TRIES TO                                      LM00006    
                      KEEP ACTIVE OR USEFUL DIRECTORIES IN CORE.                                       LM00007    
                      NOTE THAT THIS USES ALL OF MEMORY AS BUFFER SPACE.                               LM00008    
                                                                                                       LM00009    
                  EXTERNAL FUNCTION (PB,PG,ENTRY,N1,N2)                                           *001 LM00010    
                  ENTRY TO SEARCH.                                                                *002 LM00011    
                  READSW = 0B                                                                     *003 LM00012    
                  TRANSFER TO GETARG                                                              *004 LM00013    
                                                                                                       LM00014    
                      SAMPLE CALL IS:                                                                  LM00015    
                           ERCODE = SEARCH.(PROB,PROG,ENTRY,ALPHA,BETA)                                LM00016    
                                                                                                       LM00017    
                      IF ERCODE IS ZERO, THEN ENTRY(0) = ALPHA                                         LM00018    
                           ENTRY(1) = BETA                                                             LM00019    
                           ENTRY(2) = DLM                                                              LM00020    
                           ENTRY(3) = DLU + AUTHNO                                                     LM00021    
                           ETC.                                                                        LM00022    
                      NON-ZERO ERROR CODES INCLUDE:                                                    LM00023    
                           1.  PROB-PROG NOT IN M.F.D.                                                 LM00024    
                           2.  ALPHA-BETA NOT IN PROB-PROG                                             LM00025    
                           3.  I/O ERROR                                                               LM00026    
                                                                                                       LM00027    
                  ENTRY TO GETENT.                                                                *005 LM00028    
                  READSW = 1B                                                                     *006 LM00029    
                  TRANSFER TO GETARG                                                              *007 LM00030    
                                                                                                       LM00031    
                      SAMPLE CALL IS:                                                                  LM00032    
                           ERCODE = GETENT.(PROB,PROG,ENTRY,N)                                         LM00033    
                                                                                                       LM00034    
                      IF ERCODE IS ZERO, THEN ENTRY(0) = ALPHA OF NTH SLOT                             LM00035    
                           ENTRY(1) = BETA OF NTH SLOT                                                 LM00036    
                           ENTRY(2) = DLM                                                              LM00037    
                           ENTRY(3) = DLU + AUTHNO                                                     LM00038    
                           ETC.                                                                        LM00039    
                      NON-ZERO ERROR CODES INCLUDE:                                                    LM00040    
                           1.  PROB-PROG NOT IN M.F.D.                                                 LM00041    
                           2.  NOT USED                                                                LM00042    
                           3.  I/O ERROR                                                               LM00043    
                           4.  EOF REACHED OR EXCEEDED                                                 LM00044    
                      AN 'N' OF ZERO IMPLIES THE NEXT SLOT PAST THE                                    LM00045    
                      CURRENT SLOT.  THE CURRENT SLOT IS RESET TO THE                                  LM00046    
                      FIRST SLOT EVERY TIME THE DIRECTORY                                              LM00047    
                      IS PAGED IN OR AFTER EVERY EOF.                                                  LM00048    
                                                                                                       LM00049    
                  NORMAL MODE IS INTEGER                                                          *008 LM00050    
                  BOOLEAN FIRST,READSW                                                            *009 LM00051    
                                                                                                       LM00052    
                  DIMENSION DIR(0),ATTDIR(1)                                                      *010 LM00053    
                  DIMENSION LTH(11),FPB(11),FPG(11),TIME(11),REL(11)                              *011 LM00054    
                                                                                                       LM00055    
                  VECTOR VALUES FIRST = 1B                                                        *012 LM00056    
                  VECTOR VALUES MZE = -0                                                          *013 LM00057    
                  VECTOR VALUES NSLOTS = 425                                                      *014 LM00058    
                  VECTOR VALUES MFD = $M.F.D.$,$(FILE)$                                           *015 LM00059    
                  EQUIVALENCE (FILE,MFD(1)),(ENTNUM,FNAME1)                                       *016 LM00060    
                  VECTOR VALUES UFD = $U.F.D.$                                                    *017 LM00061    
                                                                                                       LM00062    
                      SHORTEN SUBROUTINE LINKAGE, SETUP FOR SEARCH                                     LM00063    
                                                                                                       LM00064    
      GETARG      FPROBN = PB                                                                     *018 LM00065    
                  FPROBT = FPROBN                                                                 *019 LM00066    
                  FPROGN = PG                                                                     *020 LM00067    
                  FPROGT = FPROGN                                                                 *021 LM00068    
                  FNAME1 = N1                                                                     *022 LM00069    
                  FNAME2 = N2                                                                     *023 LM00070    
                  TIME = TIME + 1                                                                 *024 LM00071    
                  OLDEST = TIME                                                                   *025 LM00072    
                                                                                                       LM00073    
                      IF SEARCHING, MAKE SPECIAL CHECKS                                                LM00074    
                                                                                                       LM00075    
                  WHENEVER .NOT. READSW                                                           *026 LM00076    
                       WHENEVER (FNAME1.E.UFD) .AND. (FNAME2.E.FILE)                              *027 LM00077    
                            FNAME1 = FPROBN                                                       *028 LM00078    
                            FNAME2 = FPROGN                                                       *029 LM00079    
                            FPROBN = MFD                                                          *030 LM00080    
                            FPROGN = FILE                                                         *031 LM00081    
                       END OF CONDITIONAL                                                         *032 LM00082    
                  END OF CONDITIONAL                                                              *033 LM00083    
                                                                                                       LM00084    
                      IF FIRST CALL, SET UP WORK AREAS                                                 LM00085    
                                                                                                       LM00086    
                  WHENEVER FIRST                                                                  *034 LM00087    
                       FIRST = 0B                                                                 *035 LM00088    
                       LMAX = 7 * NSLOTS                                                          *036 LM00089    
                       NDIR = (1K5 - GETMEM.(0))/LMAX                                             *037 LM00090    
                       GETBUF.(DIR,LMAX*NDIR)                                                     *038 LM00091    
                                                                                                       LM00092    
                      CLEAR OUT ASSOCIATIVE MEMORY                                                     LM00093    
                                                                                                       LM00094    
                       THROUGH LOOP1, FOR I = 1,1,(I .G. NDIR)                                    *039 LM00095    
                            FPB(I) = 0                                                            *040 LM00096    
                            FPG(I) = 0                                                            *041 LM00097    
                            TIME(I) = 0                                                           *042 LM00098    
      LOOP1            CONTINUE                                                                   *043 LM00099    
                  END OF CONDITIONAL                                                              *044 LM00100    
                                                                                                       LM00101    
                      SEE IF DIRECTORY IS ALREADY KNOWN                                                LM00102    
                                                                                                       LM00103    
                  THROUGH LOOP2, FOR I = 1,1,(I .G. NDIR)                                         *045 LM00104    
                       WHENEVER (FPROBN.E.FPB(I)) .AND. (FPROGN.E.FPG(I))                         *046 LM00105    
                            SLOT = I                                                              *047 LM00106    
                            TRANSFER TO KNOWN                                                     *048 LM00107    
                                                                                                       LM00108    
                      KEEP TRACK OF MOST USELESS ENTRY                                                 LM00109    
                                                                                                       LM00110    
                       OR WHENEVER TIME(I) .L. OLDEST                                             *049 LM00111    
                            OLDEST = TIME(I)                                                      *050 LM00112    
                            SLOT = I                                                              *051 LM00113    
                       END OF CONDITIONAL                                                         *052 LM00114    
      LOOP2       CONTINUE                                                                        *053 LM00115    
                                                                                                       LM00116    
                      NOT KNOWN, REPLACE MOST USELESS ENTRY                                            LM00117    
                      WITH ENTRY FROM M.F.D.                                                           LM00118    
                                                                                                       LM00119    
                  ATTNAM.(ATTDIR(1)...2)                                                          *054 LM00120    
                  WHENEVER (ATTDIR(1) .NE. MFD)                                                   *055 LM00121    
                                                                                                       LM00122    
                      SPECIAL HELPFUL ACTION IF ATTACHED DIRECTORY                                     LM00123    
                      AND TARGET DIRECTORY ARE THE SAME                                                LM00124    
                                                                                                       LM00125    
                       WHENEVER (ATTDIR(1).E.FPROBN) .AND. (ATTDIR(0).E.FPROGN)                   *056 LM00126    
                            FPROBT = UFD                                                          *057 LM00127    
                            FPROGT = FILE                                                         *058 LM00128    
                            TRANSFER TO GULPIT                                                    *059 LM00129    
                       END OF CONDITIONAL                                                         *060 LM00130    
                                                                                                       LM00131    
                      NOT CURRENTLY IN M.F.D., MOVE INTO IT                                            LM00132    
                                                                                                       LM00133    
                       ATTACH.(MFD,FILE)                                                          *061 LM00134    
                       OPEN.($R$,FPROBN,FPROGN,MZE,MZE,ERR1)                                      *062 LM00135    
                                                                                                       LM00136    
                      ATTACH BACK AND CONTINUE                                                         LM00137    
                                                                                                       LM00138    
                       ATTACH.(ATTDIR(1),ATTDIR(0))                                               *063 LM00139    
                       TRANSFER TO OPENED                                                         *064 LM00140    
                                                                                                       LM00141    
                      U.F.D. NOT IN M.F.D., TOO BAD                                                    LM00142    
                                                                                                       LM00143    
      ERR1             ATTACH.(ATTDIR(1),ATTDIR(0))                                               *065 LM00144    
                       TRANSFER TO ERCOD1                                                         *066 LM00145    
                  OTHERWISE                                                                       *067 LM00146    
      GULPIT           OPEN.($R$,FPROBT,FPROGT,MZE,MZE,ERCOD1)                                    *068 LM00147    
                  END OF CONDITIONAL                                                              *069 LM00148    
                                                                                                       LM00149    
                      READ WHOLE DIRECTORY IN ONE GULP                                                 LM00150    
                                                                                                       LM00151    
      OPENED      LTH = LMAX                                                                      *070 LM00152    
                  RDFILE.(FPROBT,FPROGT,4,DIR(DIR+SLOT*LMAX)...LMAX,                              *071 LM00153    
                1      MZE,LTH,ERCOD3)                                                            *071 LM00154    
                  CLOSE.(FPROBT,FPROGT,ERCOD3)                                                    *072 LM00155    
                                                                                                       LM00156    
                      SET UP THIS ENTRY                                                                LM00157    
                                                                                                       LM00158    
                  LTH(SLOT) = LTH                                                                 *073 LM00159    
                  FPB(SLOT) = FPROBN                                                              *074 LM00160    
                  FPG(SLOT) = FPROGN                                                              *075 LM00161    
                  REL(SLOT) = - 1                                                                 *076 LM00162    
                                                                                                       LM00163    
                      DIRECTORY IS IN CORE, SCAN THROUGH IT                                            LM00164    
                                                                                                       LM00165    
      KNOWN       BASE = DIR + SLOT*LMAX                                                          *077 LM00166    
                  BOTTOM = BASE - LTH(SLOT)                                                       *078 LM00167    
                  TIME(SLOT) = TIME                                                               *079 LM00168    
                                                                                                       LM00169    
                      IF READING ENTRIES, CHECK SLOT NUMBER                                            LM00170    
                                                                                                       LM00171    
                  WHENEVER READSW                                                                 *080 LM00172    
                       WHENEVER ENTNUM .E. 0                                                      *081 LM00173    
                            REL(SLOT) = REL(SLOT) + 1                                             *082 LM00174    
                       OTHERWISE                                                                  *083 LM00175    
                            REL(SLOT) = ENTNUM - 1                                                *084 LM00176    
                       END OF CONDITIONAL                                                         *085 LM00177    
                                                                                                       LM00178    
                      GET AND VERIFY SLOT POINTER                                                      LM00179    
                                                                                                       LM00180    
                       I = BASE - REL(SLOT) * 7                                                   *086 LM00181    
                       WHENEVER I .G. BOTTOM                                                      *087 LM00182    
                            TRANSFER TO MOVE                                                      *088 LM00183    
                       OTHERWISE                                                                  *089 LM00184    
                            REL(SLOT) = -1                                                        *090 LM00185    
                            TRANSFER TO ERCOD4                                                    *091 LM00186    
                       END OF CONDITIONAL                                                         *092 LM00187    
                  END OF CONDITIONAL                                                              *093 LM00188    
                                                                                                       LM00189    
                      SEARCH THROUGH EVERY ENTRY                                                       LM00190    
                                                                                                       LM00191    
                  THROUGH LOOP4, FOR I = BASE,-7,(I .LE. BOTTOM)                                  *094 LM00192    
                       WHENEVER (DIR(I).NE.FNAME1) .OR. (DIR(I-1).NE.FNAME2),                     *095 LM00193    
                1           TRANSFER TO LOOP4                                                     *095 LM00194    
                                                                                                       LM00195    
                      VIOLA, WE HAVE FOUND IT                                                          LM00196    
                                                                                                       LM00197    
      MOVE             THROUGH LOOP3, FOR J = 0,1,(J .GE. 7)                                      *096 LM00198    
                            ENTRY(J) = DIR(I-J)                                                   *097 LM00199    
      LOOP3            CONTINUE                                                                   *098 LM00200    
                       TRANSFER TO ERCOD0                                                         *099 LM00201    
      LOOP4       CONTINUE                                                                        *100 LM00202    
                                                                                                       LM00203    
                      ENTRY IS NOT THERE, TOO BAD                                                      LM00204    
                                                                                                       LM00205    
                  TRANSFER TO ERCOD2                                                              *101 LM00206    
                                                                                                       LM00207    
                      ERROR HANDLING                                                                   LM00208    
                                                                                                       LM00209    
      ERCOD4      FUNCTION RETURN 4                                                               *102 LM00210    
                                                                                                       LM00211    
      ERCOD3      FUNCTION RETURN 3                                                               *103 LM00212    
                                                                                                       LM00213    
      ERCOD2      FUNCTION RETURN 2                                                               *104 LM00214    
                                                                                                       LM00215    
      ERCOD1      FUNCTION RETURN 1                                                               *105 LM00216    
                                                                                                       LM00217    
      ERCOD0      FUNCTION RETURN 0                                                               *106 LM00218    
                                                                                                       LM00219    
                  END OF FUNCTION                                                                 *107 LM00220    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00640 TRANSFER VECTOR LENGTH  00010 PROGRAM BEGINS    00162
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      GETENT 00171   0        SEARCH 00163   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ATTDIR 00031 A 1        ERCOD4 00020   4        FPROBT 00070   1        LOOP1  00010   4        NSLOTS 00114 A 1  
      BASE   00032   1        ERR1   00021   4        FPROGN 00071   1        LOOP2  00010   4        OLDEST 00115   1  
      BOTTOM 00033   1        FILE   00011   1        FPROGT 00072   1        LOOP3  00010   4        OPENED 00027   4  
      DIR    00034 A 1        FIRST  00035 A 2        GETARG 00022   4        LOOP4  00025   4        READSW 00116   2  
      ENTNUM 00013   1        FNAME1 00013   1        GULPIT 00023   4        LTH    00111 A 1        REL    00132 A 1  
      ERCOD0 00014   4        FNAME2 00036   1        I      00073   1        MFD    00012 A 1        SLOT   00133   1  
      ERCOD1 00015   4        FPB    00052 A 1        J      00074   1        MOVE   00026   4        TIME   00147 A 1  
      ERCOD2 00016   4        FPG    00066 A 1        KNOWN  00024   4        MZE    00112 A 1        UFD    00150 A 1  
      ERCOD3 00017   4        FPROBN 00067   1        LMAX   00075   1        NDIR   00113   1                          
0FUNCTION DICTIONARY    
      ATTACH 00000   1        ATTNAM 00001   1        CLOSE  00002   1        EXIT   00003   1        GETBUF 00004   1  
      GETMEM 00005   1        OPEN   00006   1        RDFILE 00007   1                                                  
0ABSOLUTE CONSTANTS     
 00154 +000000000003     00155 +000000000004     00161 -116060606060     00153 +000000000002     00157 +000000100000    
 00156 +000000000007     00151 +000000000000     00152 +000000000001     00160 +233000000000                            
0STATEMENT DICTIONARY   
 00014 TXL -300612000610       00015 TXL -300610000606       00016 TXL -300606000604       00017 TXL -300604000602      
 00020 TXL -300602000600       00021 TXL -300406000403       00022 TXL -300200000176       00023 TXL -300417000410      
 00024 TXL -300462000455       00025 TXL -300577000576       00026 TXL -300566000554       00027 TXL -300421000417      
0PROGRAM    
                 EXTERNAL FUNCTION (PB,PG,ENTRY,N1,N2)                              001  LM00010
                 E'O SEARCH.                                                        002  LM00011
 00162 TRA +0 02000 0 00165    00163 SXA +0 63400 2 00613    00164 TSX +0 07400 2 00613                                 
                 READSW = 0B                                                        003  LM00012
 00165 CLA +0 50000 0 00151    00166 STO +0 60100 0 00116                                                               
                 T'O GETARG                                                         004  LM00013
 00167 TRA +0 02000 0 00022                                                                                             
                 E'O GETENT.                                                        005  LM00028
 00170 TRA +0 02000 0 00173    00171 SXA +0 63400 2 00613    00172 TSX +0 07400 2 00613                                 
                 READSW = 1B                                                        006  LM00029
 00173 CLA +0 50000 0 00152    00174 STO +0 60100 0 00116                                                               
                 T'O GETARG                                                         007  LM00030
 00175 TRA +0 02000 0 00022                                                                                             
                 N'R                                                                008  LM00050
                 B'N FIRST,READSW                                                   009  LM00051
                 D'N DIR(0),ATTDIR(1)                                               010  LM00053
                 D'N LTH(11),FPB(11),FPG(11),TIME(11),REL(11)                       011  LM00054
                 V'S FIRST = 1B                                                     012  LM00056
 00035     +0 00000 0 00001                                                                                             
                 V'S MZE = -0                                                       013  LM00057
 00112     -0 00000 0 00000                                                                                             
                 V'S NSLOTS = 425                                                   014  LM00058
 00114     +0 00000 0 00651                                                                                             
                 V'S MFD = $M.F.D.$,$(FILE)$                                        015  LM00059
 00011     -3 42631 4 32534    00012     -0 43326 3 32433                                                               
                 E'E (FILE,MFD(1)),(ENTNUM,FNAME1)                                  016  LM00060
                 V'S UFD = $U.F.D.$                                                 017  LM00061
 00150     -2 43326 3 32433                                                                                             
      GETARG     FPROBN = PB                                                        018  LM00065
 00176 CLA +0 50000 0 00024    00177 STO +0 60100 0 00067                                                               
                 FPROBT = FPROBN                                                    019  LM00066
 00200 CLA +0 50000 0 00067    00201 STO +0 60100 0 00070                                                               
                 FPROGN = PG                                                        020  LM00067
 00202 CLA +0 50000 0 00024    00203 STO +0 60100 0 00071                                                               
                 FPROGT = FPROGN                                                    021  LM00068
 00204 CLA +0 50000 0 00071    00205 STO +0 60100 0 00072                                                               
                 FNAME1 = N1                                                        022  LM00069
 00206 CLA +0 50000 0 00024    00207 STO +0 60100 0 00013                                                               
                 FNAME2 = N2                                                        023  LM00070
 00210 CLA +0 50000 0 00024    00211 STO +0 60100 0 00036                                                               
                 TIME = TIME + 1                                                    024  LM00071
 00212 CLA +0 50000 0 00147    00213 ADD +0 40000 0 00152    00214 STO +0 60100 0 00147                                 
                 OLDEST = TIME                                                      025  LM00072
 00215 CLA +0 50000 0 00147    00216 STO +0 60100 0 00115                                                               
                 W'R .NOT. READSW                                                   026  LM00076
 00217 ZET +0 52000 0 00116    00220 TRA +0 02000 0 00237                                                               
                      W'R (FNAME1.E.UFD) .AND. (FNAME2.E.FILE)                      027  LM00077
 00221 CLA +0 50000 0 00036    00222 SUB +0 40200 0 00011    00223 TNZ -0 10000 0 00237    00224 CLA +0 50000 0 00013   
 00225 SUB +0 40200 0 00150    00226 TNZ -0 10000 0 00237                                                               
                           FNAME1 = FPROBN                                          028  LM00078
 00227 CLA +0 50000 0 00067    00230 STO +0 60100 0 00013                                                               
                           FNAME2 = FPROGN                                          029  LM00079
 00231 CLA +0 50000 0 00071    00232 STO +0 60100 0 00036                                                               
                           FPROBN = MFD                                             030  LM00080
 00233 CLA +0 50000 0 00012    00234 STO +0 60100 0 00067                                                               
                           FPROGN = FILE                                            031  LM00081
 00235 CLA +0 50000 0 00011    00236 STO +0 60100 0 00071                                                               
                      E'L                                                           032  LM00082
                 E'L                                                                033  LM00083
                 W'R FIRST                                                          034  LM00087
 00237 NZT -0 52000 0 00035    00240 TRA +0 02000 0 00305                                                               
                      FIRST = 0B                                                    035  LM00088
 00241 CLA +0 50000 0 00151    00242 STO +0 60100 0 00035                                                               
                      LMAX = 7 * NSLOTS                                             036  LM00089
 00243 LDQ +0 56000 0 00156    00244 MPY +0 20000 0 00114    00245 STQ -0 60000 0 00075                                 
                      NDIR = (1K5 - GETMEM.(0))/LMAX                                037  LM00090
 00246 TSX +0 07400 4 00005    00247 TXH +3 00000 0 00151    00250 CHS +0 76000 0 00002    00251 ADD +0 40000 0 00157   
 00252 LRS +0 76500 0 00043    00253 DVP +0 22100 0 00075    00254 STQ -0 60000 0 00113                                 
                      GETBUF.(DIR,LMAX*NDIR)                                        038  LM00091
 00255 LDQ +0 56000 0 00075    00256 MPY +0 20000 0 00113    00257 STQ -0 60000 0 00635    00260 TSX +0 07400 4 00004   
 00261 TXH +3 00000 0 00034    00262 TXH +3 00000 0 00635                                                               
                      T'H LOOP1, FOR I = 1,1,(I .G. NDIR)                           039  LM00095
 00263 CLA +0 50000 0 00152    00264 STO +0 60100 0 00073    00265 TRA +0 02000 0 00271    00266 CLA +0 50000 0 00073   
 00267 ADD +0 40000 0 00152    00270 STO +0 60100 0 00073    00271 CLA +0 50000 0 00073    00272 SUB +0 40200 0 00113   
 00273 TZE +0 10000 0 00275    00274 TPL +0 12000 0 00305                                                               
                           FPB(I) = 0                                               040  LM00096
 00275 LXA +0 53400 1 00073    00276 CLA +0 50000 0 00151    00277 STO +0 60100 1 00052                                 
                           FPG(I) = 0                                               041  LM00097
 00300 CLA +0 50000 0 00151    00301 STO +0 60100 1 00066                                                               
                           TIME(I) = 0                                              042  LM00098
 00302 CLA +0 50000 0 00151    00303 STO +0 60100 1 00147                                                               
      LOOP1           C'E                                                           043  LM00099
 00304 TRA +0 02000 0 00266                                                                                             
                 E'L                                                                044  LM00100
                 T'H LOOP2, FOR I = 1,1,(I .G. NDIR)                                045  LM00104
 00305 CLA +0 50000 0 00152    00306 STO +0 60100 0 00073    00307 TRA +0 02000 0 00313    00310 CLA +0 50000 0 00073   
 00311 ADD +0 40000 0 00152    00312 STO +0 60100 0 00073    00313 CLA +0 50000 0 00073    00314 SUB +0 40200 0 00113   
 00315 TZE +0 10000 0 00317    00316 TPL +0 12000 0 00345                                                               
                      W'R (FPROBN.E.FPB(I)) .AND. (FPROGN.E.FPG(I))                 046  LM00105
 00317 LXA +0 53400 2 00073    00320 CLA +0 50000 0 00071    00321 SUB +0 40200 2 00066    00322 TNZ -0 10000 0 00332   
 00323 CLA +0 50000 0 00067    00324 SUB +0 40200 2 00052    00325 TNZ -0 10000 0 00332                                 
                           SLOT = I                                                 047  LM00106
 00326 CLA +0 50000 0 00073    00327 STO +0 60100 0 00133                                                               
                           T'O KNOWN                                                048  LM00107
 00330 TRA +0 02000 0 00024                                                                                             
                      O'R TIME(I) .L. OLDEST                                        049  LM00111
 00331 TRA +0 02000 0 00344    00332 LXA +0 53400 1 00073    00333 CLA +0 50000 1 00147    00334 SUB +0 40200 0 00115   
 00335 TZE +0 10000 0 00344    00336 TPL +0 12000 0 00344                                                               
                           OLDEST = TIME(I)                                         050  LM00112
 00337 LXA +0 53400 2 00073    00340 CLA +0 50000 2 00147    00341 STO +0 60100 0 00115                                 
                           SLOT = I                                                 051  LM00113
 00342 CLA +0 50000 0 00073    00343 STO +0 60100 0 00133                                                               
                      E'L                                                           052  LM00114
      LOOP2      C'E                                                                053  LM00115
 00344 TRA +0 02000 0 00310                                                                                             
                 ATTNAM.(ATTDIR(1)...2)                                             054  LM00120
 00345 TSX +0 07400 4 00001    00346 TIX +2 00153 0 00030                                                               
                 W'R (ATTDIR(1) .NE. MFD)                                           055  LM00121
 00347 CLA +0 50000 0 00030    00350 SUB +0 40200 0 00012    00351 TZE +0 10000 0 00410                                 
                      W'R (ATTDIR(1).E.FPROBN) .AND. (ATTDIR(0).E.FPROGN)           056  LM00126
 00352 CLA +0 50000 0 00031    00353 SUB +0 40200 0 00071    00354 TNZ -0 10000 0 00365    00355 CLA +0 50000 0 00030   
 00356 SUB +0 40200 0 00067    00357 TNZ -0 10000 0 00365                                                               
                           FPROBT = UFD                                             057  LM00127
 00360 CLA +0 50000 0 00150    00361 STO +0 60100 0 00070                                                               
                           FPROGT = FILE                                            058  LM00128
 00362 CLA +0 50000 0 00011    00363 STO +0 60100 0 00072                                                               
                           T'O GULPIT                                               059  LM00129
 00364 TRA +0 02000 0 00023                                                                                             
                      E'L                                                           060  LM00130
                      ATTACH.(MFD,FILE)                                             061  LM00134
 00365 TSX +0 07400 4 00000    00366 TXH +3 00000 0 00012    00367 TXH +3 00000 0 00011                                 
                      OPEN.($R$,FPROBN,FPROGN,MZE,MZE,ERR1)                         062  LM00135
 00370 TSX +0 07400 4 00006    00371 TXH +3 00000 0 00161    00372 TXH +3 00000 0 00067    00373 TXH +3 00000 0 00071   
 00374 TXH +3 00000 0 00112    00375 TXH +3 00000 0 00112    00376 TXH +3 00000 0 00021                                 
                      ATTACH.(ATTDIR(1),ATTDIR(0))                                  063  LM00139
 00377 TSX +0 07400 4 00000    00400 TXH +3 00000 0 00030    00401 TXH +3 00000 0 00031                                 
                      T'O OPENED                                                    064  LM00140
 00402 TRA +0 02000 0 00027                                                                                             
      ERR1            ATTACH.(ATTDIR(1),ATTDIR(0))                                  065  LM00144
 00403 TSX +0 07400 4 00000    00404 TXH +3 00000 0 00030    00405 TXH +3 00000 0 00031                                 
                      T'O ERCOD1                                                    066  LM00145
 00406 TRA +0 02000 0 00015                                                                                             
                 O'E                                                                067  LM00146
 00407 TRA +0 02000 0 00417                                                                                             
      GULPIT          OPEN.($R$,FPROBT,FPROGT,MZE,MZE,ERCOD1)                       068  LM00147
 00410 TSX +0 07400 4 00006    00411 TXH +3 00000 0 00161    00412 TXH +3 00000 0 00070    00413 TXH +3 00000 0 00072   
 00414 TXH +3 00000 0 00112    00415 TXH +3 00000 0 00112    00416 TXH +3 00000 0 00015                                 
                 E'L                                                                069  LM00148
      OPENED     LTH = LMAX                                                         070  LM00152
 00417 CLA +0 50000 0 00075    00420 STO +0 60100 0 00111                                                               
                 RDFILE.(FPROBT,FPROGT,4,DIR(DIR+SLOT*LMAX)...LMAX,                 071  LM00153
                1     MZE,LTH,ERCOD3)                                               071  LM00154
 00421 LDQ +0 56000 0 00133    00422 MPY +0 20000 0 00075    00423 XCA +0 13100 0 00000    00424 ADD +0 40000 0 00034   
 00425 SUB +0 40200 0 00426    00426 TXH +3 00000 0 00034    00427 STA +0 62100 0 00434    00430 TSX +0 07400 4 00007   
 00431 TXH +3 00000 0 00070    00432 TXH +3 00000 0 00072    00433 TXH +3 00000 0 00155    00434 TIX +2 00075 0 00000   
 00435 TXH +3 00000 0 00112    00436 TXH +3 00000 0 00111    00437 TXH +3 00000 0 00017                                 
                 CLOSE.(FPROBT,FPROGT,ERCOD3)                                       072  LM00155
 00440 TSX +0 07400 4 00002    00441 TXH +3 00000 0 00070    00442 TXH +3 00000 0 00072    00443 TXH +3 00000 0 00017   
                 LTH(SLOT) = LTH                                                    073  LM00159
 00444 LXA +0 53400 1 00133    00445 CLA +0 50000 0 00111    00446 STO +0 60100 1 00111                                 
                 FPB(SLOT) = FPROBN                                                 074  LM00160
 00447 CLA +0 50000 0 00067    00450 STO +0 60100 1 00052                                                               
                 FPG(SLOT) = FPROGN                                                 075  LM00161
 00451 CLA +0 50000 0 00071    00452 STO +0 60100 1 00066                                                               
                 REL(SLOT) = - 1                                                    076  LM00162
 00453 CLS +0 50200 0 00152    00454 STO +0 60100 1 00132                                                               
      KNOWN      BASE = DIR + SLOT*LMAX                                             077  LM00166
 00455 LDQ +0 56000 0 00133    00456 MPY +0 20000 0 00075    00457 XCA +0 13100 0 00000    00460 ADD +0 40000 0 00034   
 00461 STO +0 60100 0 00032                                                                                             
                 BOTTOM = BASE - LTH(SLOT)                                          078  LM00167
 00462 LXA +0 53400 2 00133    00463 CLA +0 50000 0 00032    00464 SUB +0 40200 2 00111    00465 STO +0 60100 0 00033   
                 TIME(SLOT) = TIME                                                  079  LM00168
 00466 LXA +0 53400 1 00133    00467 CLA +0 50000 0 00147    00470 STO +0 60100 1 00147                                 
                 W'R READSW                                                         080  LM00172
 00471 NZT -0 52000 0 00116    00472 TRA +0 02000 0 00527                                                               
                      W'R ENTNUM .E. 0                                              081  LM00173
 00473 CLA +0 50000 0 00013    00474 SUB +0 40200 0 00151    00475 TNZ -0 10000 0 00502                                 
                           REL(SLOT) = REL(SLOT) + 1                                082  LM00174
 00476 CLA +0 50000 1 00132    00477 ADD +0 40000 0 00152    00500 STO +0 60100 1 00132                                 
                      O'E                                                           083  LM00175
 00501 TRA +0 02000 0 00506                                                                                             
                           REL(SLOT) = ENTNUM - 1                                   084  LM00176
 00502 CLA +0 50000 0 00013    00503 SUB +0 40200 0 00152    00504 LXA +0 53400 1 00133    00505 STO +0 60100 1 00132   
                      E'L                                                           085  LM00177
                      I = BASE - REL(SLOT) * 7                                      086  LM00181
 00506 LXA +0 53400 1 00133    00507 LDQ +0 56000 1 00132    00510 MPY +0 20000 0 00156    00511 XCA +0 13100 0 00000   
 00512 CHS +0 76000 0 00002    00513 ADD +0 40000 0 00032    00514 STO +0 60100 0 00073                                 
                      W'R I .G. BOTTOM                                              087  LM00182
 00515 CLA +0 50000 0 00073    00516 SUB +0 40200 0 00033    00517 TZE +0 10000 0 00523    00520 TMI -0 12000 0 00523   
                           T'O MOVE                                                 088  LM00183
 00521 TRA +0 02000 0 00026                                                                                             
                      O'E                                                           089  LM00184
 00522 TRA +0 02000 0 00527                                                                                             
                           REL(SLOT) = -1                                           090  LM00185
 00523 CLS +0 50200 0 00152    00524 LXA +0 53400 1 00133    00525 STO +0 60100 1 00132                                 
                           T'O ERCOD4                                               091  LM00186
 00526 TRA +0 02000 0 00020                                                                                             
                      E'L                                                           092  LM00187
                 E'L                                                                093  LM00188
                 T'H LOOP4, FOR I = BASE,-7,(I .LE. BOTTOM)                         094  LM00192
 00527 CLA +0 50000 0 00032    00530 STO +0 60100 0 00073    00531 TRA +0 02000 0 00535    00532 CLS +0 50200 0 00156   
 00533 ADD +0 40000 0 00073    00534 STO +0 60100 0 00073    00535 CLA +0 50000 0 00073    00536 SUB +0 40200 0 00033   
 00537 TZE +0 10000 0 00577    00540 TMI -0 12000 0 00577                                                               
                      W'R (DIR(I).NE.FNAME1) .OR. (DIR(I-1).NE.FNAME2),             095  LM00193
                1          T'O LOOP4                                                095  LM00194
 00541 CLA +0 50000 0 00073    00542 SUB +0 40200 0 00152    00543 PAX +0 73400 1 00000    00544 CLA +0 50000 1 00034   
 00545 SUB +0 40200 0 00036    00546 TNZ -0 10000 0 00553    00547 LXA +0 53400 1 00073    00550 CLA +0 50000 1 00034   
 00551 SUB +0 40200 0 00013    00552 TZE +0 10000 0 00554    00553 TRA +0 02000 0 00025                                 
      MOVE            T'H LOOP3, FOR J = 0,1,(J .GE. 7)                             096  LM00198
 00554 CLA +0 50000 0 00151    00555 STO +0 60100 0 00074    00556 TRA +0 02000 0 00562    00557 CLA +0 50000 0 00074   
 00560 ADD +0 40000 0 00152    00561 STO +0 60100 0 00074    00562 CLA +0 50000 0 00074    00563 SUB +0 40200 0 00156   
 00564 TZE +0 10000 0 00575    00565 TPL +0 12000 0 00575                                                               
                           ENTRY(J) = DIR(I-J)                                      097  LM00199
 00566 CLA +0 50000 0 00073    00567 SUB +0 40200 0 00074    00570 LXA +0 53400 1 00074    00571 PAX +0 73400 2 00000   
 00572 CLA +0 50000 2 00034    00573 STO +0 60100 1 00024                                                               
      LOOP3           C'E                                                           098  LM00200
 00574 TRA +0 02000 0 00557                                                                                             
                      T'O ERCOD0                                                    099  LM00201
 00575 TRA +0 02000 0 00014                                                                                             
      LOOP4      C'E                                                                100  LM00202
 00576 TRA +0 02000 0 00532                                                                                             
                 T'O ERCOD2                                                         101  LM00206
 00577 TRA +0 02000 0 00016                                                                                             
      ERCOD4     F'N 4                                                              102  LM00210
 00600 CLA +0 50000 0 00155    00601 TRA +0 02000 0 00631                                                               
      ERCOD3     F'N 3                                                              103  LM00212
 00602 CLA +0 50000 0 00154    00603 TRA +0 02000 0 00631                                                               
      ERCOD2     F'N 2                                                              104  LM00214
 00604 CLA +0 50000 0 00153    00605 TRA +0 02000 0 00631                                                               
      ERCOD1     F'N 1                                                              105  LM00216
 00606 CLA +0 50000 0 00152    00607 TRA +0 02000 0 00631                                                               
      ERCOD0     F'N 0                                                              106  LM00218
 00610 CLA +0 50000 0 00151    00611 TRA +0 02000 0 00631                                                               
                 E'N                                                                107  LM00220
 00612 TSX +0 07400 4 00003    00613 TXH +3 00000 0 00000    00614 SXD -0 63400 1 00613    00615 SXA +0 63400 4 00631   
 00616 CLA +0 50000 4 00001    00617 STA +0 62100 0 00176    00620 CLA +0 50000 4 00002    00621 STA +0 62100 0 00202   
 00622 CLA +0 50000 4 00003    00623 STA +0 62100 0 00573    00624 CLA +0 50000 4 00004    00625 STA +0 62100 0 00206   
 00626 CLA +0 50000 4 00005    00627 STA +0 62100 0 00210    00630 TRA +0 02000 2 00001    00631 AXT +0 77400 4 00000   
 00632 LXA +0 53400 2 00613    00633 LXD -0 53400 1 00613    00634 TRA +0 02000 4 00001                                 
1            ROUTINE TO GET A BUFFER AREA BY EXPANDING MEMORY BOUND                              PAGE 1     
                           D.R. WIDRIG  JUNE 1966                                   
                  
                       00004         ENTRY   GETBUF        GET A BUFFER 
                  
                                     EXTERN  GETMEM,SETMEM  
                  
                                             CALLING SEQUENCE IS..  GETBUF.(BUFF,N) 
                                             UPON RETURN, THE CALLER MAY USE THE    
                                             AREA BY STATEMENTS OF THE FORM..  X = BUFF(BUFF+I) 
                                             WHERE THE I'TH ELEMENT IS INTENDED     
                  
        TRANSFER VECTOR 
      00000  272563442544     GETMEM
      00001  622563442544     SETMEM
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  272563226426     
                  
      00004  0636 00 4 00024  GETBUF SCA     X4,4          SAVE LINKAGE 
      00005  0634 00 1 00025         SXA     X1,1          AND IR1
      00006  0535 00 1 00024         LAC     X4,1          SET IR1 TO IR4 (THE CALLER)    
                  
      00007  0074 00 4 00000         TSX     GETMEM,4      GET CURRENT MEMORY BOUND 
      00010  0601 00 0 00027         STO     OLDMEM        SAVE OLD MEMORY BOUND    
      00011  0400 60 1 00002         ADD*    2,1           ALLOW FOR USER'S DEMAND  
      00012  0734 00 4 00000         PAX     0,4           SAVE COMPLEMENT OF THIS VALUE  
      00013 -0636 00 4 00020         SCD     TXI,4         ..     
      00014  0400 00 0 00030         ADD     =1            ALLOW FOR BUFF(0)  
      00015  0074 00 4 00001         TSX     SETMEM,4      RAISE THE ROOF     
                  
      00016 -0500 00 1 00001         CAL     1,1           GET BASE POINTER   
      00017  0734 00 4 00000         PAX     0,4           ..     
      00020  1 00000 4 00021  TXI    TXI     *+1,4,**      DECREMENT BY AMOUNT OF STORAGE 
      00021  0754 00 4 00000         PXA     0,4           SET THIS VALUE IN USER'S PROGRAM     
      00022  0602 60 1 00001         SLW*    1,1           ..     
      00023  0500 00 0 00027         CLA     OLDMEM        RETURN OLD MEMORY BOUND  
                  
      00024 -0774 00 4 00000  X4     AXC     **,4          RESTORE LINKAGE    
      00025  0774 00 1 00000  X1     AXT     **,1          AND IR1
      00026  0020 00 4 00003         TRA     3,4           RETURN 
                  
      00027                   OLDMEM BSS     1             STORAGE FOR OLD MEMORY BOUND   
                  
                                     END  
                  
        LITERALS  
      00030  000000000001     
1            ROUTINE TO GET A BUFFER AREA BY EXPANDING MEMORY BOUND                              PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         31 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         25     X1     5
         24     X4     4,    6
         20    TXI    13
          4 GETBUF     0
          0 GETMEM     7
         27 OLDMEM    10,   23
          1 SETMEM    15
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




LMSORT   BCD 09/20/68 0220.1   11042         00000    
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 1     
                  
                              *      MACROS     
                  
                  
                                     INSERT  MRC1A1   
                              OPEN   MACRO   NAME1,NAME2,STATUS,IOERR,ERCODE  
                                     TSX     $OPEN,4  
                                     PTH     =H'STATUS
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     PTH     =0 
                                     PTH     =2 
                                     IRP     IOERR    
                                     PTH     IOERR    
                                     PTH     ERCODE   
                                     IRP  
                              OPEN   END  
                              *     
                              BUFFER MACRO   NAME1,NAME2,LOC
                                     TSX     $BUFFER,4
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     PTH     LOC,,432 
                              BUFFER END  
                              *     
                              RDFILE MACRO   NM1,NM2,RELLOC,PTHADD,BEGLOC,LEN,EOF,EOFCT,IOERR,ERCODE  
                                     TSX     $RDFILE,4
                                     PTH     NM1
                                     PTH     NM2
                                     PTH     RELLOC   
                              PTHADD PTH     BEGLOC,,LEN    
                                     PTH     EOF
                                     PTH     EOFCT    
                                     IRP     IOERR    
                                     PTH     IOERR    
                                     PTH     ERCODE   
                                     IRP  
                              RDFILE END  
                              *     
                              WRFILE MACRO   NAME1,NAME2,RELLOC,PTHADD,BEGLOC,LENGTH,IOERR,ERCODE     
                                     TSX     $WRFILE,4
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     PTH     RELLOC   
                              PTHADD PTH     BEGLOC,,LENGTH 
                                     PTH     =-0
                                     PTH     =-0
                                     IRP     IOERR    
                                     PTH     IOERR    
                                     PTH     ERCODE   
                                     IRP  
                              WRFILE END  
                              *     
                              RDWAIT MACRO   NM1,NM2,RELLOC,PTHADD,BEGLOC,LEN,EOF,EOFCT,IOERR,ERCODE  
                                     TSX     $RDWAIT,4
                                     PTH     NM1
                                     PTH     NM2
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 2     
                  
                                     PTH     RELLOC   
                              PTHADD PTH     BEGLOC,,LEN    
                                     PTH     EOF
                                     PTH     EOFCT    
                                     IRP     IOERR    
                                     PTH     IOERR    
                                     PTH     ERCODE   
                                     IRP  
                              RDWAIT END  
                              *     
                              WRWAIT MACRO   NAME1,NAME2,RELLOC,PTHADD,BEGLOC,LENGTH,IOERR,ERCODE     
                                     TSX     $WRWAIT,4
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     PTH     RELLOC   
                              PTHADD PTH     BEGLOC,,LENGTH 
                                     PTH     =-0
                                     PTH     =-0
                                     IRP     IOERR    
                                     PTH     IOERR    
                                     PTH     ERCODE   
                                     IRP  
                              WRWAIT END  
                              *     
                              FWAIT  MACRO   NAME1,NAME2    
                                     TSX     $FWAIT,4 
                                     PTH     NAME1    
                                     PTH     NAME2    
                              FWAIT  END  
                              *     
                              CLOSE  MACRO   NAME1,NAME2,IOERR,ERCODE   
                                     TSX     $CLOSE,4 
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     IRP     IOERR    
                                     PTH     IOERR    
                                     PTH     ERCODE   
                                     IRP  
                              CLOSE  END  
                              *     
                              DELFIL MACRO   NAME1,NAME2,IOERR,ERCODE   
                                     TSX     $DELFIL,4
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     IRP     IOERR    
                                     PTH     IOERR    
                                     PTH     ERCODE   
                                     IRP  
                              DELFIL END  
                              *     
                              CHFILE MACRO   OLDNM1,OLDNM2,NEWMOD,NEWNM1,NEWNM2,IOERR,ERCODE    
                                     TSX     $CHFILE,4
                                     PTH     OLDNM1   
                                     PTH     OLDNM2   
                                     PTH     NEWMOD   
                                     PTH     NEWNM1   
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 3     
                  
                                     PTH     NEWNM2   
                                     IRP     IOERR    
                                     PTH     IOERR    
                                     PTH     ERCODE   
                                     IRP  
                              CHFILE END  
                              *     
                              PRCOMT MACRO   N,MESS   
                                     TSX     $.PCOMT,4
                                     PTH     N  
                                     BCI     N,MESS   
                              PRCOMT END  
                              *     
                              *     
                              GETCOM MACRO   N,NOCOM,COM    
                                     TSX     $GETCOM,4
                                     PZE     N  
                                     LAS     =O777777777777 
                                     TRA     NOCOM    
                                     TRA     NOCOM    
                                     SLW     COM
                              GETCOM END  
                              *     
                  
                              TIMER  MACRO   MXTIME   
                                     TSX     $TIMER,4 
                                     PTH     *+3
                                     PZE     *+3
                                     TRA     *+32     
                                     PZE     MXTIME*60
                                     TSX     $JOBTM,4 
                                     PTH     ..TIME   
                                     LDQ     ..TIME   
                                     ZAC  
                                     DVP     =6 
                                     STQ     ..TIME   
                                     TSX     $DERBC,4 
                                     PZE     ..TIME   
                                     LGR     6  
                                     ALS     6  
                                     ORA     =H00000. 
                                     LGL     6  
                                     SLW     ..TIME   
                                     TSX     $BZEL,4  
                                     PZE     ..TIME   
                                     STO     ..TIME   
                                     TSX     $WRFLXA,4
                                     PZE     ..TIME,,1
                                     PRCOMT  5,( SECONDS HAVE ELAPSED.) 
                                     TSX     $TIMER,4 
                                     PTH     *+3
                                     PZE     *-27     
                                     TRA     $RSTRTN  
                                     PZE     MXTIME*60
                              TIMER  END  
                              *     
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 4     
                  
                                     INSERT  MRC2A1   
                              *     
                              SAVEX  MACRO   X  
                                     SXA     X'1,1    
                                     SXA     X'2,2    
                                     SXA     X'3,3    
                                     SXA     X'4,4    
                                     SXA     X'5,5    
                                     SXA     X'6,6    
                                     SXA     X'7,7    
                              SAVEX  END  
                              *     
                              RESETX MACRO   X1,X2,X3,X4,X5,X6,X7 
                              X1     AXT     **,1     
                              X2     AXT     **,2     
                              X3     AXT     **,3     
                              X4     AXT     **,4     
                              X5     AXT     **,5     
                              X6     AXT     **,6     
                              X7     AXT     **,7     
                              RESETX END  
                              *     
                              TRFILE MACRO   NAME1,NAME2,RELLOC,IOERR,ERCODE  
                                     TSX     $TRFILE,4
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     PTH     RELLOC   
                                     IRP     IOERR    
                                     PTH     IOERR    
                                     PTH     ERCODE   
                                     IRP  
                              TRFILE END  
                              *     
                              WRFLX  MACRO   LOC,N,A  
                                     TSX     $WRFLX'A',4    
                                     PTH     LOC,,N   
                              WRFLX  END  
                              *     
                              FSTATE MACRO   NAME1,NAME2,RESULT,IOERR,ERCODE  
                                     TSX     $FSTATE,4
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     PTH     RESULT,,8
                                     IRP     IOERR    
                                     PTH     IOERR    
                                     PTH     ERCODE   
                                     IRP  
                              FSTATE END  
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 5     
                  
                              *      MAIN PROGRAM     
                  
                  
                  
        TRANSFER VECTOR 
      00000  272563234644     GETCOM
      00001  464725456060     OPEN  
      00002  226426262551     BUFFER
      00003  266263216325     FSTATE
      00004  233026314325     CHFILE
      00005  242543263143     DELFIL
      00006  512466213163     RDWAIT
      00007  234346622560     CLOSE 
      00010  242543256325     DELETE
      00011  233045234644     CHNCOM
      00012  334723464463     .PCOMT
      00013  475145632551     PRNTER
      00014  266621316360     FWAIT 
      00015  665126314325     WRFILE
      00016  665166213163     WRWAIT
                  
      00017  0760 00 0 00016         LMTM 
      00020                          GETCOM  1,NMERR,NAME1  
      00020  0074 00 4 00000         TSX     $GETCOM,4                                                        .001
      00021  0 00000 0 00001         PZE     1                                                                .001
      00022 -0340 00 0 66675         LAS     =O777777777777                                                   .001
      00023  0020 00 0 00176         TRA     NMERR                                                            .001
      00024  0020 00 0 00176         TRA     NMERR                                                            .001
      00025  0602 00 0 03464         SLW     NAME1                                                            .001
      00026                          GETCOM  2,NMERR,NAME2  
      00026  0074 00 4 00000         TSX     $GETCOM,4                                                        .001
      00027  0 00000 0 00002         PZE     2                                                                .001
      00030 -0340 00 0 66675         LAS     =O777777777777                                                   .001
      00031  0020 00 0 00176         TRA     NMERR                                                            .001
      00032  0020 00 0 00176         TRA     NMERR                                                            .001
      00033  0602 00 0 03465         SLW     NAME2                                                            .001
      00034                          GETCOM  3,NMERR,NAME3  
      00034  0074 00 4 00000         TSX     $GETCOM,4                                                        .001
      00035  0 00000 0 00003         PZE     3                                                                .001
      00036 -0340 00 0 66675         LAS     =O777777777777                                                   .001
      00037  0020 00 0 00176         TRA     NMERR                                                            .001
      00040  0020 00 0 00176         TRA     NMERR                                                            .001
      00041  0602 00 0 03466         SLW     NAME3                                                            .001
      00042                          GETCOM  4,NMERR,NAME4  
      00042  0074 00 4 00000         TSX     $GETCOM,4                                                        .001
      00043  0 00000 0 00004         PZE     4                                                                .001
      00044 -0340 00 0 66675         LAS     =O777777777777                                                   .001
      00045  0020 00 0 00176         TRA     NMERR                                                            .001
      00046  0020 00 0 00176         TRA     NMERR                                                            .001
      00047  0602 00 0 03467         SLW     NAME4                                                            .001
      00050                          OPEN    NAME1,NAME2,R  
      00050  0074 00 4 00001         TSX     $OPEN,4                                                          .001
      00051  3 00000 0 66670         PTH     =HR                                                              .001
      00052  3 00000 0 03464         PTH     NAME1                                                            .001
      00053  3 00000 0 03465         PTH     NAME2                                                            .001
      00054  3 00000 0 66656         PTH     =0                                                               .001
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 6     
                  
      00055  3 00000 0 66660         PTH     =2                                                               .001
      00056                          BUFFER  NAME1,NAME2,BUFER1   
      00056  0074 00 4 00002         TSX     $BUFFER,4                                                        .001
      00057  3 00000 0 03464         PTH     NAME1                                                            .001
      00060  3 00000 0 03465         PTH     NAME2                                                            .001
      00061  3 00660 0 01041         PTH     BUFER1,,432                                                      .001
      00062                          FSTATE  SORT2,FILEA,A,FERR1,CODE   
      00062  0074 00 4 00003         TSX     $FSTATE,4                                                        .001
      00063  3 00000 0 03470         PTH     SORT2                                                            .001
      00064  3 00000 0 03471         PTH     FILEA                                                            .001
      00065  3 00010 0 03474         PTH     A,,8                                                             .001
      00066  3 00000 0 00221         PTH     FERR1                                                            .001
      00067  3 00000 0 03473         PTH     CODE                                                             .001
      00070  0500 00 0 03475         CLA     A+1
      00071 -0120 00 0 00243         TMI     LINK     
      00072  0100 00 0 00101         TZE     OK 
      00073                          CHFILE  SORT2,FILEA,=0,=-0,=-0     
      00073  0074 00 4 00004         TSX     $CHFILE,4                                                        .001
      00074  3 00000 0 03470         PTH     SORT2                                                            .001
      00075  3 00000 0 03471         PTH     FILEA                                                            .001
      00076  3 00000 0 66656         PTH     =0                                                               .001
      00077  3 00000 0 66666         PTH     =-0                                                              .001
      00100  3 00000 0 66666         PTH     =-0                                                              .001
      00101                   OK     DELFIL  SORT2,FILEA    
      00101  0074 00 4 00005         TSX     $DELFIL,4                                                        .001
      00102  3 00000 0 03470         PTH     SORT2                                                            .001
      00103  3 00000 0 03471         PTH     FILEA                                                            .001
      00104                   ERRIN  FSTATE  SORT2,FILEB,A,FERR2,CODE   
      00104  0074 00 4 00003         TSX     $FSTATE,4                                                        .001
      00105  3 00000 0 03470         PTH     SORT2                                                            .001
      00106  3 00000 0 03472         PTH     FILEB                                                            .001
      00107  3 00010 0 03474         PTH     A,,8                                                             .001
      00110  3 00000 0 00231         PTH     FERR2                                                            .001
      00111  3 00000 0 03473         PTH     CODE                                                             .001
      00112  0500 00 0 03475         CLA     A+1
      00113 -0120 00 0 00254         TMI     LINK2    
      00114  0100 00 0 00123         TZE     OK2
      00115                          CHFILE  SORT2,FILEB,=0,=-0,=-0     
      00115  0074 00 4 00004         TSX     $CHFILE,4                                                        .001
      00116  3 00000 0 03470         PTH     SORT2                                                            .001
      00117  3 00000 0 03472         PTH     FILEB                                                            .001
      00120  3 00000 0 66656         PTH     =0                                                               .001
      00121  3 00000 0 66666         PTH     =-0                                                              .001
      00122  3 00000 0 66666         PTH     =-0                                                              .001
      00123                   OK2    DELFIL  SORT2,FILEB    
      00123  0074 00 4 00005         TSX     $DELFIL,4                                                        .001
      00124  3 00000 0 03470         PTH     SORT2                                                            .001
      00125  3 00000 0 03472         PTH     FILEB                                                            .001
                       41600  IN1LEN EQU     40*432   
      00126                   LOOP1  RDWAIT  NAME1,NAME2,PNTR1,,INPUT1,IN1LEN,EOF1,LASLEN 
      00126  0074 00 4 00006         TSX     $RDWAIT,4                                                        .001
      00127  3 00000 0 03464         PTH     NAME1                                                            .001
      00130  3 00000 0 03465         PTH     NAME2                                                            .001
      00131  3 00000 0 03462         PTH     PNTR1                                                            .001
      00132  3 41600 0 03504         PTH     INPUT1,,IN1LEN                                                   .001
      00133  3 00000 0 00143         PTH     EOF1                                                             .001
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 7     
                  
      00134  3 00000 0 54773         PTH     LASLEN                                                           .001
      00135 -0500 00 0 03462         CAL     PNTR1    
      00136  0361 00 0 66665         ACL     =16848   
      00137  0602 00 0 03462         SLW     PNTR1    
      00140  0074 00 4 00666         TSX     SORT,4   
      00141  0074 00 4 00265         TSX     MERGIN,4 
      00142  0020 00 0 00126         TRA     LOOP1    
      00143 -0500 00 0 54773  EOF1   CAL     LASLEN   
      00144  0100 00 0 00212         TZE     RETZE    
      00145  0361 00 0 54766         ACL     IN1LOC   
      00146  0737 00 1 00000         PAC     ,1 
      00147 -0500 00 0 66675         CAL     =O777777777777 
      00150  0602 00 1 00000         SLW     0,1
      00151  0020 00 0 00154         TRA     *+3
      00152  0634 00 4 01037         SXA     ENDM,4   
      00153  0020 00 0 00677         TRA     NOSET    
      00154  0074 00 4 00152         TSX     *-2,4    
      00155  0074 00 4 00265         TSX     MERGIN,4 
      00156                   RETURN CLOSE   (=H   ALL),=-0 
      00156  0074 00 4 00007         TSX     $CLOSE,4                                                         .001
      00157  3 00000 0 66672         PTH     =H   ALL                                                         .001
      00160  3 00000 0 66666         PTH     =-0                                                              .001
      00161  0074 00 4 00010         TSX     $DELETE,4
      00162  3 00000 0 03466         PTH     NAME3    
      00163  3 00000 0 03467         PTH     NAME4    
      00164  3 00000 0 66657         PTH     =1 
      00165  3 00000 0 00174         PTH     EXIT     
      00166                          CHFILE  SORT2,FILEA,=0,NAME3,NAME4 
      00166  0074 00 4 00004         TSX     $CHFILE,4                                                        .001
      00167  3 00000 0 03470         PTH     SORT2                                                            .001
      00170  3 00000 0 03471         PTH     FILEA                                                            .001
      00171  3 00000 0 66656         PTH     =0                                                               .001
      00172  3 00000 0 03466         PTH     NAME3                                                            .001
      00173  3 00000 0 03467         PTH     NAME4                                                            .001
      00174  0074 00 4 00011  EXIT   TSX     $CHNCOM,4
      00175  0 00000 0 66657         PZE     =1 
      00176                   NMERR  PRCOMT 9,(COMMAND FORMAT IS R LMSORT NAME1 NAME2 NAME3 NAME4)    
      00176  0074 00 4 00012         TSX     $.PCOMT,4                                                        .001
      00177  3 00000 0 00011         PTH     9                                                                .001
      00200  234644442145            BCI     9,COMMAND FORMAT IS R LMSORT NAME1 NAME2 NAME3 NAME4             .001
      00201  246026465144     
      00202  216360316260     
      00203  516043446246     
      00204  516360452144     
      00205  250160452144     
      00206  250260452144     
      00207  250360452144     
      00210  250460606060     
      00211  0020 00 0 00174         TRA     EXIT     
      00212 -0500 00 0 03462  RETZE  CAL     PNTR1    
      00213 -0340 00 0 66657         LAS     =1 
      00214  0020 00 0 00156         TRA     RETURN   
      00215                          CLOSE   NAME1,NAME2    
      00215  0074 00 4 00007         TSX     $CLOSE,4                                                         .001
      00216  3 00000 0 03464         PTH     NAME1                                                            .001
      00217  3 00000 0 03465         PTH     NAME2                                                            .001
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 8     
                  
      00220  0020 00 0 00174         TRA     EXIT     
      00221 -0500 00 0 03473  FERR1  CAL     CODE     
      00222 -0340 00 0 66662         LAS     =4 
      00223  0020 00 0 00241         TRA     ERR
      00224  0020 00 0 00243         TRA     LINK     
      00225 -0340 00 0 66661         LAS     =3 
      00226  0 00000 0 00000         PZE  
      00227  0020 00 0 00104         TRA     ERRIN    
      00230  0020 00 0 00241         TRA     ERR
      00231 -0500 00 0 03473  FERR2  CAL     CODE     
      00232 -0340 00 0 66662         LAS     =4 
      00233  0020 00 0 00241         TRA     ERR
      00234  0020 00 0 00254         TRA     LINK2    
      00235 -0340 00 0 66661         LAS     =3 
      00236  0 00000 0 00000         PZE  
      00237  0020 00 0 00126         TRA     LOOP1    
      00240  0020 00 0 00241         TRA     ERR
      00241  0074 00 4 00013  ERR    TSX     $PRNTER,4
      00242  0020 00 0 00174         TRA     EXIT     
      00243  0074 00 4 00012  LINK   TSX     $.PCOMT,4
      00244  3 00000 0 00006         PTH     6  
      00245  464324602631            BCI     6,OLD FILE (SORT2 FILE1) IS LINKED     
      00246  432560746246     
      00247  516302602631     
      00250  432501346031     
      00251  626043314542     
      00252  252460606060     
      00253  0020 00 0 00174         TRA     EXIT     
      00254  0074 00 4 00012  LINK2  TSX     $.PCOMT,4
      00255  3 00000 0 00006         PTH     6  
      00256  464324602631            BCI     6,OLD FILE (SORT2 FILE2) IS LINKED     
      00257  432560746246     
      00260  516302602631     
      00261  432502346031     
      00262  626043314542     
      00263  252460606060     
      00264  0020 00 0 00174         TRA     EXIT     
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 9     
                  
                              *      INPUT SETUP AND CALLER FOR MERGE   
                  
                  
      00265  0634 00 4 00431  MERGIN SXA     MIX4,4   
      00266                          OPEN    SORT2,FILEA,RW 
      00266  0074 00 4 00001         TSX     $OPEN,4                                                          .001
      00267  3 00000 0 66671         PTH     =HRW                                                             .001
      00270  3 00000 0 03470         PTH     SORT2                                                            .001
      00271  3 00000 0 03471         PTH     FILEA                                                            .001
      00272  3 00000 0 66656         PTH     =0                                                               .001
      00273  3 00000 0 66660         PTH     =2                                                               .001
      00274                          BUFFER  SORT2,FILEA,BUFER2   
      00274  0074 00 4 00002         TSX     $BUFFER,4                                                        .001
      00275  3 00000 0 03470         PTH     SORT2                                                            .001
      00276  3 00000 0 03471         PTH     FILEA                                                            .001
      00277  3 00660 0 01721         PTH     BUFER2,,432                                                      .001
      00300                          OPEN    SORT2,FILEB,W  
      00300  0074 00 4 00001         TSX     $OPEN,4                                                          .001
      00301  3 00000 0 66673         PTH     =HW                                                              .001
      00302  3 00000 0 03470         PTH     SORT2                                                            .001
      00303  3 00000 0 03472         PTH     FILEB                                                            .001
      00304  3 00000 0 66656         PTH     =0                                                               .001
      00305  3 00000 0 66660         PTH     =2                                                               .001
      00306                          BUFFER  SORT2,FILEB,BUFER3   
      00306  0074 00 4 00002         TSX     $BUFFER,4                                                        .001
      00307  3 00000 0 03470         PTH     SORT2                                                            .001
      00310  3 00000 0 03472         PTH     FILEB                                                            .001
      00311  3 00660 0 02601         PTH     BUFER3,,432                                                      .001
      00312  0500 00 0 66657         CLA     =1 
      00313  0601 00 0 03463         STO     PNTR2    
      00314  0500 00 0 54772         CLA     L  
      00315  0400 00 0 66657         ADD     =1 
      00316  0737 00 5 00000         PAC     ,5 
      00317 -0634 00 5 00643         SXD     ALL2+2,5 
      00320 -0634 00 5 00517         SXD     CHKNX1+3,5     
      00321  0100 00 0 00336         TZE     MILOP2   
      00322  0774 00 5 00000         AXT     0,5
      00323  0774 00 3 01540         AXT     864,3    
      00324                   MILOOP RDWAIT  SORT2,FILEA,PNTR2,,INPUT2,5*432,EOF2,LASLEN  
      00324  0074 00 4 00006         TSX     $RDWAIT,4                                                        .001
      00325  3 00000 0 03470         PTH     SORT2                                                            .001
      00326  3 00000 0 03471         PTH     FILEA                                                            .001
      00327  3 00000 0 03463         PTH     PNTR2                                                            .001
      00330  3 04160 0 45304         PTH     INPUT2,,5*432                                                    .001
      00331  3 00000 0 00354         PTH     EOF2                                                             .001
      00332  3 00000 0 54773         PTH     LASLEN                                                           .001
      00333  0074 00 4 00433         TSX     SETUP,4  
      00334  0074 00 4 00445         TSX     MERGE,4  
      00335  0020 00 0 00324         TRA     MILOOP   
      00336                   MILOP2 RDWAIT  SORT2,FILEA,PNTR2,,INPUT2,5*432,EOF3,LASLEN  
      00336  0074 00 4 00006         TSX     $RDWAIT,4                                                        .001
      00337  3 00000 0 03470         PTH     SORT2                                                            .001
      00340  3 00000 0 03471         PTH     FILEA                                                            .001
      00341  3 00000 0 03463         PTH     PNTR2                                                            .001
      00342  3 04160 0 45304         PTH     INPUT2,,5*432                                                    .001
      00343  3 00000 0 00371         PTH     EOF3                                                             .001
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 10    
                  
      00344  3 00000 0 54773         PTH     LASLEN                                                           .001
      00345  0074 00 4 00433         TSX     SETUP,4  
      00346  0020 00 0 00351         TRA     *+3
      00347  0634 00 4 54774         SXA     MX4,4    
      00350  0020 00 0 00543         TRA     END1     
      00351  0074 00 4 00347         TSX     *-2,4    
      00352  0 00000 0 00000         PZE  
      00353  0020 00 0 00336         TRA     MILOP2   
      00354 -0500 00 0 54773  EOF2   CAL     LASLEN   
      00355  0100 00 0 00366         TZE     MT 
      00356  0361 00 0 54767         ACL     IN2LOC   
      00357  0737 00 2 00000         PAC     ,2 
      00360 -0500 00 0 66675         CAL     =O777777777777 
      00361  0602 00 2 00000         SLW     0,2
      00362 -0634 00 2 00540         SXD     CHKNX2+2,2     
      00363 -0634 00 2 00543         SXD     END1,2   
      00364  0074 00 4 00433         TSX     SETUP,4  
      00365  0074 00 4 00445         TSX     MERGE,4  
      00366  0074 00 4 00641  MT     TSX     ALL2,4   
      00367  0074 00 4 00615         TSX     MERGO,4  
      00370  0020 00 0 00410         TRA     MIRET    
      00371 -0500 00 0 54773  EOF3   CAL     LASLEN   
      00372  0100 00 0 00410         TZE     MIRET    
      00373  0361 00 0 54767         ACL     IN2LOC   
      00374  0737 00 2 00000         PAC     ,2 
      00375 -0500 00 0 66675         CAL     =O777777777777 
      00376  0602 00 2 00000         SLW     0,2
      00377 -0634 00 2 00540         SXD     CHKNX2+2,2     
      00400 -0634 00 2 00543         SXD     END1,2   
      00401  0074 00 4 00433         TSX     SETUP,4  
      00402  0020 00 0 00405         TRA     *+3
      00403  0634 00 4 54774         SXA     MX4,4    
      00404  0020 00 0 00543         TRA     END1     
      00405  0074 00 4 00403         TSX     *-2,4    
      00406  0 00000 0 00000         PZE  
      00407  0074 00 4 00615         TSX     MERGO,4  
      00410                   MIRET  CLOSE   SORT2,FILEA    
      00410  0074 00 4 00007         TSX     $CLOSE,4                                                         .001
      00411  3 00000 0 03470         PTH     SORT2                                                            .001
      00412  3 00000 0 03471         PTH     FILEA                                                            .001
      00413                          DELFIL  SORT2,FILEA    
      00413  0074 00 4 00005         TSX     $DELFIL,4                                                        .001
      00414  3 00000 0 03470         PTH     SORT2                                                            .001
      00415  3 00000 0 03471         PTH     FILEA                                                            .001
      00416                          CLOSE   SORT2,FILEB    
      00416  0074 00 4 00007         TSX     $CLOSE,4                                                         .001
      00417  3 00000 0 03470         PTH     SORT2                                                            .001
      00420  3 00000 0 03472         PTH     FILEB                                                            .001
      00421 -0500 00 0 03472         CAL     FILEB    
      00422  0560 00 0 03471         LDQ     FILEA    
      00423 -0600 00 0 03472         STQ     FILEB    
      00424  0602 00 0 03471         SLW     FILEA    
      00425 -0500 00 0 54770         CAL     IN2END   
      00426  0737 00 2 00000         PAC     ,2 
      00427 -0634 00 2 00540         SXD     CHKNX2+2,2     
      00430 -0634 00 2 00543         SXD     END1,2   
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 11    
                  
      00431  0774 00 4 00000  MIX4   AXT     -,4
      00432  0020 00 4 00001         TRA     1,4
      00433 -0500 00 0 03463  SETUP  CAL     PNTR2    
      00434  0361 00 0 66664         ACL     =1728    
      00435  0602 00 0 03463         SLW     PNTR2    
      00436 -0774 00 2 45304         AXC     INPUT2,2 
      00437 -0500 00 2 00000         CAL     0,2
      00440 -0340 00 0 66674         LAS     =O777777000000 
      00441  0020 00 0 00444         TRA     *+3
      00442  0020 00 0 00444         TRA     *+2
      00443  1 77777 2 00437         TXI     *-4,2,-1 
      00444  0020 00 4 00001         TRA     1,4
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 12    
                  
                              *      MERGE
                  
                  
      00445  0634 00 4 54774  MERGE  SXA     MX4,4    
      00446 -0500 00 5 54776  NEXT   CAL     PTBL,5   
      00447  0737 00 1 00000         PAC     ,1 
      00450  0634 00 2 54775         SXA     I2,2     
      00451 -0500 00 1 00001         CAL     1,1
      00452 -0340 00 0 66674         LAS     =O777777000000 
      00453  0020 00 0 00476         TRA     LE 
      00454  0020 00 0 00476         TRA     LE 
      00455 -0340 00 2 00001         LAS     1,2
      00456  0020 00 0 00522         TRA     GR 
      00457  0020 00 0 00461         TRA     EQ 
      00460  0020 00 0 00472         TRA     LE2
      00461  1 77777 1 00462  EQ     TXI     *+1,1,-1 
      00462  1 77777 2 00463         TXI     *+1,2,-1 
      00463 -0500 00 1 00001         CAL     1,1
      00464 -0340 00 0 66674         LAS     =O777777000000 
      00465  0020 00 0 00476         TRA     LE 
      00466  0020 00 0 00476         TRA     LE 
      00467 -0340 00 2 00001         LAS     1,2
      00470  0020 00 0 00522         TRA     GR 
      00471  0020 00 0 00461         TRA     EQ 
      00472 -0500 00 2 00001  LE2    CAL     1,2
      00473 -0340 00 0 66674         LAS     =O777777000000 
      00474  0020 00 0 00522         TRA     GR 
      00475  0020 00 0 00522         TRA     GR 
      00476  0534 00 2 54775  LE     LXA     I2,2     
      00477 -0500 00 5 54776         CAL     PTBL,5   
      00500  0737 00 1 00000         PAC     ,1 
      00501 -0500 00 1 00000         CAL     0,1
      00502  0602 00 3 53226  LELOOP SLW     OUTPT1+864,3   
      00503  1 77777 1 00504         TXI     *+1,1,-1 
      00504 -0500 00 1 00000         CAL     0,1
      00505 -0340 00 0 66674         LAS     =O777777000000 
      00506  0020 00 0 00514         TRA     CHKNX1   
      00507  0020 00 0 00514         TRA     CHKNX1   
      00510  2 00001 3 00502         TIX     LELOOP,3,1     
      00511  0074 00 4 00565         TSX     NEW3,4   
      00512 -0500 00 1 00000         CAL     0,1
      00513  0020 00 0 00502         TRA     LELOOP   
      00514  1 77777 5 00515  CHKNX1 TXI     *+1,5,-1 
      00515  2 00001 3 00517         TIX     *+2,3,1  
      00516  0074 00 4 00565         TSX     NEW3,4   
      00517  3 00000 5 00446         TXH     NEXT,5,**
      00520 -3 00000 5 00446         TXL     NEXT,5,0 
      00521  0020 00 0 00543         TRA     END1     
      00522  0534 00 2 54775  GR     LXA     I2,2     
      00523 -0500 00 2 00000         CAL     0,2
      00524  0602 00 3 53226  GRLOOP SLW     OUTPT1+864,3   
      00525  1 77777 2 00526         TXI     *+1,2,-1 
      00526 -0500 00 2 00000         CAL     0,2
      00527 -0340 00 0 66674         LAS     =O777777000000 
      00530  0020 00 0 00536         TRA     CHKNX2   
      00531  0020 00 0 00536         TRA     CHKNX2   
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 13    
                  
      00532  2 00001 3 00524         TIX     GRLOOP,3,1     
      00533  0074 00 4 00565         TSX     NEW3,4   
      00534 -0500 00 2 00000         CAL     0,2
      00535  0020 00 0 00524         TRA     GRLOOP   
      00536  2 00001 3 00540  CHKNX2 TIX     *+2,3,1  
      00537  0074 00 4 00565         TSX     NEW3,4   
      00540  3 00000 2 00446         TXH     NEXT,2,**
      00541  0534 00 4 54774  END2   LXA     MX4,4    
      00542  0020 00 4 00001         TRA     1,4
                              *     
      00543 -3 00000 2 00563  END1   TXL     END12,2,**     
      00544 -0500 00 2 00000         CAL     0,2
      00545  0602 00 3 53226  E1LOOP SLW     OUTPT1+864,3   
      00546  1 77777 2 00547         TXI     *+1,2,-1 
      00547 -0500 00 2 00000         CAL     0,2
      00550 -0340 00 0 66674         LAS     =O777777000000 
      00551  0020 00 0 00557         TRA     AWAWGO   
      00552  0020 00 0 00557         TRA     AWAWGO   
      00553  2 00001 3 00545         TIX     E1LOOP,3,1     
      00554  0074 00 4 00565         TSX     NEW3,4   
      00555 -0500 00 2 00000         CAL     0,2
      00556  0020 00 0 00545         TRA     E1LOOP   
      00557  2 00001 3 00543  AWAWGO TIX     END1,3,1 
      00560  0074 00 4 00565         TSX     NEW3,4   
      00561 -0500 00 2 00000         CAL     0,2
      00562  0020 00 0 00543         TRA     END1     
      00563  0534 00 4 54774  END12  LXA     MX4,4    
      00564  0020 00 4 00002         TRA     2,4
                              *     
      00565  0634 00 4 00613  NEW3   SXA     N3X4,4   
      00566                          FWAIT   SORT2,FILEB    
      00566  0074 00 4 00014         TSX     $FWAIT,4                                                         .001
      00567  3 00000 0 03470         PTH     SORT2                                                            .001
      00570  3 00000 0 03472         PTH     FILEB                                                            .001
      00571                          WRFILE  SORT2,FILEB,=0,ADR1,OUTPT1,864   
      00571  0074 00 4 00015         TSX     $WRFILE,4                                                        .001
      00572  3 00000 0 03470         PTH     SORT2                                                            .001
      00573  3 00000 0 03472         PTH     FILEB                                                            .001
      00574  3 00000 0 66656         PTH     =0                                                               .001
      00575  3 01540 0 51466  ADR1   PTH     OUTPT1,,864                                                      .001
      00576  3 00000 0 66666         PTH     =-0                                                              .001
      00577  3 00000 0 66666         PTH     =-0                                                              .001
      00600 -0500 00 0 51465         CAL     OUTPTB   
      00601  0560 00 0 51464         LDQ     OUTPTA   
      00602 -0600 00 0 51465         STQ     OUTPTB   
      00603  0602 00 0 51464         SLW     OUTPTA   
      00604  0621 00 0 00575         STA     ADR1     
      00605  0361 00 0 66663         ACL     =864     
      00606  0621 00 0 00502         STA     LELOOP   
      00607  0621 00 0 00524         STA     GRLOOP   
      00610  0621 00 0 00545         STA     E1LOOP   
      00611  0621 00 0 00647         STA     A2LOOP   
      00612  0774 00 3 01540         AXT     864,3    
      00613  0774 00 4 00000  N3X4   AXT     -,4
      00614  0020 00 4 00001         TRA     1,4
                              *     
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 14    
                  
      00615  0634 00 4 00637  MERGO  SXA     MOX4,4   
      00616  0634 00 3 54771         SXA     TEM,3    
      00617 -0500 00 0 66663         CAL     =864     
      00620  0402 00 0 54771         SUB     TEM
      00621  0734 00 4 00000         PAX     ,4 
      00622 -0634 00 4 00634         SXD     MOADD,4  
      00623 -0500 00 0 51464         CAL     OUTPTA   
      00624  0621 00 0 00634         STA     MOADD    
      00625                          FWAIT   SORT2,FILEB    
      00625  0074 00 4 00014         TSX     $FWAIT,4                                                         .001
      00626  3 00000 0 03470         PTH     SORT2                                                            .001
      00627  3 00000 0 03472         PTH     FILEB                                                            .001
      00630                          WRWAIT  SORT2,FILEB,=0,MOADD,**,** 
      00630  0074 00 4 00016         TSX     $WRWAIT,4                                                        .001
      00631  3 00000 0 03470         PTH     SORT2                                                            .001
      00632  3 00000 0 03472         PTH     FILEB                                                            .001
      00633  3 00000 0 66656         PTH     =0                                                               .001
      00634  3 00000 0 00000  MOADD  PTH     **,,**                                                           .001
      00635  3 00000 0 66666         PTH     =-0                                                              .001
      00636  3 00000 0 66666         PTH     =-0                                                              .001
      00637  0774 00 4 00000  MOX4   AXT     -,4
      00640  0020 00 4 00001         TRA     1,4
                              *     
      00641  0634 00 4 00664  ALL2   SXA     A2X4,4   
      00642 -3 00000 5 00644         TXL     *+2,5,0  
      00643 -3 00000 5 00664         TXL     A2X4,5,**
      00644 -0500 00 5 54776         CAL     PTBL,5   
      00645  0737 00 1 00000         PAC     ,1 
      00646 -0500 00 1 00000         CAL     0,1
      00647  0602 00 3 53226  A2LOOP SLW     OUTPT1+864,3   
      00650  1 77777 1 00651         TXI     *+1,1,-1 
      00651 -0500 00 1 00000         CAL     0,1
      00652 -0340 00 0 66674         LAS     =O777777000000 
      00653  1 77777 3 00661         TXI     INC5,3,-1
      00654  1 77777 3 00661         TXI     INC5,3,-1
      00655  2 00001 3 00647         TIX     A2LOOP,3,1     
      00656  0074 00 4 00565         TSX     NEW3,4   
      00657 -0500 00 1 00000         CAL     0,1
      00660  0020 00 0 00647         TRA     A2LOOP   
      00661  3 00000 3 00663  INC5   TXH     *+2,3,0  
      00662  0074 00 4 00565         TSX     NEW3,4   
      00663  1 77777 5 00642         TXI     ALL2+1,5,-1    
      00664  0774 00 4 00000  A2X4   AXT     -,4
      00665  0020 00 4 00001         TRA     1,4
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 15    
                  
                              *      SORT 
                  
                  
      00666  0634 00 4 01037  SORT   SXA     ENDM,4   
      00667  0774 00 1 00000         AXT     0,1
      00670 -0500 00 1 44424  ENDTBL CAL     INPUT1+IN1LEN-432,1  
      00671 -0340 00 0 66674         LAS     =O777777000000 
      00672  0020 00 0 00675         TRA     *+3
      00673  0020 00 0 00675         TRA     *+2
      00674  1 77777 1 00670         TXI     ENDTBL,1,-1    
      00675 -0500 00 0 66675         CAL     =O777777777777 
      00676  0602 00 1 44424         SLW     INPUT1+IN1LEN-432,1  
      00677 -0774 00 1 03504  NOSET  AXC     INPUT1,1 
      00700 -0500 00 1 00000  STTABL CAL     0,1
      00701 -0340 00 0 66674         LAS     =O777777000000 
      00702  0020 00 0 00705         TRA     *+3
      00703  0020 00 0 00705         TRA     *+2
      00704  1 77777 1 00700         TXI     STTABL,1,-1    
      00705  0636 00 1 54776         SCA     PTBL,1   
      00706  0774 00 1 00000         AXT     0,1
      00707  0774 00 2 00000         AXT     0,2
      00710 -0500 60 2 54776  GENTBL CAL*    PTBL,2   
      00711 -0340 00 0 66675         LAS     =O777777777777 
      00712  0020 00 0 00720         TRA     TBDONE   
      00713  0020 00 0 00720         TRA     TBDONE   
      00714  0361 00 0 66657         ACL     =1 
      00715  0361 00 2 54776         ACL     PTBL,2   
      00716  0621 00 2 54777         STA     PTBL+1,2 
      00717  1 77777 2 00710         TXI     GENTBL,2,-1    
      00720  1 00001 2 00721  TBDONE TXI     *+1,2,1  
      00721  0636 00 2 54772         SCA     L,2
      00722 -0500 00 0 54772         CAL     L  
      00723  0100 00 0 01033         TZE     JSTONE   
      00724 -0340 00 0 66657         LAS     =1 
      00725  0020 00 0 00727         TRA     *+2
      00726  0361 00 0 66657         ACL     =1 
      00727  0771 00 0 00001  LOOPM  ARS     1  
      00730  0602 00 0 54771         SLW     TEM
      00731  0734 00 4 00000         PAX     ,4 
      00732 -0500 00 0 54772         CAL     L  
      00733  0402 00 0 54771         SUB     TEM
      00734  0737 00 1 00000         PAC     ,1 
      00735  0361 00 0 66657         ACL     =1 
      00736  0737 00 2 00000         PAC     ,2 
      00737 -0634 00 2 00766         SXD     A1,2     
      00740 -0634 00 2 01017         SXD     A2,2     
      00741  0535 00 2 54772         LAC     L,2
      00742 -0500 00 1 54776  COMP   CAL     PTBL,1   
      00743  0737 00 5 00000         PAC     ,5 
      00744 -0500 00 2 54776         CAL     PTBL,2   
      00745  0737 00 6 00000         PAC     ,6 
      00746 -0500 00 6 00001  SLOOP  CAL     1,6
      00747 -0340 00 0 66674         LAS     =O777777000000 
      00750  0020 00 0 00762         TRA     SWAP     
      00751  0020 00 0 00762         TRA     SWAP     
      00752 -0340 00 5 00001         LAS     1,5
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 16    
                  
      00753  0020 00 0 01022         TRA     NOSWAP   
      00754  1 77777 5 01031         TXI     SEQ,5,-1 
      00755 -0500 00 5 00001         CAL     1,5
      00756 -0340 00 0 66674         LAS     =O777777000000 
      00757  0020 00 0 01022         TRA     NOSWAP   
      00760  0020 00 0 01022         TRA     NOSWAP   
      00761  0020 00 0 00762         TRA     SWAP     
      00762 -0500 00 1 54776  SWAP   CAL     PTBL,1   
      00763  0560 00 2 54776         LDQ     PTBL,2   
      00764  0602 00 2 54776         SLW     PTBL,2   
      00765 -0600 00 1 54776         STQ     PTBL,1   
      00766 -3 00000 2 01022  A1     TXL     NOSWAP,2,**    
      00767  0754 00 2 00000         PXA     ,2 
      00770  0734 00 3 00000  SWPLP  PAX     ,3 
      00771  0402 00 0 54771         SUB     TEM
      00772  0734 00 7 00000         PAX     ,7 
      00773 -0500 00 3 54776         CAL     PTBL,3   
      00774  0737 00 5 00000         PAC     ,5 
      00775 -0500 00 7 54776         CAL     PTBL,7   
      00776  0737 00 6 00000         PAC     ,6 
      00777 -0500 00 6 00001  LOOPA  CAL     1,6
      01000 -0340 00 0 66674         LAS     =O777777000000 
      01001  0020 00 0 01013         TRA     ASWAP    
      01002  0020 00 0 01013         TRA     ASWAP    
      01003 -0340 00 5 00001         LAS     1,5
      01004  0020 00 0 01022         TRA     NOSWAP   
      01005  1 77777 5 01032         TXI     EQA,5,-1 
      01006 -0500 00 5 00001         CAL     1,5
      01007 -0340 00 0 66674         LAS     =O777777000000 
      01010  0020 00 0 01022         TRA     NOSWAP   
      01011  0020 00 0 01022         TRA     NOSWAP   
      01012  0020 00 0 01013         TRA     ASWAP    
      01013 -0500 00 3 54776  ASWAP  CAL     PTBL,3   
      01014  0560 00 7 54776         LDQ     PTBL,7   
      01015  0602 00 7 54776         SLW     PTBL,7   
      01016 -0600 00 3 54776         STQ     PTBL,3   
      01017 -3 00000 7 01022  A2     TXL     NOSWAP,7,**    
      01020  0754 00 7 00000         PXA     ,7 
      01021  0020 00 0 00770         TRA     SWPLP    
      01022 -3 00000 1 01025  NOSWAP TXL     *+3,1,0  
      01023  1 00001 1 01024         TXI     *+1,1,1  
      01024  1 00001 2 00742         TXI     COMP,2,1 
      01025 -3 00001 4 01037         TXL     ENDM,4,1 
      01026  0754 00 4 00000         PXA     ,4 
      01027  0361 00 0 66657         ACL     =1 
      01030  0020 00 0 00727         TRA     LOOPM    
      01031  1 77777 6 00746  SEQ    TXI     SLOOP,6,-1     
      01032  1 77777 6 00777  EQA    TXI     LOOPA,6,-1     
      01033  0600 00 0 54772  JSTONE STZ     L  
      01034  0020 00 0 01037         TRA     ENDM     
      01035  0500 00 0 66667  VOID   CLA     =-1
      01036  0601 00 0 54772         STO     L  
      01037  0774 00 4 00000  ENDM   AXT     -,4
      01040  0020 00 4 00001         TRA     1,4
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 17    
                  
                              *      STORAGE    
                  
                  
      01041                   BUFER1 BSS     432
      01721                   BUFER2 BSS     432
      02601                   BUFER3 BSS     432
      03461  0 00000 0 00000  ..TIME PZE  
      03462  0 00000 0 00001  PNTR1  PZE     1  
      03463  0 00000 0 00001  PNTR2  PZE     1  
      03464  0 00000 0 00000  NAME1  PZE  
      03465  0 00000 0 00000  NAME2  PZE  
      03466  0 00000 0 00000  NAME3  PZE  
      03467  0 00000 0 00000  NAME4  PZE  
      03470  746246516302     SORT2  BCI     1,(SORT2 
      03471  263143250134     FILEA  BCI     1,FILE1) 
      03472  263143250234     FILEB  BCI     1,FILE2) 
      03473  0 00000 0 00000  CODE   PZE  
      03474                   A      BSS     8  
      03504                   INPUT1 BSS     IN1LEN   
      45304                   INPUT2 BSS     5*432    
      51464  0 00000 0 51466  OUTPTA PZE     OUTPT1   
      51465  0 00000 0 53226  OUTPTB PZE     OUTPT2   
      51466                   OUTPT1 BSS     864
      53226                   OUTPT2 BSS     864
      54766  0 00000 0 03504  IN1LOC PZE     INPUT1   
      54767  0 00000 0 45304  IN2LOC PZE     INPUT2   
      54770  0 00000 0 50604  IN2END PZE     INPUT2+4*432   
      54771  0 00000 0 00000  TEM    PZE  
      54772  0 00000 0 00000  L      PZE  
      54773  0 00000 0 00000  LASLEN PZE  
      54774  0 00000 0 00000  MX4    PZE  
      54775  0 00000 0 00000  I2     PZE  
      54776                   PTBL   BSS     35*144   
                                     END  
                  
        LITERALS  
      66656  000000000000     
      66657  000000000001     
      66660  000000000002     
      66661  000000000003     
      66662  000000000004     
      66663  000000001540     
      66664  000000003300     
      66665  000000040720     
      66666  400000000000     
      66667  400000000001     
      66670  516060606060     
      66671  516660606060     
      66672  606060214343     
      66673  666060606060     
      66674  777777000000     
      66675  777777777777     
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      66676 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
       3474      A    65,   70,  107,  112
      54772      L   314,  721,  722,  732,  741, 1033, 1036
        766     A1   737
       1017     A2   740
        461     EQ   457,  471
        522     GR   456,  470,  474,  475
      54775     I2   450,  476,  522
        476     LE   453,  454,  465,  466
        366     MT   355
        101     OK    72
       1032    EQA  1005
        241    ERR   223,  230,  233,  240
        472    LE2   460
      54774    MX4   347,  403,  445,  541,  563
        123    OK2   114
       1031    SEQ   754
      54771    TEM   616,  620,  730,  733,  771
        664   A2X4   641,  643
        575   ADR1   604
        641   ALL2   317,  366,  663
       3473   CODE    67,  111,  221,  231
        742   COMP  1024
        543   END1   350,  363,  400,  404,  430,  521,  557,  562
        541   END2      
       1037   ENDM   152,  666, 1025, 1034
        143   EOF1   133
        354   EOF2   331
        371   EOF3   343
        174   EXIT   165,  211,  220,  242,  253,  264
        661   INC5   653,  654
        243   LINK    71,  224
        431   MIX4   265
        637   MOX4   615
        613   N3X4   565
        565   NEW3   511,  516,  533,  537,  554,  560,  656,  662
        446   NEXT   517,  520,  540
          1   OPEN    50,  266,  300
      54776   PTBL   446,  477,  644,  705,  710,  715,  716,  742,  744,  762,  763,  764,  765,  773,  775, 1013, 1014
                    1015, 1016
        666   SORT   140
        762   SWAP   750,  751,  761
       1035   VOID      
       1013  ASWAP  1001, 1002, 1012
          7  CLOSE   156,  215,  410,  416
        563  END12   543
        104  ERRIN   227
        221  FERR1    66
        231  FERR2   110
       3471  FILEA    64,   75,  103,  170,  271,  276,  326,  340,  412,  415,  422,  424
       3472  FILEB   106,  117,  125,  303,  310,  420,  421,  423,  570,  573,  627,  632
         14  FWAIT   566,  625
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        254  LINK2   113,  234
        126  LOOP1   142,  237
        777  LOOPA  1032
        727  LOOPM  1030
        445  MERGE   334,  365
        615  MERGO   367,  407
        410  MIRET   370,  372
        634  MOADD   622,  624
       3464  NAME1    25,   52,   57,  127,  216
       3465  NAME2    33,   53,   60,  130,  217
       3466  NAME3    41,  162,  172
       3467  NAME4    47,  163,  173
        176  NMERR    23,   24,   31,   32,   37,   40,   45,   46
        677  NOSET   153
       3462  PNTR1   131,  135,  137,  212
       3463  PNTR2   313,  327,  341,  433,  435
        212  RETZE   144
        433  SETUP   333,  345,  364,  401
        746  SLOOP  1031
       3470  SORT2    63,   74,  102,  105,  116,  124,  167,  270,  275,  302,  307,  325,  337,  411,  414,  417,  567
                     572,  626,  631
        770  SWPLP  1021
        647 A2LOOP   611,  655,  660
        557 AWAWGO   551,  552
       1041 BUFER1    61
       1721 BUFER2   277
       2601 BUFER3   311
          2 BUFFER    56,  274,  306
          4 CHFILE    73,  115,  166
        514 CHKNX1   320,  506,  507
        536 CHKNX2   362,  377,  427,  530,  531
         11 CHNCOM   174
         10 DELETE   161
          5 DELFIL   101,  123,  413
        545 E1LOOP   553,  556,  610
        670 ENDTBL   674
          3 FSTATE    62,  104
        710 GENTBL   717
          0 GETCOM    20,   26,   34,   42
        524 GRLOOP   532,  535,  607
      41600 IN1LEN   126,  132,  670,  676, 3504
      54766 IN1LOC   145
      54770 IN2END   425
      54767 IN2LOC   356,  373
       3504 INPUT1   132,  670,  676,  677,54766
      45304 INPUT2   330,  342,  436,54767,54770
       3461 ..TIME      
         12 .PCOMT   176,  243,  254
       1033 JSTONE   723
      54773 LASLEN   134,  143,  332,  344,  354,  371
        502 LELOOP   510,  513,  606
        265 MERGIN   141,  155
        324 MILOOP   335
        336 MILOP2   321,  353
       1022 NOSWAP   753,  757,  760,  766, 1004, 1010, 1011, 1017
1            LMSORT FAP            BY MICHAEL R COMER                                            PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      51466 OUTPT1   502,  524,  545,  575,  647,51464
      53226 OUTPT2 51465
      51464 OUTPTA   601,  603,  623
      51465 OUTPTB   600,  602
         13 PRNTER   241
          6 RDWAIT   126,  324,  336
        156 RETURN   214
        700 STTABL   704
        720 TBDONE   712,  713
         15 WRFILE   571
         16 WRWAIT   630
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




MEMTST   BCD 02/09/69 0704.0    2180         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  MEMTST   MAD            02/09/69    0703.0
-                 
                 ..  ROUTINE TO CHECK MEMORY, SWAPPING, ETC.                                           LM00001    
                 ..  WRITES RANDOM NUMBERS INTO BUFFER, THEN CHECKS THEM.                              LM00002    
                 ..  J. H. SALTZER, NOVEMBER, 1965.                                                    LM00003    
                                                                                                       LM00004    
                  NORMAL MODE IS INTEGER                                                          *001 LM00005    
                  VECTOR VALUES RSTART = 12345671011K                                             *002 LM00006    
                  VECTOR VALUES MAGIC = 314151126535K                                             *003 LM00007    
                  VECTOR VALUES BUFSIZ = 25000                                                    *004 LM00008    
                  VECTOR VALUES NTEST = 10                                                        *005 LM00009    
                                                                                                       LM00010    
                 ..  LOAD UP THE BUFFER WITH RANDOM NUMBERS.                                           LM00011    
                                                                                                       LM00012    
                  TEST = 0                                                                        *006 LM00013    
      LOOP        A(0) = RSTART                                                                   *007 LM00014    
                  THROUGH SETUP, FOR I = 1, 1, I .G. BUFSIZ                                       *008 LM00015    
      SETUP         A(I) = A(I-1)*MAGIC                                                           *009 LM00016    
                  TEST = TEST+1                                                                   *010 LM00017    
                                                                                                       LM00018    
                 ..  NOW, CHECK THIS BUFFER TEN TIMES.                                                 LM00019    
                                                                                                       LM00020    
                  THROUGH RCHK, FOR J = 1, 1, J .G. NTEST                                         *011 LM00021    
                    RNEXT = RSTART                                                                *012 LM00022    
                    THROUGH CKLP, FOR I = 1, 1, I .G. BUFSIZ                                      *013 LM00023    
                      RNEXT = RNEXT*MAGIC                                                         *014 LM00024    
      CKLP            WHENEVER A(I) .NE. RNEXT,                                                   *015 LM00025    
                1         PRINT FORMAT WOOPS, I, A(I), RNEXT                                      *015 LM00026    
                                                                                                       LM00027    
                 ..  THAT TEST WORKED, PERFORM SWAP AND TRY AGAIN.                                     LM00028    
                                                                                                       LM00029    
                    N = 1                                                                         *016 LM00030    
                    SLEEP.(N)                                                                     *017 LM00031    
      RCHK          CONTINUE                                                                      *018 LM00032    
                                                                                                       LM00033    
                 ..  ALL TESTS WORKED.  RESET RANDOM NUMBER                                            LM00034    
                 ..  GENERATOR BEFORE TRYING AGAIN.                                                    LM00035    
                                                                                                       LM00036    
                  RSTART = RNEXT                                                                  *019 LM00037    
                  TRANSFER TO LOOP                                                                *020 LM00038    
                                                                                                       LM00039    
                  VECTOR VALUES WOOPS = $H'WORD',I5,H' IS 'O12,                                   *021 LM00040    
                1     H' SHOULD BE 'O12*$                                                         *021 LM00041    
                  DIMENSION A(25000)                                                              *022 LM00042    
                  END OF PROGRAM                                                                  *023 LM00043    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   61022 TRANSFER VECTOR LENGTH  00004 PROGRAM BEGINS    60705
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      A      60656 A 1        I      60660   1        MAGIC  60662 A 1        RCHK   00004   4        SETUP  00004   4  
      BUFSIZ 60657 A 1        J      60661   1        N      60663   1        RNEXT  60665   1        TEST   60667   1  
      CKLP   00004   4        LOOP   00005   4        NTEST  60664 A 1        RSTART 60666 A 1        WOOPS  60701 A 1  
0FUNCTION DICTIONARY    
      EXIT   00000   1        .PRINT 00001   1        .SETUP 00002   1        SLEEP  00003   1                          
0ABSOLUTE CONSTANTS     
 60702 +000000000000     60703 +000000000001     60704 +233000000000                                                    
0STATEMENT DICTIONARY   
 00005 TXL -360712060710                                                                                                
0PROGRAM    
                 NORMAL MODE IS INTEGER                                             001  LM00005
                 VECTOR VALUES RSTART = 12345671011K                                002  LM00006
 60705 TSX +0 07400 4 00002    60666     +0 12345 6 71011                                                               
                 VECTOR VALUES MAGIC = 314151126535K                                003  LM00007
 60662     +3 14151 1 26535                                                                                             
                 VECTOR VALUES BUFSIZ = 25000                                       004  LM00008
 60657     +0 00000 0 60650                                                                                             
                 VECTOR VALUES NTEST = 10                                           005  LM00009
 60664     +0 00000 0 00012                                                                                             
                 TEST = 0                                                           006  LM00013
 60706 CLA +0 50000 0 60702    60707 STO +0 60100 0 60667                                                               
      LOOP       A(0) = RSTART                                                      007  LM00014
 60710 CLA +0 50000 0 60666    60711 STO +0 60100 0 60656                                                               
                 THROUGH SETUP, FOR I = 1, 1, I .G. BUFSIZ                          008  LM00015
 60712 CLA +0 50000 0 60703    60713 STO +0 60100 0 60660    60714 TRA +0 02000 0 60720    60715 CLA +0 50000 0 60660   
 60716 ADD +0 40000 0 60703    60717 STO +0 60100 0 60660    60720 CLA +0 50000 0 60660    60721 SUB +0 40200 0 60657   
 60722 TZE +0 10000 0 60724    60723 TPL +0 12000 0 60734                                                               
      SETUP        A(I) = A(I-1)*MAGIC                                              009  LM00016
 60724 CLA +0 50000 0 60660    60725 SUB +0 40200 0 60703    60726 PAX +0 73400 1 00000    60727 LDQ +0 56000 1 60656   
 60730 MPY +0 20000 0 60662    60731 LXA +0 53400 1 60660    60732 STQ -0 60000 1 60656    60733 TRA +0 02000 0 60715   
                 TEST = TEST+1                                                      010  LM00017
 60734 CLA +0 50000 0 60667    60735 ADD +0 40000 0 60703    60736 STO +0 60100 0 60667                                 
                 THROUGH RCHK, FOR J = 1, 1, J .G. NTEST                            011  LM00021
 60737 CLA +0 50000 0 60703    60740 STO +0 60100 0 60661    60741 TRA +0 02000 0 60745    60742 CLA +0 50000 0 60661   
 60743 ADD +0 40000 0 60703    60744 STO +0 60100 0 60661    60745 CLA +0 50000 0 60661    60746 SUB +0 40200 0 60664   
 60747 TZE +0 10000 0 60751    60750 TPL +0 12000 0 61014                                                               
                   RNEXT = RSTART                                                   012  LM00022
 60751 CLA +0 50000 0 60666    60752 STO +0 60100 0 60665                                                               
                   THROUGH CKLP, FOR I = 1, 1, I .G. BUFSIZ                         013  LM00023
 60753 CLA +0 50000 0 60703    60754 STO +0 60100 0 60660    60755 TRA +0 02000 0 60761    60756 CLA +0 50000 0 60660   
 60757 ADD +0 40000 0 60703    60760 STO +0 60100 0 60660    60761 CLA +0 50000 0 60660    60762 SUB +0 40200 0 60657   
 60763 TZE +0 10000 0 60765    60764 TPL +0 12000 0 61007                                                               
                     RNEXT = RNEXT*MAGIC                                            014  LM00024
 60765 LDQ +0 56000 0 60665    60766 MPY +0 20000 0 60662    60767 STQ -0 60000 0 60665                                 
      CKLP           WHENEVER A(I) .NE. RNEXT,                                      015  LM00025
                1        PRINT FORMAT WOOPS, I, A(I), RNEXT                         015  LM00026
 60770 LXA +0 53400 1 60660    60771 CLA +0 50000 1 60656    60772 SUB +0 40200 0 60665    60773 TZE +0 10000 0 61006   
 60774 TSX +0 07400 4 00001    60775 STR -1 60701 1 61020    60776 STR -1 00000 0 60660    60777 CLA +0 50000 0 60660   
 61000 SUB +0 40200 0 61001    61001 TXH +3 00000 0 60656    61002 STA +0 62100 0 61003    61003 STR -1 00000 0 00000   
 61004 STR -1 00000 0 60665    61005 STR -1 00000 0 00000    61006 TRA +0 02000 0 60756                                 
                   N = 1                                                            016  LM00030
 61007 CLA +0 50000 0 60703    61010 STO +0 60100 0 60663                                                               
                   SLEEP.(N)                                                        017  LM00031
 61011 TSX +0 07400 4 00003    61012 TXH +3 00000 0 60663                                                               
      RCHK         CONTINUE                                                         018  LM00032
 61013 TRA +0 02000 0 60742                                                                                             
                 RSTART = RNEXT                                                     019  LM00037
 61014 CLA +0 50000 0 60665    61015 STO +0 60100 0 60666                                                               
                 TRANSFER TO LOOP                                                   020  LM00038
 61016 TRA +0 02000 0 00005                                                                                             
                 VECTOR VALUES WOOPS = $H'WORD',I5,H' IS 'O12,                      021  LM00040
                1    H' SHOULD BE 'O12*$                                            021  LM00041
 60670     -2 01446 0 10254    60671     -2 44324 6 02225    60672     +3 01460 6 23046    60673     -2 06060 6 06060   
 60674     -2 06060 6 06060    60675     -2 06060 6 06060    60676     -0 60102 7 36060    60677     +1 46031 6 26014   
 60700     +1 47331 0 57330    60701     +3 01466 4 65124                                                               
                 DIMENSION A(25000)                                                 022  LM00042
                 END OF PROGRAM                                                     023  LM00043
 61017 TSX +0 07400 4 00000                                                                                             




  LOOK   BCD 10/12/70 1513.8   10985         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE    LOOK   MAD            02/09/69    0700.8
-                 
      LOOK        PROGRAM TO PRINT OUT MAIL BOX, URGENT MAIL AND                                       LM00001    
                  URGENT POST IF ANY EXIST.                                                            LM00002    
                                                                                                       LM00003    
                  R. ROACH    12/14/68                                                                 LM00004    
                                                                                                       LM00005    
                  NORMAL MODE IS INTEGER                                                          *001 LM00006    
                  VECTOR VALUES MAXLEN = 19                                                       *002 LM00007    
                  VECTOR VALUES NFILES = 3                                                        *003 LM00008    
                  VECTOR VALUES N1 = $  MAIL$,$URGENT$,$URGENT$                                   *004 LM00009    
                  VECTOR VALUES N2 = $   BOX$,$  MAIL$,$  POST$                                   *005 LM00010    
                  VECTOR VALUES T = $(TEMP)$                                                      *006 LM00011    
                  VECTOR VALUES F = $(FILE)$                                                      *007 LM00012    
                  VECTOR VALUES STATUS = $R$                                                      *008 LM00013    
                  BOOLEAN CARD,ASK.,FLAG,LMERR,LINK                                               *009 LM00014    
                  VECTOR VALUES FLAG = 0B                                                         *010 LM00015    
                  VECTOR VALUES CARD = 0B                                                         *011 LM00016    
                  VECTOR VALUES LMERR = 0B                                                        *012 LM00017    
                                                                                                       LM00018    
                                                                                                       LM00019    
                  VECTOR VALUES RED = 013300570057K                                               *013 LM00020    
                  VECTOR VALUES BLACK = 013200570057K                                             *014 LM00021    
                  VECTOR VALUES TAB = 725757575757K                                               *015 LM00022    
                  VECTOR VALUES MESS1 = $0*0*0*0*0 0 0L1I1N1E0 1T1O1O0 1L1O1N1G0.$                *016 LM00023    
                  VECTOR VALUES MESS2 = $0*0*0*0*0 0 0L1I1N1E1M1A1R1K0 1E1R1R1O1R0.$              *017 LM00024    
                  VECTOR VALUES MESS3 = $0D1E1L1E1T1E0 1I1T$,015600600060K                        *018 LM00025    
                  VECTOR VALUES MESS4 = $0D1E1L1E1T1E1D0.$                                        *019 LM00026    
                  VECTOR VALUES MESS5 = $0N1O1T0 1D1E1L1E1T1E1D0.$                                *020 LM00027    
                  VECTOR VALUES MESS6 = $0 0N1O0 1M1A1I1L0 1A1T0 $                                *021 LM00028    
                  VECTOR VALUES MESS7 = $0F1I1L1E0 1I1S0 1A0 1L1I1N1K0.$                          *022 LM00029    
                  VECTOR VALUES MESS8 = $0F1I1L1E0 1U1N1L1I1N1K1E1D0.$                            *023 LM00030    
                                                                                                       LM00031    
                  DIMENSION LM(25),B1(0),B2(0),LENGTH(1)                                          *024 LM00032    
                  EQUIVALENCE (MODE,LENGTH)                                                       *025 LM00033    
                  GETBUF.(B1,432)                                                                 *026 LM00034    
                  GETBUF.(B2,432)                                                                 *027 LM00035    
                  PRMESS.                                                                         *028 LM00036    
                  SETBRK.(ASKLOC)                                                                 *029 LM00037    
                                                                                                       LM00038    
                                                                                                       LM00039    
                  THROUGH LOOP, FOR I = 0,1,I.GE.NFILES                                           *030 LM00040    
                  FSTATE.(N1(I),N2(I),LENGTH(1)...2,LOOP)                                         *031 LM00041    
                  WHENEVER LENGTH(1).NE.0                                                         *032 LM00042    
                    WHENEVER MODE .L. 0                                                           *033 LM00043    
                      NAME1 = N1(I)                                                               *034 LM00044    
                      NAME2 = N2(I)                                                               *035 LM00045    
                      LINK = 1B                                                                   *036 LM00046    
                    OTHERWISE                                                                     *037 LM00047    
                      LINK = 0B                                                                   *038 LM00048    
                      NAME1 = T                                                                   *039 LM00049    
                      NAME2 = F                                                                   *040 LM00050    
                    END OF CONDITIONAL                                                            *041 LM00051    
                     WHENEVER .NOT.LINK, DELETE.(NAME1,NAME2,0,IOERR)                             *042 LM00052    
                     WHENEVER .NOT.LINK,CHFILE.(N1(I),N2(I),0,NAME1,NAME2,ERR,CODE)               *043 LM00053    
      ROOM           PRINT.                                                                       *044 LM00054    
      ASKLOC         WHENEVER ASK.(0)                                                             *045 LM00055    
                      WHENEVER LINK                                                               *046 LM00056    
                       UNLINK.(NAME1,NAME2,NOPRIV)                                                *047 LM00057    
                       SETFUL.                                                                    *048 LM00058    
                       PRMESS.(MESS8...5)                                                         *049 LM00059    
                       SETBCD.                                                                    *050 LM00060    
                       PRMESS.                                                                    *051 LM00061    
                       TRANSFER TO LOOP                                                           *052 LM00062    
      NOPRIV           SETFUL.                                                                    *053 LM00063    
                       PRMESS.(MESS7...5)                                                         *054 LM00064    
                       SETBCD.                                                                    *055 LM00065    
                       PRMESS.                                                                    *056 LM00066    
                       TRANSFER TO LOOP                                                           *057 LM00067    
                      END OF CONDITIONAL                                                          *058 LM00068    
                        DELFIL.(NAME1,NAME2,IOERR)                                                *059 LM00069    
                        SETFUL.                                                                   *060 LM00070    
                        PRMESS.(MESS4...3)                                                        *061 LM00071    
                        SETBCD.                                                                   *062 LM00072    
                        PRMESS.                                                                   *063 LM00073    
                     OTHERWISE                                                                    *064 LM00074    
                        WHENEVER .NOT.LINK,CHFILE.(NAME1,NAME2,-0,N1(I),N2(I),IOERR)              *065 LM00075    
                        SETFUL.                                                                   *066 LM00076    
                        PRMESS.(MESS5...4)                                                        *067 LM00077    
                        SETBCD.                                                                   *068 LM00078    
                        PRMESS.                                                                   *069 LM00079    
                     END OF CONDITIONAL                                                           *070 LM00080    
                  END OF CONDITIONAL                                                              *071 LM00081    
      LOOP        CONTINUE                                                                        *072 LM00082    
                  WHENEVER .NOT.FLAG                                                              *073 LM00083    
                     GETTM.(DATE,TIME)                                                            *074 LM00084    
                     SETFUL.                                                                      *075 LM00085    
                     PRMESA.(MESS6...4)                                                           *076 LM00086    
                     SETBCD.                                                                      *077 LM00087    
                     PRMESS.(DATE,TIME)                                                           *078 LM00088    
      END            PRMESS.                                                                      *079 LM00089    
                  END OF CONDITIONAL                                                              *080 LM00090    
                  CHNCOM.(0)                                                                      *081 LM00091    
                                                                                                       LM00092    
                                                                                                       LM00093    
                  INTERNAL FUNCTION                                                               *082 LM00094    
                  ENTRY TO PRINT.                                                                 *083 LM00095    
                                                                                                       LM00096    
                  SETFUL.                                                                         *084 LM00097    
                  PRMESA.(RED)                                                                    *085 LM00098    
                  SETBCD.                                                                         *086 LM00099    
                  PRMESA.(TAB,N1(I),N2(I),TAB)                                                    *087 LM00100    
                  GETTM.(DATE,TIME)                                                               *088 LM00101    
                  SETFUL.                                                                         *089 LM00102    
                  PRMESA.(BLACK)                                                                  *090 LM00103    
                  SETBCD.                                                                         *091 LM00104    
                  PRMESS.(DATE,TIME)                                                              *092 LM00105    
                  PRMESS.                                                                         *093 LM00106    
                  FLAG = 1B                                                                       *094 LM00107    
                                                                                                       LM00108    
                                                                                                       LM00109    
                  BFOPEN.(STATUS,NAME1,NAME2,B1(B1),B2(B2),-0,IOERR)                              *095 LM00110    
                                                                                                       LM00111    
      RLOOP1      BFREAD.(NAME1,NAME2,LM(25)...1,EOF,EOFCT,IOERR)                                 *096 LM00112    
      RBACK1      WHENEVER LM(25).A.777777K6 .NE. 777777K6                                        *097 LM00113    
                    N = 14                                                                        *098 LM00114    
                    CARD = 1B                                                                     *099 LM00115    
                    BFREAD.(NAME1,NAME2,LM(24)...13,EOF,EOFCT,IOERR)                              *100 LM00116    
                  OTHERWISE                                                                       *101 LM00117    
                     CARD = 0B                                                                    *102 LM00118    
                     N = LM(25).A.777777K                                                         *103 LM00119    
                     M = -N                                                                       *104 LM00120    
                  END OF CONDITIONAL                                                              *105 LM00121    
                                                                                                       LM00122    
                                                                                                       LM00123    
                  WHENEVER N .G. MAXLEN                                                           *106 LM00124    
                      SETFUL.                                                                     *107 LM00125    
                      PRMESS.(MESS1...7)                                                          *108 LM00126    
                      SETBCD.                                                                     *109 LM00127    
                      LMERR = 1B                                                                  *110 LM00128    
                      M = -MAXLEN                                                                 *111 LM00129    
                      N = MAXLEN                                                                  *112 LM00130    
                  OTHERWISE                                                                       *113 LM00131    
                     LMERR = 0B                                                                   *114 LM00132    
                  END OF CONDITIONAL                                                              *115 LM00133    
                                                                                                       LM00134    
                                                                                                       LM00135    
                                                                                                       LM00136    
                  WHENEVER CARD                                                                   *116 LM00137    
                     M = -12                                                                      *117 LM00138    
                     PRMESS.(LM(25)...M)                                                          *118 LM00139    
                     TRANSFER TO RLOOP1                                                           *119 LM00140    
                  OTHERWISE                                                                       *120 LM00141    
                     BFREAD.(NAME1,NAME2,LM(24)...N,EOF,EOFCT,IOERR)                              *121 LM00142    
                     PRMESS.(LM(24)...M)                                                          *122 LM00143    
                     BFREAD.(NAME1,NAME2,LM(25)...1,EOF,EOFCT,IOERR)                              *123 LM00144    
                     WHENEVER LM(25).A.777777K6 .NE. 777777K6                                     *124 LM00145    
                        WHENEVER .NOT.LMERR                                                       *125 LM00146    
                          SETFUL.                                                                 *126 LM00147    
                          PRMESS.(MESS2...7)                                                      *127 LM00148    
                          SETBCD.                                                                 *128 LM00149    
                        END OF CONDITIONAL                                                        *129 LM00150    
      RLOOP2            BFREAD.(NAME1,NAME2,LM(25)...1,EOF,EOFCT,IOERR)                           *130 LM00151    
                        WHENEVER LM(25).A.777777K6 .NE. 777777K6, TRANSFER TO RLOOP2              *131 LM00152    
                        TRANSFER TO RBACK1                                                        *132 LM00153    
                     OTHERWISE                                                                    *133 LM00154    
                        TRANSFER TO RBACK1                                                        *134 LM00155    
                     END OF CONDITIONAL                                                           *135 LM00156    
                  END OF CONDITIONAL                                                              *136 LM00157    
                                                                                                       LM00158    
                                                                                                       LM00159    
      EOF         PRMESS.                                                                         *137 LM00160    
                  BFCLOS.(NAME1,NAME2,IOERR)                                                      *138 LM00161    
                  FUNCTION RETURN                                                                 *139 LM00162    
                                                                                                       LM00163    
                  END OF FUNCTION                                                                 *140 LM00164    
                                                                                                       LM00165    
      IOERR       PRDIAG.                                                                         *141 LM00166    
                  FLAG = 1B                                                                       *142 LM00167    
                  TRANSFER TO END                                                                 *143 LM00168    
                                                                                                       LM00169    
                  INTERNAL FUNCTION                                                               *144 LM00170    
                  ENTRY TO ASK.                                                                   *145 LM00171    
                  SETFUL.                                                                         *146 LM00172    
                  PRMESA.(MESS3...4)                                                              *147 LM00173    
                  SETBCD.                                                                         *148 LM00174    
                  RDFLXC.(ANS,6)                                                                  *149 LM00175    
                  WHENEVER RJUST.(ANS) .E. $   YES$, FUNCTION RETURN 1B                           *150 LM00176    
                  FUNCTION RETURN 0B                                                              *151 LM00177    
                                                                                                       LM00178    
                                                                                                       LM00179    
                  END OF FUNCTION                                                                 *152 LM00180    
                                                                                                       LM00181    
                                                                                                       LM00182    
      ERR         WHENEVER  CODE .E. 9                                                            *153 LM00183    
                    STATUS = $RW$                                                                 *154 LM00184    
                    WHENEVER .NOT.LINK, CHFILE.(N1(I),N2(I),-0,NAME1,NAME2,IOERR)                 *155 LM00185    
                    TRANSFER TO ROOM                                                              *156 LM00186    
                  OTHERWISE                                                                       *157 LM00187    
                    TRANSFER TO IOERR                                                             *158 LM00188    
                  END OF CONDITIONAL                                                              *159 LM00189    
                  END OF PROGRAM                                                                  *160 LM00190    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01026 TRANSFER VECTOR LENGTH  00025 PROGRAM BEGINS    00226
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ANS    00045   1        EOF    00034   4        LOOP   00037   4        MODE   00031   1        RBACK1 00041   4  
      ASKLOC 00032   4        ERR    00035   4        MAXLEN 00114 A 1        M      00164   1        RED    00177 A 1  
      B1     00046 A 1        FLAG   00055 A 2        MESS1  00123 A 1        N1     00167 A 1        RLOOP1 00042   4  
      B2     00047 A 1        F      00056 A 1        MESS2  00132 A 1        N2     00172 A 1        RLOOP2 00043   4  
      BLACK  00050 A 1        IOERR  00036   4        MESS3  00136 A 1        NAME1  00173   1        ROOM   00044   4  
      CARD   00051 A 2        I      00057   1        MESS4  00141 A 1        NAME2  00174   1        STATUS 00200 A 1  
      CODE   00052   1        LENGTH 00031 A 1        MESS5  00145 A 1        NFILES 00175 A 1        TAB    00201 A 1  
      DATE   00053   1        LINK   00060   2        MESS6  00151 A 1        NOPRIV 00040   4        TIME   00202   1  
      END    00033   4        LMERR  00061 A 2        MESS7  00156 A 1        N      00176   1        T      00203 A 1  
      EOFCT  00054   1        LM     00113 A 1        MESS8  00163 A 1                                                  
0FUNCTION DICTIONARY    
      BFCLOS 00000   1        BFOPEN 00001   1        BFREAD 00002   1        CHFILE 00003   1        CHNCOM 00004   1  
      DELETE 00005   1        DELFIL 00006   1        EXIT   00007   1        FSTATE 00010   1        GETBUF 00011   1  
      GETTM  00012   1        .SETUP 00013   1        PRDIAG 00014   1        PRMESA 00015   1        PRMESS 00016   1  
      RDFLXC 00017   1        RJUST  00020   1        SETBCD 00021   1        SETBRK 00022   1        SETFUL 00023   1  
      UNLINK 00024   1        ASK    00025   2        PRINT  00026   1                                                  
0ABSOLUTE CONSTANTS     
 00223 -116660606060     00214 +000000000011     00224 -206060702562     00212 +000000000006     00215 +000000000014    
 00213 +000000000007     00221 +000000777777     00216 +000000000015     00217 +000000000016     00225 -377777000000    
 00210 +000000000004     00207 +000000000003     00211 +000000000005     00206 +000000000002     00204 +000000000000    
 00220 +000000000660     00205 +000000000001     00222 +233000000000                                                    
0STATEMENT DICTIONARY   
 00032 TXL -300351000346       00033 TXL -300453000452       00034 TXL -300710000707       00035 TXL -300772000767      
 00036 TXL -300730000727       00037 TXL -300436000435       00040 TXL -300366000365       00041 TXL -300556000550      
 00042 TXL -300550000541       00043 TXL -300675000666       00044 TXL -300346000345                                    
0PROGRAM    
                 N'R                                                                001  LM00006
                 V'S MAXLEN = 19                                                    002  LM00007
 00226 TSX +0 07400 4 00013    00114     +0 00000 0 00023                                                               
                 V'S NFILES = 3                                                     003  LM00008
 00175     +0 00000 0 00003                                                                                             
                 V'S N1 = $  MAIL$,$URGENT$,$URGENT$                                004  LM00009
 00165     -2 45127 2 54563    00166     -2 45127 2 54563    00167     -2 06044 2 13143                                 
                 V'S N2 = $   BOX$,$  MAIL$,$  POST$                                005  LM00010
 00170     -2 06047 4 66263    00171     -2 06044 2 13143    00172     -2 06060 2 24667                                 
                 V'S T = $(TEMP)$                                                   006  LM00011
 00203     -3 46325 4 44734                                                                                             
                 V'S F = $(FILE)$                                                   007  LM00012
 00056     -3 42631 4 32534                                                                                             
                 V'S STATUS = $R$                                                   008  LM00013
 00200     -1 16060 6 06060                                                                                             
                 BOOLEAN CARD,ASK.,FLAG,LMERR,LINK                                  009  LM00014
                 V'S FLAG = 0B                                                      010  LM00015
 00055     +0 00000 0 00000                                                                                             
                 V'S CARD = 0B                                                      011  LM00016
 00051     +0 00000 0 00000                                                                                             
                 V'S LMERR = 0B                                                     012  LM00017
 00061     +0 00000 0 00000                                                                                             
                 V'S RED = 013300570057K                                            013  LM00020
 00177     +0 13300 5 70057                                                                                             
                 V'S BLACK = 013200570057K                                          014  LM00021
 00050     +0 13200 5 70057                                                                                             
                 V'S TAB = 725757575757K                                            015  LM00022
 00201     -3 25757 5 75757                                                                                             
                 V'S MESS1 = $0*0*0*0*0 0 0L1I1N1E0 1T1O1O0 1L1O1N1G0.$             016  LM00023
 00115     +0 12700 3 36060    00116     +0 14301 4 60145    00117     +0 14601 4 60060    00120     +0 12500 6 00163   
 00121     +0 04301 3 10145    00122     +0 05400 6 00060    00123     +0 05400 5 40054                                 
                 V'S MESS2 = $0*0*0*0*0 0 0L1I1N1E1M1A1R1K0 1E1R1R1O1R0.$           017  LM00024
 00124     +0 14601 5 10033    00125     +0 12501 5 10151    00126     +0 15101 4 20060    00127     +0 12501 4 40121   
 00130     +0 04301 3 10145    00131     +0 05400 6 00060    00132     +0 05400 5 40054                                 
                 V'S MESS3 = $0D1E1L1E1T1E0 1I1T$,015600600060K                     018  LM00025
 00133     +0 15600 6 00060    00134     +0 06001 3 10163    00135     +0 12501 6 30125    00136     +0 02401 2 50143   
                 V'S MESS4 = $0D1E1L1E1T1E1D0.$                                     019  LM00026
 00137     +0 12400 3 36060    00140     +0 12501 6 30125    00141     +0 02401 2 50143                                 
                 V'S MESS5 = $0N1O1T0 1D1E1L1E1T1E1D0.$                             020  LM00027
 00142     +0 12501 2 40033    00143     +0 14301 2 50163    00144     +0 06001 2 40125    00145     +0 04501 4 60163   
                 V'S MESS6 = $0 0N1O0 1M1A1I1L0 1A1T0 $                             021  LM00028
 00146     +0 12101 6 30060    00147     +0 13101 4 30060    00150     +0 06001 4 40121    00151     +0 06000 4 50146   
                 V'S MESS7 = $0F1I1L1E0 1I1S0 1A0 1L1I1N1K0.$                       022  LM00029
 00152     +0 14501 4 20033    00153     +0 06001 4 30131    00154     +0 16200 6 00121    00155     +0 12500 6 00131   
 00156     +0 02601 3 10143                                                                                             
                 V'S MESS8 = $0F1I1L1E0 1U1N1L1I1N1K1E1D0.$                         023  LM00030
 00157     +0 12400 3 36060    00160     +0 14501 4 20125    00161     +0 14501 4 30131    00162     +0 12500 6 00164   
 00163     +0 02601 3 10143                                                                                             
                 D'N LM(25),B1(0),B2(0),LENGTH(1)                                   024  LM00032
                 E'E (MODE,LENGTH)                                                  025  LM00033
                 GETBUF.(B1,432)                                                    026  LM00034
 00227 TSX +0 07400 4 00011    00230 TXH +3 00000 0 00046    00231 TXH +3 00000 0 00220                                 
                 GETBUF.(B2,432)                                                    027  LM00035
 00232 TSX +0 07400 4 00011    00233 TXH +3 00000 0 00047    00234 TXH +3 00000 0 00220                                 
                 PRMESS.                                                            028  LM00036
 00235 TSX +0 07400 4 00016                                                                                             
                 SETBRK.(ASKLOC)                                                    029  LM00037
 00236 TSX +0 07400 4 00022    00237 TXH +3 00000 0 00032                                                               
                 T'H LOOP, FOR I = 0,1,I.GE.NFILES                                  030  LM00040
 00240 CLA +0 50000 0 00204    00241 STO +0 60100 0 00057    00242 TRA +0 02000 0 00246    00243 CLA +0 50000 0 00057   
 00244 ADD +0 40000 0 00205    00245 STO +0 60100 0 00057    00246 CLA +0 50000 0 00057    00247 SUB +0 40200 0 00175   
 00250 TZE +0 10000 0 00436    00251 TPL +0 12000 0 00436                                                               
                 FSTATE.(N1(I),N2(I),LENGTH(1)...2,LOOP)                            031  LM00041
 00252 CLA +0 50000 0 00057    00253 SUB +0 40200 0 00254    00254 TXH +3 00000 0 00172    00255 STA +0 62100 0 00264   
 00256 CLA +0 50000 0 00057    00257 SUB +0 40200 0 00260    00260 TXH +3 00000 0 00167    00261 STA +0 62100 0 00263   
 00262 TSX +0 07400 4 00010    00263 TXH +3 00000 0 00000    00264 TXH +3 00000 0 00000    00265 TIX +2 00206 0 00030   
 00266 TXH +3 00000 0 00037                                                                                             
                 W'R LENGTH(1).NE.0                                                 032  LM00042
 00267 CLA +0 50000 0 00030    00270 SUB +0 40200 0 00204    00271 TZE +0 10000 0 00435                                 
                   W'R MODE .L. 0                                                   033  LM00043
 00272 CLA +0 50000 0 00031    00273 SUB +0 40200 0 00204    00274 TZE +0 10000 0 00306    00275 TPL +0 12000 0 00306   
                     NAME1 = N1(I)                                                  034  LM00044
 00276 LXA +0 53400 2 00057    00277 CLA +0 50000 2 00167    00300 STO +0 60100 0 00173                                 
                     NAME2 = N2(I)                                                  035  LM00045
 00301 CLA +0 50000 2 00172    00302 STO +0 60100 0 00174                                                               
                     LINK = 1B                                                      036  LM00046
 00303 CLA +0 50000 0 00205    00304 STO +0 60100 0 00060                                                               
                   O'E                                                              037  LM00047
 00305 TRA +0 02000 0 00314                                                                                             
                     LINK = 0B                                                      038  LM00048
 00306 CLA +0 50000 0 00204    00307 STO +0 60100 0 00060                                                               
                     NAME1 = T                                                      039  LM00049
 00310 CLA +0 50000 0 00203    00311 STO +0 60100 0 00173                                                               
                     NAME2 = F                                                      040  LM00050
 00312 CLA +0 50000 0 00056    00313 STO +0 60100 0 00174                                                               
                   E'L                                                              041  LM00051
                    W'R .NOT.LINK, DELETE.(NAME1,NAME2,0,IOERR)                     042  LM00052
 00314 ZET +0 52000 0 00060    00315 TRA +0 02000 0 00323    00316 TSX +0 07400 4 00005    00317 TXH +3 00000 0 00173   
 00320 TXH +3 00000 0 00174    00321 TXH +3 00000 0 00204    00322 TXH +3 00000 0 00036                                 
                    W'R .NOT.LINK,CHFILE.(N1(I),N2(I),0,NAME1,NAME2,ERR,CODE)       043  LM00053
 00323 ZET +0 52000 0 00060    00324 TRA +0 02000 0 00345    00325 CLA +0 50000 0 00057    00326 SUB +0 40200 0 00327   
 00327 TXH +3 00000 0 00172    00330 STA +0 62100 0 00337    00331 CLA +0 50000 0 00057    00332 SUB +0 40200 0 00333   
 00333 TXH +3 00000 0 00167    00334 STA +0 62100 0 00336    00335 TSX +0 07400 4 00003    00336 TXH +3 00000 0 00000   
 00337 TXH +3 00000 0 00000    00340 TXH +3 00000 0 00204    00341 TXH +3 00000 0 00173    00342 TXH +3 00000 0 00174   
 00343 TXH +3 00000 0 00035    00344 TXH +3 00000 0 00052                                                               
      ROOM          PRINT.                                                          044  LM00054
 00345 TSX +0 07400 4 00026                                                                                             
      ASKLOC        W'R ASK.(0)                                                     045  LM00055
 00346 TSX +0 07400 4 00025    00347 TXH +3 00000 0 00204    00350 TZE +0 10000 0 00405                                 
                     W'R LINK                                                       046  LM00056
 00351 NZT -0 52000 0 00060    00352 TRA +0 02000 0 00373                                                               
                      UNLINK.(NAME1,NAME2,NOPRIV)                                   047  LM00057
 00353 TSX +0 07400 4 00024    00354 TXH +3 00000 0 00173    00355 TXH +3 00000 0 00174    00356 TXH +3 00000 0 00040   
                      SETFUL.                                                       048  LM00058
 00357 TSX +0 07400 4 00023                                                                                             
                      PRMESS.(MESS8...5)                                            049  LM00059
 00360 TSX +0 07400 4 00016    00361 TIX +2 00211 0 00163                                                               
                      SETBCD.                                                       050  LM00060
 00362 TSX +0 07400 4 00021                                                                                             
                      PRMESS.                                                       051  LM00061
 00363 TSX +0 07400 4 00016                                                                                             
                      T'O LOOP                                                      052  LM00062
 00364 TRA +0 02000 0 00037                                                                                             
      NOPRIV          SETFUL.                                                       053  LM00063
 00365 TSX +0 07400 4 00023                                                                                             
                      PRMESS.(MESS7...5)                                            054  LM00064
 00366 TSX +0 07400 4 00016    00367 TIX +2 00211 0 00156                                                               
                      SETBCD.                                                       055  LM00065
 00370 TSX +0 07400 4 00021                                                                                             
                      PRMESS.                                                       056  LM00066
 00371 TSX +0 07400 4 00016                                                                                             
                      T'O LOOP                                                      057  LM00067
 00372 TRA +0 02000 0 00037                                                                                             
                     E'L                                                            058  LM00068
                       DELFIL.(NAME1,NAME2,IOERR)                                   059  LM00069
 00373 TSX +0 07400 4 00006    00374 TXH +3 00000 0 00173    00375 TXH +3 00000 0 00174    00376 TXH +3 00000 0 00036   
                       SETFUL.                                                      060  LM00070
 00377 TSX +0 07400 4 00023                                                                                             
                       PRMESS.(MESS4...3)                                           061  LM00071
 00400 TSX +0 07400 4 00016    00401 TIX +2 00207 0 00141                                                               
                       SETBCD.                                                      062  LM00072
 00402 TSX +0 07400 4 00021                                                                                             
                       PRMESS.                                                      063  LM00073
 00403 TSX +0 07400 4 00016                                                                                             
                    O'E                                                             064  LM00074
 00404 TRA +0 02000 0 00435                                                                                             
                       W'R .NOT.LINK,CHFILE.(NAME1,NAME2,-0,N1(I),N2(I),IOERR)      065  LM00075
 00405 ZET +0 52000 0 00060    00406 TRA +0 02000 0 00430    00407 CLA +0 50000 0 00057    00410 SUB +0 40200 0 00411   
 00411 TXH +3 00000 0 00172    00412 STA +0 62100 0 00426    00413 CLA +0 50000 0 00057    00414 SUB +0 40200 0 00415   
 00415 TXH +3 00000 0 00167    00416 STA +0 62100 0 00425    00417 CLS +0 50200 0 00204    00420 STO +0 60100 0 01023   
 00421 TSX +0 07400 4 00003    00422 TXH +3 00000 0 00173    00423 TXH +3 00000 0 00174    00424 TXH +3 00000 0 01023   
 00425 TXH +3 00000 0 00000    00426 TXH +3 00000 0 00000    00427 TXH +3 00000 0 00036                                 
                       SETFUL.                                                      066  LM00076
 00430 TSX +0 07400 4 00023                                                                                             
                       PRMESS.(MESS5...4)                                           067  LM00077
 00431 TSX +0 07400 4 00016    00432 TIX +2 00210 0 00145                                                               
                       SETBCD.                                                      068  LM00078
 00433 TSX +0 07400 4 00021                                                                                             
                       PRMESS.                                                      069  LM00079
 00434 TSX +0 07400 4 00016                                                                                             
                    E'L                                                             070  LM00080
                 E'L                                                                071  LM00081
      LOOP       CONTINUE                                                           072  LM00082
 00435 TRA +0 02000 0 00243                                                                                             
                 W'R .NOT.FLAG                                                      073  LM00083
 00436 ZET +0 52000 0 00055    00437 TRA +0 02000 0 00453                                                               
                    GETTM.(DATE,TIME)                                               074  LM00084
 00440 TSX +0 07400 4 00012    00441 TXH +3 00000 0 00053    00442 TXH +3 00000 0 00202                                 
                    SETFUL.                                                         075  LM00085
 00443 TSX +0 07400 4 00023                                                                                             
                    PRMESA.(MESS6...4)                                              076  LM00086
 00444 TSX +0 07400 4 00015    00445 TIX +2 00210 0 00151                                                               
                    SETBCD.                                                         077  LM00087
 00446 TSX +0 07400 4 00021                                                                                             
                    PRMESS.(DATE,TIME)                                              078  LM00088
 00447 TSX +0 07400 4 00016    00450 TXH +3 00000 0 00053    00451 TXH +3 00000 0 00202                                 
      END           PRMESS.                                                         079  LM00089
 00452 TSX +0 07400 4 00016                                                                                             
                 E'L                                                                080  LM00090
                 CHNCOM.(0)                                                         081  LM00091
 00453 TSX +0 07400 4 00004    00454 TXH +3 00000 0 00204                                                               
                 I'N                                                                082  LM00094
 00455 TRA +0 02000 0 00727                                                                                             
                 E'O PRINT.                                                         083  LM00095
 00456 TRA +0 02000 0 00461    00026 TTR +0 02100 0 00457    00457 SXA +0 63400 2 00716    00460 TSX +0 07400 2 00716   
                 SETFUL.                                                            084  LM00097
 00461 TSX +0 07400 4 00023                                                                                             
                 PRMESA.(RED)                                                       085  LM00098
 00462 TSX +0 07400 4 00015    00463 TXH +3 00000 0 00177                                                               
                 SETBCD.                                                            086  LM00099
 00464 TSX +0 07400 4 00021                                                                                             
                 PRMESA.(TAB,N1(I),N2(I),TAB)                                       087  LM00100
 00465 CLA +0 50000 0 00057    00466 SUB +0 40200 0 00467    00467 TXH +3 00000 0 00172    00470 STA +0 62100 0 00500   
 00471 CLA +0 50000 0 00057    00472 SUB +0 40200 0 00473    00473 TXH +3 00000 0 00167    00474 STA +0 62100 0 00477   
 00475 TSX +0 07400 4 00015    00476 TXH +3 00000 0 00201    00477 TXH +3 00000 0 00000    00500 TXH +3 00000 0 00000   
 00501 TXH +3 00000 0 00201                                                                                             
                 GETTM.(DATE,TIME)                                                  088  LM00101
 00502 TSX +0 07400 4 00012    00503 TXH +3 00000 0 00053    00504 TXH +3 00000 0 00202                                 
                 SETFUL.                                                            089  LM00102
 00505 TSX +0 07400 4 00023                                                                                             
                 PRMESA.(BLACK)                                                     090  LM00103
 00506 TSX +0 07400 4 00015    00507 TXH +3 00000 0 00050                                                               
                 SETBCD.                                                            091  LM00104
 00510 TSX +0 07400 4 00021                                                                                             
                 PRMESS.(DATE,TIME)                                                 092  LM00105
 00511 TSX +0 07400 4 00016    00512 TXH +3 00000 0 00053    00513 TXH +3 00000 0 00202                                 
                 PRMESS.                                                            093  LM00106
 00514 TSX +0 07400 4 00016                                                                                             
                 FLAG = 1B                                                          094  LM00107
 00515 CLA +0 50000 0 00205    00516 STO +0 60100 0 00055                                                               
                 BFOPEN.(STATUS,NAME1,NAME2,B1(B1),B2(B2),-0,IOERR)                 095  LM00110
 00517 CLS +0 50200 0 00204    00520 STO +0 60100 0 00726    00521 CLA +0 50000 0 00047    00522 SUB +0 40200 0 00523   
 00523 TXH +3 00000 0 00047    00524 STA +0 62100 0 00536    00525 CLA +0 50000 0 00046    00526 SUB +0 40200 0 00527   
 00527 TXH +3 00000 0 00046    00530 STA +0 62100 0 00535    00531 TSX +0 07400 4 00001    00532 TXH +3 00000 0 00200   
 00533 TXH +3 00000 0 00173    00534 TXH +3 00000 0 00174    00535 TXH +3 00000 0 00000    00536 TXH +3 00000 0 00000   
 00537 TXH +3 00000 0 00726    00540 TXH +3 00000 0 00036                                                               
      RLOOP1     BFREAD.(NAME1,NAME2,LM(25)...1,EOF,EOFCT,IOERR)                    096  LM00112
 00541 TSX +0 07400 4 00002    00542 TXH +3 00000 0 00173    00543 TXH +3 00000 0 00174    00544 TIX +2 00205 0 00062   
 00545 TXH +3 00000 0 00034    00546 TXH +3 00000 0 00054    00547 TXH +3 00000 0 00036                                 
      RBACK1     W'R LM(25).A.777777K6 .NE. 777777K6                                097  LM00113
 00550 CAL -0 50000 0 00062    00551 ANA -0 32000 0 00225    00552 SLW +0 60200 0 00726    00553 CLA +0 50000 0 00726   
 00554 SUB +0 40200 0 00225    00555 TZE +0 10000 0 00572                                                               
                   N = 14                                                           098  LM00114
 00556 CLA +0 50000 0 00217    00557 STO +0 60100 0 00176                                                               
                   CARD = 1B                                                        099  LM00115
 00560 CLA +0 50000 0 00205    00561 STO +0 60100 0 00051                                                               
                   BFREAD.(NAME1,NAME2,LM(24)...13,EOF,EOFCT,IOERR)                 100  LM00116
 00562 TSX +0 07400 4 00002    00563 TXH +3 00000 0 00173    00564 TXH +3 00000 0 00174    00565 TIX +2 00216 0 00063   
 00566 TXH +3 00000 0 00034    00567 TXH +3 00000 0 00054    00570 TXH +3 00000 0 00036                                 
                 O'E                                                                101  LM00117
 00571 TRA +0 02000 0 00601                                                                                             
                    CARD = 0B                                                       102  LM00118
 00572 CLA +0 50000 0 00204    00573 STO +0 60100 0 00051                                                               
                    N = LM(25).A.777777K                                            103  LM00119
 00574 CAL -0 50000 0 00062    00575 ANA -0 32000 0 00221    00576 SLW +0 60200 0 00176                                 
                    M = -N                                                          104  LM00120
 00577 CLS +0 50200 0 00176    00600 STO +0 60100 0 00164                                                               
                 E'L                                                                105  LM00121
                 W'R N .G. MAXLEN                                                   106  LM00124
 00601 CLA +0 50000 0 00176    00602 SUB +0 40200 0 00114    00603 TZE +0 10000 0 00620    00604 TMI -0 12000 0 00620   
                     SETFUL.                                                        107  LM00125
 00605 TSX +0 07400 4 00023                                                                                             
                     PRMESS.(MESS1...7)                                             108  LM00126
 00606 TSX +0 07400 4 00016    00607 TIX +2 00213 0 00123                                                               
                     SETBCD.                                                        109  LM00127
 00610 TSX +0 07400 4 00021                                                                                             
                     LMERR = 1B                                                     110  LM00128
 00611 CLA +0 50000 0 00205    00612 STO +0 60100 0 00061                                                               
                     M = -MAXLEN                                                    111  LM00129
 00613 CLS +0 50200 0 00114    00614 STO +0 60100 0 00164                                                               
                     N = MAXLEN                                                     112  LM00130
 00615 CLA +0 50000 0 00114    00616 STO +0 60100 0 00176                                                               
                 O'E                                                                113  LM00131
 00617 TRA +0 02000 0 00622                                                                                             
                    LMERR = 0B                                                      114  LM00132
 00620 CLA +0 50000 0 00204    00621 STO +0 60100 0 00061                                                               
                 E'L                                                                115  LM00133
                 W'R CARD                                                           116  LM00137
 00622 NZT -0 52000 0 00051    00623 TRA +0 02000 0 00632                                                               
                    M = -12                                                         117  LM00138
 00624 CLS +0 50200 0 00215    00625 STO +0 60100 0 00164                                                               
                    PRMESS.(LM(25)...M)                                             118  LM00139
 00626 TSX +0 07400 4 00016    00627 TIX +2 00164 0 00062                                                               
                    T'O RLOOP1                                                      119  LM00140
 00630 TRA +0 02000 0 00042                                                                                             
                 O'E                                                                120  LM00141
 00631 TRA +0 02000 0 00707                                                                                             
                    BFREAD.(NAME1,NAME2,LM(24)...N,EOF,EOFCT,IOERR)                 121  LM00142
 00632 TSX +0 07400 4 00002    00633 TXH +3 00000 0 00173    00634 TXH +3 00000 0 00174    00635 TIX +2 00176 0 00063   
 00636 TXH +3 00000 0 00034    00637 TXH +3 00000 0 00054    00640 TXH +3 00000 0 00036                                 
                    PRMESS.(LM(24)...M)                                             122  LM00143
 00641 TSX +0 07400 4 00016    00642 TIX +2 00164 0 00063                                                               
                    BFREAD.(NAME1,NAME2,LM(25)...1,EOF,EOFCT,IOERR)                 123  LM00144
 00643 TSX +0 07400 4 00002    00644 TXH +3 00000 0 00173    00645 TXH +3 00000 0 00174    00646 TIX +2 00205 0 00062   
 00647 TXH +3 00000 0 00034    00650 TXH +3 00000 0 00054    00651 TXH +3 00000 0 00036                                 
                    W'R LM(25).A.777777K6 .NE. 777777K6                             124  LM00145
 00652 CAL -0 50000 0 00062    00653 ANA -0 32000 0 00225    00654 SLW +0 60200 0 00726    00655 CLA +0 50000 0 00726   
 00656 SUB +0 40200 0 00225    00657 TZE +0 10000 0 00706                                                               
                       W'R .NOT.LMERR                                               125  LM00146
 00660 ZET +0 52000 0 00061    00661 TRA +0 02000 0 00666                                                               
                         SETFUL.                                                    126  LM00147
 00662 TSX +0 07400 4 00023                                                                                             
                         PRMESS.(MESS2...7)                                         127  LM00148
 00663 TSX +0 07400 4 00016    00664 TIX +2 00213 0 00132                                                               
                         SETBCD.                                                    128  LM00149
 00665 TSX +0 07400 4 00021                                                                                             
                       E'L                                                          129  LM00150
      RLOOP2           BFREAD.(NAME1,NAME2,LM(25)...1,EOF,EOFCT,IOERR)              130  LM00151
 00666 TSX +0 07400 4 00002    00667 TXH +3 00000 0 00173    00670 TXH +3 00000 0 00174    00671 TIX +2 00205 0 00062   
 00672 TXH +3 00000 0 00034    00673 TXH +3 00000 0 00054    00674 TXH +3 00000 0 00036                                 
                       W'R LM(25).A.777777K6 .NE. 777777K6, T'O RLOOP2              131  LM00152
 00675 CAL -0 50000 0 00062    00676 ANA -0 32000 0 00225    00677 SLW +0 60200 0 00726    00700 CLA +0 50000 0 00726   
 00701 SUB +0 40200 0 00225    00702 TZE +0 10000 0 00704    00703 TRA +0 02000 0 00043                                 
                       T'O RBACK1                                                   132  LM00153
 00704 TRA +0 02000 0 00041                                                                                             
                    O'E                                                             133  LM00154
 00705 TRA +0 02000 0 00707                                                                                             
                       T'O RBACK1                                                   134  LM00155
 00706 TRA +0 02000 0 00041                                                                                             
                    E'L                                                             135  LM00156
                 E'L                                                                136  LM00157
      EOF        PRMESS.                                                            137  LM00160
 00707 TSX +0 07400 4 00016                                                                                             
                 BFCLOS.(NAME1,NAME2,IOERR)                                         138  LM00161
 00710 TSX +0 07400 4 00000    00711 TXH +3 00000 0 00173    00712 TXH +3 00000 0 00174    00713 TXH +3 00000 0 00036   
                 F'N                                                                139  LM00162
 00714 TRA +0 02000 0 00722                                                                                             
                 E'N                                                                140  LM00164
 00715 TSX +0 07400 4 00007    00716 TXH +3 00000 0 00000    00717 SXD -0 63400 1 00716    00720 SXA +0 63400 4 00722   
 00721 TRA +0 02000 2 00001    00722 AXT +0 77400 4 00000    00723 LXA +0 53400 2 00716    00724 LXD -0 53400 1 00716   
 00725 TRA +0 02000 4 00001                                                                                             
      IOERR      PRDIAG.                                                            141  LM00166
 00727 TSX +0 07400 4 00014                                                                                             
                 FLAG = 1B                                                          142  LM00167
 00730 CLA +0 50000 0 00205    00731 STO +0 60100 0 00055                                                               
                 T'O END                                                            143  LM00168
 00732 TRA +0 02000 0 00033                                                                                             
                 I'N                                                                144  LM00170
 00733 TRA +0 02000 0 00767                                                                                             
                 E'O ASK.                                                           145  LM00171
 00734 TRA +0 02000 0 00737    00025 TTR +0 02100 0 00735    00735 SXA +0 63400 2 00757    00736 TSX +0 07400 2 00757   
                 SETFUL.                                                            146  LM00172
 00737 TSX +0 07400 4 00023                                                                                             
                 PRMESA.(MESS3...4)                                                 147  LM00173
 00740 TSX +0 07400 4 00015    00741 TIX +2 00210 0 00136                                                               
                 SETBCD.                                                            148  LM00174
 00742 TSX +0 07400 4 00021                                                                                             
                 RDFLXC.(ANS,6)                                                     149  LM00175
 00743 TSX +0 07400 4 00017    00744 TXH +3 00000 0 00045    00745 TXH +3 00000 0 00212                                 
                 W'R RJUST.(ANS) .E. $   YES$, F'N 1B                               150  LM00176
 00746 TSX +0 07400 4 00020    00747 TXH +3 00000 0 00045    00750 SUB +0 40200 0 00224    00751 TNZ -0 10000 0 00754   
 00752 CLA +0 50000 0 00205    00753 TRA +0 02000 0 00763                                                               
                 F'N 0B                                                             151  LM00177
 00754 CLA +0 50000 0 00204    00755 TRA +0 02000 0 00763                                                               
                 E'N                                                                152  LM00180
 00756 TSX +0 07400 4 00007    00757 TXH +3 00000 0 00000    00760 SXD -0 63400 1 00757    00761 SXA +0 63400 4 00763   
 00762 TRA +0 02000 2 00001    00763 AXT +0 77400 4 00000    00764 LXA +0 53400 2 00757    00765 LXD -0 53400 1 00757   
 00766 TRA +0 02000 4 00001                                                                                             
      ERR        W'R  CODE .E. 9                                                    153  LM00183
 00767 CLA +0 50000 0 00052    00770 SUB +0 40200 0 00214    00771 TNZ -0 10000 0 01021                                 
                   STATUS = $RW$                                                    154  LM00184
 00772 CLA +0 50000 0 00223    00773 STO +0 60100 0 00200                                                               
                   W'R .NOT.LINK, CHFILE.(N1(I),N2(I),-0,NAME1,NAME2,IOERR)         155  LM00185
 00774 ZET +0 52000 0 00060    00775 TRA +0 02000 0 01017    00776 CLS +0 50200 0 00204    00777 STO +0 60100 0 01023   
 01000 CLA +0 50000 0 00057    01001 SUB +0 40200 0 01002    01002 TXH +3 00000 0 00172    01003 STA +0 62100 0 01012   
 01004 CLA +0 50000 0 00057    01005 SUB +0 40200 0 01006    01006 TXH +3 00000 0 00167    01007 STA +0 62100 0 01011   
 01010 TSX +0 07400 4 00003    01011 TXH +3 00000 0 00000    01012 TXH +3 00000 0 00000    01013 TXH +3 00000 0 01023   
 01014 TXH +3 00000 0 00173    01015 TXH +3 00000 0 00174    01016 TXH +3 00000 0 00036                                 
                   T'O ROOM                                                         156  LM00186
 01017 TRA +0 02000 0 00044                                                                                             
                 O'E                                                                157  LM00187
 01020 TRA +0 02000 0 01022                                                                                             
                   T'O IOERR                                                        158  LM00188
 01021 TRA +0 02000 0 00036                                                                                             
                 E'L                                                                159  LM00189
                 E'M                                                                160  LM00190
 01022 TSX +0 07400 4 00007                                                                                             




    M.   BCD 10/12/70 1513.8    5184         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE      M.   MAD            01/26/70    1128.5
-                 
       SCD            PLOT OUT SCHEDULING QUEUES.                                                      LM00001    
                      7/13/66 - NOEL I. MORRIS                                                         LM00002    
                                                                                                       LM00003    
                  MODIFIED FOR SHORT 'M.' FORM BY R ROACH 10-15-67                                     LM00004    
                                                                                                       LM00005    
                  NORMAL MODE IS INTEGER                                                          *001 LM00006    
                  BOOLEAN PROBOK, LEVOK, MDOT                                                     *002 LM00007    
                                                                                                       LM00008    
                  VECTOR VALUES QLEN = 0, 0                                                       *003 LM00009    
                  EQUIVALENCE (FQLEN, QLEN)                                                       *004 LM00010    
                  FLOATING POINT FQLEN                                                            *005 LM00011    
                                                                                                       LM00012    
                  VECTOR VALUES MINUS1 = -1                                                       *006 LM00013    
                  VECTOR VALUES FENCE  = 777777777777K                                            *007 LM00014    
                  VECTOR VALUES COMMND = $COMMND$                                                 *008 LM00015    
                  VECTOR VALUES AVQLEN = $AVQLEN$                                                 *009 LM00016    
                  V'S  PLIST = $PLIST$                                                                 LM00017    
                  V'S  ULIST = $ULIST$                                                                 LM00018    
                  VECTOR VALUES  PROBN = $PROBN$                                                  *010 LM00019    
                  VECTOR VALUES  PROGN = $PROGN$                                                  *011 LM00020    
                  VECTOR VALUES  MAXLV = $MAXLV$                                                  *012 LM00021    
                  VECTOR VALUES WRKTIM = $WRKTIM$                                                 *013 LM00022    
                  VECTOR VALUES TIMLEV = $TIMLEV$                                                 *014 LM00023    
                  VECTOR VALUES UCLOCK = $UCLOCK$                                                 *015 LM00024    
                  VECTOR VALUES UCHARG = $UCHARG$                                                 *016 LM00025    
                  VECTOR VALUES NUSERS = $NUSERS$                                                 *017 LM00026    
                  VECTOR VALUES MXUSRS = $MXUSRS$                                                 *018 LM00027    
                  VECTOR VALUES TOTTIM = $TOTTIM$                                                 *019 LM00028    
                  VECTOR VALUES BKGTIM = $BKGTIM$                                                 *020 LM00029    
                  VECTOR VALUES SWPTIM = $SWPTIM$                                                 *021 LM00030    
                  VECTOR VALUES STRTIM = $STRTIM$                                                 *022 LM00031    
                  VECTOR VALUES     PB = $PB    $                                                 *023 LM00032    
                  VECTOR VALUES      N = $N$                                                      *024 LM00033    
                  VECTOR VALUES    MDOT = 1B                                                      *025 LM00034    
                  DIMENSION D1(1), D2(1), D3(1)                                                   *026 LM00035    
                  FLOATING POINT D0, D1, D2, D3                                                   *027 LM00036    
                                                                                                       LM00037    
                                                                                                       LM00038    
                                                                                                       LM00039    
                  VECTOR VALUES LEVEL ... LEVEL (50) = -1                                         *028 LM00040    
                  VECTOR VALUES   POS ...   POS (50) = -1                                         *029 LM00041    
                  VECTOR VALUES SPACE ... SPACE (10) = 606033575757K                              *030 LM00042    
                  VECTOR VALUES BLANK = 605757575757K                                             *031 LM00043    
                  VECTOR VALUES COMMA = 736057575757K                                             *032 LM00044    
                  VECTOR VALUES EQUAL = 601360575757K                                             *033 LM00045    
                                                                                                       LM00046    
                                                                                                       LM00047    
                                                                                                       LM00048    
                                                                                                       LM00049    
                      BEGINNING OF PROGRAM.                                                            LM00050    
                                                                                                       LM00051    
                  W'R COMARG.(0) .E. $    M.$                                                          LM00052    
                      MDOT = 1B                                                                        LM00053    
                  O'E                                                                                  LM00054    
                      MDOT = 0B                                                                        LM00055    
                  E'L                                                                                  LM00056    
                  PRMESS.                                                                         *034 LM00057    
                  SLTIM = COMARG. (1)                                                             *035 LM00058    
                  WHENEVER SLTIM .E. FENCE                                                        *036 LM00059    
                       SLTIM = 0                                                                  *037 LM00060    
                  OTHERWISE                                                                       *038 LM00061    
                       SLTIM = BCDEC. (SLTIM) * 60                                                *039 LM00062    
                  END OF CONDITIONAL                                                              *040 LM00063    
                                                                                                       LM00064    
                      GET COMMON LOCATION VALUES.                                                      LM00065    
                                                                                                       LM00066    
                  AVQLEN = COMLOC.(AVQLEN)                                                        *041 LM00067    
                  PLIST = COMLOC. (PLIST)                                                              LM00068    
                  ULIST = COMLOC. (ULIST)                                                              LM00069    
                  PROBN = COMLOC. (PROBN)                                                         *042 LM00070    
                  PROGN = COMLOC. (PROGN)                                                         *043 LM00071    
                  COMMND = COMLOC. (COMMND)                                                       *044 LM00072    
                  MAXLV = COMLOC. (MAXLV)                                                         *045 LM00073    
                  WRKTIM = COMLOC. (WRKTIM)                                                       *046 LM00074    
                  TIMLEV = COMLOC. (TIMLEV)                                                       *047 LM00075    
                  UCLOCK = COMLOC. (UCLOCK)                                                       *048 LM00076    
                  UCHARG = COMLOC. (UCHARG)                                                       *049 LM00077    
                  NUSERS = COMLOC. (NUSERS)                                                       *050 LM00078    
                  MXUSRS = COMLOC. (MXUSRS)                                                       *051 LM00079    
                  TOTTIM = COMLOC. (TOTTIM)                                                       *052 LM00080    
                  BKGTIM = COMLOC. (BKGTIM)                                                       *053 LM00081    
                  SWPTIM = COMLOC. (SWPTIM)                                                       *054 LM00082    
                  STRTIM = COMLOC.(STRTIM)                                                        *055 LM00083    
                     PB  = COMLOC.(PB)                                                            *056 LM00084    
                  N = COMLOC. (N)                                                                 *057 LM00085    
                  TIMNOW = GETIME.(0)                                                             *058 LM00086    
                                                                                                       LM00087    
                                                                                                       LM00088    
                      INITIALIZE QUEUES.                                                               LM00089    
                                                                                                       LM00090    
                  FIRST = 1                                                                       *059 LM00091    
      BEGIN       SPRAY. (MINUS1, LEVEL ... LEVEL (N), POS ... POS (N) )                          *060 LM00092    
                                                                                                       LM00093    
                                                                                                       LM00094    
                      PICK UP QUEUE POSITIONS.                                                         LM00095    
                                                                                                       LM00096    
                  TRANSFER TO SKIP                                                                *061 LM00097    
                  ****************                                                                     LM00098    
      SCD         THROUGH LEVLOP, FOR QLEV = 0, 1, QLEV .G. MAXLV                                 *062 LM00099    
                  STATEMENT LABEL SCD                                                             *063 LM00100    
                  NEXQ = QLEV                                                                     *064 LM00101    
                  QPOS = 1                                                                        *065 LM00102    
                                                                                                       LM00103    
      NEXT        NEXQ = GLOC. (PLIST+NEXQ)                                                       *066 LM00104    
                  USR = GLOC. (ULIST+NEXQ)                                                        *067 LM00105    
                  WHENEVER USR .NE. MINUS1                                                        *068 LM00106    
                       LEVEL (USR) = QLEV - 1                                                     *069 LM00107    
                       POS (USR) = QPOS                                                           *070 LM00108    
                       QPOS = QPOS + 1                                                            *071 LM00109    
                       TRANSFER TO NEXT                                                           *072 LM00110    
                  END OF CONDITIONAL                                                              *073 LM00111    
                                                                                                       LM00112    
      LEVLOP      CONTINUE                                                                        *074 LM00113    
      SKIP        CONTINUE                                                                        *075 LM00114    
                                                                                                       LM00115    
                                                                                                       LM00116    
                      GET AVERAGE QUEUE LENGTH AND PRINT.                                              LM00117    
                                                                                                       LM00118    
                  TIME = GTDYTM. (0)                                                              *076 LM00119    
                  FTIME. (TIME, DATE, TIME)                                                       *077 LM00120    
                  DATE = ((DATE) .A. 7777K8) .V.                                                  *078 LM00121    
                1      ((DATE .RS. 6) .A. 7777K2) .V. $00/00 $                                    *078 LM00122    
                  QLEN = GLOC. (AVQLEN )                                                          *079 LM00123    
                  FQLEN = (FQLEN / 1000.0) + 0.05                                                 *080 LM00124    
                  FLOTBC. (QLEN)                                                                  *081 LM00125    
                  PRMESS. ($AVG. QUEUE LENGTH AT$, DATE, TIME,                                    *082 LM00126    
                1      EQUAL, QLEN ... 2)                                                         *082 LM00127    
                                                                                                       LM00128    
                                                                                                       LM00129    
                      PRINT OUT THE NUMBER OF USERS.                                                   LM00130    
                 ..                                                                                    LM00131    
                  PRMESS.($USERS=$,CONV.(GLOC.(NUSERS)),$, MAX=$,                                 *083 LM00132    
                1  CONV.(GLOC.(MXUSRS)))                                                          *083 LM00133    
                  TEMP = GLOC.(TOTTIM)                                                            *084 LM00134    
                  D0 = TEMP - T0                                                                  *085 LM00135    
                  T0 = TEMP                                                                       *086 LM00136    
                  TEMP = GLOC.(BKGTIM)                                                            *087 LM00137    
                  D3 = TEMP - T3                                                                  *088 LM00138    
                  D3 = 100.*D3/D0 + .05                                                           *089 LM00139    
                  T3 = TEMP                                                                       *090 LM00140    
                  TEMP = GLOC.(SWPTIM)                                                            *091 LM00141    
                  D2 = TEMP - T2                                                                  *092 LM00142    
                  D2 = 100.*D2/D0 + .05                                                           *093 LM00143    
                  T2 = TEMP                                                                       *094 LM00144    
                  D1 = 100.15 - D2 - D3                                                           *095 LM00145    
                  FLOTBC. (D1)                                                                    *096 LM00146    
                  FLOTBC. (D2)                                                                    *097 LM00147    
                  FLOTBC. (D3)                                                                    *098 LM00148    
                                                                                                       LM00149    
                  WHENEVER FIRST .E. 0                                                            *099 LM00150    
                  PRMESS. ($GOOD =$, D1 ... 2, COMMA,                                             *100 LM00151    
                2          $SWAP =$, D2 ... 2, COMMA,                                             *100 LM00152    
                3          $OTHER=$, D3 ... 2)                                                    *100 LM00153    
                  END OF CONDITIONAL                                                              *101 LM00154    
                                                                                                       LM00155    
                                                                                                       LM00156    
                  THROUGH LOOP, FOR I = 0, 1, I .G. N                                             *102 LM00157    
                  PERCNT = GLOC. (PB + I)                                                         *103 LM00158    
                  WHENEVER PERCNT .E. 0, TRANSFER TO LOOP                                         *104 LM00159    
                                                                                                       LM00160    
                  WHENEVER I .E. 0                                                                *105 LM00161    
                       PROB = $ BACKG$                                                            *106 LM00162    
                       PROG = $ROUND $                                                            *107 LM00163    
                  OTHERWISE                                                                       *108 LM00164    
                       PROB = GLOC. (PROBN + I)                                                   *109 LM00165    
                       PROG = GLOC. (PROGN + I)                                                   *110 LM00166    
                  END OF CONDITIONAL                                                              *111 LM00167    
                                                                                                       LM00168    
                  STRT = GLOC. (STRTIM + I)                                                       *112 LM00169    
                  WRK = GLOC. (WRKTIM + I)                                                        *113 LM00170    
                                                                                                       LM00171    
                  REALP = (100 * WRK) / (TIMNOW - STRT)                                           *114 LM00172    
                                                                                                       LM00173    
                  PRMESS.(PROB,PROG,BLANK,BZEL.(HRMIN.(STRT)),BZEL.(HRMIN.(WRK)                   *115 LM00174    
                1  ), BZEL.(DERBC. (REALP)), BZEL.(DERBC. (PERCNT)))                              *115 LM00175    
                                                                                                       LM00176    
      LOOP        CONTINUE                                                                        *116 LM00177    
                  WHENEVER MDOT, TRANSFER TO SNORE                                                *117 LM00178    
                  PRMESS.                                                                         *118 LM00179    
                  PRMESS.                                                                         *119 LM00180    
                                                                                                       LM00181    
                                                                                                       LM00182    
                      PRINT OUT QUEUE POSITION CHART.                                                  LM00183    
                                                                                                       LM00184    
                  PRMESS. ( $     USER    COMMND WRKTIM TIMLEV UCLOCK U$,                         *120 LM00185    
                1      $SWAP   1  2  3  4  5  6  7  8  9$ )                                       *120 LM00186    
                  PRMESS.                                                                         *121 LM00187    
                                                                                                       LM00188    
                  THROUGH PRLOOP, FOR USR = 0, 1, USR .G. N                                       *122 LM00189    
                                                                                                       LM00190    
                  WHENEVER USR .E. 0                                                              *123 LM00191    
                       PROB = $ BACKG$                                                            *124 LM00192    
                       PROG = $ROUND $                                                            *125 LM00193    
                  OTHERWISE                                                                       *126 LM00194    
                       PROB = GLOC. (PROBN+USR)                                                   *127 LM00195    
                       PROG = GLOC. (PROGN+USR)                                                   *128 LM00196    
                  END OF CONDITIONAL                                                              *129 LM00197    
                  COM = GLOC. (COMMND+USR)                                                        *130 LM00198    
                  WHENEVER COM .E. 0, COM = $ $                                                   *131 LM00199    
                  LEVOK = LEVEL (USR) .NE. MINUS1                                                 *132 LM00200    
                  PROBOK = PROB .NE. 0                                                            *133 LM00201    
                                                                                                       LM00202    
                  WHENEVER LEVOK                                                                  *134 LM00203    
                       WHENEVER .NOT. PROBOK                                                      *135 LM00204    
                            PROB = $ $                                                            *136 LM00205    
                            PROG = $ $                                                            *137 LM00206    
                       END OF CONDITIONAL                                                         *138 LM00207    
                       WT = GLOC. (WRKTIM+USR) * 60                                               *139 LM00208    
                       TL = GLOC. (TIMLEV+USR) * 60                                               *140 LM00209    
                       TM = GLOC. (UCLOCK+USR) * 60                                               *141 LM00210    
                       TN = TM - GLOC. (UCHARG+USR) * 60                                          *142 LM00211    
                       PRMESS. (PROB, PROG, BLANK, COM, BLANK,                                    *143 LM00212    
                1           CTIME. (WT), BLANK, CTIME. (TL), BLANK,                               *143 LM00213    
                2                   CTIME. (TM), BLANK, CTIME. (TN),                              *143 LM00214    
                3           SPACE ... LEVEL (USR), CONV. (POS (USR) ) )                           *143 LM00215    
                  END OF CONDITIONAL                                                              *144 LM00216    
                                                                                                       LM00217    
      PRLOOP      CONTINUE                                                                        *145 LM00218    
                                                                                                       LM00219    
                                                                                                       LM00220    
                      EXIT TO CHNCOM.                                                                  LM00221    
                                                                                                       LM00222    
                  PRMESS.                                                                         *146 LM00223    
      SNORE       PRMESS.                                                                         *147 LM00224    
                  WHENEVER SLTIM .NE. 0                                                           *148 LM00225    
                       SNOOZE.(SLTIM,0)                                                           *149 LM00226    
                  OTHERWISE                                                                       *150 LM00227    
                       CHNCOM. (1)                                                                *151 LM00228    
                  END OF CONDITIONAL                                                              *152 LM00229    
                  PRMESS.                                                                         *153 LM00230    
                            FIRST = 0                                                             *154 LM00231    
                  TRANSFER TO BEGIN                                                               *155 LM00232    
                                                                                                       LM00233    
                                                                                                       LM00234    
                                                                                                       LM00235    
                      CONVERT TO BCD.                                                                  LM00236    
                                                                                                       LM00237    
                  INTERNAL FUNCTION (NUM)                                                         *156 LM00238    
                  ENTRY TO CONV.                                                                  *157 LM00239    
                  FUNCTION RETURN (BZEL. (DEFBC. (NUM) ) .A. 777777K) .V. 575757K6                *158 LM00240    
                  END OF FUNCTION                                                                 *159 LM00241    
                                                                                                       LM00242    
                                                                                                       LM00243    
                      CONVERT TIME TO BCD.                                                             LM00244    
                                                                                                       LM00245    
                  INTERNAL FUNCTION (NUM)                                                         *160 LM00246    
                  ENTRY TO CTIME.                                                                 *161 LM00247    
                  FUNCTION RETURN BZEL. (MINS. (NUM) )                                            *162 LM00248    
                  END OF FUNCTION                                                                 *163 LM00249    
                                                                                                       LM00250    
                                                                                                       LM00251    
                 ..   FLOATING POINT TO BCD.                                                           LM00252    
                 ..                                                                                    LM00253    
                  INTERNAL FUNCTION (NUM)                                                         *164 LM00254    
                  ENTRY TO FLOTBC.                                                                *165 LM00255    
                  FIX. (NUM, NUM, NUM (1))                                                        *166 LM00256    
                  NUM = CONV. (NUM)                                                               *167 LM00257    
                  NUM (1) = (FRACBC.(NUM(1)).RS.6) .A. 77K8 .V. 330057575757K                     *168 LM00258    
      




MFDCHK   BCD 10/12/70 1513.8    9927         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  MFDCHK   MAD            03/15/69    1949.5
-                 
      MFDCHK      ADAPTED FROM DRMCHK (BY D. ANDERSON) BY R. ROACH                                     LM00001    
                  NORMAL MODE IS INTEGER                                                          *001 LM00002    
                  VECTOR VALUES R=$R$                                                             *002 LM00003    
                  VECTOR VALUES MFD=$M.F.D.$                                                      *003 LM00004    
                  VECTOR VALUES FI=$(FILE)$                                                       *004 LM00005    
                  VECTOR VALUES SP=605757575757K                                                  *005 LM00006    
                  VECTOR VALUES SLASH=615757575757K                                               *006 LM00007    
                  DIMENSION ME(1),MFDENT(6),UFDENT(6),B1(0),B2(0)                                 *007 LM00008    
                  EQUIVALENCE (UFD1,MFDENT(6)),(UFD2,MFDENT(5)),(FILE1,UFDENT(6))                 *008 LM00009    
                  EQUIVALENCE (FILE2,UFDENT(5)),(TYPE,UFDENT(2)),(NORECS,UFDENT(1))               *009 LM00010    
                                                                                                       LM00011    
                  PRMESS.                                                                         *010 LM00012    
                  ATTNAM.(ME(1)...2)                                                              *011 LM00013    
                                                                                                       LM00014    
                  SETBRK.(HOME)                                                                   *012 LM00015    
                  GETBUF.(B1,432)                                                                 *013 LM00016    
                  GETBUF.(B2,432)                                                                 *014 LM00017    
                  ATTACH.(MFD,FI,ATTERR)                                                          *015 LM00018    
                  MTRKO=0                                                                         *016 LM00019    
                  MFDTOT=3                                                                        *017 LM00020    
                  MFDBAD=0                                                                        *018 LM00021    
                  MFDDRM=0                                                                        *019 LM00022    
                  BFOPEN.(R,MFD,FI,B1(B1+432),-0,-0,MFDERR)                                       *020 LM00023    
                  NEWFIL.(MFD,FI,OOPS)                                                            *021 LM00024    
                  SETRKS.                                                                         *022 LM00025    
                  BFREAD.(MFD,FI,MFDENT(6)...3,MEOF,TEMP,MFDERR)                                  *023 LM00026    
                  DRUM=TRKS.(0)                                                                   *024 LM00027    
                  WHENEVER DRUM.A.7777777777K.NE.0                                                *025 LM00028    
                       PRMESS.($PANIC$)                                                           *026 LM00029    
                       TRANSFER TO CLSMFD                                                         *027 LM00030    
                  END OF CONDITIONAL                                                              *028 LM00031    
                  LDRUM=DRUM.RS.6                                                                 *029 LM00032    
                                                                                                       LM00033    
      MFDLOP      BFREAD.(MFD,FI,MFDENT(6)...7,MEOF,TEMP,MFDERR)                                  *030 LM00034    
                  MFDTRK=TRKS.(0)                                                                 *031 LM00035    
                  WHENEVER MFDTRK.NE.MTRKO                                                        *032 LM00036    
                       MTRKO=MFDTRK                                                               *033 LM00037    
                       WHENEVER MFDTRK.GE.DRUM,MFDDRM=MFDDRM+1                                    *034 LM00038    
                  END OF CONDITIONAL                                                              *035 LM00039    
                  MFDTOT=MFDTOT+7                                                                 *036 LM00040    
                  WHENEVER UFD1.V.UFD2.E.0                                                        *037 LM00041    
                       MFDBAD=MFDBAD+7                                                            *038 LM00042    
                       TRANSFER TO MFDLOP                                                         *039 LM00043    
                  END OF CONDITIONAL                                                              *040 LM00044    
                  WHENEVER UFD2.E.FI, TRANSFER TO MFDLOP                                          *041 LM00045    
                                                                                                       LM00046    
                  UTRKO=0                                                                         *042 LM00047    
                  UFDTOT=3                                                                        *043 LM00048    
                  UFDBAD=0                                                                        *044 LM00049    
                  UFDDRM=0                                                                        *045 LM00050    
                  BFOPEN.(R,UFD1,UFD2,B2(B2+432),-0,-0,UFDERR)                                    *046 LM00051    
                  NEWFIL.(UFD1,UFD2,OOPSU)                                                        *047 LM00052    
                  BFREAD.(UFD1,UFD2,UFDENT(6)...3,UEOF,TEMP,UFDERR)                               *048 LM00053    
                                                                                                       LM00054    
      UFDLOP      BFREAD.(UFD1,UFD2,UFDENT(6)...7,UEOF,TEMP,UFDERR)                               *049 LM00055    
                  UFDTRK=TRACKS.(0)                                                               *050 LM00056    
                  WHENEVER UFDTRK.NE.UTRKO                                                        *051 LM00057    
                       UTRKO=UFDTRK                                                               *052 LM00058    
                       WHENEVER UFDTRK.GE.DRUM, UFDDRM=UFDDRM+1                                   *053 LM00059    
                  END OF CONDITIONAL                                                              *054 LM00060    
                  UFDTOT=UFDTOT+7                                                                 *055 LM00061    
                  WHENEVER FILE1.V.FILE2.E.0                                                      *056 LM00062    
                       UFDBAD=UFDBAD+7                                                            *057 LM00063    
                       TRANSFER TO UFDLOP                                                         *058 LM00064    
                  END OF CONDITIONAL                                                              *059 LM00065    
                  WHENEVER TYPE.A.7K5.NE.1K5, TRANSFER TO UFDLOP                                  *060 LM00066    
                                                                                                       LM00067    
                  WHENEVER DERBC.(UFDENT).A.77K8.GE.LDRUM                                         *061 LM00068    
                       WHENEVER DELBC.(UFDENT).A.77K8.GE.LDRUM                                    *062 LM00069    
                            TEMP=215757575757K                                                    *063 LM00070    
                       OTHERWISE                                                                  *064 LM00071    
                            TEMP=475757575757K                                                    *065 LM00072    
                       END OF CONDITIONAL                                                         *066 LM00073    
                  OTHERWISE                                                                       *067 LM00074    
                       TEMP=455757575757K                                                         *068 LM00075    
                  END OF CONDITIONAL                                                              *069 LM00076    
                  PRMESS.(UFD1,SP,UFD2,SP,FILE1,SP,FILE2,SP,                                      *070 LM00077    
                1      NZEL.(DELBC.(NORECS.A.77777K6)),TEMP)                                      *070 LM00078    
                  TRANSFER TO UFDLOP                                                              *071 LM00079    
                                                                                                       LM00080    
      UEOF        BFCLOS.(UFD1,UFD2,UFDERR)                                                       *072 LM00081    
                  TEMP=UFDDRM-((UFDTOT-UFDBAD-1)/432+1)                                           *073 LM00082    
                  LEN=(UFDTOT-1)/432+1                                                            *074 LM00083    
                  PT.(UFD1,UFD2,UFDDRM)                                                           *075 LM00084    
                  TRANSFER TO MFDLOP                                                              *076 LM00085    
                                                                                                       LM00086    
      MEOF        BFCLOS.(MFD,FI,MFDERR)                                                          *077 LM00087    
                  TEMP=MFDDRM-((MFDTOT-MFDBAD-1)/432+1)                                           *078 LM00088    
                  LEN=(MFDTOT-1)/432+1                                                            *079 LM00089    
                  PT.(MFD,FI,MFDDRM)                                                              *080 LM00090    
                  ATTACH.(ME(1),ME,ATTERR)                                                        *081 LM00091    
                  TRANSFER TO OUT                                                                 *082 LM00092    
                                                                                                       LM00093    
      ATTERR      PRNTER.(375K)                                                                   *083 LM00094    
      HOME        ATTACH.(ME(1),ME,OUT)                                                           *084 LM00095    
      OUT         PRMESS.($*$)                                                                    *085 LM00096    
                  CHNCOM.(0)                                                                      *086 LM00097    
                                                                                                       LM00098    
      MFDERR      PRNTER.(375K)                                                                   *087 LM00099    
      CLSMFD      BFCLOS.(MFD,FI,HOME)                                                            *088 LM00100    
                  TRANSFER TO HOME                                                                *089 LM00101    
                                                                                                       LM00102    
      OOPS        PRMESS.(MFD,SP,FI,$ NOT FOUND IN AFST.$)                                        *090 LM00103    
                  TRANSFER TO CLSMFD                                                              *091 LM00104    
      UFDERR      PRNTER.(375K)                                                                   *092 LM00105    
      CLSUFD      BFCLOS.(UFD1,UFD2,MFDLOP)                                                       *093 LM00106    
                  TRANSFER TO MFDLOP                                                              *094 LM00107    
                                                                                                       LM00108    
      OOPSU       PRMESS.(UFD1,SP,UFD2,$ NOT FOUND IN AFST.$)                                     *095 LM00109    
                  TRANSFER TO CLSUFD                                                              *096 LM00110    
                                                                                                       LM00111    
                  INTERNAL FUNCTION (A,B,C)                                                       *097 LM00112    
                  ENTRY TO PT.                                                                    *098 LM00113    
                                                                                                       LM00114    
                  WHENEVER TEMP.G.0.OR.(A.E.MFD.OR.A.E.$ M1416$).AND.TEMP.L.0                     *099 LM00115    
                1  .OR. UFDBAD.G.432                                                              *099 LM00116    
                       WHENEVER TEMP.G.0                                                          *100 LM00117    
                            TEMP=NZEL.(DEFBC.(TEMP))                                              *101 LM00118    
                       OTHERWISE                                                                  *102 LM00119    
                            TEMP=NZEL.(DEFBC.(TEMP)).A.407777777777K                              *103 LM00120    
                       END OF CONDITIONAL                                                         *104 LM00121    
                       PRMESS.(A,SP,B,SP,TEMP,SLASH,NZEL.(DEFBC.(C)),                             *105 LM00122    
                1           SLASH,NZEL.(DEFBC.(LEN)))                                             *105 LM00123    
                  END OF CONDITIONAL                                                              *106 LM00124    
                  FUNCTION RETURN                                                                 *107 LM00125    
                  END OF FUNCTION                                                                 *108 LM00126    
                                                                                                       LM00127    
                  INTERNAL FUNCTION (A)                                                           *109 LM00128    
                  ENTRY TO NZEL.                                                                  *110 LM00129    
                  NZTEMP=BZ57.(A)                                                                 *111 LM00130    
                  WHENEVER NZTEMP.E.575757575757K, NZTEMP=005757575757K                           *112 LM00131    
                  FUNCTION RETURN NZTEMP                                                          *113 LM00132    
                  END OF FUNCTION                                                                 *114 LM00133    
                                                                                                       LM00134    
                  END OF PROGRAM                                                                  *115 LM00135    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01046 TRANSFER VECTOR LENGTH  00024 PROGRAM BEGINS    00145
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ATTERR 00045   4        HOME   00050   4        MFDLOP 00053   4        OUT    00056   4        UFDBAD 00105   1  
      B1     00062 A 1        LDRUM  00066   1        MFD    00074 A 1        R      00101 A 1        UFDDRM 00106   1  
      B2     00063 A 1        LEN    00067   1        MFDTOT 00075   1        SLASH  00102 A 1        UFDENT 00044 A 1  
      CLSMFD 00046   4        MEOF   00051   4        MFDTRK 00076   1        SP     00103 A 1        UFDERR 00060   4  
      CLSUFD 00047   4        ME     00071 A 1        MTRKO  00077   1        TEMP   00104   1        UFDLOP 00061   4  
      DRUM   00064   1        MFDBAD 00072   1        NORECS 00043   1        TYPE   00042   1        UFDTOT 00107   1  
      FILE1  00036   1        MFDDRM 00073   1        NZTEMP 00100   1        UEOF   00057   4        UFDTRK 00110   1  
      FILE2  00037   1        MFDENT 00035 A 1        OOPS   00054   4        UFD1   00027   1        UTRKO  00111   1  
      FI     00065 A 1        MFDERR 00052   4        OOPSU  00055   4        UFD2   00030   1                          
0FUNCTION DICTIONARY    
      ATTACH 00000   1        ATTNAM 00001   1        BFCLOS 00002   1        BFOPEN 00003   1        BFREAD 00004   1  
      BZ57   00005   1        CHNCOM 00006   1        DEFBC  00007   1        DELBC  00010   1        DERBC  00011   1  
      EXIT   00012   1        GETBUF 00013   1        .SETUP 00014   1        NEWFIL 00015   1        PRMESS 00016   1  
      PRNTER 00017   1        SETBRK 00020   1        SETRKS 00021   1        TRACKS 00022   1        TRKS   00023   1  
      NZEL   00024   1        PT     00025   1                                                                          
0ABSOLUTE CONSTANTS     
 00124 +005757575757     00142 -175757575757     00133 -007777777777     00143 -204401040106     00132 +336060606060    
 00135 -056021266263     00136 -066445246031     00144 -204546636026     00141 -146060606060     00120 +000000000375    
 00127 +077777000000     00134 -055757575757     00140 -075757575757     00130 +215757575757     00125 +007700000000    
 00122 +000000100000     00123 +000000700000     00117 +000000000007     00116 +000000000006     00137 -072145312360    
 00126 +007777777777     00115 +000000000003     00112 +000000000000     00121 +000000000660     00114 +000000000002    
 00113 +000000000001     00131 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00045 TXL -300613000611       00046 TXL -300631000625       00047 TXL -300651000645       00050 TXL -300617000613      
 00051 TXL -300557000553       00052 TXL -300625000623       00053 TXL -300262000253       00054 TXL -300642000632      
 00055 TXL -300662000652       00056 TXL -300621000617       00057 TXL -300525000521       00060 TXL -300645000643      
 00061 TXL -300375000366                                                                                                
0PROGRAM    
                 N'R                                                                001  LM00002
                 V'S R=$R$                                                          002  LM00003
 00145 TSX +0 07400 4 00014    00101     -1 16060 6 06060                                                               
                 V'S MFD=$M.F.D.$                                                   003  LM00004
 00074     -0 43326 3 32433                                                                                             
                 V'S FI=$(FILE)$                                                    004  LM00005
 00065     -3 42631 4 32534                                                                                             
                 V'S SP=605757575757K                                               005  LM00006
 00103     -2 05757 5 75757                                                                                             
                 V'S SLASH=615757575757K                                            006  LM00007
 00102     -2 15757 5 75757                                                                                             
                 D'N ME(1),MFDENT(6),UFDENT(6),B1(0),B2(0)                          007  LM00008
                 E'E (UFD1,MFDENT(6)),(UFD2,MFDENT(5)),(FILE1,UFDENT(6))            008  LM00009
                 E'E (FILE2,UFDENT(5)),(TYPE,UFDENT(2)),(NORECS,UFDENT(1))          009  LM00010
                 PRMESS.                                                            010  LM00012
 00146 TSX +0 07400 4 00016                                                                                             
                 ATTNAM.(ME(1)...2)                                                 011  LM00013
 00147 TSX +0 07400 4 00001    00150 TIX +2 00114 0 00070                                                               
                 SETBRK.(HOME)                                                      012  LM00015
 00151 TSX +0 07400 4 00020    00152 TXH +3 00000 0 00050                                                               
                 GETBUF.(B1,432)                                                    013  LM00016
 00153 TSX +0 07400 4 00013    00154 TXH +3 00000 0 00062    00155 TXH +3 00000 0 00121                                 
                 GETBUF.(B2,432)                                                    014  LM00017
 00156 TSX +0 07400 4 00013    00157 TXH +3 00000 0 00063    00160 TXH +3 00000 0 00121                                 
                 ATTACH.(MFD,FI,ATTERR)                                             015  LM00018
 00161 TSX +0 07400 4 00000    00162 TXH +3 00000 0 00074    00163 TXH +3 00000 0 00065    00164 TXH +3 00000 0 00045   
                 MTRKO=0                                                            016  LM00019
 00165 CLA +0 50000 0 00112    00166 STO +0 60100 0 00077                                                               
                 MFDTOT=3                                                           017  LM00020
 00167 CLA +0 50000 0 00115    00170 STO +0 60100 0 00075                                                               
                 MFDBAD=0                                                           018  LM00021
 00171 CLA +0 50000 0 00112    00172 STO +0 60100 0 00072                                                               
                 MFDDRM=0                                                           019  LM00022
 00173 CLA +0 50000 0 00112    00174 STO +0 60100 0 00073                                                               
                 BFOPEN.(R,MFD,FI,B1(B1+432),-0,-0,MFDERR)                          020  LM00023
 00175 CLS +0 50200 0 00112    00176 STO +0 60100 0 01042    00177 CLS +0 50200 0 00112    00200 STO +0 60100 0 01043   
 00201 CLA +0 50000 0 00062    00202 ADD +0 40000 0 00121    00203 SUB +0 40200 0 00204    00204 TXH +3 00000 0 00062   
 00205 STA +0 62100 0 00212    00206 TSX +0 07400 4 00003    00207 TXH +3 00000 0 00101    00210 TXH +3 00000 0 00074   
 00211 TXH +3 00000 0 00065    00212 TXH +3 00000 0 00000    00213 TXH +3 00000 0 01043    00214 TXH +3 00000 0 01042   
 00215 TXH +3 00000 0 00052                                                                                             
                 NEWFIL.(MFD,FI,OOPS)                                               021  LM00024
 00216 TSX +0 07400 4 00015    00217 TXH +3 00000 0 00074    00220 TXH +3 00000 0 00065    00221 TXH +3 00000 0 00054   
                 SETRKS.                                                            022  LM00025
 00222 TSX +0 07400 4 00021                                                                                             
                 BFREAD.(MFD,FI,MFDENT(6)...3,MEOF,TEMP,MFDERR)                     023  LM00026
 00223 TSX +0 07400 4 00004    00224 TXH +3 00000 0 00074    00225 TXH +3 00000 0 00065    00226 TIX +2 00115 0 00027   
 00227 TXH +3 00000 0 00051    00230 TXH +3 00000 0 00104    00231 TXH +3 00000 0 00052                                 
                 DRUM=TRKS.(0)                                                      024  LM00027
 00232 TSX +0 07400 4 00023    00233 TXH +3 00000 0 00112    00234 STO +0 60100 0 00064                                 
                 W'R DRUM.A.7777777777K.NE.0                                        025  LM00028
 00235 CAL -0 50000 0 00064    00236 ANA -0 32000 0 00126    00237 SLW +0 60200 0 01043    00240 CLA +0 50000 0 01043   
 00241 SUB +0 40200 0 00112    00242 TZE +0 10000 0 00246                                                               
                      PRMESS.($PANIC$)                                              026  LM00029
 00243 TSX +0 07400 4 00016    00244 TXH +3 00000 0 00137                                                               
                      T'O CLSMFD                                                    027  LM00030
 00245 TRA +0 02000 0 00046                                                                                             
                 E'L                                                                028  LM00031
                 LDRUM=DRUM.RS.6                                                    029  LM00032
 00246 CAL -0 50000 0 00116    00247 STA +0 62100 0 00251    00250 CAL -0 50000 0 00064    00251 LGR -0 76500 0 00000   
 00252 SLW +0 60200 0 00066                                                                                             
      MFDLOP     BFREAD.(MFD,FI,MFDENT(6)...7,MEOF,TEMP,MFDERR)                     030  LM00034
 00253 TSX +0 07400 4 00004    00254 TXH +3 00000 0 00074    00255 TXH +3 00000 0 00065    00256 TIX +2 00117 0 00027   
 00257 TXH +3 00000 0 00051    00260 TXH +3 00000 0 00104    00261 TXH +3 00000 0 00052                                 
                 MFDTRK=TRKS.(0)                                                    031  LM00035
 00262 TSX +0 07400 4 00023    00263 TXH +3 00000 0 00112    00264 STO +0 60100 0 00076                                 
                 W'R MFDTRK.NE.MTRKO                                                032  LM00036
 00265 CLA +0 50000 0 00076    00266 SUB +0 40200 0 00077    00267 TZE +0 10000 0 00301                                 
                      MTRKO=MFDTRK                                                  033  LM00037
 00270 CLA +0 50000 0 00076    00271 STO +0 60100 0 00077                                                               
                      W'R MFDTRK.GE.DRUM,MFDDRM=MFDDRM+1                            034  LM00038
 00272 CLA +0 50000 0 00076    00273 SUB +0 40200 0 00064    00274 TZE +0 10000 0 00276    00275 TMI -0 12000 0 00301   
 00276 CLA +0 50000 0 00073    00277 ADD +0 40000 0 00113    00300 STO +0 60100 0 00073                                 
                 E'L                                                                035  LM00039
                 MFDTOT=MFDTOT+7                                                    036  LM00040
 00301 CLA +0 50000 0 00075    00302 ADD +0 40000 0 00117    00303 STO +0 60100 0 00075                                 
                 W'R UFD1.V.UFD2.E.0                                                037  LM00041
 00304 CAL -0 50000 0 00027    00305 ORA -0 50100 0 00030    00306 SLW +0 60200 0 01043    00307 CLA +0 50000 0 01043   
 00310 SUB +0 40200 0 00112    00311 TNZ -0 10000 0 00316                                                               
                      MFDBAD=MFDBAD+7                                               038  LM00042
 00312 CLA +0 50000 0 00072    00313 ADD +0 40000 0 00117    00314 STO +0 60100 0 00072                                 
                      T'O MFDLOP                                                    039  LM00043
 00315 TRA +0 02000 0 00053                                                                                             
                 E'L                                                                040  LM00044
                 W'R UFD2.E.FI, T'O MFDLOP                                          041  LM00045
 00316 CLA +0 50000 0 00030    00317 SUB +0 40200 0 00065    00320 TNZ -0 10000 0 00322    00321 TRA +0 02000 0 00053   
                 UTRKO=0                                                            042  LM00047
 00322 CLA +0 50000 0 00112    00323 STO +0 60100 0 00111                                                               
                 UFDTOT=3                                                           043  LM00048
 00324 CLA +0 50000 0 00115    00325 STO +0 60100 0 00107                                                               
                 UFDBAD=0                                                           044  LM00049
 00326 CLA +0 50000 0 00112    00327 STO +0 60100 0 00105                                                               
                 UFDDRM=0                                                           045  LM00050
 00330 CLA +0 50000 0 00112    00331 STO +0 60100 0 00106                                                               
                 BFOPEN.(R,UFD1,UFD2,B2(B2+432),-0,-0,UFDERR)                       046  LM00051
 00332 CLS +0 50200 0 00112    00333 STO +0 60100 0 01043    00334 CLS +0 50200 0 00112    00335 STO +0 60100 0 01042   
 00336 CLA +0 50000 0 00063    00337 ADD +0 40000 0 00121    00340 SUB +0 40200 0 00341    00341 TXH +3 00000 0 00063   
 00342 STA +0 62100 0 00347    00343 TSX +0 07400 4 00003    00344 TXH +3 00000 0 00101    00345 TXH +3 00000 0 00027   
 00346 TXH +3 00000 0 00030    00347 TXH +3 00000 0 00000    00350 TXH +3 00000 0 01042    00351 TXH +3 00000 0 01043   
 00352 TXH +3 00000 0 00060                                                                                             
                 NEWFIL.(UFD1,UFD2,OOPSU)                                           047  LM00052
 00353 TSX +0 07400 4 00015    00354 TXH +3 00000 0 00027    00355 TXH +3 00000 0 00030    00356 TXH +3 00000 0 00055   
                 BFREAD.(UFD1,UFD2,UFDENT(6)...3,UEOF,TEMP,UFDERR)                  048  LM00053
 00357 TSX +0 07400 4 00004    00360 TXH +3 00000 0 00027    00361 TXH +3 00000 0 00030    00362 TIX +2 00115 0 00036   
 00363 TXH +3 00000 0 00057    00364 TXH +3 00000 0 00104    00365 TXH +3 00000 0 00060                                 
      UFDLOP     BFREAD.(UFD1,UFD2,UFDENT(6)...7,UEOF,TEMP,UFDERR)                  049  LM00055
 00366 TSX +0 07400 4 00004    00367 TXH +3 00000 0 00027    00370 TXH +3 00000 0 00030    00371 TIX +2 00117 0 00036   
 00372 TXH +3 00000 0 00057    00373 TXH +3 00000 0 00104    00374 TXH +3 00000 0 00060                                 
                 UFDTRK=TRACKS.(0)                                                  050  LM00056
 00375 TSX +0 07400 4 00022    00376 TXH +3 00000 0 00112    00377 STO +0 60100 0 00110                                 
                 W'R UFDTRK.NE.UTRKO                                                051  LM00057
 00400 CLA +0 50000 0 00110    00401 SUB +0 40200 0 00111    00402 TZE +0 10000 0 00414                                 
                      UTRKO=UFDTRK                                                  052  LM00058
 00403 CLA +0 50000 0 00110    00404 STO +0 60100 0 00111                                                               
                      W'R UFDTRK.GE.DRUM, UFDDRM=UFDDRM+1                           053  LM00059
 00405 CLA +0 50000 0 00110    00406 SUB +0 40200 0 00064    00407 TZE +0 10000 0 00411    00410 TMI -0 12000 0 00414   
 00411 CLA +0 50000 0 00106    00412 ADD +0 40000 0 00113    00413 STO +0 60100 0 00106                                 
                 E'L                                                                054  LM00060
                 UFDTOT=UFDTOT+7                                                    055  LM00061
 00414 CLA +0 50000 0 00107    00415 ADD +0 40000 0 00117    00416 STO +0 60100 0 00107                                 
                 W'R FILE1.V.FILE2.E.0                                              056  LM00062
 00417 CAL -0 50000 0 00036    00420 ORA -0 50100 0 00037    00421 SLW +0 60200 0 01043    00422 CLA +0 50000 0 01043   
 00423 SUB +0 40200 0 00112    00424 TNZ -0 10000 0 00431                                                               
                      UFDBAD=UFDBAD+7                                               057  LM00063
 00425 CLA +0 50000 0 00105    00426 ADD +0 40000 0 00117    00427 STO +0 60100 0 00105                                 
                      T'O UFDLOP                                                    058  LM00064
 00430 TRA +0 02000 0 00061                                                                                             
                 E'L                                                                059  LM00065
                 W'R TYPE.A.7K5.NE.1K5, T'O UFDLOP                                  060  LM00066
 00431 CAL -0 50000 0 00042    00432 ANA -0 32000 0 00123    00433 SLW +0 60200 0 01043    00434 CLA +0 50000 0 01043   
 00435 SUB +0 40200 0 00122    00436 TZE +0 10000 0 00440    00437 TRA +0 02000 0 00061                                 
                 W'R DERBC.(UFDENT).A.77K8.GE.LDRUM                                 061  LM00068
 00440 TSX +0 07400 4 00011    00441 TXH +3 00000 0 00044    00442 STO +0 60100 0 01043    00443 CAL -0 50000 0 01043   
 00444 ANA -0 32000 0 00125    00445 SLW +0 60200 0 01043    00446 CLA +0 50000 0 01043    00447 SUB +0 40200 0 00066   
 00450 TZE +0 10000 0 00452    00451 TMI -0 12000 0 00472                                                               
                      W'R DELBC.(UFDENT).A.77K8.GE.LDRUM                            062  LM00069
 00452 TSX +0 07400 4 00010    00453 TXH +3 00000 0 00044    00454 STO +0 60100 0 01043    00455 CAL -0 50000 0 01043   
 00456 ANA -0 32000 0 00125    00457 SLW +0 60200 0 01043    00460 CLA +0 50000 0 01043    00461 SUB +0 40200 0 00066   
 00462 TZE +0 10000 0 00464    00463 TMI -0 12000 0 00467                                                               
                           TEMP=215757575757K                                       063  LM00070
 00464 CLA +0 50000 0 00130    00465 STO +0 60100 0 00104                                                               
                      O'E                                                           064  LM00071
 00466 TRA +0 02000 0 00471                                                                                             
                           TEMP=475757575757K                                       065  LM00072
 00467 CLA +0 50000 0 00140    00470 STO +0 60100 0 00104                                                               
                      E'L                                                           066  LM00073
                 O'E                                                                067  LM00074
 00471 TRA +0 02000 0 00474                                                                                             
                      TEMP=455757575757K                                            068  LM00075
 00472 CLA +0 50000 0 00134    00473 STO +0 60100 0 00104                                                               
                 E'L                                                                069  LM00076
                 PRMESS.(UFD1,SP,UFD2,SP,FILE1,SP,FILE2,SP,                         070  LM00077
                1     NZEL.(DELBC.(NORECS.A.77777K6)),TEMP)                         070  LM00078
 00474 CAL -0 50000 0 00043    00475 ANA -0 32000 0 00127    00476 SLW +0 60200 0 01043    00477 TSX +0 07400 4 00010   
 00500 TXH +3 00000 0 01043    00501 STO +0 60100 0 01043    00502 TSX +0 07400 4 00024    00503 TXH +3 00000 0 01043   
 00504 STO +0 60100 0 01043    00505 TSX +0 07400 4 00016    00506 TXH +3 00000 0 00027    00507 TXH +3 00000 0 00103   
 00510 TXH +3 00000 0 00030    00511 TXH +3 00000 0 00103    00512 TXH +3 00000 0 00036    00513 TXH +3 00000 0 00103   
 00514 TXH +3 00000 0 00037    00515 TXH +3 00000 0 00103    00516 TXH +3 00000 0 01043    00517 TXH +3 00000 0 00104   
                 T'O UFDLOP                                                         071  LM00079
 00520 TRA +0 02000 0 00061                                                                                             
      UEOF       BFCLOS.(UFD1,UFD2,UFDERR)                                          072  LM00081
 00521 TSX +0 07400 4 00002    00522 TXH +3 00000 0 00027    00523 TXH +3 00000 0 00030    00524 TXH +3 00000 0 00060   
                 TEMP=UFDDRM-((UFDTOT-UFDBAD-1)/432+1)                              073  LM00082
 00525 CLA +0 50000 0 00107    00526 SUB +0 40200 0 00105    00527 SUB +0 40200 0 00113    00530 LRS +0 76500 0 00043   
 00531 DVP +0 22100 0 00121    00532 XCA +0 13100 0 00000    00533 ADD +0 40000 0 00113    00534 CHS +0 76000 0 00002   
 00535 ADD +0 40000 0 00106    00536 STO +0 60100 0 00104                                                               
                 LEN=(UFDTOT-1)/432+1                                               074  LM00083
 00537 CLA +0 50000 0 00107    00540 SUB +0 40200 0 00113    00541 LRS +0 76500 0 00043    00542 DVP +0 22100 0 00121   
 00543 XCA +0 13100 0 00000    00544 ADD +0 40000 0 00113    00545 STO +0 60100 0 00067                                 
                 PT.(UFD1,UFD2,UFDDRM)                                              075  LM00084
 00546 TSX +0 07400 4 00025    00547 TXH +3 00000 0 00027    00550 TXH +3 00000 0 00030    00551 TXH +3 00000 0 00106   
                 T'O MFDLOP                                                         076  LM00085
 00552 TRA +0 02000 0 00053                                                                                             
      MEOF       BFCLOS.(MFD,FI,MFDERR)                                             077  LM00087
 00553 TSX +0 07400 4 00002    00554 TXH +3 00000 0 00074    00555 TXH +3 00000 0 00065    00556 TXH +3 00000 0 00052   
                 TEMP=MFDDRM-((MFDTOT-MFDBAD-1)/432+1)                              078  LM00088
 00557 CLA +0 50000 0 00075    00560 SUB +0 40200 0 00072    00561 SUB +0 40200 0 00113    00562 LRS +0 76500 0 00043   
 00563 DVP +0 22100 0 00121    00564 XCA +0 13100 0 00000    00565 ADD +0 40000 0 00113    00566 CHS +0 76000 0 00002   
 00567 ADD +0 40000 0 00073    00570 STO +0 60100 0 00104                                                               
                 LEN=(MFDTOT-1)/432+1                                               079  LM00089
 00571 CLA +0 50000 0 00075    00572 SUB +0 40200 0 00113    00573 LRS +0 76500 0 00043    00574 DVP +0 22100 0 00121   
 00575 XCA +0 13100 0 00000    00576 ADD +0 40000 0 00113    00577 STO +0 60100 0 00067                                 
                 PT.(MFD,FI,MFDDRM)                                                 080  LM00090
 00600 TSX +0 07400 4 00025    00601 TXH +3 00000 0 00074    00602 TXH +3 00000 0 00065    00603 TXH +3 00000 0 00073   
                 ATTACH.(ME(1),ME,ATTERR)                                           081  LM00091
 00604 TSX +0 07400 4 00000    00605 TXH +3 00000 0 00070    00606 TXH +3 00000 0 00071    00607 TXH +3 00000 0 00045   
                 T'O OUT                                                            082  LM00092
 00610 TRA +0 02000 0 00056                                                                                             
      ATTERR     PRNTER.(375K)                                                      083  LM00094
 00611 TSX +0 07400 4 00017    00612 TXH +3 00000 0 00120                                                               
      HOME       ATTACH.(ME(1),ME,OUT)                                              084  LM00095
 00613 TSX +0 07400 4 00000    00614 TXH +3 00000 0 00070    00615 TXH +3 00000 0 00071    00616 TXH +3 00000 0 00056   
      OUT        PRMESS.($*$)                                                       085  LM00096
 00617 TSX +0 07400 4 00016    00620 TXH +3 00000 0 00141                                                               
                 CHNCOM.(0)                                                         086  LM00097
 00621 TSX +0 07400 4 00006    00622 TXH +3 00000 0 00112                                                               
      MFDERR     PRNTER.(375K)                                                      087  LM00099
 00623 TSX +0 07400 4 00017    00624 TXH +3 00000 0 00120                                                               
      CLSMFD     BFCLOS.(MFD,FI,HOME)                                               088  LM00100
 00625 TSX +0 07400 4 00002    00626 TXH +3 00000 0 00074    00627 TXH +3 00000 0 00065    00630 TXH +3 00000 0 00050   
                 T'O HOME                                                           089  LM00101
 00631 TRA +0 02000 0 00050                                                                                             
      OOPS       PRMESS.(MFD,SP,FI,$ NOT FOUND IN AFST.$)                           090  LM00103
 00632 TSX +0 07400 4 00016    00633 TXH +3 00000 0 00074    00634 TXH +3 00000 0 00103    00635 TXH +3 00000 0 00065   
 00636 TXH +3 00000 0 00144    00637 TXH +3 00000 0 00136    00640 TXH +3 00000 0 00135    00641 TXH +3 00000 0 00132   
                 T'O CLSMFD                                                         091  LM00104
 00642 TRA +0 02000 0 00046                                                                                             
      UFDERR     PRNTER.(375K)                                                      092  LM00105
 00643 TSX +0 07400 4 00017    00644 TXH +3 00000 0 00120                                                               
      CLSUFD     BFCLOS.(UFD1,UFD2,MFDLOP)                                          093  LM00106
 00645 TSX +0 07400 4 00002    00646 TXH +3 00000 0 00027    00647 TXH +3 00000 0 00030    00650 TXH +3 00000 0 00053   
                 T'O MFDLOP                                                         094  LM00107
 00651 TRA +0 02000 0 00053                                                                                             
      OOPSU      PRMESS.(UFD1,SP,UFD2,$ NOT FOUND IN AFST.$)                        095  LM00109
 00652 TSX +0 07400 4 00016    00653 TXH +3 00000 0 00027    00654 TXH +3 00000 0 00103    00655 TXH +3 00000 0 00030   
 00656 TXH +3 00000 0 00144    00657 TXH +3 00000 0 00136    00660 TXH +3 00000 0 00135    00661 TXH +3 00000 0 00132   
                 T'O CLSUFD                                                         096  LM00110
 00662 TRA +0 02000 0 00047                                                                                             
                 INTERNAL FUNCTION (A,B,C)                                          097  LM00112
 00663 TRA +0 02000 0 01010                                                                                             
                 E'O PT.                                                            098  LM00113
 00664 TRA +0 02000 0 00667    00025 TTR +0 02100 0 00665    00665 SXA +0 63400 2 00766    00666 TSX +0 07400 2 00766   
                 W'R TEMP.G.0.OR.(A.E.MFD.OR.A.E.$ M1416$).AND.TEMP.L.0             099  LM00115
                1 .OR. UFDBAD.G.432                                                 099  LM00116
 00667 CLA +0 50000 0 00105    00670 SUB +0 40200 0 00121    00671 TZE +0 10000 0 00673    00672 TPL +0 12000 0 00712   
 00673 CLA +0 50000 0 00104    00674 SUB +0 40200 0 00112    00675 TZE +0 10000 0 00706    00676 TPL +0 12000 0 00706   
 00677 CLA +0 50000 0 00024    00700 SUB +0 40200 0 00143    00701 TZE +0 10000 0 00705    00702 CLA +0 50000 0 00024   
 00703 SUB +0 40200 0 00074    00704 TNZ -0 10000 0 00706    00705 TRA +0 02000 0 00712    00706 CLA +0 50000 0 00104   
 00707 SUB +0 40200 0 00112    00710 TZE +0 10000 0 00764    00711 TMI -0 12000 0 00764                                 
                      W'R TEMP.G.0                                                  100  LM00117
 00712 CLA +0 50000 0 00104    00713 SUB +0 40200 0 00112    00714 TZE +0 10000 0 00725    00715 TMI -0 12000 0 00725   
                           TEMP=NZEL.(DEFBC.(TEMP))                                 101  LM00118
 00716 TSX +0 07400 4 00007    00717 TXH +3 00000 0 00104    00720 STO +0 60100 0 01006    00721 TSX +0 07400 4 00024   
 00722 TXH +3 00000 0 01006    00723 STO +0 60100 0 00104                                                               
                      O'E                                                           102  LM00119
 00724 TRA +0 02000 0 00736                                                                                             
                           TEMP=NZEL.(DEFBC.(TEMP)).A.407777777777K                 103  LM00120
 00725 TSX +0 07400 4 00007    00726 TXH +3 00000 0 00104    00727 STO +0 60100 0 01006    00730 TSX +0 07400 4 00024   
 00731 TXH +3 00000 0 01006    00732 STO +0 60100 0 01006    00733 CAL -0 50000 0 01006    00734 ANA -0 32000 0 00133   
 00735 SLW +0 60200 0 00104                                                                                             
                      E'L                                                           104  LM00121
                      PRMESS.(A,SP,B,SP,TEMP,SLASH,NZEL.(DEFBC.(C)),                105  LM00122
                1          SLASH,NZEL.(DEFBC.(LEN)))                                105  LM00123
 00736 TSX +0 07400 4 00007    00737 TXH +3 00000 0 00067    00740 STO +0 60100 0 01006    00741 TSX +0 07400 4 00024   
 00742 TXH +3 00000 0 01006    00743 STO +0 60100 0 01006    00744 TSX +0 07400 4 00007    00745 TXH +3 00000 0 00024   
 00746 STO +0 60100 0 01007    00747 TSX +0 07400 4 00024    00750 TXH +3 00000 0 01007    00751 STO +0 60100 0 01007   
 00752 TSX +0 07400 4 00016    00753 TXH +3 00000 0 00024    00754 TXH +3 00000 0 00103    00755 TXH +3 00000 0 00024   
 00756 TXH +3 00000 0 00103    00757 TXH +3 00000 0 00104    00760 TXH +3 00000 0 00102    00761 TXH +3 00000 0 01007   
 00762 TXH +3 00000 0 00102    00763 TXH +3 00000 0 01006                                                               
                 E'L                                                                106  LM00124
                 F'N                                                                107  LM00125
 00764 TRA +0 02000 0 01002                                                                                             
                 E'N                                                                108  LM00126
 00765 TSX +0 07400 4 00012    00766 TXH +3 00000 0 00000    00767 SXD -0 63400 1 00766    00770 SXA +0 63400 4 01002   
 00771 CLA +0 50000 4 00001    00772 STA +0 62100 0 00677    00773 STA +0 62100 0 00702    00774 STO +0 60100 0 00753   
 00775 CLA +0 50000 4 00002    00776 STO +0 60100 0 00755    00777 CLA +0 50000 4 00003    01000 STO +0 60100 0 00745   
 01001 TRA +0 02000 2 00001    01002 AXT +0 77400 4 00000    01003 LXA +0 53400 2 00766    01004 LXD -0 53400 1 00766   
 01005 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION (A)                                              109  LM00128
 01010 TRA +0 02000 0 01041                                                                                             
                 E'O NZEL.                                                          110  LM00129
 01011 TRA +0 02000 0 01014    00024 TTR +0 02100 0 01012    01012 SXA +0 63400 2 01027    01013 TSX +0 07400 2 01027   
                 NZTEMP=BZ57.(A)                                                    111  LM00130
 01014 TSX +0 07400 4 00005    01015 TXH +3 00000 0 00024    01016 STO +0 60100 0 00100                                 
                 W'R NZTEMP.E.575757575757K, NZTEMP=005757575757K                   112  LM00131
 01017 CLA +0 50000 0 00100    01020 SUB +0 40200 0 00142    01021 TNZ -0 10000 0 01024    01022 CLA +0 50000 0 00124   
 01023 STO +0 60100 0 00100                                                                                             
                 F'N NZTEMP                                                         113  LM00132
 01024 CLA +0 50000 0 00100    01025 TRA +0 02000 0 01035                                                               
                 E'N                                                                114  LM00133
 01026 TSX +0 07400 4 00012    01027 TXH +3 00000 0 00000    01030 SXD -0 63400 1 01027    01031 SXA +0 63400 4 01035   
 01032 CLA +0 50000 4 00001    01033 STO +0 60100 0 01015    01034 TRA +0 02000 2 00001    01035 AXT +0 77400 4 00000   
 01036 LXA +0 53400 2 01027    01037 LXD -0 53400 1 01027    01040 TRA +0 02000 4 00001                                 
                 E'M                                                                115  LM00135
 01041 TSX +0 07400 4 00012                                                                                             
1     FAP ASSEMBLY LISTING  ...  ...  ...        FILE TRACKS _____FAP___         03/15/69 1916.5 PAGE 1     
                  
                       00007         ENTRY   NEWFIL   
                       00110         ENTRY   TRACKS   
                       00105         ENTRY   SETRKS   
                       00123         ENTRY   TRKS     
                  
                                     EXTERN  ATTNAM,ATTACH  
                                     EXTERN  COMLOC   
                                     EXTERN  GETLOC,DELBC   
                  
                  
        TRANSFER VECTOR 
      00000  216363452144     ATTNAM
      00001  216363212330     ATTACH
      00002  234644434623     COMLOC
      00003  272563434623     GETLOC
      00004  242543222360     DELBC 
                  
            LINKAGE DIRECTOR  
      00005  000000000000     
      00006  452566263143     
                  
      00007  0634 00 4 00101  NEWFIL SXA     XR4,4    
                  
      00010  0020 00 0 00011  GATE   TRA     *+1
      00011  0074 00 4 00000         TSX     ATTNAM,4 
      00012  3 00002 0 00127         PTH     N1,,2    
      00013  0074 00 4 00002         TSX     COMLOC,4 
      00014  3 00000 0 00136         PTH     =HACTFIL 
      00015  3 00000 0 00103         PTH     OOPS     
      00016  0621 00 0 00040         STA     ACTFIL   
      00017  0074 00 4 00002         TSX     COMLOC,4 
      00020  3 00000 0 00137         PTH     =HAFSTU2 
      00021  3 00000 0 00103         PTH     OOPS     
      00022  0400 00 0 00131         ADD     AFSCON   
      00023  0621 00 0 00041         STA     BASE     
      00024  0074 00 4 00001         TSX     ATTACH,4 
      00025  3 00000 0 00127         PTH     N1 
      00026  3 00000 0 00130         PTH     N2 
      00027  3 00000 0 00030         PTH     *+1
      00030  0534 00 4 00101         LXA     XR4,4    
      00031 -0625 00 0 00010         STL     GATE     
                  
      00032 -0500 60 4 00001         CAL*    1,4
      00033  0602 00 0 00127         SLW     N1 
      00034 -0500 60 4 00002         CAL*    2,4
      00035  0602 00 0 00130         SLW     N2 
      00036  0634 00 1 00077         SXA     XR1,1    
      00037  0634 00 2 00100         SXA     XR2,2    
      00040  0774 00 1 00000  ACTFIL AXT     **,1     
      00041 -0774 00 2 00000  BASE   AXC     **,2     
                  
      00042  0756 00 2 00000  FNDLOP PCA     ,2 
      00043  0400 00 0 00132         ADD     RPROBN   
      00044  0621 00 0 00046         STA     *+2
      00045  0074 00 4 00003         TSX     GETLOC,4 
      00046  0 00000 0 00000                 ** 
1     FAP ASSEMBLY LISTING  ...  ...  ...        FILE TRACKS _____FAP___         03/15/69 1916.5 PAGE 2     
                  
      00047  0100 00 0 00066         TZE     FNDNXT   
      00050  0756 00 2 00000         PCA     ,2 
      00051  0400 00 0 00133         ADD     RNAME1   
      00052  0621 00 0 00054         STA     *+2
      00053  0074 00 4 00003         TSX     GETLOC,4 
      00054  0 00000 0 00000                 ** 
      00055  0322 00 0 00127         ERA     N1 
      00056 -0100 00 0 00066         TNZ     FNDNXT   
      00057  0756 00 2 00000         PCA     ,2 
      00060  0400 00 0 00134         ADD     RNAME2   
      00061  0621 00 0 00063         STA     *+2
      00062  0074 00 4 00003         TSX     GETLOC,4 
      00063  0 00000 0 00000                 ** 
      00064  0322 00 0 00130         ERA     N2 
      00065  0100 00 0 00074         TZE     FOUND    
      00066  1 77752 2 00067  FNDNXT TXI     *+1,2,-AFSENL  
      00067  2 00001 1 00042         TIX     FNDLOP,1,1     
      00070  0534 00 1 00077         LXA     XR1,1    
      00071  0534 00 2 00100         LXA     XR2,2    
      00072  0534 00 4 00101         LXA     XR4,4    
      00073  0020 60 4 00003         TRA*    3,4
                  
      00074  0756 00 2 00000  FOUND  PCA     ,2 
      00075  0400 00 0 00135         ADD     SMTMP2   
      00076  0621 00 0 00112         STA     TRKADR   
      00077  0774 00 1 00000  XR1    AXT     **,1     
      00100  0774 00 2 00000  XR2    AXT     **,2     
      00101  0774 00 4 00000  XR4    AXT     **,4     
      00102  0020 00 4 00004         TRA     4,4
                  
      00103  0534 00 4 00101  OOPS   LXA     XR4,4    
      00104  0020 60 4 00003         TRA*    3,4
                  
      00105 -0500 00 0 00112  SETRKS CAL     TRKADR   
      00106  0621 00 0 00125         STA     TRKAD1   
      00107  0020 00 4 00001         TRA     1,4
                  
      00110  0634 00 4 00121  TRACKS SXA     TX4,4    
      00111  0074 00 4 00003         TSX     GETLOC,4 
      00112  0 00000 0 00000  TRKADR         ** 
      00113  0602 00 0 00127         SLW     N1 
      00114  0074 00 4 00004         TSX     DELBC,4  
      00115  3 00000 0 00127         PTH     N1 
      00116  0131 00 0 00000         XCA  
      00117 -0773 00 0 00006         RQL     6  
      00120 -0130 00 0 00000         XCL  
      00121  0774 00 4 00000  TX4    AXT     **,4     
      00122  0020 00 4 00001         TRA     1,4
                  
      00123  0634 00 4 00121  TRKS   SXA     TX4,4    
      00124  0074 00 4 00003         TSX     GETLOC,4 
      00125  0 00000 0 00000  TRKAD1         ** 
      00126  0020 00 0 00113         TRA     TRKADR+1 
1     FAP ASSEMBLY LISTING  ...  ...  ...        FILE TRACKS _____FAP___         03/15/69 1916.5 PAGE 3     
                  
      00127  0 00000 0 00000  N1    
      00130  0 00000 0 00000  N2    
                  
      00131  0 00000 0 00025  AFSCON PZE     21 
      00132  0 00000 0 00000  RPROBN PZE     0  
      00133  0 00000 0 00002  RNAME1 PZE     2  
      00134  0 00000 0 00003  RNAME2 PZE     3  
      00135  0 00000 0 00025  SMTMP2 PZE     21 
                  
                       00026  AFSENL EQU     22 
                  
                                     END  
                  
        LITERALS  
      00136  212363263143     
      00137  212662636402     
1     FAP ASSEMBLY LISTING  ...  ...  ...        FILE TRACKS _____FAP___         03/15/69 1916.5 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        140 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        127     N1    12,   25,   33,   55,  113,  115
        130     N2    26,   35,   64
        121    TX4   110,  123
         77    XR1    36,   70
        100    XR2    37,   71
        101    XR4     7,   30,   72,  103
         41   BASE    23
         10   GATE    31
        103   OOPS    15,   21
        123   TRKS     0
          4  DELBC   114
         74  FOUND    65
         40 ACTFIL    16
        131 AFSCON    22
         26 AFSENL    66,  136
          1 ATTACH    24
          0 ATTNAM    11
          2 COMLOC    13,   17
         42 FNDLOP    67
         66 FNDNXT    47,   56
          3 GETLOC    45,   53,   62,  111,  124
          7 NEWFIL     0
        133 RNAME1    51
        134 RNAME2    60
        132 RPROBN    43
        105 SETRKS     0
        135 SMTMP2    75
        110 TRACKS     0
        125 TRKAD1   106
        112 TRKADR    76,  105,  126
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




MFDSRT   BCD 02/09/69 0650.4    7207         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  MFDSRT   MAD            11/25/68    2057.7
-                 
                 ...MFDSRT MODE                                                                        LM00001    
                                                                                                       LM00002    
                  NORMAL MODE IS INTEGER                                                          *001 LM00003    
                  MODE = COMARG.(1)                                                               *002 LM00004    
                  WHENEVER COMARG.(2,IT) .NE. 777777 777777K, N3 = IT                             *003 LM00005    
                  WHENEVER MODE .E. $ PROBN$                                                      *004 LM00006    
                       IT = 0                                                                     *005 LM00007    
                  OR WHENEVER MODE .E. $ PROGN$                                                   *006 LM00008    
                       IT = 1                                                                     *007 LM00009    
                  OR WHENEVER MODE .E. $   MFD$                                                   *008 LM00010    
                       IT = 2                                                                     *009 LM00011    
                  OTHERWISE                                                                       *010 LM00012    
                       PRMESS.($ILLEGAL MODE$,MODE)                                               *011 LM00013    
                       CHNCOM.(0)                                                                 *012 LM00014    
                  END OF CONDITIONAL                                                              *013 LM00015    
                  GETBUF.(B1,432)                                                                 *014 LM00016    
                  GETBUF.(B2,432)                                                                 *015 LM00017    
                  GETBUF.(B3,432)                                                                 *016 LM00018    
                  GETBUF.(WK,700)                                                                 *017 LM00019    
                  GETBUF.(WJ,700)                                                                 *018 LM00020    
                                                                                                       LM00021    
                 ...OPEN MFD                                                                           LM00022    
                                                                                                       LM00023    
                  ATTNAM.(V(2)...2)                                                               *019 LM00024    
                  ATTACH.(N1,N2)                                                                  *020 LM00025    
                  BFOPEN.($R$,N1,N2,B1(B1+432),B2(B2+432),MZE,ERR)                                *021 LM00026    
                  ATTACH.(V(2),V(1),ERR)                                                          *022 LM00027    
                 ...SKIP QUOTA WDS AND MFD ITSELF                                                      LM00028    
                  BFREAD.(N1,N2,BUF(3)...3,EOF,C,ERR)                                             *023 LM00029    
                  BFREAD.(N1,N2,BUF(7)...7,EOF,C,ERR)                                             *024 LM00030    
      LOOP        BFREAD.(N1,N2,BUF(7)...7,EOF,C,ERR)                                             *025 LM00031    
                  WHENEVER ((BUF(7).V.BUF(6)).E.0), TRANSFER TO LOOP                              *026 LM00032    
                  WK(WK+I) = LJUST.(BUF(7))                                                       *027 LM00033    
                  WJ(WJ+I) = BUF(6)                                                               *028 LM00034    
                  I = I + 1                                                                       *029 LM00035    
                  TRANSFER TO LOOP                                                                *030 LM00036    
      EOF         N = I - 1                                                                       *031 LM00037    
                  BFCLOS.(N1,N2,ERR)                                                              *032 LM00038    
                  D = N                                                                           *033 LM00039    
      TOP         SWAP = 0B                                                                       *034 LM00040    
                  D = (D+1)/2                                                                     *035 LM00041    
                  THROUGH PASS, FOR I = 1,1,I+D .G. N                                             *036 LM00042    
                       G1 = WJ(WJ+I)                                                              *037 LM00043    
                       G2 = WJ(WJ+I+D)                                                            *038 LM00044    
                       WHENEVER G1.RS. 12 .E.$00CMFL$                                             *039 LM00045    
                            G1 = G1.A.7777K                                                       *040 LM00046    
                       OTHERWISE                                                                  *041 LM00047    
                            G1 = BCDEC.(G1) + 1K6                                                 *042 LM00048    
                       END OF CONDITIONAL                                                         *043 LM00049    
                       WHENEVER G2.RS. 12 .E.$00CMFL$                                             *044 LM00050    
                            G2 = G2.A.7777K                                                       *045 LM00051    
                       OTHERWISE                                                                  *046 LM00052    
                            G2 = BCDEC.(G2) + 1K6                                                 *047 LM00053    
                       END OF CONDITIONAL                                                         *048 LM00054    
                       WHENEVER IT .NE. 0                                                         *049 LM00055    
                            P1 = BCDEC.(WK(WK+I).A.007777777700K)                                 *050 LM00056    
                            P2 = BCDEC.(WK(WK+I+D).A.007777777700K)                               *051 LM00057    
                            WHENEVER IT .E. 2                                                     *052 LM00058    
                                 THROUGH GG, FOR J = 0,1,J .GE. NGG                               *053 LM00059    
                                 WHENEVER WK(WK+I) .E. GD(J), P1 = P1 + GK(J)                     *054 LM00060    
                                 WHENEVER WK(WK+I+D) .E. GD(J), P2 = P2 + GK(J)                   *055 LM00061    
      GG                         CONTINUE                                                         *056 LM00062    
                            END OF CONDITIONAL                                                    *057 LM00063    
                       END OF CONDITIONAL                                                         *058 LM00064    
                       WHENEVER P1 .G. P2 .OR. (P1 .E. P2 .AND. G1 .G. G2)                        *059 LM00065    
                            TEMP = WK(WK+I)                                                       *060 LM00066    
                            WK(WK+I) = WK(WK+I+D)                                                 *061 LM00067    
                            WK(WK+I+D) = TEMP                                                     *062 LM00068    
                            TEMP = WJ(WJ+I)                                                       *063 LM00069    
                            WJ(WJ+I) = WJ(WJ+I+D)                                                 *064 LM00070    
                            WJ(WJ+I+D) = TEMP                                                     *065 LM00071    
                            SWAP = 1B                                                             *066 LM00072    
                       END OF CONDITIONAL                                                         *067 LM00073    
      PASS        CONTINUE                                                                        *068 LM00074    
                  WHENEVER SWAP.OR.(D.G.1), TRANSFER TO TOP                                       *069 LM00075    
                  DELETE.(N3,N4,0,ERR)                                                            *070 LM00076    
                  BFOPEN.($W$,N3,N4,B1(B1+432),B2(B2+432),B3(B3+432),ERR)                         *071 LM00077    
                  THROUGH WW, FOR I = 1,1,I.G.N                                                   *072 LM00078    
                  LINE(13) = WK(WK+I)                                                             *073 LM00079    
                  LINE(12) = WJ(WJ+I)                                                             *074 LM00080    
                  BFWRIT.(N3,N4,LINE(13)...14,ERR)                                                *075 LM00081    
      WW          CONTINUE                                                                        *076 LM00082    
                  BFCLOS.(N3,N4,ERR)                                                              *077 LM00083    
                  PRMESS.(DERBC.(N),$ ENTRIES$,N3,N4)                                             *078 LM00084    
                  CHNCOM.(0)                                                                      *079 LM00085    
      ERR         DSKER.                                                                          *080 LM00086    
                                                                                                       LM00087    
                  VECTOR VALUES N1 = $M.F.D.$                                                     *081 LM00088    
                  VECTOR VALUES N2 = $(FILE)$                                                     *082 LM00089    
                  VECTOR VALUES N3 = $   MFD$                                                     *083 LM00090    
                  VECTOR VALUES N4 = $ PUNCH$                                                     *084 LM00091    
                  VECTOR VALUES LINE...LINE(13) = $$                                              *085 LM00092    
                  DIMENSION V(2), BUF(7)                                                          *086 LM00093    
                  VECTOR VALUES C = 0                                                             *087 LM00094    
                  VECTOR VALUES MZE = 4K11                                                        *088 LM00095    
                  VECTOR VALUES GD = $M.F.D.$,$DRUMUT$,$DISKUT$,$DSKEDT$,$M1416$,$C0056$          *089 LM00096    
                  VECTOR VALUES GK = 47K10,46K10,45K10,44K10,43K10,42K10,41K10                    *090 LM00097    
                  VECTOR VALUES NGG = 6                                                           *091 LM00098    
                  DIMENSION B1(0),B2(0),B3(0),WK(0),WJ(0),LINE(13)                                *092 LM00099    
                  BOOLEAN SWAP                                                                    *093 LM00100    
                  VECTOR VALUES P1 = 0                                                            *094 LM00101    
                  VECTOR VALUES P2 = 0                                                            *095 LM00102    
                  VECTOR VALUES I = 1                                                             *096 LM00103    
                  END OF PROGRAM                                                                  *097 LM00104    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00756 TRANSFER VECTOR LENGTH  00021 PROGRAM BEGINS    00154
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      B1     00026 A 1        G1     00043   1        J      00064   1        N3     00107 A 1        SWAP   00115   2  
      B2     00027 A 1        G2     00044   1        LINE   00102 A 1        N4     00110 A 1        TEMP   00116   1  
      B3     00030 A 1        GD     00052 A 1        LOOP   00024   4        NGG    00111 A 1        TOP    00025   4  
      BUF    00040 A 1        GG     00021   4        MODE   00103   1        N      00112   1        V      00121 A 1  
      C      00041 A 1        GK     00061 A 1        MZE    00104 A 1        P1     00113 A 1        WJ     00122 A 1  
      D      00042   1        I      00062 A 1        N1     00105 A 1        P2     00114 A 1        WK     00123 A 1  
      EOF    00022   4        IT     00063   1        N2     00106 A 1        PASS   00021   4        WW     00021   4  
      ERR    00023   4                                                                                                  
0FUNCTION DICTIONARY    
      ATTACH 00000   1        ATTNAM 00001   1        BCDEC  00002   1        BFCLOS 00003   1        BFOPEN 00004   1  
      BFREAD 00005   1        BFWRIT 00006   1        CHNCOM 00007   1        COMARG 00010   1        DELETE 00011   1  
      DERBC  00012   1        DSKER  00013   1        EXIT   00014   1        GETBUF 00015   1        .SETUP 00016   1  
      LJUST  00017   1        PRMESS 00020   1                                                                          
0ABSOLUTE CONSTANTS     
 00142 +256260606060     00146 -202545635131     00132 +000000000016     00152 -266060606060     00140 +007777777700    
 00136 +000001000000     00135 +000000007777     00137 +000023442643     00131 +000000000014     00130 +000000000007    
 00127 +000000000003     00145 -116060606060     00134 +000000001274     00133 +000000000660     00144 -036044462425    
 00143 +314343252721     00151 -206060442624     00150 -204751462745     00124 +000000000000     00147 -204751462245    
 00153 -377777777777     00126 +000000000002     00125 +000000000001     00141 +233000000000                            
0STATEMENT DICTIONARY   
 00022 TXL -300351000346       00023 TXL -300752000751       00024 TXL -300316000307       00025 TXL -300361000357      
0PROGRAM    
                 N'R                                                                001  LM00003
                 MODE = COMARG.(1)                                                  002  LM00004
 00154 TSX +0 07400 4 00016    00155 TSX +0 07400 4 00010    00156 TXH +3 00000 0 00125    00157 STO +0 60100 0 00103   
                 W'R COMARG.(2,IT) .NE. 777777 777777K, N3 = IT                     003  LM00005
 00160 TSX +0 07400 4 00010    00161 TXH +3 00000 0 00126    00162 TXH +3 00000 0 00063    00163 SUB +0 40200 0 00153   
 00164 TZE +0 10000 0 00167    00165 CLA +0 50000 0 00063    00166 STO +0 60100 0 00107                                 
                 W'R MODE .E. $ PROBN$                                              004  LM00006
 00167 CLA +0 50000 0 00103    00170 SUB +0 40200 0 00147    00171 TNZ -0 10000 0 00175                                 
                      IT = 0                                                        005  LM00007
 00172 CLA +0 50000 0 00124    00173 STO +0 60100 0 00063                                                               
                 O'R MODE .E. $ PROGN$                                              006  LM00008
 00174 TRA +0 02000 0 00217    00175 CLA +0 50000 0 00103    00176 SUB +0 40200 0 00150    00177 TNZ -0 10000 0 00203   
                      IT = 1                                                        007  LM00009
 00200 CLA +0 50000 0 00125    00201 STO +0 60100 0 00063                                                               
                 O'R MODE .E. $   MFD$                                              008  LM00010
 00202 TRA +0 02000 0 00217    00203 CLA +0 50000 0 00103    00204 SUB +0 40200 0 00151    00205 TNZ -0 10000 0 00211   
                      IT = 2                                                        009  LM00011
 00206 CLA +0 50000 0 00126    00207 STO +0 60100 0 00063                                                               
                 O'E                                                                010  LM00012
 00210 TRA +0 02000 0 00217                                                                                             
                      PRMESS.($ILLEGAL MODE$,MODE)                                  011  LM00013
 00211 TSX +0 07400 4 00020    00212 TXH +3 00000 0 00143    00213 TXH +3 00000 0 00144    00214 TXH +3 00000 0 00103   
                      CHNCOM.(0)                                                    012  LM00014
 00215 TSX +0 07400 4 00007    00216 TXH +3 00000 0 00124                                                               
                 E'L                                                                013  LM00015
                 GETBUF.(B1,432)                                                    014  LM00016
 00217 TSX +0 07400 4 00015    00220 TXH +3 00000 0 00026    00221 TXH +3 00000 0 00133                                 
                 GETBUF.(B2,432)                                                    015  LM00017
 00222 TSX +0 07400 4 00015    00223 TXH +3 00000 0 00027    00224 TXH +3 00000 0 00133                                 
                 GETBUF.(B3,432)                                                    016  LM00018
 00225 TSX +0 07400 4 00015    00226 TXH +3 00000 0 00030    00227 TXH +3 00000 0 00133                                 
                 GETBUF.(WK,700)                                                    017  LM00019
 00230 TSX +0 07400 4 00015    00231 TXH +3 00000 0 00123    00232 TXH +3 00000 0 00134                                 
                 GETBUF.(WJ,700)                                                    018  LM00020
 00233 TSX +0 07400 4 00015    00234 TXH +3 00000 0 00122    00235 TXH +3 00000 0 00134                                 
                 ATTNAM.(V(2)...2)                                                  019  LM00024
 00236 TSX +0 07400 4 00001    00237 TIX +2 00126 0 00117                                                               
                 ATTACH.(N1,N2)                                                     020  LM00025
 00240 TSX +0 07400 4 00000    00241 TXH +3 00000 0 00105    00242 TXH +3 00000 0 00106                                 
                 BFOPEN.($R$,N1,N2,B1(B1+432),B2(B2+432),MZE,ERR)                   021  LM00026
 00243 CLA +0 50000 0 00027    00244 ADD +0 40000 0 00133    00245 SUB +0 40200 0 00246    00246 TXH +3 00000 0 00027   
 00247 STA +0 62100 0 00262    00250 CLA +0 50000 0 00026    00251 ADD +0 40000 0 00133    00252 SUB +0 40200 0 00253   
 00253 TXH +3 00000 0 00026    00254 STA +0 62100 0 00261    00255 TSX +0 07400 4 00004    00256 TXH +3 00000 0 00145   
 00257 TXH +3 00000 0 00105    00260 TXH +3 00000 0 00106    00261 TXH +3 00000 0 00000    00262 TXH +3 00000 0 00000   
 00263 TXH +3 00000 0 00104    00264 TXH +3 00000 0 00023                                                               
                 ATTACH.(V(2),V(1),ERR)                                             022  LM00027
 00265 TSX +0 07400 4 00000    00266 TXH +3 00000 0 00117    00267 TXH +3 00000 0 00120    00270 TXH +3 00000 0 00023   
                 BFREAD.(N1,N2,BUF(3)...3,EOF,C,ERR)                                023  LM00029
 00271 TSX +0 07400 4 00005    00272 TXH +3 00000 0 00105    00273 TXH +3 00000 0 00106    00274 TIX +2 00127 0 00035   
 00275 TXH +3 00000 0 00022    00276 TXH +3 00000 0 00041    00277 TXH +3 00000 0 00023                                 
                 BFREAD.(N1,N2,BUF(7)...7,EOF,C,ERR)                                024  LM00030
 00300 TSX +0 07400 4 00005    00301 TXH +3 00000 0 00105    00302 TXH +3 00000 0 00106    00303 TIX +2 00130 0 00031   
 00304 TXH +3 00000 0 00022    00305 TXH +3 00000 0 00041    00306 TXH +3 00000 0 00023                                 
      LOOP       BFREAD.(N1,N2,BUF(7)...7,EOF,C,ERR)                                025  LM00031
 00307 TSX +0 07400 4 00005    00310 TXH +3 00000 0 00105    00311 TXH +3 00000 0 00106    00312 TIX +2 00130 0 00031   
 00313 TXH +3 00000 0 00022    00314 TXH +3 00000 0 00041    00315 TXH +3 00000 0 00023                                 
                 W'R ((BUF(7).V.BUF(6)).E.0), T'O LOOP                              026  LM00032
 00316 CAL -0 50000 0 00031    00317 ORA -0 50100 0 00032    00320 SLW +0 60200 0 00753    00321 CLA +0 50000 0 00753   
 00322 SUB +0 40200 0 00124    00323 TNZ -0 10000 0 00325    00324 TRA +0 02000 0 00024                                 
                 WK(WK+I) = LJUST.(BUF(7))                                          027  LM00033
 00325 TSX +0 07400 4 00017    00326 TXH +3 00000 0 00031    00327 STO +0 60100 0 00753    00330 CLA +0 50000 0 00123   
 00331 ADD +0 40000 0 00062    00332 PAX +0 73400 1 00000    00333 CLA +0 50000 0 00753    00334 STO +0 60100 1 00123   
                 WJ(WJ+I) = BUF(6)                                                  028  LM00034
 00335 CLA +0 50000 0 00122    00336 ADD +0 40000 0 00062    00337 PAX +0 73400 1 00000    00340 CLA +0 50000 0 00032   
 00341 STO +0 60100 1 00122                                                                                             
                 I = I + 1                                                          029  LM00035
 00342 CLA +0 50000 0 00062    00343 ADD +0 40000 0 00125    00344 STO +0 60100 0 00062                                 
                 T'O LOOP                                                           030  LM00036
 00345 TRA +0 02000 0 00024                                                                                             
      EOF        N = I - 1                                                          031  LM00037
 00346 CLA +0 50000 0 00062    00347 SUB +0 40200 0 00125    00350 STO +0 60100 0 00112                                 
                 BFCLOS.(N1,N2,ERR)                                                 032  LM00038
 00351 TSX +0 07400 4 00003    00352 TXH +3 00000 0 00105    00353 TXH +3 00000 0 00106    00354 TXH +3 00000 0 00023   
                 D = N                                                              033  LM00039
 00355 CLA +0 50000 0 00112    00356 STO +0 60100 0 00042                                                               
      TOP        SWAP = 0B                                                          034  LM00040
 00357 CLA +0 50000 0 00124    00360 STO +0 60100 0 00115                                                               
                 D = (D+1)/2                                                        035  LM00041
 00361 CLA +0 50000 0 00042    00362 ADD +0 40000 0 00125    00363 LRS +0 76500 0 00043    00364 DVP +0 22100 0 00126   
 00365 STQ -0 60000 0 00042                                                                                             
                 T'H PASS, FOR I = 1,1,I+D .G. N                                    036  LM00042
 00366 CLA +0 50000 0 00125    00367 STO +0 60100 0 00062    00370 TRA +0 02000 0 00374    00371 CLA +0 50000 0 00062   
 00372 ADD +0 40000 0 00125    00373 STO +0 60100 0 00062    00374 CLA +0 50000 0 00062    00375 ADD +0 40000 0 00042   
 00376 SUB +0 40200 0 00112    00377 TZE +0 10000 0 00401    00400 TPL +0 12000 0 00635                                 
                      G1 = WJ(WJ+I)                                                 037  LM00043
 00401 CLA +0 50000 0 00122    00402 ADD +0 40000 0 00062    00403 PAX +0 73400 2 00000    00404 CLA +0 50000 2 00122   
 00405 STO +0 60100 0 00043                                                                                             
                      G2 = WJ(WJ+I+D)                                               038  LM00044
 00406 CLA +0 50000 0 00122    00407 ADD +0 40000 0 00062    00410 ADD +0 40000 0 00042    00411 PAX +0 73400 2 00000   
 00412 CLA +0 50000 2 00122    00413 STO +0 60100 0 00044                                                               
                      W'R G1.RS. 12 .E.$00CMFL$                                     039  LM00045
 00414 CAL -0 50000 0 00131    00415 STA +0 62100 0 00417    00416 CAL -0 50000 0 00043    00417 LGR -0 76500 0 00000   
 00420 SLW +0 60200 0 00753    00421 CLA +0 50000 0 00753    00422 SUB +0 40200 0 00137    00423 TNZ -0 10000 0 00430   
                           G1 = G1.A.7777K                                          040  LM00046
 00424 CAL -0 50000 0 00043    00425 ANA -0 32000 0 00135    00426 SLW +0 60200 0 00043                                 
                      O'E                                                           041  LM00047
 00427 TRA +0 02000 0 00434                                                                                             
                           G1 = BCDEC.(G1) + 1K6                                    042  LM00048
 00430 TSX +0 07400 4 00002    00431 TXH +3 00000 0 00043    00432 ADD +0 40000 0 00136    00433 STO +0 60100 0 00043   
                      E'L                                                           043  LM00049
                      W'R G2.RS. 12 .E.$00CMFL$                                     044  LM00050
 00434 CAL -0 50000 0 00131    00435 STA +0 62100 0 00437    00436 CAL -0 50000 0 00044    00437 LGR -0 76500 0 00000   
 00440 SLW +0 60200 0 00753    00441 CLA +0 50000 0 00753    00442 SUB +0 40200 0 00137    00443 TNZ -0 10000 0 00450   
                           G2 = G2.A.7777K                                          045  LM00051
 00444 CAL -0 50000 0 00044    00445 ANA -0 32000 0 00135    00446 SLW +0 60200 0 00044                                 
                      O'E                                                           046  LM00052
 00447 TRA +0 02000 0 00454                                                                                             
                           G2 = BCDEC.(G2) + 1K6                                    047  LM00053
 00450 TSX +0 07400 4 00002    00451 TXH +3 00000 0 00044    00452 ADD +0 40000 0 00136    00453 STO +0 60100 0 00044   
                      E'L                                                           048  LM00054
                      W'R IT .NE. 0                                                 049  LM00055
 00454 CLA +0 50000 0 00063    00455 SUB +0 40200 0 00124    00456 TZE +0 10000 0 00545                                 
                           P1 = BCDEC.(WK(WK+I).A.007777777700K)                    050  LM00056
 00457 CLA +0 50000 0 00123    00460 ADD +0 40000 0 00062    00461 PAX +0 73400 1 00000    00462 CAL -0 50000 1 00123   
 00463 ANA -0 32000 0 00140    00464 SLW +0 60200 0 00753    00465 TSX +0 07400 4 00002    00466 TXH +3 00000 0 00753   
 00467 STO +0 60100 0 00113                                                                                             
                           P2 = BCDEC.(WK(WK+I+D).A.007777777700K)                  051  LM00057
 00470 CLA +0 50000 0 00123    00471 ADD +0 40000 0 00062    00472 ADD +0 40000 0 00042    00473 PAX +0 73400 1 00000   
 00474 CAL -0 50000 1 00123    00475 ANA -0 32000 0 00140    00476 SLW +0 60200 0 00753    00477 TSX +0 07400 4 00002   
 00500 TXH +3 00000 0 00753    00501 STO +0 60100 0 00114                                                               
                           W'R IT .E. 2                                             052  LM00058
 00502 CLA +0 50000 0 00063    00503 SUB +0 40200 0 00126    00504 TNZ -0 10000 0 00545                                 
                                T'H GG, FOR J = 0,1,J .GE. NGG                      053  LM00059
 00505 CLA +0 50000 0 00124    00506 STO +0 60100 0 00064    00507 TRA +0 02000 0 00513    00510 CLA +0 50000 0 00064   
 00511 ADD +0 40000 0 00125    00512 STO +0 60100 0 00064    00513 CLA +0 50000 0 00064    00514 SUB +0 40200 0 00111   
 00515 TZE +0 10000 0 00545    00516 TPL +0 12000 0 00545                                                               
                                W'R WK(WK+I) .E. GD(J), P1 = P1 + GK(J)             054  LM00060
 00517 CLA +0 50000 0 00123    00520 ADD +0 40000 0 00062    00521 PAX +0 73400 1 00000    00522 LXA +0 53400 2 00064   
 00523 CLA +0 50000 1 00123    00524 SUB +0 40200 2 00052    00525 TNZ -0 10000 0 00531    00526 CLA +0 50000 0 00113   
 00527 ADD +0 40000 2 00061    00530 STO +0 60100 0 00113                                                               
                                W'R WK(WK+I+D) .E. GD(J), P2 = P2 + GK(J)           055  LM00061
 00531 CLA +0 50000 0 00123    00532 ADD +0 40000 0 00062    00533 ADD +0 40000 0 00042    00534 PAX +0 73400 1 00000   
 00535 LXA +0 53400 2 00064    00536 CLA +0 50000 1 00123    00537 SUB +0 40200 2 00052    00540 TNZ -0 10000 0 00544   
 00541 CLA +0 50000 0 00114    00542 ADD +0 40000 2 00061    00543 STO +0 60100 0 00114                                 
      GG                        C'E                                                 056  LM00062
 00544 TRA +0 02000 0 00510                                                                                             
                           E'L                                                      057  LM00063
                      E'L                                                           058  LM00064
                      W'R P1 .G. P2 .OR. (P1 .E. P2 .AND. G1 .G. G2)                059  LM00065
 00545 CLA +0 50000 0 00043    00546 SUB +0 40200 0 00044    00547 TZE +0 10000 0 00554    00550 TMI -0 12000 0 00554   
 00551 CLA +0 50000 0 00113    00552 SUB +0 40200 0 00114    00553 TZE +0 10000 0 00560    00554 CLA +0 50000 0 00113   
 00555 SUB +0 40200 0 00114    00556 TZE +0 10000 0 00634    00557 TMI -0 12000 0 00634                                 
                           TEMP = WK(WK+I)                                          060  LM00066
 00560 CLA +0 50000 0 00123    00561 ADD +0 40000 0 00062    00562 PAX +0 73400 2 00000    00563 CLA +0 50000 2 00123   
 00564 STO +0 60100 0 00116                                                                                             
                           WK(WK+I) = WK(WK+I+D)                                    061  LM00067
 00565 CLA +0 50000 0 00123    00566 ADD +0 40000 0 00062    00567 ADD +0 40000 0 00042    00570 STO +0 60100 0 00753   
 00571 CLA +0 50000 0 00123    00572 ADD +0 40000 0 00062    00573 PAX +0 73400 1 00000    00574 LXA +0 53400 2 00753   
 00575 CLA +0 50000 2 00123    00576 STO +0 60100 1 00123                                                               
                           WK(WK+I+D) = TEMP                                        062  LM00068
 00577 CLA +0 50000 0 00123    00600 ADD +0 40000 0 00062    00601 ADD +0 40000 0 00042    00602 PAX +0 73400 1 00000   
 00603 CLA +0 50000 0 00116    00604 STO +0 60100 1 00123                                                               
                           TEMP = WJ(WJ+I)                                          063  LM00069
 00605 CLA +0 50000 0 00122    00606 ADD +0 40000 0 00062    00607 PAX +0 73400 2 00000    00610 CLA +0 50000 2 00122   
 00611 STO +0 60100 0 00116                                                                                             
                           WJ(WJ+I) = WJ(WJ+I+D)                                    064  LM00070
 00612 CLA +0 50000 0 00122    00613 ADD +0 40000 0 00062    00614 ADD +0 40000 0 00042    00615 STO +0 60100 0 00753   
 00616 CLA +0 50000 0 00122    00617 ADD +0 40000 0 00062    00620 PAX +0 73400 1 00000    00621 LXA +0 53400 2 00753   
 00622 CLA +0 50000 2 00122    00623 STO +0 60100 1 00122                                                               
                           WJ(WJ+I+D) = TEMP                                        065  LM00071
 00624 CLA +0 50000 0 00122    00625 ADD +0 40000 0 00062    00626 ADD +0 40000 0 00042    00627 PAX +0 73400 1 00000   
 00630 CLA +0 50000 0 00116    00631 STO +0 60100 1 00122                                                               
                           SWAP = 1B                                                066  LM00072
 00632 CLA +0 50000 0 00125    00633 STO +0 60100 0 00115                                                               
                      E'L                                                           067  LM00073
      PASS       C'E                                                                068  LM00074
 00634 TRA +0 02000 0 00371                                                                                             
                 W'R SWAP.OR.(D.G.1), T'O TOP                                       069  LM00075
 00635 CLA +0 50000 0 00042    00636 SUB +0 40200 0 00125    00637 TZE +0 10000 0 00641    00640 TPL +0 12000 0 00643   
 00641 NZT -0 52000 0 00115    00642 TRA +0 02000 0 00644    00643 TRA +0 02000 0 00025                                 
                 DELETE.(N3,N4,0,ERR)                                               070  LM00076
 00644 TSX +0 07400 4 00011    00645 TXH +3 00000 0 00107    00646 TXH +3 00000 0 00110    00647 TXH +3 00000 0 00124   
 00650 TXH +3 00000 0 00023                                                                                             
                 BFOPEN.($W$,N3,N4,B1(B1+432),B2(B2+432),B3(B3+432),ERR)            071  LM00077
 00651 CLA +0 50000 0 00030    00652 ADD +0 40000 0 00133    00653 SUB +0 40200 0 00654    00654 TXH +3 00000 0 00030   
 00655 STA +0 62100 0 00676    00656 CLA +0 50000 0 00027    00657 ADD +0 40000 0 00133    00660 SUB +0 40200 0 00661   
 00661 TXH +3 00000 0 00027    00662 STA +0 62100 0 00675    00663 CLA +0 50000 0 00026    00664 ADD +0 40000 0 00133   
 00665 SUB +0 40200 0 00666    00666 TXH +3 00000 0 00026    00667 STA +0 62100 0 00674    00670 TSX +0 07400 4 00004   
 00671 TXH +3 00000 0 00152    00672 TXH +3 00000 0 00107    00673 TXH +3 00000 0 00110    00674 TXH +3 00000 0 00000   
 00675 TXH +3 00000 0 00000    00676 TXH +3 00000 0 00000    00677 TXH +3 00000 0 00023                                 
                 T'H WW, FOR I = 1,1,I.G.N                                          072  LM00078
 00700 CLA +0 50000 0 00125    00701 STO +0 60100 0 00062    00702 TRA +0 02000 0 00706    00703 CLA +0 50000 0 00062   
 00704 ADD +0 40000 0 00125    00705 STO +0 60100 0 00062    00706 CLA +0 50000 0 00062    00707 SUB +0 40200 0 00112   
 00710 TZE +0 10000 0 00712    00711 TPL +0 12000 0 00732                                                               
                 LINE(13) = WK(WK+I)                                                073  LM00079
 00712 CLA +0 50000 0 00123    00713 ADD +0 40000 0 00062    00714 PAX +0 73400 2 00000    00715 CLA +0 50000 2 00123   
 00716 STO +0 60100 0 00065                                                                                             
                 LINE(12) = WJ(WJ+I)                                                074  LM00080
 00717 CLA +0 50000 0 00122    00720 ADD +0 40000 0 00062    00721 PAX +0 73400 2 00000    00722 CLA +0 50000 2 00122   
 00723 STO +0 60100 0 00066                                                                                             
                 BFWRIT.(N3,N4,LINE(13)...14,ERR)                                   075  LM00081
 00724 TSX +0 07400 4 00006    00725 TXH +3 00000 0 00107    00726 TXH +3 00000 0 00110    00727 TIX +2 00132 0 00065   
 00730 TXH +3 00000 0 00023                                                                                             
      WW         C'E                                                                076  LM00082
 00731 TRA +0 02000 0 00703                                                                                             
                 BFCLOS.(N3,N4,ERR)                                                 077  LM00083
 00732 TSX +0 07400 4 00003    00733 TXH +3 00000 0 00107    00734 TXH +3 00000 0 00110    00735 TXH +3 00000 0 00023   
                 PRMESS.(DERBC.(N),$ ENTRIES$,N3,N4)                                078  LM00084
 00736 TSX +0 07400 4 00012    00737 TXH +3 00000 0 00112    00740 STO +0 60100 0 00753    00741 TSX +0 07400 4 00020   
 00742 TXH +3 00000 0 00753    00743 TXH +3 00000 0 00146    00744 TXH +3 00000 0 00142    00745 TXH +3 00000 0 00107   
 00746 TXH +3 00000 0 00110                                                                                             
                 CHNCOM.(0)                                                         079  LM00085
 00747 TSX +0 07400 4 00007    00750 TXH +3 00000 0 00124                                                               
      ERR        DSKER.                                                             080  LM00086
 00751 TSX +0 07400 4 00013                                                                                             
                 V'S N1 = $M.F.D.$                                                  081  LM00088
 00105     -0 43326 3 32433                                                                                             
                 V'S N2 = $(FILE)$                                                  082  LM00089
 00106     -3 42631 4 32534                                                                                             
                 V'S N3 = $   MFD$                                                  083  LM00090
 00107     -2 06060 4 42624                                                                                             
                 V'S N4 = $ PUNCH$                                                  084  LM00091
 00110     -2 04764 4 52330                                                                                             
                 V'S LINE...LINE(13) = $$                                           085  LM00092
 00065     -2 06060 6 06060    00066     -2 06060 6 06060    00067     -2 06060 6 06060    00070     -2 06060 6 06060   
 00071     -2 06060 6 06060    00072     -2 06060 6 06060    00073     -2 06060 6 06060    00074     -2 06060 6 06060   
 00075     -2 06060 6 06060    00076     -2 06060 6 06060    00077     -2 06060 6 06060    00100     -2 06060 6 06060   
 00101     -2 06060 6 06060    00102     -2 06060 6 06060                                                               
                 D'N V(2), BUF(7)                                                   086  LM00093
                 V'S C = 0                                                          087  LM00094
 00041     +0 00000 0 00000                                                                                             
                 V'S MZE = 4K11                                                     088  LM00095
 00104     -0 00000 0 00000                                                                                             
                 V'S GD = $M.F.D.$,$DRUMUT$,$DISKUT$,$DSKEDT$,$M1416$,$C0056$       089  LM00096
 00045     +2 30000 0 50660    00046     -0 40104 0 10660    00047     +2 46242 2 52463    00050     +2 43162 4 26463   
 00051     +2 45164 4 46463    00052     -0 43326 3 32433                                                               
                 V'S GK = 47K10,46K10,45K10,44K10,43K10,42K10,41K10                 090  LM00097
 00053     -0 10000 0 00000    00054     -0 20000 0 00000    00055     -0 30000 0 00000    00056     -0 40000 0 00000   
 00057     -0 50000 0 00000    00060     -0 60000 0 00000    00061     -0 70000 0 00000                                 
                 V'S NGG = 6                                                        091  LM00098
 00111     +0 00000 0 00006                                                                                             
                 D'N B1(0),B2(0),B3(0),WK(0),WJ(0),LINE(13)                         092  LM00099
                 B'N SWAP                                                           093  LM00100
                 V'S P1 = 0                                                         094  LM00101
 00113     +0 00000 0 00000                                                                                             
                 V'S P2 = 0                                                         095  LM00102
 00114     +0 00000 0 00000                                                                                             
                 V'S I = 1                                                          096  LM00103
 00062     +0 00000 0 00001                                                                                             
                 E'M                                                                097  LM00104
 00752 TSX +0 07400 4 00014                                                                                             




 MOVER   BCD 09/20/68 0220.1    3014         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   MOVER   MAD            02/15/68    1543.0
-                 
                 ...MOVE CONTENTS OF ONE DIRECTORY TO ANOTHER.                                         LM00001    
                                                                                                       LM00002    
                 ...R MOVER FMPB FMPG TOPB TOPG -'(STOP)'- -'(CHGE)'-                                  LM00003    
 TRUNCATED..
          R...(CHGE) ARGUMENT WILL MOVE PROTECTED FILES IF CAN BE CHFILE LM00004    
                 ...(CHGE) ARGUMENT WILL MOVE PROTECTED FILES IF CAN BE CHFILE                         LM00004    
                 ...(STOP) ARGUMENT WILL STOP DEAD IN FROM-DIRECTORY                                   LM00005    
                                                                                                       LM00006    
                  NORMAL MODE IS INTEGER                                                          *001 LM00007    
                  DIMENSION A(20)                                                                 *002 LM00008    
                  DIMENSION ME(2)                                                                 *003 LM00009    
                  GCLS.(A,0)                                                                      *004 LM00010    
                  A(1) = SPLFN.(A(1))                                                             *005 LM00011    
                  A(3) = SPLFN.(A(3))                                                             *006 LM00012    
                  FERRTN.(ERR)                                                                    *007 LM00013    
                  ATTNAM.(ME(1)...2)                                                              *008 LM00014    
                                                                                                       LM00015    
                  ATTACH.(A(1),A(2))                                                              *009 LM00016    
                  BFOPEN.($R$,UFD,FL,B1,-0,-0,ERR)                                                *010 LM00017    
                  BFREAD.(UFD,FL,X(2)...3,ERR,-0,ERR)                                             *011 LM00018    
                                                                                                       LM00019    
      RD          BFREAD.(UFD,FL,X(6)...7,EOF,-0,ERR)                                             *012 LM00020    
                  WHENEVER X(6).E.0.OR.X(5).E.0.OR.X(6).E.UFD,TRANSFER TORD                       *013 LM00021    
                                                                                                       LM00022    
                  MOVFIL.(X(6),X(5),A(3),A(4),SKID,CODE)                                          *014 LM00023    
                  TRANSFER TO RD                                                                  *015 LM00024    
                                                                                                       LM00025    
      EOF         WHENEVER A(5).NE.$(STOP)$                                                       *016 LM00026    
                       ATTACH.(ME(1),ME)                                                          *017 LM00027    
                       CHNCOM.(0)                                                                 *018 LM00028    
                  OTHERWISE                                                                       *019 LM00029    
                       DEAD.                                                                      *020 LM00030    
                  END OF CONDITIONAL                                                              *021 LM00031    
                                                                                                       LM00032    
      SKID        WHENEVER A(6) .E. $(CHGE)$ .AND. CODE .E. 5 .AND.                               *022 LM00033    
                1      X(2).A.7K5 .NE. 0                                                          *022 LM00034    
                       CHFILE.(X(6),X(5),0,-0,-0,CNT)                                             *023 LM00035    
                       MOVFIL.(X(6),X(5),A(3),A(4),CNT,CODE)                                      *024 LM00036    
                  OTHERWISE                                                                       *025 LM00037    
      CNT              PRMESS.(X(6),X(5),WHY(CODE))                                               *026 LM00038    
                  END OF CONDITIONAL                                                              *027 LM00039    
                  TRANSFER TO RD                                                                  *028 LM00040    
                                                                                                       LM00041    
      ERR         PRMESS.($FILE$,$ERROR$)                                                         *029 LM00042    
                  TRANSFER TO EOF                                                                 *030 LM00043    
                                                                                                       LM00044    
                  VECTOR VALUES UFD = $U.F.D.$                                                    *031 LM00045    
                  VECTOR VALUES FL = $(FILE)$                                                     *032 LM00046    
                  VECTOR VALUES WHY = $ 0$,$ 1$,$ PRIV$,$ FNF$,$ LINK$,                           *033 LM00047    
                1   $ PROT$,$ THERE$,$ 7$,$ ACTIV$,$ NOUFD$                                       *033 LM00048    
                  DIMENSION B(432)                                                                *034 LM00049    
                  DIMENSION X(7)                                                                  *035 LM00050    
                  EQUIVALENCE (B1,B(432))                                                         *036 LM00051    
                                                                                                       LM00052    
                  END OF PROGRAM                                                                  *037 LM00053    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01173 TRANSFER VECTOR LENGTH  00016 PROGRAM BEGINS    00777
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      A      00731 A 1        CNT    00700   4        ERR    00702   4        RD     00703   4        WHY    00751 A 1  
      B1     00017   1        CODE   00732   1        FL     00733 A 1        SKID   00704   4        X      00761 A 1  
      B      00677 A 1        EOF    00701   4        ME     00736 A 1        UFD    00737 A 1                          
0FUNCTION DICTIONARY    
      ATTACH 00000   1        ATTNAM 00001   1        BFOPEN 00002   1        BFREAD 00003   1        CHFILE 00004   1  
      CHNCOM 00005   1        DEAD   00006   1        EXIT   00007   1        FERRTN 00010   1        GCLS   00011   1  
      .SETUP 00012   1        MOVFIL 00013   1        PRMESS 00014   1        SPLFN  00015   1                          
0ABSOLUTE CONSTANTS     
 00772 +255151465160     00773 +263143256060     00775 -342330272534     00766 +000000000005     00770 +000000700000    
 00776 -346263464734     00767 +000000000007     00765 +000000000003     00774 -116060606060     00764 +000000000002    
 00762 +000000000000     00763 +000000000001     00771 +233000000000                                                    
0STATEMENT DICTIONARY   
 00700 TXL -301161001151       00701 TXL -301103001100       00702 TXL -301165001162       00703 TXL -301056001045      
 00704 TXL -301126001112                                                                                                
0PROGRAM    
                 N'R                                                                001  LM00007
                 D'N A(20)                                                          002  LM00008
                 D'N ME(2)                                                          003  LM00009
                 GCLS.(A,0)                                                         004  LM00010
 00777 TSX +0 07400 4 00012    01000 TSX +0 07400 4 00011    01001 TXH +3 00000 0 00731    01002 TXH +3 00000 0 00762   
                 A(1) = SPLFN.(A(1))                                                005  LM00011
 01003 TSX +0 07400 4 00015    01004 TXH +3 00000 0 00730    01005 STO +0 60100 0 00730                                 
                 A(3) = SPLFN.(A(3))                                                006  LM00012
 01006 TSX +0 07400 4 00015    01007 TXH +3 00000 0 00726    01010 STO +0 60100 0 00726                                 
                 FERRTN.(ERR)                                                       007  LM00013
 01011 TSX +0 07400 4 00010    01012 TXH +3 00000 0 00702                                                               
                 ATTNAM.(ME(1)...2)                                                 008  LM00014
 01013 TSX +0 07400 4 00001    01014 TIX +2 00764 0 00735                                                               
                 ATTACH.(A(1),A(2))                                                 009  LM00016
 01015 TSX +0 07400 4 00000    01016 TXH +3 00000 0 00730    01017 TXH +3 00000 0 00727                                 
                 BFOPEN.($R$,UFD,FL,B1,-0,-0,ERR)                                   010  LM00017
 01020 CLS +0 50200 0 00762    01021 STO +0 60100 0 01167    01022 CLS +0 50200 0 00762    01023 STO +0 60100 0 01170   
 01024 TSX +0 07400 4 00002    01025 TXH +3 00000 0 00774    01026 TXH +3 00000 0 00737    01027 TXH +3 00000 0 00733   
 01030 TXH +3 00000 0 00017    01031 TXH +3 00000 0 01170    01032 TXH +3 00000 0 01167    01033 TXH +3 00000 0 00702   
                 BFREAD.(UFD,FL,X(2)...3,ERR,-0,ERR)                                011  LM00018
 01034 CLS +0 50200 0 00762    01035 STO +0 60100 0 01170    01036 TSX +0 07400 4 00003    01037 TXH +3 00000 0 00737   
 01040 TXH +3 00000 0 00733    01041 TIX +2 00765 0 00757    01042 TXH +3 00000 0 00702    01043 TXH +3 00000 0 01170   
 01044 TXH +3 00000 0 00702                                                                                             
      RD         BFREAD.(UFD,FL,X(6)...7,EOF,-0,ERR)                                012  LM00020
 01045 CLS +0 50200 0 00762    01046 STO +0 60100 0 01170    01047 TSX +0 07400 4 00003    01050 TXH +3 00000 0 00737   
 01051 TXH +3 00000 0 00733    01052 TIX +2 00767 0 00753    01053 TXH +3 00000 0 00701    01054 TXH +3 00000 0 01170   
 01055 TXH +3 00000 0 00702                                                                                             
                 W'R X(6).E.0.OR.X(5).E.0.OR.X(6).E.UFD,T'ORD                       013  LM00021
 01056 CLA +0 50000 0 00753    01057 SUB +0 40200 0 00737    01060 TZE +0 10000 0 01067    01061 CLA +0 50000 0 00754   
 01062 SUB +0 40200 0 00762    01063 TZE +0 10000 0 01067    01064 CLA +0 50000 0 00753    01065 SUB +0 40200 0 00762   
 01066 TNZ -0 10000 0 01070    01067 TRA +0 02000 0 00703                                                               
                 MOVFIL.(X(6),X(5),A(3),A(4),SKID,CODE)                             014  LM00023
 01070 TSX +0 07400 4 00013    01071 TXH +3 00000 0 00753    01072 TXH +3 00000 0 00754    01073 TXH +3 00000 0 00726   
 01074 TXH +3 00000 0 00725    01075 TXH +3 00000 0 00704    01076 TXH +3 00000 0 00732                                 
                 T'O RD                                                             015  LM00024
 01077 TRA +0 02000 0 00703                                                                                             
      EOF        W'R A(5).NE.$(STOP)$                                               016  LM00026
 01100 CLA +0 50000 0 00724    01101 SUB +0 40200 0 00776    01102 TZE +0 10000 0 01111                                 
                      ATTACH.(ME(1),ME)                                             017  LM00027
 01103 TSX +0 07400 4 00000    01104 TXH +3 00000 0 00735    01105 TXH +3 00000 0 00736                                 
                      CHNCOM.(0)                                                    018  LM00028
 01106 TSX +0 07400 4 00005    01107 TXH +3 00000 0 00762                                                               
                 O'E                                                                019  LM00029
 01110 TRA +0 02000 0 01112                                                                                             
                      DEAD.                                                         020  LM00030
 01111 TSX +0 07400 4 00006                                                                                             
                 E'L                                                                021  LM00031
      SKID       W'R A(6) .E. $(CHGE)$ .AND. CODE .E. 5 .AND.                       022  LM00033
                1     X(2).A.7K5 .NE. 0                                             022  LM00034
 01112 CAL -0 50000 0 00757    01113 ANA -0 32000 0 00770    01114 SLW +0 60200 0 01170    01115 CLA +0 50000 0 01170   
 01116 SUB +0 40200 0 00762    01117 TZE +0 10000 0 01151    01120 CLA +0 50000 0 00732    01121 SUB +0 40200 0 00766   
 01122 TNZ -0 10000 0 01151    01123 CLA +0 50000 0 00723    01124 SUB +0 40200 0 00775    01125 TNZ -0 10000 0 01151   
                      CHFILE.(X(6),X(5),0,-0,-0,CNT)                                023  LM00035
 01126 CLS +0 50200 0 00762    01127 STO +0 60100 0 01170    01130 CLS +0 50200 0 00762    01131 STO +0 60100 0 01167   
 01132 TSX +0 07400 4 00004    01133 TXH +3 00000 0 00753    01134 TXH +3 00000 0 00754    01135 TXH +3 00000 0 00762   
 01136 TXH +3 00000 0 01167    01137 TXH +3 00000 0 01170    01140 TXH +3 00000 0 00700                                 
                      MOVFIL.(X(6),X(5),A(3),A(4),CNT,CODE)                         024  LM00036
 01141 TSX +0 07400 4 00013    01142 TXH +3 00000 0 00753    01143 TXH +3 00000 0 00754    01144 TXH +3 00000 0 00726   
 01145 TXH +3 00000 0 00725    01146 TXH +3 00000 0 00700    01147 TXH +3 00000 0 00732                                 
                 O'E                                                                025  LM00037
 01150 TRA +0 02000 0 01161                                                                                             
      CNT             PRMESS.(X(6),X(5),WHY(CODE))                                  026  LM00038
 01151 CLA +0 50000 0 00732    01152 SUB +0 40200 0 01153    01153 TXH +3 00000 0 00751    01154 STA +0 62100 0 01160   
 01155 TSX +0 07400 4 00014    01156 TXH +3 00000 0 00753    01157 TXH +3 00000 0 00754    01160 TXH +3 00000 0 00000   
                 E'L                                                                027  LM00039
                 T'O RD                                                             028  LM00040
 01161 TRA +0 02000 0 00703                                                                                             
      ERR        PRMESS.($FILE$,$ERROR$)                                            029  LM00042
 01162 TSX +0 07400 4 00014    01163 TXH +3 00000 0 00773    01164 TXH +3 00000 0 00772                                 
                 T'O EOF                                                            030  LM00043
 01165 TRA +0 02000 0 00701                                                                                             
                 V'S UFD = $U.F.D.$                                                 031  LM00045
 00737     -2 43326 3 32433                                                                                             
                 V'S FL = $(FILE)$                                                  032  LM00046
 00733     -3 42631 4 32534                                                                                             
                 V'S WHY = $ 0$,$ 1$,$ PRIV$,$ FNF$,$ LINK$,                        033  LM00047
                1  $ PROT$,$ THERE$,$ 7$,$ ACTIV$,$ NOUFD$                          033  LM00048
 00740     -2 04546 6 42624    00741     -2 02123 6 33165    00742     -2 00760 6 06060    00743     -2 06330 2 55125   
 00744     -2 04751 4 66360    00745     -2 04331 4 54260    00746     -2 02645 2 66060    00747     -2 04751 3 16560   
 00750     -2 00160 6 06060    00751     -2 00060 6 06060                                                               
                 D'N B(432)                                                         034  LM00049
                 D'N X(7)                                                           035  LM00050
                 E'E (B1,B(432))                                                    036  LM00051
                 E'M                                                                037  LM00053
 01166 TSX +0 07400 4 00007                                                                                             




  MSCD   BCD 02/09/69 0651.2   15240         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE    MSCD   MAD            01/20/69    1143.8
-                 
       SCD            PLOT OUT SCHEDULING QUEUES.                                                      LM00001    
                      7/13/66 - NOEL I. MORRIS                                                         LM00002    
                                                                                                       LM00003    
                  MODIFIED FOR SHORT 'M.' FORM BY R ROACH 10-15-67                                     LM00004    
                                                                                                       LM00005    
                  NORMAL MODE IS INTEGER                                                          *001 LM00006    
                  BOOLEAN PROBOK, LEVOK, MDOT                                                     *002 LM00007    
                                                                                                       LM00008    
                  VECTOR VALUES QLEN = 0, 0                                                       *003 LM00009    
                  EQUIVALENCE (FQLEN, QLEN)                                                       *004 LM00010    
                  FLOATING POINT FQLEN                                                            *005 LM00011    
                                                                                                       LM00012    
                  VECTOR VALUES MINUS1 = -1                                                       *006 LM00013    
                  VECTOR VALUES FENCE  = 777777777777K                                            *007 LM00014    
                  VECTOR VALUES COMMND = $COMMND$                                                 *008 LM00015    
                  VECTOR VALUES AVQLEN = $AVQLEN$                                                 *009 LM00016    
                  VECTOR VALUES OVRTOT = $OVRTOT$                                                 *010 LM00017    
                  VECTOR VALUES  PLIST = $PLIST$                                                  *011 LM00018    
                  VECTOR VALUES  ULIST = $ULIST$                                                  *012 LM00019    
                  VECTOR VALUES  PROBN = $PROBN$                                                  *013 LM00020    
                  VECTOR VALUES  PROGN = $PROGN$                                                  *014 LM00021    
                  VECTOR VALUES  MAXLV = $MAXLV$                                                  *015 LM00022    
                  VECTOR VALUES WRKTIM = $WRKTIM$                                                 *016 LM00023    
                  VECTOR VALUES TIMLEV = $TIMLEV$                                                 *017 LM00024    
                  VECTOR VALUES UCLOCK = $UCLOCK$                                                 *018 LM00025    
                  VECTOR VALUES UCHARG = $UCHARG$                                                 *019 LM00026    
                  VECTOR VALUES NUSERS = $NUSERS$                                                 *020 LM00027    
                  VECTOR VALUES MXUSRS = $MXUSRS$                                                 *021 LM00028    
                  VECTOR VALUES TOTTIM = $TOTTIM$                                                 *022 LM00029    
                  VECTOR VALUES BKGTIM = $BKGTIM$                                                 *023 LM00030    
                  VECTOR VALUES SWPTIM = $SWPTIM$                                                 *024 LM00031    
                  VECTOR VALUES STRTIM = $STRTIM$                                                 *025 LM00032    
                  VECTOR VALUES     PB = $PB    $                                                 *026 LM00033    
                  VECTOR VALUES      N = $N$                                                      *027 LM00034    
                  DIMENSION D1(1), D2(1), D3(1)                                                   *028 LM00035    
                  FLOATING POINT D0, D1, D2, D3                                                   *029 LM00036    
                                                                                                       LM00037    
                                                                                                       LM00038    
                                                                                                       LM00039    
                  VECTOR VALUES LEVEL ... LEVEL (50) = -1                                         *030 LM00040    
                  VECTOR VALUES   POS ...   POS (50) = -1                                         *031 LM00041    
                  OLDTOT = 0                                                                      *032 LM00042    
                  VECTOR VALUES SPACE ... SPACE (10) = 606033575757K                              *033 LM00043    
                  VECTOR VALUES BLANK = 605757575757K                                             *034 LM00044    
                  VECTOR VALUES COMMA = 736057575757K                                             *035 LM00045    
                  VECTOR VALUES EQUAL = 601360575757K                                             *036 LM00046    
                                                                                                       LM00047    
                                                                                                       LM00048    
                                                                                                       LM00049    
                                                                                                       LM00050    
                      BEGINNING OF PROGRAM.                                                            LM00051    
                                                                                                       LM00052    
                  WHENEVER COMARG.(0) .E. $    M.$                                                *037 LM00053    
                       MDOT = 1B                                                                  *038 LM00054    
                  OTHERWISE                                                                       *039 LM00055    
                       MDOT = 0B                                                                  *040 LM00056    
                  END OF CONDITIONAL                                                              *041 LM00057    
                  PRMESS.                                                                         *042 LM00058    
                  SLTIM = COMARG. (1)                                                             *043 LM00059    
                  WHENEVER SLTIM .E. FENCE                                                        *044 LM00060    
                       SLTIM = 0                                                                  *045 LM00061    
                  OTHERWISE                                                                       *046 LM00062    
                       SLTIM = BCDEC. (SLTIM) * 60                                                *047 LM00063    
                  END OF CONDITIONAL                                                              *048 LM00064    
                                                                                                       LM00065    
                      GET COMMON LOCATION VALUES.                                                      LM00066    
                                                                                                       LM00067    
                  AVQLEN = ACORE. (AVQLEN) .RS. 18                                                *049 LM00068    
                  OVRTOT = ACORE. (OVRTOT) .RS. 18                                                *050 LM00069    
                  PLIST = COMLOC. (PLIST)                                                         *051 LM00070    
                  ULIST = COMLOC. (ULIST)                                                         *052 LM00071    
                  PROBN = COMLOC. (PROBN)                                                         *053 LM00072    
                  PROGN = COMLOC. (PROGN)                                                         *054 LM00073    
                  COMMND = COMLOC. (COMMND)                                                       *055 LM00074    
                  MAXLV = COMLOC. (MAXLV)                                                         *056 LM00075    
                  WRKTIM = COMLOC. (WRKTIM)                                                       *057 LM00076    
                  TIMLEV = COMLOC. (TIMLEV)                                                       *058 LM00077    
                  UCLOCK = COMLOC. (UCLOCK)                                                       *059 LM00078    
                  UCHARG = COMLOC. (UCHARG)                                                       *060 LM00079    
                  NUSERS = COMLOC. (NUSERS)                                                       *061 LM00080    
                  MXUSRS = COMLOC. (MXUSRS)                                                       *062 LM00081    
                  TOTTIM = COMLOC. (TOTTIM)                                                       *063 LM00082    
                  BKGTIM = COMLOC. (BKGTIM)                                                       *064 LM00083    
                  SWPTIM = COMLOC. (SWPTIM)                                                       *065 LM00084    
                  STRTIM = COMLOC.(STRTIM)                                                        *066 LM00085    
                     PB  = COMLOC.(PB)                                                            *067 LM00086    
                  N = COMLOC. (N)                                                                 *068 LM00087    
                  TIMNOW = GETIME.(0)                                                             *069 LM00088    
                                                                                                       LM00089    
                                                                                                       LM00090    
                      INITIALIZE QUEUES.                                                               LM00091    
                                                                                                       LM00092    
                  FIRST = 1                                                                       *070 LM00093    
      BEGIN       SPRAY. (MINUS1, LEVEL ... LEVEL (N), POS ... POS (N) )                          *071 LM00094    
                                                                                                       LM00095    
                                                                                                       LM00096    
                      PICK UP QUEUE POSITIONS.                                                         LM00097    
                                                                                                       LM00098    
                  THROUGH LEVLOP, FOR QLEV = 0, 1, QLEV .G. MAXLV                                 *072 LM00099    
                  NEXQ = QLEV                                                                     *073 LM00100    
                  QPOS = 1                                                                        *074 LM00101    
                                                                                                       LM00102    
      NEXT        NEXQ = GLOC. (PLIST+NEXQ)                                                       *075 LM00103    
                  USR = GLOC. (ULIST+NEXQ)                                                        *076 LM00104    
                  WHENEVER USR .NE. MINUS1                                                        *077 LM00105    
                       LEVEL (USR) = QLEV - 1                                                     *078 LM00106    
                       POS (USR) = QPOS                                                           *079 LM00107    
                       QPOS = QPOS + 1                                                            *080 LM00108    
                       TRANSFER TO NEXT                                                           *081 LM00109    
                  END OF CONDITIONAL                                                              *082 LM00110    
                                                                                                       LM00111    
      LEVLOP      CONTINUE                                                                        *083 LM00112    
                                                                                                       LM00113    
                                                                                                       LM00114    
                      GET AVERAGE QUEUE LENGTH AND PRINT.                                              LM00115    
                                                                                                       LM00116    
                  TIME = GTDYTM. (0)                                                              *084 LM00117    
                  FTIME. (TIME, DATE, TIME)                                                       *085 LM00118    
                  DATE = ((DATE) .A. 7777K8) .V.                                                  *086 LM00119    
                1      ((DATE .RS. 6) .A. 7777K2) .V. $00/00 $                                    *086 LM00120    
                  QLEN = GLOC. (AVQLEN )                                                          *087 LM00121    
                  FQLEN = (FQLEN / 1000.0) + 0.05                                                 *088 LM00122    
                  FLOTBC. (QLEN)                                                                  *089 LM00123    
                  PRMESS. ($AVG. QUEUE LENGTH AT$, DATE, TIME,                                    *090 LM00124    
                1      EQUAL, QLEN ... 2)                                                         *090 LM00125    
                                                                                                       LM00126    
                      PRINT OUT DRUM OVERFLOW STATISTICS.                                              LM00127    
                                                                                                       LM00128    
                  OVRT = GLOC.(OVRTOT)                                                            *091 LM00129    
                  WHENEVER OLDTOT-OVRT .NE. 0                                                     *092 LM00130    
                     PRMESS.($OVRTOT$,601360575757K,BZ57.(DERBC.(OVRT)))                          *093 LM00131    
                     OLDTOT = OVRT                                                                *094 LM00132    
                  END OF CONDITIONAL                                                              *095 LM00133    
                                                                                                       LM00134    
                                                                                                       LM00135    
                                                                                                       LM00136    
                                                                                                       LM00137    
                                                                                                       LM00138    
                      PRINT OUT THE NUMBER OF USERS.                                                   LM00139    
                 ..                                                                                    LM00140    
                  PRMESS.($USERS=$,CONV.(GLOC.(NUSERS)),$,MAX=$,BZ57.(DERBC.                      *096 LM00141    
                1  (GLOC.(MXUSRS))))                                                              *096 LM00142    
                  TEMP = GLOC.(TOTTIM)                                                            *097 LM00143    
                  D0 = TEMP - T0                                                                  *098 LM00144    
                  T0 = TEMP                                                                       *099 LM00145    
                  TEMP = GLOC.(BKGTIM)                                                            *100 LM00146    
                  D3 = TEMP - T3                                                                  *101 LM00147    
                  D3 = 100.*D3/D0 + .05                                                           *102 LM00148    
                  T3 = TEMP                                                                       *103 LM00149    
                  TEMP = GLOC.(SWPTIM)                                                            *104 LM00150    
                  D2 = TEMP - T2                                                                  *105 LM00151    
                  D2 = 100.*D2/D0 + .05                                                           *106 LM00152    
                  T2 = TEMP                                                                       *107 LM00153    
                  D1 = 100.15 - D2 - D3                                                           *108 LM00154    
                  FLOTBC. (D1)                                                                    *109 LM00155    
                  FLOTBC. (D2)                                                                    *110 LM00156    
                  FLOTBC. (D3)                                                                    *111 LM00157    
                                                                                                       LM00158    
                  WHENEVER FIRST .E. 0                                                            *112 LM00159    
                  PRMESS. ($GOOD =$, D1 ... 2, COMMA,                                             *113 LM00160    
                2          $SWAP =$, D2 ... 2, COMMA,                                             *113 LM00161    
                3          $OTHER=$, D3 ... 2)                                                    *113 LM00162    
                  END OF CONDITIONAL                                                              *114 LM00163    
                                                                                                       LM00164    
                                                                                                       LM00165    
                  THROUGH LOOP, FOR I = 0, 1, I .G. N                                             *115 LM00166    
                  PERCNT = GLOC. (PB + I)                                                         *116 LM00167    
                  WHENEVER PERCNT .E. 0, TRANSFER TO LOOP                                         *117 LM00168    
                                                                                                       LM00169    
                  WHENEVER I .E. 0                                                                *118 LM00170    
                       PROB = $ BACKG$                                                            *119 LM00171    
                       PROG = $ROUND $                                                            *120 LM00172    
                  OTHERWISE                                                                       *121 LM00173    
                       PROB = GLOC. (PROBN + I)                                                   *122 LM00174    
                       PROG = GLOC. (PROGN + I)                                                   *123 LM00175    
                  END OF CONDITIONAL                                                              *124 LM00176    
                                                                                                       LM00177    
                  STRT = GLOC. (STRTIM + I)                                                       *125 LM00178    
                  WRK = GLOC. (WRKTIM + I)                                                        *126 LM00179    
                                                                                                       LM00180    
                  REALP = (100 * WRK) / (TIMNOW - STRT)                                           *127 LM00181    
                                                                                                       LM00182    
                  PRMESS.(PROB,PROG,BLANK,BZEL.(HRMIN.(STRT)),BZEL.(HRMIN.(WRK)                   *128 LM00183    
                1  ), BZEL.(DERBC. (REALP)), BZEL.(DERBC. (PERCNT)))                              *128 LM00184    
                                                                                                       LM00185    
      LOOP        CONTINUE                                                                        *129 LM00186    
                  WHENEVER MDOT, TRANSFER TO SNORE                                                *130 LM00187    
                  PRMESS.                                                                         *131 LM00188    
                  PRMESS.                                                                         *132 LM00189    
                                                                                                       LM00190    
                                                                                                       LM00191    
                      PRINT OUT QUEUE POSITION CHART.                                                  LM00192    
                                                                                                       LM00193    
                  PRMESS. ( $     USER    COMMND WRKTIM TIMLEV UCLOCK U$,                         *133 LM00194    
                1      $SWAP   1  2  3  4  5  6  7  8  9$ )                                       *133 LM00195    
                  PRMESS.                                                                         *134 LM00196    
                                                                                                       LM00197    
                  THROUGH PRLOOP, FOR USR = 0, 1, USR .G. N                                       *135 LM00198    
                                                                                                       LM00199    
                  WHENEVER USR .E. 0                                                              *136 LM00200    
                       PROB = $ BACKG$                                                            *137 LM00201    
                       PROG = $ROUND $                                                            *138 LM00202    
                  OTHERWISE                                                                       *139 LM00203    
                       PROB = GLOC. (PROBN+USR)                                                   *140 LM00204    
                       PROG = GLOC. (PROGN+USR)                                                   *141 LM00205    
                  END OF CONDITIONAL                                                              *142 LM00206    
                  COM = GLOC. (COMMND+USR)                                                        *143 LM00207    
                  WHENEVER COM .E. 0, COM = $ $                                                   *144 LM00208    
                  LEVOK = LEVEL (USR) .NE. MINUS1                                                 *145 LM00209    
                  PROBOK = PROB .NE. 0                                                            *146 LM00210    
                                                                                                       LM00211    
                  WHENEVER LEVOK                                                                  *147 LM00212    
                       WHENEVER .NOT. PROBOK                                                      *148 LM00213    
                            PROB = $ $                                                            *149 LM00214    
                            PROG = $ $                                                            *150 LM00215    
                       END OF CONDITIONAL                                                         *151 LM00216    
                       WT = GLOC. (WRKTIM+USR) * 60                                               *152 LM00217    
                       TL = GLOC. (TIMLEV+USR) * 60                                               *153 LM00218    
                       TM = GLOC. (UCLOCK+USR) * 60                                               *154 LM00219    
                       TN = TM - GLOC. (UCHARG+USR) * 60                                          *155 LM00220    
                       PRMESS. (PROB, PROG, BLANK, COM, BLANK,                                    *156 LM00221    
                1           CTIME. (WT), BLANK, CTIME. (TL), BLANK,                               *156 LM00222    
                2                   CTIME. (TM), BLANK, CTIME. (TN),                              *156 LM00223    
                3           SPACE ... LEVEL (USR), CONV. (POS (USR) ) )                           *156 LM00224    
                  END OF CONDITIONAL                                                              *157 LM00225    
                                                                                                       LM00226    
      PRLOOP      CONTINUE                                                                        *158 LM00227    
                                                                                                       LM00228    
                                                                                                       LM00229    
                      EXIT TO CHNCOM.                                                                  LM00230    
                                                                                                       LM00231    
                  PRMESS.                                                                         *159 LM00232    
      SNORE       PRMESS.                                                                         *160 LM00233    
                  WHENEVER SLTIM .NE. 0                                                           *161 LM00234    
                       SNOOZE.(SLTIM,0)                                                           *162 LM00235    
                  OTHERWISE                                                                       *163 LM00236    
                       CHNCOM. (1)                                                                *164 LM00237    
                  END OF CONDITIONAL                                                              *165 LM00238    
                  PRMESS.                                                                         *166 LM00239    
                            FIRST = 0                                                             *167 LM00240    
                  TRANSFER TO BEGIN                                                               *168 LM00241    
                                                                                                       LM00242    
                                                                                                       LM00243    
                                                                                                       LM00244    
                      CONVERT TO BCD.                                                                  LM00245    
                                                                                                       LM00246    
                  INTERNAL FUNCTION (NUM)                                                         *169 LM00247    
                  ENTRY TO CONV.                                                                  *170 LM00248    
                  FUNCTION RETURN (BZEL. (DEFBC. (NUM) ) .A. 777777K) .V. 575757K6                *171 LM00249    
                  END OF FUNCTION                                                                 *172 LM00250    
                                                                                                       LM00251    
                                                                                                       LM00252    
                      CONVERT TIME TO BCD.                                                             LM00253    
                                                                                                       LM00254    
                  INTERNAL FUNCTION (NUM)                                                         *173 LM00255    
                  ENTRY TO CTIME.                                                                 *174 LM00256    
                  FUNCTION RETURN BZEL. (MINS. (NUM) )                                            *175 LM00257    
                  END OF FUNCTION                                                                 *176 LM00258    
                                                                                                       LM00259    
                                                                                                       LM00260    
                 ..   FLOATING POINT TO BCD.                                                           LM00261    
                 ..                                                                                    LM00262    
                  INTERNAL FUNCTION (NUM)                                                         *177 LM00263    
                  ENTRY TO FLOTBC.                                                                *178 LM00264    
                  FIX. (NUM, NUM, NUM (1))                                                        *179 LM00265    
                  NUM = CONV. (NUM)                                                               *180 LM00266    
                  NUM (1) = (FRACBC.(NUM(1)).RS.6) .A. 77K8 .V. 330057575757K                     *181 LM00267    
                  FUNCTION RETURN                                                                 *182 LM00268    
                  END OF FUNCTION                                                                 *183 LM00269    
                                                                                                       LM00270    
                                                                                                       LM00271    
                  END OF PROGRAM                                                                  *184 LM00272    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01626 TRANSFER VECTOR LENGTH  00026 PROGRAM BEGINS    00376
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      AVQLEN 00040 A 1        FIRST  00060   1        NUSERS 00154 A 1        QLEN   00033 A 1        TIME   00301   1  
      BEGIN  00034   4        FQLEN  00033   0        OLDTOT 00155   1        QLEV   00253   1        TIMLEV 00302 A 1  
      BKGTIM 00041 A 1        I      00061   1        OVRTOT 00156 A 1        QPOS   00254   1        TIMNOW 00303   1  
      BLANK  00042 A 1        LEVEL  00144 A 1        OVRT   00157   1        REALP  00255   1        TL     00304   1  
      COMMA  00043 A 1        LEVLOP 00031   4        PB     00160 A 1        SLTIM  00256   1        TM     00305   1  
      COMMND 00044 A 1        LEVOK  00145   2        PERCNT 00161   1        SNORE  00037   4        TN     00306   1  
      COM    00045   1        LOOP   00035   4        PLIST  00162 A 1        SPACE  00271 A 1        TOTTIM 00307 A 1  
      D0     00046   0        MAXLV  00146 A 1        POS    00245 A 1        STRTIM 00272 A 1        UCHARG 00310 A 1  
      D1     00050 A 0        MDOT   00147   2        PRLOOP 00031   4        STRT   00273   1        UCLOCK 00311 A 1  
      D2     00052 A 0        MINUS1 00150 A 1        PROBN  00246 A 1        SWPTIM 00274 A 1        ULIST  00312 A 1  
      D3     00054 A 0        MXUSRS 00151 A 1        PROBOK 00247   2        T0     00275   1        USR    00313   1  
      DATE   00055   1        NEXQ   00152   1        PROB   00250   1        T2     00276   1        WRK    00314   1  
      EQUAL  00056 A 1        NEXT   00036   4        PROGN  00251 A 1        T3     00277   1        WRKTIM 00315 A 1  
      FENCE  00057 A 1        N      00153 A 1        PROG   00252   1        TEMP   00300   1        WT     00316   1  
0FUNCTION DICTIONARY    
      ACORE  00000   1        BCDEC  00001   1        BZ57   00002   1        BZEL   00003   1        CHNCOM 00004   1  
      COMARG 00005   1        COMLOC 00006   1        DEFBC  00007   1        DERBC  00010   1        EXIT   00011   1  
      FIX    00012   1        FRACBC 00013   1        FTIME  00014   1        GETIME 00015   1        GLOC   00016   1  
      GTDYTM 00017   1        HRMIN  00020   1        .SETUP 00021   1        MINS   00022   1        PRMESS 00023   1  
      SNOOZE 00024   1        SPRAY  00025   1        CONV   00026   1        CTIME  00027   1        FLOTBC 00030   1  
0ABSOLUTE CONSTANTS     
 00345 +330057575757     00331 +007700000000     00353 -175757000000     00327 +000000777777     00365 -206060606060    
 00360 -201160606060     00357 -200760601060     00356 -200560600660     00355 -200360600460     00354 -200160600260    
 00371 -226621476060     00347 -034623426064     00346 -032565606423     00344 +314460633144     00341 +246066514263    
 00363 -202346444445     00367 -222551606060     00366 -206060606064     00325 +000000000144     00352 -114664452460    
 00362 -202221234227     00350 -066330255113     00370 -226621476013     00343 +274646246013     00334 +207620463146    
 00333 +207620000000     00374 -334421671360     00373 -246225516213     00361 -201360575757     00351 -066551634663    
 00321 +000000000002     00336 +216360606060     00342 +254527633060     00372 -242564256043     00337 +216527336050    
 00332 +174631463146     00335 +212764000000     00330 +000061000060     00375 -377700000000     00326 +000000777700    
 00322 +000000000006     00323 +000000000022     00324 +000000000074     00364 -206060604433     00317 +000000000000    
 00320 +000000000001     00340 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00034 TXL -300562000544       00035 TXL -301204001203       00036 TXL -300606000600       00037 TXL -301445001444      
0PROGRAM    
                 N'R                                                                001  LM00006
                 B'N PROBOK, LEVOK, MDOT                                            002  LM00007
                 V'S QLEN = 0, 0                                                    003  LM00009
 00376 TSX +0 07400 4 00021    00032     +0 00000 0 00000    00033     +0 00000 0 00000                                 
                 E'E (FQLEN, QLEN)                                                  004  LM00010
                 F'T FQLEN                                                          005  LM00011
                 V'S MINUS1 = -1                                                    006  LM00013
 00150     -0 00000 0 00001                                                                                             
                 V'S FENCE  = 777777777777K                                         007  LM00014
 00057     -3 77777 7 77777                                                                                             
                 V'S COMMND = $COMMND$                                              008  LM00015
 00044     +2 34644 4 44524                                                                                             
                 V'S AVQLEN = $AVQLEN$                                              009  LM00016
 00040     +2 16550 4 32545                                                                                             
                 V'S OVRTOT = $OVRTOT$                                              010  LM00017
 00156     -0 66551 6 34663                                                                                             
                 V'S  PLIST = $PLIST$                                               011  LM00018
 00162     -0 74331 6 26360                                                                                             
                 V'S  ULIST = $ULIST$                                               012  LM00019
 00312     -2 44331 6 26360                                                                                             
                 V'S  PROBN = $PROBN$                                               013  LM00020
 00246     -0 75146 2 24560                                                                                             
                 V'S  PROGN = $PROGN$                                               014  LM00021
 00251     -0 75146 2 74560                                                                                             
                 V'S  MAXLV = $MAXLV$                                               015  LM00022
 00146     -0 42167 4 36560                                                                                             
                 V'S WRKTIM = $WRKTIM$                                              016  LM00023
 00315     -2 65142 6 33144                                                                                             
                 V'S TIMLEV = $TIMLEV$                                              017  LM00024
 00302     -2 33144 4 32565                                                                                             
                 V'S UCLOCK = $UCLOCK$                                              018  LM00025
 00311     -2 42343 4 62342                                                                                             
                 V'S UCHARG = $UCHARG$                                              019  LM00026
 00310     -2 42330 2 15127                                                                                             
                 V'S NUSERS = $NUSERS$                                              020  LM00027
 00154     -0 56462 2 55162                                                                                             
                 V'S MXUSRS = $MXUSRS$                                              021  LM00028
 00151     -0 46764 6 25162                                                                                             
                 V'S TOTTIM = $TOTTIM$                                              022  LM00029
 00307     -2 34663 6 33144                                                                                             
                 V'S BKGTIM = $BKGTIM$                                              023  LM00030
 00041     +2 24227 6 33144                                                                                             
                 V'S SWPTIM = $SWPTIM$                                              024  LM00031
 00274     -2 26647 6 33144                                                                                             
                 V'S STRTIM = $STRTIM$                                              025  LM00032
 00272     -2 26351 6 33144                                                                                             
                 V'S     PB = $PB    $                                              026  LM00033
 00160     -0 72260 6 06060                                                                                             
                 V'S      N = $N$                                                   027  LM00034
 00153     -0 56060 6 06060                                                                                             
                 DIMENSION D1(1), D2(1), D3(1)                                      028  LM00035
                 FLOATING POINT D0, D1, D2, D3                                      029  LM00036
                 V'S LEVEL ... LEVEL (50) = -1                                      030  LM00040
 00062     -0 00000 0 00001    00063     -0 00000 0 00001    00064     -0 00000 0 00001    00065     -0 00000 0 00001   
 00066     -0 00000 0 00001    00067     -0 00000 0 00001    00070     -0 00000 0 00001    00071     -0 00000 0 00001   
 00072     -0 00000 0 00001    00073     -0 00000 0 00001    00074     -0 00000 0 00001    00075     -0 00000 0 00001   
 00076     -0 00000 0 00001    00077     -0 00000 0 00001    00100     -0 00000 0 00001    00101     -0 00000 0 00001   
 00102     -0 00000 0 00001    00103     -0 00000 0 00001    00104     -0 00000 0 00001    00105     -0 00000 0 00001   
 00106     -0 00000 0 00001    00107     -0 00000 0 00001    00110     -0 00000 0 00001    00111     -0 00000 0 00001   
 00112     -0 00000 0 00001    00113     -0 00000 0 00001    00114     -0 00000 0 00001    00115     -0 00000 0 00001   
 00116     -0 00000 0 00001    00117     -0 00000 0 00001    00120     -0 00000 0 00001    00121     -0 00000 0 00001   
 00122     -0 00000 0 00001    00123     -0 00000 0 00001    00124     -0 00000 0 00001    00125     -0 00000 0 00001   
 00126     -0 00000 0 00001    00127     -0 00000 0 00001    00130     -0 00000 0 00001    00131     -0 00000 0 00001   
 00132     -0 00000 0 00001    00133     -0 00000 0 00001    00134     -0 00000 0 00001    00135     -0 00000 0 00001   
 00136     -0 00000 0 00001    00137     -0 00000 0 00001    00140     -0 00000 0 00001    00141     -0 00000 0 00001   
 00142     -0 00000 0 00001    00143     -0 00000 0 00001    00144     -0 00000 0 00001                                 
                 V'S   POS ...   POS (50) = -1                                      031  LM00041
 00163     -0 00000 0 00001    00164     -0 00000 0 00001    00165     -0 00000 0 00001    00166     -0 00000 0 00001   
 00167     -0 00000 0 00001    00170     -0 00000 0 00001    00171     -0 00000 0 00001    00172     -0 00000 0 00001   
 00173     -0 00000 0 00001    00174     -0 00000 0 00001    00175     -0 00000 0 00001    00176     -0 00000 0 00001   
 00177     -0 00000 0 00001    00200     -0 00000 0 00001    00201     -0 00000 0 00001    00202     -0 00000 0 00001   
 00203     -0 00000 0 00001    00204     -0 00000 0 00001    00205     -0 00000 0 00001    00206     -0 00000 0 00001   
 00207     -0 00000 0 00001    00210     -0 00000 0 00001    00211     -0 00000 0 00001    00212     -0 00000 0 00001   
 00213     -0 00000 0 00001    00214     -0 00000 0 00001    00215     -0 00000 0 00001    00216     -0 00000 0 00001   
 00217     -0 00000 0 00001    00220     -0 00000 0 00001    00221     -0 00000 0 00001    00222     -0 00000 0 00001   
 00223     -0 00000 0 00001    00224     -0 00000 0 00001    00225     -0 00000 0 00001    00226     -0 00000 0 00001   
 00227     -0 00000 0 00001    00230     -0 00000 0 00001    00231     -0 00000 0 00001    00232     -0 00000 0 00001   
 00233     -0 00000 0 00001    00234     -0 00000 0 00001    00235     -0 00000 0 00001    00236     -0 00000 0 00001   
 00237     -0 00000 0 00001    00240     -0 00000 0 00001    00241     -0 00000 0 00001    00242     -0 00000 0 00001   
 00243     -0 00000 0 00001    00244     -0 00000 0 00001    00245     -0 00000 0 00001                                 
                 OLDTOT = 0                                                         032  LM00042
 00377 CLA +0 50000 0 00317    00400 STO +0 60100 0 00155                                                               
                 V'S SPACE ... SPACE (10) = 606033575757K                           033  LM00043
 00257     -2 06033 5 75757    00260     -2 06033 5 75757    00261     -2 06033 5 75757    00262     -2 06033 5 75757   
 00263     -2 06033 5 75757    00264     -2 06033 5 75757    00265     -2 06033 5 75757    00266     -2 06033 5 75757   
 00267     -2 06033 5 75757    00270     -2 06033 5 75757    00271     -2 06033 5 75757                                 
                 V'S BLANK = 605757575757K                                          034  LM00044
 00042     -2 05757 5 75757                                                                                             
                 V'S COMMA = 736057575757K                                          035  LM00045
 00043     -3 36057 5 75757                                                                                             
                 V'S EQUAL = 601360575757K                                          036  LM00046
 00056     -2 01360 5 75757                                                                                             
                 W'R COMARG.(0) .E. $    M.$                                        037  LM00053
 00401 TSX +0 07400 4 00005    00402 TXH +3 00000 0 00317    00403 SUB +0 40200 0 00364    00404 TNZ -0 10000 0 00410   
                      MDOT = 1B                                                     038  LM00054
 00405 CLA +0 50000 0 00320    00406 STO +0 60100 0 00147                                                               
                 O'E                                                                039  LM00055
 00407 TRA +0 02000 0 00412                                                                                             
                      MDOT = 0B                                                     040  LM00056
 00410 CLA +0 50000 0 00317    00411 STO +0 60100 0 00147                                                               
                 E'L                                                                041  LM00057
                 PRMESS.                                                            042  LM00058
 00412 TSX +0 07400 4 00023                                                                                             
                 SLTIM = COMARG. (1)                                                043  LM00059
 00413 TSX +0 07400 4 00005    00414 TXH +3 00000 0 00320    00415 STO +0 60100 0 00256                                 
                 W'R SLTIM .E. FENCE                                                044  LM00060
 00416 CLA +0 50000 0 00256    00417 SUB +0 40200 0 00057    00420 TNZ -0 10000 0 00424                                 
                      SLTIM = 0                                                     045  LM00061
 00421 CLA +0 50000 0 00317    00422 STO +0 60100 0 00256                                                               
                 O'E                                                                046  LM00062
 00423 TRA +0 02000 0 00431                                                                                             
                      SLTIM = BCDEC. (SLTIM) * 60                                   047  LM00063
 00424 TSX +0 07400 4 00001    00425 TXH +3 00000 0 00256    00426 XCA +0 13100 0 00000    00427 MPY +0 20000 0 00324   
 00430 STQ -0 60000 0 00256                                                                                             
                 E'L                                                                048  LM00064
                 AVQLEN = ACORE. (AVQLEN) .RS. 18                                   049  LM00068
 00431 TSX +0 07400 4 00000    00432 TXH +3 00000 0 00040    00433 STO +0 60100 0 01617    00434 CAL -0 50000 0 00323   
 00435 STA +0 62100 0 00437    00436 CAL -0 50000 0 01617    00437 LGR -0 76500 0 00000    00440 SLW +0 60200 0 00040   
                 OVRTOT = ACORE. (OVRTOT) .RS. 18                                   050  LM00069
 00441 TSX +0 07400 4 00000    00442 TXH +3 00000 0 00156    00443 STO +0 60100 0 01617    00444 CAL -0 50000 0 00323   
 00445 STA +0 62100 0 00447    00446 CAL -0 50000 0 01617    00447 LGR -0 76500 0 00000    00450 SLW +0 60200 0 00156   
                 PLIST = COMLOC. (PLIST)                                            051  LM00070
 00451 TSX +0 07400 4 00006    00452 TXH +3 00000 0 00162    00453 STO +0 60100 0 00162                                 
                 ULIST = COMLOC. (ULIST)                                            052  LM00071
 00454 TSX +0 07400 4 00006    00455 TXH +3 00000 0 00312    00456 STO +0 60100 0 00312                                 
                 PROBN = COMLOC. (PROBN)                                            053  LM00072
 00457 TSX +0 07400 4 00006    00460 TXH +3 00000 0 00246    00461 STO +0 60100 0 00246                                 
                 PROGN = COMLOC. (PROGN)                                            054  LM00073
 00462 TSX +0 07400 4 00006    00463 TXH +3 00000 0 00251    00464 STO +0 60100 0 00251                                 
                 COMMND = COMLOC. (COMMND)                                          055  LM00074
 00465 TSX +0 07400 4 00006    00466 TXH +3 00000 0 00044    00467 STO +0 60100 0 00044                                 
                 MAXLV = COMLOC. (MAXLV)                                            056  LM00075
 00470 TSX +0 07400 4 00006    00471 TXH +3 00000 0 00146    00472 STO +0 60100 0 00146                                 
                 WRKTIM = COMLOC. (WRKTIM)                                          057  LM00076
 00473 TSX +0 07400 4 00006    00474 TXH +3 00000 0 00315    00475 STO +0 60100 0 00315                                 
                 TIMLEV = COMLOC. (TIMLEV)                                          058  LM00077
 00476 TSX +0 07400 4 00006    00477 TXH +3 00000 0 00302    00500 STO +0 60100 0 00302                                 
                 UCLOCK = COMLOC. (UCLOCK)                                          059  LM00078
 00501 TSX +0 07400 4 00006    00502 TXH +3 00000 0 00311    00503 STO +0 60100 0 00311                                 
                 UCHARG = COMLOC. (UCHARG)                                          060  LM00079
 00504 TSX +0 07400 4 00006    00505 TXH +3 00000 0 00310    00506 STO +0 60100 0 00310                                 
                 NUSERS = COMLOC. (NUSERS)                                          061  LM00080
 00507 TSX +0 07400 4 00006    00510 TXH +3 00000 0 00154    00511 STO +0 60100 0 00154                                 
                 MXUSRS = COMLOC. (MXUSRS)                                          062  LM00081
 00512 TSX +0 07400 4 00006    00513 TXH +3 00000 0 00151    00514 STO +0 60100 0 00151                                 
                 TOTTIM = COMLOC. (TOTTIM)                                          063  LM00082
 00515 TSX +0 07400 4 00006    00516 TXH +3 00000 0 00307    00517 STO +0 60100 0 00307                                 
                 BKGTIM = COMLOC. (BKGTIM)                                          064  LM00083
 00520 TSX +0 07400 4 00006    00521 TXH +3 00000 0 00041    00522 STO +0 60100 0 00041                                 
                 SWPTIM = COMLOC. (SWPTIM)                                          065  LM00084
 00523 TSX +0 07400 4 00006    00524 TXH +3 00000 0 00274    00525 STO +0 60100 0 00274                                 
                 STRTIM = COMLOC.(STRTIM)                                           066  LM00085
 00526 TSX +0 07400 4 00006    00527 TXH +3 00000 0 00272    00530 STO +0 60100 0 00272                                 
                    PB  = COMLOC.(PB)                                               067  LM00086
 00531 TSX +0 07400 4 00006    00532 TXH +3 00000 0 00160    00533 STO +0 60100 0 00160                                 
                 N = COMLOC. (N)                                                    068  LM00087
 00534 TSX +0 07400 4 00006    00535 TXH +3 00000 0 00153    00536 STO +0 60100 0 00153                                 
                 TIMNOW = GETIME.(0)                                                069  LM00088
 00537 TSX +0 07400 4 00015    00540 TXH +3 00000 0 00317    00541 STO +0 60100 0 00303                                 
                 FIRST = 1                                                          070  LM00093
 00542 CLA +0 50000 0 00320    00543 STO +0 60100 0 00060                                                               
      BEGIN      SPRAY. (MINUS1, LEVEL ... LEVEL (N), POS ... POS (N) )             071  LM00094
 00544 CLA +0 50000 0 00153    00545 SUB +0 40200 0 00546    00546 TXH +3 00000 0 00245    00547 ALS +0 76700 0 00022   
 00550 STD +0 62200 0 00561    00551 CLA +0 50000 0 00153    00552 SUB +0 40200 0 00553    00553 TXH +3 00000 0 00144   
 00554 ALS +0 76700 0 00022    00555 STD +0 62200 0 00560    00556 TSX +0 07400 4 00025    00557 TXH +3 00000 0 00150   
 00560 TIX +2 00000 0 00144    00561 TIX +2 00000 0 00245                                                               
                 T'H LEVLOP, FOR QLEV = 0, 1, QLEV .G. MAXLV                        072  LM00099
 00562 CLA +0 50000 0 00317    00563 STO +0 60100 0 00253    00564 TRA +0 02000 0 00570    00565 CLA +0 50000 0 00253   
 00566 ADD +0 40000 0 00320    00567 STO +0 60100 0 00253    00570 CLA +0 50000 0 00253    00571 SUB +0 40200 0 00146   
 00572 TZE +0 10000 0 00574    00573 TPL +0 12000 0 00632                                                               
                 NEXQ = QLEV                                                        073  LM00100
 00574 CLA +0 50000 0 00253    00575 STO +0 60100 0 00152                                                               
                 QPOS = 1                                                           074  LM00101
 00576 CLA +0 50000 0 00320    00577 STO +0 60100 0 00254                                                               
      NEXT       NEXQ = GLOC. (PLIST+NEXQ)                                          075  LM00103
 00600 CLA +0 50000 0 00162    00601 ADD +0 40000 0 00152    00602 STO +0 60100 0 01617    00603 TSX +0 07400 4 00016   
 00604 TXH +3 00000 0 01617    00605 STO +0 60100 0 00152                                                               
                 USR = GLOC. (ULIST+NEXQ)                                           076  LM00104
 00606 CLA +0 50000 0 00312    00607 ADD +0 40000 0 00152    00610 STO +0 60100 0 01617    00611 TSX +0 07400 4 00016   
 00612 TXH +3 00000 0 01617    00613 STO +0 60100 0 00313                                                               
                 W'R USR .NE. MINUS1                                                077  LM00105
 00614 CLA +0 50000 0 00313    00615 SUB +0 40200 0 00150    00616 TZE +0 10000 0 00631                                 
                      LEVEL (USR) = QLEV - 1                                        078  LM00106
 00617 CLA +0 50000 0 00253    00620 SUB +0 40200 0 00320    00621 LXA +0 53400 1 00313    00622 STO +0 60100 1 00144   
                      POS (USR) = QPOS                                              079  LM00107
 00623 CLA +0 50000 0 00254    00624 STO +0 60100 1 00245                                                               
                      QPOS = QPOS + 1                                               080  LM00108
 00625 CLA +0 50000 0 00254    00626 ADD +0 40000 0 00320    00627 STO +0 60100 0 00254                                 
                      T'O NEXT                                                      081  LM00109
 00630 TRA +0 02000 0 00036                                                                                             
                 E'L                                                                082  LM00110
      LEVLOP     C'E                                                                083  LM00112
 00631 TRA +0 02000 0 00565                                                                                             
                 TIME = GTDYTM. (0)                                                 084  LM00117
 00632 TSX +0 07400 4 00017    00633 TXH +3 00000 0 00317    00634 STO +0 60100 0 00301                                 
                 FTIME. (TIME, DATE, TIME)                                          085  LM00118
 00635 TSX +0 07400 4 00014    00636 TXH +3 00000 0 00301    00637 TXH +3 00000 0 00055    00640 TXH +3 00000 0 00301   
                 DATE = ((DATE) .A. 7777K8) .V.                                     086  LM00119
                1     ((DATE .RS. 6) .A. 7777K2) .V. $00/00 $                       086  LM00120
 00641 CAL -0 50000 0 00322    00642 STA +0 62100 0 00644    00643 CAL -0 50000 0 00055    00644 LGR -0 76500 0 00000   
 00645 ANA -0 32000 0 00326    00646 SLW +0 60200 0 01617    00647 CAL -0 50000 0 00055    00650 ANA -0 32000 0 00375   
 00651 ORA -0 50100 0 01617    00652 ORA -0 50100 0 00330    00653 SLW +0 60200 0 00055                                 
                 QLEN = GLOC. (AVQLEN )                                             087  LM00121
 00654 TSX +0 07400 4 00016    00655 TXH +3 00000 0 00040    00656 STO +0 60100 0 00033                                 
                 FQLEN = (FQLEN / 1000.0) + 0.05                                    088  LM00122
 00657 CLA +0 50000 0 00033    00660 FDP +0 24100 0 00335    00661 XCA +0 13100 0 00000    00662 FAD +0 30000 0 00332   
 00663 STO +0 60100 0 00033                                                                                             
                 FLOTBC. (QLEN)                                                     089  LM00123
 00664 TSX +0 07400 4 00030    00665 TXH +3 00000 0 00033                                                               
                 PRMESS. ($AVG. QUEUE LENGTH AT$, DATE, TIME,                       090  LM00124
                1     EQUAL, QLEN ... 2)                                            090  LM00125
 00666 TSX +0 07400 4 00023    00667 TXH +3 00000 0 00337    00670 TXH +3 00000 0 00372    00671 TXH +3 00000 0 00342   
 00672 TXH +3 00000 0 00336    00673 TXH +3 00000 0 00055    00674 TXH +3 00000 0 00301    00675 TXH +3 00000 0 00056   
 00676 TIX +2 00321 0 00033                                                                                             
                 OVRT = GLOC.(OVRTOT)                                               091  LM00129
 00677 TSX +0 07400 4 00016    00700 TXH +3 00000 0 00156    00701 STO +0 60100 0 00157                                 
                 W'R OLDTOT-OVRT .NE. 0                                             092  LM00130
 00702 CLA +0 50000 0 00155    00703 SUB +0 40200 0 00157    00704 SUB +0 40200 0 00317    00705 TZE +0 10000 0 00722   
                    PRMESS.($OVRTOT$,601360575757K,BZ57.(DERBC.(OVRT)))             093  LM00131
 00706 TSX +0 07400 4 00010    00707 TXH +3 00000 0 00157    00710 STO +0 60100 0 01617    00711 TSX +0 07400 4 00002   
 00712 TXH +3 00000 0 01617    00713 STO +0 60100 0 01617    00714 TSX +0 07400 4 00023    00715 TXH +3 00000 0 00351   
 00716 TXH +3 00000 0 00361    00717 TXH +3 00000 0 01617                                                               
                    OLDTOT = OVRT                                                   094  LM00132
 00720 CLA +0 50000 0 00157    00721 STO +0 60100 0 00155                                                               
                 E'L                                                                095  LM00133
                 PRMESS.($USERS=$,CONV.(GLOC.(NUSERS)),$,MAX=$,BZ57.(DERBC.         096  LM00141
                1 (GLOC.(MXUSRS))))                                                 096  LM00142
 00722 TSX +0 07400 4 00016    00723 TXH +3 00000 0 00151    00724 STO +0 60100 0 01617    00725 TSX +0 07400 4 00010   
 00726 TXH +3 00000 0 01617    00727 STO +0 60100 0 01617    00730 TSX +0 07400 4 00002    00731 TXH +3 00000 0 01617   
 00732 STO +0 60100 0 01617    00733 TSX +0 07400 4 00016    00734 TXH +3 00000 0 00154    00735 STO +0 60100 0 01620   
 00736 TSX +0 07400 4 00026    00737 TXH +3 00000 0 01620    00740 STO +0 60100 0 01620    00741 TSX +0 07400 4 00023   
 00742 TXH +3 00000 0 00373    00743 TXH +3 00000 0 01620    00744 TXH +3 00000 0 00374    00745 TXH +3 00000 0 01617   
                 TEMP = GLOC.(TOTTIM)                                               097  LM00143
 00746 TSX +0 07400 4 00016    00747 TXH +3 00000 0 00307    00750 STO +0 60100 0 00300                                 
                 D0 = TEMP - T0                                                     098  LM00144
 00751 CLA +0 50000 0 00300    00752 SUB +0 40200 0 00275    00753 ORA -0 50100 0 00340    00754 FAD +0 30000 0 00340   
 00755 STO +0 60100 0 00046                                                                                             
                 T0 = TEMP                                                          099  LM00145
 00756 CLA +0 50000 0 00300    00757 STO +0 60100 0 00275                                                               
                 TEMP = GLOC.(BKGTIM)                                               100  LM00146
 00760 TSX +0 07400 4 00016    00761 TXH +3 00000 0 00041    00762 STO +0 60100 0 00300                                 
                 D3 = TEMP - T3                                                     101  LM00147
 00763 CLA +0 50000 0 00300    00764 SUB +0 40200 0 00277    00765 ORA -0 50100 0 00340    00766 FAD +0 30000 0 00340   
 00767 STO +0 60100 0 00054                                                                                             
                 D3 = 100.*D3/D0 + .05                                              102  LM00148
 00770 LDQ +0 56000 0 00333    00771 FMP +0 26000 0 00054    00772 FDP +0 24100 0 00046    00773 XCA +0 13100 0 00000   
 00774 FAD +0 30000 0 00332    00775 STO +0 60100 0 00054                                                               
                 T3 = TEMP                                                          103  LM00149
 00776 CLA +0 50000 0 00300    00777 STO +0 60100 0 00277                                                               
                 TEMP = GLOC.(SWPTIM)                                               104  LM00150
 01000 TSX +0 07400 4 00016    01001 TXH +3 00000 0 00274    01002 STO +0 60100 0 00300                                 
                 D2 = TEMP - T2                                                     105  LM00151
 01003 CLA +0 50000 0 00300    01004 SUB +0 40200 0 00276    01005 ORA -0 50100 0 00340    01006 FAD +0 30000 0 00340   
 01007 STO +0 60100 0 00052                                                                                             
                 D2 = 100.*D2/D0 + .05                                              106  LM00152
 01010 LDQ +0 56000 0 00333    01011 FMP +0 26000 0 00052    01012 FDP +0 24100 0 00046    01013 XCA +0 13100 0 00000   
 01014 FAD +0 30000 0 00332    01015 STO +0 60100 0 00052                                                               
                 T2 = TEMP                                                          107  LM00153
 01016 CLA +0 50000 0 00300    01017 STO +0 60100 0 00276                                                               
                 D1 = 100.15 - D2 - D3                                              108  LM00154
 01020 CLA +0 50000 0 00334    01021 FSB +0 30200 0 00052    01022 FSB +0 30200 0 00054    01023 STO +0 60100 0 00050   
                 FLOTBC. (D1)                                                       109  LM00155
 01024 TSX +0 07400 4 00030    01025 TXH +3 00000 0 00050                                                               
                 FLOTBC. (D2)                                                       110  LM00156
 01026 TSX +0 07400 4 00030    01027 TXH +3 00000 0 00052                                                               
                 FLOTBC. (D3)                                                       111  LM00157
 01030 TSX +0 07400 4 00030    01031 TXH +3 00000 0 00054                                                               
                 WHENEVER FIRST .E. 0                                               112  LM00159
 01032 CLA +0 50000 0 00060    01033 SUB +0 40200 0 00317    01034 TNZ -0 10000 0 01046                                 
                 PRMESS. ($GOOD =$, D1 ... 2, COMMA,                                113  LM00160
                2         $SWAP =$, D2 ... 2, COMMA,                                113  LM00161
                3         $OTHER=$, D3 ... 2)                                       113  LM00162
 01035 TSX +0 07400 4 00023    01036 TXH +3 00000 0 00343    01037 TIX +2 00321 0 00050    01040 TXH +3 00000 0 00043   
 01041 TXH +3 00000 0 00370    01042 TIX +2 00321 0 00052    01043 TXH +3 00000 0 00043    01044 TXH +3 00000 0 00350   
 01045 TIX +2 00321 0 00054                                                                                             
                 END OF CONDITIONAL                                                 114  LM00163
                 T'H LOOP, FOR I = 0, 1, I .G. N                                    115  LM00166
 01046 CLA +0 50000 0 00317    01047 STO +0 60100 0 00061    01050 TRA +0 02000 0 01054    01051 CLA +0 50000 0 00061   
 01052 ADD +0 40000 0 00320    01053 STO +0 60100 0 00061    01054 CLA +0 50000 0 00061    01055 SUB +0 40200 0 00153   
 01056 TZE +0 10000 0 01060    01057 TPL +0 12000 0 01204                                                               
                 PERCNT = GLOC. (PB + I)                                            116  LM00167
 01060 CLA +0 50000 0 00160    01061 ADD +0 40000 0 00061    01062 STO +0 60100 0 01620    01063 TSX +0 07400 4 00016   
 01064 TXH +3 00000 0 01620    01065 STO +0 60100 0 00161                                                               
                 W'R PERCNT .E. 0, T'O LOOP                                         117  LM00168
 01066 CLA +0 50000 0 00161    01067 SUB +0 40200 0 00317    01070 TNZ -0 10000 0 01072    01071 TRA +0 02000 0 00035   
                 W'R I .E. 0                                                        118  LM00170
 01072 CLA +0 50000 0 00061    01073 SUB +0 40200 0 00317    01074 TNZ -0 10000 0 01102                                 
                      PROB = $ BACKG$                                               119  LM00171
 01075 CLA +0 50000 0 00362    01076 STO +0 60100 0 00250                                                               
                      PROG = $ROUND $                                               120  LM00172
 01077 CLA +0 50000 0 00352    01100 STO +0 60100 0 00252                                                               
                 O'E                                                                121  LM00173
 01101 TRA +0 02000 0 01116                                                                                             
                      PROB = GLOC. (PROBN + I)                                      122  LM00174
 01102 CLA +0 50000 0 00246    01103 ADD +0 40000 0 00061    01104 STO +0 60100 0 01620    01105 TSX +0 07400 4 00016   
 01106 TXH +3 00000 0 01620    01107 STO +0 60100 0 00250                                                               
                      PROG = GLOC. (PROGN + I)                                      123  LM00175
 01110 CLA +0 50000 0 00251    01111 ADD +0 40000 0 00061    01112 STO +0 60100 0 01620    01113 TSX +0 07400 4 00016   
 01114 TXH +3 00000 0 01620    01115 STO +0 60100 0 00252                                                               
                 E'L                                                                124  LM00176
                 STRT = GLOC. (STRTIM + I)                                          125  LM00178
 01116 CLA +0 50000 0 00272    01117 ADD +0 40000 0 00061    01120 STO +0 60100 0 01620    01121 TSX +0 07400 4 00016   
 01122 TXH +3 00000 0 01620    01123 STO +0 60100 0 00273                                                               
                 WRK = GLOC. (WRKTIM + I)                                           126  LM00179
 01124 CLA +0 50000 0 00315    01125 ADD +0 40000 0 00061    01126 STO +0 60100 0 01620    01127 TSX +0 07400 4 00016   
 01130 TXH +3 00000 0 01620    01131 STO +0 60100 0 00314                                                               
                 REALP = (100 * WRK) / (TIMNOW - STRT)                              127  LM00181
 01132 CLA +0 50000 0 00303    01133 SUB +0 40200 0 00273    01134 STO +0 60100 0 01620    01135 LDQ +0 56000 0 00325   
 01136 MPY +0 20000 0 00314    01137 PXD -0 75400 0 00000    01140 LLS +0 76300 0 00000    01141 DVP +0 22100 0 01620   
 01142 STQ -0 60000 0 00255                                                                                             
                 PRMESS.(PROB,PROG,BLANK,BZEL.(HRMIN.(STRT)),BZEL.(HRMIN.(WRK)      128  LM00183
                1 ), BZEL.(DERBC. (REALP)), BZEL.(DERBC. (PERCNT)))                 128  LM00184
 01143 TSX +0 07400 4 00010    01144 TXH +3 00000 0 00161    01145 STO +0 60100 0 01620    01146 TSX +0 07400 4 00003   
 01147 TXH +3 00000 0 01620    01150 STO +0 60100 0 01620    01151 TSX +0 07400 4 00010    01152 TXH +3 00000 0 00255   
 01153 STO +0 60100 0 01617    01154 TSX +0 07400 4 00003    01155 TXH +3 00000 0 01617    01156 STO +0 60100 0 01617   
 01157 TSX +0 07400 4 00020    01160 TXH +3 00000 0 00314    01161 STO +0 60100 0 01621    01162 TSX +0 07400 4 00003   
 01163 TXH +3 00000 0 01621    01164 STO +0 60100 0 01621    01165 TSX +0 07400 4 00020    01166 TXH +3 00000 0 00273   
 01167 STO +0 60100 0 01622    01170 TSX +0 07400 4 00003    01171 TXH +3 00000 0 01622    01172 STO +0 60100 0 01622   
 01173 TSX +0 07400 4 00023    01174 TXH +3 00000 0 00250    01175 TXH +3 00000 0 00252    01176 TXH +3 00000 0 00042   
 01177 TXH +3 00000 0 01622    01200 TXH +3 00000 0 01621    01201 TXH +3 00000 0 01617    01202 TXH +3 00000 0 01620   
      LOOP       C'E                                                                129  LM00186
 01203 TRA +0 02000 0 01051                                                                                             
                 W'R MDOT, T'O SNORE                                                130  LM00187
 01204 NZT -0 52000 0 00147    01205 TRA +0 02000 0 01207    01206 TRA +0 02000 0 00037                                 
                 PRMESS.                                                            131  LM00188
 01207 TSX +0 07400 4 00023                                                                                             
                 PRMESS.                                                            132  LM00189
 01210 TSX +0 07400 4 00023                                                                                             
                 PRMESS. ( $     USER    COMMND WRKTIM TIMLEV UCLOCK U$,            133  LM00194
                1     $SWAP   1  2  3  4  5  6  7  8  9$ )                          133  LM00195
 01211 TSX +0 07400 4 00023    01212 TXH +3 00000 0 00366    01213 TXH +3 00000 0 00367    01214 TXH +3 00000 0 00363   
 01215 TXH +3 00000 0 00341    01216 TXH +3 00000 0 00344    01217 TXH +3 00000 0 00346    01220 TXH +3 00000 0 00347   
 01221 TXH +3 00000 0 00371    01222 TXH +3 00000 0 00354    01223 TXH +3 00000 0 00355    01224 TXH +3 00000 0 00356   
 01225 TXH +3 00000 0 00357    01226 TXH +3 00000 0 00360                                                               
                 PRMESS.                                                            134  LM00196
 01227 TSX +0 07400 4 00023                                                                                             
                 T'H PRLOOP, FOR USR = 0, 1, USR .G. N                              135  LM00198
 01230 CLA +0 50000 0 00317    01231 STO +0 60100 0 00313    01232 TRA +0 02000 0 01236    01233 CLA +0 50000 0 00313   
 01234 ADD +0 40000 0 00320    01235 STO +0 60100 0 00313    01236 CLA +0 50000 0 00313    01237 SUB +0 40200 0 00153   
 01240 TZE +0 10000 0 01242    01241 TPL +0 12000 0 01443                                                               
                 W'R USR .E. 0                                                      136  LM00200
 01242 CLA +0 50000 0 00313    01243 SUB +0 40200 0 00317    01244 TNZ -0 10000 0 01252                                 
                      PROB = $ BACKG$                                               137  LM00201
 01245 CLA +0 50000 0 00362    01246 STO +0 60100 0 00250                                                               
                      PROG = $ROUND $                                               138  LM00202
 01247 CLA +0 50000 0 00352    01250 STO +0 60100 0 00252                                                               
                 O'E                                                                139  LM00203
 01251 TRA +0 02000 0 01266                                                                                             
                      PROB = GLOC. (PROBN+USR)                                      140  LM00204
 01252 CLA +0 50000 0 00246    01253 ADD +0 40000 0 00313    01254 STO +0 60100 0 01622    01255 TSX +0 07400 4 00016   
 01256 TXH +3 00000 0 01622    01257 STO +0 60100 0 00250                                                               
                      PROG = GLOC. (PROGN+USR)                                      141  LM00205
 01260 CLA +0 50000 0 00251    01261 ADD +0 40000 0 00313    01262 STO +0 60100 0 01622    01263 TSX +0 07400 4 00016   
 01264 TXH +3 00000 0 01622    01265 STO +0 60100 0 00252                                                               
                 E'L                                                                142  LM00206
                 COM = GLOC. (COMMND+USR)                                           143  LM00207
 01266 CLA +0 50000 0 00044    01267 ADD +0 40000 0 00313    01270 STO +0 60100 0 01622    01271 TSX +0 07400 4 00016   
 01272 TXH +3 00000 0 01622    01273 STO +0 60100 0 00045                                                               
                 W'R COM .E. 0, COM = $ $                                           144  LM00208
 01274 CLA +0 50000 0 00045    01275 SUB +0 40200 0 00317    01276 TNZ -0 10000 0 01301    01277 CLA +0 50000 0 00365   
 01300 STO +0 60100 0 00045                                                                                             
                 LEVOK = LEVEL (USR) .NE. MINUS1                                    145  LM00209
 01301 LXA +0 53400 1 00313    01302 CLA +0 50000 1 00144    01303 SUB +0 40200 0 00150    01304 TNZ -0 10000 0 01307   
 01305 PXD -0 75400 0 00000    01306 TRA +0 02000 0 01310    01307 CLA +0 50000 0 00320    01310 STO +0 60100 0 00145   
                 PROBOK = PROB .NE. 0                                               146  LM00210
 01311 CLA +0 50000 0 00250    01312 SUB +0 40200 0 00317    01313 TNZ -0 10000 0 01316    01314 PXD -0 75400 0 00000   
 01315 TRA +0 02000 0 01317    01316 CLA +0 50000 0 00320    01317 STO +0 60100 0 00247                                 
                 W'R LEVOK                                                          147  LM00212
 01320 NZT -0 52000 0 00145    01321 TRA +0 02000 0 01442                                                               
                      W'R .NOT. PROBOK                                              148  LM00213
 01322 ZET +0 52000 0 00247    01323 TRA +0 02000 0 01330                                                               
                           PROB = $ $                                               149  LM00214
 01324 CLA +0 50000 0 00365    01325 STO +0 60100 0 00250                                                               
                           PROG = $ $                                               150  LM00215
 01326 CLA +0 50000 0 00365    01327 STO +0 60100 0 00252                                                               
                      E'L                                                           151  LM00216
                      WT = GLOC. (WRKTIM+USR) * 60                                  152  LM00217
 01330 CLA +0 50000 0 00315    01331 ADD +0 40000 0 00313    01332 STO +0 60100 0 01622    01333 TSX +0 07400 4 00016   
 01334 TXH +3 00000 0 01622    01335 XCA +0 13100 0 00000    01336 MPY +0 20000 0 00324    01337 STQ -0 60000 0 00316   
                      TL = GLOC. (TIMLEV+USR) * 60                                  153  LM00218
 01340 CLA +0 50000 0 00302    01341 ADD +0 40000 0 00313    01342 STO +0 60100 0 01622    01343 TSX +0 07400 4 00016   
 01344 TXH +3 00000 0 01622    01345 XCA +0 13100 0 00000    01346 MPY +0 20000 0 00324    01347 STQ -0 60000 0 00304   
                      TM = GLOC. (UCLOCK+USR) * 60                                  154  LM00219
 01350 CLA +0 50000 0 00311    01351 ADD +0 40000 0 00313    01352 STO +0 60100 0 01622    01353 TSX +0 07400 4 00016   
 01354 TXH +3 00000 0 01622    01355 XCA +0 13100 0 00000    01356 MPY +0 20000 0 00324    01357 STQ -0 60000 0 00305   
                      TN = TM - GLOC. (UCHARG+USR) * 60                             155  LM00220
 01360 CLA +0 50000 0 00310    01361 ADD +0 40000 0 00313    01362 STO +0 60100 0 01622    01363 TSX +0 07400 4 00016   
 01364 TXH +3 00000 0 01622    01365 XCA +0 13100 0 00000    01366 MPY +0 20000 0 00324    01367 XCA +0 13100 0 00000   
 01370 CHS +0 76000 0 00002    01371 ADD +0 40000 0 00305    01372 STO +0 60100 0 00306                                 
                      PRMESS. (PROB, PROG, BLANK, COM, BLANK,                       156  LM00221
                1          CTIME. (WT), BLANK, CTIME. (TL), BLANK,                  156  LM00222
                2                  CTIME. (TM), BLANK, CTIME. (TN),                 156  LM00223
                3          SPACE ... LEVEL (USR), CONV. (POS (USR) ) )              156  LM00224
 01373 CLA +0 50000 0 00313    01374 SUB +0 40200 0 01375    01375 TXH +3 00000 0 00245    01376 STA +0 62100 0 01400   
 01377 TSX +0 07400 4 00026    01400 TXH +3 00000 0 00000    01401 STO +0 60100 0 01622    01402 CLA +0 50000 0 00313   
 01403 SUB +0 40200 0 01404    01404 TXH +3 00000 0 00144    01405 ALS +0 76700 0 00022    01406 STD +0 62200 0 01440   
 01407 TSX +0 07400 4 00027    01410 TXH +3 00000 0 00306    01411 STO +0 60100 0 01621    01412 TSX +0 07400 4 00027   
 01413 TXH +3 00000 0 00305    01414 STO +0 60100 0 01620    01415 TSX +0 07400 4 00027    01416 TXH +3 00000 0 00304   
 01417 STO +0 60100 0 01617    01420 TSX +0 07400 4 00027    01421 TXH +3 00000 0 00316    01422 STO +0 60100 0 01623   
 01423 TSX +0 07400 4 00023    01424 TXH +3 00000 0 00250    01425 TXH +3 00000 0 00252    01426 TXH +3 00000 0 00042   
 01427 TXH +3 00000 0 00045    01430 TXH +3 00000 0 00042    01431 TXH +3 00000 0 01623    01432 TXH +3 00000 0 00042   
 01433 TXH +3 00000 0 01617    01434 TXH +3 00000 0 00042    01435 TXH +3 00000 0 01620    01436 TXH +3 00000 0 00042   
 01437 TXH +3 00000 0 01621    01440 TIX +2 00000 0 00271    01441 TXH +3 00000 0 01622                                 
                 E'L                                                                157  LM00225
      PRLOOP     C'E                                                                158  LM00227
 01442 TRA +0 02000 0 01233                                                                                             
                 PRMESS.                                                            159  LM00232
 01443 TSX +0 07400 4 00023                                                                                             
      SNORE      PRMESS.                                                            160  LM00233
 01444 TSX +0 07400 4 00023                                                                                             
                 W'R SLTIM .NE. 0                                                   161  LM00234
 01445 CLA +0 50000 0 00256    01446 SUB +0 40200 0 00317    01447 TZE +0 10000 0 01454                                 
                      SNOOZE.(SLTIM,0)                                              162  LM00235
 01450 TSX +0 07400 4 00024    01451 TXH +3 00000 0 00256    01452 TXH +3 00000 0 00317                                 
                 O'E                                                                163  LM00236
 01453 TRA +0 02000 0 01456                                                                                             
                      CHNCOM. (1)                                                   164  LM00237
 01454 TSX +0 07400 4 00004    01455 TXH +3 00000 0 00320                                                               
                 E'L                                                                165  LM00238
                 PRMESS.                                                            166  LM00239
 01456 TSX +0 07400 4 00023                                                                                             
                           FIRST = 0                                                167  LM00240
 01457 CLA +0 50000 0 00317    01460 STO +0 60100 0 00060                                                               
                 T'O BEGIN                                                          168  LM00241
 01461 TRA +0 02000 0 00034                                                                                             
                 INTERNAL FUNCTION (NUM)                                            169  LM00247
 01462 TRA +0 02000 0 01516                                                                                             
                 E'O CONV.                                                          170  LM00248
 01463 TRA +0 02000 0 01466    00026 TTR +0 02100 0 01464    01464 SXA +0 63400 2 01503    01465 TSX +0 07400 2 01503   
                 F'N (BZEL. (DEFBC. (NUM) ) .A. 777777K) .V. 575757K6               171  LM00249
 01466 TSX +0 07400 4 00007    01467 TXH +3 00000 0 00024    01470 STO +0 60100 0 01515    01471 TSX +0 07400 4 00003   
 01472 TXH +3 00000 0 01515    01473 STO +0 60100 0 01515    01474 CAL -0 50000 0 01515    01475 ANA -0 32000 0 00327   
 01476 ORA -0 50100 0 00353    01477 SLW +0 60200 0 01515    01500 CLA +0 50000 0 01515    01501 TRA +0 02000 0 01511   
                 E'N                                                                172  LM00250
 01502 TSX +0 07400 4 00011    01503 TXH +3 00000 0 00000    01504 SXD -0 63400 1 01503    01505 SXA +0 63400 4 01511   
 01506 CLA +0 50000 4 00001    01507 STO +0 60100 0 01467    01510 TRA +0 02000 2 00001    01511 AXT +0 77400 4 00000   
 01512 LXA +0 53400 2 01503    01513 LXD -0 53400 1 01503    01514 TRA +0 02000 4 00001                                 
                 INTERNAL FUNCTION (NUM)                                            173  LM00255
 01516 TRA +0 02000 0 01544                                                                                             
                 E'O CTIME.                                                         174  LM00256
 01517 TRA +0 02000 0 01522    00027 TTR +0 02100 0 01520    01520 SXA +0 63400 2 01531    01521 TSX +0 07400 2 01531   
                 F'N BZEL. (MINS. (NUM) )                                           175  LM00257
 01522 TSX +0 07400 4 00022    01523 TXH +3 00000 0 00024    01524 STO +0 60100 0 01543    01525 TSX +0 07400 4 00003   
 01526 TXH +3 00000 0 01543    01527 TRA +0 02000 0 01537                                                               
                 E'N                                                                176  LM00258
 01530 TSX +0 07400 4 00011    01531 TXH +3 00000 0 00000    01532 SXD -0 63400 1 01531    01533 SXA +0 63400 4 01537   
 01534 CLA +0 50000 4 00001    01535 STO +0 60100 0 01523    01536 TRA +0 02000 2 00001    01537 AXT +0 77400 4 00000   
 01540 LXA +0 53400 2 01531    01541 LXD -0 53400 1 01531    01542 TRA +0 02000 4 00001                                 
                 INTERNAL FUNCTION (NUM)                                            177  LM00263
 01544 TRA +0 02000 0 01616                                                                                             
                 E'O FLOTBC.                                                        178  LM00264
 01545 TRA +0 02000 0 01550    00030 TTR +0 02100 0 01546    01546 SXA +0 63400 2 01574    01547 TSX +0 07400 2 01574   
                 FIX. (NUM, NUM, NUM (1))                                           179  LM00265
 01550 TSX +0 07400 4 00012    01551 TXH +3 00000 0 00024    01552 TXH +3 00000 0 00024    01553 TXH +3 00000 0 00023   
                 NUM = CONV. (NUM)                                                  180  LM00266
 01554 TSX +0 07400 4 00026    01555 TXH +3 00000 0 00024    01556 STO +0 60100 0 00024                                 
                 NUM (1) = (FRACBC.(NUM(1)).RS.6) .A. 77K8 .V. 330057575757K        181  LM00267
 01557 TSX +0 07400 4 00013    01560 TXH +3 00000 0 00023    01561 STO +0 60100 0 01615    01562 CAL -0 50000 0 00322   
 01563 STA +0 62100 0 01565    01564 CAL -0 50000 0 01615    01565 LGR -0 76500 0 00000    01566 ANA -0 32000 0 00331   
 01567 ORA -0 50100 0 00345    01570 SLW +0 60200 0 00023                                                               
                 FUNCTION RETURN                                                    182  LM00268
 01571 TRA +0 02000 0 01611                                                                                             
                 END OF FUNCTION                                                    183  LM00269
 01572 TSX +0 07400 4 00011    01573 PZE +0 00000 0 00001    01574 TXH +3 00000 0 00000    01575 SXD -0 63400 1 01574   
 01576 SXA +0 63400 4 01611    01577 CLA +0 50000 4 00001    01600 STO +0 60100 0 01551    01601 STO +0 60100 0 01552   
 01602 STO +0 60100 0 01555    01603 STA +0 62100 0 01556    01604 SUB +0 40200 0 01573    01605 STO +0 60100 0 01553   
 01606 STO +0 60100 0 01560    01607 STA +0 62100 0 01570    01610 TRA +0 02000 2 00001    01611 AXT +0 77400 4 00000   
 01612 LXA +0 53400 2 01574    01613 LXD -0 53400 1 01574    01614 TRA +0 02000 4 00001                                 
                 E'M                                                                184  LM00272
 01616 TSX +0 07400 4 00011                                                                                             




 ORDER   BCD 09/20/68 0220.3   11504         00000    




ORDER1   BCD 09/18/68 1112.3    9080         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  ORDER1   MAD            08/28/68    0853.5
-                 
                  NORMAL MODE IS INTEGER                                                          *001 LM00001    
                  BOOLEAN ORDSW                                                                   *002 LM00002    
                  DIMENSION NAMES(4),B1(0),B2(0),B3(0),B4(0),B5(0),LINE(0)                        *003 LM00003    
                  EQUIVALENCE (NAMES,NAME),(NAMES(1),N1),(NAMES(2),N2),(NAMES(3),N3),             *004 LM00004    
                1    (NAMES(4),N4)                                                                *004 LM00005    
                  VECTOR VALUES TYPSW=0B                                                          *005 LM00006    
                  VECTOR VALUES FENCE=777777777777K                                               *006 LM00007    
                  VECTOR VALUES CHRSIZ=6                                                          *007 LM00008    
                  VECTOR VALUES M=0                                                               *008 LM00009    
                  VECTOR VALUES BLKSIZ=0                                                          *009 LM00010    
                  VECTOR VALUES LNMSK=777777K6                                                    *010 LM00011    
                  VECTOR VALUES MAXLEN=0                                                          *011 LM00012    
                  VECTOR VALUES FIRST=1B                                                          *012 LM00013    
                  VECTOR VALUES SKIPFL=0B                                                         *013 LM00014    
                  VECTOR VALUES BL=605757575757K                                                  *014 LM00015    
                                                                                                       LM00016    
                  THROUGH ARGS, FOR N=1,1,COMARG.(N,TEMP).E.FENCE.OR.N.G.19                       *015 LM00017    
                  WHENEVER TEMP.E.$(SORT)$                                                        *016 LM00018    
                     TYPSW=1B                                                                     *017 LM00019    
                     ORDSW=0B                                                                     *018 LM00020    
                  OR WHENEVER TEMP.E.$(NSRT)$                                                     *019 LM00021    
                     TYPSW=1B                                                                     *020 LM00022    
                     ORDSW=1B                                                                     *021 LM00023    
                  OR WHENEVER TEMP.E.$(BLKS)$                                                     *022 LM00024    
                     N=N+1                                                                        *023 LM00025    
                     WHENEVER COMARG.(N,TEMP).E.FENCE                                             *024 LM00026    
                        PR.($(BLKS) NOT RECOGNIZED.$)                                             *025 LM00027    
                        CHNCOM.(0)                                                                *026 LM00028    
                     END OF CONDITIONAL                                                           *027 LM00029    
                     WHENEVER ZEL.(TEMP).A.$$.NE.0, TRANSFER TO BADCAL                            *028 LM00030    
                     BLKSIZ=BCDEC.(TEMP)                                                          *029 LM00031    
                  OR WHENEVER TEMP.E.$(ASCI)$                                                     *030 LM00032    
                     CHRSIZ=9                                                                     *031 LM00033    
                  OR WHENEVER TEMP.E.$(CTSS)$                                                     *032 LM00034    
                     CHRSIZ=12                                                                    *033 LM00035    
                  OR WHENEVER TEMP.E.$ (BCD)$                                                     *034 LM00036    
                     CHRSIZ=6                                                                     *035 LM00037    
                  OTHERWISE                                                                       *036 LM00038    
                     WHENEVER M.G.4                                                               *037 LM00039    
      BADCAL            PR.(TEMP,$ NOT RECOGNIZED.$)                                              *038 LM00040    
                        CHNCOM.(0)                                                                *039 LM00041    
                     END OF CONDITIONAL                                                           *040 LM00042    
                     NAMES(M)=TEMP                                                                *041 LM00043    
                     M=M+1                                                                        *042 LM00044    
      ARGS        END OF CONDITIONAL                                                              *043 LM00045    
                  WHENEVER M.L.4                                                                  *044 LM00046    
                     PR.($NOT ENOUGH NAMES.$)                                                     *045 LM00047    
                     CHNCOM.(0)                                                                   *046 LM00048    
                  OR WHENEVER M.E.4                                                               *047 LM00049    
                     NAMES(4)=NAMES(2)                                                            *048 LM00050    
                  END OF CONDITIONAL                                                              *049 LM00051    
                  WHENEVER .NOT.TYPSW                                                             *050 LM00052    
                     PR.($MODE NOT SPECIFIED.$)                                                   *051 LM00053    
                     CHNCOM.(0)                                                                   *052 LM00054    
                  END OF CONDITIONAL                                                              *053 LM00055    
                                                                                                       LM00056    
                  SETBRK.(INT)                                                                    *054 LM00057    
                  DELETE.(N3,N4,0,EGRETS)                                                         *055 LM00058    
                  SETORD.(NAME,ORDSW,CHRSIZ,EGRETS)                                               *056 LM00059    
                  GETBUF.(B1,431)                                                                 *057 LM00060    
                  GETBUF.(B2,431)                                                                 *058 LM00061    
                  GETBUF.(B3,431)                                                                 *059 LM00062    
                  GETBUF.(B4,431)                                                                 *060 LM00063    
                  GETBUF.(B5,431)                                                                 *061 LM00064    
                  BFOPEN.($R$,N1,N2,B1(B1+431),B2(B2+431),-0,BFERR)                               *062 LM00065    
                  BFOPEN.($W$,N3,N4,B3(B3+431),B4(B4+431),B5(B5+431),BFERR)                       *063 LM00066    
                  WHENEVER BLKSIZ.NE.0, TRANSFER TO FIXED                                         *064 LM00067    
                  BFREAD.(N1,N2,LNMRK...1,NOFILE,TEMP,BFERR)                                      *065 LM00068    
                  FIRST=0B                                                                        *066 LM00069    
                  WHENEVER LNMRK.A.LNMSK.NE.LNMSK                                                 *067 LM00070    
                     BLKSIZ=14                                                                    *068 LM00071    
                     GETBUF.(LINE,13)                                                             *069 LM00072    
                     LINE(LINE+13)=LNMRK                                                          *070 LM00073    
                     BFREAD.(N1,N2,LINE(LINE+12)...13,EOFX,TEMP,BFERR)                            *071 LM00074    
                     TRANSFER TO FLOOP1                                                           *072 LM00075    
                  END OF CONDITIONAL                                                              *073 LM00076    
                  TRANSFER TO LNMRKD                                                              *074 LM00077    
                                                                                                       LM00078    
      FIXED       GETBUF.(LINE,BLKSIZ-1)                                                          *075 LM00079    
                                                                                                       LM00080    
      FLOOP       BFREAD.(N1,N2,LINE(LINE+BLKSIZ-1)...BLKSIZ,EOFZ,TEMP,BFERR)                     *076 LM00081    
                  FIRST=0B                                                                        *077 LM00082    
      FLOOP1      TEMP=ORDLIN.(LINE(LINE+BLKSIZ-1)...BLKSIZ)                                      *078 LM00083    
                  THROUGH FILL, FOR TEMP=BLKSIZ-TEMP-1,-1,TEMP.L.0                                *079 LM00084    
      FILL        LINE(LINE+TEMP)=FILCHR.(0)                                                      *080 LM00085    
                  BFWRIT.(N3,N4,LINE(LINE+BLKSIZ-1)...BLKSIZ,BFERR)                               *081 LM00086    
                  TRANSFER TO FLOOP                                                               *082 LM00087    
                                                                                                       LM00088    
      LLOOP       BFREAD.(N1,N2,LNMRK...1,INT,TEMP,BFERR)                                         *083 LM00089    
                  WHENEVER LNMRK.A.LNMSK.NE.LNMSK                                                 *084 LM00090    
                     WHENEVER .NOT.SKIPFL                                                         *085 LM00091    
      LNMRKR            PR.($LINEMARK ERROR.$)                                                    *086 LM00092    
                        SKIPFL=1B                                                                 *087 LM00093    
                     END OF CONDITIONAL                                                           *088 LM00094    
                     TRANSFER TO LLOOP                                                            *089 LM00095    
                  END OF CONDITIONAL                                                              *090 LM00096    
                  SKIPFL=0B                                                                       *091 LM00097    
      LNMRKD      TEMP=LNMRK.A.777777K                                                            *092 LM00098    
                  WHENEVER TEMP.G.1000, TRANSFER TO LNMRKR                                        *093 LM00099    
                  WHENEVER TEMP.G.MAXLEN                                                          *094 LM00100    
                     GETBUF.(LINE,TEMP-MAXLEN-1)                                                  *095 LM00101    
                     MAXLEN=TEMP                                                                  *096 LM00102    
                  END OF CONDITIONAL                                                              *097 LM00103    
                  BFREAD.(N1,N2,LINE(LINE+MAXLEN-1)...TEMP,EOFY,TEMP,BFERR)                       *098 LM00104    
                  TEMP=ORDLIN.(LINE(LINE+MAXLEN-1)...TEMP)                                        *099 LM00105    
                  LNMRK=TEMP.V.LNMSK                                                              *100 LM00106    
                  BFWRIT.(N3,N4,LNMRK...1,BFERR)                                                  *101 LM00107    
                  BFWRIT.(N3,N4,LINE(LINE+MAXLEN-1)...TEMP,BFERR)                                 *102 LM00108    
                  TRANSFER TO LLOOP                                                               *103 LM00109    
                                                                                                       LM00110    
      NOFILE      PR.(N1,BL,N2,$ IS EMPTY.$)                                                      *104 LM00111    
      INT         BFCLOS.($ALL$,-0,BFERR)                                                         *105 LM00112    
      EGRETS      PR.($*$)                                                                        *106 LM00113    
                  CHNCOM.(0)                                                                      *107 LM00114    
                                                                                                       LM00115    
      BFERR       PRNTER.                                                                         *108 LM00116    
                  BFCLOS.($ALL$,-0,EGRETS)                                                        *109 LM00117    
                  TRANSFER TO EGRETS                                                              *110 LM00118    
                                                                                                       LM00119    
      EOFX        TEMP=TEMP+1                                                                     *111 LM00120    
      EOFZ        WHENEVER TEMP.E.0                                                               *112 LM00121    
                     WHENEVER FIRST, TRANSFER TO NOFILE                                           *113 LM00122    
                     TRANSFER TO INT                                                              *114 LM00123    
                  END OF CONDITIONAL                                                              *115 LM00124    
                  PR.($FINAL BLOCK$,BZ57.(DEFBC.(TEMP)),$ WORDS LONG.$)                           *116 LM00125    
                  TEMP=ORDLIN.(LINE(LINE+BLKSIZ-1)...TEMP)                                        *117 LM00126    
                  THROUGH FILL1, FOR TEMP=BLKSIZ-TEMP-1,-1,TEMP.L.0                               *118 LM00127    
      FILL1       LINE(LINE+TEMP)=FILCHR.(0)                                                      *119 LM00128    
                  BFWRIT.(N3,N4,LINE(LINE+BLKSIZ-1)...BLKSIZ,BFERR)                               *120 LM00129    
                  TRANSFER TO INT                                                                 *121 LM00130    
                                                                                                       LM00131    
      EOFY        PR.($LINEMARK ERROR.$)                                                          *122 LM00132    
                  TRANSFER TO INT                                                                 *123 LM00133    
                                                                                                       LM00134    
                  END OF PROGRAM                                                                  *124 LM00135    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01114 TRANSFER VECTOR LENGTH  00024 PROGRAM BEGINS    00147
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ARGS   00024   4        BL     00056 A 1        FIRST  00061 A 2        LNMRK  00063   1        NAME   00031   1  
      B1     00050 A 1        CHRSIZ 00057 A 1        FIXED  00040   4        LNMSK  00064 A 1        NAMES  00031 A 1  
      B2     00051 A 1        EGRETS 00034   4        FLOOP1 00041   4        MAXLEN 00065 A 1        NOFILE 00047   4  
      B3     00052 A 1        EOFX   00035   4        FLOOP  00042   4        M      00066 A 1        N      00067   1  
      B4     00053 A 1        EOFY   00036   4        INT    00043   4        N1     00030   1        ORDSW  00070   2  
      B5     00054 A 1        EOFZ   00037   4        LINE   00062 A 1        N2     00027   1        SKIPFL 00071 A 2  
      BADCAL 00032   4        FENCE  00060 A 1        LLOOP  00044   4        N3     00026   1        TEMP   00072   1  
      BFERR  00033   4        FILL1  00024   4        LNMRKD 00045   4        N4     00025   1        TYPSW  00073 A 2  
      BLKSIZ 00055 A 1        FILL   00024   4        LNMRKR 00046   4                                                  
0FUNCTION DICTIONARY    
      BCDEC  00000   1        BFCLOS 00001   1        BFOPEN 00002   1        BFREAD 00003   1        BFWRIT 00004   1  
      BZ57   00005   1        CHNCOM 00006   1        COMARG 00007   1        DEFBC  00010   1        DELETE 00011   1  
      EXIT   00012   1        FILCHR 00013   1        GETBUF 00014   1        .SETUP 00015   1        ORDLIN 00016   1  
      PRNTER 00017   1        PR     00020   1        SETBRK 00021   1        SETORD 00022   1        ZEL    00023   1  
0ABSOLUTE CONSTANTS     
 00133 -204346452733     00136 -206646512462     00112 +224346234260     00116 +263145214360     00131 -146060606060    
 00110 +214343606060     00126 -076370336060     00132 -203162602544     00106 +000000001750     00107 +000000777777    
 00123 -065133606060     00127 -114260255151     00120 -033145254421     00102 +000000000015     00103 +000000000016    
 00140 -266060606060     00130 -116060606060     00105 +000000000657     00117 +336060606060     00114 +233126312524    
 00124 -066360624725     00121 -044624256045     00111 +214425623360     00125 -066427306045     00122 -054663602545    
 00076 +000000000004     00077 +000000000006     00137 -207422232434     00101 +000000000014     00144 -342363626234    
 00100 +000000000011     00142 -342162233134     00135 -206060606060     00141 -312524336060     00115 +252346274531    
 00134 -204546636051     00143 -342243426234     00145 -344562516334     00074 +000000000000     00146 -346246516334    
 00104 +000000000023     00075 +000000000001     00113 +233000000000                                                    
0STATEMENT DICTIONARY   
 00032 TXL -300302000275       00033 TXL -300774000773       00034 TXL -300771000767       00035 TXL -301006001003      
 00036 TXL -301107001103       00037 TXL -301011001006       00040 TXL -300533000525       00041 TXL -300563000552      
 00042 TXL -300550000533       00043 TXL -300767000761       00044 TXL -300633000624       00045 TXL -300657000654      
 00046 TXL -300647000643       00047 TXL -300761000753                                                                  
0PROGRAM    
                 N'R                                                                001  LM00001
                 BOOLEAN ORDSW                                                      002  LM00002
                 D'N NAMES(4),B1(0),B2(0),B3(0),B4(0),B5(0),LINE(0)                 003  LM00003
                 E'E (NAMES,NAME),(NAMES(1),N1),(NAMES(2),N2),(NAMES(3),N3),        004  LM00004
                1   (NAMES(4),N4)                                                   004  LM00005
                 V'S TYPSW=0B                                                       005  LM00006
 00147 TSX +0 07400 4 00015    00073     +0 00000 0 00000                                                               
                 V'S FENCE=777777777777K                                            006  LM00007
 00060     -3 77777 7 77777                                                                                             
                 V'S CHRSIZ=6                                                       007  LM00008
 00057     +0 00000 0 00006                                                                                             
                 V'S M=0                                                            008  LM00009
 00066     +0 00000 0 00000                                                                                             
                 V'S BLKSIZ=0                                                       009  LM00010
 00055     +0 00000 0 00000                                                                                             
                 V'S LNMSK=777777K6                                                 010  LM00011
 00064     -3 77777 0 00000                                                                                             
                 V'S MAXLEN=0                                                       011  LM00012
 00065     +0 00000 0 00000                                                                                             
                 V'S FIRST=1B                                                       012  LM00013
 00061     +0 00000 0 00001                                                                                             
                 V'S SKIPFL=0B                                                      013  LM00014
 00071     +0 00000 0 00000                                                                                             
                 V'S BL=605757575757K                                               014  LM00015
 00056     -2 05757 5 75757                                                                                             
                 T'H ARGS, FOR N=1,1,COMARG.(N,TEMP).E.FENCE.OR.N.G.19              015  LM00017
 00150 CLA +0 50000 0 00075    00151 STO +0 60100 0 00067    00152 TRA +0 02000 0 00156    00153 CLA +0 50000 0 00067   
 00154 ADD +0 40000 0 00075    00155 STO +0 60100 0 00067    00156 CLA +0 50000 0 00067    00157 SUB +0 40200 0 00104   
 00160 TZE +0 10000 0 00162    00161 TPL +0 12000 0 00313    00162 TSX +0 07400 4 00007    00163 TXH +3 00000 0 00067   
 00164 TXH +3 00000 0 00072    00165 SUB +0 40200 0 00060    00166 TZE +0 10000 0 00313                                 
                 W'R TEMP.E.$(SORT)$                                                016  LM00018
 00167 CLA +0 50000 0 00072    00170 SUB +0 40200 0 00146    00171 TNZ -0 10000 0 00177                                 
                    TYPSW=1B                                                        017  LM00019
 00172 CLA +0 50000 0 00075    00173 STO +0 60100 0 00073                                                               
                    ORDSW=0B                                                        018  LM00020
 00174 CLA +0 50000 0 00074    00175 STO +0 60100 0 00070                                                               
                 O'R TEMP.E.$(NSRT)$                                                019  LM00021
 00176 TRA +0 02000 0 00312    00177 CLA +0 50000 0 00072    00200 SUB +0 40200 0 00145    00201 TNZ -0 10000 0 00207   
                    TYPSW=1B                                                        020  LM00022
 00202 CLA +0 50000 0 00075    00203 STO +0 60100 0 00073                                                               
                    ORDSW=1B                                                        021  LM00023
 00204 CLA +0 50000 0 00075    00205 STO +0 60100 0 00070                                                               
                 O'R TEMP.E.$(BLKS)$                                                022  LM00024
 00206 TRA +0 02000 0 00312    00207 CLA +0 50000 0 00072    00210 SUB +0 40200 0 00143    00211 TNZ -0 10000 0 00247   
                    N=N+1                                                           023  LM00025
 00212 CLA +0 50000 0 00067    00213 ADD +0 40000 0 00075    00214 STO +0 60100 0 00067                                 
                    W'R COMARG.(N,TEMP).E.FENCE                                     024  LM00026
 00215 TSX +0 07400 4 00007    00216 TXH +3 00000 0 00067    00217 TXH +3 00000 0 00072    00220 SUB +0 40200 0 00060   
 00221 TNZ -0 10000 0 00231                                                                                             
                       PR.($(BLKS) NOT RECOGNIZED.$)                                025  LM00027
 00222 TSX +0 07400 4 00020    00223 TXH +3 00000 0 00143    00224 TXH +3 00000 0 00134    00225 TXH +3 00000 0 00115   
 00226 TXH +3 00000 0 00141                                                                                             
                       CHNCOM.(0)                                                   026  LM00028
 00227 TSX +0 07400 4 00006    00230 TXH +3 00000 0 00074                                                               
                    E'L                                                             027  LM00029
                    W'R ZEL.(TEMP).A.$$.NE.0, T'O BADCAL                            028  LM00030
 00231 TSX +0 07400 4 00023    00232 TXH +3 00000 0 00072    00233 STO +0 60100 0 01111    00234 CAL -0 50000 0 01111   
 00235 ANA -0 32000 0 00135    00236 SLW +0 60200 0 01111    00237 CLA +0 50000 0 01111    00240 SUB +0 40200 0 00074   
 00241 TZE +0 10000 0 00243    00242 TRA +0 02000 0 00032                                                               
                    BLKSIZ=BCDEC.(TEMP)                                             029  LM00031
 00243 TSX +0 07400 4 00000    00244 TXH +3 00000 0 00072    00245 STO +0 60100 0 00055                                 
                 O'R TEMP.E.$(ASCI)$                                                030  LM00032
 00246 TRA +0 02000 0 00312    00247 CLA +0 50000 0 00072    00250 SUB +0 40200 0 00142    00251 TNZ -0 10000 0 00255   
                    CHRSIZ=9                                                        031  LM00033
 00252 CLA +0 50000 0 00100    00253 STO +0 60100 0 00057                                                               
                 O'R TEMP.E.$(CTSS)$                                                032  LM00034
 00254 TRA +0 02000 0 00312    00255 CLA +0 50000 0 00072    00256 SUB +0 40200 0 00144    00257 TNZ -0 10000 0 00263   
                    CHRSIZ=12                                                       033  LM00035
 00260 CLA +0 50000 0 00101    00261 STO +0 60100 0 00057                                                               
                 O'R TEMP.E.$ (BCD)$                                                034  LM00036
 00262 TRA +0 02000 0 00312    00263 CLA +0 50000 0 00072    00264 SUB +0 40200 0 00137    00265 TNZ -0 10000 0 00271   
                    CHRSIZ=6                                                        035  LM00037
 00266 CLA +0 50000 0 00077    00267 STO +0 60100 0 00057                                                               
                 O'E                                                                036  LM00038
 00270 TRA +0 02000 0 00312                                                                                             
                    W'R M.G.4                                                       037  LM00039
 00271 CLA +0 50000 0 00066    00272 SUB +0 40200 0 00076    00273 TZE +0 10000 0 00304    00274 TMI -0 12000 0 00304   
      BADCAL           PR.(TEMP,$ NOT RECOGNIZED.$)                                 038  LM00040
 00275 TSX +0 07400 4 00020    00276 TXH +3 00000 0 00072    00277 TXH +3 00000 0 00134    00300 TXH +3 00000 0 00115   
 00301 TXH +3 00000 0 00141                                                                                             
                       CHNCOM.(0)                                                   039  LM00041
 00302 TSX +0 07400 4 00006    00303 TXH +3 00000 0 00074                                                               
                    E'L                                                             040  LM00042
                    NAMES(M)=TEMP                                                   041  LM00043
 00304 LXA +0 53400 1 00066    00305 CLA +0 50000 0 00072    00306 STO +0 60100 1 00031                                 
                    M=M+1                                                           042  LM00044
 00307 CLA +0 50000 0 00066    00310 ADD +0 40000 0 00075    00311 STO +0 60100 0 00066                                 
      ARGS       E'L                                                                043  LM00045
 00312 TRA +0 02000 0 00153                                                                                             
                 W'R M.L.4                                                          044  LM00046
 00313 CLA +0 50000 0 00066    00314 SUB +0 40200 0 00076    00315 TZE +0 10000 0 00326    00316 TPL +0 12000 0 00326   
                    PR.($NOT ENOUGH NAMES.$)                                        045  LM00047
 00317 TSX +0 07400 4 00020    00320 TXH +3 00000 0 00122    00321 TXH +3 00000 0 00125    00322 TXH +3 00000 0 00111   
                    CHNCOM.(0)                                                      046  LM00048
 00323 TSX +0 07400 4 00006    00324 TXH +3 00000 0 00074                                                               
                 O'R M.E.4                                                          047  LM00049
 00325 TRA +0 02000 0 00333    00326 CLA +0 50000 0 00066    00327 SUB +0 40200 0 00076    00330 TNZ -0 10000 0 00333   
                    NAMES(4)=NAMES(2)                                               048  LM00050
 00331 CLA +0 50000 0 00027    00332 STO +0 60100 0 00025                                                               
                 E'L                                                                049  LM00051
                 W'R .NOT.TYPSW                                                     050  LM00052
 00333 ZET +0 52000 0 00073    00334 TRA +0 02000 0 00344                                                               
                    PR.($MODE NOT SPECIFIED.$)                                      051  LM00053
 00335 TSX +0 07400 4 00020    00336 TXH +3 00000 0 00121    00337 TXH +3 00000 0 00124    00340 TXH +3 00000 0 00114   
 00341 TXH +3 00000 0 00117                                                                                             
                    CHNCOM.(0)                                                      052  LM00054
 00342 TSX +0 07400 4 00006    00343 TXH +3 00000 0 00074                                                               
                 E'L                                                                053  LM00055
                 SETBRK.(INT)                                                       054  LM00057
 00344 TSX +0 07400 4 00021    00345 TXH +3 00000 0 00043                                                               
                 DELETE.(N3,N4,0,EGRETS)                                            055  LM00058
 00346 TSX +0 07400 4 00011    00347 TXH +3 00000 0 00026    00350 TXH +3 00000 0 00025    00351 TXH +3 00000 0 00074   
 00352 TXH +3 00000 0 00034                                                                                             
                 SETORD.(NAME,ORDSW,CHRSIZ,EGRETS)                                  056  LM00059
 00353 TSX +0 07400 4 00022    00354 TXH +3 00000 0 00031    00355 TXH +3 00000 0 00070    00356 TXH +3 00000 0 00057   
 00357 TXH +3 00000 0 00034                                                                                             
                 GETBUF.(B1,431)                                                    057  LM00060
 00360 TSX +0 07400 4 00014    00361 TXH +3 00000 0 00050    00362 TXH +3 00000 0 00105                                 
                 GETBUF.(B2,431)                                                    058  LM00061
 00363 TSX +0 07400 4 00014    00364 TXH +3 00000 0 00051    00365 TXH +3 00000 0 00105                                 
                 GETBUF.(B3,431)                                                    059  LM00062
 00366 TSX +0 07400 4 00014    00367 TXH +3 00000 0 00052    00370 TXH +3 00000 0 00105                                 
                 GETBUF.(B4,431)                                                    060  LM00063
 00371 TSX +0 07400 4 00014    00372 TXH +3 00000 0 00053    00373 TXH +3 00000 0 00105                                 
                 GETBUF.(B5,431)                                                    061  LM00064
 00374 TSX +0 07400 4 00014    00375 TXH +3 00000 0 00054    00376 TXH +3 00000 0 00105                                 
                 BFOPEN.($R$,N1,N2,B1(B1+431),B2(B2+431),-0,BFERR)                  062  LM00065
 00377 CLS +0 50200 0 00074    00400 STO +0 60100 0 01111    00401 CLA +0 50000 0 00051    00402 ADD +0 40000 0 00105   
 00403 SUB +0 40200 0 00404    00404 TXH +3 00000 0 00051    00405 STA +0 62100 0 00420    00406 CLA +0 50000 0 00050   
 00407 ADD +0 40000 0 00105    00410 SUB +0 40200 0 00411    00411 TXH +3 00000 0 00050    00412 STA +0 62100 0 00417   
 00413 TSX +0 07400 4 00002    00414 TXH +3 00000 0 00130    00415 TXH +3 00000 0 00030    00416 TXH +3 00000 0 00027   
 00417 TXH +3 00000 0 00000    00420 TXH +3 00000 0 00000    00421 TXH +3 00000 0 01111    00422 TXH +3 00000 0 00033   
                 BFOPEN.($W$,N3,N4,B3(B3+431),B4(B4+431),B5(B5+431),BFERR)          063  LM00066
 00423 CLA +0 50000 0 00054    00424 ADD +0 40000 0 00105    00425 SUB +0 40200 0 00426    00426 TXH +3 00000 0 00054   
 00427 STA +0 62100 0 00450    00430 CLA +0 50000 0 00053    00431 ADD +0 40000 0 00105    00432 SUB +0 40200 0 00433   
 00433 TXH +3 00000 0 00053    00434 STA +0 62100 0 00447    00435 CLA +0 50000 0 00052    00436 ADD +0 40000 0 00105   
 00437 SUB +0 40200 0 00440    00440 TXH +3 00000 0 00052    00441 STA +0 62100 0 00446    00442 TSX +0 07400 4 00002   
 00443 TXH +3 00000 0 00140    00444 TXH +3 00000 0 00026    00445 TXH +3 00000 0 00025    00446 TXH +3 00000 0 00000   
 00447 TXH +3 00000 0 00000    00450 TXH +3 00000 0 00000    00451 TXH +3 00000 0 00033                                 
                 W'R BLKSIZ.NE.0, T'O FIXED                                         064  LM00067
 00452 CLA +0 50000 0 00055    00453 SUB +0 40200 0 00074    00454 TZE +0 10000 0 00456    00455 TRA +0 02000 0 00040   
                 BFREAD.(N1,N2,LNMRK...1,NOFILE,TEMP,BFERR)                         065  LM00068
 00456 TSX +0 07400 4 00003    00457 TXH +3 00000 0 00030    00460 TXH +3 00000 0 00027    00461 TIX +2 00075 0 00063   
 00462 TXH +3 00000 0 00047    00463 TXH +3 00000 0 00072    00464 TXH +3 00000 0 00033                                 
                 FIRST=0B                                                           066  LM00069
 00465 CLA +0 50000 0 00074    00466 STO +0 60100 0 00061                                                               
                 W'R LNMRK.A.LNMSK.NE.LNMSK                                         067  LM00070
 00467 CAL -0 50000 0 00063    00470 ANA -0 32000 0 00064    00471 SLW +0 60200 0 01111    00472 CLA +0 50000 0 01111   
 00473 SUB +0 40200 0 00064    00474 TZE +0 10000 0 00524                                                               
                    BLKSIZ=14                                                       068  LM00071
 00475 CLA +0 50000 0 00103    00476 STO +0 60100 0 00055                                                               
                    GETBUF.(LINE,13)                                                069  LM00072
 00477 TSX +0 07400 4 00014    00500 TXH +3 00000 0 00062    00501 TXH +3 00000 0 00102                                 
                    LINE(LINE+13)=LNMRK                                             070  LM00073
 00502 CLA +0 50000 0 00062    00503 ADD +0 40000 0 00102    00504 PAX +0 73400 1 00000    00505 CLA +0 50000 0 00063   
 00506 STO +0 60100 1 00062                                                                                             
                    BFREAD.(N1,N2,LINE(LINE+12)...13,EOFX,TEMP,BFERR)               071  LM00074
 00507 CLA +0 50000 0 00062    00510 ADD +0 40000 0 00101    00511 SUB +0 40200 0 00512    00512 TXH +3 00000 0 00062   
 00513 STA +0 62100 0 00517    00514 TSX +0 07400 4 00003    00515 TXH +3 00000 0 00030    00516 TXH +3 00000 0 00027   
 00517 TIX +2 00102 0 00000    00520 TXH +3 00000 0 00035    00521 TXH +3 00000 0 00072    00522 TXH +3 00000 0 00033   
                    T'O FLOOP1                                                      072  LM00075
 00523 TRA +0 02000 0 00041                                                                                             
                 E'L                                                                073  LM00076
                 T'O LNMRKD                                                         074  LM00077
 00524 TRA +0 02000 0 00045                                                                                             
      FIXED      GETBUF.(LINE,BLKSIZ-1)                                             075  LM00079
 00525 CLA +0 50000 0 00055    00526 SUB +0 40200 0 00075    00527 STO +0 60100 0 01111    00530 TSX +0 07400 4 00014   
 00531 TXH +3 00000 0 00062    00532 TXH +3 00000 0 01111                                                               
      FLOOP      BFREAD.(N1,N2,LINE(LINE+BLKSIZ-1)...BLKSIZ,EOFZ,TEMP,BFERR)        076  LM00081
 00533 CLA +0 50000 0 00062    00534 ADD +0 40000 0 00055    00535 SUB +0 40200 0 00075    00536 SUB +0 40200 0 00537   
 00537 TXH +3 00000 0 00062    00540 STA +0 62100 0 00544    00541 TSX +0 07400 4 00003    00542 TXH +3 00000 0 00030   
 00543 TXH +3 00000 0 00027    00544 TIX +2 00055 0 00000    00545 TXH +3 00000 0 00037    00546 TXH +3 00000 0 00072   
 00547 TXH +3 00000 0 00033                                                                                             
                 FIRST=0B                                                           077  LM00082
 00550 CLA +0 50000 0 00074    00551 STO +0 60100 0 00061                                                               
      FLOOP1     TEMP=ORDLIN.(LINE(LINE+BLKSIZ-1)...BLKSIZ)                         078  LM00083
 00552 CLA +0 50000 0 00062    00553 ADD +0 40000 0 00055    00554 SUB +0 40200 0 00075    00555 SUB +0 40200 0 00556   
 00556 TXH +3 00000 0 00062    00557 STA +0 62100 0 00561    00560 TSX +0 07400 4 00016    00561 TIX +2 00055 0 00000   
 00562 STO +0 60100 0 00072                                                                                             
                 T'H FILL, FOR TEMP=BLKSIZ-TEMP-1,-1,TEMP.L.0                       079  LM00084
 00563 CLA +0 50000 0 00055    00564 SUB +0 40200 0 00072    00565 SUB +0 40200 0 00075    00566 STO +0 60100 0 00072   
 00567 TRA +0 02000 0 00573    00570 CLS +0 50200 0 00075    00571 ADD +0 40000 0 00072    00572 STO +0 60100 0 00072   
 00573 CLA +0 50000 0 00072    00574 SUB +0 40200 0 00074    00575 TZE +0 10000 0 00577    00576 TMI -0 12000 0 00610   
      FILL       LINE(LINE+TEMP)=FILCHR.(0)                                         080  LM00085
 00577 TSX +0 07400 4 00013    00600 TXH +3 00000 0 00074    00601 STO +0 60100 0 01111    00602 CLA +0 50000 0 00062   
 00603 ADD +0 40000 0 00072    00604 PAX +0 73400 1 00000    00605 CLA +0 50000 0 01111    00606 STO +0 60100 1 00062   
 00607 TRA +0 02000 0 00570                                                                                             
                 BFWRIT.(N3,N4,LINE(LINE+BLKSIZ-1)...BLKSIZ,BFERR)                  081  LM00086
 00610 CLA +0 50000 0 00062    00611 ADD +0 40000 0 00055    00612 SUB +0 40200 0 00075    00613 SUB +0 40200 0 00614   
 00614 TXH +3 00000 0 00062    00615 STA +0 62100 0 00621    00616 TSX +0 07400 4 00004    00617 TXH +3 00000 0 00026   
 00620 TXH +3 00000 0 00025    00621 TIX +2 00055 0 00000    00622 TXH +3 00000 0 00033                                 
                 T'O FLOOP                                                          082  LM00087
 00623 TRA +0 02000 0 00042                                                                                             
      LLOOP      BFREAD.(N1,N2,LNMRK...1,INT,TEMP,BFERR)                            083  LM00089
 00624 TSX +0 07400 4 00003    00625 TXH +3 00000 0 00030    00626 TXH +3 00000 0 00027    00627 TIX +2 00075 0 00063   
 00630 TXH +3 00000 0 00043    00631 TXH +3 00000 0 00072    00632 TXH +3 00000 0 00033                                 
                 W'R LNMRK.A.LNMSK.NE.LNMSK                                         084  LM00090
 00633 CAL -0 50000 0 00063    00634 ANA -0 32000 0 00064    00635 SLW +0 60200 0 01111    00636 CLA +0 50000 0 01111   
 00637 SUB +0 40200 0 00064    00640 TZE +0 10000 0 00652                                                               
                    W'R .NOT.SKIPFL                                                 085  LM00091
 00641 ZET +0 52000 0 00071    00642 TRA +0 02000 0 00651                                                               
      LNMRKR           PR.($LINEMARK ERROR.$)                                       086  LM00092
 00643 TSX +0 07400 4 00020    00644 TXH +3 00000 0 00120    00645 TXH +3 00000 0 00127    00646 TXH +3 00000 0 00123   
                       SKIPFL=1B                                                    087  LM00093
 00647 CLA +0 50000 0 00075    00650 STO +0 60100 0 00071                                                               
                    E'L                                                             088  LM00094
                    T'O LLOOP                                                       089  LM00095
 00651 TRA +0 02000 0 00044                                                                                             
                 E'L                                                                090  LM00096
                 SKIPFL=0B                                                          091  LM00097
 00652 CLA +0 50000 0 00074    00653 STO +0 60100 0 00071                                                               
      LNMRKD     TEMP=LNMRK.A.777777K                                               092  LM00098
 00654 CAL -0 50000 0 00063    00655 ANA -0 32000 0 00107    00656 SLW +0 60200 0 00072                                 
                 W'R TEMP.G.1000, T'O LNMRKR                                        093  LM00099
 00657 CLA +0 50000 0 00072    00660 SUB +0 40200 0 00106    00661 TZE +0 10000 0 00664    00662 TMI -0 12000 0 00664   
 00663 TRA +0 02000 0 00046                                                                                             
                 W'R TEMP.G.MAXLEN                                                  094  LM00100
 00664 CLA +0 50000 0 00072    00665 SUB +0 40200 0 00065    00666 TZE +0 10000 0 00701    00667 TMI -0 12000 0 00701   
                    GETBUF.(LINE,TEMP-MAXLEN-1)                                     095  LM00101
 00670 CLA +0 50000 0 00072    00671 SUB +0 40200 0 00065    00672 SUB +0 40200 0 00075    00673 STO +0 60100 0 01111   
 00674 TSX +0 07400 4 00014    00675 TXH +3 00000 0 00062    00676 TXH +3 00000 0 01111                                 
                    MAXLEN=TEMP                                                     096  LM00102
 00677 CLA +0 50000 0 00072    00700 STO +0 60100 0 00065                                                               
                 E'L                                                                097  LM00103
                 BFREAD.(N1,N2,LINE(LINE+MAXLEN-1)...TEMP,EOFY,TEMP,BFERR)          098  LM00104
 00701 CLA +0 50000 0 00062    00702 ADD +0 40000 0 00065    00703 SUB +0 40200 0 00075    00704 SUB +0 40200 0 00705   
 00705 TXH +3 00000 0 00062    00706 STA +0 62100 0 00712    00707 TSX +0 07400 4 00003    00710 TXH +3 00000 0 00030   
 00711 TXH +3 00000 0 00027    00712 TIX +2 00072 0 00000    00713 TXH +3 00000 0 00036    00714 TXH +3 00000 0 00072   
 00715 TXH +3 00000 0 00033                                                                                             
                 TEMP=ORDLIN.(LINE(LINE+MAXLEN-1)...TEMP)                           099  LM00105
 00716 CLA +0 50000 0 00062    00717 ADD +0 40000 0 00065    00720 SUB +0 40200 0 00075    00721 SUB +0 40200 0 00722   
 00722 TXH +3 00000 0 00062    00723 STA +0 62100 0 00725    00724 TSX +0 07400 4 00016    00725 TIX +2 00072 0 00000   
 00726 STO +0 60100 0 00072                                                                                             
                 LNMRK=TEMP.V.LNMSK                                                 100  LM00106
 00727 CAL -0 50000 0 00072    00730 ORA -0 50100 0 00064    00731 SLW +0 60200 0 00063                                 
                 BFWRIT.(N3,N4,LNMRK...1,BFERR)                                     101  LM00107
 00732 TSX +0 07400 4 00004    00733 TXH +3 00000 0 00026    00734 TXH +3 00000 0 00025    00735 TIX +2 00075 0 00063   
 00736 TXH +3 00000 0 00033                                                                                             
                 BFWRIT.(N3,N4,LINE(LINE+MAXLEN-1)...TEMP,BFERR)                    102  LM00108
 00737 CLA +0 50000 0 00062    00740 ADD +0 40000 0 00065    00741 SUB +0 40200 0 00075    00742 SUB +0 40200 0 00743   
 00743 TXH +3 00000 0 00062    00744 STA +0 62100 0 00750    00745 TSX +0 07400 4 00004    00746 TXH +3 00000 0 00026   
 00747 TXH +3 00000 0 00025    00750 TIX +2 00072 0 00000    00751 TXH +3 00000 0 00033                                 
                 T'O LLOOP                                                          103  LM00109
 00752 TRA +0 02000 0 00044                                                                                             
      NOFILE     PR.(N1,BL,N2,$ IS EMPTY.$)                                         104  LM00111
 00753 TSX +0 07400 4 00020    00754 TXH +3 00000 0 00030    00755 TXH +3 00000 0 00056    00756 TXH +3 00000 0 00027   
 00757 TXH +3 00000 0 00132    00760 TXH +3 00000 0 00126                                                               
      INT        BFCLOS.($ALL$,-0,BFERR)                                            105  LM00112
 00761 CLS +0 50200 0 00074    00762 STO +0 60100 0 01111    00763 TSX +0 07400 4 00001    00764 TXH +3 00000 0 00110   
 00765 TXH +3 00000 0 01111    00766 TXH +3 00000 0 00033                                                               
      EGRETS     PR.($*$)                                                           106  LM00113
 00767 TSX +0 07400 4 00020    00770 TXH +3 00000 0 00131                                                               
                 CHNCOM.(0)                                                         107  LM00114
 00771 TSX +0 07400 4 00006    00772 TXH +3 00000 0 00074                                                               
      BFERR      PRNTER.                                                            108  LM00116
 00773 TSX +0 07400 4 00017                                                                                             
                 BFCLOS.($ALL$,-0,EGRETS)                                           109  LM00117
 00774 CLS +0 50200 0 00074    00775 STO +0 60100 0 01111    00776 TSX +0 07400 4 00001    00777 TXH +3 00000 0 00110   
 01000 TXH +3 00000 0 01111    01001 TXH +3 00000 0 00034                                                               
                 T'O EGRETS                                                         110  LM00118
 01002 TRA +0 02000 0 00034                                                                                             
      EOFX       TEMP=TEMP+1                                                        111  LM00120
 01003 CLA +0 50000 0 00072    01004 ADD +0 40000 0 00075    01005 STO +0 60100 0 00072                                 
      EOFZ       W'R TEMP.E.0                                                       112  LM00121
 01006 CLA +0 50000 0 00072    01007 SUB +0 40200 0 00074    01010 TNZ -0 10000 0 01015                                 
                    W'R FIRST, T'O NOFILE                                           113  LM00122
 01011 NZT -0 52000 0 00061    01012 TRA +0 02000 0 01014    01013 TRA +0 02000 0 00047                                 
                    T'O INT                                                         114  LM00123
 01014 TRA +0 02000 0 00043                                                                                             
                 E'L                                                                115  LM00124
                 PR.($FINAL BLOCK$,BZ57.(DEFBC.(TEMP)),$ WORDS LONG.$)              116  LM00125
 01015 TSX +0 07400 4 00010    01016 TXH +3 00000 0 00072    01017 STO +0 60100 0 01111    01020 TSX +0 07400 4 00005   
 01021 TXH +3 00000 0 01111    01022 STO +0 60100 0 01111    01023 TSX +0 07400 4 00020    01024 TXH +3 00000 0 00116   
 01025 TXH +3 00000 0 00112    01026 TXH +3 00000 0 01111    01027 TXH +3 00000 0 00136    01030 TXH +3 00000 0 00133   
                 TEMP=ORDLIN.(LINE(LINE+BLKSIZ-1)...TEMP)                           117  LM00126
 01031 CLA +0 50000 0 00062    01032 ADD +0 40000 0 00055    01033 SUB +0 40200 0 00075    01034 SUB +0 40200 0 01035   
 01035 TXH +3 00000 0 00062    01036 STA +0 62100 0 01040    01037 TSX +0 07400 4 00016    01040 TIX +2 00072 0 00000   
 01041 STO +0 60100 0 00072                                                                                             
                 T'H FILL1, FOR TEMP=BLKSIZ-TEMP-1,-1,TEMP.L.0                      118  LM00127
 01042 CLA +0 50000 0 00055    01043 SUB +0 40200 0 00072    01044 SUB +0 40200 0 00075    01045 STO +0 60100 0 00072   
 01046 TRA +0 02000 0 01052    01047 CLS +0 50200 0 00075    01050 ADD +0 40000 0 00072    01051 STO +0 60100 0 00072   
 01052 CLA +0 50000 0 00072    01053 SUB +0 40200 0 00074    01054 TZE +0 10000 0 01056    01055 TMI -0 12000 0 01067   
      FILL1      LINE(LINE+TEMP)=FILCHR.(0)                                         119  LM00128
 01056 TSX +0 07400 4 00013    01057 TXH +3 00000 0 00074    01060 STO +0 60100 0 01111    01061 CLA +0 50000 0 00062   
 01062 ADD +0 40000 0 00072    01063 PAX +0 73400 1 00000    01064 CLA +0 50000 0 01111    01065 STO +0 60100 1 00062   
 01066 TRA +0 02000 0 01047                                                                                             
                 BFWRIT.(N3,N4,LINE(LINE+BLKSIZ-1)...BLKSIZ,BFERR)                  120  LM00129
 01067 CLA +0 50000 0 00062    01070 ADD +0 40000 0 00055    01071 SUB +0 40200 0 00075    01072 SUB +0 40200 0 01073   
 01073 TXH +3 00000 0 00062    01074 STA +0 62100 0 01100    01075 TSX +0 07400 4 00004    01076 TXH +3 00000 0 00026   
 01077 TXH +3 00000 0 00025    01100 TIX +2 00055 0 00000    01101 TXH +3 00000 0 00033                                 
                 T'O INT                                                            121  LM00130
 01102 TRA +0 02000 0 00043                                                                                             
      EOFY       PR.($LINEMARK ERROR.$)                                             122  LM00132
 01103 TSX +0 07400 4 00020    01104 TXH +3 00000 0 00120    01105 TXH +3 00000 0 00127    01106 TXH +3 00000 0 00123   
                 T'O INT                                                            123  LM00133
 01107 TRA +0 02000 0 00043                                                                                             
                 E'M                                                                124  LM00135
 01110 TSX +0 07400 4 00012                                                                                             




ORDER2   BCD 09/18/68 1112.3    2396         00000    
1                                                                                                PAGE 1     
                  
                              * SETORD.(NAME,ORDSW,CHRSIZ,ERROR)  
                              * NEWLEN=ORDLIN.(LINE(LEN)...LEN)   
                              * WORD=FILCHR.(0) 
                  
                       00011         ENTRY   SETORD        READ TABLE AND INITIALIZE
                       00226         ENTRY   ORDLIN        RE-ORDER ONE LINE  
                       00170         ENTRY   FILCHR        GET WORD OF FILL CHARACTERS    
                  
                                     EXTERN  GETMEM,SETMEM,OPEN,RDFILE,CLOSE,PRNTER,WRFLX 
                  
 M                            CALL   MACRO   NAME,LIST                                                            
                                     TSX     NAME,4   
                                     IRP     LIST     
                                     PTH     LIST     
                                     IRP  
                              CALL   END  
                  
                  
        TRANSFER VECTOR 
      00000  272563442544     GETMEM
      00001  622563442544     SETMEM
      00002  464725456060     OPEN  
      00003  512426314325     RDFILE
      00004  234346622560     CLOSE 
      00005  475145632551     PRNTER
      00006  665126436760     WRFLX 
                  
            LINKAGE DIRECTOR  
      00007  000000000000     
      00010  622563465124     
                  
      00011  0760 00 0 00016  SETORD LMTM 
      00012  0634 00 4 00154         SXA     SX4,4    
      00013 -0500 60 4 00001         CAL*    1,4
      00014  0602 00 0 00261         SLW     NAME     
      00015 -0500 60 4 00002         CAL*    2,4
      00016  0602 00 0 00262         SLW     ORDSW    
      00017 -0500 60 4 00003         CAL*    3,4
      00020  0734 00 1 00000         PAX     ,1 
      00021  0634 00 1 00200         SXA     CHSFT1,1 
      00022  0636 00 1 00214         SCA     STC,1    
      00023 -0634 00 1 00216         SXD     CHSFT2,1 
      00024  0634 00 1 00145         SXA     CHSFT3,1 
      00025 -0754 00 0 00000         ZAC  
      00026  0560 00 0 00476         LDQ     =36
      00027  0221 60 4 00003         DVP*    3,4
      00030 -0100 00 0 00156         TNZ     ERROR    
      00031 -0130 00 0 00000         XCL  
      00032  0621 00 0 00176         STA     CHPWD1   
      00033  0402 00 0 00475         SUB     =4 
      00034  0100 00 0 00036         TZE     *+2
      00035 -0500 00 0 00477         CAL     =O57     
      00036  0602 00 0 00263         SLW     NULL     
      00037  0774 00 4 00062         AXT     50,4     
      00040  0634 00 4 00264         SXA     TEMP,4   
      00041  0074 00 4 00000         TSX     GETMEM,4 
1                                                                                                PAGE 2     
                  
      00042  0602 00 0 00265         SLW     MEMBND   
      00043  0621 00 0 00061         STA     READ+4   
      00044  0400 00 0 00500         ADD     =50
      00045  0074 00 4 00001         TSX     SETMEM,4 
      00046                          CALL    OPEN(=HR,NAME,ORDER,,,IOERR)     
      00055                   READ   CALL    RDFILE(NAME,ORDER,=1(**,,50)*,TEMP,IOERR)    
      00065                          CALL    CLOSE(NAME,ORDER,IOERR)    
      00071  0502 00 0 00473         CLS     =0 
      00072  0774 00 4 00200         AXT     MXCHR,4  
      00073  0601 00 4 00473         STO     CHRTAB+MXCHR,4 
      00074  2 00001 4 00073         TIX     *-1,4,1  
      00075  0774 00 7 00000         AXT     0,7
      00076  0534 00 6 00264         LXA     TEMP,6   
      00077  1 00001 6 00100         TXI     *+1,6,1  
      00100  0535 00 5 00265         LAC     MEMBND,5 
      00101  0441 00 5 00000         LDI     0,5
      00102 -0056 00  777777         LNT     /  
      00103  1 00001 5 00105         TXI     *+2,5,1  
      00104  1 77777 6 00105         TXI     *+1,6,-1 
      00105 -0774 00 1 00001         AXC     1,1
      00106  0520 00 0 00262         ZET     ORDSW    
      00107  0020 00 0 00124         TRA     ILOOP1   
                  
      00110  0074 00 4 00172  ILOOP  TSX     GTC,4    
      00111 -0340 00 0 00263         LAS     NULL     
      00112  0020 00 0 00114         TRA     *+2
      00113  0020 00 0 00134         TRA     DONSET   
      00114  0737 00 4 00000         PAC     ,4 
      00115 -3 00000 4 00117         TXL     *+2,4,0  
      00116 -3 77577 4 00110         TXL     ILOOP,4,-MXCHR-1     
      00117  0500 00 4 00273         CLA     CHRTAB,4 
      00120  0120 00 0 00134         TPL     DONSET   
      00121  0756 00 1 00000         PCA     ,1 
      00122  0602 00 4 00273         SLW     CHRTAB,4 
      00123  1 77777 1 00110         TXI     ILOOP,1,-1     
                  
      00124 -3 00000 1 00126  ILOOP1 TXL     *+2,1,0  
      00125 -3 77577 1 00134         TXL     DONSET,1,-MXCHR-1    
      00126  0074 00 4 00172         TSX     GTC,4    
      00127 -0340 00 0 00263         LAS     NULL     
      00130  0020 00 0 00132         TRA     *+2
      00131  0020 00 0 00134         TRA     DONSET   
      00132  0602 00 1 00273         SLW     CHRTAB,1 
      00133  1 77777 1 00124         TXI     ILOOP1,1,-1    
                  
      00134 -0500 00 0 00265  DONSET CAL     MEMBND   
      00135  0600 00 0 00265         STZ     MEMBND   
      00136  0074 00 4 00001         TSX     SETMEM,4 
      00137  0520 00 0 00262         ZET     ORDSW    
      00140  0020 00 0 00143         TRA     *+3
      00141  0600 00 0 00266         STZ     FILLER   
      00142  0020 00 0 00154         TRA     SX4
      00143 -0500 00 0 00263         CAL     NULL     
      00144  0602 00 0 00273         SLW     CHRTAB   
      00145 -0765 00 0 00000  CHSFT3 LGR     ** 
      00146  0602 00 0 00266         SLW     FILLER   
1                                                                                                PAGE 3     
                  
      00147  0522 00 0 00176         XEC     CHPWD1   
      00150  0560 00 0 00266         LDQ     FILLER   
      00151  0522 00 0 00200         XEC     CHSFT1   
      00152  2 00001 7 00150         TIX     *-2,7,1  
      00153  0602 00 0 00266         SLW     FILLER   
      00154  0774 00 4 00000  SX4    AXT     **,4     
      00155  0020 00 4 00005         TRA     5,4
                  
      00156  0074 00 4 00006  ERROR  TSX     WRFLX,4  
      00157  0 00003 0 00270                 ILCHSZ,,3
                              $ILLEGAL CHRSIZ.  
      00160  0020 00 0 00166         TRA     EREXIT   
                  
      00161  0074 00 4 00005  IOERR  TSX     PRNTER,4 
      00162                          CALL    CLOSE(NAME,ORDER,*)  
                  
      00166  0522 00 4 00154  EREXIT XEC     SX4,4    
      00167  0020 60 4 00004         TRA*    4,4
1                                                                                                PAGE 4     
                  
      00170  0500 00 0 00266  FILCHR CLA     FILLER   
      00171  0020 00 4 00001         TRA     1,4
                  
      00172  2 00001 7 00177  GTC    TIX     GTCX,7,1 
      00173 -2 00001 6 00203         TNX     GTCDON,6,1     
      00174  1 77777 5 00175         TXI     *+1,5,-1 
      00175  0560 00 5 00000         LDQ     0,5
      00176  0774 00 7 00000  CHPWD1 AXT     **,7     
      00177 -0754 00 0 00000  GTCX   ZAC  
      00200 -0763 00 0 00000  CHSFT1 LGL     ** 
      00201 -0320 00 0 00501         ANA     =O377    
      00202  0020 00 4 00001         TRA     1,4
                  
      00203  0520 00 0 00265  GTCDON ZET     MEMBND   
      00204  0020 00 0 00134         TRA     DONSET   
                  
      00205 -3 77734 3 00256         TXL     OUT,3,-36
      00206  0560 00 0 00266         LDQ     FILLER   
      00207 -0754 00 0 00000         ZAC  
      00210 -0763 00 3 00000         LGL     0,3
      00211  0043 00 0 00000         OAI  
      00212  0604 00 1 00000         STI     0,1
      00213  1 00001 2 00256         TXI     OUT,2,1  
                  
      00214  0767 00 3 00000  STC    ALS     -**,3    
      00215  0043 00 0 00000         OAI  
      00216  1 00000 3 00217  CHSFT2 TXI     *+1,3,** 
      00217  3 00000 3 00225         TXH     *+6,3,0  
      00220  0604 00 1 00000         STI     0,1
      00221  1 77777 1 00222         TXI     *+1,1,-1 
      00222  1 00001 2 00223         TXI     *+1,2,1  
      00223  0441 00 0 00473         LDI     =0 
      00224 -0774 00 3 00044         AXC     36,3     
      00225  0020 00 4 00001         TRA     1,4
1                                                                                                PAGE 5     
                  
      00226  0634 00 4 00257  ORDLIN SXA     XR4,4    
      00227 -0500 00 4 00001         CAL     1,4
      00230  0737 00 1 00000         PAC     ,1 
      00231  0737 00 5 00000         PAC     ,5 
      00232 -0737 00 6 00000         PDC     ,6 
      00233  0322 00 0 00502         ERA     =O200000000000 
      00234 -0320 00 0 00504         ANA     =O700000000000 
      00235 -0100 00 0 00240         TNZ     *+3
      00236 -0500 00 6 00000         CAL     0,6
      00237  0020 00 0 00241         TRA     *+2
      00240  0756 00 6 00000         PCA     ,6 
      00241  0734 00 6 00000         PAX     ,6 
      00242  1 00001 6 00243         TXI     *+1,6,1  
      00243  1 00001 5 00244         TXI     *+1,5,1  
      00244  0774 00 7 00000         AXT     0,7
      00245  0441 00 0 00473         LDI     =0 
      00246 -0774 00 3 00044         AXC     36,3     
      00247  0774 00 2 00000         AXT     0,2
                  
      00250  0074 00 4 00172  LOOP   TSX     GTC,4    
      00251  0737 00 4 00000         PAC     ,4 
      00252  0500 00 4 00273         CLA     CHRTAB,4 
      00253 -0120 00 0 00250         TMI     LOOP     
      00254  0074 00 4 00214         TSX     STC,4    
      00255  0020 00 0 00250         TRA     LOOP     
                  
      00256  0754 00 2 00000  OUT    PXA     ,2 
      00257  0774 00 4 00000  XR4    AXT     **,4     
      00260  0020 00 4 00002         TRA     2,4
1                                                                                                PAGE 6     
                  
      00261  0 00000 0 00000  NAME  
      00262  0 00000 0 00000  ORDSW 
      00263  0 00000 0 00000  NULL  
      00264  0 00000 0 00000  TEMP  
      00265  0 00000 0 00000  MEMBND
                       00200  MXCHR  EQU     128
      00266  0 00000 0 00000  FILLER
      00267  604651242551     ORDER  BCI     1, ORDER 
      00270  314343252721     ILCHSZ BCI     3,ILLEGAL CHRSIZ.    
      00271  436023305162     
      00272  317133606060     
      00273                   CHRTAB BSS     MXCHR    
                  
                                     END  
                  
        LITERALS  
      00473  000000000000     
      00474  000000000001     
      00475  000000000004     
      00476  000000000044     
      00477  000000000057     
      00500  000000000062     
      00501  000000000377     
      00502  200000000000     
      00503  516060606060     
      00504  700000000000     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        505 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        172    GTC   110,  126,  250
        256    OUT   205,  213
        214    STC    22,  254
        154    SX4    12,  142,  166
        257    XR4   226
        177   GTCX   172
        250   LOOP   253,  255
        261   NAME    14,   50,   56,   66,  163
        263   NULL    36,  111,  127,  143
          2   OPEN    46
         55   READ    43
        264   TEMP    40,   63,   76
          4  CLOSE    65,  162
        156  ERROR    30
        110  ILOOP   116,  123
        161  IOERR    54,   64,   70
        200  MXCHR    72,   73,  116,  125,  266,  273
        267  ORDER    51,   57,   67,  164
        262  ORDSW    16,  106,  137
          6  WRFLX   156
        176 CHPWD1    32,  147
        273 CHRTAB    73,  117,  122,  132,  144,  252
        200 CHSFT1    21,  151
        216 CHSFT2    23
        145 CHSFT3    24
        134 DONSET   113,  120,  125,  131,  204
        166 EREXIT   160
        170 FILCHR     0
        266 FILLER   141,  146,  150,  153,  170,  206
          0 GETMEM    41
        203 GTCDON   173
        270 ILCHSZ   157
        124 ILOOP1   107,  133
        265 MEMBND    42,  100,  134,  135,  203
        226 ORDLIN     0
          5 PRNTER   161
          3 RDFILE    55
          1 SETMEM    45,  136
         11 SETORD     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




OUTPUT   BCD 09/20/68 0220.4    5260         00000    
1       RQUEST COMMAND FOR CTSS                                                                  PAGE 1     
                  
                              * MODIFIED FOR LISTF '*' CONVENTION 
                              * JIM BIXBY      7/7/67 
                  
                  
        TRANSFER VECTOR 
      00000  452144216242     NAMASK
                  
      00001  0074 00 4 00513         TSX     FERRTN,4      SET THE I/O ERROR RETURN 
      00002  0 00000 0 00306         PZE     ERR
      00003  0074 00 4 00473         TSX     WHOAMI,4      FIND WHO IS DOING THE RQUEST   
      00004  3 00002 0 00374         PTH     PROBN,,2 
      00005  0074 00 4 00505         TSX     GETCOM,4      GET THE RQUEST OPTION    
      00006  0 00000 0 00001         PZE     1             FROM THE FIRST ARGUMENT  
      00007  0602 00 0 00354         SLW     OPTRQ         ..     
      00010  0602 00 0 00360         SLW     OUT           AND PUT RQUEST IN OUTPUT FILE  
      00011  0774 00 1 00015         AXT     OPTSIZ,1      SET UP FOR SEARCH FOR OPTION   
      00012 -0340 00 1 00427  CKOPT  LAS     OPTION+OPTSIZ,1 CHECK AGAINST KOSHER OPTIONS 
      00013  0020 00 0 00015         TRA     *+2           NOT THIS ONE 
      00014  0020 00 0 00022         TRA     OPTFND        FOUND--
      00015  2 00001 1 00012         TIX     CKOPT,1,1     CHECK THE ENTIRE TABLE   
                  
                                             HERE IF ILLEGAL OPTION GIVEN***************  
                  
      00016  0074 00 4 00506         TSX     WRFLX,4       BAD OPTION--SAY SO 
      00017  0 00004 0 00354         PZE     OPTRQ,,4 
      00020  0074 00 4 00507  FINI   TSX     CHNCOM,4      AND EXIT     
      00021  3 00000 0 00514         PTH     =0            ..     
                  
                                             HERE IF OPTION FOUND IN LEGAL SET
                  
      00022  0074 00 4 00476  OPTFND TSX     FSTATE,4      CHECK FOR 'OUTPUT RQUEST'
      00023  3 00000 0 00464         PTH     OUTPUT   
      00024  3 00000 0 00465         PTH     RQUEST   
      00025  3 00002 0 00410         PTH     A,,2     
      00026  3 00000 0 00317         PTH     NOFILE        ERROR RETURN 
      00027  3 00000 0 00463         PTH     N             ERROR CODE   
      00030  0500 00 0 00411         CLA     A+1           GET MODE OF FILE   
      00031  0100 00 0 00040         TZE     ONWARD        PROCEED IF MODE ZERO     
      00032 -0120 00 0 00314         TMI     LNKED         ERROR IF LINKED    
      00033  0322 00 0 00515         ERA     =1            SEE IF TEMPORARY   
      00034 -0100 00 0 00326         TNZ     ERROR         NOT TEMP. MUST DO SUMTIN 
      00035  0074 00 4 00475  DLETIT TSX     DELFIL,4      DELETE THE OLD TEMP. 'OUTPUT RQUEST' 
      00036  3 00000 0 00464         PTH     OUTPUT   
      00037  3 00000 0 00465         PTH     RQUEST   
1       RQUEST COMMAND FOR CTSS                                                                  PAGE 2     
                  
                  
                  
                                             SET UP THE BUFFERS FOR WRITING 'OUTPUT RQUEST'     
                                             AND READING THE UFD. ALSO LOAD THE UFD INTO UPPER CORE   
                  
                  
      00040  0074 00 4 00476  ONWARD TSX     FSTATE,4      FIND SIZE OF UFD   
      00041  3 00000 0 00461         PTH     UFD
      00042  3 00000 0 00462         PTH     FILE     
      00043  3 00001 0 00410         PTH     A,,1     
      00044  0500 00 0 00410         CLA     A             FIND NUMBER OF WORDS     
      00045  0402 00 0 00517         SUB     =3            TO BE READ FROM U.F.D.   
      00046  0601 00 0 00453         STO     UFDSIZ   
      00047  0100 00 0 00303         TZE     EMPTY         IF NO ENTRIES IN UFD     
      00050  0767 00 0 00022         ALS     18            PUT SIZE IN DECREMENT    
      00051  0622 00 0 00077         STD     UFDS          AND STORE IN READ INSTRUCTION  
      00052  0074 00 4 00510         TSX     GETMEM,4      EXGET CURRENT MEMORY BOUND     
      00053  0621 00 0 00116         STA     BUFF          AND SET UP BUFFER ADDRESSES    
      00054  0400 00 0 00454         ADD     BUFSIZ   
      00055  0621 00 0 00077         STA     UFDS           ORIGIN FOR LOADING UFD  
      00056  0621 00 0 00455         STA     NAME1         POINTER TO THE NAME1'S OF THE WORLD  
      00057  0400 00 0 00515         ADD     =1            AND ALSO FOR THE   
      00060  0621 00 0 00456         STA     NAME2         NAME2'S EVERYWHERE 
      00061  0400 00 0 00453         ADD     UFDSIZ        MAKE ROOM FOR THE ENTIRE UFD   
      00062  0074 00 4 00511         TSX     SETMEM,4      TACK DOWN MEMORY HERE    
      00063  0534 00 4 00453         LXA     UFDSIZ,4      USE UFDSIZ FOR A CHECK ON THR  
      00064 -0636 00 4 00225         SCD     CKLOOP+1,4    UFD SEARCH LOOP    
                  
                  
                                             OPEN THE UFD, LOAD IT, AND CLOSE IT    
                  
                  
      00065  0074 00 4 00502         TSX     OPEN,4   
      00066  3 00000 0 00457         PTH     R  
      00067  3 00000 0 00461         PTH     UFD
      00070  3 00000 0 00462         PTH     FILE     
      00071  3 00000 0 00514         PTH     =0 
      00072  3 00000 0 00514         PTH     =0 
      00073  0074 00 4 00503         TSX     RDFILE,4 
      00074  3 00000 0 00461         PTH     UFD
      00075  3 00000 0 00462         PTH     FILE     
      00076  3 00000 0 00520         PTH     =4            SKIP ALLOTMENTS    
      00077  3 00000 0 00000  UFDS   PTH     **,,**   
      00100  3 00000 0 00102         PTH     *+2           IGNORE END OF FILE 
      00101  3 00000 0 00463         PTH     N  
      00102  0074 00 4 00500         TSX     CLOSE,4       AND CLOSE    
      00103  3 00000 0 00461         PTH     UFD
      00104  3 00000 0 00462         PTH     FILE     
      00105  0074 00 4 00502         TSX     OPEN,4        OPEN 'OUTPUT RQUEST' FOR WRITING     
      00106  3 00000 0 00460         PTH     W  
      00107  3 00000 0 00464         PTH     OUTPUT   
      00110  3 00000 0 00465         PTH     RQUEST   
      00111  3 00000 0 00514         PTH     =0            IN ZERO MODE 
      00112  3 00000 0 00516         PTH     =2            ON THE DISK  
      00113  0074 00 4 00501         TSX     BUFFER,4      ASSIGN A BUFFER FOR WRITING    
1       RQUEST COMMAND FOR CTSS                                                                  PAGE 3     
                  
      00114  3 00000 0 00464         PTH     OUTPUT   
      00115  3 00000 0 00465         PTH     RQUEST   
      00116  3 00660 0 00000  BUFF   PTH     **,,432  
      00117  0774 00 2 00000         AXT     0,2
1       RQUEST COMMAND FOR CTSS                                                                  PAGE 4     
                  
                  
                  
                                             INITIALIZE, AND FIND THE NEXT ARGUMENT SET   
                  
                  
                  
      00120  0500 00 0 00127  NXTARG CLA     ARGSET        UPDATE THE ARG. COUNTER TO NEXT SET  
      00121  0400 00 0 00516         ADD     =2 
      00122  0601 00 0 00127         STO     ARGSET   
      00123  0400 00 0 00515         ADD     =1 
      00124  0621 00 0 00135         STA     ARG2     
      00125  0600 00 0 00405         STZ     COUNT    
      00126  0074 00 4 00505         TSX     GETCOM,4      GET THE FIRST ARG, THIS SET    
      00127  0 00000 0 00000  ARGSET PZE     ** 
      00130 -0340 00 0 00467         LAS     FENCE         IS IT A FENCE--    
      00131  0020 00 0 00133         TRA     *+2           NOPE   
      00132  0020 00 0 00262         TRA     CKFINI        YES--FLUSH OUT OUTPT MESS.     
      00133  0602 00 0 00401         SLW     N1 
      00134  0074 00 4 00505         TSX     GETCOM,4      GET SECOND ARG     
      00135  0 00000 0 00000  ARG2   PZE     ** 
      00136 -0340 00 0 00467         LAS     FENCE         IS IT A FENCE
      00137  0020 00 0 00145         TRA     *+6
      00140  0020 00 0 00142         TRA     *+2
      00141  0020 00 0 00145         TRA     *+4
      00142  0500 00 0 00515         CLA     =1            YES--SET STOP FLAG 
      00143  0601 00 0 00466         STO     STFLAG   
      00144 -0500 00 0 00546         CAL     =H     *      MAKE IT A STAR     
      00145  0602 00 0 00402         SLW     N2            AND STORE    
      00146  0074 00 4 00000         TSX     $NAMASK,4     GET THE ARGUMENT MASKS   
      00147  3 00000 0 00401         PTH     N1 
      00150  0602 00 0 00470         SLW     MASK1    
      00151  0074 00 4 00000         TSX     $NAMASK,4
      00152  3 00000 0 00402         PTH     N2 
      00153  0602 00 0 00471         SLW     MASK2    
1       RQUEST COMMAND FOR CTSS                                                                  PAGE 5     
                  
                  
                  
                                             SEARCH THE UFD FOR THE CHOSEN ENTRIES AND    
                                             PUT THEM INTO 'OUTPUT RQUEST'    
                  
                  
      00154  0774 00 1 00000         AXT     0,1           START AT TOP OF UFD
      00155 -0500 60 0 00455  SEARCH CAL*    NAME1         SEE IF N1 AND N2 ARE ZERO
      00156 -0501 60 0 00456         ORA*    NAME2    
      00157  0100 00 0 00224         TZE     CKLOOP        YES--SKIP THIS ENTRY     
      00160 -0500 60 0 00455         CAL*    NAME1         SEE IF NAME1 FITS MASK   
      00161  0322 00 0 00401         ERA     N1 
      00162 -0320 00 0 00470         ANA     MASK1    
      00163 -0100 00 0 00224         TNZ     CKLOOP   
      00164 -0500 60 0 00456         CAL*    NAME2         YES--CHECK NAME2   
      00165  0322 00 0 00402         ERA     N2 
      00166 -0320 00 0 00471         ANA     MASK2    
      00167 -0100 00 0 00224         TNZ     CKLOOP   
                  
                  
                                             HERE IF WE WANT TO RQUEST THIS ENTRY   
                  
                  
      00170 -0500 60 0 00455         CAL*    NAME1         LOAD NAME1,NAME2 INTO RQUEST   
      00171  0560 00 0 00547         LDQ     =H 
      00172 -0765 00 0 00022         LGR     18 
      00173 -0600 00 2 00362         STQ     OUT+2,2  
      00174 -0501 00 0 00543         ORA     =H   000 
      00175  0602 00 2 00361         SLW     OUT+1,2  
      00176 -0500 60 0 00456         CAL*    NAME2    
      00177  0602 00 2 00363         SLW     OUT+3,2  
      00200  1 77775 2 00201         TXI     *+1,2,-3      MOVE TO NEXT MESSAGE SLOT
      00201  3 77767 2 00221         TXH     ADDEM,2,-9    AND ADD IF SLOTS NOT FULL
      00202  0074 00 4 00504  WRITE  TSX     WRWAIT,4      WRITE THE RQUEST   
      00203  3 00000 0 00464         PTH     OUTPUT   
      00204  3 00000 0 00465         PTH     RQUEST   
      00205  3 00000 0 00514         PTH     =0            ON THE END OF THE FILE   
      00206  3 00016 0 00360         PTH     OUT,,14  
      00207  3 00000 0 00213         PTH     *+4
      00210  3 00000 0 00463         PTH     N  
      00211  0754 00 2 00000         PXA     ,2            GET THE SLOT 
      00212  0322 00 0 00515         ERA     =1            ONE IF WERE FININSHING UP
      00213  0100 00 0 00265         TZE     FINISH   
      00214  0774 00 2 00011         AXT     9,2           BLANK OUT SLOTS    
      00215 -0500 00 0 00547         CAL     =H 
      00216  0602 00 2 00372         SLW     OUT+10,2 
      00217  2 00001 2 00216         TIX     *-1,2,1  
      00220  0774 00 2 00000         AXT     0,2           AND RESET COUNTER  
      00221  0500 00 0 00405  ADDEM  CLA     COUNT    
      00222  0400 00 0 00515         ADD     =1            UPDATE COUND OF ENTRIES FOUND  
      00223  0601 00 0 00405         STO     COUNT    
      00224  1 77771 1 00225  CKLOOP TXI     *+1,1,-7      MOVE DOWN TABLE    
      00225  3 00000 1 00155         TXH     SEARCH,1,**   AND KEEP GOING     
1       RQUEST COMMAND FOR CTSS                                                                  PAGE 6     
                  
                  
                                             HERE WHEN SCAN OF UFD FOR THIS ARG IS FINISHED     
                  
                  
      00226  0500 00 0 00405         CLA     COUNT         FIND WHICH MESSAGE WE SHOULD PRINT   
      00227 -0100 00 0 00233         TNZ     PRSOME        FOUND SOME-- SAY SO
      00230  0074 00 4 00506         TSX     WRFLX,4       FOUND NONE--SAY SO 
      00231  0 00005 0 00376         PZE     NONE,,5  
      00232  0020 00 0 00260         TRA     CKFLAG        SEE IF MORE WORK TO DO   
      00233  0560 00 0 00405  PRSOME LDQ     COUNT         CONVERT COUNT TO BCD W/ LEAD. ZEROS  
      00234  0774 00 4 00044         AXT     36,4          SEE DEFBC, BZEL IN FOREGROUND LIB.   
      00235  0600 00 0 00405         STZ     COUNT    
      00236 -0754 00 0 00000  BC     ZAC  
      00237  0221 00 0 00521         DVP     =10
      00240  0767 00 4 00044         ALS     36,4     
      00241 -0602 00 0 00405         ORS     COUNT    
      00242  2 00006 4 00236         TIX     BC,4,6   
      00243  0560 00 0 00405         LDQ     COUNT    
      00244  0774 00 4 00044         AXT     36,4     
      00245 -0754 00 0 00000  BA     ZAC  
      00246 -0763 00 0 00006         LGL     6  
      00247  0100 00 0 00252         TZE     BB 
      00250 -0340 00 0 00522         LAS     =H00000  
      00251  0020 00 0 00253         TRA     *+2
      00252  2 00006 4 00245  BB     TIX     BA,4,6   
      00253 -0501 00 0 00545         ORA     =H     0 
      00254 -0765 00 4 00052         LGR     42,4     
      00255 -0600 00 0 00405         STQ     COUNT    
      00256  0074 00 4 00506         TSX     WRFLX,4       AND WRITE THE MESSAGE    
      00257  3 00005 0 00401         PTH     N1,,5    
                  
                  
      00260  0500 00 0 00466  CKFLAG CLA     STFLAG        SEE IF MORE ARGS TO PROCESS    
      00261  0100 00 0 00120         TZE     NXTARG        YUPIIBACK WE GO    
      00262 -3 00000 2 00265  CKFINI TXL     FINISH,2,0    FINISH IF IR2=0    
      00263  0774 00 2 00001         AXT     1,2           SET FLAG     
      00264  0020 00 0 00202         TRA     WRITE         AND FLUSH REMAINING RQUESTS    
      00265  0074 00 4 00500  FINISH TSX     CLOSE,4       NOPE--FINISH UP    
      00266  3 00000 0 00464         PTH     OUTPUT   
      00267  3 00000 0 00465         PTH     RQUEST   
      00270  0074 00 4 00476         TSX     FSTATE,4      CHECK SIZE OF 'OUTPUT RQUEST'  
      00271  3 00000 0 00464         PTH     OUTPUT   
      00272  3 00000 0 00465         PTH     RQUEST   
      00273  3 00001 0 00410         PTH     A,,1     
      00274  0500 00 0 00410         CLA     A             SEE IF ZERO LENGTH 
      00275 -0100 00 0 00020         TNZ     FINI          NOPE--ALL DONE     
      00276  0074 00 4 00475         TSX     DELFIL,4      YES--DELETE THE BASTARD  
      00277  3 00000 0 00464         PTH     OUTPUT   
      00300  3 00000 0 00465         PTH     RQUEST   
      00301  3 00000 0 00020         PTH     FINI          DONT EVEN BOTHER WITH ERRORS HERE    
      00302  0020 00 0 00020         TRA     FINI     
1       RQUEST COMMAND FOR CTSS                                                                  PAGE 7     
                  
                  
                  
                                             ERROR ROUTINES 
                  
                  
      00303  0074 00 4 00506  EMPTY  TSX     WRFLX,4       IF UFD IS EMPTY    
      00304  0 00002 0 00406         PZE     NOFLS,,2 
      00305  0020 00 0 00311         TRA     CLOSAL   
                  
                  
      00306 -0500 00 0 00537  ERR    CAL     =HPRNTER      CHAIN TO 'PRNTER' IF ERROR     
      00307  0560 00 0 00467         LDQ     FENCE    
      00310  0101 00 0 00535         TIA     =HNEXCOM 
      00311  0074 00 4 00500  CLOSAL TSX     CLOSE,4       CLOSE 'EM ALL OUT  
      00312  3 00000 0 00544         PTH     =H   ALL 
      00313  0020 00 0 00020         TRA     FINI     
                  
                  
      00314  0074 00 4 00506  LNKED  TSX     WRFLX,4       HERE IF 'OUTPUT RQUEST' IS LINKED    
      00315  0 00007 0 00427         PZE     LNKMES,,7     SAY SO 
      00316  0020 00 0 00311         TRA     CLOSAL   
                  
                  
      00317  0500 00 0 00463  NOFILE CLA     N             IF FSTATE ERROR ON 'OUTPUT RQUEST'   
      00320  0402 00 0 00517         SUB     =3            CHECK FOR ERROR CODE 3   
      00321  0100 00 0 00040         TZE     ONWARD        ALL RIGHT--THIS IS GROOOOVY    
      00322  0020 00 0 00306         TRA     ERR           WELL, YOU CANT WILL 'EM ALL    
                  
      00323  0074 00 4 00506  NUTTIN TSX     WRFLX,4       SAY 'NOTHING DONE' 
      00324  0 00002 0 00451         PZE     NUTMES,,2
      00325  0020 00 0 00311         TRA     CLOSAL        AND EXIT     
                  
                                             HERE IF OLD 'OUTPUT RQUEST' NOT  MODE  
                                             ZERO OR MODE 1 
                  
                  
      00326  0500 00 0 00411  ERROR  CLA     A+1           GET ERROR CODE     
      00327 -0765 00 0 00006         LGR     6             PUT IN MQ    
      00330  0767 00 0 00003         ALS     3             SPREAD OCTAL IT    
      00331 -0763 00 0 00003         LGL     3  
      00332  0767 00 0 00003         ALS     3  
      00333 -0763 00 0 00003         LGL     3  
      00334 -0501 00 0 00542         ORA     =O605757000000 AND PUT IN SOME NULLS   
      00335  0602 00 0 00442         SLW     MODE     
      00336  0074 00 4 00512         TSX     WRFLXA,4      WRITE THE DELETE MESSAGE 
      00337  0 00013 0 00436         PZE     DELMES,,11     
      00340  0074 00 4 00477         TSX     RDFLXA,4      READ THE RESPONSE  
      00341  0 00006 0 00410         PZE     A,,6     
      00342 -0500 00 0 00410         CAL     A             CHECK FOR 'YES'    
      00343  0322 00 0 00472         ERA     YES           ..     
      00344 -0100 00 0 00323         TNZ     NUTTIN   
      00345  0074 00 4 00474         TSX     CHFILE,4      PUT THE FILE IN MODE ZERO FOR DELETION     
      00346  3 00000 0 00464         PTH     OUTPUT   
      00347  3 00000 0 00465         PTH     RQUEST   
      00350  3 00000 0 00514         PTH     =0 
1       RQUEST COMMAND FOR CTSS                                                                  PAGE 8     
                  
      00351  3 00000 0 00534         PTH     =-0
      00352  3 00000 0 00534         PTH     =-0
      00353  0020 00 0 00035         TRA     DLETIT        GO KILL THE OLD COPY     
                  
                                             * * * * * * * * * * * * * * *    
                                             *  STORAGE AND CONSTANTS    *    
                                             * * * * * * * * * * * * * * *    
                  
                  
      00354  000000000000     OPTRQ  BCI     4,000000 IS NOT A REQUEST  
      00355  603162604546     
      00356  636021605125     
      00357  506425626360     
      00360  000000000000     OUT    BCI     6,000000 
      00361  606060606060     
      00362  606060606060     
      00363  606060606060     
      00364  606060606060     
      00365  606060606060     
      00366  606060606060            BCI     6, 
      00367  606060606060     
      00370  606060606060     
      00371  606060606060     
      00372  606060606060     
      00373  606060606060     
      00374                   PROBN  BSS     1  
      00375                   PROGN  BSS     1  
      00376  452144256260     NONE   BCI     2,NAMES NOT FO 
      00377  454663602646     
      00400 -244524355557            OCT     644524355557  'UND' C.R.   
      00401                   N1     BSS     1  
      00402                   N2     BSS     1  
      00403  602346644563            BCI     1, COUNT 
      00404 -201360575757            OCT     601360575757  ' = '  
      00405                   COUNT  BSS     1  
      00406  643326332433     NOFLS  BCI     2,U.F.D. EMPTY 
      00407  602544476370     
      00410                   A      BSS     2  
                  
                  
                                             OPTION TABLE FOR RQUESTS   
                  
                  
      00412  604751314563     OPTION BCI     1, PRINT 
      00413  244764452330            BCI     1,DPUNCH 
      00414  074764452330            BCI     1,7PUNCH 
      00415  224764452330            BCI     1,BPUNCH 
      00416  242543256325            BCI     1,DELETE 
      00417  475145242543            BCI     1,PRNDEL 
      00420  244764242543            BCI     1,DPUDEL 
      00421  224764242543            BCI     1,BPUDEL 
      00422  074764242543            BCI     1,7PUDEL 
      00423  626247514563            BCI     1,SSPRNT 
      00424  626247512443            BCI     1,SSPRDL 
      00425  606047434663            BCI     1,  PLOT 
      00426  474346242543            BCI     1,PLODEL 
1       RQUEST COMMAND FOR CTSS                                                                  PAGE 9     
                  
                       00015  OPTSIZ SYN     *-OPTION      SIZE OF OPTION TABLE     
      00427  263143256014     LNKMES BCI     7,FILE 'OUTPUT RQUEST' LINKED MODE     
      00430  466463476463     
      00431  605150642562     
      00432  631460433145     
      00433  422524604446     
      00434  242560606060     
      00435  606060606060     
      00436  464324602631     DELMES BCI     4,OLD FILE 'OUTPUT RQUEST' 
      00437  432560144664     
      00440  634764636051     
      00441  506425626314     
      00442  000000000000     MODE   BCI     7,000000 MODE. DO YOU WANT TO DELETE IT--    
      00443  604446242533     
      00444  602446607046     
      00445  646066214563     
      00446  606346602425     
      00447  432563256031     
      00450  634040606060     
      00451  454663303145     NUTMES BCI     2,NOTHING DONE 
      00452  276024464525     
      00453                   UFDSIZ BSS     1  
      00454  0 00000 0 00660  BUFSIZ PZE     432
      00455  0 00000 1 00000  NAME1  PZE     **,1     
      00456  0 00000 1 00000  NAME2  PZE     **,1     
      00457  516060606060     R      BCI     1,R
      00460  666060606060     W      BCI     1,W
      00461  643326332433     UFD    BCI     1,U.F.D. 
      00462  742631432534     FILE   BCI     1,(FILE) 
      00463                   N      BSS     1  
      00464  466463476463     OUTPUT BCI     1,OUTPUT 
      00465  515064256263     RQUEST BCI     1,RQUEST 
      00466  0 00000 0 00000  STFLAG PZE     0  
      00467 -377777777777     FENCE  OCT     777777777777   
      00470                   MASK1  BSS     1  
      00471                   MASK2  BSS     1  
      00472 -302562556060     YES    OCT     702562556060   
                  
                  
                                             * * * * *
                                             * TIA'S *
                                             * * * * *
                  
      00473  0101 00 0 00551  WHOAMI TIA     =HWHOAMI 
      00474  0101 00 0 00524  CHFILE TIA     =HCHFILE 
      00475  0101 00 0 00527  DELFIL TIA     =HDELFIL 
      00476  0101 00 0 00531  FSTATE TIA     =HFSTATE 
      00477  0101 00 0 00541  RDFLXA TIA     =HRDFLXA 
      00500  0101 00 0 00526  CLOSE  TIA     =HCLOSE  
      00501  0101 00 0 00523  BUFFER TIA     =HBUFFER 
      00502  0101 00 0 00536  OPEN   TIA     =HOPEN   
      00503  0101 00 0 00540  RDFILE TIA     =HRDFILE 
      00504  0101 00 0 00554  WRWAIT TIA     =HWRWAIT 
      00505  0101 00 0 00532  GETCOM TIA     =HGETCOM 
      00506  0101 00 0 00553  WRFLX  TIA     =HWRFLX  
      00507  0101 00 0 00525  CHNCOM TIA     =HCHNCOM 
1       RQUEST COMMAND FOR CTSS                                                                  PAGE 10    
                  
      00510  0101 00 0 00533  GETMEM TIA     =HGETMEM 
      00511  0101 00 0 00550  SETMEM TIA     =HSETMEM 
      00512  0101 00 0 00552  WRFLXA TIA     =HWRFLXA 
      00513  0101 00 0 00530  FERRTN TIA     =HFERRTN 
                                     END  
                  
        LITERALS  
      00514  000000000000     
      00515  000000000001     
      00516  000000000002     
      00517  000000000003     
      00520  000000000004     
      00521  000000000012     
      00522  000000000060     
      00523  226426262551     
      00524  233026314325     
      00525  233045234644     
      00526  234346622560     
      00527  242543263143     
      00530  262551516345     
      00531  266263216325     
      00532  272563234644     
      00533  272563442544     
      00534  400000000000     
      00535  452567234644     
      00536  464725456060     
      00537  475145632551     
      00540  512426314325     
      00541  512426436721     
      00542  605757000000     
      00543  606060000000     
      00544  606060214343     
      00545  606060606000     
      00546  606060606054     
      00547  606060606060     
      00550  622563442544     
      00551  663046214431     
      00552  665126436721     
      00553  665126436760     
      00554  665166213163     
1       RQUEST COMMAND FOR CTSS                                                                  PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        555 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        410      A    25,   30,   43,   44,  273,  274,  326,  341,  342
        463      N    27,  101,  210,  317
        457      R    66
        460      W   106
        245     BA   252
        252     BB   247
        236     BC   242
        401     N1   133,  147,  161,  257
        402     N2   145,  152,  165
        306    ERR     2,  322
        360    OUT    10,  173,  175,  177,  206,  216
        461    UFD    41,   67,   74,  103
        472    YES   343
        135   ARG2   124
        116   BUFF    53
        462   FILE    42,   70,   75,  104
         20   FINI   275,  301,  302,  313
        442   MODE   335
        376   NONE   231
        502   OPEN    65,  105
         77   UFDS    51,   55
        221  ADDEM   201
         12  CKOPT    15
        500  CLOSE   102,  265,  311
        405  COUNT   125,  221,  223,  226,  233,  235,  241,  243,  255
        303  EMPTY    47
        326  ERROR    34
        467  FENCE   130,  136,  307
        314  LNKED    32
        470  MASK1   150,  162
        471  MASK2   153,  166
        455  NAME1    56,  155,  160,  170
        456  NAME2    60,  156,  164,  176
        406  NOFLS   304
        354  OPTRQ     7,   17
        374  PROBN     4
        375  PROGN      
        506  WRFLX    16,  230,  256,  303,  314,  323
        202  WRITE   264
        127 ARGSET   120,  122
        501 BUFFER   113
        454 BUFSIZ    54
        474 CHFILE   345
        507 CHNCOM    20
        262 CKFINI   132
        260 CKFLAG   232
        224 CKLOOP    64,  157,  163,  167
        311 CLOSAL   305,  316,  325
        475 DELFIL    35,  276
        436 DELMES   337
         35 DLETIT   353
1       RQUEST COMMAND FOR CTSS                                                                  PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        513 FERRTN     1
        265 FINISH   213,  262
        476 FSTATE    22,   40,  270
        505 GETCOM     5,  126,  134
        510 GETMEM    52
        427 LNKMES   315
          0 NAMASK   146,  151
        317 NOFILE    26
        451 NUTMES   324
        323 NUTTIN   344
        120 NXTARG   261
         40 ONWARD    31,  321
         22 OPTFND    14
        412 OPTION    12,  427
         15 OPTSIZ    11,   12,  427
        464 OUTPUT    23,   36,  107,  114,  203,  266,  271,  277,  346
        233 PRSOME   227
        503 RDFILE    73
        477 RDFLXA   340
        465 RQUEST    24,   37,  110,  115,  204,  267,  272,  300,  347
        155 SEARCH   225
        511 SETMEM    62
        466 STFLAG   143,  260
        453 UFDSIZ    46,   61,   63
        473 WHOAMI     3
        512 WRFLXA   336
        504 WRWAIT   202
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




PCHMFD   BCD 09/20/68 0220.5    3838         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE     MFD   MAD            02/15/68    1603.8
-                 
                      PROGRAM TO PUNCH OUT A DECK OF CARDS REPRESENTING                                LM00001    
                      THE CONTENTS OF THE MASTER FILE DIRECTORY.  THIS                                 LM00002    
                      PROGRAM IS INTENDED FOR USE WITH THE MFD SORTING                                 LM00003    
                      PROGRAM RUN AS A NON-STANDARD FMS JOB.                                           LM00004    
                           D.R. WIDRIG  OCTOBER 1966                                                   LM00005    
                                                                                                       LM00006    
                      LOADING INSTRUCTIONS                                                             LM00007    
                           MAD MFD (LIST)                                                              LM00008    
                           FAP GETBUF (LIST)                                                           LM00009    
                           LAED NCLOAD MFD GETBUF (SQZ) (SRCH) XLIBE                                   LM00010    
                           SAVE PCHMFD                                                                 LM00011    
                           R MFD                                                                       LM00012    
                           RQUEST DPUNCH MFD PUNCH                                                     LM00013    
                                                                                                       LM00014    
                  NORMAL MODE IS INTEGER                                                          *001 LM00015    
                  DIMENSION BUFF1(0),BUFF2(0),BUFF3(0),BUFF4(0),BUFF5(0)                          *002 LM00016    
                  DIMENSION LINE(14),UFD(7),V(2)                                                  *003 LM00017    
                                                                                                       LM00018    
                  VECTOR VALUES MZE = -0                                                          *004 LM00019    
                  VECTOR VALUES COUNT = 0                                                         *005 LM00020    
                  VECTOR VALUES MFD = $M.F.D.$                                                    *006 LM00021    
                  VECTOR VALUES FILE = $(FILE)$                                                   *007 LM00022    
                  VECTOR VALUES PUNCH = $ PUNCH$                                                  *008 LM00023    
                  VECTOR VALUES LINE(1) ... LINE(14) = $      $                                   *009 LM00024    
                                                                                                       LM00025    
                      GET BUFFER AREAS                                                                 LM00026    
                                                                                                       LM00027    
                  GETBUF.(BUFF1,432)                                                              *010 LM00028    
                  GETBUF.(BUFF2,432)                                                              *011 LM00029    
                  GETBUF.(BUFF3,432)                                                              *012 LM00030    
                  GETBUF.(BUFF4,432)                                                              *013 LM00031    
                  GETBUF.(BUFF5,432)                                                              *014 LM00032    
                                                                                                       LM00033    
                      PREPARE MFD FOR READING AND OUTPUT FILE FOR WRITING                              LM00034    
                                                                                                       LM00035    
                  ATTNAM.(V(2)...2)                                                               *015 LM00036    
                  ATTACH.(MFD,FILE)                                                               *016 LM00037    
                  BFOPEN.($R$,MFD,FILE,BUFF1(BUFF1+432),BUFF2(BUFF2+432),                         *017 LM00038    
                1      MZE,ERR1)                                                                  *017 LM00039    
                  ATTACH.(V(2),V(1))                                                              *018 LM00040    
                                                                                                       LM00041    
                  BFOPEN.($W$,MFD,PUNCH,BUFF3(BUFF3+432),BUFF4(BUFF4+432),                        *019 LM00042    
                1      BUFF5(BUFF5+432),ERR1)                                                     *019 LM00043    
                  BFREAD.(MFD,FILE,UFD(3)...3,REOF,EOFCT,ERR1)                                    *020 LM00044    
                                                                                                       LM00045    
                      SELECT AN ENTRY FROM THE MFD AND CHECK IT                                        LM00046    
                                                                                                       LM00047    
      READM       BFREAD.(MFD,FILE,UFD(7)...7,REOF,EOFCT,ERR1)                                    *021 LM00048    
                  WHENEVER ((UFD(7).V.UFD(6)) .E. 0), TRANSFER TO READM                           *022 LM00049    
                                                                                                       LM00050    
                      LEGITIMATE ENTRY, ADD OUTPUT LINE                                                LM00051    
                                                                                                       LM00052    
                  COUNT = COUNT + 1                                                               *023 LM00053    
                  LINE(14) = LJUST.(UFD(7))                                                       *024 LM00054    
                  LINE(13) = UFD(6)                                                               *025 LM00055    
                  BFWRIT.(MFD,PUNCH,LINE(14)...14,ERR1)                                           *026 LM00056    
                  TRANSFER TO READM                                                               *027 LM00057    
                                                                                                       LM00058    
                      EOF ON MFD, PRINT OUT COUNT AND LEAVE                                            LM00059    
                                                                                                       LM00060    
      REOF        PRMESS.(DEFBC.(COUNT))                                                          *028 LM00061    
                  BFCLOS.($ALL$,MZE,ERR1)                                                         *029 LM00062    
                  CHNCOM.(0)                                                                      *030 LM00063    
                                                                                                       LM00064    
                      SIMPLE-MINDED ERROR HANDLING                                                     LM00065    
                                                                                                       LM00066    
      ERR1        NCOM.($PRNTER$,61K)                                                             *031 LM00067    
                                                                                                       LM00068    
                  END OF PROGRAM                                                                  *032 LM00069    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00272 TRANSFER VECTOR LENGTH  00016 PROGRAM BEGINS    00104
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BUFF1  00022 A 1        BUFF5  00026 A 1        FILE   00031 A 1        MZE    00052 A 1        REOF   00021   4  
      BUFF2  00023 A 1        COUNT  00027 A 1        LINE   00050 A 1        PUNCH  00053 A 1        UFD    00063 A 1  
      BUFF3  00024 A 1        EOFCT  00030   1        MFD    00051 A 1        READM  00020   4        V      00066 A 1  
      BUFF4  00025 A 1        ERR1   00017   4                                                                          
0FUNCTION DICTIONARY    
      ATTACH 00000   1        ATTNAM 00001   1        BFCLOS 00002   1        BFOPEN 00003   1        BFREAD 00004   1  
      BFWRIT 00005   1        CHNCOM 00006   1        DEFBC  00007   1        EXIT   00010   1        GETBUF 00011   1  
      .SETUP 00012   1        LJUST  00013   1        NCOM   00014   1        PRMESS 00015   1                          
0ABSOLUTE CONSTANTS     
 00075 +000000000061     00101 -075145632551     00077 +214343606060     00074 +000000000016     00067 +000000000000    
 00073 +000000000007     00072 +000000000003     00103 -266060606060     00102 -116060606060     00071 +000000000002    
 00076 +000000000660     00070 +000000000001     00100 +233000000000                                                    
0STATEMENT DICTIONARY   
 00017 TXL -300266000263       00020 TXL -300223000214       00021 TXL -300255000250                                    
0PROGRAM    
                 N'R                                                                001  LM00015
                 D'N BUFF1(0),BUFF2(0),BUFF3(0),BUFF4(0),BUFF5(0)                   002  LM00016
                 D'N LINE(14),UFD(7),V(2)                                           003  LM00017
                 V'S MZE = -0                                                       004  LM00019
 00104 TSX +0 07400 4 00012    00052     -0 00000 0 00000                                                               
                 V'S COUNT = 0                                                      005  LM00020
 00027     +0 00000 0 00000                                                                                             
                 V'S MFD = $M.F.D.$                                                 006  LM00021
 00051     -0 43326 3 32433                                                                                             
                 V'S FILE = $(FILE)$                                                007  LM00022
 00031     -3 42631 4 32534                                                                                             
                 V'S PUNCH = $ PUNCH$                                               008  LM00023
 00053     -2 04764 4 52330                                                                                             
                 V'S LINE(1) ... LINE(14) = $      $                                009  LM00024
 00032     -2 06060 6 06060    00033     -2 06060 6 06060    00034     -2 06060 6 06060    00035     -2 06060 6 06060   
 00036     -2 06060 6 06060    00037     -2 06060 6 06060    00040     -2 06060 6 06060    00041     -2 06060 6 06060   
 00042     -2 06060 6 06060    00043     -2 06060 6 06060    00044     -2 06060 6 06060    00045     -2 06060 6 06060   
 00046     -2 06060 6 06060    00047     -2 06060 6 06060                                                               
                 GETBUF.(BUFF1,432)                                                 010  LM00028
 00105 TSX +0 07400 4 00011    00106 TXH +3 00000 0 00022    00107 TXH +3 00000 0 00076                                 
                 GETBUF.(BUFF2,432)                                                 011  LM00029
 00110 TSX +0 07400 4 00011    00111 TXH +3 00000 0 00023    00112 TXH +3 00000 0 00076                                 
                 GETBUF.(BUFF3,432)                                                 012  LM00030
 00113 TSX +0 07400 4 00011    00114 TXH +3 00000 0 00024    00115 TXH +3 00000 0 00076                                 
                 GETBUF.(BUFF4,432)                                                 013  LM00031
 00116 TSX +0 07400 4 00011    00117 TXH +3 00000 0 00025    00120 TXH +3 00000 0 00076                                 
                 GETBUF.(BUFF5,432)                                                 014  LM00032
 00121 TSX +0 07400 4 00011    00122 TXH +3 00000 0 00026    00123 TXH +3 00000 0 00076                                 
                 ATTNAM.(V(2)...2)                                                  015  LM00036
 00124 TSX +0 07400 4 00001    00125 TIX +2 00071 0 00064                                                               
                 ATTACH.(MFD,FILE)                                                  016  LM00037
 00126 TSX +0 07400 4 00000    00127 TXH +3 00000 0 00051    00130 TXH +3 00000 0 00031                                 
                 BFOPEN.($R$,MFD,FILE,BUFF1(BUFF1+432),BUFF2(BUFF2+432),            017  LM00038
                1     MZE,ERR1)                                                     017  LM00039
 00131 CLA +0 50000 0 00023    00132 ADD +0 40000 0 00076    00133 SUB +0 40200 0 00134    00134 TXH +3 00000 0 00023   
 00135 STA +0 62100 0 00150    00136 CLA +0 50000 0 00022    00137 ADD +0 40000 0 00076    00140 SUB +0 40200 0 00141   
 00141 TXH +3 00000 0 00022    00142 STA +0 62100 0 00147    00143 TSX +0 07400 4 00003    00144 TXH +3 00000 0 00102   
 00145 TXH +3 00000 0 00051    00146 TXH +3 00000 0 00031    00147 TXH +3 00000 0 00000    00150 TXH +3 00000 0 00000   
 00151 TXH +3 00000 0 00052    00152 TXH +3 00000 0 00017                                                               
                 ATTACH.(V(2),V(1))                                                 018  LM00040
 00153 TSX +0 07400 4 00000    00154 TXH +3 00000 0 00064    00155 TXH +3 00000 0 00065                                 
                 BFOPEN.($W$,MFD,PUNCH,BUFF3(BUFF3+432),BUFF4(BUFF4+432),           019  LM00042
                1     BUFF5(BUFF5+432),ERR1)                                        019  LM00043
 00156 CLA +0 50000 0 00026    00157 ADD +0 40000 0 00076    00160 SUB +0 40200 0 00161    00161 TXH +3 00000 0 00026   
 00162 STA +0 62100 0 00203    00163 CLA +0 50000 0 00025    00164 ADD +0 40000 0 00076    00165 SUB +0 40200 0 00166   
 00166 TXH +3 00000 0 00025    00167 STA +0 62100 0 00202    00170 CLA +0 50000 0 00024    00171 ADD +0 40000 0 00076   
 00172 SUB +0 40200 0 00173    00173 TXH +3 00000 0 00024    00174 STA +0 62100 0 00201    00175 TSX +0 07400 4 00003   
 00176 TXH +3 00000 0 00103    00177 TXH +3 00000 0 00051    00200 TXH +3 00000 0 00053    00201 TXH +3 00000 0 00000   
 00202 TXH +3 00000 0 00000    00203 TXH +3 00000 0 00000    00204 TXH +3 00000 0 00017                                 
                 BFREAD.(MFD,FILE,UFD(3)...3,REOF,EOFCT,ERR1)                       020  LM00044
 00205 TSX +0 07400 4 00004    00206 TXH +3 00000 0 00051    00207 TXH +3 00000 0 00031    00210 TIX +2 00072 0 00060   
 00211 TXH +3 00000 0 00021    00212 TXH +3 00000 0 00030    00213 TXH +3 00000 0 00017                                 
      READM      BFREAD.(MFD,FILE,UFD(7)...7,REOF,EOFCT,ERR1)                       021  LM00048
 00214 TSX +0 07400 4 00004    00215 TXH +3 00000 0 00051    00216 TXH +3 00000 0 00031    00217 TIX +2 00073 0 00054   
 00220 TXH +3 00000 0 00021    00221 TXH +3 00000 0 00030    00222 TXH +3 00000 0 00017                                 
                 W'R ((UFD(7).V.UFD(6)) .E. 0), T'O READM                           022  LM00049
 00223 CAL -0 50000 0 00054    00224 ORA -0 50100 0 00055    00225 SLW +0 60200 0 00267    00226 CLA +0 50000 0 00267   
 00227 SUB +0 40200 0 00067    00230 TNZ -0 10000 0 00232    00231 TRA +0 02000 0 00020                                 
                 COUNT = COUNT + 1                                                  023  LM00053
 00232 CLA +0 50000 0 00027    00233 ADD +0 40000 0 00070    00234 STO +0 60100 0 00027                                 
                 LINE(14) = LJUST.(UFD(7))                                          024  LM00054
 00235 TSX +0 07400 4 00013    00236 TXH +3 00000 0 00054    00237 STO +0 60100 0 00032                                 
                 LINE(13) = UFD(6)                                                  025  LM00055
 00240 CLA +0 50000 0 00055    00241 STO +0 60100 0 00033                                                               
                 BFWRIT.(MFD,PUNCH,LINE(14)...14,ERR1)                              026  LM00056
 00242 TSX +0 07400 4 00005    00243 TXH +3 00000 0 00051    00244 TXH +3 00000 0 00053    00245 TIX +2 00074 0 00032   
 00246 TXH +3 00000 0 00017                                                                                             
                 T'O READM                                                          027  LM00057
 00247 TRA +0 02000 0 00020                                                                                             
      REOF       PRMESS.(DEFBC.(COUNT))                                             028  LM00061
 00250 TSX +0 07400 4 00007    00251 TXH +3 00000 0 00027    00252 STO +0 60100 0 00267    00253 TSX +0 07400 4 00015   
 00254 TXH +3 00000 0 00267                                                                                             
                 BFCLOS.($ALL$,MZE,ERR1)                                            029  LM00062
 00255 TSX +0 07400 4 00002    00256 TXH +3 00000 0 00077    00257 TXH +3 00000 0 00052    00260 TXH +3 00000 0 00017   
                 CHNCOM.(0)                                                         030  LM00063
 00261 TSX +0 07400 4 00006    00262 TXH +3 00000 0 00067                                                               
      ERR1       NCOM.($PRNTER$,61K)                                                031  LM00067
 00263 TSX +0 07400 4 00014    00264 TXH +3 00000 0 00101    00265 TXH +3 00000 0 00075                                 
                 E'M                                                                032  LM00069
 00266 TSX +0 07400 4 00010                                                                                             
1            ROUTINE TO GET A BUFFER AREA BY EXPANDING MEMORY BOUND                              PAGE 1     
                           D.R. WIDRIG  JUNE 1966                                   
                  
                       00004         ENTRY   GETBUF        GET A BUFFER 
                  
                                     EXTERN  GETMEM,SETMEM  
                  
                                             CALLING SEQUENCE IS..  GETBUF.(BUFF,N) 
                                             UPON RETURN, THE CALLER MAY USE THE    
                                             AREA BY STATEMENTS OF THE FORM..  X = BUFF(BUFF+I) 
                                             WHERE THE I'TH ELEMENT IS INTENDED     
                  
        TRANSFER VECTOR 
      00000  272563442544     GETMEM
      00001  622563442544     SETMEM
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  272563226426     
                  
      00004  0636 00 4 00024  GETBUF SCA     X4,4          SAVE LINKAGE 
      00005  0634 00 1 00025         SXA     X1,1          AND IR1
      00006  0535 00 1 00024         LAC     X4,1          SET IR1 TO IR4 (THE CALLER)    
                  
      00007  0074 00 4 00000         TSX     GETMEM,4      GET CURRENT MEMORY BOUND 
      00010  0601 00 0 00027         STO     OLDMEM        SAVE OLD MEMORY BOUND    
      00011  0400 60 1 00002         ADD*    2,1           ALLOW FOR USER'S DEMAND  
      00012  0734 00 4 00000         PAX     0,4           SAVE COMPLEMENT OF THIS VALUE  
      00013 -0636 00 4 00020         SCD     TXI,4         ..     
      00014  0400 00 0 00030         ADD     =1            ALLOW FOR BUFF(0)  
      00015  0074 00 4 00001         TSX     SETMEM,4      RAISE THE ROOF     
                  
      00016 -0500 00 1 00001         CAL     1,1           GET BASE POINTER   
      00017  0734 00 4 00000         PAX     0,4           ..     
      00020  1 00000 4 00021  TXI    TXI     *+1,4,**      DECREMENT BY AMOUNT OF STORAGE 
      00021  0754 00 4 00000         PXA     0,4           SET THIS VALUE IN USER'S PROGRAM     
      00022  0602 60 1 00001         SLW*    1,1           ..     
      00023  0500 00 0 00027         CLA     OLDMEM        RETURN OLD MEMORY BOUND  
                  
      00024 -0774 00 4 00000  X4     AXC     **,4          RESTORE LINKAGE    
      00025  0774 00 1 00000  X1     AXT     **,1          AND IR1
      00026  0020 00 4 00003         TRA     3,4           RETURN 
                  
      00027                   OLDMEM BSS     1             STORAGE FOR OLD MEMORY BOUND   
                  
                                     END  
                  
        LITERALS  
      00030  000000000001     
1            ROUTINE TO GET A BUFFER AREA BY EXPANDING MEMORY BOUND                              PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         31 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         25     X1     5
         24     X4     4,    6
         20    TXI    13
          4 GETBUF     0
          0 GETMEM     7
         27 OLDMEM    10,   23
          1 SETMEM    15
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




PRELOD   BCD 09/20/68 0220.5   25101         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  PRELOD   MAD            02/15/68    1610.6
-                 
                                                                                                       LM00001    
                    PRELOD NAME1 -COMB- -NOLIST-                                                       LM00002    
                                                                                                       LM00003    
                    CHECKS NAME1 CTSSLD TO SEE IF IT WILL LOAD                                         LM00004    
                    SUCCESSFULLY.  CREATES A LINE MARKED                                               LM00005    
                    FILE, NAME1 STOMAP, WHICH INCLUDES ERROR                                           LM00006    
                    COMMENTS IF ANY, CHECKS FOR MISSING FILES,                                         LM00007    
                    MISSING ENTRY POINTS, DUPLICATED ENTRY POINTS,                                     LM00008    
                    AND CORE OVERLAP.                                                                  LM00009    
                                                                                                       LM00010    
                  NORMAL MODE IS INTEGER                                                          *001 LM00011    
                  DIMENSION BUFF1(432),BUFF2(432),A(14),PROG(28),TVARAY(3000)                     *002 LM00012    
                  DIMENSION EPARAY(9600,DIM),MFARAY(100),MEARAY(600),MULT(200)                    *003 LM00013    
                  DIMENSION LINE(33),FILNAM(2),BUFF3(432),TV1(6000,DTV)                           *004 LM00014    
                  EQUIVALENCE (FILNAM(0),N1),(FILNAM(1),NA2)                                      *005 LM00015    
                  VECTOR VALUES BL = 432                                                          *006 LM00016    
                  VECTOR VALUES BLANK3 = $                  $,777777000003K                       *007 LM00017    
                  VECTOR VALUES DIFC=$TOTAL LOCATIONS NOT USED      $,0,$ DECIMAL$,               *008 LM00018    
                1 777777777777K                                                                   *008 LM00019    
                  VECTOR VALUES DIM = 2,17,16                                                     *009 LM00020    
                  VECTOR VALUES DTV = 2,3,2                                                       *010 LM00021    
                  VECTOR VALUES FENCE = 777777777777K                                             *011 LM00022    
                  VECTOR VALUES HEAD = 777777000013K,$0            NAME  T.V. ORGIN LENTH         *012 LM00023    
                1  COMMON      CROSS REFERENCE$                                                   *012 LM00024    
                  VECTOR VALUES HPC = $HIGHEST PROGRAM LOCATION      $,0,777777777777K            *013 LM00025    
                  VECTOR VALUES ICOMB = 0                                                         *014 LM00026    
                  VECTOR VALUES ILIST = 0                                                         *015 LM00027    
                  VECTOR VALUES JE = 0                                                            *016 LM00028    
                  VECTOR VALUES JT = -50                                                          *017 LM00029    
                  VECTOR VALUES LCOM = 77777K                                                     *018 LM00030    
                  VECTOR VALUES LCM = $LOWEST COMMON LOCATION        $,0,777777777777K            *019 LM00031    
                  VECTOR VALUES LC = 33                                                           *020 LM00032    
                  VECTOR VALUES LPOINT = 62K                                                      *021 LM00033    
                  VECTOR VALUES MASK1 = 7777K8                                                    *022 LM00034    
                  VECTOR VALUES MASK2 = 000077000000K                                             *023 LM00035    
                  VECTOR VALUES MASK3 = 000000777777K                                             *024 LM00036    
                  VECTOR VALUES MASK4 = 577777777777K                                             *025 LM00037    
                  VECTOR VALUES MEARAY(0) = 0                                                     *026 LM00038    
                  VECTOR VALUES MESS1 = $EOF IN PROGRAM CARD INFORMATION, FILE SKIPPED$           *027 LM00039    
                  VECTOR VALUES MESS2 = $COMMAND FORM IS 'PRELOD NAME1 -'NOLIST'- -'COMB'         *028 LM00040    
                1 -'$,777777777777K                                                               *028 LM00041    
                  VECTOR VALUES MFARAY(0) = 0                                                     *029 LM00042    
                  VECTOR VALUES MULT(0) = 0                                                       *030 LM00043    
                  VECTOR VALUES NASTY = 0,777777777777K                                           *031 LM00044    
                  VECTOR VALUES NA2 = $STOMAP$                                                    *032 LM00045    
                  VECTOR VALUES N2 = $CTSSLD$                                                     *033 LM00046    
                  VECTOR VALUES QBSS = $   BSS$                                                   *034 LM00047    
                  VECTOR VALUES QCOMB = $  COMB$                                                  *035 LM00048    
                  VECTOR VALUES PROGSW = 0                                                        *036 LM00049    
                  VECTOR VALUES SUM1 = 777777000004K,$0   PRELOAD   SUCCESSFUL$,                  *037 LM00050    
                2 777777000006K,$      LOWEST COMMON LOCATION  $,0,                               *037 LM00051    
                3 777777000006K,$      HIGHEST PROGRAM LOCATION$,0,                               *037 LM00052    
                4 777777000010K,$      TOTAL NOT USED          $,0,$ DECIMAL$                     *037 LM00053    
                  VECTOR VALUES SUM1A = $UNSUCC$                                                  *038 LM00054    
                  VECTOR VALUES SUM2 = 777777000004K,$      MISSING FILES ARE$                    *039 LM00055    
                  VECTOR VALUES SUM3 = 777777000005K,$      MISSING ENTRY POINTS ARE$             *040 LM00056    
                  VECTOR VALUES SUM4 = 777777000006K,$      DUPLICATED ENTRY POINTS ARE$          *041 LM00057    
                  VECTOR VALUES TITLE = 777777000020K,$   STOMAP FOR PRELOD OF $                  *042 LM00058    
                1  ,0,$ SYSTEM $,0,$            $,0,$      $,0,$      $,0,0                       *042 LM00059    
                  VECTOR VALUES TVSW = 0                                                          *043 LM00060    
                  VECTOR VALUES PL = 0                                                            *044 LM00061    
                  VECTOR VALUES TAG = $******$                                                    *045 LM00062    
                  VECTOR VALUES BLANK = $      $                                                  *046 LM00063    
                  VECTOR VALUES ZERO = 0                                                          *047 LM00064    
                  FERRTN.(ERR1)                                                                   *048 LM00065    
                  FERRTN.(ERR2)                                                                   *049 LM00066    
                  FERRTN.(ERR3)                                                                   *050 LM00067    
                  FERRTN.(ERR4)                                                                   *051 LM00068    
                                                                                                       LM00069    
                    GET AND CHECK ARGUMENTS                                                            LM00070    
                                                                                                       LM00071    
                  WHENEVER COMARG.(1,N1).E.FENCE                                                  *052 LM00072    
                     PRNTP.(MESS2)                                                                *053 LM00073    
                     CHNCOM.(0)                                                                   *054 LM00074    
                  OR WHENEVER COMARG.(2) .E. FENCE                                                *055 LM00075    
                    TRANSFER TO START                                                             *056 LM00076    
                  OR WHENEVER COMARG.(2).E.QCOMB .OR. COMARG.(3) .E. QCOMB                        *057 LM00077    
                     ICOMB = 1                                                                    *058 LM00078    
                  END OF CONDITIONAL                                                              *059 LM00079    
                  WHENEVER COMARG.(3) .E. $NOLIST$ .OR. COMARG.(2) .E. $NOLIST$,                  *060 LM00080    
                1  ILIST = 1                                                                      *060 LM00081    
                    READ FILE NAMES FROM CTSSLD                                                        LM00082    
      START       BFOPEN.($R$,N1,N2,BUFF1(BL),-0,-0,ERR1)                                         *061 LM00083    
                                                                                                       LM00084    
                    READ CTSSLD                                                                        LM00085    
                                                                                                       LM00086    
      READ1       BFREAD.(N1,N2,A(14)...14,EOF1,EOFCT,ERR1)                                       *062 LM00087    
                  WHENEVER (A(14) .E. TAG) .OR. (A(14) .E. $      $), TRANSFER TO READ1           *063 LM00088    
                  BFOPEN.($R$,A(14),QBSS,BUFF2(BL),-0,-0,ERR2)                                    *064 LM00089    
                                                                                                       LM00090    
                    READ NEXT BSS FILE CARD                                                            LM00091    
                                                                                                       LM00092    
      READ2       BFREAD.(A(14),QBSS,PROG(28)...28,EOF2,EOFCT,ERR2)                               *065 LM00093    
      R2          WHENEVER (PROG(28) .A. MASK1) .E. 4005K8                                        *066 LM00094    
                    NW = (PROG(28) .A. MASK2) .RS. 18                                             *067 LM00095    
                    K = 26                                                                        *068 LM00096    
                    WHENEVER PROGSW .E. 1, TRANSFER TO LTOP1                                      *069 LM00097    
                    NW = NW-2                                                                     *070 LM00098    
                    K = K-2                                                                       *071 LM00099    
                    PROGSW = 1                                                                    *072 LM00100    
                    LPOINT = LPOINT + PL                                                          *073 LM00101    
                  TEMP = (PROG(25) .A. 4K11) .RS. 3                                               *074 LM00102    
                  WHENEVER TEMP .NE. 0, LPOINT = 2*((LPOINT+1)/2)                                 *075 LM00103    
                                                                                                       LM00104    
                    STORE PROGRAM INFORMATION                                                          LM00105    
                                                                                                       LM00106    
                    PL = PROG(26).A.MASK3                                                         *076 LM00107    
                    TVL = PROG(26) .RS. 18                                                        *077 LM00108    
                    EPARAY(JE,3) = PROG(25) .A. 377777777777K                                     *078 LM00109    
                  WHENEVER (EPARAY(JE,3).NE.0).AND.(EPARAY(JE,3).L.LCOM),                         *079 LM00110    
                1 LCOM = EPARAY(JE,3)                                                             *079 LM00111    
                    EPARAY(JE,0) = A(14)                                                          *080 LM00112    
                    EPARAY(JE,1) = OCABC.(LPOINT)                                                 *081 LM00113    
                    EPARAY(JE,2) = PL                                                             *082 LM00114    
                    EPARAY(JE,4) = TAG                                                            *083 LM00115    
                    JE =JE+1                                                                      *084 LM00116    
      LTOP1         THROUGH LOOP1, FOR ICNT = NW,-2,ICNT.LE.0                                     *085 LM00117    
                      EPARAY(JE,0) = PROG(K)                                                      *086 LM00118    
                      EPARAY(JE,1) = OCABC.(.ABS.(PROG(K-1)) + LPOINT)                            *087 LM00119    
                    EPARAY(JE,2) = 3                                                              *088 LM00120    
                      K = K-2                                                                     *089 LM00121    
      LOOP1           JE = JE + 1                                                                 *090 LM00122    
                    TRANSFER TO READ2                                                             *091 LM00123    
                    END OF CONDITIONAL                                                            *092 LM00124    
                                                                                                       LM00125    
                    STORE TRANSFER VECTOR                                                              LM00126    
                                                                                                       LM00127    
                  WHENEVER TVSW .E. 1, TRANSFER TO LTOP2                                          *093 LM00128    
                  TVSW =1                                                                         *094 LM00129    
                  JT = (JT/50 + 1) * 50                                                           *095 LM00130    
                  TVARAY(JT) = A(14)                                                              *096 LM00131    
                  JT = JT + 1                                                                     *097 LM00132    
      LTOP2       K = 24                                                                          *098 LM00133    
                  IC = 20                                                                         *099 LM00134    
                  WHENEVER TVL.L.20, IC = TVL                                                     *100 LM00135    
                  THROUGH LOOP2, FOR ICNT = IC, -1, ICNT .E. 0                                    *101 LM00136    
                    TVARAY(JT) = PROG(K)                                                          *102 LM00137    
                    K = K - 1                                                                     *103 LM00138    
      LOOP2         JT = JT + 1                                                                   *104 LM00139    
                  WHENEVER TVL .G. 20                                                             *105 LM00140    
                    TVL = TVL - 20                                                                *106 LM00141    
                    TRANSFER TO READ2                                                             *107 LM00142    
                  OTHERWISE                                                                       *108 LM00143    
                    TVARAY(JT) = FENCE                                                            *109 LM00144    
                    TVSW = 0                                                                      *110 LM00145    
                  END OF CONDITIONAL                                                              *111 LM00146    
                  PROGSW = 0                                                                      *112 LM00147    
                  WHENEVER ICOMB .E. 0                                                            *113 LM00148    
                    BFCLOS.(A(14),QBSS,READ1)                                                     *114 LM00149    
                    TRANSFER TO READ1                                                             *115 LM00150    
                  END OF CONDITIONAL                                                              *116 LM00151    
                                                                                                       LM00152    
                    IF THIS IS A COMBINED FILE, SEARCH FOR REMAINING P.C.                              LM00153    
                                                                                                       LM00154    
      SKIP        BFREAD.(A(14),QBSS,PROG(28)...28,EOF3,EOFCT,ERR3)                               *117 LM00155    
                  WHENEVER PROG(28) .A. MASK1 .E. 4005K8, TRANSFER TO R2                          *118 LM00156    
                  TRANSFER TO SKIP                                                                *119 LM00157    
      EOF3        BFCLOS.(A(14),QBSS,READ1)                                                       *120 LM00158    
                  TRANSFER TO READ1                                                               *121 LM00159    
                                                                                                       LM00160    
                    ENTIRE CTSSLD HAS BEEN READ AND ALL PROGRAM                                        LM00161    
                    INFORMATION STORED                                                                 LM00162    
                                                                                                       LM00163    
      EOF1        BFCLOS.(N1,N2,EOF1A)                                                            *122 LM00164    
      EOF1A       HCORE = LPOINT + PL                                                             *123 LM00165    
                  JESAVE = JE                                                                     *124 LM00166    
                  WHENEVER JT .L. 0                                                               *125 LM00167    
                    TVARAY(1) = FENCE                                                             *126 LM00168    
                    TVARAY(2) = FENCE                                                             *127 LM00169    
                    TRANSFER TO PART2                                                             *128 LM00170    
                  END OF CONDITIONAL                                                              *129 LM00171    
                  TVARAY(JT+1) = FENCE                                                            *130 LM00172    
                  JT = - 50                                                                       *131 LM00173    
                  TRANSFER TO PART2                                                               *132 LM00174    
                                                                                                       LM00175    
                    I/O ERROR RETURNS                                                                  LM00176    
                                                                                                       LM00177    
      EOF2        PRNTP.(MESS1)                                                                   *133 LM00178    
                  TRANSFER TO ER2A                                                                *134 LM00179    
      ERR1        PRNTER.                                                                         *135 LM00180    
                  BFCLOS.($ALL$,-0,ERRX)                                                          *136 LM00181    
      ERRX        CHNCOM.(0)                                                                      *137 LM00182    
      ERR2        PRNTER.                                                                         *138 LM00183    
      ER2A        BFCLOS.(A(14),QBSS,ER2B)                                                        *139 LM00184    
      ER2B        MFARAY = MFARAY + 1                                                             *140 LM00185    
                  MFARAY(MFARAY) = A(14)                                                          *141 LM00186    
                  TRANSFER TO READ1                                                               *142 LM00187    
      ERR3        PRNTER.                                                                         *143 LM00188    
                  BFCLOS. (A(14),QBSS,READ1)                                                      *144 LM00189    
                  TRANSFER TO READ1                                                               *145 LM00190    
                                                                                                       LM00191    
                    CHECK T.V. AGAINST ENTRY POINTS                                                    LM00192    
                    IF ENTRY POINT FOUND, STORE CALLING FILE NAME                                      LM00193    
                    IF ENTRY POINT NOT FOUND, STORE TRANSFER NAME                                      LM00194    
                    IN MISSING ENTRY POINT ARRAY (MEARAY)                                              LM00195    
                                                                                                       LM00196    
      PART2       JT = (JT/50 + 1)*50                                                             *146 LM00197    
                  MODNAM = TVARAY(JT)                                                             *147 LM00198    
      MNAM        JT = JT +1                                                                      *148 LM00199    
                  WHENEVER TVARAY(JT) .NE. FENCE, TRANSFER TO LTOP3                               *149 LM00200    
                  WHENEVER TVARAY(JT+1) .E. FENCE, TRANSFER TO DUPCK                              *150 LM00201    
                  TRANSFER TO PART2                                                               *151 LM00202    
      LTOP3       THROUGH LOOP3, FOR JE=1,1, JE.GE.JESAVE                                         *152 LM00203    
                    WHENEVER EPARAY(JE,4) .E. TAG                                                 *153 LM00204    
                      FILEN = EPARAY(JE,0)                                                        *154 LM00205    
                      TRANSFER TO LOOP3                                                           *155 LM00206    
                    END OF CONDITIONAL                                                            *156 LM00207    
                    WHENEVER TVARAY(JT) .NE. EPARAY(JE,0), TRANSFER TO LOOP3                      *157 LM00208    
                    TV1(JT,0) = FILEN                                                             *158 LM00209    
                    TV1(JT,1) = EPARAY(JE,1)                                                      *159 LM00210    
                    WHENEVER EPARAY(JE,2) .G. 14, TRANSFER TO MNAM                                *160 LM00211    
                    EPARAY(JE,EPARAY(JE,2)) = MODNAM                                              *161 LM00212    
                    EPARAY(JE,2) = EPARAY(JE,2) + 1                                               *162 LM00213    
                    TRANSFER TO MNAM                                                              *163 LM00214    
      LOOP3       CONTINUE                                                                        *164 LM00215    
                  MEARAY = MEARAY + 1                                                             *165 LM00216    
                  MEARAY(MEARAY) = TVARAY(JT)                                                     *166 LM00217    
                  TV1(JT,0) = BLANK                                                               *167 LM00218    
                  TV1(JT,1) = BLANK                                                               *168 LM00219    
                  TRANSFER TO MNAM                                                                *169 LM00220    
                                                                                                       LM00221    
                    CHECK FOR DUPLICATED ENTRY POINTS                                                  LM00222    
                                                                                                       LM00223    
      DUPCK       THROUGH LOOP5, FOR JE1 = 1,1,JE1.GE.JESAVE                                      *170 LM00224    
                    WHENEVER EPARAY(JE1,4) .E. TAG, TRANSFER TO LOOP5                             *171 LM00225    
                    THROUGH LOOP4, FOR JE=JE1+1,1,JE.E.JESAVE                                     *172 LM00226    
                      WHENEVER EPARAY(JE,4) .E. TAG, TRANSFER TO LOOP4                            *173 LM00227    
                      WHENEVER EPARAY(JE1,0) .NE. EPARAY(JE,0), TRANSFER TO LOOP4                 *174 LM00228    
                      MULT = MULT + 1                                                             *175 LM00229    
                      MULT(MULT) = EPARAY(JE,0)                                                   *176 LM00230    
                      TRANSFER TO LOOP5                                                           *177 LM00231    
      LOOP4         CONTINUE                                                                      *178 LM00232    
      LOOP5       CONTINUE                                                                        *179 LM00233    
                                                                                                       LM00234    
                    WRITE FILE FOR OUTPUT                                                              LM00235    
                                                                                                       LM00236    
                  EXECUTE DELETE.(FILNAM)                                                         *180 LM00237    
                  BFOPEN.($W$,N1,NA2,BUFF1(BL),BUFF2(BL),BUFF3(BL),ERR4)                          *181 LM00238    
                  TITLE(8) = N1                                                                   *182 LM00239    
                  GETTM.(TITLE(11),TITLE(13))                                                     *183 LM00240    
                  TITLE(5)=(N1.A.777777000000K).V.000000575757K                                   *184 LM00241    
                  WHOAMI.(TITLE(16)...2)                                                          *185 LM00242    
                  LINE(LC-15) = TITLE(16)                                                         *186 LM00243    
                  LINE(LC-16) = TITLE(15)                                                         *187 LM00244    
                  THROUGH LOOP6, FOR IC = 0,1,IC .G. 14                                           *188 LM00245    
      LOOP6       LINE(LC-IC) = TITLE(IC)                                                         *189 LM00246    
                  BFWRIT.(N1,NA2,LINE(LC)...17,ERR4)                                              *190 LM00247    
                  WHENEVER ILIST .E. 1 .OR. JESAVE .L. 1, TRANSFER TO SUMERY                      *191 LM00248    
                  THROUGH LOOP7, FOR IC = 0,1,IC .G. 11                                           *192 LM00249    
      LOOP7       LINE(LC-IC) = HEAD(IC)                                                          *193 LM00250    
                  BFWRIT.(N1,NA2,LINE(LC)...12, ERR4)                                             *194 LM00251    
                  JT = -50                                                                        *195 LM00252    
                  JE = 0                                                                          *196 LM00253    
                                                                                                       LM00254    
                    PRINT FILE LINE                                                                    LM00255    
                                                                                                       LM00256    
      LTOP8       BFWRIT.(N1,NA2,BLANK3(3)...4,ERR4)                                              *197 LM00257    
                  LINE(LC) = 777777000007K                                                        *198 LM00258    
                  LINE(LC-1) = BLANK                                                              *199 LM00259    
                  LINE(LC-2) = $FILE  $                                                           *200 LM00260    
                  LINE(LC-3) = EPARAY(JE,0)                                                       *201 LM00261    
                  LINE(LC-4) = BLANK                                                              *202 LM00262    
                  LINE(LC-5) = (EPARAY(JE,1))                                                     *203 LM00263    
                  LINE(LC-6) = OCABC.(EPARAY(JE,2))                                               *204 LM00264    
                  LINE(LC-7) = OCABC.(EPARAY(JE,3))                                               *205 LM00265    
                  BFWRIT.(N1,NA2,LINE(LC)...8,ERR4)                                               *206 LM00266    
                                                                                                       LM00267    
                    PRINT EACH TRANSFER VECTOR                                                         LM00268    
                                                                                                       LM00269    
                  LINE(LC) = 777777000011K                                                        *207 LM00270    
                  LINE(LC-1) = BLANK                                                              *208 LM00271    
                  LINE(LC-2) = BLANK                                                              *209 LM00272    
                  LINE(LC-3) = BLANK                                                              *210 LM00273    
                  LINE(LC-5) = BLANK                                                              *211 LM00274    
                  LINE(LC-6) = BLANK                                                              *212 LM00275    
                  LINE(LC-7) = BLANK                                                              *213 LM00276    
                  JT = (JT/50+1)*50 + 1                                                           *214 LM00277    
      LTOP9       WHENEVER TVARAY(JT) .E. FENCE, TRANSFER TO TOP10                                *215 LM00278    
                  LINE(LC-4) = TVARAY(JT)                                                         *216 LM00279    
                  LINE(LC-8) = TV1(JT,0)                                                          *217 LM00280    
                  LINE(LC-9) = TV1(JT,1)                                                          *218 LM00281    
                  BFWRIT.(N1,NA2,LINE(LC)...10,ERR4)                                              *219 LM00282    
                  JT = JT + 1                                                                     *220 LM00283    
                  TRANSFER TO LTOP9                                                               *221 LM00284    
      TOP10       LINE(LC-4) = BLANK                                                              *222 LM00285    
                  LINE(LC-6) = BLANK                                                              *223 LM00286    
                  LINE(LC-7) = BLANK                                                              *224 LM00287    
      LTOP10      JE = JE + 1                                                                     *225 LM00288    
                                                                                                       LM00289    
                    PRINT EACH ENTRY POINT NAME, LOAD POINT                                            LM00290    
                    AND CALLERS                                                                        LM00291    
                                                                                                       LM00292    
                  WHENEVER JE .GE. JESAVE, TRANSFER TO SUMERY                                     *226 LM00293    
                  WHENEVER EPARAY(JE,4) .E. TAG, TRANSFER TO LTOP8                                *227 LM00294    
                  NLC= (2*(EPARAY(JE,2)-3)+7)                                                     *228 LM00295    
                  LINE(LC)= (NLC-1).V.777777K6                                                    *229 LM00296    
                  LINE(LC-3) = EPARAY(JE,0)                                                       *230 LM00297    
                  LINE(LC-5) = (EPARAY(JE,1))                                                     *231 LM00298    
                  LINE(LC-7) = BLANK                                                              *232 LM00299    
                  LCNT = LC - 8                                                                   *233 LM00300    
                  THROUGH LOOP11, FOR IC = 3,1,IC .E. EPARAY(JE,2)                                *234 LM00301    
                    LINE(LCNT) = EPARAY(JE,IC)                                                    *235 LM00302    
                    LINE(LCNT-1) = 735757575757K                                                  *236 LM00303    
      LOOP11      LCNT = LCNT-2                                                                   *237 LM00304    
                  BFWRIT.(N1,NA2,LINE(LC)...NLC,ERR4)                                             *238 LM00305    
                  TRANSFER TO LTOP10                                                              *239 LM00306    
                                                                                                       LM00307    
                    PRINT PRELOD SUMMARY                                                               LM00308    
                                                                                                       LM00309    
      SUMERY      SUM1(18) = OCABC.(HCORE)                                                        *240 LM00310    
                  SUM1(11) = OCABC.(LCOM)                                                         *241 LM00311    
                  SUM1(25) = BZEL.(DERBC.(LCOM-HCORE))                                            *242 LM00312    
                  WHENEVER HCORE.G.LCOM, SUM1(25) =SUM1(25).A.MASK4                               *243 LM00313    
                  HPC(5) = SUM1(18)                                                               *244 LM00314    
                  LCM(5) = SUM1(11)                                                               *245 LM00315    
                  DIFC(5) = SUM1(25)                                                              *246 LM00316    
                  WHENEVER HCORE .L. LCOM .AND. (MEARAY+MFARAY) .E. 0                             *247 LM00317    
                                                                                                       LM00318    
                    SUCCESSFUL PRELOD                                                                  LM00319    
                                                                                                       LM00320    
                    THROUGH LOOP13, FOR IC = 0,1,IC .G. 27                                        *248 LM00321    
      LOOP13        LINE(LC-IC) = SUM1(IC)                                                        *249 LM00322    
                    BFWRIT.(N1,NA2,LINE(LC)...28,ERR4)                                            *250 LM00323    
                    PRINT COMMENT $SYSTEM PRELOAD SUCCESSFUL$                                     *251 LM00324    
                  PRNTP.(LCM)                                                                     *252 LM00325    
                  PRNTP.(HPC)                                                                     *253 LM00326    
                  PRNTP.(DIFC)                                                                    *254 LM00327    
                    TRANSFER TO MUCK                                                              *255 LM00328    
                  END OF CONDITIONAL                                                              *256 LM00329    
                    UNSUCCESSFUL PRELOD                                                                LM00330    
                                                                                                       LM00331    
                  SUM1(3) = SUM1A                                                                 *257 LM00332    
                  THROUGH LOOP14, FOR IC = 0,1,IC .G. 27                                          *258 LM00333    
      LOOP14      LINE(LC-IC) = SUM1(IC)                                                          *259 LM00334    
                  BFWRIT.(N1,NA2,LINE(LC)...28, ERR4)                                             *260 LM00335    
                  PRINT COMMENT $SYSTEM PRELOAD UNSUCCESSFUL$                                     *261 LM00336    
                  PRNTP.(LCM)                                                                     *262 LM00337    
                  PRNTP.(HPC)                                                                     *263 LM00338    
                  PRNTP.(DIFC)                                                                    *264 LM00339    
                  WHENEVER MFARAY .E. 0, TRANSFER TO MECK                                         *265 LM00340    
                                                                                                       LM00341    
                    PRINT MISSING FILES                                                                LM00342    
                                                                                                       LM00343    
                  THROUGH LOOP15, FOR IC = 0,1,IC .G. 4                                           *266 LM00344    
      LOOP15      LINE(LC-IC) = SUM2(IC)                                                          *267 LM00345    
                  BFWRIT.(N1,NA2,LINE(LC)...5,ERR4)                                               *268 LM00346    
                  PRINT COMMENT $MISSING FILES ARE$                                               *269 LM00347    
                  LINE(LC) = 777777000003K                                                        *270 LM00348    
                  LINE(LC-2) = BLANK                                                              *271 LM00349    
                  THROUGH LOOP16, FOR IC = 1,1,IC .G. MFARAY                                      *272 LM00350    
                  LINE(LC-3) = MFARAY(IC)                                                         *273 LM00351    
                  NASTY(0) = MFARAY(IC)                                                           *274 LM00352    
                  PRNTP.(NASTY)                                                                   *275 LM00353    
      LOOP16      BFWRIT.(N1,NA2,LINE(LC)...4,ERR4)                                               *276 LM00354    
      MECK        WHENEVER MEARAY .E. 0, TRANSFER TO MUCK                                         *277 LM00355    
                                                                                                       LM00356    
                    PRINT MISSING ENTRY POINTS                                                         LM00357    
                                                                                                       LM00358    
                  THROUGH LOOP17, FOR IC = 0,1,IC .G. 5                                           *278 LM00359    
      LOOP17      LINE(LC-IC) = SUM3(IC)                                                          *279 LM00360    
                  BFWRIT.(N1,NA2,LINE(LC)...6,ERR4)                                               *280 LM00361    
                  PRINT COMMENT $MISSING ENTRY POINTS ARE$                                        *281 LM00362    
                  LINE(LC) = 777777000003K                                                        *282 LM00363    
                  LINE(LC-2) = BLANK                                                              *283 LM00364    
                  THROUGH LOOP18, FOR IC = 1,1,IC .G. MEARAY                                      *284 LM00365    
                  LINE(LC-3) = MEARAY(IC)                                                         *285 LM00366    
                  NASTY(0) = MEARAY(IC)                                                           *286 LM00367    
                  PRNTP.(NASTY)                                                                   *287 LM00368    
      LOOP18      BFWRIT. (N1,NA2,LINE(LC)...4,ERR4)                                              *288 LM00369    
      MUCK        WHENEVER MULT .E. 0, TRANSFER TO END                                            *289 LM00370    
                                                                                                       LM00371    
                    PRINT DUPLICATED ENTRY POINTS                                                      LM00372    
                                                                                                       LM00373    
                  THROUGH LOOP19, FOR IC = 0,1,IC .G. 6                                           *290 LM00374    
      LOOP19      LINE(LC-IC) = SUM4(IC)                                                          *291 LM00375    
                  BFWRIT.(N1,NA2,LINE(LC)...7,ERR4)                                               *292 LM00376    
                  PRINT COMMENT $DUPLICATED ENTRY POINTS ARE$                                     *293 LM00377    
                  LINE(LC) = 777777000003K                                                        *294 LM00378    
                  LINE (LC-2) = BLANK                                                             *295 LM00379    
                  THROUGH LOOP20, FOR IC = 1,1,IC .G. MULT                                        *296 LM00380    
                  LINE(LC-3) = MULT(IC)                                                           *297 LM00381    
                  NASTY(0) = MULT(IC)                                                             *298 LM00382    
                  PRNTP.(NASTY)                                                                   *299 LM00383    
      LOOP20      BFWRIT.(N1,NA2,LINE(LC)...4,ERR4)                                               *300 LM00384    
                  TRANSFER TO END                                                                 *301 LM00385    
      ERR4        PRNTER.                                                                         *302 LM00386    
      END         BFCLOS.(N1,NA2,END2)                                                            *303 LM00387    
      END2        CHNCOM.(0)                                                                      *304 LM00388    
                  END OF PROGRAM                                                                  *305 LM00389    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   54012 TRANSFER VECTOR LENGTH  00024 PROGRAM BEGINS    51232
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      A      00110 A 1        ERR3   00043   4        LOOP11 00024   4        MASK1  25477 A 1        QBSS   27401 A 1  
      BLANK3 00114 A 1        ERR4   00044   4        LOOP13 00024   4        MASK2  25500 A 1        QCOMB  27402 A 1  
      BLANK  00115 A 1        ERRX   00045   4        LOOP14 00024   4        MASK3  25501 A 1        R2     00063   4  
      BL     00116 A 1        FENCE  25363 A 1        LOOP15 00024   4        MASK4  25502 A 1        READ1  00064   4  
      BUFF1  00777 A 1        FILEN  25364   1        LOOP16 00024   4        MEARAY 26633 A 1        READ2  00065   4  
      BUFF2  01660 A 1        FILNAM 00027 A 1        LOOP17 00024   4        MECK   00057   4        SKIP   00066   4  
      BUFF3  02541 A 1        HCORE  25365   1        LOOP18 00024   4        MESS1  26643 A 1        START  00067   4  
      DIFC   02552 A 1        HEAD   25401 A 1        LOOP19 00024   4        MESS2  26655 A 1        SUM1A  27403 A 1  
      DIM    02555 A 1        HPC    25410 A 1        LOOP1  00024   4        MFARAY 27022 A 1        SUM1   27437 A 1  
      DTV    02560 A 1        ICNT   25411   1        LOOP20 00024   4        MNAM   00060   4        SUM2   27444 A 1  
      DUPCK  00030   4        ICOMB  25412 A 1        LOOP2  00024   4        MODNAM 27023   1        SUM3   27452 A 1  
      END2   00031   4        IC     25413   1        LOOP3  00046   4        MUCK   00061   4        SUM4   27461 A 1  
      END    00032   4        ILIST  25414 A 1        LOOP4  00047   4        MULT   27334 A 1        SUMERY 00070   4  
      EOF1A  00033   4        JE1    25415   1        LOOP5  00050   4        N1     00027   1        TAG    27462 A 1  
      EOF1   00034   4        JE     25416 A 1        LOOP6  00024   4        N2     27335 A 1        TEMP   27463   1  
      EOF2   00035   4        JESAVE 25417   1        LOOP7  00024   4        NA2    00026 A 1        TITLE  27504 A 1  
      EOF3   00036   4        JT     25420 A 1        LPOINT 25476 A 1        NASTY  27337 A 1        TOP10  00071   4  
      EOFCT  02561   1        K      25421   1        LTOP10 00051   4        NLC    27340   1        TV1    43265 A 1  
      EPARAY 25362 A 1        LCM    25430 A 1        LTOP1  00052   4        NW     27341   1        TVARAY 51156 A 1  
      ER2A   00037   4        LCNT   25431   1        LTOP2  00053   4        PART2  00062   4        TVL    51157   1  
      ER2B   00040   4        LCOM   25432 A 1        LTOP3  00054   4        PL     27342 A 1        TVSW   51160 A 1  
      ERR1   00041   4        LC     25433 A 1        LTOP8  00055   4        PROG   27377 A 1        ZERO   51161 A 1  
      ERR2   00042   4        LINE   25475 A 1        LTOP9  00056   4        PROGSW 27400 A 1                          
0FUNCTION DICTIONARY    
      .03310 00000   0        .03311 00001   0        BFCLOS 00002   1        BFOPEN 00003   1        BFREAD 00004   1  
      BFWRIT 00005   1        BZEL   00006   1        CHNCOM 00007   1        COMARG 00010   1        DELETE 00011   1  
      DERBC  00012   1        EXIT   00013   1        FERRTN 00014   1        GETTM  00015   1        .PCOMT 00016   1  
      .SETUP 00017   1        OCABC  00020   1        PRNTER 00021   1        PRNTP  00022   1        WHOAMI 00023   1  
0ABSOLUTE CONSTANTS     
 51227 -377777000003     51207 +000000000033     51225 -335757575757     51174 +000000000012     51173 +000000000011    
 51231 -377777000011     51172 +000000000010     51171 +000000000007     51170 +000000000006     51167 +000000000005    
 51215 +263143256060     51230 -377777000007     51176 +000000000014     51175 +000000000013     51202 +000000000021    
 51201 +000000000020     51200 +000000000017     51212 +000000575757     51226 -377777000000     51224 -266060606060    
 51213 +214343606060     51204 +000000000024     51205 +000000000030     51211 +000000000062     51166 +000000000004    
 51216 +377777777777     51217 -000000000000     51206 +000000000032     51203 +000000000022     51220 -000500000000    
 51210 +000000000034     51223 -206060606060     51177 +000000000016     51222 -116060606060     51221 -054643316263    
 51165 +000000000003     51164 +000000000002     51162 +000000000000     51163 +000000000001     51214 +233000000000    
0STATEMENT DICTIONARY   
 00030 TXL -352336052324       00031 TXL -354005054003       00032 TXL -354003053777       00033 TXL -352020052015      
 00034 TXL -352015052011       00035 TXL -352045052043       00036 TXL -352010052004       00037 TXL -352064052060      
 00040 TXL -352067052064       00041 TXL -352047052046       00042 TXL -352060052057       00043 TXL -352074052073      
 00044 TXL -353777053776       00045 TXL -352057052055       00046 TXL -352276052275       00047 TXL -352426052425      
 00050 TXL -352427052426       00051 TXL -353102053077       00052 TXL -351602051570       00053 TXL -351701051677      
 00054 TXL -352147052135       00055 TXL -352607052602       00056 TXL -353007053002       00057 TXL -353554053550      
 00060 TXL -352120052115       00061 TXL -353666053662       00062 TXL -352112052101       00063 TXL -351402051374      
 00064 TXL -351336051327       00065 TXL -351374051365       00066 TXL -351774051765       00067 TXL -351327051307      
 00070 TXL -353255053252       00071 TXL -353065053060                                                                  
0PROGRAM    
                 NORMAL MODE IS INTEGER                                             001  LM00011
                 DIMENSION BUFF1(432),BUFF2(432),A(14),PROG(28),TVARAY(3000)        002  LM00012
                 DIMENSION EPARAY(9600,DIM),MFARAY(100),MEARAY(600),MULT(200)       003  LM00013
                 DIMENSION LINE(33),FILNAM(2),BUFF3(432),TV1(6000,DTV)              004  LM00014
                 EQUIVALENCE (FILNAM(0),N1),(FILNAM(1),NA2)                         005  LM00015
                 V'S BL = 432                                                       006  LM00016
 51232 TSX +0 07400 4 00017    00116     +0 00000 0 00660                                                               
                 V'S BLANK3 = $                  $,777777000003K                    007  LM00017
 00111     -3 77777 0 00003    00112     -2 06060 6 06060    00113     -2 06060 6 06060    00114     -2 06060 6 06060   
                 V'S DIFC=$TOTAL LOCATIONS NOT USED      $,0,$ DECIMAL$,            008  LM00018
                1777777777777K                                                      008  LM00019
 02542     -3 77777 7 77777    02543     +2 14360 6 06060    02544     -2 02425 2 33144    02545     +0 00000 0 00000   
 02546     -2 06060 6 06060    02547     -2 36064 6 22524    02550     -0 64562 6 04546    02551     -0 34623 2 16331   
 02552     -2 34663 2 14360                                                                                             
                 V'S DIM = 2,17,16                                                  009  LM00020
 02553     +0 00000 0 00020    02554     +0 00000 0 00021    02555     +0 00000 0 00002                                 
                 V'S DTV = 2,3,2                                                    010  LM00021
 02556     +0 00000 0 00002    02557     +0 00000 0 00003    02560     +0 00000 0 00002                                 
                 V'S FENCE = 777777777777K                                          011  LM00022
 25363     -3 77777 7 77777                                                                                             
                 V'S HEAD = 777777000013K,$0            NAME  T.V. ORGIN LENTH      012  LM00023
                1 COMMON      CROSS REFERENCE$                                      012  LM00024
 25366     -0 52325 6 06060    25367     -1 12526 2 55125    25370     +2 35146 6 26260    25371     -2 06060 6 06060   
 25372     +2 34644 4 44645    25373     -0 32545 6 33060    25374     -0 65127 3 14560    25375     -2 06333 6 53360   
 25376     -2 04521 4 42560    25377     -2 06060 6 06060    25400     +0 06060 6 06060    25401     -3 77777 0 00013   
                 V'S HPC = $HIGHEST PROGRAM LOCATION      $,0,777777777777K         013  LM00025
 25402     -3 77777 7 77777    25403     +0 00000 0 00000    25404     -2 06060 6 06060    25405     +2 32163 3 14645   
 25406     -1 12144 6 04346    25407     -2 36047 5 14627    25410     +3 03127 3 02562                                 
                 V'S ICOMB = 0                                                      014  LM00026
 25412     +0 00000 0 00000                                                                                             
                 V'S ILIST = 0                                                      015  LM00027
 25414     +0 00000 0 00000                                                                                             
                 V'S JE = 0                                                         016  LM00028
 25416     +0 00000 0 00000                                                                                             
                 V'S JT = -50                                                       017  LM00029
 25420     -0 00000 0 00062                                                                                             
                 V'S LCOM = 77777K                                                  018  LM00030
 25432     +0 00000 0 77777                                                                                             
                 V'S LCM = $LOWEST COMMON LOCATION        $,0,777777777777K         019  LM00031
 25422     -3 77777 7 77777    25423     +0 00000 0 00000    25424     -2 06060 6 06060    25425     -2 33146 4 56060   
 25426     -0 56043 4 62321    25427     -2 02346 4 44446    25430     -0 34666 2 56263                                 
                 V'S LC = 33                                                        020  LM00032
 25433     +0 00000 0 00041                                                                                             
                 V'S LPOINT = 62K                                                   021  LM00033
 25476     +0 00000 0 00062                                                                                             
                 V'S MASK1 = 7777K8                                                 022  LM00034
 25477     -3 77700 0 00000                                                                                             
                 V'S MASK2 = 000077000000K                                          023  LM00035
 25500     +0 00077 0 00000                                                                                             
                 V'S MASK3 = 000000777777K                                          024  LM00036
 25501     +0 00000 7 77777                                                                                             
                 V'S MASK4 = 577777777777K                                          025  LM00037
 25502     -1 77777 7 77777                                                                                             
                 V'S MEARAY(0) = 0                                                  026  LM00038
 26633     +0 00000 0 00000                                                                                             
                 V'S MESS1 = $EOF IN PROGRAM CARD INFORMATION, FILE SKIPPED$        027  LM00039
 26634     -0 72524 6 06060    26635     +2 56062 4 23147    26636     -0 57360 2 63143    26637     -1 14421 6 33146   
 26640     +2 46031 4 52646    26641     +2 14460 2 32151    26642     -2 04751 4 62751    26643     +2 54626 6 03145   
                 V'S MESS2 = $COMMAND FORM IS 'PRELOD NAME1 -'NOLIST'- -'COMB'      028  LM00040
                1-'$,777777777777K                                                  028  LM00041
 26644     -3 77777 7 77777    26645     -0 01460 6 06060    26646     +1 42346 4 42214    26647     -2 26314 4 06040   
 26650     -0 01445 4 64331    26651     -0 52144 2 50160    26652     -1 12543 4 62460    26653     -2 03162 6 01447   
 26654     +2 46026 4 65144    26655     +2 34644 4 42145                                                               
                 V'S MFARAY(0) = 0                                                  029  LM00042
 27022     +0 00000 0 00000                                                                                             
                 V'S MULT(0) = 0                                                    030  LM00043
 27334     +0 00000 0 00000                                                                                             
                 V'S NASTY = 0,777777777777K                                        031  LM00044
 27336     -3 77777 7 77777    27337     +0 00000 0 00000                                                               
                 V'S NA2 = $STOMAP$                                                 032  LM00045
 00026     -2 26346 4 42147                                                                                             
                 V'S N2 = $CTSSLD$                                                  033  LM00046
 27335     +2 36362 6 24324                                                                                             
                 V'S QBSS = $   BSS$                                                034  LM00047
 27401     -2 06060 2 26262                                                                                             
                 V'S QCOMB = $  COMB$                                               035  LM00048
 27402     -2 06023 4 64422                                                                                             
                 V'S PROGSW = 0                                                     036  LM00049
 27400     +0 00000 0 00000                                                                                             
                 V'S SUM1 = 777777000004K,$0   PRELOAD   SUCCESSFUL$,               037  LM00050
                2777777000006K,$      LOWEST COMMON LOCATION  $,0,                  037  LM00051
                3777777000006K,$      HIGHEST PROGRAM LOCATION$,0,                  037  LM00052
                4777777000010K,$      TOTAL NOT USED          $,0,$ DECIMAL$        037  LM00053
 27404     +2 14360 6 06060    27405     -2 02425 2 33144    27406     +0 00000 0 00000    27407     -2 06060 6 06060   
 27410     +2 52460 6 06060    27411     -0 54663 6 06462    27412     -2 34663 2 14360    27413     -2 06060 6 06060   
 27414     -3 77777 0 00010    27415     +0 00000 0 00000    27416     +2 32163 3 14645    27417     -1 12144 6 04346   
 27420     -2 36047 5 14627    27421     +3 03127 3 02562    27422     -2 06060 6 06060    27423     -3 77777 0 00006   
 27424     +0 00000 0 00000    27425     -2 33146 4 56060    27426     -0 56043 4 62321    27427     -2 02346 4 44446   
 27430     -0 34666 2 56263    27431     -2 06060 6 06060    27432     -3 77777 0 00006    27433     +2 56262 2 66443   
 27434     -2 06062 6 42323    27435     +2 54346 2 12460    27436     +0 06060 6 04751    27437     -3 77777 0 00004   
                 V'S SUM1A = $UNSUCC$                                               038  LM00054
 27403     -2 44562 6 42323                                                                                             
                 V'S SUM2 = 777777000004K,$      MISSING FILES ARE$                 039  LM00055
 27440     -2 26021 5 12560    27441     +2 76026 3 14325    27442     -0 43162 6 23145    27443     -2 06060 6 06060   
 27444     -3 77777 0 00004                                                                                             
                 V'S SUM3 = 777777000005K,$      MISSING ENTRY POINTS ARE$          040  LM00056
 27445     -2 36260 2 15125    27446     -3 06047 4 63145    27447     +2 76025 4 56351    27450     -0 43162 6 23145   
 27451     -2 06060 6 06060    27452     -3 77777 0 00005                                                               
                 V'S SUM4 = 777777000006K,$      DUPLICATED ENTRY POINTS ARE$       041  LM00057
 27453     +2 15125 6 06060    27454     -0 63145 6 36260    27455     -0 56351 7 06047    27456     +2 16325 2 46025   
 27457     +2 46447 4 33123    27460     -2 06060 6 06060    27461     -3 77777 0 00006                                 
                 V'S TITLE = 777777000020K,$   STOMAP FOR PRELOD OF $               042  LM00058
                1 ,0,$ SYSTEM $,0,$            $,0,$      $,0,$      $,0,0          042  LM00059
 27464     +0 00000 0 00000    27465     +0 00000 0 00000    27466     -2 06060 6 06060    27467     +0 00000 0 00000   
 27470     -2 06060 6 06060    27471     +0 00000 0 00000    27472     -2 06060 6 06060    27473     -2 06060 6 06060   
 27474     +0 00000 0 00000    27475     -0 46060 6 06060    27476     -2 06270 6 26325    27477     +0 00000 0 00000   
 27500     -0 62460 4 62660    27501     -1 16047 5 12543    27502     -0 42147 6 02646    27503     -2 06060 6 26346   
 27504     -3 77777 0 00020                                                                                             
                 V'S TVSW = 0                                                       043  LM00060
 51160     +0 00000 0 00000                                                                                             
                 V'S PL = 0                                                         044  LM00061
 27342     +0 00000 0 00000                                                                                             
                 V'S TAG = $******$                                                 045  LM00062
 27462     -1 45454 5 45454                                                                                             
                 V'S BLANK = $      $                                               046  LM00063
 00115     -2 06060 6 06060                                                                                             
                 V'S ZERO = 0                                                       047  LM00064
 51161     +0 00000 0 00000                                                                                             
                 FERRTN.(ERR1)                                                      048  LM00065
 51233 TSX +0 07400 4 00014    51234 TXH +3 00000 0 00041                                                               
                 FERRTN.(ERR2)                                                      049  LM00066
 51235 TSX +0 07400 4 00014    51236 TXH +3 00000 0 00042                                                               
                 FERRTN.(ERR3)                                                      050  LM00067
 51237 TSX +0 07400 4 00014    51240 TXH +3 00000 0 00043                                                               
                 FERRTN.(ERR4)                                                      051  LM00068
 51241 TSX +0 07400 4 00014    51242 TXH +3 00000 0 00044                                                               
                 W'R COMARG.(1,N1).E.FENCE                                          052  LM00072
 51243 TSX +0 07400 4 00010    51244 TXH +3 00000 0 51163    51245 TXH +3 00000 0 00027    51246 SUB +0 40200 0 25363   
 51247 TNZ -0 10000 0 51255                                                                                             
                    PRNTP.(MESS2)                                                   053  LM00073
 51250 TSX +0 07400 4 00022    51251 TXH +3 00000 0 26655                                                               
                    CHNCOM.(0)                                                      054  LM00074
 51252 TSX +0 07400 4 00007    51253 TXH +3 00000 0 51162                                                               
                 O'R COMARG.(2) .E. FENCE                                           055  LM00075
 51254 TRA +0 02000 0 51275    51255 TSX +0 07400 4 00010    51256 TXH +3 00000 0 51164    51257 SUB +0 40200 0 25363   
 51260 TNZ -0 10000 0 51263                                                                                             
                   T'O START                                                        056  LM00076
 51261 TRA +0 02000 0 00067                                                                                             
                 O'R COMARG.(2).E.QCOMB .OR. COMARG.(3) .E. QCOMB                   057  LM00077
 51262 TRA +0 02000 0 51275    51263 TSX +0 07400 4 00010    51264 TXH +3 00000 0 51165    51265 SUB +0 40200 0 27402   
 51266 TZE +0 10000 0 51273    51267 TSX +0 07400 4 00010    51270 TXH +3 00000 0 51164    51271 SUB +0 40200 0 27402   
 51272 TNZ -0 10000 0 51275                                                                                             
                    ICOMB = 1                                                       058  LM00078
 51273 CLA +0 50000 0 51163    51274 STO +0 60100 0 25412                                                               
                 E'L                                                                059  LM00079
                 W'R COMARG.(3) .E. $NOLIST$ .OR. COMARG.(2) .E. $NOLIST$,          060  LM00080
                1 ILIST = 1                                                         060  LM00081
 51275 TSX +0 07400 4 00010    51276 TXH +3 00000 0 51164    51277 SUB +0 40200 0 51221    51300 TZE +0 10000 0 51305   
 51301 TSX +0 07400 4 00010    51302 TXH +3 00000 0 51165    51303 SUB +0 40200 0 51221    51304 TNZ -0 10000 0 51307   
 51305 CLA +0 50000 0 51163    51306 STO +0 60100 0 25414                                                               
      START      BFOPEN.($R$,N1,N2,BUFF1(BL),-0,-0,ERR1)                            061  LM00083
 51307 CLS +0 50200 0 51162    51310 STO +0 60100 0 54006    51311 CLS +0 50200 0 51162    51312 STO +0 60100 0 54007   
 51313 CLA +0 50000 0 00116    51314 SUB +0 40200 0 51315    51315 TXH +3 00000 0 00777    51316 STA +0 62100 0 51323   
 51317 TSX +0 07400 4 00003    51320 TXH +3 00000 0 51222    51321 TXH +3 00000 0 00027    51322 TXH +3 00000 0 27335   
 51323 TXH +3 00000 0 00000    51324 TXH +3 00000 0 54007    51325 TXH +3 00000 0 54006    51326 TXH +3 00000 0 00041   
      READ1      BFREAD.(N1,N2,A(14)...14,EOF1,EOFCT,ERR1)                          062  LM00087
 51327 TSX +0 07400 4 00004    51330 TXH +3 00000 0 00027    51331 TXH +3 00000 0 27335    51332 TIX +2 51177 0 00072   
 51333 TXH +3 00000 0 00034    51334 TXH +3 00000 0 02561    51335 TXH +3 00000 0 00041                                 
                 W'R (A(14) .E. TAG) .OR. (A(14) .E. $      $), T'O READ1           063  LM00088
 51336 CLA +0 50000 0 00072    51337 SUB +0 40200 0 51223    51340 TZE +0 10000 0 51344    51341 CLA +0 50000 0 00072   
 51342 SUB +0 40200 0 27462    51343 TNZ -0 10000 0 51345    51344 TRA +0 02000 0 00064                                 
                 BFOPEN.($R$,A(14),QBSS,BUFF2(BL),-0,-0,ERR2)                       064  LM00089
 51345 CLS +0 50200 0 51162    51346 STO +0 60100 0 54007    51347 CLS +0 50200 0 51162    51350 STO +0 60100 0 54006   
 51351 CLA +0 50000 0 00116    51352 SUB +0 40200 0 51353    51353 TXH +3 00000 0 01660    51354 STA +0 62100 0 51361   
 51355 TSX +0 07400 4 00003    51356 TXH +3 00000 0 51222    51357 TXH +3 00000 0 00072    51360 TXH +3 00000 0 27401   
 51361 TXH +3 00000 0 00000    51362 TXH +3 00000 0 54006    51363 TXH +3 00000 0 54007    51364 TXH +3 00000 0 00042   
      READ2      BFREAD.(A(14),QBSS,PROG(28)...28,EOF2,EOFCT,ERR2)                  065  LM00093
 51365 TSX +0 07400 4 00004    51366 TXH +3 00000 0 00072    51367 TXH +3 00000 0 27401    51370 TIX +2 51210 0 27343   
 51371 TXH +3 00000 0 00035    51372 TXH +3 00000 0 02561    51373 TXH +3 00000 0 00042                                 
      R2         W'R (PROG(28) .A. MASK1) .E. 4005K8                                066  LM00094
 51374 CAL -0 50000 0 27343    51375 ANA -0 32000 0 25477    51376 SLW +0 60200 0 54007    51377 CLA +0 50000 0 54007   
 51400 SUB +0 40200 0 51220    51401 TNZ -0 10000 0 51652                                                               
                   NW = (PROG(28) .A. MASK2) .RS. 18                                067  LM00095
 51402 CAL -0 50000 0 27343    51403 ANA -0 32000 0 25500    51404 SLW +0 60200 0 54007    51405 CAL -0 50000 0 51203   
 51406 STA +0 62100 0 51410    51407 CAL -0 50000 0 54007    51410 LGR -0 76500 0 00000    51411 SLW +0 60200 0 27341   
                   K = 26                                                           068  LM00096
 51412 CLA +0 50000 0 51206    51413 STO +0 60100 0 25421                                                               
                   W'R PROGSW .E. 1, T'O LTOP1                                      069  LM00097
 51414 CLA +0 50000 0 27400    51415 SUB +0 40200 0 51163    51416 TNZ -0 10000 0 51420    51417 TRA +0 02000 0 00052   
                   NW = NW-2                                                        070  LM00098
 51420 CLA +0 50000 0 27341    51421 SUB +0 40200 0 51164    51422 STO +0 60100 0 27341                                 
                   K = K-2                                                          071  LM00099
 51423 CLA +0 50000 0 25421    51424 SUB +0 40200 0 51164    51425 STO +0 60100 0 25421                                 
                   PROGSW = 1                                                       072  LM00100
 51426 CLA +0 50000 0 51163    51427 STO +0 60100 0 27400                                                               
                   LPOINT = LPOINT + PL                                             073  LM00101
 51430 CLA +0 50000 0 25476    51431 ADD +0 40000 0 27342    51432 STO +0 60100 0 25476                                 
                 TEMP = (PROG(25) .A. 4K11) .RS. 3                                  074  LM00102
 51433 CAL -0 50000 0 27346    51434 ANA -0 32000 0 51217    51435 SLW +0 60200 0 54007    51436 CAL -0 50000 0 51165   
 51437 STA +0 62100 0 51441    51440 CAL -0 50000 0 54007    51441 LGR -0 76500 0 00000    51442 SLW +0 60200 0 27463   
                 W'R TEMP .NE. 0, LPOINT = 2*((LPOINT+1)/2)                         075  LM00103
 51443 CLA +0 50000 0 27463    51444 SUB +0 40200 0 51162    51445 TZE +0 10000 0 51454    51446 CLA +0 50000 0 25476   
 51447 ADD +0 40000 0 51163    51450 LRS +0 76500 0 00043    51451 DVP +0 22100 0 51164    51452 MPY +0 20000 0 51164   
 51453 STQ -0 60000 0 25476                                                                                             
                   PL = PROG(26).A.MASK3                                            076  LM00107
 51454 CAL -0 50000 0 27345    51455 ANA -0 32000 0 25501    51456 SLW +0 60200 0 27342                                 
                   TVL = PROG(26) .RS. 18                                           077  LM00108
 51457 CAL -0 50000 0 51203    51460 STA +0 62100 0 51462    51461 CAL -0 50000 0 27345    51462 LGR -0 76500 0 00000   
 51463 SLW +0 60200 0 51157                                                                                             
                   EPARAY(JE,3) = PROG(25) .A. 377777777777K                        078  LM00109
 51464 CAL -0 50000 0 27346    51465 ANA -0 32000 0 51216    51466 SLW +0 60200 0 54007    51467 LDQ +0 56000 0 51165   
 51470 CLA +0 50000 0 25416    51471 TSX +0 07400 4 00001    51472 TXH +3 02555 0 25362    51473 PAX +0 73400 1 00000   
 51474 CLA +0 50000 0 54007    51475 STO +0 60100 1 25362                                                               
                 W'R (EPARAY(JE,3).NE.0).AND.(EPARAY(JE,3).L.LCOM),                 079  LM00110
                1LCOM = EPARAY(JE,3)                                                079  LM00111
 51476 LDQ +0 56000 0 51165    51477 CLA +0 50000 0 25416    51500 TSX +0 07400 4 00001    51501 TXH +3 02555 0 25362   
 51502 PAX +0 73400 1 00000    51503 CLA +0 50000 1 25362    51504 SUB +0 40200 0 25432    51505 TZE +0 10000 0 51526   
 51506 TPL +0 12000 0 51526    51507 LDQ +0 56000 0 51165    51510 CLA +0 50000 0 25416    51511 TSX +0 07400 4 00001   
 51512 TXH +3 02555 0 25362    51513 PAX +0 73400 1 00000    51514 CLA +0 50000 1 25362    51515 SUB +0 40200 0 51162   
 51516 TZE +0 10000 0 51526    51517 LDQ +0 56000 0 51165    51520 CLA +0 50000 0 25416    51521 TSX +0 07400 4 00001   
 51522 TXH +3 02555 0 25362    51523 PAX +0 73400 2 00000    51524 CLA +0 50000 2 25362    51525 STO +0 60100 0 25432   
                   EPARAY(JE,0) = A(14)                                             080  LM00112
 51526 LDQ +0 56000 0 51162    51527 CLA +0 50000 0 25416    51530 TSX +0 07400 4 00001    51531 TXH +3 02555 0 25362   
 51532 PAX +0 73400 1 00000    51533 CLA +0 50000 0 00072    51534 STO +0 60100 1 25362                                 
                   EPARAY(JE,1) = OCABC.(LPOINT)                                    081  LM00113
 51535 TSX +0 07400 4 00020    51536 TXH +3 00000 0 25476    51537 STO +0 60100 0 54007    51540 LDQ +0 56000 0 51163   
 51541 CLA +0 50000 0 25416    51542 TSX +0 07400 4 00001    51543 TXH +3 02555 0 25362    51544 PAX +0 73400 1 00000   
 51545 CLA +0 50000 0 54007    51546 STO +0 60100 1 25362                                                               
                   EPARAY(JE,2) = PL                                                082  LM00114
 51547 LDQ +0 56000 0 51164    51550 CLA +0 50000 0 25416    51551 TSX +0 07400 4 00001    51552 TXH +3 02555 0 25362   
 51553 PAX +0 73400 1 00000    51554 CLA +0 50000 0 27342    51555 STO +0 60100 1 25362                                 
                   EPARAY(JE,4) = TAG                                               083  LM00115
 51556 LDQ +0 56000 0 51166    51557 CLA +0 50000 0 25416    51560 TSX +0 07400 4 00001    51561 TXH +3 02555 0 25362   
 51562 PAX +0 73400 1 00000    51563 CLA +0 50000 0 27462    51564 STO +0 60100 1 25362                                 
                   JE =JE+1                                                         084  LM00116
 51565 CLA +0 50000 0 25416    51566 ADD +0 40000 0 51163    51567 STO +0 60100 0 25416                                 
      LTOP1        T'H LOOP1, FOR ICNT = NW,-2,ICNT.LE.0                            085  LM00117
 51570 CLA +0 50000 0 27341    51571 STO +0 60100 0 25411    51572 TRA +0 02000 0 51576    51573 CLS +0 50200 0 51164   
 51574 ADD +0 40000 0 25411    51575 STO +0 60100 0 25411    51576 CLA +0 50000 0 25411    51577 SUB +0 40200 0 51162   
 51600 TZE +0 10000 0 51651    51601 TMI -0 12000 0 51651                                                               
                     EPARAY(JE,0) = PROG(K)                                         086  LM00118
 51602 LDQ +0 56000 0 51162    51603 CLA +0 50000 0 25416    51604 TSX +0 07400 4 00001    51605 TXH +3 02555 0 25362   
 51606 PAX +0 73400 1 00000    51607 LXA +0 53400 2 25421    51610 CLA +0 50000 2 27377    51611 STO +0 60100 1 25362   
                     EPARAY(JE,1) = OCABC.(.ABS.(PROG(K-1)) + LPOINT)               087  LM00119
 51612 CLA +0 50000 0 25421    51613 SUB +0 40200 0 51163    51614 PAX +0 73400 2 00000    51615 CLA +0 50000 2 27377   
 51616 SSP +0 76000 0 00003    51617 ADD +0 40000 0 25476    51620 STO +0 60100 0 54007    51621 TSX +0 07400 4 00020   
 51622 TXH +3 00000 0 54007    51623 STO +0 60100 0 54007    51624 LDQ +0 56000 0 51163    51625 CLA +0 50000 0 25416   
 51626 TSX +0 07400 4 00001    51627 TXH +3 02555 0 25362    51630 PAX +0 73400 1 00000    51631 CLA +0 50000 0 54007   
 51632 STO +0 60100 1 25362                                                                                             
                   EPARAY(JE,2) = 3                                                 088  LM00120
 51633 LDQ +0 56000 0 51164    51634 CLA +0 50000 0 25416    51635 TSX +0 07400 4 00001    51636 TXH +3 02555 0 25362   
 51637 PAX +0 73400 1 00000    51640 CLA +0 50000 0 51165    51641 STO +0 60100 1 25362                                 
                     K = K-2                                                        089  LM00121
 51642 CLA +0 50000 0 25421    51643 SUB +0 40200 0 51164    51644 STO +0 60100 0 25421                                 
      LOOP1          JE = JE + 1                                                    090  LM00122
 51645 CLA +0 50000 0 25416    51646 ADD +0 40000 0 51163    51647 STO +0 60100 0 25416    51650 TRA +0 02000 0 51573   
                   T'O READ2                                                        091  LM00123
 51651 TRA +0 02000 0 00065                                                                                             
                   E'L                                                              092  LM00124
                 W'R TVSW .E. 1, T'O LTOP2                                          093  LM00128
 51652 CLA +0 50000 0 51160    51653 SUB +0 40200 0 51163    51654 TNZ -0 10000 0 51656    51655 TRA +0 02000 0 00053   
                 TVSW =1                                                            094  LM00129
 51656 CLA +0 50000 0 51163    51657 STO +0 60100 0 51160                                                               
                 JT = (JT/50 + 1) * 50                                              095  LM00130
 51660 LDQ +0 56000 0 25420    51661 PXD -0 75400 0 00000    51662 LLS +0 76300 0 00000    51663 DVP +0 22100 0 51211   
 51664 XCA +0 13100 0 00000    51665 ADD +0 40000 0 51163    51666 XCA +0 13100 0 00000    51667 MPY +0 20000 0 51211   
 51670 STQ -0 60000 0 25420                                                                                             
                 TVARAY(JT) = A(14)                                                 096  LM00131
 51671 LXA +0 53400 1 25420    51672 CLA +0 50000 0 00072    51673 STO +0 60100 1 51156                                 
                 JT = JT + 1                                                        097  LM00132
 51674 CLA +0 50000 0 25420    51675 ADD +0 40000 0 51163    51676 STO +0 60100 0 25420                                 
      LTOP2      K = 24                                                             098  LM00133
 51677 CLA +0 50000 0 51205    51700 STO +0 60100 0 25421                                                               
                 IC = 20                                                            099  LM00134
 51701 CLA +0 50000 0 51204    51702 STO +0 60100 0 25413                                                               
                 W'R TVL.L.20, IC = TVL                                             100  LM00135
 51703 CLA +0 50000 0 51157    51704 SUB +0 40200 0 51204    51705 TZE +0 10000 0 51711    51706 TPL +0 12000 0 51711   
 51707 CLA +0 50000 0 51157    51710 STO +0 60100 0 25413                                                               
                 T'H LOOP2, FOR ICNT = IC, -1, ICNT .E. 0                           101  LM00136
 51711 CLA +0 50000 0 25413    51712 STO +0 60100 0 25411    51713 TRA +0 02000 0 51717    51714 CLS +0 50200 0 51163   
 51715 ADD +0 40000 0 25411    51716 STO +0 60100 0 25411    51717 CLA +0 50000 0 25411    51720 SUB +0 40200 0 51162   
 51721 TZE +0 10000 0 51735                                                                                             
                   TVARAY(JT) = PROG(K)                                             102  LM00137
 51722 LXA +0 53400 1 25420    51723 LXA +0 53400 2 25421    51724 CLA +0 50000 2 27377    51725 STO +0 60100 1 51156   
                   K = K - 1                                                        103  LM00138
 51726 CLA +0 50000 0 25421    51727 SUB +0 40200 0 51163    51730 STO +0 60100 0 25421                                 
      LOOP2        JT = JT + 1                                                      104  LM00139
 51731 CLA +0 50000 0 25420    51732 ADD +0 40000 0 51163    51733 STO +0 60100 0 25420    51734 TRA +0 02000 0 51714   
                 W'R TVL .G. 20                                                     105  LM00140
 51735 CLA +0 50000 0 51157    51736 SUB +0 40200 0 51204    51737 TZE +0 10000 0 51746    51740 TMI -0 12000 0 51746   
                   TVL = TVL - 20                                                   106  LM00141
 51741 CLA +0 50000 0 51157    51742 SUB +0 40200 0 51204    51743 STO +0 60100 0 51157                                 
                   T'O READ2                                                        107  LM00142
 51744 TRA +0 02000 0 00065                                                                                             
                 O'E                                                                108  LM00143
 51745 TRA +0 02000 0 51753                                                                                             
                   TVARAY(JT) = FENCE                                               109  LM00144
 51746 LXA +0 53400 1 25420    51747 CLA +0 50000 0 25363    51750 STO +0 60100 1 51156                                 
                   TVSW = 0                                                         110  LM00145
 51751 CLA +0 50000 0 51162    51752 STO +0 60100 0 51160                                                               
                 E'L                                                                111  LM00146
                 PROGSW = 0                                                         112  LM00147
 51753 CLA +0 50000 0 51162    51754 STO +0 60100 0 27400                                                               
                 W'R ICOMB .E. 0                                                    113  LM00148
 51755 CLA +0 50000 0 25412    51756 SUB +0 40200 0 51162    51757 TNZ -0 10000 0 51765                                 
                   BFCLOS.(A(14),QBSS,READ1)                                        114  LM00149
 51760 TSX +0 07400 4 00002    51761 TXH +3 00000 0 00072    51762 TXH +3 00000 0 27401    51763 TXH +3 00000 0 00064   
                   T'O READ1                                                        115  LM00150
 51764 TRA +0 02000 0 00064                                                                                             
                 E'L                                                                116  LM00151
      SKIP       BFREAD.(A(14),QBSS,PROG(28)...28,EOF3,EOFCT,ERR3)                  117  LM00155
 51765 TSX +0 07400 4 00004    51766 TXH +3 00000 0 00072    51767 TXH +3 00000 0 27401    51770 TIX +2 51210 0 27343   
 51771 TXH +3 00000 0 00036    51772 TXH +3 00000 0 02561    51773 TXH +3 00000 0 00043                                 
                 W'R PROG(28) .A. MASK1 .E. 4005K8, T'O R2                          118  LM00156
 51774 CAL -0 50000 0 27343    51775 ANA -0 32000 0 25477    51776 SLW +0 60200 0 54007    51777 CLA +0 50000 0 54007   
 52000 SUB +0 40200 0 51220    52001 TNZ -0 10000 0 52003    52002 TRA +0 02000 0 00063                                 
                 T'O SKIP                                                           119  LM00157
 52003 TRA +0 02000 0 00066                                                                                             
      EOF3       BFCLOS.(A(14),QBSS,READ1)                                          120  LM00158
 52004 TSX +0 07400 4 00002    52005 TXH +3 00000 0 00072    52006 TXH +3 00000 0 27401    52007 TXH +3 00000 0 00064   
                 T'O READ1                                                          121  LM00159
 52010 TRA +0 02000 0 00064                                                                                             
      EOF1       BFCLOS.(N1,N2,EOF1A)                                               122  LM00164
 52011 TSX +0 07400 4 00002    52012 TXH +3 00000 0 00027    52013 TXH +3 00000 0 27335    52014 TXH +3 00000 0 00033   
      EOF1A      HCORE = LPOINT + PL                                                123  LM00165
 52015 CLA +0 50000 0 25476    52016 ADD +0 40000 0 27342    52017 STO +0 60100 0 25365                                 
                 JESAVE = JE                                                        124  LM00166
 52020 CLA +0 50000 0 25416    52021 STO +0 60100 0 25417                                                               
                 W'R JT .L. 0                                                       125  LM00167
 52022 CLA +0 50000 0 25420    52023 SUB +0 40200 0 51162    52024 TZE +0 10000 0 52033    52025 TPL +0 12000 0 52033   
                   TVARAY(1) = FENCE                                                126  LM00168
 52026 CLA +0 50000 0 25363    52027 STO +0 60100 0 51155                                                               
                   TVARAY(2) = FENCE                                                127  LM00169
 52030 CLA +0 50000 0 25363    52031 STO +0 60100 0 51154                                                               
                   T'O PART2                                                        128  LM00170
 52032 TRA +0 02000 0 00062                                                                                             
                 E'L                                                                129  LM00171
                 TVARAY(JT+1) = FENCE                                               130  LM00172
 52033 CLA +0 50000 0 25420    52034 ADD +0 40000 0 51163    52035 PAX +0 73400 1 00000    52036 CLA +0 50000 0 25363   
 52037 STO +0 60100 1 51156                                                                                             
                 JT = - 50                                                          131  LM00173
 52040 CLS +0 50200 0 51211    52041 STO +0 60100 0 25420                                                               
                 T'O PART2                                                          132  LM00174
 52042 TRA +0 02000 0 00062                                                                                             
      EOF2       PRNTP.(MESS1)                                                      133  LM00178
 52043 TSX +0 07400 4 00022    52044 TXH +3 00000 0 26643                                                               
                 T'O ER2A                                                           134  LM00179
 52045 TRA +0 02000 0 00037                                                                                             
      ERR1       PRNTER.                                                            135  LM00180
 52046 TSX +0 07400 4 00021                                                                                             
                 BFCLOS.($ALL$,-0,ERRX)                                             136  LM00181
 52047 CLS +0 50200 0 51162    52050 STO +0 60100 0 54007    52051 TSX +0 07400 4 00002    52052 TXH +3 00000 0 51213   
 52053 TXH +3 00000 0 54007    52054 TXH +3 00000 0 00045                                                               
      ERRX       CHNCOM.(0)                                                         137  LM00182
 52055 TSX +0 07400 4 00007    52056 TXH +3 00000 0 51162                                                               
      ERR2       PRNTER.                                                            138  LM00183
 52057 TSX +0 07400 4 00021                                                                                             
      ER2A       BFCLOS.(A(14),QBSS,ER2B)                                           139  LM00184
 52060 TSX +0 07400 4 00002    52061 TXH +3 00000 0 00072    52062 TXH +3 00000 0 27401    52063 TXH +3 00000 0 00040   
      ER2B       MFARAY = MFARAY + 1                                                140  LM00185
 52064 CLA +0 50000 0 27022    52065 ADD +0 40000 0 51163    52066 STO +0 60100 0 27022                                 
                 MFARAY(MFARAY) = A(14)                                             141  LM00186
 52067 LXA +0 53400 1 27022    52070 CLA +0 50000 0 00072    52071 STO +0 60100 1 27022                                 
                 T'O READ1                                                          142  LM00187
 52072 TRA +0 02000 0 00064                                                                                             
      ERR3       PRNTER.                                                            143  LM00188
 52073 TSX +0 07400 4 00021                                                                                             
                 BFCLOS. (A(14),QBSS,READ1)                                         144  LM00189
 52074 TSX +0 07400 4 00002    52075 TXH +3 00000 0 00072    52076 TXH +3 00000 0 27401    52077 TXH +3 00000 0 00064   
                 T'O READ1                                                          145  LM00190
 52100 TRA +0 02000 0 00064                                                                                             
      PART2      JT = (JT/50 + 1)*50                                                146  LM00197
 52101 LDQ +0 56000 0 25420    52102 PXD -0 75400 0 00000    52103 LLS +0 76300 0 00000    52104 DVP +0 22100 0 51211   
 52105 XCA +0 13100 0 00000    52106 ADD +0 40000 0 51163    52107 XCA +0 13100 0 00000    52110 MPY +0 20000 0 51211   
 52111 STQ -0 60000 0 25420                                                                                             
                 MODNAM = TVARAY(JT)                                                147  LM00198
 52112 LXA +0 53400 2 25420    52113 CLA +0 50000 2 51156    52114 STO +0 60100 0 27023                                 
      MNAM       JT = JT +1                                                         148  LM00199
 52115 CLA +0 50000 0 25420    52116 ADD +0 40000 0 51163    52117 STO +0 60100 0 25420                                 
                 W'R TVARAY(JT) .NE. FENCE, T'O LTOP3                               149  LM00200
 52120 LXA +0 53400 1 25420    52121 CLA +0 50000 1 51156    52122 SUB +0 40200 0 25363    52123 TZE +0 10000 0 52125   
 52124 TRA +0 02000 0 00054                                                                                             
                 W'R TVARAY(JT+1) .E. FENCE, T'O DUPCK                              150  LM00201
 52125 CLA +0 50000 0 25420    52126 ADD +0 40000 0 51163    52127 PAX +0 73400 1 00000    52130 CLA +0 50000 1 51156   
 52131 SUB +0 40200 0 25363    52132 TNZ -0 10000 0 52134    52133 TRA +0 02000 0 00030                                 
                 T'O PART2                                                          151  LM00202
 52134 TRA +0 02000 0 00062                                                                                             
      LTOP3      T'H LOOP3, FOR JE=1,1, JE.GE.JESAVE                                152  LM00203
 52135 CLA +0 50000 0 51163    52136 STO +0 60100 0 25416    52137 TRA +0 02000 0 52143    52140 CLA +0 50000 0 25416   
 52141 ADD +0 40000 0 51163    52142 STO +0 60100 0 25416    52143 CLA +0 50000 0 25416    52144 SUB +0 40200 0 25417   
 52145 TZE +0 10000 0 52276    52146 TPL +0 12000 0 52276                                                               
                   W'R EPARAY(JE,4) .E. TAG                                         153  LM00204
 52147 LDQ +0 56000 0 51166    52150 CLA +0 50000 0 25416    52151 TSX +0 07400 4 00001    52152 TXH +3 02555 0 25362   
 52153 PAX +0 73400 1 00000    52154 CLA +0 50000 1 25362    52155 SUB +0 40200 0 27462    52156 TNZ -0 10000 0 52167   
                     FILEN = EPARAY(JE,0)                                           154  LM00205
 52157 LDQ +0 56000 0 51162    52160 CLA +0 50000 0 25416    52161 TSX +0 07400 4 00001    52162 TXH +3 02555 0 25362   
 52163 PAX +0 73400 2 00000    52164 CLA +0 50000 2 25362    52165 STO +0 60100 0 25364                                 
                     T'O LOOP3                                                      155  LM00206
 52166 TRA +0 02000 0 00046                                                                                             
                   E'L                                                              156  LM00207
                   W'R TVARAY(JT) .NE. EPARAY(JE,0), T'O LOOP3                      157  LM00208
 52167 LDQ +0 56000 0 51162    52170 CLA +0 50000 0 25416    52171 TSX +0 07400 4 00001    52172 TXH +3 02555 0 25362   
 52173 LXA +0 53400 1 25420    52174 PAX +0 73400 2 00000    52175 CLA +0 50000 1 51156    52176 SUB +0 40200 2 25362   
 52177 TZE +0 10000 0 52201    52200 TRA +0 02000 0 00046                                                               
                   TV1(JT,0) = FILEN                                                158  LM00209
 52201 LDQ +0 56000 0 51162    52202 CLA +0 50000 0 25420    52203 TSX +0 07400 4 00001    52204 TXH +3 02560 0 43265   
 52205 PAX +0 73400 1 00000    52206 CLA +0 50000 0 25364    52207 STO +0 60100 1 43265                                 
                   TV1(JT,1) = EPARAY(JE,1)                                         159  LM00210
 52210 LDQ +0 56000 0 51163    52211 CLA +0 50000 0 25416    52212 TSX +0 07400 4 00001    52213 TXH +3 02555 0 25362   
 52214 STO +0 60100 0 54007    52215 LDQ +0 56000 0 51163    52216 CLA +0 50000 0 25420    52217 TSX +0 07400 4 00001   
 52220 TXH +3 02560 0 43265    52221 PAX +0 73400 1 00000    52222 LXA +0 53400 2 54007    52223 CLA +0 50000 2 25362   
 52224 STO +0 60100 1 43265                                                                                             
                   W'R EPARAY(JE,2) .G. 14, T'O MNAM                                160  LM00211
 52225 LDQ +0 56000 0 51164    52226 CLA +0 50000 0 25416    52227 TSX +0 07400 4 00001    52230 TXH +3 02555 0 25362   
 52231 PAX +0 73400 1 00000    52232 CLA +0 50000 1 25362    52233 SUB +0 40200 0 51177    52234 TZE +0 10000 0 52237   
 52235 TMI -0 12000 0 52237    52236 TRA +0 02000 0 00060                                                               
                   EPARAY(JE,EPARAY(JE,2)) = MODNAM                                 161  LM00212
 52237 LDQ +0 56000 0 51164    52240 CLA +0 50000 0 25416    52241 TSX +0 07400 4 00001    52242 TXH +3 02555 0 25362   
 52243 SUB +0 40200 0 52244    52244 TXH +3 00000 0 25362    52245 STA +0 62100 0 52246    52246 LDQ +0 56000 0 00000   
 52247 CLA +0 50000 0 25416    52250 TSX +0 07400 4 00000    52251 TXH +3 02555 0 25362    52252 PAX +0 73400 1 00000   
 52253 CLA +0 50000 0 27023    52254 STO +0 60100 1 25362                                                               
                   EPARAY(JE,2) = EPARAY(JE,2) + 1                                  162  LM00213
 52255 LDQ +0 56000 0 51164    52256 CLA +0 50000 0 25416    52257 TSX +0 07400 4 00001    52260 TXH +3 02555 0 25362   
 52261 PAX +0 73400 1 00000    52262 CLA +0 50000 1 25362    52263 ADD +0 40000 0 51163    52264 STO +0 60100 0 54007   
 52265 LDQ +0 56000 0 51164    52266 CLA +0 50000 0 25416    52267 TSX +0 07400 4 00001    52270 TXH +3 02555 0 25362   
 52271 PAX +0 73400 1 00000    52272 CLA +0 50000 0 54007    52273 STO +0 60100 1 25362                                 
                   T'O MNAM                                                         163  LM00214
 52274 TRA +0 02000 0 00060                                                                                             
      LOOP3      CONTINUE                                                           164  LM00215
 52275 TRA +0 02000 0 52140                                                                                             
                 MEARAY = MEARAY + 1                                                165  LM00216
 52276 CLA +0 50000 0 26633    52277 ADD +0 40000 0 51163    52300 STO +0 60100 0 26633                                 
                 MEARAY(MEARAY) = TVARAY(JT)                                        166  LM00217
 52301 LXA +0 53400 1 26633    52302 LXA +0 53400 2 25420    52303 CLA +0 50000 2 51156    52304 STO +0 60100 1 26633   
                 TV1(JT,0) = BLANK                                                  167  LM00218
 52305 LDQ +0 56000 0 51162    52306 CLA +0 50000 0 25420    52307 TSX +0 07400 4 00001    52310 TXH +3 02560 0 43265   
 52311 PAX +0 73400 1 00000    52312 CLA +0 50000 0 00115    52313 STO +0 60100 1 43265                                 
                 TV1(JT,1) = BLANK                                                  168  LM00219
 52314 LDQ +0 56000 0 51163    52315 CLA +0 50000 0 25420    52316 TSX +0 07400 4 00001    52317 TXH +3 02560 0 43265   
 52320 PAX +0 73400 1 00000    52321 CLA +0 50000 0 00115    52322 STO +0 60100 1 43265                                 
                 T'O MNAM                                                           169  LM00220
 52323 TRA +0 02000 0 00060                                                                                             
      DUPCK      T'H LOOP5, FOR JE1 = 1,1,JE1.GE.JESAVE                             170  LM00224
 52324 CLA +0 50000 0 51163    52325 STO +0 60100 0 25415    52326 TRA +0 02000 0 52332    52327 CLA +0 50000 0 25415   
 52330 ADD +0 40000 0 51163    52331 STO +0 60100 0 25415    52332 CLA +0 50000 0 25415    52333 SUB +0 40200 0 25417   
 52334 TZE +0 10000 0 52427    52335 TPL +0 12000 0 52427                                                               
                   W'R EPARAY(JE1,4) .E. TAG, T'O LOOP5                             171  LM00225
 52336 LDQ +0 56000 0 51166    52337 CLA +0 50000 0 25415    52340 TSX +0 07400 4 00001    52341 TXH +3 02555 0 25362   
 52342 PAX +0 73400 1 00000    52343 CLA +0 50000 1 25362    52344 SUB +0 40200 0 27462    52345 TNZ -0 10000 0 52347   
 52346 TRA +0 02000 0 00050                                                                                             
                   T'H LOOP4, FOR JE=JE1+1,1,JE.E.JESAVE                            172  LM00226
 52347 CLA +0 50000 0 25415    52350 ADD +0 40000 0 51163    52351 STO +0 60100 0 25416    52352 TRA +0 02000 0 52356   
 52353 CLA +0 50000 0 25416    52354 ADD +0 40000 0 51163    52355 STO +0 60100 0 25416    52356 CLA +0 50000 0 25416   
 52357 SUB +0 40200 0 25417    52360 TZE +0 10000 0 52426                                                               
                     W'R EPARAY(JE,4) .E. TAG, T'O LOOP4                            173  LM00227
 52361 LDQ +0 56000 0 51166    52362 CLA +0 50000 0 25416    52363 TSX +0 07400 4 00001    52364 TXH +3 02555 0 25362   
 52365 PAX +0 73400 1 00000    52366 CLA +0 50000 1 25362    52367 SUB +0 40200 0 27462    52370 TNZ -0 10000 0 52372   
 52371 TRA +0 02000 0 00047                                                                                             
                     W'R EPARAY(JE1,0) .NE. EPARAY(JE,0), T'O LOOP4                 174  LM00228
 52372 LDQ +0 56000 0 51162    52373 CLA +0 50000 0 25416    52374 TSX +0 07400 4 00001    52375 TXH +3 02555 0 25362   
 52376 STO +0 60100 0 54007    52377 LDQ +0 56000 0 51162    52400 CLA +0 50000 0 25415    52401 TSX +0 07400 4 00001   
 52402 TXH +3 02555 0 25362    52403 PAX +0 73400 1 00000    52404 LXA +0 53400 2 54007    52405 CLA +0 50000 1 25362   
 52406 SUB +0 40200 2 25362    52407 TZE +0 10000 0 52411    52410 TRA +0 02000 0 00047                                 
                     MULT = MULT + 1                                                175  LM00229
 52411 CLA +0 50000 0 27334    52412 ADD +0 40000 0 51163    52413 STO +0 60100 0 27334                                 
                     MULT(MULT) = EPARAY(JE,0)                                      176  LM00230
 52414 LDQ +0 56000 0 51162    52415 CLA +0 50000 0 25416    52416 TSX +0 07400 4 00001    52417 TXH +3 02555 0 25362   
 52420 LXA +0 53400 1 27334    52421 PAX +0 73400 2 00000    52422 CLA +0 50000 2 25362    52423 STO +0 60100 1 27334   
                     T'O LOOP5                                                      177  LM00231
 52424 TRA +0 02000 0 00050                                                                                             
      LOOP4        CONTINUE                                                         178  LM00232
 52425 TRA +0 02000 0 52353                                                                                             
      LOOP5      CONTINUE                                                           179  LM00233
 52426 TRA +0 02000 0 52327                                                                                             
                 EXECUTE DELETE.(FILNAM)                                            180  LM00237
 52427 TSX +0 07400 4 00011    52430 TXH +3 00000 0 00027                                                               
                 BFOPEN.($W$,N1,NA2,BUFF1(BL),BUFF2(BL),BUFF3(BL),ERR4)             181  LM00238
 52431 CLA +0 50000 0 00116    52432 SUB +0 40200 0 52433    52433 TXH +3 00000 0 02541    52434 STA +0 62100 0 52453   
 52435 CLA +0 50000 0 00116    52436 SUB +0 40200 0 52437    52437 TXH +3 00000 0 01660    52440 STA +0 62100 0 52452   
 52441 CLA +0 50000 0 00116    52442 SUB +0 40200 0 52443    52443 TXH +3 00000 0 00777    52444 STA +0 62100 0 52451   
 52445 TSX +0 07400 4 00003    52446 TXH +3 00000 0 51224    52447 TXH +3 00000 0 00027    52450 TXH +3 00000 0 00026   
 52451 TXH +3 00000 0 00000    52452 TXH +3 00000 0 00000    52453 TXH +3 00000 0 00000    52454 TXH +3 00000 0 00044   
                 TITLE(8) = N1                                                      182  LM00239
 52455 CLA +0 50000 0 00027    52456 STO +0 60100 0 27474                                                               
                 GETTM.(TITLE(11),TITLE(13))                                        183  LM00240
 52457 TSX +0 07400 4 00015    52460 TXH +3 00000 0 27471    52461 TXH +3 00000 0 27467                                 
                 TITLE(5)=(N1.A.777777000000K).V.000000575757K                      184  LM00241
 52462 CAL -0 50000 0 00027    52463 ANA -0 32000 0 51226    52464 ORA -0 50100 0 51212    52465 SLW +0 60200 0 27477   
                 WHOAMI.(TITLE(16)...2)                                             185  LM00242
 52466 TSX +0 07400 4 00023    52467 TIX +2 51164 0 27464                                                               
                 LINE(LC-15) = TITLE(16)                                            186  LM00243
 52470 CLA +0 50000 0 25433    52471 SUB +0 40200 0 51200    52472 PAX +0 73400 1 00000    52473 CLA +0 50000 0 27464   
 52474 STO +0 60100 1 25475                                                                                             
                 LINE(LC-16) = TITLE(15)                                            187  LM00244
 52475 CLA +0 50000 0 25433    52476 SUB +0 40200 0 51201    52477 PAX +0 73400 1 00000    52500 CLA +0 50000 0 27465   
 52501 STO +0 60100 1 25475                                                                                             
                 T'H LOOP6, FOR IC = 0,1,IC .G. 14                                  188  LM00245
 52502 CLA +0 50000 0 51162    52503 STO +0 60100 0 25413    52504 TRA +0 02000 0 52510    52505 CLA +0 50000 0 25413   
 52506 ADD +0 40000 0 51163    52507 STO +0 60100 0 25413    52510 CLA +0 50000 0 25413    52511 SUB +0 40200 0 51177   
 52512 TZE +0 10000 0 52514    52513 TPL +0 12000 0 52523                                                               
      LOOP6      LINE(LC-IC) = TITLE(IC)                                            189  LM00246
 52514 CLA +0 50000 0 25433    52515 SUB +0 40200 0 25413    52516 PAX +0 73400 1 00000    52517 LXA +0 53400 2 25413   
 52520 CLA +0 50000 2 27504    52521 STO +0 60100 1 25475    52522 TRA +0 02000 0 52505                                 
                 BFWRIT.(N1,NA2,LINE(LC)...17,ERR4)                                 190  LM00247
 52523 CLA +0 50000 0 25433    52524 SUB +0 40200 0 52525    52525 TXH +3 00000 0 25475    52526 STA +0 62100 0 52532   
 52527 TSX +0 07400 4 00005    52530 TXH +3 00000 0 00027    52531 TXH +3 00000 0 00026    52532 TIX +2 51202 0 00000   
 52533 TXH +3 00000 0 00044                                                                                             
                 W'R ILIST .E. 1 .OR. JESAVE .L. 1, T'O SUMERY                      191  LM00248
 52534 CLA +0 50000 0 25417    52535 SUB +0 40200 0 51163    52536 TZE +0 10000 0 52540    52537 TMI -0 12000 0 52543   
 52540 CLA +0 50000 0 25414    52541 SUB +0 40200 0 51163    52542 TNZ -0 10000 0 52544    52543 TRA +0 02000 0 00070   
                 T'H LOOP7, FOR IC = 0,1,IC .G. 11                                  192  LM00249
 52544 CLA +0 50000 0 51162    52545 STO +0 60100 0 25413    52546 TRA +0 02000 0 52552    52547 CLA +0 50000 0 25413   
 52550 ADD +0 40000 0 51163    52551 STO +0 60100 0 25413    52552 CLA +0 50000 0 25413    52553 SUB +0 40200 0 51175   
 52554 TZE +0 10000 0 52556    52555 TPL +0 12000 0 52565                                                               
      LOOP7      LINE(LC-IC) = HEAD(IC)                                             193  LM00250
 52556 CLA +0 50000 0 25433    52557 SUB +0 40200 0 25413    52560 PAX +0 73400 1 00000    52561 LXA +0 53400 2 25413   
 52562 CLA +0 50000 2 25401    52563 STO +0 60100 1 25475    52564 TRA +0 02000 0 52547                                 
                 BFWRIT.(N1,NA2,LINE(LC)...12, ERR4)                                194  LM00251
 52565 CLA +0 50000 0 25433    52566 SUB +0 40200 0 52567    52567 TXH +3 00000 0 25475    52570 STA +0 62100 0 52574   
 52571 TSX +0 07400 4 00005    52572 TXH +3 00000 0 00027    52573 TXH +3 00000 0 00026    52574 TIX +2 51176 0 00000   
 52575 TXH +3 00000 0 00044                                                                                             
                 JT = -50                                                           195  LM00252
 52576 CLS +0 50200 0 51211    52577 STO +0 60100 0 25420                                                               
                 JE = 0                                                             196  LM00253
 52600 CLA +0 50000 0 51162    52601 STO +0 60100 0 25416                                                               
      LTOP8      BFWRIT.(N1,NA2,BLANK3(3)...4,ERR4)                                 197  LM00257
 52602 TSX +0 07400 4 00005    52603 TXH +3 00000 0 00027    52604 TXH +3 00000 0 00026    52605 TIX +2 51166 0 00111   
 52606 TXH +3 00000 0 00044                                                                                             
                 LINE(LC) = 777777000007K                                           198  LM00258
 52607 LXA +0 53400 1 25433    52610 CLA +0 50000 0 51230    52611 STO +0 60100 1 25475                                 
                 LINE(LC-1) = BLANK                                                 199  LM00259
 52612 CLA +0 50000 0 25433    52613 SUB +0 40200 0 51163    52614 PAX +0 73400 1 00000    52615 CLA +0 50000 0 00115   
 52616 STO +0 60100 1 25475                                                                                             
                 LINE(LC-2) = $FILE  $                                              200  LM00260
 52617 CLA +0 50000 0 25433    52620 SUB +0 40200 0 51164    52621 PAX +0 73400 1 00000    52622 CLA +0 50000 0 51215   
 52623 STO +0 60100 1 25475                                                                                             
                 LINE(LC-3) = EPARAY(JE,0)                                          201  LM00261
 52624 LDQ +0 56000 0 51162    52625 CLA +0 50000 0 25416    52626 TSX +0 07400 4 00001    52627 TXH +3 02555 0 25362   
 52630 STO +0 60100 0 54007    52631 CLA +0 50000 0 25433    52632 SUB +0 40200 0 51165    52633 PAX +0 73400 1 00000   
 52634 LXA +0 53400 2 54007    52635 CLA +0 50000 2 25362    52636 STO +0 60100 1 25475                                 
                 LINE(LC-4) = BLANK                                                 202  LM00262
 52637 CLA +0 50000 0 25433    52640 SUB +0 40200 0 51166    52641 PAX +0 73400 1 00000    52642 CLA +0 50000 0 00115   
 52643 STO +0 60100 1 25475                                                                                             
                 LINE(LC-5) = (EPARAY(JE,1))                                        203  LM00263
 52644 LDQ +0 56000 0 51163    52645 CLA +0 50000 0 25416    52646 TSX +0 07400 4 00001    52647 TXH +3 02555 0 25362   
 52650 STO +0 60100 0 54007    52651 CLA +0 50000 0 25433    52652 SUB +0 40200 0 51167    52653 PAX +0 73400 1 00000   
 52654 LXA +0 53400 2 54007    52655 CLA +0 50000 2 25362    52656 STO +0 60100 1 25475                                 
                 LINE(LC-6) = OCABC.(EPARAY(JE,2))                                  204  LM00264
 52657 LDQ +0 56000 0 51164    52660 CLA +0 50000 0 25416    52661 TSX +0 07400 4 00001    52662 TXH +3 02555 0 25362   
 52663 SUB +0 40200 0 52664    52664 TXH +3 00000 0 25362    52665 STA +0 62100 0 52667    52666 TSX +0 07400 4 00020   
 52667 TXH +3 00000 0 00000    52670 STO +0 60100 0 54007    52671 CLA +0 50000 0 25433    52672 SUB +0 40200 0 51170   
 52673 PAX +0 73400 1 00000    52674 CLA +0 50000 0 54007    52675 STO +0 60100 1 25475                                 
                 LINE(LC-7) = OCABC.(EPARAY(JE,3))                                  205  LM00265
 52676 LDQ +0 56000 0 51165    52677 CLA +0 50000 0 25416    52700 TSX +0 07400 4 00001    52701 TXH +3 02555 0 25362   
 52702 SUB +0 40200 0 52703    52703 TXH +3 00000 0 25362    52704 STA +0 62100 0 52706    52705 TSX +0 07400 4 00020   
 52706 TXH +3 00000 0 00000    52707 STO +0 60100 0 54007    52710 CLA +0 50000 0 25433    52711 SUB +0 40200 0 51171   
 52712 PAX +0 73400 1 00000    52713 CLA +0 50000 0 54007    52714 STO +0 60100 1 25475                                 
                 BFWRIT.(N1,NA2,LINE(LC)...8,ERR4)                                  206  LM00266
 52715 CLA +0 50000 0 25433    52716 SUB +0 40200 0 52717    52717 TXH +3 00000 0 25475    52720 STA +0 62100 0 52724   
 52721 TSX +0 07400 4 00005    52722 TXH +3 00000 0 00027    52723 TXH +3 00000 0 00026    52724 TIX +2 51172 0 00000   
 52725 TXH +3 00000 0 00044                                                                                             
                 LINE(LC) = 777777000011K                                           207  LM00270
 52726 LXA +0 53400 1 25433    52727 CLA +0 50000 0 51231    52730 STO +0 60100 1 25475                                 
                 LINE(LC-1) = BLANK                                                 208  LM00271
 52731 CLA +0 50000 0 25433    52732 SUB +0 40200 0 51163    52733 PAX +0 73400 1 00000    52734 CLA +0 50000 0 00115   
 52735 STO +0 60100 1 25475                                                                                             
                 LINE(LC-2) = BLANK                                                 209  LM00272
 52736 CLA +0 50000 0 25433    52737 SUB +0 40200 0 51164    52740 PAX +0 73400 1 00000    52741 CLA +0 50000 0 00115   
 52742 STO +0 60100 1 25475                                                                                             
                 LINE(LC-3) = BLANK                                                 210  LM00273
 52743 CLA +0 50000 0 25433    52744 SUB +0 40200 0 51165    52745 PAX +0 73400 1 00000    52746 CLA +0 50000 0 00115   
 52747 STO +0 60100 1 25475                                                                                             
                 LINE(LC-5) = BLANK                                                 211  LM00274
 52750 CLA +0 50000 0 25433    52751 SUB +0 40200 0 51167    52752 PAX +0 73400 1 00000    52753 CLA +0 50000 0 00115   
 52754 STO +0 60100 1 25475                                                                                             
                 LINE(LC-6) = BLANK                                                 212  LM00275
 52755 CLA +0 50000 0 25433    52756 SUB +0 40200 0 51170    52757 PAX +0 73400 1 00000    52760 CLA +0 50000 0 00115   
 52761 STO +0 60100 1 25475                                                                                             
                 LINE(LC-7) = BLANK                                                 213  LM00276
 52762 CLA +0 50000 0 25433    52763 SUB +0 40200 0 51171    52764 PAX +0 73400 1 00000    52765 CLA +0 50000 0 00115   
 52766 STO +0 60100 1 25475                                                                                             
                 JT = (JT/50+1)*50 + 1                                              214  LM00277
 52767 LDQ +0 56000 0 25420    52770 PXD -0 75400 0 00000    52771 LLS +0 76300 0 00000    52772 DVP +0 22100 0 51211   
 52773 XCA +0 13100 0 00000    52774 ADD +0 40000 0 51163    52775 XCA +0 13100 0 00000    52776 MPY +0 20000 0 51211   
 52777 XCA +0 13100 0 00000    53000 ADD +0 40000 0 51163    53001 STO +0 60100 0 25420                                 
      LTOP9      W'R TVARAY(JT) .E. FENCE, T'O TOP10                                215  LM00278
 53002 LXA +0 53400 1 25420    53003 CLA +0 50000 1 51156    53004 SUB +0 40200 0 25363    53005 TNZ -0 10000 0 53007   
 53006 TRA +0 02000 0 00071                                                                                             
                 LINE(LC-4) = TVARAY(JT)                                            216  LM00279
 53007 CLA +0 50000 0 25433    53010 SUB +0 40200 0 51166    53011 PAX +0 73400 1 00000    53012 LXA +0 53400 2 25420   
 53013 CLA +0 50000 2 51156    53014 STO +0 60100 1 25475                                                               
                 LINE(LC-8) = TV1(JT,0)                                             217  LM00280
 53015 LDQ +0 56000 0 51162    53016 CLA +0 50000 0 25420    53017 TSX +0 07400 4 00001    53020 TXH +3 02560 0 43265   
 53021 STO +0 60100 0 54007    53022 CLA +0 50000 0 25433    53023 SUB +0 40200 0 51172    53024 PAX +0 73400 1 00000   
 53025 LXA +0 53400 2 54007    53026 CLA +0 50000 2 43265    53027 STO +0 60100 1 25475                                 
                 LINE(LC-9) = TV1(JT,1)                                             218  LM00281
 53030 LDQ +0 56000 0 51163    53031 CLA +0 50000 0 25420    53032 TSX +0 07400 4 00001    53033 TXH +3 02560 0 43265   
 53034 STO +0 60100 0 54007    53035 CLA +0 50000 0 25433    53036 SUB +0 40200 0 51173    53037 PAX +0 73400 1 00000   
 53040 LXA +0 53400 2 54007    53041 CLA +0 50000 2 43265    53042 STO +0 60100 1 25475                                 
                 BFWRIT.(N1,NA2,LINE(LC)...10,ERR4)                                 219  LM00282
 53043 CLA +0 50000 0 25433    53044 SUB +0 40200 0 53045    53045 TXH +3 00000 0 25475    53046 STA +0 62100 0 53052   
 53047 TSX +0 07400 4 00005    53050 TXH +3 00000 0 00027    53051 TXH +3 00000 0 00026    53052 TIX +2 51174 0 00000   
 53053 TXH +3 00000 0 00044                                                                                             
                 JT = JT + 1                                                        220  LM00283
 53054 CLA +0 50000 0 25420    53055 ADD +0 40000 0 51163    53056 STO +0 60100 0 25420                                 
                 T'O LTOP9                                                          221  LM00284
 53057 TRA +0 02000 0 00056                                                                                             
      TOP10      LINE(LC-4) = BLANK                                                 222  LM00285
 53060 CLA +0 50000 0 25433    53061 SUB +0 40200 0 51166    53062 PAX +0 73400 1 00000    53063 CLA +0 50000 0 00115   
 53064 STO +0 60100 1 25475                                                                                             
                 LINE(LC-6) = BLANK                                                 223  LM00286
 53065 CLA +0 50000 0 25433    53066 SUB +0 40200 0 51170    53067 PAX +0 73400 1 00000    53070 CLA +0 50000 0 00115   
 53071 STO +0 60100 1 25475                                                                                             
                 LINE(LC-7) = BLANK                                                 224  LM00287
 53072 CLA +0 50000 0 25433    53073 SUB +0 40200 0 51171    53074 PAX +0 73400 1 00000    53075 CLA +0 50000 0 00115   
 53076 STO +0 60100 1 25475                                                                                             
      LTOP10     JE = JE + 1                                                        225  LM00288
 53077 CLA +0 50000 0 25416    53100 ADD +0 40000 0 51163    53101 STO +0 60100 0 25416                                 
                 W'R JE .GE. JESAVE, T'O SUMERY                                     226  LM00293
 53102 CLA +0 50000 0 25416    53103 SUB +0 40200 0 25417    53104 TZE +0 10000 0 53106    53105 TMI -0 12000 0 53107   
 53106 TRA +0 02000 0 00070                                                                                             
                 W'R EPARAY(JE,4) .E. TAG, T'O LTOP8                                227  LM00294
 53107 LDQ +0 56000 0 51166    53110 CLA +0 50000 0 25416    53111 TSX +0 07400 4 00001    53112 TXH +3 02555 0 25362   
 53113 PAX +0 73400 1 00000    53114 CLA +0 50000 1 25362    53115 SUB +0 40200 0 27462    53116 TNZ -0 10000 0 53120   
 53117 TRA +0 02000 0 00055                                                                                             
                 NLC= (2*(EPARAY(JE,2)-3)+7)                                        228  LM00295
 53120 LDQ +0 56000 0 51164    53121 CLA +0 50000 0 25416    53122 TSX +0 07400 4 00001    53123 TXH +3 02555 0 25362   
 53124 PAX +0 73400 1 00000    53125 CLA +0 50000 1 25362    53126 SUB +0 40200 0 51165    53127 XCA +0 13100 0 00000   
 53130 MPY +0 20000 0 51164    53131 XCA +0 13100 0 00000    53132 ADD +0 40000 0 51171    53133 STO +0 60100 0 27340   
                 LINE(LC)= (NLC-1).V.777777K6                                       229  LM00296
 53134 CLA +0 50000 0 27340    53135 SUB +0 40200 0 51163    53136 STO +0 60100 0 54007    53137 CAL -0 50000 0 54007   
 53140 ORA -0 50100 0 51226    53141 LXA +0 53400 1 25433    53142 SLW +0 60200 1 25475                                 
                 LINE(LC-3) = EPARAY(JE,0)                                          230  LM00297
 53143 LDQ +0 56000 0 51162    53144 CLA +0 50000 0 25416    53145 TSX +0 07400 4 00001    53146 TXH +3 02555 0 25362   
 53147 STO +0 60100 0 54007    53150 CLA +0 50000 0 25433    53151 SUB +0 40200 0 51165    53152 PAX +0 73400 1 00000   
 53153 LXA +0 53400 2 54007    53154 CLA +0 50000 2 25362    53155 STO +0 60100 1 25475                                 
                 LINE(LC-5) = (EPARAY(JE,1))                                        231  LM00298
 53156 LDQ +0 56000 0 51163    53157 CLA +0 50000 0 25416    53160 TSX +0 07400 4 00001    53161 TXH +3 02555 0 25362   
 53162 STO +0 60100 0 54007    53163 CLA +0 50000 0 25433    53164 SUB +0 40200 0 51167    53165 PAX +0 73400 1 00000   
 53166 LXA +0 53400 2 54007    53167 CLA +0 50000 2 25362    53170 STO +0 60100 1 25475                                 
                 LINE(LC-7) = BLANK                                                 232  LM00299
 53171 CLA +0 50000 0 25433    53172 SUB +0 40200 0 51171    53173 PAX +0 73400 1 00000    53174 CLA +0 50000 0 00115   
 53175 STO +0 60100 1 25475                                                                                             
                 LCNT = LC - 8                                                      233  LM00300
 53176 CLA +0 50000 0 25433    53177 SUB +0 40200 0 51172    53200 STO +0 60100 0 25431                                 
                 T'H LOOP11, FOR IC = 3,1,IC .E. EPARAY(JE,2)                       234  LM00301
 53201 CLA +0 50000 0 51165    53202 STO +0 60100 0 25413    53203 TRA +0 02000 0 53207    53204 CLA +0 50000 0 25413   
 53205 ADD +0 40000 0 51163    53206 STO +0 60100 0 25413    53207 LDQ +0 56000 0 51164    53210 CLA +0 50000 0 25416   
 53211 TSX +0 07400 4 00001    53212 TXH +3 02555 0 25362    53213 PAX +0 73400 2 00000    53214 CLA +0 50000 0 25413   
 53215 SUB +0 40200 2 25362    53216 TZE +0 10000 0 53240                                                               
                   LINE(LCNT) = EPARAY(JE,IC)                                       235  LM00302
 53217 LDQ +0 56000 0 25413    53220 CLA +0 50000 0 25416    53221 TSX +0 07400 4 00001    53222 TXH +3 02555 0 25362   
 53223 LXA +0 53400 1 25431    53224 PAX +0 73400 2 00000    53225 CLA +0 50000 2 25362    53226 STO +0 60100 1 25475   
                   LINE(LCNT-1) = 735757575757K                                     236  LM00303
 53227 CLA +0 50000 0 25431    53230 SUB +0 40200 0 51163    53231 PAX +0 73400 1 00000    53232 CLA +0 50000 0 51225   
 53233 STO +0 60100 1 25475                                                                                             
      LOOP11     LCNT = LCNT-2                                                      237  LM00304
 53234 CLA +0 50000 0 25431    53235 SUB +0 40200 0 51164    53236 STO +0 60100 0 25431    53237 TRA +0 02000 0 53204   
                 BFWRIT.(N1,NA2,LINE(LC)...NLC,ERR4)                                238  LM00305
 53240 CLA +0 50000 0 25433    53241 SUB +0 40200 0 53242    53242 TXH +3 00000 0 25475    53243 STA +0 62100 0 53247   
 53244 TSX +0 07400 4 00005    53245 TXH +3 00000 0 00027    53246 TXH +3 00000 0 00026    53247 TIX +2 27340 0 00000   
 53250 TXH +3 00000 0 00044                                                                                             
                 T'O LTOP10                                                         239  LM00306
 53251 TRA +0 02000 0 00051                                                                                             
      SUMERY     SUM1(18) = OCABC.(HCORE)                                           240  LM00310
 53252 TSX +0 07400 4 00020    53253 TXH +3 00000 0 25365    53254 STO +0 60100 0 27415                                 
                 SUM1(11) = OCABC.(LCOM)                                            241  LM00311
 53255 TSX +0 07400 4 00020    53256 TXH +3 00000 0 25432    53257 STO +0 60100 0 27424                                 
                 SUM1(25) = BZEL.(DERBC.(LCOM-HCORE))                               242  LM00312
 53260 CLA +0 50000 0 25432    53261 SUB +0 40200 0 25365    53262 STO +0 60100 0 54007    53263 TSX +0 07400 4 00012   
 53264 TXH +3 00000 0 54007    53265 STO +0 60100 0 54007    53266 TSX +0 07400 4 00006    53267 TXH +3 00000 0 54007   
 53270 STO +0 60100 0 27406                                                                                             
                 W'R HCORE.G.LCOM, SUM1(25) =SUM1(25).A.MASK4                       243  LM00313
 53271 CLA +0 50000 0 25365    53272 SUB +0 40200 0 25432    53273 TZE +0 10000 0 53300    53274 TMI -0 12000 0 53300   
 53275 CAL -0 50000 0 27406    53276 ANA -0 32000 0 25502    53277 SLW +0 60200 0 27406                                 
                 HPC(5) = SUM1(18)                                                  244  LM00314
 53300 CLA +0 50000 0 27415    53301 STO +0 60100 0 25403                                                               
                 LCM(5) = SUM1(11)                                                  245  LM00315
 53302 CLA +0 50000 0 27424    53303 STO +0 60100 0 25423                                                               
                 DIFC(5) = SUM1(25)                                                 246  LM00316
 53304 CLA +0 50000 0 27406    53305 STO +0 60100 0 02545                                                               
                 W'R HCORE .L. LCOM .AND. (MEARAY+MFARAY) .E. 0                     247  LM00317
 53306 CLA +0 50000 0 26633    53307 ADD +0 40000 0 27022    53310 SUB +0 40200 0 51162    53311 TNZ -0 10000 0 53366   
 53312 CLA +0 50000 0 25365    53313 SUB +0 40200 0 25432    53314 TZE +0 10000 0 53366    53315 TPL +0 12000 0 53366   
                   T'H LOOP13, FOR IC = 0,1,IC .G. 27                               248  LM00321
 53316 CLA +0 50000 0 51162    53317 STO +0 60100 0 25413    53320 TRA +0 02000 0 53324    53321 CLA +0 50000 0 25413   
 53322 ADD +0 40000 0 51163    53323 STO +0 60100 0 25413    53324 CLA +0 50000 0 25413    53325 SUB +0 40200 0 51207   
 53326 TZE +0 10000 0 53330    53327 TPL +0 12000 0 53337                                                               
      LOOP13       LINE(LC-IC) = SUM1(IC)                                           249  LM00322
 53330 CLA +0 50000 0 25433    53331 SUB +0 40200 0 25413    53332 PAX +0 73400 1 00000    53333 LXA +0 53400 2 25413   
 53334 CLA +0 50000 2 27437    53335 STO +0 60100 1 25475    53336 TRA +0 02000 0 53321                                 
                   BFWRIT.(N1,NA2,LINE(LC)...28,ERR4)                               250  LM00323
 53337 CLA +0 50000 0 25433    53340 SUB +0 40200 0 53341    53341 TXH +3 00000 0 25475    53342 STA +0 62100 0 53346   
 53343 TSX +0 07400 4 00005    53344 TXH +3 00000 0 00027    53345 TXH +3 00000 0 00026    53346 TIX +2 51210 0 00000   
 53347 TXH +3 00000 0 00044                                                                                             
                   PRINT COMMENT $SYSTEM PRELOAD SUCCESSFUL$                        251  LM00324
 53350 TSX +0 07400 4 00016    53351     +0 00000 0 00005    53352     -2 27062 6 32544    53353     -2 04751 2 54346   
 53354     +2 12460 6 26423    53355     +2 32562 6 22664    53356     -0 36060 6 06060                                 
                 PRNTP.(LCM)                                                        252  LM00325
 53357 TSX +0 07400 4 00022    53360 TXH +3 00000 0 25430                                                               
                 PRNTP.(HPC)                                                        253  LM00326
 53361 TSX +0 07400 4 00022    53362 TXH +3 00000 0 25410                                                               
                 PRNTP.(DIFC)                                                       254  LM00327
 53363 TSX +0 07400 4 00022    53364 TXH +3 00000 0 02552                                                               
                   T'O MUCK                                                         255  LM00328
 53365 TRA +0 02000 0 00061                                                                                             
                 E'L                                                                256  LM00329
                 SUM1(3) = SUM1A                                                    257  LM00332
 53366 CLA +0 50000 0 27403    53367 STO +0 60100 0 27434                                                               
                 T'H LOOP14, FOR IC = 0,1,IC .G. 27                                 258  LM00333
 53370 CLA +0 50000 0 51162    53371 STO +0 60100 0 25413    53372 TRA +0 02000 0 53376    53373 CLA +0 50000 0 25413   
 53374 ADD +0 40000 0 51163    53375 STO +0 60100 0 25413    53376 CLA +0 50000 0 25413    53377 SUB +0 40200 0 51207   
 53400 TZE +0 10000 0 53402    53401 TPL +0 12000 0 53411                                                               
      LOOP14     LINE(LC-IC) = SUM1(IC)                                             259  LM00334
 53402 CLA +0 50000 0 25433    53403 SUB +0 40200 0 25413    53404 PAX +0 73400 1 00000    53405 LXA +0 53400 2 25413   
 53406 CLA +0 50000 2 27437    53407 STO +0 60100 1 25475    53410 TRA +0 02000 0 53373                                 
                 BFWRIT.(N1,NA2,LINE(LC)...28, ERR4)                                260  LM00335
 53411 CLA +0 50000 0 25433    53412 SUB +0 40200 0 53413    53413 TXH +3 00000 0 25475    53414 STA +0 62100 0 53420   
 53415 TSX +0 07400 4 00005    53416 TXH +3 00000 0 00027    53417 TXH +3 00000 0 00026    53420 TIX +2 51210 0 00000   
 53421 TXH +3 00000 0 00044                                                                                             
                 PRINT COMMENT $SYSTEM PRELOAD UNSUCCESSFUL$                        261  LM00336
 53422 TSX +0 07400 4 00016    53423     +0 00000 0 00005    53424     -2 27062 6 32544    53425     -2 04751 2 54346   
 53426     +2 12460 6 44562    53427     -2 42323 2 56262    53430     +2 66443 6 06060                                 
                 PRNTP.(LCM)                                                        262  LM00337
 53431 TSX +0 07400 4 00022    53432 TXH +3 00000 0 25430                                                               
                 PRNTP.(HPC)                                                        263  LM00338
 53433 TSX +0 07400 4 00022    53434 TXH +3 00000 0 25410                                                               
                 PRNTP.(DIFC)                                                       264  LM00339
 53435 TSX +0 07400 4 00022    53436 TXH +3 00000 0 02552                                                               
                 W'R MFARAY .E. 0, T'O MECK                                         265  LM00340
 53437 CLA +0 50000 0 27022    53440 SUB +0 40200 0 51162    53441 TNZ -0 10000 0 53443    53442 TRA +0 02000 0 00057   
                 T'H LOOP15, FOR IC = 0,1,IC .G. 4                                  266  LM00344
 53443 CLA +0 50000 0 51162    53444 STO +0 60100 0 25413    53445 TRA +0 02000 0 53451    53446 CLA +0 50000 0 25413   
 53447 ADD +0 40000 0 51163    53450 STO +0 60100 0 25413    53451 CLA +0 50000 0 25413    53452 SUB +0 40200 0 51166   
 53453 TZE +0 10000 0 53455    53454 TPL +0 12000 0 53464                                                               
      LOOP15     LINE(LC-IC) = SUM2(IC)                                             267  LM00345
 53455 CLA +0 50000 0 25433    53456 SUB +0 40200 0 25413    53457 PAX +0 73400 1 00000    53460 LXA +0 53400 2 25413   
 53461 CLA +0 50000 2 27444    53462 STO +0 60100 1 25475    53463 TRA +0 02000 0 53446                                 
                 BFWRIT.(N1,NA2,LINE(LC)...5,ERR4)                                  268  LM00346
 53464 CLA +0 50000 0 25433    53465 SUB +0 40200 0 53466    53466 TXH +3 00000 0 25475    53467 STA +0 62100 0 53473   
 53470 TSX +0 07400 4 00005    53471 TXH +3 00000 0 00027    53472 TXH +3 00000 0 00026    53473 TIX +2 51167 0 00000   
 53474 TXH +3 00000 0 00044                                                                                             
                 PRINT COMMENT $MISSING FILES ARE$                                  269  LM00347
 53475 TSX +0 07400 4 00016    53476     +0 00000 0 00003    53477     -0 43162 6 23145    53500     +2 76026 3 14325   
 53501     -2 26021 5 12560                                                                                             
                 LINE(LC) = 777777000003K                                           270  LM00348
 53502 LXA +0 53400 1 25433    53503 CLA +0 50000 0 51227    53504 STO +0 60100 1 25475                                 
                 LINE(LC-2) = BLANK                                                 271  LM00349
 53505 CLA +0 50000 0 25433    53506 SUB +0 40200 0 51164    53507 PAX +0 73400 1 00000    53510 CLA +0 50000 0 00115   
 53511 STO +0 60100 1 25475                                                                                             
                 T'H LOOP16, FOR IC = 1,1,IC .G. MFARAY                             272  LM00350
 53512 CLA +0 50000 0 51163    53513 STO +0 60100 0 25413    53514 TRA +0 02000 0 53520    53515 CLA +0 50000 0 25413   
 53516 ADD +0 40000 0 51163    53517 STO +0 60100 0 25413    53520 CLA +0 50000 0 25413    53521 SUB +0 40200 0 27022   
 53522 TZE +0 10000 0 53524    53523 TPL +0 12000 0 53550                                                               
                 LINE(LC-3) = MFARAY(IC)                                            273  LM00351
 53524 CLA +0 50000 0 25433    53525 SUB +0 40200 0 51165    53526 PAX +0 73400 1 00000    53527 LXA +0 53400 2 25413   
 53530 CLA +0 50000 2 27022    53531 STO +0 60100 1 25475                                                               
                 NASTY(0) = MFARAY(IC)                                              274  LM00352
 53532 CLA +0 50000 2 27022    53533 STO +0 60100 0 27337                                                               
                 PRNTP.(NASTY)                                                      275  LM00353
 53534 TSX +0 07400 4 00022    53535 TXH +3 00000 0 27337                                                               
      LOOP16     BFWRIT.(N1,NA2,LINE(LC)...4,ERR4)                                  276  LM00354
 53536 CLA +0 50000 0 25433    53537 SUB +0 40200 0 53540    53540 TXH +3 00000 0 25475    53541 STA +0 62100 0 53545   
 53542 TSX +0 07400 4 00005    53543 TXH +3 00000 0 00027    53544 TXH +3 00000 0 00026    53545 TIX +2 51166 0 00000   
 53546 TXH +3 00000 0 00044    53547 TRA +0 02000 0 53515                                                               
      MECK       W'R MEARAY .E. 0, T'O MUCK                                         277  LM00355
 53550 CLA +0 50000 0 26633    53551 SUB +0 40200 0 51162    53552 TNZ -0 10000 0 53554    53553 TRA +0 02000 0 00061   
                 T'H LOOP17, FOR IC = 0,1,IC .G. 5                                  278  LM00359
 53554 CLA +0 50000 0 51162    53555 STO +0 60100 0 25413    53556 TRA +0 02000 0 53562    53557 CLA +0 50000 0 25413   
 53560 ADD +0 40000 0 51163    53561 STO +0 60100 0 25413    53562 CLA +0 50000 0 25413    53563 SUB +0 40200 0 51167   
 53564 TZE +0 10000 0 53566    53565 TPL +0 12000 0 53575                                                               
      LOOP17     LINE(LC-IC) = SUM3(IC)                                             279  LM00360
 53566 CLA +0 50000 0 25433    53567 SUB +0 40200 0 25413    53570 PAX +0 73400 1 00000    53571 LXA +0 53400 2 25413   
 53572 CLA +0 50000 2 27452    53573 STO +0 60100 1 25475    53574 TRA +0 02000 0 53557                                 
                 BFWRIT.(N1,NA2,LINE(LC)...6,ERR4)                                  280  LM00361
 53575 CLA +0 50000 0 25433    53576 SUB +0 40200 0 53577    53577 TXH +3 00000 0 25475    53600 STA +0 62100 0 53604   
 53601 TSX +0 07400 4 00005    53602 TXH +3 00000 0 00027    53603 TXH +3 00000 0 00026    53604 TIX +2 51170 0 00000   
 53605 TXH +3 00000 0 00044                                                                                             
                 PRINT COMMENT $MISSING ENTRY POINTS ARE$                           281  LM00362
 53606 TSX +0 07400 4 00016    53607     +0 00000 0 00004    53610     -0 43162 6 23145    53611     +2 76025 4 56351   
 53612     -3 06047 4 63145    53613     -2 36260 2 15125                                                               
                 LINE(LC) = 777777000003K                                           282  LM00363
 53614 LXA +0 53400 1 25433    53615 CLA +0 50000 0 51227    53616 STO +0 60100 1 25475                                 
                 LINE(LC-2) = BLANK                                                 283  LM00364
 53617 CLA +0 50000 0 25433    53620 SUB +0 40200 0 51164    53621 PAX +0 73400 1 00000    53622 CLA +0 50000 0 00115   
 53623 STO +0 60100 1 25475                                                                                             
                 T'H LOOP18, FOR IC = 1,1,IC .G. MEARAY                             284  LM00365
 53624 CLA +0 50000 0 51163    53625 STO +0 60100 0 25413    53626 TRA +0 02000 0 53632    53627 CLA +0 50000 0 25413   
 53630 ADD +0 40000 0 51163    53631 STO +0 60100 0 25413    53632 CLA +0 50000 0 25413    53633 SUB +0 40200 0 26633   
 53634 TZE +0 10000 0 53636    53635 TPL +0 12000 0 53662                                                               
                 LINE(LC-3) = MEARAY(IC)                                            285  LM00366
 53636 CLA +0 50000 0 25433    53637 SUB +0 40200 0 51165    53640 PAX +0 73400 1 00000    53641 LXA +0 53400 2 25413   
 53642 CLA +0 50000 2 26633    53643 STO +0 60100 1 25475                                                               
                 NASTY(0) = MEARAY(IC)                                              286  LM00367
 53644 CLA +0 50000 2 26633    53645 STO +0 60100 0 27337                                                               
                 PRNTP.(NASTY)                                                      287  LM00368
 53646 TSX +0 07400 4 00022    53647 TXH +3 00000 0 27337                                                               
      LOOP18     BFWRIT. (N1,NA2,LINE(LC)...4,ERR4)                                 288  LM00369
 53650 CLA +0 50000 0 25433    53651 SUB +0 40200 0 53652    53652 TXH +3 00000 0 25475    53653 STA +0 62100 0 53657   
 53654 TSX +0 07400 4 00005    53655 TXH +3 00000 0 00027    53656 TXH +3 00000 0 00026    53657 TIX +2 51166 0 00000   
 53660 TXH +3 00000 0 00044    53661 TRA +0 02000 0 53627                                                               
      MUCK       W'R MULT .E. 0, T'O END                                            289  LM00370
 53662 CLA +0 50000 0 27334    53663 SUB +0 40200 0 51162    53664 TNZ -0 10000 0 53666    53665 TRA +0 02000 0 00032   
                 T'H LOOP19, FOR IC = 0,1,IC .G. 6                                  290  LM00374
 53666 CLA +0 50000 0 51162    53667 STO +0 60100 0 25413    53670 TRA +0 02000 0 53674    53671 CLA +0 50000 0 25413   
 53672 ADD +0 40000 0 51163    53673 STO +0 60100 0 25413    53674 CLA +0 50000 0 25413    53675 SUB +0 40200 0 51170   
 53676 TZE +0 10000 0 53700    53677 TPL +0 12000 0 53707                                                               
      LOOP19     LINE(LC-IC) = SUM4(IC)                                             291  LM00375
 53700 CLA +0 50000 0 25433    53701 SUB +0 40200 0 25413    53702 PAX +0 73400 1 00000    53703 LXA +0 53400 2 25413   
 53704 CLA +0 50000 2 27461    53705 STO +0 60100 1 25475    53706 TRA +0 02000 0 53671                                 
                 BFWRIT.(N1,NA2,LINE(LC)...7,ERR4)                                  292  LM00376
 53707 CLA +0 50000 0 25433    53710 SUB +0 40200 0 53711    53711 TXH +3 00000 0 25475    53712 STA +0 62100 0 53716   
 53713 TSX +0 07400 4 00005    53714 TXH +3 00000 0 00027    53715 TXH +3 00000 0 00026    53716 TIX +2 51171 0 00000   
 53717 TXH +3 00000 0 00044                                                                                             
                 PRINT COMMENT $DUPLICATED ENTRY POINTS ARE$                        293  LM00377
 53720 TSX +0 07400 4 00016    53721     +0 00000 0 00005    53722     +2 46447 4 33123    53723     +2 16325 2 46025   
 53724     -0 56351 7 06047    53725     -0 63145 6 36260    53726     +2 15125 6 06060                                 
                 LINE(LC) = 777777000003K                                           294  LM00378
 53727 LXA +0 53400 1 25433    53730 CLA +0 50000 0 51227    53731 STO +0 60100 1 25475                                 
                 LINE (LC-2) = BLANK                                                295  LM00379
 53732 CLA +0 50000 0 25433    53733 SUB +0 40200 0 51164    53734 PAX +0 73400 1 00000    53735 CLA +0 50000 0 00115   
 53736 STO +0 60100 1 25475                                                                                             
                 T'H LOOP20, FOR IC = 1,1,IC .G. MULT                               296  LM00380
 53737 CLA +0 50000 0 51163    53740 STO +0 60100 0 25413    53741 TRA +0 02000 0 53745    53742 CLA +0 50000 0 25413   
 53743 ADD +0 40000 0 51163    53744 STO +0 60100 0 25413    53745 CLA +0 50000 0 25413    53746 SUB +0 40200 0 27334   
 53747 TZE +0 10000 0 53751    53750 TPL +0 12000 0 53775                                                               
                 LINE(LC-3) = MULT(IC)                                              297  LM00381
 53751 CLA +0 50000 0 25433    53752 SUB +0 40200 0 51165    53753 PAX +0 73400 1 00000    53754 LXA +0 53400 2 25413   
 53755 CLA +0 50000 2 27334    53756 STO +0 60100 1 25475                                                               
                 NASTY(0) = MULT(IC)                                                298  LM00382
 53757 CLA +0 50000 2 27334    53760 STO +0 60100 0 27337                                                               
                 PRNTP.(NASTY)                                                      299  LM00383
 53761 TSX +0 07400 4 00022    53762 TXH +3 00000 0 27337                                                               
      LOOP20     BFWRIT.(N1,NA2,LINE(LC)...4,ERR4)                                  300  LM00384
 53763 CLA +0 50000 0 25433    53764 SUB +0 40200 0 53765    53765 TXH +3 00000 0 25475    53766 STA +0 62100 0 53772   
 53767 TSX +0 07400 4 00005    53770 TXH +3 00000 0 00027    53771 TXH +3 00000 0 00026    53772 TIX +2 51166 0 00000   
 53773 TXH +3 00000 0 00044    53774 TRA +0 02000 0 53742                                                               
                 T'O END                                                            301  LM00385
 53775 TRA +0 02000 0 00032                                                                                             
      ERR4       PRNTER.                                                            302  LM00386
 53776 TSX +0 07400 4 00021                                                                                             
      END        BFCLOS.(N1,NA2,END2)                                               303  LM00387
 53777 TSX +0 07400 4 00002    54000 TXH +3 00000 0 00027    54001 TXH +3 00000 0 00026    54002 TXH +3 00000 0 00031   
      END2       CHNCOM.(0)                                                         304  LM00388
 54003 TSX +0 07400 4 00007    54004 TXH +3 00000 0 51162                                                               
                 E'M                                                                305  LM00389
 54005 TSX +0 07400 4 00013                                                                                             




PUSAVE   BCD 09/20/68 0220.6    2650         00000    
1      ... PUSAV, REDUCE SAVED FILE TO ABS CARDS                                                 PAGE 1     
                  
                  
                  
                              FUNC   MACRO   N,A
                                     TSX     N,4           CALL SUBROUTINE    
                                     ARGF    (A)           GENERATE ARGUMENTS 
                              FUNC   END  
                  
                              ARGF   MACRO   NAMES    
                                     IRP     NAMES    
                                     PAR     NAMES         GENERATE INDIVIDUAL PARAMETERS 
                                     IRP  
                              ARGF   END  
                  
             3 00001 1 60000  PAR    OPSYN   PTH
             2 00017 1 60000  BLK    OPSYN   TIX
                  
                  
        TRANSFER VECTOR 
      00000  222646472545     BFOPEN
      00001  222651252124     BFREAD
      00002  222666513163     BFWRIT
      00003  222623434662     BFCLOS
      00004  222623462425     BFCODE
      00005  272563234644     GETCOM
      00006  242543263143     DELFIL
      00007  272563442544     GETMEM
      00010  622563442544     SETMEM
      00011  233045234644     CHNCOM
      00012  665126436760     WRFLX 
      00013  452567234644     NEXCOM
      00014  242521246060     DEAD  
                  
                       00660  BFSIZ  EQU     432
                  
                                     EXTERN  BFOPEN,BFREAD,BFWRIT,BFCLOS,BFCODE     
                                     EXTERN  GETCOM,DELFIL,GETMEM,SETMEM,CHNCOM,WRFLX,NEXCOM,DEAD     
                  
                  
                  
      00015  0074 00 4 00005         TSX     GETCOM,4      PICK UP NAME OF SAVED FILE     
      00016  0 00000 0 00001                 1             ..     
      00017  0602 00 0 00275         SLW     FLNAM         ..     
                  
      00020  0074 00 4 00006         TSX     DELFIL,4 
      00021                          ARGF    (FLNAM,ABNAM,DELERR,SKIPC)  DELETE OLD 'ABS' FILE  
                  
      00025  0074 00 4 00007  DEL.OK TSX     GETMEM,4      GET CURRENT MEMORY LIMITS
      00026  0621 00 0 00046         STA     B1            FIRST READ BUFFER  
      00027  0361 00 0 00237         ACL     BF            ..     
      00030  0621 00 0 00047         STA     B2            SECOND 
      00031  0361 00 0 00237         ACL     BF            ..     
      00032  0621 00 0 00100         STA     B3            FIRST WRITE BUFFER 
      00033  0621 00 0 00070         STA     SKIPL         AND LOCATION FOR NON-TRANSMIT  
      00034  0361 00 0 00237         ACL     BF            ..     
      00035  0621 00 0 00101         STA     B4            SECOND 
1      ... PUSAV, REDUCE SAVED FILE TO ABS CARDS                                                 PAGE 2     
                  
      00036  0361 00 0 00237         ACL     BF            ..     
      00037  0621 00 0 00102         STA     B5            THIRD  
      00040  0361 00 0 00237         ACL     BF            ..     
      00041  0074 00 4 00010         TSX     SETMEM,4      UP MEMORY LIMIT    
                  
      00042                          FUNC    BFOPEN(=HR,FLNAM,SVNAM)  FIRST PARAMETERS    
      00046  3 00000 0 00000  B1     PAR     **            FIRST BUFFER 
      00047  3 00000 0 00000  B2     PAR     **            SECOND 
      00050                          ARGF    (=-0,OPRD.)    
                  
      00052                          FUNC    BFREAD(FLNAM,SVNAM(MEMBND,,2)ILLEGL,=-0,RD1.)
                  
      00061 -0534 00 4 00303         LXD     MEMBND,4      GET COUNT OF MACHINE CONDITIONS
      00062  1 77777 4 00063         TXI     *+1,4,-1      ONE HAS ALREADY BEEN SKIPPED   
      00063  3 02420 4 00177         TXH     ILLEGL,4,3*BFSIZ  ERROR IF M.C. SECTION TOO LONG   
      00064  0634 00 4 00302         SXA     SKIPC,4       COUNT FOR NON-TRANSMIT READ    
                  
      00065                          FUNC    BFREAD(FLNAM,SVNAM)  
      00070  2 00302 0 00000  SKIPL  BLK     **,,SKIPC     ..     
      00071                          ARGF    (ILLEGL,=-0,RD1.)    
                  
      00074                          FUNC    BFOPEN(=HW,FLNAM,ABNAM)    
      00100  3 00000 0 00000  B3     PAR     **            ..     
      00101  3 00000 0 00000  B4     PAR     ** 
      00102  3 00000 0 00000  B5     PAR     ** 
      00103                          ARGF    (OPNW.)  
                  
      00104  0534 00 1 00303         LXA     MEMBND,1      GET CORE IMAGE WORD COUNT
      00105 -2 00026 1 00117  PUABS1 TNX     PUABS2,1,22   SKIP IF FEWER THAN 22 WORDS LEFT     
                  
      00106                          FUNC    BFREAD(FLNAM,SVNAM(DATA,,22)ILLEGL,=-0,RD1.) 
                  
      00115  0074 00 4 00207         TSX     PUNCH,4       PUNCH THIS CARD    
      00116  0020 00 0 00105         TRA     PUABS1   
                  
      00117  0634 00 1 00302  PUABS2 SXA     SKIPC,1       SAVE COUNT FOR LAST READ 
      00120  0774 00 2 00026         AXT     22,2          ..     
      00121  0600 00 2 00271         STZ     DATA+22,2     CLEAR CARD BUFFER  
      00122  2 00001 2 00121         TIX     *-1,2,1       ..     
                  
      00123                          FUNC    BFREAD(FLNAM,SVNAM)  
      00126  2 00302 0 00243         BLK     DATA,,SKIPC    
      00127                          ARGF    (ILLEGL,=-0,RD1.)    
                  
      00132  0074 00 4 00207         TSX     PUNCH,4       PUNCH LAST CARD    
                  
      00133  0774 00 2 00027         AXT     23,2          CLEAR CARD AREA    
      00134  0600 00 2 00271         STZ     CARD+24,2     ..     
      00135  2 00001 2 00134         TIX     *-1,2,1       ..     
      00136 -0500 00 0 00304         CAL     ILC           SET UP TRANSFER CARD     
      00137 -0320 00 0 00307         ANA     =O77777       .. GET STARTING ADDRESS  
      00140 -0501 00 0 00240         ORA     79PNCH        .. 7-9 PUNCHES     
      00141  0602 00 0 00241         SLW     CARD          .. ILC TO 9-ROW LEFT     
1      ... PUSAV, REDUCE SAVED FILE TO ABS CARDS                                                 PAGE 3     
                  
      00142                          FUNC    BFWRIT(FLNAM,ABNAM(CARD,,28)WR1.)
                  
      00147                          FUNC    BFCLOS(FLNAM,ABNAM,WR2.)   
                  
      00153                          FUNC    BFCLOS(FLNAM,SVNAM,RD2.)   
                  
      00157  0074 00 4 00011         TSX     CHNCOM,4      EXIT TO CTSS OR NEXT COMMAND   
      00160  0 00000 0 00000                 0             .. DEAD STATUS     
                  
                       00161  OPRD.  SYN     *  
                       00161  RD1.   SYN     *  
                       00161  OPNW.  SYN     *  
                       00161  WR1.   SYN     *  
                       00161  WR2.   SYN     *  
                       00161  RD2.   SYN     *  
                  
      00161  0634 00 4 00167  BFERR  SXA     BFX4,4   
      00162                          FUNC    BFCODE() 
      00163  0100 00 0 00174         TZE     GOPRNT   
      00164 -0602 00 0 00301         ORS     BFMES+1  
      00165  0074 00 4 00012         TSX     WRFLX,4  
      00166  0 00002 0 00300                 BFMES,,2 
                  
      00167  0774 00 4 00000  BFX4   AXT     **,4     
      00170  1 00001 4 00305         TXI     DORMNT,4,1     
                  
                                     RMT  
                              DORMNT TIA     =HDORMNT 
                                     RMT  
                  
      00171 -0500 00 0 00302  DELERR CAL     SKIPC    
      00172  0402 00 0 00306         SUB     =5 
      00173 -0120 00 0 00025         TMI     DEL.OK   
                  
      00174 -0500 00 0 00313  GOPRNT CAL     =HPRNTER 
      00175  0560 00 0 00311         LDQ     =O377777777777 
      00176  0074 00 4 00013         TSX     NEXCOM,4 
                  
      00177  0074 00 4 00012  ILLEGL TSX     WRFLX,4  
      00200  0 00005 0 00202                 ILLCOM,,5
      00201  0074 00 4 00014         TSX     DEAD,4        EXIT TO CTSS ON ILLEGAL EOF    
                  
      00202  622165252460     ILLCOM BCI     5,SAVED FILE HAS ILLEGAL FORMAT  
                  
                              *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  
                  
                                             PUNCH ..... COMPUTE CHECKSUM AND WRITE OUT BINARY CARD   
                  
      00207  0634 00 4 00235  PUNCH  SXA     PUNX4,4  
      00210 -0774 00 4 00026         AXC     22,4     
      00211 -0500 00 4 00242  PUN1   CAL     DATA-1,4      CHECK FOR CARD OF ALL ZEROS    
      00212 -0100 00 0 00215         TNZ     PUN2          .. SKIP WHEN NON-ZERO WORD FOUND     
      00213  3 77776 4 00232         TXH     PUN3,4,-2     CHECK FOR END OF CARD    
      00214  1 00001 4 00211         TXI     PUN1,4,1      INCREMENT INDEX, TEST NEXT DATA WORD 
1      ... PUSAV, REDUCE SAVED FILE TO ABS CARDS                                                 PAGE 4     
                  
      00215 -0756 00 4 00000  PUN2   PCD     ,4            WORD COUNT TO AC   
      00216 -0501 00 0 00240         ORA     79PNCH        ADD 7-9 PUNCHES    
      00217  0622 00 0 00241         STD     CARD          ADD TO ORIGIN
      00220 -0500 00 0 00241         CAL     CARD          COMPUTE CHECKSUM FOR CARD
      00221  0361 00 4 00242         ACL     DATA-1,4      ..     
      00222  3 77776 4 00224         TXH     *+2,4,-2      TEST   
      00223  1 00001 4 00221         TXI     *-2,4,1       ADD NEXT WORD
      00224  0602 00 0 00242         SLW     CHKSUM        SAVE LOGICAL CHECKSUM    
                  
      00225                          FUNC    BFWRIT(FLNAM,ABNAM(CARD,,28)WR1.)
                  
      00232  0534 00 4 00241  PUN3   LXA     CARD,4        BUMP ORIGIN FOR NEXT CARD
      00233  1 00026 4 00234         TXI     *+1,4,22      ..     
      00234  0634 00 4 00241         SXA     CARD,4        ..     
      00235  0774 00 4 00000  PUNX4  AXT     **,4          AND RETURN   
      00236  0020 00 4 00001         TRA     1,4           ..     
                  
                              *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  
                  
      00237  0 00000 0 00660  BF     PZE     BFSIZ         ..     
      00240  000500000000     79PNCH VFD     O12/5         7-9 PUNCH FOR BINARY CARD
                  
      00241  0 00000 0 00000  CARD   PZE     0,,**         LOADING ORIGIN FOR FIRST CARD  
      00242  0 00000 0 00000  CHKSUM PZE     0             ..     
      00243                   DATA   BSS     22            .. 22 BINARY DATA WORDS  
      00271 +000000000000            OCT     0,0,0,0       .. ZEROS TO FILL OUT CARD TO 28 WORDS
                  
      00275  545454545454     FLNAM  BCI     1,******      FILE NAME    
                  
      00276  606221652524     SVNAM  BCI     1, SAVED 
      00277  606060212262     ABNAM  BCI     1,   ABS 
                  
      00300  142226146025     BFMES  BCI     2,'BF' ERROR 0 
                  
      00302  0 00000 0 00000  SKIPC  PZE     0             WORD COUNT FOR STRANGE READING 
                  
      00303  0 00000 0 00000  MEMBND PZE     0             FIRST TWO WORDS FROM 'SAVED' FILE    
      00304  0 00000 0 00000  ILC    PZE     0             ..     
                  
      00305                          RMT     *             FORCE REMOTE SEQUENCES   
      00305  0101 00 0 00310  DORMNT TIA     =HDORMNT                                                         .001
                  
                                     END  
                  
        LITERALS  
      00306  000000000005     
      00307  000000077777     
      00310  244651444563     
      00311  377777777777     
      00312  400000000000     
      00313  475145632551     
      00314  516060606060     
      00315  666060606060     
1      ... PUSAV, REDUCE SAVED FILE TO ABS CARDS                                                 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        316 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         46     B1    26
         47     B2    30
        100     B3    32
        101     B4    35
        102     B5    37
        237     BF    27,   31,   34,   36,   40
        304    ILC   136
        167   BFX4   161
        241   CARD   134,  141,  145,  217,  220,  230,  232,  234
        243   DATA   111,  121,  126,  211,  221
         14   DEAD   201
        211   PUN1   214
        215   PUN2   212
        232   PUN3   213
        161   RD1.    60,   73,  114,  131,  161
        161   RD2.   156,  161
        161   WR1.   146,  161,  231
        161   WR2.   152,  161
        277  ABNAM    22,   77,  144,  151,  227
        161  BFERR      
        300  BFMES   164,  166
        660  BFSIZ    15,   63,  237
        275  FLNAM    17,   21,   44,   53,   66,   76,  107,  124,  143,  150,  154,  226
        161  OPNW.   103,  161
        161  OPRD.    51,  161
        207  PUNCH   115,  132
        235  PUNX4   207
        302  SKIPC    24,   64,   70,  117,  126,  171
         70  SKIPL    33
        276  SVNAM    45,   54,   67,  110,  125,  155
         12  WRFLX   165,  177
        240 79PNCH   140,  216
          3 BFCLOS   147,  153
          4 BFCODE   162
          0 BFOPEN    42,   74
          1 BFREAD    52,   65,  106,  123
          2 BFWRIT   142,  225
        242 CHKSUM   224
         11 CHNCOM   157
        171 DELERR    23
          6 DELFIL    20
         25 DEL.OK   173
        305 DORMNT   170
          5 GETCOM    15
          7 GETMEM    25
        174 GOPRNT   163
        202 ILLCOM   200
        177 ILLEGL    56,   63,   71,  112,  127
        303 MEMBND    55,   61,  104
         13 NEXCOM   176
        105 PUABS1   116
1      ... PUSAV, REDUCE SAVED FILE TO ABS CARDS                                                 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        117 PUABS2   105
         10 SETMEM    41
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




 PRIME   BCD 09/20/68 0220.6    9689         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   PRIME   MAD            03/01/68    1939.1
-                 
                  PRIMER FOR THE DAEMON'S FILES  - ROGER ROACH  2-28-68                                LM00001    
                  TO BE USED TO RESET THE DATE DAEMON IS DUMPING FROM                                  LM00002    
                                                                                                       LM00003    
                  USAGE:                                                                               LM00004    
                     INTERRUPT THE DAEMON                                                              LM00005    
                     R PRIME                                                                           LM00006    
                      TYPE IN THE REQUESTED DATE AND TIME                                              LM00007    
                                                                                                       LM00008    
                  IT FIRST DELETES THE DRSTOR FILES ON DAEMON'S DIRECTORY                              LM00009    
                  THEN CREATES A DRSTOR FILE.3 USING THE TIME AND DATE.                                LM00010    
                                                                                                       LM00011    
                  IF THE USER IS NOT PRIVILEGED ENOUGH BUT HAS CORE PATCH                              LM00012    
                  PRIVILEGES, IT WILL PATCH URCODE TO A PRIVILEGED                                     LM00013    
                  COMMAND.                                                                             LM00014    
                                                                                                       LM00015    
                  THIS PROGRAM IS RESTRICTED TO M1416 USERS AND C33 960.                               LM00016    
                                                                                                       LM00017    
                  NORMAL MODE IS INTEGER                                                          *001 LM00018    
                  DIMENSION BUFF(431),ME(1)                                                       *002 LM00019    
                  DIMENSION DATE(1), T(2)                                                         *003 LM00020    
                  EQUIVALENCE (DATE(1),TIME)                                                      *004 LM00021    
                  VECTOR VALUES SYS = $ C0056$                                                    *005 LM00022    
                  VECTOR VALUES DAEMON = $ 99999$                                                 *006 LM00023    
                  VECTOR VALUES DRSTOR = $DRSTOR$                                                 *007 LM00024    
                  VECTOR VALUES FILE1  = $FILE.1$                                                 *008 LM00025    
                  VECTOR VALUES FILE2  = $FILE.2$                                                 *009 LM00026    
                  VECTOR VALUES FILE3  = $FILE.3$                                                 *010 LM00027    
                  VECTOR VALUES PRVUSR = 16K                                                      *011 LM00028    
                  VECTOR VALUES CORPAT = 2K1                                                      *012 LM00029    
                  VECTOR VALUES PATKEY = 2K4                                                      *013 LM00030    
                  VECTOR VALUES MZE = -0                                                          *014 LM00031    
                  VECTOR VALUES BL = 605757575757K                                                *015 LM00032    
                  VECTOR VALUES SLPTIM = 10                                                       *016 LM00033    
                                                                                                       LM00034    
                  FIRST TEST FOR CORRECT USER                                                          LM00035    
                                                                                                       LM00036    
                  WHOAMI.(ME(1)...2)                                                              *017 LM00037    
                  WHENEVER (ME(1).NE.$ M1416$).AND.(ME(1).NE.$C0033$.OR.ME.NE.                    *018 LM00038    
                1   $   960$),TSK.                                                                *018 LM00039    
                  PRMESS.($ THIS IS THE DAEMON PRIMER$)                                           *019 LM00040    
                  PRMESS.($ TYPE A C.R. TO CONTINUE.$)                                            *020 LM00041    
                  RDFLXC.(DATE,12)                                                                *021 LM00042    
                  ATTNAM.(ME(1)...2)                                                              *022 LM00043    
                                                                                                       LM00044    
                  NOW CHECK THE PRIVILEGES AND MAKE SURE WE CAN DO OUR STUFF.                          LM00045    
                                                                                                       LM00046    
                  URCLOC = COMLOC.($URCODE$)                                                      *023 LM00047    
                  URCODE = GLOC.(URCLOC)                                                          *024 LM00048    
                  WHENEVER URCODE.A.PRVUSR.E.PRVUSR, TRANSFER TO OK                               *025 LM00049    
                  IF A PRIV. COMMAND OR USER HAS ENOUGH PRIV, OK                                       LM00050    
                                                                                                       LM00051    
                  OTHERWISE SEE IF HE CAN PATCH CORE, IF NOT TOO BAD.                                  LM00052    
                                                                                                       LM00053    
                  WHENEVER URCODE.A.CORPAT.NE.CORPAT                                              *026 LM00054    
                       PRMESS.($INSUFFICIENT PRIVILEGES $)                                        *027 LM00055    
                       CHNCOM.(0)                                                                 *028 LM00056    
                  END OF CONDITIONAL                                                              *029 LM00057    
                                                                                                       LM00058    
                  WE CAN PATCH CORE.  MAKE SURE KEY 22 IS DOWN.                                        LM00059    
                                                                                                       LM00060    
      TSTKEY      WHENEVER KEY.(0).A.PATKEY.NE.PATKEY                                             *030 LM00061    
                       PRMESS.($KEY 22 IS NOT YET DOWN$)                                          *031 LM00062    
                       PRMESS.($  WILL RETRY IN 10 SECONDS.$)                                     *032 LM00063    
                       SLPTIM = SLPTIM                                                            *033 LM00064    
                       SLEEP.(0)                                                                  *034 LM00065    
                       TRANSFER TO TSTKEY                                                         *035 LM00066    
                  END OF CONDITIONAL                                                              *036 LM00067    
                                                                                                       LM00068    
                  SLOC.(URCODE.V.PRVUSR,URCLOC)                                                   *037 LM00069    
                                                                                                       LM00070    
                  OK, NOW DELETE THE FILES AND CREATE A NEW ONE FOR DAEMON.                            LM00071    
                                                                                                       LM00072    
      OK          FERRTN.(FATERR)                                                                 *038 LM00073    
                  ATTACH.(SYS,DAEMON,ATTERR)                                                      *039 LM00074    
                  CHFILE.(DRSTOR,FILE1,1,MZE,MZE,NO1)                                             *040 LM00075    
                  DELFIL.(DRSTOR,FILE1)                                                           *041 LM00076    
      NO1         CHFILE.(DRSTOR,FILE2,1,MZE,MZE,NO2)                                             *042 LM00077    
                  DELFIL.(DRSTOR,FILE2)                                                           *043 LM00078    
      NO2         CHFILE.(DRSTOR,FILE3,1,MZE,MZE,NO3)                                             *044 LM00079    
                  DELFIL.(DRSTOR,FILE3)                                                           *045 LM00080    
      NO3         PRMESS.($NOW TYPE IN THE DATE AND TIME TO RESET DAEMON.$)                       *046 LM00081    
                  PRMESS.($EXAMPLE: '0612681925.0' FOR JUNE 12, 1968 AT 1925$)                    *047 LM00082    
      GETDAT      A = RDFLXC.(DATE(0),12)                                                         *048 LM00083    
                  WHENEVER A .L. 12                                                               *049 LM00084    
      BADDAT           PRMESS.($ BAD DATE OR TIME,$,BL,DATE,BL,TIME,                              *050 LM00085    
                1           $ - TRY AGAIN.$)                                                      *050 LM00086    
                       TRANSFER TO GETDAT                                                         *051 LM00087    
                  END OF CONDITIONAL                                                              *052 LM00088    
                  CKDATE.(DATE,TIME,BADDAT)                                                       *053 LM00089    
                  T(2) = $PROTCT$                                                                 *054 LM00090    
                  T(1) = ((BCDEC.(TIME.RS.24.V.$    00$)*60) +                                    *055 LM00091    
                1      BCDEC.((TIME.RS.12.A.7777K).V.$    00$))*3600                              *055 LM00092    
                  T = DATE                                                                        *056 LM00093    
                  OPEN.($W$,DRSTOR,FILE3,120K)                                                    *057 LM00094    
                  BUFFER.(DRSTOR,FILE3,BUFF(431)...432)                                           *058 LM00095    
                  WRFILE.(DRSTOR,FILE3,0,T(2)...3)                                                *059 LM00096    
                  CLOSE.(DRSTOR,FILE3)                                                            *060 LM00097    
                  RESETF.(0)                                                                      *061 LM00098    
                  ATTACH.(ME(1),ME,ATTERR)                                                        *062 LM00099    
                  PRMESS.($ PRIMING COMPLETED.$)                                                  *063 LM00100    
                  CHNCOM.(0)                                                                      *064 LM00101    
                                                                                                       LM00102    
                  COME HERE FOR A FALAT I/O ERROR                                                      LM00103    
                                                                                                       LM00104    
      FATERR      ATTACH.(ME(1),ME,ATTERR)                                                        *065 LM00105    
      ATTERR      NCOM.($PRNTER$,375K)                                                            *066 LM00106    
                  END OF PROGRAM                                                                  *067 LM00107    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01433 TRANSFER VECTOR LENGTH  00031 PROGRAM BEGINS    01056
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      A      00045   1        DAEMON 00730 A 1        FILE3  00734 A 1        NO3    00042   4        TIME   00032   1  
      ATTERR 00034   4        DATE   00033 A 1        GETDAT 00037   4        OK     00043   4        T      00746 A 1  
      BADDAT 00035   4        DRSTOR 00731 A 1        ME     00736 A 1        PATKEY 00740 A 1        TSTKEY 00044   4  
      BL     00046 A 1        FATERR 00036   4        MZE    00737 A 1        PRVUSR 00741 A 1        URCLOC 00747   1  
      BUFF   00726 A 1        FILE1  00732 A 1        NO1    00040   4        SLPTIM 00742 A 1        URCODE 00750   1  
      CORPAT 00727 A 1        FILE2  00733 A 1        NO2    00041   4        SYS    00743 A 1                          
0FUNCTION DICTIONARY    
      ATTACH 00000   1        ATTNAM 00001   1        BCDEC  00002   1        BUFFER 00003   1        CHFILE 00004   1  
      CHNCOM 00005   1        CKDATE 00006   1        CLOSE  00007   1        COMLOC 00010   1        DELFIL 00011   1  
      EXIT   00012   1        FERRTN 00013   1        GLOC   00014   1        .SETUP 00015   1        KEY    00016   1  
      NCOM   00017   1        OPEN   00020   1        PRMESS 00021   1        RDFLXC 00022   1        RESETF 00023   1  
      SLEEP  00024   1        SLOC   00025   1        TSK    00026   1        WHOAMI 00027   1        WRFILE 00030   1  
0ABSOLUTE CONSTANTS     
 00761 +000000000375     01022 -075145632551     01021 -074325632524     01014 -052760234644     01034 -204751314431    
 00754 +000000000003     00762 +000000000660     00760 +000000000120     01055 -266060606060     00763 +000000007020    
 00757 +000000000074     00756 +000000000030     01040 -206060600000     00764 +000000007777     01023 -075146632363    
 01025 -202127213145     01032 -204060635170     01045 -206331442573     00771 +216325604651     01026 -202221246024    
 00767 +056060606060     00772 +216360011102     01024 -200111061060     01013 -052560010273     01003 +264651604164    
 00766 +020533001460     00765 +010206100111     00777 +253560140006     01002 +256721444743     01012 -044645336060    
 01001 +256360242125     01052 -234660512562     01044 -206331442560     01050 -232560214524     01051 -233025602421    
 01020 -072560314560     01015 -054666606370     00776 +246233606060     01042 -206225234645     01030 -203145600100    
 01036 -205125635170     01041 -206066314343     00775 +244666456060     01053 -236070256360     01031 -203162604546    
 01010 -022570600202     00751 +000000000000     01011 -032527256260     01035 -204751316531     01004 +312331254563    
 01005 +314562642626     01054 -245123462425     00755 +000000000014     01007 +336060606060     01017 -056331456425    
 01046 -206346602346     00770 +216023335133     01047 -206370472560     01000 +255160606060     01016 -056047513144    
 01027 -202421254446     01006 +316260633025     01043 -206330316260     01033 -204401040106     00773 +230000030360    
 01037 -206060110600     00753 +000000000002     00752 +000000000001     00774 +233000000000                            
0STATEMENT DICTIONARY   
 00034 TXL -301426001423       00035 TXL -301317001304       00036 TXL -301423001417       00037 TXL -301300001274      
 00040 TXL -301234001225       00041 TXL -301246001237       00042 TXL -301262001251       00043 TXL -301207001205      
 00044 TXL -301157001146                                                                                                
0PROGRAM    
                 N'R                                                                001  LM00018
                 D'N BUFF(431),ME(1)                                                002  LM00019
                 D'N DATE(1), T(2)                                                  003  LM00020
                 E'E (DATE(1),TIME)                                                 004  LM00021
                 V'S SYS = $ C0056$                                                 005  LM00022
 01056 TSX +0 07400 4 00015    00743     -2 02300 0 00506                                                               
                 V'S DAEMON = $ 99999$                                              006  LM00023
 00730     -2 01111 1 11111                                                                                             
                 V'S DRSTOR = $DRSTOR$                                              007  LM00024
 00731     +2 45162 6 34651                                                                                             
                 V'S FILE1  = $FILE.1$                                              008  LM00025
 00732     +2 63143 2 53301                                                                                             
                 V'S FILE2  = $FILE.2$                                              009  LM00026
 00733     +2 63143 2 53302                                                                                             
                 V'S FILE3  = $FILE.3$                                              010  LM00027
 00734     +2 63143 2 53303                                                                                             
                 V'S PRVUSR = 16K                                                   011  LM00028
 00741     +0 00000 0 00016                                                                                             
                 V'S CORPAT = 2K1                                                   012  LM00029
 00727     +0 00000 0 00020                                                                                             
                 V'S PATKEY = 2K4                                                   013  LM00030
 00740     +0 00000 0 20000                                                                                             
                 V'S MZE = -0                                                       014  LM00031
 00737     -0 00000 0 00000                                                                                             
                 V'S BL = 605757575757K                                             015  LM00032
 00046     -2 05757 5 75757                                                                                             
                 V'S SLPTIM = 10                                                    016  LM00033
 00742     +0 00000 0 00012                                                                                             
                 WHOAMI.(ME(1)...2)                                                 017  LM00037
 01057 TSX +0 07400 4 00027    01060 TIX +2 00753 0 00735                                                               
                 W'R (ME(1).NE.$ M1416$).AND.(ME(1).NE.$C0033$.OR.ME.NE.            018  LM00038
                1  $   960$),TSK.                                                   018  LM00039
 01061 CLA +0 50000 0 00736    01062 SUB +0 40200 0 01037    01063 TNZ -0 10000 0 01067    01064 CLA +0 50000 0 00735   
 01065 SUB +0 40200 0 00773    01066 TZE +0 10000 0 01073    01067 CLA +0 50000 0 00735    01070 SUB +0 40200 0 01033   
 01071 TZE +0 10000 0 01073    01072 TSX +0 07400 4 00026                                                               
                 PRMESS.($ THIS IS THE DAEMON PRIMER$)                              019  LM00040
 01073 TSX +0 07400 4 00021    01074 TXH +3 00000 0 01043    01075 TXH +3 00000 0 01006    01076 TXH +3 00000 0 01027   
 01077 TXH +3 00000 0 01016    01100 TXH +3 00000 0 01000                                                               
                 PRMESS.($ TYPE A C.R. TO CONTINUE.$)                               020  LM00041
 01101 TSX +0 07400 4 00021    01102 TXH +3 00000 0 01047    01103 TXH +3 00000 0 00770    01104 TXH +3 00000 0 01046   
 01105 TXH +3 00000 0 01017    01106 TXH +3 00000 0 01007                                                               
                 RDFLXC.(DATE,12)                                                   021  LM00042
 01107 TSX +0 07400 4 00022    01110 TXH +3 00000 0 00033    01111 TXH +3 00000 0 00755                                 
                 ATTNAM.(ME(1)...2)                                                 022  LM00043
 01112 TSX +0 07400 4 00001    01113 TIX +2 00753 0 00735                                                               
                 URCLOC = COMLOC.($URCODE$)                                         023  LM00047
 01114 TSX +0 07400 4 00010    01115 TXH +3 00000 0 01054    01116 STO +0 60100 0 00747                                 
                 URCODE = GLOC.(URCLOC)                                             024  LM00048
 01117 TSX +0 07400 4 00014    01120 TXH +3 00000 0 00747    01121 STO +0 60100 0 00750                                 
                 W'R URCODE.A.PRVUSR.E.PRVUSR, T'O OK                               025  LM00049
 01122 CAL -0 50000 0 00750    01123 ANA -0 32000 0 00741    01124 SLW +0 60200 0 01427    01125 CLA +0 50000 0 01427   
 01126 SUB +0 40200 0 00741    01127 TNZ -0 10000 0 01131    01130 TRA +0 02000 0 00043                                 
                 W'R URCODE.A.CORPAT.NE.CORPAT                                      026  LM00054
 01131 CAL -0 50000 0 00750    01132 ANA -0 32000 0 00727    01133 SLW +0 60200 0 01427    01134 CLA +0 50000 0 01427   
 01135 SUB +0 40200 0 00727    01136 TZE +0 10000 0 01146                                                               
                      PRMESS.($INSUFFICIENT PRIVILEGES $)                           027  LM00055
 01137 TSX +0 07400 4 00021    01140 TXH +3 00000 0 01005    01141 TXH +3 00000 0 01004    01142 TXH +3 00000 0 01035   
 01143 TXH +3 00000 0 01011                                                                                             
                      CHNCOM.(0)                                                    028  LM00056
 01144 TSX +0 07400 4 00005    01145 TXH +3 00000 0 00751                                                               
                 E'L                                                                029  LM00057
      TSTKEY     W'R KEY.(0).A.PATKEY.NE.PATKEY                                     030  LM00061
 01146 TSX +0 07400 4 00016    01147 TXH +3 00000 0 00751    01150 STO +0 60100 0 01427    01151 CAL -0 50000 0 01427   
 01152 ANA -0 32000 0 00740    01153 SLW +0 60200 0 01427    01154 CLA +0 50000 0 01427    01155 SUB +0 40200 0 00740   
 01156 TZE +0 10000 0 01177                                                                                             
                      PRMESS.($KEY 22 IS NOT YET DOWN$)                             031  LM00062
 01157 TSX +0 07400 4 00021    01160 TXH +3 00000 0 01010    01161 TXH +3 00000 0 01031    01162 TXH +3 00000 0 01053   
 01163 TXH +3 00000 0 00775                                                                                             
                      PRMESS.($  WILL RETRY IN 10 SECONDS.$)                        032  LM00063
 01164 TSX +0 07400 4 00021    01165 TXH +3 00000 0 01041    01166 TXH +3 00000 0 01036    01167 TXH +3 00000 0 01030   
 01170 TXH +3 00000 0 01042    01171 TXH +3 00000 0 00776                                                               
                      SLPTIM = SLPTIM                                               033  LM00064
 01172 CLA +0 50000 0 00742    01173 STO +0 60100 0 00742                                                               
                      SLEEP.(0)                                                     034  LM00065
 01174 TSX +0 07400 4 00024    01175 TXH +3 00000 0 00751                                                               
                      T'O TSTKEY                                                    035  LM00066
 01176 TRA +0 02000 0 00044                                                                                             
                 E'L                                                                036  LM00067
                 SLOC.(URCODE.V.PRVUSR,URCLOC)                                      037  LM00069
 01177 CAL -0 50000 0 00750    01200 ORA -0 50100 0 00741    01201 SLW +0 60200 0 01427    01202 TSX +0 07400 4 00025   
 01203 TXH +3 00000 0 01427    01204 TXH +3 00000 0 00747                                                               
      OK         FERRTN.(FATERR)                                                    038  LM00073
 01205 TSX +0 07400 4 00013    01206 TXH +3 00000 0 00036                                                               
                 ATTACH.(SYS,DAEMON,ATTERR)                                         039  LM00074
 01207 TSX +0 07400 4 00000    01210 TXH +3 00000 0 00743    01211 TXH +3 00000 0 00730    01212 TXH +3 00000 0 00034   
                 CHFILE.(DRSTOR,FILE1,1,MZE,MZE,NO1)                                040  LM00075
 01213 TSX +0 07400 4 00004    01214 TXH +3 00000 0 00731    01215 TXH +3 00000 0 00732    01216 TXH +3 00000 0 00752   
 01217 TXH +3 00000 0 00737    01220 TXH +3 00000 0 00737    01221 TXH +3 00000 0 00040                                 
                 DELFIL.(DRSTOR,FILE1)                                              041  LM00076
 01222 TSX +0 07400 4 00011    01223 TXH +3 00000 0 00731    01224 TXH +3 00000 0 00732                                 
      NO1        CHFILE.(DRSTOR,FILE2,1,MZE,MZE,NO2)                                042  LM00077
 01225 TSX +0 07400 4 00004    01226 TXH +3 00000 0 00731    01227 TXH +3 00000 0 00733    01230 TXH +3 00000 0 00752   
 01231 TXH +3 00000 0 00737    01232 TXH +3 00000 0 00737    01233 TXH +3 00000 0 00041                                 
                 DELFIL.(DRSTOR,FILE2)                                              043  LM00078
 01234 TSX +0 07400 4 00011    01235 TXH +3 00000 0 00731    01236 TXH +3 00000 0 00733                                 
      NO2        CHFILE.(DRSTOR,FILE3,1,MZE,MZE,NO3)                                044  LM00079
 01237 TSX +0 07400 4 00004    01240 TXH +3 00000 0 00731    01241 TXH +3 00000 0 00734    01242 TXH +3 00000 0 00752   
 01243 TXH +3 00000 0 00737    01244 TXH +3 00000 0 00737    01245 TXH +3 00000 0 00042                                 
                 DELFIL.(DRSTOR,FILE3)                                              045  LM00080
 01246 TSX +0 07400 4 00011    01247 TXH +3 00000 0 00731    01250 TXH +3 00000 0 00734                                 
      NO3        PRMESS.($NOW TYPE IN THE DATE AND TIME TO RESET DAEMON.$)          046  LM00081
 01251 TSX +0 07400 4 00021    01252 TXH +3 00000 0 01015    01253 TXH +3 00000 0 01020    01254 TXH +3 00000 0 01051   
 01255 TXH +3 00000 0 01050    01256 TXH +3 00000 0 01044    01257 TXH +3 00000 0 01052    01260 TXH +3 00000 0 01001   
 01261 TXH +3 00000 0 01012                                                                                             
                 PRMESS.($EXAMPLE: '0612681925.0' FOR JUNE 12, 1968 AT 1925$)       047  LM00082
 01262 TSX +0 07400 4 00021    01263 TXH +3 00000 0 01002    01264 TXH +3 00000 0 00777    01265 TXH +3 00000 0 00765   
 01266 TXH +3 00000 0 00766    01267 TXH +3 00000 0 01003    01270 TXH +3 00000 0 01013    01271 TXH +3 00000 0 01024   
 01272 TXH +3 00000 0 00772    01273 TXH +3 00000 0 00767                                                               
      GETDAT     A = RDFLXC.(DATE(0),12)                                            048  LM00083
 01274 TSX +0 07400 4 00022    01275 TXH +3 00000 0 00033    01276 TXH +3 00000 0 00755    01277 STO +0 60100 0 00045   
                 W'R A .L. 12                                                       049  LM00084
 01300 CLA +0 50000 0 00045    01301 SUB +0 40200 0 00755    01302 TZE +0 10000 0 01320    01303 TPL +0 12000 0 01320   
      BADDAT          PRMESS.($ BAD DATE OR TIME,$,BL,DATE,BL,TIME,                 050  LM00085
                1          $ - TRY AGAIN.$)                                         050  LM00086
 01304 TSX +0 07400 4 00021    01305 TXH +3 00000 0 01026    01306 TXH +3 00000 0 00771    01307 TXH +3 00000 0 01045   
 01310 TXH +3 00000 0 00046    01311 TXH +3 00000 0 00033    01312 TXH +3 00000 0 00046    01313 TXH +3 00000 0 00032   
 01314 TXH +3 00000 0 01032    01315 TXH +3 00000 0 01025    01316 TXH +3 00000 0 01007                                 
                      T'O GETDAT                                                    051  LM00087
 01317 TRA +0 02000 0 00037                                                                                             
                 E'L                                                                052  LM00088
                 CKDATE.(DATE,TIME,BADDAT)                                          053  LM00089
 01320 TSX +0 07400 4 00006    01321 TXH +3 00000 0 00033    01322 TXH +3 00000 0 00032    01323 TXH +3 00000 0 00035   
                 T(2) = $PROTCT$                                                    054  LM00090
 01324 CLA +0 50000 0 01023    01325 STO +0 60100 0 00744                                                               
                 T(1) = ((BCDEC.(TIME.RS.24.V.$    00$)*60) +                       055  LM00091
                1     BCDEC.((TIME.RS.12.A.7777K).V.$    00$))*3600                 055  LM00092
 01326 CAL -0 50000 0 00755    01327 STA +0 62100 0 01331    01330 CAL -0 50000 0 00032    01331 LGR -0 76500 0 00000   
 01332 ANA -0 32000 0 00764    01333 ORA -0 50100 0 01040    01334 SLW +0 60200 0 01427    01335 TSX +0 07400 4 00002   
 01336 TXH +3 00000 0 01427    01337 STO +0 60100 0 01427    01340 CAL -0 50000 0 00756    01341 STA +0 62100 0 01343   
 01342 CAL -0 50000 0 00032    01343 LGR -0 76500 0 00000    01344 ORA -0 50100 0 01040    01345 SLW +0 60200 0 01430   
 01346 TSX +0 07400 4 00002    01347 TXH +3 00000 0 01430    01350 XCA +0 13100 0 00000    01351 MPY +0 20000 0 00757   
 01352 XCA +0 13100 0 00000    01353 ADD +0 40000 0 01427    01354 XCA +0 13100 0 00000    01355 MPY +0 20000 0 00763   
 01356 STQ -0 60000 0 00745                                                                                             
                 T = DATE                                                           056  LM00093
 01357 CLA +0 50000 0 00033    01360 STO +0 60100 0 00746                                                               
                 OPEN.($W$,DRSTOR,FILE3,120K)                                       057  LM00094
 01361 TSX +0 07400 4 00020    01362 TXH +3 00000 0 01055    01363 TXH +3 00000 0 00731    01364 TXH +3 00000 0 00734   
 01365 TXH +3 00000 0 00760                                                                                             
                 BUFFER.(DRSTOR,FILE3,BUFF(431)...432)                              058  LM00095
 01366 TSX +0 07400 4 00003    01367 TXH +3 00000 0 00731    01370 TXH +3 00000 0 00734    01371 TIX +2 00762 0 00047   
                 WRFILE.(DRSTOR,FILE3,0,T(2)...3)                                   059  LM00096
 01372 TSX +0 07400 4 00030    01373 TXH +3 00000 0 00731    01374 TXH +3 00000 0 00734    01375 TXH +3 00000 0 00751   
 01376 TIX +2 00754 0 00744                                                                                             
                 CLOSE.(DRSTOR,FILE3)                                               060  LM00097
 01377 TSX +0 07400 4 00007    01400 TXH +3 00000 0 00731    01401 TXH +3 00000 0 00734                                 
                 RESETF.(0)                                                         061  LM00098
 01402 TSX +0 07400 4 00023    01403 TXH +3 00000 0 00751                                                               
                 ATTACH.(ME(1),ME,ATTERR)                                           062  LM00099
 01404 TSX +0 07400 4 00000    01405 TXH +3 00000 0 00735    01406 TXH +3 00000 0 00736    01407 TXH +3 00000 0 00034   
                 PRMESS.($ PRIMING COMPLETED.$)                                     063  LM00100
 01410 TSX +0 07400 4 00021    01411 TXH +3 00000 0 01034    01412 TXH +3 00000 0 01014    01413 TXH +3 00000 0 01021   
 01414 TXH +3 00000 0 01007                                                                                             
                 CHNCOM.(0)                                                         064  LM00101
 01415 TSX +0 07400 4 00005    01416 TXH +3 00000 0 00751                                                               
      FATERR     ATTACH.(ME(1),ME,ATTERR)                                           065  LM00105
 01417 TSX +0 07400 4 00000    01420 TXH +3 00000 0 00735    01421 TXH +3 00000 0 00736    01422 TXH +3 00000 0 00034   
      ATTERR     NCOM.($PRNTER$,375K)                                               066  LM00106
 01423 TSX +0 07400 4 00017    01424 TXH +3 00000 0 01022    01425 TXH +3 00000 0 00761                                 
                 E'M                                                                067  LM00107
 01426 TSX +0 07400 4 00012                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  CKDATE   MAD            03/01/68    1940.0
-                 
                  EXTERNAL FUNCTION (DATEIN,TIMEIN,BADATE)                                        *001 LM00001    
                  ENTRY TO CKDATE.                                                                *002 LM00002    
                  NORMAL MODE IS INTEGER                                                          *003 LM00003    
                  STATEMENT LABEL BADATE                                                          *004 LM00004    
                  DIMENSION MDY(3), MO(12), MASK(6), SHFT(6)                                      *005 LM00005    
                  DATE=DATEIN                                                                     *006 LM00006    
                  TIME=TIMEIN                                                                     *007 LM00007    
                  WHENEVER (DATE.A.766074606060K).NE.0 .OR. (TIME.A.746070600000K)                *008 LM00008    
                1 .NE.0, TRANSFER TO BADATE                                                       *008 LM00009    
                  SW=0                                                                            *009 LM00010    
                  THROUGH LOOP1, FOR J=0,6,J.G.36                                                 *010 LM00011    
                  WHENEVER ((DATE.RS.J).A.77K) .E. 13K .OR. ((TIME.RS.J).A.77K) .E.               *011 LM00012    
                1 14K, TRANSFER TO BADATE                                                         *011 LM00013    
                  WHENEVER ((DATE.RS.J).A.77K) .E. 14K .OR. ((TIME.RS.J).A.77K) .E.               *012 LM00014    
                1 13K, TRANSFER TO BADATE                                                         *012 LM00015    
      LOOP1       CONTINUE                                                                        *013 LM00016    
      BACK        THROUGH LOOP, FOR I=1,1,I.G.3                                                   *014 LM00017    
      LOOP        MDY(I)=((DATE.A.MASK(I)).RS.SHFT(I))*10                                         *015 LM00018    
                1 +((DATE.A.MASK(I+3)).RS.SHFT(I+3))                                              *015 LM00019    
                  WHENEVER SW.NE.0, TRANSFER TO TIMCHK                                            *016 LM00020    
                  MO(2)=28                                                                        *017 LM00021    
                  WHENEVER (MDY(3).NE.0).AND.(MDY(3)-(MDY(3)/4)*4).E.0,                           *018 LM00022    
                1 MO(2)=29                                                                        *018 LM00023    
                  WHENEVER MDY(1).L.1 .OR. MDY(1).G.12, TRANSFER TO BADATE                        *019 LM00024    
                  WHENEVER (MDY(3).L.0).OR.(MDY(3).G.99), TRANSFER TO BADATE                      *020 LM00025    
                  WHENEVER (MDY(2).L.1).OR.(MDY(2).G.MO(MDY(1))), TRANSFER TO BADATE              *021 LM00026    
                  DATE=TIME                                                                       *022 LM00027    
                  SW=1                                                                            *023 LM00028    
                  TRANSFER TO BACK                                                                *024 LM00029    
      TIMCHK      WHENEVER MDY(1).L.0 .OR. MDY(1).GE.24, TRANSFER TO BADATE                       *025 LM00030    
                  WHENEVER MDY(2).L.0 .OR. MDY(2).GE.60, TRANSFER TO BADATE                       *026 LM00031    
                  FUNCTION RETURN                                                                 *027 LM00032    
                  VECTOR VALUES MO=0,31,28,31,30,31,30,31,31,30,31,30,31                          *028 LM00033    
                  VECTOR VALUES MDY=0,0,0,0                                                       *029 LM00034    
                  VECTOR VALUES MASK=0,770000000000K,77000000K,7700K,7700000000K,770000K          *030 LM00035    
                1 ,77K                                                                            *030 LM00036    
                  VECTOR VALUES SHFT=0,30,18,6,24,12,0                                            *031 LM00037    
                  END OF FUNCTION                                                                 *032 LM00038    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00415 TRANSFER VECTOR LENGTH  00001 PROGRAM BEGINS    00072
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      CKDATE 00073   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BACK   00002   4        J      00006   1        MASK   00015 A 1        SHFT   00045 A 1        TIMCHK 00003   4  
      DATE   00004   1        LOOP1  00001   4        MDY    00021 A 1        SW     00046   1        TIME   00047   1  
      I      00005   1        LOOP   00001   4        MO     00036 A 1                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00064 +000000000074     00060 +000000000030     00066 +000000000143     00062 +000000000035     00053 +000000000004    
 00061 +000000000034     00055 +000000000012     00052 +000000000003     00056 +000000000013     00057 +000000000014    
 00065 +000000000077     00063 +000000000044     00054 +000000000006     00071 -366074606060     00050 +000000000000    
 00070 -346070600000     00051 +000000000001     00067 +233000000000                                                    
0STATEMENT DICTIONARY   
 00002 TXL -300213000201       00003 TXL -300351000340                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION (DATEIN,TIMEIN,BADATE)                           001  LM00001
                 ENTRY TO CKDATE.                                                   002  LM00002
 00072 TRA +0 02000 0 00075    00073 SXA +0 63400 2 00364    00074 TSX +0 07400 2 00364                                 
                 NORMAL MODE IS INTEGER                                             003  LM00003
                 STATEMENT LABEL BADATE                                             004  LM00004
                 DIMENSION MDY(3), MO(12), MASK(6), SHFT(6)                         005  LM00005
                 DATE=DATEIN                                                        006  LM00006
 00075 CLA +0 50000 0 00024    00076 STO +0 60100 0 00004                                                               
                 TIME=TIMEIN                                                        007  LM00007
 00077 CLA +0 50000 0 00024    00100 STO +0 60100 0 00047                                                               
                 W'R (DATE.A.766074606060K).NE.0 .OR. (TIME.A.746070600000K)        008  LM00008
                1.NE.0, T'O BADATE                                                  008  LM00009
 00101 CAL -0 50000 0 00047    00102 ANA -0 32000 0 00070    00103 SLW +0 60200 0 00411    00104 CLA +0 50000 0 00411   
 00105 SUB +0 40200 0 00050    00106 TNZ -0 10000 0 00115    00107 CAL -0 50000 0 00004    00110 ANA -0 32000 0 00071   
 00111 SLW +0 60200 0 00411    00112 CLA +0 50000 0 00411    00113 SUB +0 40200 0 00050    00114 TZE +0 10000 0 00116   
 00115 TRA +0 02000 0 00024                                                                                             
                 SW=0                                                               009  LM00010
 00116 CLA +0 50000 0 00050    00117 STO +0 60100 0 00046                                                               
                 THROUGH LOOP1, FOR J=0,6,J.G.36                                    010  LM00011
 00120 CLA +0 50000 0 00050    00121 STO +0 60100 0 00006    00122 TRA +0 02000 0 00126    00123 CLA +0 50000 0 00006   
 00124 ADD +0 40000 0 00054    00125 STO +0 60100 0 00006    00126 CLA +0 50000 0 00006    00127 SUB +0 40200 0 00063   
 00130 TZE +0 10000 0 00132    00131 TPL +0 12000 0 00201                                                               
                 W'R ((DATE.RS.J).A.77K) .E. 13K .OR. ((TIME.RS.J).A.77K) .E.       011  LM00012
                114K, T'O BADATE                                                    011  LM00013
 00132 CAL -0 50000 0 00006    00133 STA +0 62100 0 00135    00134 CAL -0 50000 0 00047    00135 LGR -0 76500 0 00000   
 00136 ANA -0 32000 0 00065    00137 SLW +0 60200 0 00411    00140 CLA +0 50000 0 00411    00141 SUB +0 40200 0 00057   
 00142 TZE +0 10000 0 00154    00143 CAL -0 50000 0 00006    00144 STA +0 62100 0 00146    00145 CAL -0 50000 0 00004   
 00146 LGR -0 76500 0 00000    00147 ANA -0 32000 0 00065    00150 SLW +0 60200 0 00411    00151 CLA +0 50000 0 00411   
 00152 SUB +0 40200 0 00056    00153 TNZ -0 10000 0 00155    00154 TRA +0 02000 0 00024                                 
                 W'R ((DATE.RS.J).A.77K) .E. 14K .OR. ((TIME.RS.J).A.77K) .E.       012  LM00014
                113K, T'O BADATE                                                    012  LM00015
 00155 CAL -0 50000 0 00006    00156 STA +0 62100 0 00160    00157 CAL -0 50000 0 00047    00160 LGR -0 76500 0 00000   
 00161 ANA -0 32000 0 00065    00162 SLW +0 60200 0 00411    00163 CLA +0 50000 0 00411    00164 SUB +0 40200 0 00056   
 00165 TZE +0 10000 0 00177    00166 CAL -0 50000 0 00006    00167 STA +0 62100 0 00171    00170 CAL -0 50000 0 00004   
 00171 LGR -0 76500 0 00000    00172 ANA -0 32000 0 00065    00173 SLW +0 60200 0 00411    00174 CLA +0 50000 0 00411   
 00175 SUB +0 40200 0 00057    00176 TNZ -0 10000 0 00200    00177 TRA +0 02000 0 00024                                 
      LOOP1      CONTINUE                                                           013  LM00016
 00200 TRA +0 02000 0 00123                                                                                             
      BACK       THROUGH LOOP, FOR I=1,1,I.G.3                                      014  LM00017
 00201 CLA +0 50000 0 00051    00202 STO +0 60100 0 00005    00203 TRA +0 02000 0 00207    00204 CLA +0 50000 0 00005   
 00205 ADD +0 40000 0 00051    00206 STO +0 60100 0 00005    00207 CLA +0 50000 0 00005    00210 SUB +0 40200 0 00052   
 00211 TZE +0 10000 0 00213    00212 TPL +0 12000 0 00252                                                               
      LOOP       MDY(I)=((DATE.A.MASK(I)).RS.SHFT(I))*10                            015  LM00018
                1+((DATE.A.MASK(I+3)).RS.SHFT(I+3))                                 015  LM00019
 00213 CLA +0 50000 0 00005    00214 ADD +0 40000 0 00052    00215 STO +0 60100 0 00411    00216 CLA +0 50000 0 00005   
 00217 ADD +0 40000 0 00052    00220 PAX +0 73400 2 00000    00221 CAL -0 50000 0 00004    00222 ANA -0 32000 2 00015   
 00223 LXA +0 53400 2 00411    00224 SLW +0 60200 0 00411    00225 CAL -0 50000 2 00045    00226 STA +0 62100 0 00230   
 00227 CAL -0 50000 0 00411    00230 LGR -0 76500 0 00000    00231 LXA +0 53400 2 00005    00232 SLW +0 60200 0 00411   
 00233 CAL -0 50000 0 00004    00234 ANA -0 32000 2 00015    00235 SLW +0 60200 0 00412    00236 CAL -0 50000 2 00045   
 00237 STA +0 62100 0 00241    00240 CAL -0 50000 0 00412    00241 LGR -0 76500 0 00000    00242 SLW +0 60200 0 00412   
 00243 LDQ +0 56000 0 00412    00244 MPY +0 20000 0 00055    00245 XCA +0 13100 0 00000    00246 ADD +0 40000 0 00411   
 00247 LXA +0 53400 1 00005    00250 STO +0 60100 1 00021    00251 TRA +0 02000 0 00204                                 
                 W'R SW.NE.0, T'O TIMCHK                                            016  LM00020
 00252 CLA +0 50000 0 00046    00253 SUB +0 40200 0 00050    00254 TZE +0 10000 0 00256    00255 TRA +0 02000 0 00003   
                 MO(2)=28                                                           017  LM00021
 00256 CLA +0 50000 0 00061    00257 STO +0 60100 0 00034                                                               
                 W'R (MDY(3).NE.0).AND.(MDY(3)-(MDY(3)/4)*4).E.0,                   018  LM00022
                1MO(2)=29                                                           018  LM00023
 00260 LDQ +0 56000 0 00016    00261 PXD -0 75400 0 00000    00262 LLS +0 76300 0 00000    00263 DVP +0 22100 0 00053   
 00264 MPY +0 20000 0 00053    00265 XCA +0 13100 0 00000    00266 CHS +0 76000 0 00002    00267 ADD +0 40000 0 00016   
 00270 SUB +0 40200 0 00050    00271 TNZ -0 10000 0 00277    00272 CLA +0 50000 0 00016    00273 SUB +0 40200 0 00050   
 00274 TZE +0 10000 0 00277    00275 CLA +0 50000 0 00062    00276 STO +0 60100 0 00034                                 
                 W'R MDY(1).L.1 .OR. MDY(1).G.12, T'O BADATE                        019  LM00024
 00277 CLA +0 50000 0 00020    00300 SUB +0 40200 0 00057    00301 TZE +0 10000 0 00303    00302 TPL +0 12000 0 00307   
 00303 CLA +0 50000 0 00020    00304 SUB +0 40200 0 00051    00305 TZE +0 10000 0 00310    00306 TPL +0 12000 0 00310   
 00307 TRA +0 02000 0 00024                                                                                             
                 W'R (MDY(3).L.0).OR.(MDY(3).G.99), T'O BADATE                      020  LM00025
 00310 CLA +0 50000 0 00016    00311 SUB +0 40200 0 00066    00312 TZE +0 10000 0 00314    00313 TPL +0 12000 0 00320   
 00314 CLA +0 50000 0 00016    00315 SUB +0 40200 0 00050    00316 TZE +0 10000 0 00321    00317 TPL +0 12000 0 00321   
 00320 TRA +0 02000 0 00024                                                                                             
                 W'R (MDY(2).L.1).OR.(MDY(2).G.MO(MDY(1))), T'O BADATE              021  LM00026
 00321 LXA +0 53400 2 00020    00322 CLA +0 50000 0 00017    00323 SUB +0 40200 2 00036    00324 TZE +0 10000 0 00326   
 00325 TPL +0 12000 0 00332    00326 CLA +0 50000 0 00017    00327 SUB +0 40200 0 00051    00330 TZE +0 10000 0 00333   
 00331 TPL +0 12000 0 00333    00332 TRA +0 02000 0 00024                                                               
                 DATE=TIME                                                          022  LM00027
 00333 CLA +0 50000 0 00047    00334 STO +0 60100 0 00004                                                               
                 SW=1                                                               023  LM00028
 00335 CLA +0 50000 0 00051    00336 STO +0 60100 0 00046                                                               
                 T'O BACK                                                           024  LM00029
 00337 TRA +0 02000 0 00002                                                                                             
      TIMCHK     W'R MDY(1).L.0 .OR. MDY(1).GE.24, T'O BADATE                       025  LM00030
 00340 CLA +0 50000 0 00020    00341 SUB +0 40200 0 00060    00342 TZE +0 10000 0 00350    00343 TPL +0 12000 0 00350   
 00344 CLA +0 50000 0 00020    00345 SUB +0 40200 0 00050    00346 TZE +0 10000 0 00351    00347 TPL +0 12000 0 00351   
 00350 TRA +0 02000 0 00024                                                                                             
                 W'R MDY(2).L.0 .OR. MDY(2).GE.60, T'O BADATE                       026  LM00031
 00351 CLA +0 50000 0 00017    00352 SUB +0 40200 0 00064    00353 TZE +0 10000 0 00361    00354 TPL +0 12000 0 00361   
 00355 CLA +0 50000 0 00017    00356 SUB +0 40200 0 00050    00357 TZE +0 10000 0 00362    00360 TPL +0 12000 0 00362   
 00361 TRA +0 02000 0 00024                                                                                             
                 FUNCTION RETURN                                                    027  LM00032
 00362 TRA +0 02000 0 00405                                                                                             
                 V'S MO=0,31,28,31,30,31,30,31,31,30,31,30,31                       028  LM00033
 00022     +0 00000 0 00037    00023     +0 00000 0 00036    00024     +0 00000 0 00037    00025     +0 00000 0 00036   
 00026     +0 00000 0 00037    00027     +0 00000 0 00037    00030     +0 00000 0 00036    00031     +0 00000 0 00037   
 00032     +0 00000 0 00036    00033     +0 00000 0 00037    00034     +0 00000 0 00034    00035     +0 00000 0 00037   
 00036     +0 00000 0 00000                                                                                             
                 V'S MDY=0,0,0,0                                                    029  LM00034
 00016     +0 00000 0 00000    00017     +0 00000 0 00000    00020     +0 00000 0 00000    00021     +0 00000 0 00000   
                 V'S MASK=0,770000000000K,77000000K,7700K,7700000000K,770000K       030  LM00035
                1,77K                                                               030  LM00036
 00007     +0 00000 0 00077    00010     +0 00000 7 70000    00011     +0 07700 0 00000    00012     +0 00000 0 07700   
 00013     +0 00077 0 00000    00014     -3 70000 0 00000    00015     +0 00000 0 00000                                 
                 V'S SHFT=0,30,18,6,24,12,0                                         031  LM00037
 00037     +0 00000 0 00000    00040     +0 00000 0 00014    00041     +0 00000 0 00030    00042     +0 00000 0 00006   
 00043     +0 00000 0 00022    00044     +0 00000 0 00036    00045     +0 00000 0 00000                                 
                 END OF FUNCTION                                                    032  LM00038
 00363 TSX +0 07400 4 00000    00364 TXH +3 00000 0 00000    00365 SXD -0 63400 1 00364    00366 SXA +0 63400 4 00405   
 00367 CLA +0 50000 4 00001    00370 STA +0 62100 0 00075    00371 CLA +0 50000 4 00002    00372 STA +0 62100 0 00077   
 00373 CLA +0 50000 4 00003    00374 STA +0 62100 0 00115    00375 STA +0 62100 0 00154    00376 STA +0 62100 0 00177   
 00377 STA +0 62100 0 00307    00400 STA +0 62100 0 00320    00401 STA +0 62100 0 00332    00402 STA +0 62100 0 00350   
 00403 STA +0 62100 0 00361    00404 TRA +0 02000 2 00001    00405 AXT +0 77400 4 00000    00406 LXA +0 53400 2 00364   
 00407 LXD -0 53400 1 00364    00410 TRA +0 02000 4 00001                                                               
1       KEY  - PROGRAM TO TEST SENSE SWITCHES AND KEYS.                                          PAGE 1     
                  
                              *      WRITTEN BY ROGER ROACH    2/14/67  
                              *     
                              * CALLING SEQUENCE -    
                              *     
                              *        A = SS.(N)     
                              *           IF S.S. N IS ON A WILL BE NON-ZERO, OTHERWISE  A = 0  
                              *        A = KEY.()     
                              *           A WILL CONTAIN THE INTEGER VALUE OF THE KEYS.   
                              *     
                       00003         ENTRY   SS 
                       00013         ENTRY   KEY
                  
        TRANSFER VECTOR 
      00000  665126436760     WRFLX 
                  
            LINKAGE DIRECTOR  
      00001  000000000000     
      00002  626260606060     
                  
      00003  0634 00 4 00011  SS     SXA     XR4,4    
      00004 -0500 60 4 00001         CAL*    1,4           GET SS NUMBER 'N'  
      00005  0737 00 4 00000         PAC     ,4            SWITCH NO TO XR4   
      00006 -3 77771 4 00016         TXL     ERROR,4,-7     
      00007  0522 00 4 00026         XEC     TBL,4         GET A SS TEST
      00010 -0754 00 0 00000         ZAC                   OFF    
      00011  0774 00 4 00000  XR4    AXT     **,4          ON     
      00012  0020 00 4 00001         TRA     1,4
                              *     
                              *     
      00013  0760 00 0 00004  KEY    ENK  
      00014  0131 00 0 00000         XCA  
      00015  0020 00 4 00001         TRA     1,4
                              *     
      00016  0074 00 4 00000  ERROR  TSX     $WRFLX,4 
      00017  0 00004 0 00022         PZE     MESSAG,,4
      00020 -0754 00 0 00000         ZAC  
      00021  0020 00 0 00011         TRA     XR4
      00022  314343252721     MESSAG BCI     4,ILLEGAL SENSE SWITCH.    
      00023  436062254562     
      00024  256062663163     
      00025  233033606060     
                              *     
      00026  0760 00 0 00161  TBL    SWT     1  
      00027  0760 00 0 00161         SWT     1  
      00030  0760 00 0 00162         SWT     2  
      00031  0760 00 0 00163         SWT     3  
      00032  0760 00 0 00164         SWT     4  
      00033  0760 00 0 00165         SWT     5  
      00034  0760 00 0 00166         SWT     6  
                                     END  
1       KEY  - PROGRAM TO TEST SENSE SWITCHES AND KEYS.                                          PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         35 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          3     SS     0
         13    KEY     0
         26    TBL     7
         11    XR4     3,   21
         16  ERROR     6
          0  WRFLX    16
         22 MESSAG    17
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




 QLOAD   BCD 09/20/68 0220.7   21908         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   QLOAD   MAD            04/20/68    1608.9
-                 
                  PROGRAM TO REACTED TO OVERLOAD CONDITIONS                                            LM00001    
                  REWRITTEN BY ROGER ROACH 2/20/68                                                     LM00002    
                   FROM A PREVIOUS VERSION BY R. MILLS                                                 LM00003    
                  NORMAL MODE IS INTEGER                                                          *001 LM00004    
                  FLOATING POINT QLEN, QLEN1, QLEN2, FGLOC, FQLEN                                 *002 LM00005    
                  BOOLEAN OFLAG, QFLAG                                                            *003 LM00006    
                  DIMENSION ME(1), FQLEN(1)                                                       *004 LM00007    
                                                                                                       LM00008    
                                                                                                       LM00009    
                  VECTOR VALUES SYSMAX = 45                                                       *005 LM00010    
                    ... MAXIMUM NUMBER OF USERS ALLOWED IN                                             LM00011    
                                                                                                       LM00012    
                  VECTOR VALUES SYSMIN = 12                                                       *006 LM00013    
                    ... MINIMUM NUMBER OF USERS ALLOWED IN                                             LM00014    
                                                                                                       LM00015    
                  VECTOR VALUES NORMAL = 30                                                       *007 LM00016    
                    ... NORMAL QUANTUM IN 60THS OF A SECOND                                            LM00017    
                                                                                                       LM00018    
                  VECTOR VALUES SPESHL = 60                                                       *008 LM00019    
                    ... QUANTUM DURING OVERLOAD CONDITIONS (60THS)                                     LM00020    
                                                                                                       LM00021    
                  VECTOR VALUES QLEN1 = 8.0                                                       *009 LM00022    
                    ... THRESHOLD FOR QUEUE LENGTH DURING OVERLOAD                                     LM00023    
                                                                                                       LM00024    
                  VECTOR VALUES QLEN2 = 10.0                                                      *010 LM00025    
                    ... THRESHOLD FOR QUEUE LENGTH ANYTIME                                             LM00026    
                                                                                                       LM00027    
                  VECTOR VALUES OVFON = 10                                                        *011 LM00028    
                    ... THRESHOLD WHEN OVERFLOW CONDITION IS ON                                        LM00029    
                                                                                                       LM00030    
                  VECTOR VALUES OVFOFF = 5                                                        *012 LM00031    
                    ... THRESHOLD WHEN OVERFLOW CONDITION IS OFF                                       LM00032    
                                                                                                       LM00033    
                  VECTOR VALUES NDRUMS = 2                                                        *013 LM00034    
                    ... NUMBER OF HIGH SPEED DRUMS ON CTSS                                             LM00035    
                                                                                                       LM00036    
                  VECTOR VALUES QFLAG = 0B                                                        *014 LM00037    
                    ... INDICATOR OF HIGH QUEUE LENGTH ON LAST LOOK                                    LM00038    
                                                                                                       LM00039    
                  VECTOR VALUES CUMOFT = 0                                                        *015 LM00040    
                    ... CUMULATIVE OVERFLOW TIME (NOT PRESENTLY USED)                                  LM00041    
                                                                                                       LM00042    
                  VECTOR VALUES CUMTIM = 0                                                        *016 LM00043    
                    ... CUMLATIVE TIME (NOT PRESENTLY USED)                                            LM00044    
                                                                                                       LM00045    
                  VECTOR VALUES SLPTIM = 300                                                      *017 LM00046    
                    ... SLEEPING TIME (60THS)                                                          LM00047    
                                                                                                       LM00048    
                  VECTOR VALUES COMMND = 777777777777K,$CTEST9$                                   *018 LM00049    
                    ... COMMAND EXECUTED UPON RETURN FROM I/C COMM.                                    LM00050    
                                                                                                       LM00051    
                  VECTOR VALUES BLANK = 605757575757K                                             *019 LM00052    
                                                                                                       LM00053    
                  INITIALIZATION                                                                       LM00054    
                                                                                                       LM00055    
                  SET UP COMMAND FOR RETURNING FROM I/C COMM.                                          LM00056    
                                                                                                       LM00057    
                  COMMND(1) = COMARG.(0)                                                          *020 LM00058    
                  OFFON.($ QLOAD$)                                                                *021 LM00059    
                                                                                                       LM00060    
                                                                                                       LM00061    
                  CHECK FOR CORRECT USER.                                                              LM00062    
                                                                                                       LM00063    
                  WHOAMI.(ME(1)...2)                                                              *022 LM00064    
                                                                                                       LM00065    
                  LET THE OPERATORS USE IT FOR NOW.                                                    LM00066    
                  WHENEVER ME(1).E.$ C0033$ .AND. ME.E.$   960$, TRANSFER TO OK                   *023 LM00067    
                  WHENEVER (ME(1).NE.$ M1416$ .AND. ME(1).NE.$ T0100$) .OR. (ME.NE.               *024 LM00068    
                1  $  4301$.AND.ME.NE.$  5886$.AND.ME.NE.$  9324$.AND.ME.NE.                      *024 LM00069    
                2  $   385$.AND.ME.NE.$  3845$.AND.ME.NE.$  2962$), TSK.(0)                       *024 LM00070    
                                                                                                       LM00071    
                  INTIALIZE CORE A FETCHES.                                                            LM00072    
                                                                                                       LM00073    
      OK          OVFLOC = ACORE.($OVRFLO$).RS.18                                                 *025 LM00074    
                  QUELOC = ACORE.($AVQLEN$).RS.18                                                 *026 LM00075    
                  QTMLOC = COMLOC.($QUANTM$)                                                      *027 LM00076    
                  MXULOC = COMLOC.($MXUSRS$)                                                      *028 LM00077    
                  NUSLOC = COMLOC.($NUSERS$)                                                      *029 LM00078    
                  PROBN  = COMLOC.($PROBN$)                                                       *030 LM00079    
                  PROGN  = COMLOC.($PROGN$)                                                       *031 LM00080    
                  N      = COMLOC.($N$)                                                           *032 LM00081    
                                                                                                       LM00082    
                   SET MAXIMUM NUMBER OF USERS TO N-3                                                  LM00083    
                                                                                                       LM00084    
                  SYSMAX = N-3                                                                    *033 LM00085    
                                                                                                       LM00086    
                  CALCULATE NUMBER OF SECTORS AVAILABLE ON HIGHSPEED DRUMS                             LM00087    
                                                                                                       LM00088    
                  SCOUNT = 96 * NDRUMS - (N+2)/2                                                  *034 LM00089    
                                                                                                       LM00090    
                   AND WHERE THE DRUM FIGURES ARE KEPT                                                 LM00091    
                                                                                                       LM00092    
                  SCTLOC = OVFLOC -4 -5*(N+1) -2*SCOUNT -((N+1)-((N+1)/2)*2)                      *035 LM00093    
                                                                                                       LM00094    
                  SEE IF WE ARE TO RESET MXUSRS                                                        LM00095    
                  WHENEVER COMARG.(1,ARG1).E.$ RESET$.AND.COMARG.(2,ARG2).NE.                     *036 LM00096    
                1   777777777777K                                                                 *036 LM00097    
                       ARG2 = BCDEC.(ARG2)                                                        *037 LM00098    
                       WHENEVER ARG2.LE.SYSMAX .AND. ARG2.GE.SYSMIN                               *038 LM00099    
                            SLOC.(ARG2,MXULOC)                                                    *039 LM00100    
                            SYSMAX = ARG2                                                         *040 LM00101    
                            PRMESS.($MXUSRS RESET TO$,BZ57.(DERBC.(ARG2)))                        *041 LM00102    
                       OTHERWISE                                                                  *042 LM00103    
                            PRMESS.($ILLEGAL MXUSRS SETTING IGNORED.$)                            *043 LM00104    
                       END OF CONDITIONAL                                                         *044 LM00105    
                  END OF CONDITIONAL                                                              *045 LM00106    
                                                                                                       LM00107    
                  INITIALIZE THE QUANTUM CONDITION FLAG                                                LM00108    
                                                                                                       LM00109    
                  QUANTM = GLOC.(QTMLOC)                                                          *046 LM00110    
                  WHENEVER QUANTM .E. NORMAL                                                      *047 LM00111    
                       OFLAG = 0B                                                                 *048 LM00112    
                  OR WHENEVER QUANTM .E. SPESHL                                                   *049 LM00113    
                       OFLAG = 1B                                                                 *050 LM00114    
                  OTHERWISE                                                                       *051 LM00115    
                       PRMESS.($UNEXPECTED QUANTUM$)                                              *052 LM00116    
                       CHNCOM.(0)                                                                 *053 LM00117    
                  END OF CONDITIONAL                                                              *054 LM00118    
                                                                                                       LM00119    
                  INITIALIZE 'ELAPSED TIME IN OVERFLOW' CALCULATION                                    LM00120    
                                                                                                       LM00121    
                  NEWOFT = GLOC.(OVFLOC+1)                                                        *055 LM00122    
                  NEWTIM = GETIME.(0)                                                             *056 LM00123    
                                                                                                       LM00124    
                  PRINT HEADER LINE                                                                    LM00125    
                                                                                                       LM00126    
                  GETTM.(DATE,TIME)                                                               *057 LM00127    
                  PRMESS.($ TIME    CUR   MAX QLEN HDRUM$,BLANK,DATE)                             *058 LM00128    
                                                                                                       LM00129    
                                                                                                       LM00130    
                      START MAIN LOOP                                                                  LM00131    
                                                                                                       LM00132    
      START       GETTM.(DATE,TIME)                                                               *059 LM00133    
                  OLDTIM = NEWTIM                                                                 *060 LM00134    
                  NEWTIM = GETIME.(0)                                                             *061 LM00135    
                  DELTIM = NEWTIM - OLDTIM                                                        *062 LM00136    
                  CUMTIM = CUMTIM + DELTIM                                                        *063 LM00137    
                                                                                                       LM00138    
                  OLDOFT = NEWOFT                                                                 *064 LM00139    
                  NEWOFT = GLOC.(OVFLOC+1)                                                        *065 LM00140    
                  DELOFT = NEWOFT - OLDOFT                                                        *066 LM00141    
                  CUMOFT = CUMOFT + DELOFT                                                        *067 LM00142    
                                                                                                       LM00143    
                  GET PERCENTAGE OF OVERFLOW ONTO DISK SINCE LAST LOOK                                 LM00144    
                                                                                                       LM00145    
                  PCNTOF = (100 * DELOFT)/DELTIM                                                  *068 LM00146    
                                                                                                       LM00147    
                  GET PERCENTAGE OF HIGHSPEED DRUM USAGE                                               LM00148    
                                                                                                       LM00149    
                  PCNTDR = 100 * ( SCOUNT - GLOC.(SCTLOC))/SCOUNT                                 *069 LM00150    
                                                                                                       LM00151    
                  GET THE CURRENT QUEUE LENGTH                                                         LM00152    
                                                                                                       LM00153    
                  FQLEN = FGLOC.(QUELOC) / 1000.0 + 0.05                                          *070 LM00154    
                  QLEN = FQLEN                                                                    *071 LM00155    
                  FLOTBC.(FQLEN)                                                                  *072 LM00156    
                                                                                                       LM00157    
                  GET NUSERS AND MXUSRS AND PRINT A DATA LINE                                          LM00158    
                                                                                                       LM00159    
                  NUSERS = GLOC.(NUSLOC)                                                          *073 LM00160    
                  MXUSRS = GLOC.(MXULOC)                                                          *074 LM00161    
                  PRMESS.(TIME,BZEL.(DERBC.(NUSERS)),BZEL.(DERBC.(MXUSRS)),                       *075 LM00162    
                1  FQLEN ...2,BZEL.(DERBC.(PCNTDR)))                                              *075 LM00163    
                                                                                                       LM00164    
                  TEST DRUM OVERLOAD CONDITIONS AND REACT                                              LM00165    
                                                                                                       LM00166    
                  WHENEVER PCNTOF .GE. OVFON                                                      *076 LM00167    
                       WHENEVER .NOT. OFLAG, SLOC.(SPESHL,QTMLOC)                                 *077 LM00168    
                       PRMESS.(BZ57.(DERBC.(PCNTOF)),$ PERCENT OVERFLOW$)                         *078 LM00169    
                       OFLAG = 1B                                                                 *079 LM00170    
                  OR WHENEVER PCNTOF .LE. OVFOFF .AND. OFLAG                                      *080 LM00171    
                       SLOC.(NORMAL,QTMLOC)                                                       *081 LM00172    
                       PRMESS.($NO MORE OVERFLOW$)                                                *082 LM00173    
                       OFLAG = 0B                                                                 *083 LM00174    
                  END OF CONDITIONAL                                                              *084 LM00175    
                                                                                                       LM00176    
                         THE FOLLOWING SECTION AFFECTS NUSERS AND MXUSRS IN                            LM00177    
                  RESPONSE TO THE OVERLOAD CONDITION AS DETERMINED BY THE                              LM00178    
                  QUEUE LENGTH.  IT WILL LOG OUT A STANDBY USER IF THE QUEUE                           LM00179    
                  LENGTH IS ABOVE AN APPROPIATE THRESHOLD TWICE IN A ROW.  IT                          LM00180    
                  ALSO LOWERS MXUSRS BY 1 (DOWN TO SYSMIN).  OTHERWISE IT                              LM00181    
                  RAISES MXUSRS BY 1 (UP TO SYSMAX).                                                   LM00182    
                                                                                                       LM00183    
                  WHENEVER (QLEN.G.QLEN2) .OR. (QLEN.G.QLEN1 .AND. OFLAG)                         *085 LM00184    
                       WHENEVER QFLAG                                                             *086 LM00185    
                        MAKE SURE IT WAS THIS WAY LAST TIME, THEN REACT                                LM00186    
                                                                                                       LM00187    
                            WHENEVER MXUSRS.LE. SYSMIN, TRANSFER TO BED                           *087 LM00188    
                            MXUSRS = NUSERS - 1                                                   *088 LM00189    
                            WHENEVER MXUSRS .LE. SYSMIN, MXUSRS = SYSMIN                          *089 LM00190    
                            SLOC.(MXUSRS,MXULOC)                                                  *090 LM00191    
                            PRMESS.($MXUSRS CUT TO$,BZ57.(DERBC.(MXUSRS)))                        *091 LM00192    
                            LOSER = FINDSB.(0)                                                    *092 LM00193    
                            WHENEVER LOSER .G. 2                                                  *093 LM00194    
                                 KILL.(LOSER)                                                     *094 LM00195    
                                 PRMESS.($KILLED$,GLOC.(PROBN+LOSER),                             *095 LM00196    
                1                BLANK,GLOC.(PROGN+LOSER))                                        *095 LM00197    
                            OTHERWISE                                                             *096 LM00198    
                                 PRMESS.($NO STANDBY USER TO KILL$)                               *097 LM00199    
                            END OF CONDITIONAL                                                    *098 LM00200    
                       OTHERWISE                                                                  *099 LM00201    
                            QFLAG = 1B                                                            *100 LM00202    
                       MXUSRS = NUSERS                                                            *101 LM00203    
                            WHENEVER MXUSRS .LE. SYSMIN, MXUSRS = SYSMIN                          *102 LM00204    
                            SLOC.(MXUSRS,MXULOC)                                                  *103 LM00205    
                            PRMESS.($MXUSRS CUT TO$,BZ57.(DERBC.(MXUSRS)))                        *104 LM00206    
                       END OF CONDITIONAL                                                         *105 LM00207    
                  OTHERWISE                                                                       *106 LM00208    
                       QFLAG = 0B                                                                 *107 LM00209    
                       WHENEVER MXUSRS .GE. SYSMAX, TRANSFER TO BED                               *108 LM00210    
                       MXUSRS = MXUSRS + 1                                                        *109 LM00211    
                       SLOC.(MXUSRS,MXULOC)                                                       *110 LM00212    
                       PRMESS.($MXUSRS RAISED TO$,(BZ57.(DERBC.(MXUSRS))                          *111 LM00213    
                1      .A.7777K).V.57575757K4)                                                    *111 LM00214    
                  END OF CONDITIONAL                                                              *112 LM00215    
                                                                                                       LM00216    
                                                                                                       LM00217    
                  NOW GO TO SLEEP.                                                                     LM00218    
                                                                                                       LM00219    
      BED         WHENEVER COMARG.(1,ARG1).E.$ RESET$, ARG1 = COMARG.(3)                          *113 LM00220    
                  WHENEVER BCDEC.(ARG1).E.0, ARG1 = 777777777777K                                 *114 LM00221    
                  WHENEVER ARG1.NE.777777777777K,SLPTIM=BCDEC.(ARG1)*60                           *115 LM00222    
                  SNOOZE.(SLPTIM,COMMND(1))                                                       *116 LM00223    
                  TRANSFER TO START                                                               *117 LM00224    
                                                                                                       LM00225    
                  INTERNAL SUBROUTINES                                                                 LM00226    
                                                                                                       LM00227    
                  INTERNAL FUNCTION (ARG)                                                         *118 LM00228    
                  ENTRY TO FGLOC.                                                                 *119 LM00229    
                  FUNCTION RETURN GLOC.(ARG)                                                      *120 LM00230    
                  END OF FUNCTION                                                                 *121 LM00231    
                                                                                                       LM00232    
                  CONVERT TO BCD                                                                       LM00233    
                                                                                                       LM00234    
                  INTERNAL FUNCTION (NUM)                                                         *122 LM00235    
                  ENTRY TO CONV.                                                                  *123 LM00236    
                  FUNCTION RETURN (BZEL.(DEFBC.(NUM)).A.777777K).V.575757K6                       *124 LM00237    
                  END OF FUNCTION                                                                 *125 LM00238    
                                                                                                       LM00239    
                   CONVERT FLOATING POINT TO BCD                                                       LM00240    
                                                                                                       LM00241    
                  INTERNAL FUNCTION (NUM)                                                         *126 LM00242    
                  ENTRY TO FLOTBC.                                                                *127 LM00243    
                  FIX.(NUM,NUM,NUM(1))                                                            *128 LM00244    
                  NUM = CONV.(NUM)                                                                *129 LM00245    
                  NUM(1) = (FRACBC.(NUM(1)).RS.6).A.77K8 .V. 330057575757K                        *130 LM00246    
                  FUNCTION RETURN                                                                 *131 LM00247    
                  END OF FUNCTION                                                                 *132 LM00248    
                                                                                                       LM00249    
                                                                                                       LM00250    
                  END OF PROGRAM                                                                  *133 LM00251    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01315 TRANSFER VECTOR LENGTH  00030 PROGRAM BEGINS    00226
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ARG1   00037   1        FQLEN  00052 A 0        NUSERS 00065   1        PCNTOF 00076   1        QUELOC 00107   1  
      ARG2   00040   1        LOSER  00053   1        NUSLOC 00066   1        PROBN  00077   1        SCOUNT 00110   1  
      BED    00034   4        ME     00055 A 1        OFLAG  00067   2        PROGN  00100   1        SCTLOC 00111   1  
      BLANK  00041 A 1        MXULOC 00056   1        OK     00035   4        QFLAG  00101 A 2        SLPTIM 00112 A 1  
      COMMND 00043 A 1        MXUSRS 00057   1        OLDOFT 00070   1        QLEN1  00102 A 0        SPESHL 00113 A 1  
      CUMOFT 00044 A 1        NDRUMS 00060 A 1        OLDTIM 00071   1        QLEN2  00103 A 0        START  00036   4  
      CUMTIM 00045 A 1        NEWOFT 00061   1        OVFLOC 00072   1        QLEN   00104   0        SYSMAX 00114 A 1  
      DATE   00046   1        NEWTIM 00062   1        OVFOFF 00073 A 1        QTMLOC 00105   1        SYSMIN 00115 A 1  
      DELOFT 00047   1        NORMAL 00063 A 1        OVFON  00074 A 1        QUANTM 00106   1        TIME   00116   1  
      DELTIM 00050   1        N      00064   1        PCNTDR 00075   1                                                  
0FUNCTION DICTIONARY    
      ACORE  00000   1        BCDEC  00001   1        BZ57   00002   1        BZEL   00003   1        CHNCOM 00004   1  
      COMARG 00005   1        COMLOC 00006   1        DEFBC  00007   1        DERBC  00010   1        EXIT   00011   1  
      FINDSB 00012   1        FIX    00013   1        FRACBC 00014   1        GETIME 00015   1        GETTM  00016   1  
      GLOC   00017   1        .SETUP 00020   1        KILL   00021   1        OFFON  00022   1        PRMESS 00023   1  
      SLOC   00024   1        SNOOZE 00025   1        TSK    00026   1        WHOAMI 00027   1        CONV   00030   1  
      FGLOC  00031   0        FLOTBC 00032   1                                                                          
0ABSOLUTE CONSTANTS     
 00150 +330057575757     00134 +007700000000     00125 +000000000006     00172 -175757000000     00133 +000000777777    
 00127 +000000000074     00142 +246063466060     00203 -205121316225     00173 -175757570000     00132 +000000007777    
 00176 -204231434360     00221 -222551606346     00155 -052422706064     00157 -054660626321     00152 -023143432524    
 00163 -066060606060     00175 -202364636063     00144 +264346666060     00143 +256046652551     00156 -054660444651    
 00170 -112643466660     00161 -056360466525     00200 -204725512325     00135 +174631463146     00136 +212764000000    
 00131 +000000000144     00146 +302451644460     00201 -205043254560     00215 -206060442167     00214 -206060236451    
 00217 -206331442560     00223 -242145636444     00141 +236325246050     00224 -244525674725     00151 +336060606060    
 00145 +274546512524     00222 -233145276031     00171 -116260622563     00153 -036044676462     00147 +314343252721    
 00220 -206346606060     00204 -205125622563     00225 -377777777777     00123 +000000000004     00124 +000000000005    
 00130 +000000000140     00122 +000000000003     00160 -056060606060     00166 -075146274560     00165 -075146224560    
 00162 -056462255162     00154 -046764625162     00167 -106421456344     00137 +216550432545     00126 +000000000022    
 00164 -066551264346     00177 -204401040106     00216 -206300010000     00207 -206004030001     00210 -206005101006    
 00211 -206011030204     00212 -206060031005     00206 -206003100405     00205 -206002110602     00174 -202300000303    
 00213 -206060110600     00121 +000000000002     00202 -205043462124     00117 +000000000000     00120 +000000000001    
 00140 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00034 TXL -301135001125       00035 TXL -300310000300       00036 TXL -300540000535                                    
0PROGRAM    
                 N'R                                                                001  LM00004
                 FLOATING POINT QLEN, QLEN1, QLEN2, FGLOC, FQLEN                    002  LM00005
                 BOOLEAN OFLAG, QFLAG                                               003  LM00006
                 D'N ME(1), FQLEN(1)                                                004  LM00007
                 V'S SYSMAX = 45                                                    005  LM00010
 00226 TSX +0 07400 4 00020    00114     +0 00000 0 00055                                                               
                 V'S SYSMIN = 12                                                    006  LM00013
 00115     +0 00000 0 00014                                                                                             
                 V'S NORMAL = 30                                                    007  LM00016
 00063     +0 00000 0 00036                                                                                             
                 V'S SPESHL = 60                                                    008  LM00019
 00113     +0 00000 0 00074                                                                                             
                 V'S QLEN1 = 8.0                                                    009  LM00022
 00102     +2 04400 0 00000                                                                                             
                 V'S QLEN2 = 10.0                                                   010  LM00025
 00103     +2 04500 0 00000                                                                                             
                 V'S OVFON = 10                                                     011  LM00028
 00074     +0 00000 0 00012                                                                                             
                 V'S OVFOFF = 5                                                     012  LM00031
 00073     +0 00000 0 00005                                                                                             
                 V'S NDRUMS = 2                                                     013  LM00034
 00060     +0 00000 0 00002                                                                                             
                 V'S QFLAG = 0B                                                     014  LM00037
 00101     +0 00000 0 00000                                                                                             
                 V'S CUMOFT = 0                                                     015  LM00040
 00044     +0 00000 0 00000                                                                                             
                 V'S CUMTIM = 0                                                     016  LM00043
 00045     +0 00000 0 00000                                                                                             
                 V'S SLPTIM = 300                                                   017  LM00046
 00112     +0 00000 0 00454                                                                                             
                 V'S COMMND = 777777777777K,$CTEST9$                                018  LM00049
 00042     +2 36325 6 26311    00043     -3 77777 7 77777                                                               
                 V'S BLANK = 605757575757K                                          019  LM00052
 00041     -2 05757 5 75757                                                                                             
                 COMMND(1) = COMARG.(0)                                             020  LM00058
 00227 TSX +0 07400 4 00005    00230 TXH +3 00000 0 00117    00231 STO +0 60100 0 00042                                 
                 OFFON.($ QLOAD$)                                                   021  LM00059
 00232 TSX +0 07400 4 00022    00233 TXH +3 00000 0 00202                                                               
                 WHOAMI.(ME(1)...2)                                                 022  LM00064
 00234 TSX +0 07400 4 00027    00235 TIX +2 00121 0 00054                                                               
                 W'R ME(1).E.$ C0033$ .AND. ME.E.$   960$, T'O OK                   023  LM00067
 00236 CLA +0 50000 0 00055    00237 SUB +0 40200 0 00213    00240 TNZ -0 10000 0 00245    00241 CLA +0 50000 0 00054   
 00242 SUB +0 40200 0 00174    00243 TNZ -0 10000 0 00245    00244 TRA +0 02000 0 00035                                 
                 W'R (ME(1).NE.$ M1416$ .AND. ME(1).NE.$ T0100$) .OR. (ME.NE.       024  LM00068
                1 $  4301$.AND.ME.NE.$  5886$.AND.ME.NE.$  9324$.AND.ME.NE.         024  LM00069
                2 $   385$.AND.ME.NE.$  3845$.AND.ME.NE.$  2962$), TSK.(0)          024  LM00070
 00245 CLA +0 50000 0 00055    00246 SUB +0 40200 0 00205    00247 TZE +0 10000 0 00267    00250 CLA +0 50000 0 00055   
 00251 SUB +0 40200 0 00206    00252 TZE +0 10000 0 00267    00253 CLA +0 50000 0 00055    00254 SUB +0 40200 0 00212   
 00255 TZE +0 10000 0 00267    00256 CLA +0 50000 0 00055    00257 SUB +0 40200 0 00211    00260 TZE +0 10000 0 00267   
 00261 CLA +0 50000 0 00055    00262 SUB +0 40200 0 00210    00263 TZE +0 10000 0 00267    00264 CLA +0 50000 0 00055   
 00265 SUB +0 40200 0 00207    00266 TNZ -0 10000 0 00276    00267 CLA +0 50000 0 00054    00270 SUB +0 40200 0 00216   
 00271 TZE +0 10000 0 00275    00272 CLA +0 50000 0 00054    00273 SUB +0 40200 0 00177    00274 TNZ -0 10000 0 00276   
 00275 TRA +0 02000 0 00300    00276 TSX +0 07400 4 00026    00277 TXH +3 00000 0 00117                                 
      OK         OVFLOC = ACORE.($OVRFLO$).RS.18                                    025  LM00074
 00300 TSX +0 07400 4 00000    00301 TXH +3 00000 0 00164    00302 STO +0 60100 0 01310    00303 CAL -0 50000 0 00126   
 00304 STA +0 62100 0 00306    00305 CAL -0 50000 0 01310    00306 LGR -0 76500 0 00000    00307 SLW +0 60200 0 00072   
                 QUELOC = ACORE.($AVQLEN$).RS.18                                    026  LM00075
 00310 TSX +0 07400 4 00000    00311 TXH +3 00000 0 00137    00312 STO +0 60100 0 01310    00313 CAL -0 50000 0 00126   
 00314 STA +0 62100 0 00316    00315 CAL -0 50000 0 01310    00316 LGR -0 76500 0 00000    00317 SLW +0 60200 0 00107   
                 QTMLOC = COMLOC.($QUANTM$)                                         027  LM00076
 00320 TSX +0 07400 4 00006    00321 TXH +3 00000 0 00167    00322 STO +0 60100 0 00105                                 
                 MXULOC = COMLOC.($MXUSRS$)                                         028  LM00077
 00323 TSX +0 07400 4 00006    00324 TXH +3 00000 0 00154    00325 STO +0 60100 0 00056                                 
                 NUSLOC = COMLOC.($NUSERS$)                                         029  LM00078
 00326 TSX +0 07400 4 00006    00327 TXH +3 00000 0 00162    00330 STO +0 60100 0 00066                                 
                 PROBN  = COMLOC.($PROBN$)                                          030  LM00079
 00331 TSX +0 07400 4 00006    00332 TXH +3 00000 0 00165    00333 STO +0 60100 0 00077                                 
                 PROGN  = COMLOC.($PROGN$)                                          031  LM00080
 00334 TSX +0 07400 4 00006    00335 TXH +3 00000 0 00166    00336 STO +0 60100 0 00100                                 
                 N      = COMLOC.($N$)                                              032  LM00081
 00337 TSX +0 07400 4 00006    00340 TXH +3 00000 0 00160    00341 STO +0 60100 0 00064                                 
                 SYSMAX = N-3                                                       033  LM00085
 00342 CLA +0 50000 0 00064    00343 SUB +0 40200 0 00122    00344 STO +0 60100 0 00114                                 
                 SCOUNT = 96 * NDRUMS - (N+2)/2                                     034  LM00089
 00345 CLA +0 50000 0 00064    00346 ADD +0 40000 0 00121    00347 LRS +0 76500 0 00043    00350 DVP +0 22100 0 00121   
 00351 STQ -0 60000 0 01310    00352 LDQ +0 56000 0 00130    00353 MPY +0 20000 0 00060    00354 XCA +0 13100 0 00000   
 00355 SUB +0 40200 0 01310    00356 STO +0 60100 0 00110                                                               
                 SCTLOC = OVFLOC -4 -5*(N+1) -2*SCOUNT -((N+1)-((N+1)/2)*2)         035  LM00093
 00357 CLA +0 50000 0 00064    00360 ADD +0 40000 0 00120    00361 LRS +0 76500 0 00043    00362 DVP +0 22100 0 00121   
 00363 MPY +0 20000 0 00121    00364 STQ -0 60000 0 01310    00365 CLA +0 50000 0 00064    00366 ADD +0 40000 0 00120   
 00367 SUB +0 40200 0 01310    00370 STO +0 60100 0 01310    00371 LDQ +0 56000 0 00121    00372 MPY +0 20000 0 00110   
 00373 STQ -0 60000 0 01311    00374 CLA +0 50000 0 00064    00375 ADD +0 40000 0 00120    00376 XCA +0 13100 0 00000   
 00377 MPY +0 20000 0 00124    00400 STQ -0 60000 0 01312    00401 CLA +0 50000 0 00072    00402 SUB +0 40200 0 00123   
 00403 SUB +0 40200 0 01312    00404 SUB +0 40200 0 01311    00405 SUB +0 40200 0 01310    00406 STO +0 60100 0 00111   
                 W'R COMARG.(1,ARG1).E.$ RESET$.AND.COMARG.(2,ARG2).NE.             036  LM00096
                1  777777777777K                                                    036  LM00097
 00407 TSX +0 07400 4 00005    00410 TXH +3 00000 0 00121    00411 TXH +3 00000 0 00040    00412 SUB +0 40200 0 00225   
 00413 TZE +0 10000 0 00464    00414 TSX +0 07400 4 00005    00415 TXH +3 00000 0 00120    00416 TXH +3 00000 0 00037   
 00417 SUB +0 40200 0 00204    00420 TNZ -0 10000 0 00464                                                               
                      ARG2 = BCDEC.(ARG2)                                           037  LM00098
 00421 TSX +0 07400 4 00001    00422 TXH +3 00000 0 00040    00423 STO +0 60100 0 00040                                 
                      W'R ARG2.LE.SYSMAX .AND. ARG2.GE.SYSMIN                       038  LM00099
 00424 CLA +0 50000 0 00040    00425 SUB +0 40200 0 00115    00426 TZE +0 10000 0 00430    00427 TMI -0 12000 0 00455   
 00430 CLA +0 50000 0 00040    00431 SUB +0 40200 0 00114    00432 TZE +0 10000 0 00434    00433 TPL +0 12000 0 00455   
                           SLOC.(ARG2,MXULOC)                                       039  LM00100
 00434 TSX +0 07400 4 00024    00435 TXH +3 00000 0 00040    00436 TXH +3 00000 0 00056                                 
                           SYSMAX = ARG2                                            040  LM00101
 00437 CLA +0 50000 0 00040    00440 STO +0 60100 0 00114                                                               
                           PRMESS.($MXUSRS RESET TO$,BZ57.(DERBC.(ARG2)))           041  LM00102
 00441 TSX +0 07400 4 00010    00442 TXH +3 00000 0 00040    00443 STO +0 60100 0 01312    00444 TSX +0 07400 4 00002   
 00445 TXH +3 00000 0 01312    00446 STO +0 60100 0 01312    00447 TSX +0 07400 4 00023    00450 TXH +3 00000 0 00154   
 00451 TXH +3 00000 0 00204    00452 TXH +3 00000 0 00220    00453 TXH +3 00000 0 01312                                 
                      O'E                                                           042  LM00103
 00454 TRA +0 02000 0 00464                                                                                             
                           PRMESS.($ILLEGAL MXUSRS SETTING IGNORED.$)               043  LM00104
 00455 TSX +0 07400 4 00023    00456 TXH +3 00000 0 00147    00457 TXH +3 00000 0 00153    00460 TXH +3 00000 0 00171   
 00461 TXH +3 00000 0 00222    00462 TXH +3 00000 0 00145    00463 TXH +3 00000 0 00151                                 
                      E'L                                                           044  LM00105
                 E'L                                                                045  LM00106
                 QUANTM = GLOC.(QTMLOC)                                             046  LM00110
 00464 TSX +0 07400 4 00017    00465 TXH +3 00000 0 00105    00466 STO +0 60100 0 00106                                 
                 W'R QUANTM .E. NORMAL                                              047  LM00111
 00467 CLA +0 50000 0 00106    00470 SUB +0 40200 0 00063    00471 TNZ -0 10000 0 00475                                 
                      OFLAG = 0B                                                    048  LM00112
 00472 CLA +0 50000 0 00117    00473 STO +0 60100 0 00067                                                               
                 O'R QUANTM .E. SPESHL                                              049  LM00113
 00474 TRA +0 02000 0 00511    00475 CLA +0 50000 0 00106    00476 SUB +0 40200 0 00113    00477 TNZ -0 10000 0 00503   
                      OFLAG = 1B                                                    050  LM00114
 00500 CLA +0 50000 0 00120    00501 STO +0 60100 0 00067                                                               
                 O'E                                                                051  LM00115
 00502 TRA +0 02000 0 00511                                                                                             
                      PRMESS.($UNEXPECTED QUANTUM$)                                 052  LM00116
 00503 TSX +0 07400 4 00023    00504 TXH +3 00000 0 00224    00505 TXH +3 00000 0 00141    00506 TXH +3 00000 0 00223   
                      CHNCOM.(0)                                                    053  LM00117
 00507 TSX +0 07400 4 00004    00510 TXH +3 00000 0 00117                                                               
                 E'L                                                                054  LM00118
                 NEWOFT = GLOC.(OVFLOC+1)                                           055  LM00122
 00511 CLA +0 50000 0 00072    00512 ADD +0 40000 0 00120    00513 STO +0 60100 0 01312    00514 TSX +0 07400 4 00017   
 00515 TXH +3 00000 0 01312    00516 STO +0 60100 0 00061                                                               
                 NEWTIM = GETIME.(0)                                                056  LM00123
 00517 TSX +0 07400 4 00015    00520 TXH +3 00000 0 00117    00521 STO +0 60100 0 00062                                 
                 GETTM.(DATE,TIME)                                                  057  LM00127
 00522 TSX +0 07400 4 00016    00523 TXH +3 00000 0 00046    00524 TXH +3 00000 0 00116                                 
                 PRMESS.($ TIME    CUR   MAX QLEN HDRUM$,BLANK,DATE)                058  LM00128
 00525 TSX +0 07400 4 00023    00526 TXH +3 00000 0 00217    00527 TXH +3 00000 0 00214    00530 TXH +3 00000 0 00215   
 00531 TXH +3 00000 0 00201    00532 TXH +3 00000 0 00146    00533 TXH +3 00000 0 00041    00534 TXH +3 00000 0 00046   
      START      GETTM.(DATE,TIME)                                                  059  LM00133
 00535 TSX +0 07400 4 00016    00536 TXH +3 00000 0 00046    00537 TXH +3 00000 0 00116                                 
                 OLDTIM = NEWTIM                                                    060  LM00134
 00540 CLA +0 50000 0 00062    00541 STO +0 60100 0 00071                                                               
                 NEWTIM = GETIME.(0)                                                061  LM00135
 00542 TSX +0 07400 4 00015    00543 TXH +3 00000 0 00117    00544 STO +0 60100 0 00062                                 
                 DELTIM = NEWTIM - OLDTIM                                           062  LM00136
 00545 CLA +0 50000 0 00062    00546 SUB +0 40200 0 00071    00547 STO +0 60100 0 00050                                 
                 CUMTIM = CUMTIM + DELTIM                                           063  LM00137
 00550 CLA +0 50000 0 00045    00551 ADD +0 40000 0 00050    00552 STO +0 60100 0 00045                                 
                 OLDOFT = NEWOFT                                                    064  LM00139
 00553 CLA +0 50000 0 00061    00554 STO +0 60100 0 00070                                                               
                 NEWOFT = GLOC.(OVFLOC+1)                                           065  LM00140
 00555 CLA +0 50000 0 00072    00556 ADD +0 40000 0 00120    00557 STO +0 60100 0 01312    00560 TSX +0 07400 4 00017   
 00561 TXH +3 00000 0 01312    00562 STO +0 60100 0 00061                                                               
                 DELOFT = NEWOFT - OLDOFT                                           066  LM00141
 00563 CLA +0 50000 0 00061    00564 SUB +0 40200 0 00070    00565 STO +0 60100 0 00047                                 
                 CUMOFT = CUMOFT + DELOFT                                           067  LM00142
 00566 CLA +0 50000 0 00044    00567 ADD +0 40000 0 00047    00570 STO +0 60100 0 00044                                 
                 PCNTOF = (100 * DELOFT)/DELTIM                                     068  LM00146
 00571 LDQ +0 56000 0 00131    00572 MPY +0 20000 0 00047    00573 PXD -0 75400 0 00000    00574 LLS +0 76300 0 00000   
 00575 DVP +0 22100 0 00050    00576 STQ -0 60000 0 00076                                                               
                 PCNTDR = 100 * ( SCOUNT - GLOC.(SCTLOC))/SCOUNT                    069  LM00150
 00577 TSX +0 07400 4 00017    00600 TXH +3 00000 0 00111    00601 CHS +0 76000 0 00002    00602 ADD +0 40000 0 00110   
 00603 XCA +0 13100 0 00000    00604 MPY +0 20000 0 00131    00605 PXD -0 75400 0 00000    00606 LLS +0 76300 0 00000   
 00607 DVP +0 22100 0 00110    00610 STQ -0 60000 0 00075                                                               
                 FQLEN = FGLOC.(QUELOC) / 1000.0 + 0.05                             070  LM00154
 00611 TSX +0 07400 4 00031    00612 TXH +3 00000 0 00107    00613 FDP +0 24100 0 00136    00614 XCA +0 13100 0 00000   
 00615 FAD +0 30000 0 00135    00616 STO +0 60100 0 00052                                                               
                 QLEN = FQLEN                                                       071  LM00155
 00617 CLA +0 50000 0 00052    00620 STO +0 60100 0 00104                                                               
                 FLOTBC.(FQLEN)                                                     072  LM00156
 00621 TSX +0 07400 4 00032    00622 TXH +3 00000 0 00052                                                               
                 NUSERS = GLOC.(NUSLOC)                                             073  LM00160
 00623 TSX +0 07400 4 00017    00624 TXH +3 00000 0 00066    00625 STO +0 60100 0 00065                                 
                 MXUSRS = GLOC.(MXULOC)                                             074  LM00161
 00626 TSX +0 07400 4 00017    00627 TXH +3 00000 0 00056    00630 STO +0 60100 0 00057                                 
                 PRMESS.(TIME,BZEL.(DERBC.(NUSERS)),BZEL.(DERBC.(MXUSRS)),          075  LM00162
                1 FQLEN ...2,BZEL.(DERBC.(PCNTDR)))                                 075  LM00163
 00631 TSX +0 07400 4 00010    00632 TXH +3 00000 0 00075    00633 STO +0 60100 0 01312    00634 TSX +0 07400 4 00003   
 00635 TXH +3 00000 0 01312    00636 STO +0 60100 0 01312    00637 TSX +0 07400 4 00010    00640 TXH +3 00000 0 00057   
 00641 STO +0 60100 0 01311    00642 TSX +0 07400 4 00003    00643 TXH +3 00000 0 01311    00644 STO +0 60100 0 01311   
 00645 TSX +0 07400 4 00010    00646 TXH +3 00000 0 00065    00647 STO +0 60100 0 01310    00650 TSX +0 07400 4 00003   
 00651 TXH +3 00000 0 01310    00652 STO +0 60100 0 01310    00653 TSX +0 07400 4 00023    00654 TXH +3 00000 0 00116   
 00655 TXH +3 00000 0 01310    00656 TXH +3 00000 0 01311    00657 TIX +2 00121 0 00052    00660 TXH +3 00000 0 01312   
                 W'R PCNTOF .GE. OVFON                                              076  LM00167
 00661 CLA +0 50000 0 00076    00662 SUB +0 40200 0 00074    00663 TZE +0 10000 0 00665    00664 TMI -0 12000 0 00710   
                      W'R .NOT. OFLAG, SLOC.(SPESHL,QTMLOC)                         077  LM00168
 00665 ZET +0 52000 0 00067    00666 TRA +0 02000 0 00672    00667 TSX +0 07400 4 00024    00670 TXH +3 00000 0 00113   
 00671 TXH +3 00000 0 00105                                                                                             
                      PRMESS.(BZ57.(DERBC.(PCNTOF)),$ PERCENT OVERFLOW$)            078  LM00169
 00672 TSX +0 07400 4 00010    00673 TXH +3 00000 0 00076    00674 STO +0 60100 0 01312    00675 TSX +0 07400 4 00002   
 00676 TXH +3 00000 0 01312    00677 STO +0 60100 0 01312    00700 TSX +0 07400 4 00023    00701 TXH +3 00000 0 01312   
 00702 TXH +3 00000 0 00200    00703 TXH +3 00000 0 00161    00704 TXH +3 00000 0 00170                                 
                      OFLAG = 1B                                                    079  LM00170
 00705 CLA +0 50000 0 00120    00706 STO +0 60100 0 00067                                                               
                 O'R PCNTOF .LE. OVFOFF .AND. OFLAG                                 080  LM00171
 00707 TRA +0 02000 0 00727    00710 NZT -0 52000 0 00067    00711 TRA +0 02000 0 00727    00712 CLA +0 50000 0 00076   
 00713 SUB +0 40200 0 00073    00714 TZE +0 10000 0 00716    00715 TPL +0 12000 0 00727                                 
                      SLOC.(NORMAL,QTMLOC)                                          081  LM00172
 00716 TSX +0 07400 4 00024    00717 TXH +3 00000 0 00063    00720 TXH +3 00000 0 00105                                 
                      PRMESS.($NO MORE OVERFLOW$)                                   082  LM00173
 00721 TSX +0 07400 4 00023    00722 TXH +3 00000 0 00156    00723 TXH +3 00000 0 00143    00724 TXH +3 00000 0 00144   
                      OFLAG = 0B                                                    083  LM00174
 00725 CLA +0 50000 0 00117    00726 STO +0 60100 0 00067                                                               
                 E'L                                                                084  LM00175
                 W'R (QLEN.G.QLEN2) .OR. (QLEN.G.QLEN1 .AND. OFLAG)                 085  LM00184
 00727 NZT -0 52000 0 00067    00730 TRA +0 02000 0 00735    00731 CLA +0 50000 0 00104    00732 SUB +0 40200 0 00102   
 00733 TZE +0 10000 0 00735    00734 TPL +0 12000 0 00741    00735 CLA +0 50000 0 00104    00736 SUB +0 40200 0 00103   
 00737 TZE +0 10000 0 01071    00740 TMI -0 12000 0 01071                                                               
                      W'R QFLAG                                                     086  LM00185
 00741 NZT -0 52000 0 00101    00742 TRA +0 02000 0 01040                                                               
                           W'R MXUSRS.LE. SYSMIN, T'O BED                           087  LM00188
 00743 CLA +0 50000 0 00057    00744 SUB +0 40200 0 00115    00745 TZE +0 10000 0 00747    00746 TPL +0 12000 0 00750   
 00747 TRA +0 02000 0 00034                                                                                             
                           MXUSRS = NUSERS - 1                                      088  LM00189
 00750 CLA +0 50000 0 00065    00751 SUB +0 40200 0 00120    00752 STO +0 60100 0 00057                                 
                           W'R MXUSRS .LE. SYSMIN, MXUSRS = SYSMIN                  089  LM00190
 00753 CLA +0 50000 0 00057    00754 SUB +0 40200 0 00115    00755 TZE +0 10000 0 00757    00756 TPL +0 12000 0 00761   
 00757 CLA +0 50000 0 00115    00760 STO +0 60100 0 00057                                                               
                           SLOC.(MXUSRS,MXULOC)                                     090  LM00191
 00761 TSX +0 07400 4 00024    00762 TXH +3 00000 0 00057    00763 TXH +3 00000 0 00056                                 
                           PRMESS.($MXUSRS CUT TO$,BZ57.(DERBC.(MXUSRS)))           091  LM00192
 00764 TSX +0 07400 4 00010    00765 TXH +3 00000 0 00057    00766 STO +0 60100 0 01312    00767 TSX +0 07400 4 00002   
 00770 TXH +3 00000 0 01312    00771 STO +0 60100 0 01312    00772 TSX +0 07400 4 00023    00773 TXH +3 00000 0 00154   
 00774 TXH +3 00000 0 00175    00775 TXH +3 00000 0 00163    00776 TXH +3 00000 0 01312                                 
                           LOSER = FINDSB.(0)                                       092  LM00193
 00777 TSX +0 07400 4 00012    01000 TXH +3 00000 0 00117    01001 STO +0 60100 0 00053                                 
                           W'R LOSER .G. 2                                          093  LM00194
 01002 CLA +0 50000 0 00053    01003 SUB +0 40200 0 00121    01004 TZE +0 10000 0 01032    01005 TMI -0 12000 0 01032   
                                KILL.(LOSER)                                        094  LM00195
 01006 TSX +0 07400 4 00021    01007 TXH +3 00000 0 00053                                                               
                                PRMESS.($KILLED$,GLOC.(PROBN+LOSER),                095  LM00196
                1               BLANK,GLOC.(PROGN+LOSER))                           095  LM00197
 01010 CLA +0 50000 0 00100    01011 ADD +0 40000 0 00053    01012 STO +0 60100 0 01312    01013 TSX +0 07400 4 00017   
 01014 TXH +3 00000 0 01312    01015 STO +0 60100 0 01312    01016 CLA +0 50000 0 00077    01017 ADD +0 40000 0 00053   
 01020 STO +0 60100 0 01311    01021 TSX +0 07400 4 00017    01022 TXH +3 00000 0 01311    01023 STO +0 60100 0 01311   
 01024 TSX +0 07400 4 00023    01025 TXH +3 00000 0 00152    01026 TXH +3 00000 0 01311    01027 TXH +3 00000 0 00041   
 01030 TXH +3 00000 0 01312                                                                                             
                           O'E                                                      096  LM00198
 01031 TRA +0 02000 0 01037                                                                                             
                                PRMESS.($NO STANDBY USER TO KILL$)                  097  LM00199
 01032 TSX +0 07400 4 00023    01033 TXH +3 00000 0 00157    01034 TXH +3 00000 0 00155    01035 TXH +3 00000 0 00221   
 01036 TXH +3 00000 0 00176                                                                                             
                           E'L                                                      098  LM00200
                      O'E                                                           099  LM00201
 01037 TRA +0 02000 0 01070                                                                                             
                           QFLAG = 1B                                               100  LM00202
 01040 CLA +0 50000 0 00120    01041 STO +0 60100 0 00101                                                               
                      MXUSRS = NUSERS                                               101  LM00203
 01042 CLA +0 50000 0 00065    01043 STO +0 60100 0 00057                                                               
                           W'R MXUSRS .LE. SYSMIN, MXUSRS = SYSMIN                  102  LM00204
 01044 CLA +0 50000 0 00057    01045 SUB +0 40200 0 00115    01046 TZE +0 10000 0 01050    01047 TPL +0 12000 0 01052   
 01050 CLA +0 50000 0 00115    01051 STO +0 60100 0 00057                                                               
                           SLOC.(MXUSRS,MXULOC)                                     103  LM00205
 01052 TSX +0 07400 4 00024    01053 TXH +3 00000 0 00057    01054 TXH +3 00000 0 00056                                 
                           PRMESS.($MXUSRS CUT TO$,BZ57.(DERBC.(MXUSRS)))           104  LM00206
 01055 TSX +0 07400 4 00010    01056 TXH +3 00000 0 00057    01057 STO +0 60100 0 01312    01060 TSX +0 07400 4 00002   
 01061 TXH +3 00000 0 01312    01062 STO +0 60100 0 01312    01063 TSX +0 07400 4 00023    01064 TXH +3 00000 0 00154   
 01065 TXH +3 00000 0 00175    01066 TXH +3 00000 0 00163    01067 TXH +3 00000 0 01312                                 
                      E'L                                                           105  LM00207
                 O'E                                                                106  LM00208
 01070 TRA +0 02000 0 01125                                                                                             
                      QFLAG = 0B                                                    107  LM00209
 01071 CLA +0 50000 0 00117    01072 STO +0 60100 0 00101                                                               
                      W'R MXUSRS .GE. SYSMAX, T'O BED                               108  LM00210
 01073 CLA +0 50000 0 00057    01074 SUB +0 40200 0 00114    01075 TZE +0 10000 0 01077    01076 TMI -0 12000 0 01100   
 01077 TRA +0 02000 0 00034                                                                                             
                      MXUSRS = MXUSRS + 1                                           109  LM00211
 01100 CLA +0 50000 0 00057    01101 ADD +0 40000 0 00120    01102 STO +0 60100 0 00057                                 
                      SLOC.(MXUSRS,MXULOC)                                          110  LM00212
 01103 TSX +0 07400 4 00024    01104 TXH +3 00000 0 00057    01105 TXH +3 00000 0 00056                                 
                      PRMESS.($MXUSRS RAISED TO$,(BZ57.(DERBC.(MXUSRS))             111  LM00213
                1     .A.7777K).V.57575757K4)                                       111  LM00214
 01106 TSX +0 07400 4 00010    01107 TXH +3 00000 0 00057    01110 STO +0 60100 0 01312    01111 TSX +0 07400 4 00002   
 01112 TXH +3 00000 0 01312    01113 STO +0 60100 0 01312    01114 CAL -0 50000 0 01312    01115 ANA -0 32000 0 00132   
 01116 ORA -0 50100 0 00173    01117 SLW +0 60200 0 01312    01120 TSX +0 07400 4 00023    01121 TXH +3 00000 0 00154   
 01122 TXH +3 00000 0 00203    01123 TXH +3 00000 0 00142    01124 TXH +3 00000 0 01312                                 
                 E'L                                                                112  LM00215
      BED        W'R COMARG.(1,ARG1).E.$ RESET$, ARG1 = COMARG.(3)                  113  LM00220
 01125 TSX +0 07400 4 00005    01126 TXH +3 00000 0 00120    01127 TXH +3 00000 0 00037    01130 SUB +0 40200 0 00204   
 01131 TNZ -0 10000 0 01135    01132 TSX +0 07400 4 00005    01133 TXH +3 00000 0 00122    01134 STO +0 60100 0 00037   
                 W'R BCDEC.(ARG1).E.0, ARG1 = 777777777777K                         114  LM00221
 01135 TSX +0 07400 4 00001    01136 TXH +3 00000 0 00037    01137 SUB +0 40200 0 00117    01140 TNZ -0 10000 0 01143   
 01141 CLA +0 50000 0 00225    01142 STO +0 60100 0 00037                                                               
                 W'R ARG1.NE.777777777777K,SLPTIM=BCDEC.(ARG1)*60                   115  LM00222
 01143 CLA +0 50000 0 00037    01144 SUB +0 40200 0 00225    01145 TZE +0 10000 0 01153    01146 TSX +0 07400 4 00001   
 01147 TXH +3 00000 0 00037    01150 XCA +0 13100 0 00000    01151 MPY +0 20000 0 00127    01152 STQ -0 60000 0 00112   
                 SNOOZE.(SLPTIM,COMMND(1))                                          116  LM00223
 01153 TSX +0 07400 4 00025    01154 TXH +3 00000 0 00112    01155 TXH +3 00000 0 00042                                 
                 T'O START                                                          117  LM00224
 01156 TRA +0 02000 0 00036                                                                                             
                 INTERNAL FUNCTION (ARG)                                            118  LM00228
 01157 TRA +0 02000 0 01201                                                                                             
                 ENTRY TO FGLOC.                                                    119  LM00229
 01160 TRA +0 02000 0 01163    00031 TTR +0 02100 0 01161    01161 SXA +0 63400 2 01167    01162 TSX +0 07400 2 01167   
                 FUNCTION RETURN GLOC.(ARG)                                         120  LM00230
 01163 TSX +0 07400 4 00017    01164 TXH +3 00000 0 00024    01165 TRA +0 02000 0 01175                                 
                 END OF FUNCTION                                                    121  LM00231
 01166 TSX +0 07400 4 00011    01167 TXH +3 00000 0 00000    01170 SXD -0 63400 1 01167    01171 SXA +0 63400 4 01175   
 01172 CLA +0 50000 4 00001    01173 STO +0 60100 0 01164    01174 TRA +0 02000 2 00001    01175 AXT +0 77400 4 00000   
 01176 LXA +0 53400 2 01167    01177 LXD -0 53400 1 01167    01200 TRA +0 02000 4 00001                                 
                 INTERNAL FUNCTION (NUM)                                            122  LM00235
 01201 TRA +0 02000 0 01235                                                                                             
                 ENTRY TO CONV.                                                     123  LM00236
 01202 TRA +0 02000 0 01205    00030 TTR +0 02100 0 01203    01203 SXA +0 63400 2 01222    01204 TSX +0 07400 2 01222   
                 FUNCTION RETURN (BZEL.(DEFBC.(NUM)).A.777777K).V.575757K6          124  LM00237
 01205 TSX +0 07400 4 00007    01206 TXH +3 00000 0 00024    01207 STO +0 60100 0 01234    01210 TSX +0 07400 4 00003   
 01211 TXH +3 00000 0 01234    01212 STO +0 60100 0 01234    01213 CAL -0 50000 0 01234    01214 ANA -0 32000 0 00133   
 01215 ORA -0 50100 0 00172    01216 SLW +0 60200 0 01234    01217 CLA +0 50000 0 01234    01220 TRA +0 02000 0 01230   
                 END OF FUNCTION                                                    125  LM00238
 01221 TSX +0 07400 4 00011    01222 TXH +3 00000 0 00000    01223 SXD -0 63400 1 01222    01224 SXA +0 63400 4 01230   
 01225 CLA +0 50000 4 00001    01226 STO +0 60100 0 01206    01227 TRA +0 02000 2 00001    01230 AXT +0 77400 4 00000   
 01231 LXA +0 53400 2 01222    01232 LXD -0 53400 1 01222    01233 TRA +0 02000 4 00001                                 
                 INTERNAL FUNCTION (NUM)                                            126  LM00242
 01235 TRA +0 02000 0 01307                                                                                             
                 ENTRY TO FLOTBC.                                                   127  LM00243
 01236 TRA +0 02000 0 01241    00032 TTR +0 02100 0 01237    01237 SXA +0 63400 2 01265    01240 TSX +0 07400 2 01265   
                 FIX.(NUM,NUM,NUM(1))                                               128  LM00244
 01241 TSX +0 07400 4 00013    01242 TXH +3 00000 0 00024    01243 TXH +3 00000 0 00024    01244 TXH +3 00000 0 00023   
                 NUM = CONV.(NUM)                                                   129  LM00245
 01245 TSX +0 07400 4 00030    01246 TXH +3 00000 0 00024    01247 STO +0 60100 0 00024                                 
                 NUM(1) = (FRACBC.(NUM(1)).RS.6).A.77K8 .V. 330057575757K           130  LM00246
 01250 TSX +0 07400 4 00014    01251 TXH +3 00000 0 00023    01252 STO +0 60100 0 01306    01253 CAL -0 50000 0 00125   
 01254 STA +0 62100 0 01256    01255 CAL -0 50000 0 01306    01256 LGR -0 76500 0 00000    01257 ANA -0 32000 0 00134   
 01260 ORA -0 50100 0 00150    01261 SLW +0 60200 0 00023                                                               
                 FUNCTION RETURN                                                    131  LM00247
 01262 TRA +0 02000 0 01302                                                                                             
                 END OF FUNCTION                                                    132  LM00248
 01263 TSX +0 07400 4 00011    01264 PZE +0 00000 0 00001    01265 TXH +3 00000 0 00000    01266 SXD -0 63400 1 01265   
 01267 SXA +0 63400 4 01302    01270 CLA +0 50000 4 00001    01271 STO +0 60100 0 01242    01272 STO +0 60100 0 01243   
 01273 STO +0 60100 0 01246    01274 STA +0 62100 0 01247    01275 SUB +0 40200 0 01264    01276 STO +0 60100 0 01244   
 01277 STO +0 60100 0 01251    01300 STA +0 62100 0 01261    01301 TRA +0 02000 2 00001    01302 AXT +0 77400 4 00000   
 01303 LXA +0 53400 2 01265    01304 LXD -0 53400 1 01265    01305 TRA +0 02000 4 00001                                 
                 END OF PROGRAM                                                     133  LM00251
 01307 TSX +0 07400 4 00011                                                                                             
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 1     
                  
                                             2/8/66 - NOEL I. MORRIS    
                  
                       00001         ENTRY   ISIN          DETERMINE IF USER LOGGED IN    
                       00026         ENTRY   FINDSB        FIND A STANDBY USER
                       00060         ENTRY   KILL          MURDER A LOSER     
                       00135         ENTRY   CHKLU         CHECK FOR KLUDGE USER    
                  
                                     UNLIST     
 M                            S      COMMON  M             MACRO TO REDEFINE COMMON                               
 M                            LDISW  MACRO   S,X                                                                  
 M                            STISW  MACRO   S,X                                                                  
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 2     
                           ISIN - DETERMINE IF USER ALREADY LOGGED IN.              
                  
                  
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                              *     
                              *      CALLING SEQUENCE -     
                              *     
                              *      LINE = ISIN. (PROB, PROG)    
                              *     
                              *      IF USER IS NOT LOGGED IN,  LINE IS SET TO ZERO.
                              *      OTHERWISE LINE IS SET TO THE LINE NO. OF THE USER.   
                              *     
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                  
                  
      00001  0634 00 4 00021  ISIN   SXA     SX4,4         SAVE XR4     
                  
      00002 -0500 60 4 00001         CAL*    1,4           PICK UP PROBLEM NO.
      00003  0602 00 0 00151         SLW     PROB          ..     
      00004 -0500 60 4 00002         CAL*    2,4           AND PROGRAMMER NO. 
      00005  0602 00 0 00152         SLW     PROG          ..     
                  
      00006  0774 00 4 00062         AXT     N,4           SEARCH ALL N LINES 
      00007                   LOOP   XEC.A   CAL(PROBN+N+1,4) GET PROBLEM NO. 
      00011  0322 00 0 00151         ERA     PROB          COMPARE
      00012 -0100 00 0 00017         TNZ     NEXT          ..     
      00013                          XEC.A   CAL(PROGN+N+1,4) GET PROGRAMMER NO.    
      00015  0322 00 0 00152         ERA     PROG          COMPARE
      00016  0100 00 0 00023         TZE     FND           USER FOUND   
      00017  2 00001 4 00007  NEXT   TIX     LOOP,4,1      ..     
                  
      00020 -0754 00 0 00000         ZAC                   ZERO MEANS USER NOT FOUND
      00021  0774 00 4 00000  SX4    AXT     **,4          RESTORE XR4  
      00022  0020 00 4 00002         TRA     2,4           AND RETURN   
                  
      00023  1 77715 4 00024  FND    TXI     *+1,4,-N-1    COMPUTE USER'S LINE NO.  
      00024  0756 00 4 00000         PCA     ,4            AND PLACE IN A     
      00025  0020 00 0 00021         TRA     SX4           RETURN WITH NO. IN AC    
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 3     
                           FINDSB - FIND A STANDBY USER.                            
                  
                  
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                              *     
                              *      CALLING SEQUENCE -     
                              *     
                              *      LOSER = FINDSB. (T.GRP)
                              *     
                              *     
                              *      IF 'T.GRP' IS ZERO, THE STANDBY USER WHO HAS USED MOST TIME
                              *      WILL BE RETURNED.
                              *      IF 'T.GRP' IS NON-ZERO, THE STANDBY USER MUST BE IN  
                              *      PARTY-GROUP 'T.GRP'.   
                              *     
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                  
                  
      00026  0634 00 4 00056  FINDSB SXA     FSX4,4        SAVE XR4     
      00027  0500 60 4 00001         CLA*    1,4           GET 'T.GRP'  
      00030  0602 00 0 00154         SLW     T.GRP         INSURE NUMBER POSITIVE   
                  
      00031  0600 00 0 00153         STZ     LOSER         INITIALIZE   
      00032  0600 00 0 00155         STZ     UTM           ..     
      00033 -0774 00 4 00003         AXC     3,4           ..     
      00034                   SBLOOP XEC.A   NZT(PROBN,4)  IF LOGGED IN,
      00036  0020 00 0 00053         TRA     SBTIX         ..     
      00037                          XEC.A   CLA(GRPNO.,4) ..     
      00041  0120 00 0 00053         TPL     SBTIX         AND A STANDBY,     
      00042 -0520 00 0 00154         NZT     T.GRP         CHECK FOR 'T.GRP' SPECIFIED    
      00043  0020 00 0 00046         TRA     *+3           ..     
      00044  0400 00 0 00154         ADD     T.GRP         COMPARE WITH SPECIFIED 'T.GRP' 
      00045 -0100 00 0 00053         TNZ     SBTIX         ..     
                  
      00046                          XEC.A   CAL(UTIME,4)  GET TIME USED
      00050 -0340 00 0 00155         LAS     UTM           COMPARE AGAINST LARGEST  
      00051  0602 00 0 00155         SLW     UTM           SAVE LARGER TIME   
      00052  0636 00 4 00153         SCA     LOSER,4       AND INDEX TO THE USER    
      00053  1 77777 4 00054  SBTIX  TXI     *+1,4,-1      GO ON TO THE NEXT  
      00054  3 77715 4 00034         TXH     SBLOOP,4,-N-1 ..     
                  
      00055  0500 00 0 00153         CLA     LOSER         GET USER INDEX     
      00056  0774 00 4 00000  FSX4   AXT     **,4          RESTORE XR4  
      00057  0020 00 4 00002         TRA     2,4           AND RETURN   
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 4     
                           KILL - MURDER A LOSER.                                   
                  
                  
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                              *     
                              *      CALLING SEQUENCE -     
                              *     
                              *      KILL. (LOSER)    
                              *     
                              *     
                              *      'LOSER' IS THE LINE NUMBER OF THE USER TO BE   
                              *      MURDERED.  
                              *     
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                  
                  
      00060  0634 00 4 00132  KILL   SXA     KX4,4         SAVE XR4     
      00061  0634 00 2 00133         SXA     KX2,2         AND XR2
      00062 -0500 60 4 00001         CAL*    1,4           GET 'LOSER'  
      00063  0602 00 0 00153         SLW     LOSER         ..     
      00064  0737 00 2 00000         PAC     ,2            -USER NO. IN XR2   
                  
      00065 -0500 00 0 00170         CAL     =HENDLOG      COMMAND FOR 'LOSER'
      00066                          XEC.A   SLW(COMMND,2) ..     
      00070                          SCHEDL  =2,LOSER,=1   PULL HIM OUT OF QUEUES AND     
      00074                          SCHEDL  =6,LOSER,=0   MAKE HIM RUN 
      00100                          SCHEDL  =2,LOSER,=3   AND PLACE IN WAITING COMMAND   
                  
      00104  0600 00 0 00156         STZ     12MODE        RESET 12-BIT MODE SWITCH 
      00105                          ZETBIT  ,2,FULBIT     CHECK FOR USER IN 12-BIT MODE  
      00110 -0625 00 0 00156         STL     12MODE        IF SO, SET 12-BIT MODE SWITCH  
      00111                          STZBIT  ,2,FULBIT     MAKE SURE USER IN 6-BIT MODE   
      00116                          CALL    RSSWB         AND FLUSH HIS OUTPUT BUFFERS   
      00116  0074 00 4 00160         TSX     RSSWB,4                                                          .002
      00117  0 00000 0 00153         PZE     LOSER         ..     
                  
      00120                          COMENT  WAIT.,1(WAIT,) AAAAGH ......     
      00120  0074 00 4 00161         TSX     WRFLX,4                                                          .003
      00121  3 00001 0 00162         PAR     WAIT.,,1                                                         .005
      00122  0 00000 0 00153         PZE     LOSER         ..     
                  
      00123 -0520 00 0 00156         NZT     12MODE        CHECK FOR USER PREVIOUSLY IN 12-BIT MODE   
      00124  0020 00 0 00132         TRA     KX4           USER WAS IN 6-BIT MODE   
      00125                          STLBIT  ,2,FULBIT     RESET USER'S 12-BIT MODE SWITCH
                  
      00132  0774 00 4 00000  KX4    AXT     **,4          HE SCREAMS   
      00133  0774 00 2 00000  KX2    AXT     **,2          BUT    
      00134  0020 00 4 00001         TRA     1,4           WE HAVE LEFT 
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 5     
                           CHKLU - CHECK FOR KLUDGE USER.                           
                  
                  
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                              *     
                              *      CALLING SEQUENCE -     
                              *     
                              *      CINDEX = CHKLU. ()     
                              *     
                              *      INDEX IS ZERO IF USER IS NOT A KLUDGE USER.    
                              *      INDEX IS EITHER 1 OR 2 IF USER IS A KLUDGE USER.     
                              *     
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                  
                  
      00135  0634 00 4 00147  CHKLU  SXA     CKLX4,4       SAVE XR4     
                  
      00136 -0500 00 0 77414         CAL     CONSOL        PICK UP USER CONSOLE I.D.
      00137 -0774 00 4 00002         AXC     2,4           ONLY 2 KLUDGE CONSOLES   
      00140                   KLOOP  XEC.A   LAS(KLUNIT-1,4) CHECK FOR KLUDGE CONSOLE     
      00142  0020 00 0 00144         TRA     *+2           ..     
      00143  0020 00 0 00146         TRA     KLFND         FOUND ONE    
      00144  1 00001 4 00145         TXI     *+1,4,1       STEP INDEX   
      00145  3 00000 4 00140         TXH     KLOOP,4,0     AND CHECK FOR COMPLETION OF SEARCH   
                  
      00146  0756 00 4 00000  KLFND  PCA     ,4            INDEX IN AC  
      00147  0774 00 4 00000  CKLX4  AXT     **,4          RESTORE XR4  
      00150  0020 00 4 00001         TRA     1,4           AND RETURN WITH INDEX IN AC    
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 6     
                           STORAGE AND CONSTANTS.                                   
                  
      00151  0 00000 0 00000  PROB   PZE  
      00152  0 00000 0 00000  PROG   PZE  
      00153  0 00000 0 00000  LOSER  PZE  
      00154  0 00000 0 00000  T.GRP  PZE  
      00155  0 00000 0 00000  UTM    PZE  
      00156  0 00000 0 00000  12MODE PZE  
                  
                  
                                     INSERT  TEMPA    
                  
                                             *** COMMON PACKAGE FOR LOGIN PROGRAMS. ***   
                  
                       77444         KOMMON  WDSLIN-1      ALL-PURPOSE CARD IMAGE BUFFER  
                       77444  CARD   KOMMON  1             ..     
                  
                  
                                             *** VECTOR USED BY RDACCT PROGRAMS. ***
                  
                       77410         KOMMON  27 
                       77410  TEMPA  KOMMON  1  
                  
                       77411  NPROB  SYN     TEMPA+1       USER PROBLEM NUMBER
                       77412  NAME   SYN     TEMPA+2       USER NAME    
                       77413  PASSW  SYN     TEMPA+3       PASSWORD     
                       77414  CONSOL SYN     TEMPA+4       CONSOLE I.D. 
                       77415  NPROG  SYN     TEMPA+5       USER PROGRAMMER NUMBER   
                       77416  TA1    SYN     TEMPA+6       ALLOTTED TIME
                       77417  TA2    SYN     TEMPA+7       ..     
                       77420  TA3    SYN     TEMPA+8       ..     
                       77421  TA4    SYN     TEMPA+9       ..     
                       77422  TA5    SYN     TEMPA+10      ..     
                       77423  GRP    SYN     TEMPA+11      PARTY GROUP NUMBER 
                       77424  SB     SYN     TEMPA+12      NON-ZERO IF USER MAY BE STANDBY
                       77425  NUFD   SYN     TEMPA+13      HOME FILE DIRECTORY
                       77426  UNIT   SYN     TEMPA+14      UNIT GROUP NUMBER  
                       77427  CODE   SYN     TEMPA+15      USER RESTRICTION CODE (RCODE)  
                       77430  LSTLGT SYN     TEMPA+16      DATE AND TIME OF LAST LOGOUT (2 WORDS)     
                       77432  USDFRM SYN     TEMPA+18      DATE AND TIME TIME ACCUMULATED FROM  
                       77434  TU1    SYN     TEMPA+20      USED TIME    
                       77435  TU2    SYN     TEMPA+21      ..     
                       77436  TU3    SYN     TEMPA+22      ..     
                       77437  TU4    SYN     TEMPA+23      ..     
                       77440  TU5    SYN     TEMPA+24      ..     
                       77441  TIMEIN SYN     TEMPA+25      TOTAL CONSOLE TIME USED  
                       77442         SYN     TEMPA+26 
                       77443  LSTUNT SYN     TEMPA+27      CONSOLE LAST LOGGED OUT FROM   
                  
                  
                  
                  
                  
      00157  0101 00 0 00172  SCHEDL TIA     =HSCHEDL 
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 7     
                           STORAGE AND CONSTANTS.                                   
                  
      00160                          RMT     *             REMOTE SEQUENCES   
      00160  0101 00 0 00171  RSSWB  TIA     =HRSSWB                                                          .002
      00161  0101 00 0 00173  WRFLX  TIA     =HWRFLX                                                          .002
      00162  662131637360     WAIT.  BCI     1,WAIT,                                                          .002
                  
                                     END  
                  
        LITERALS  
      00163  000000000000     
      00164  000000000001     
      00165  000000000002     
      00166  000000000003     
      00167  000000000006     
      00170  254524434627     
      00171  516262662260     
      00172  622330252443     
      00173  665126436760     
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77407 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
        174 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          1      A     1
          2      B     1
      71471      C     1
         62      N     1,    6,   10,   14,   23,   54
      71511     MQ     1
      71513     OV     1
      73650     PB     1
      77424     SB   157
      71512     SI     1
      71510     SQ     1
         23    FND    16
      77423    GRP   157
      71476    ILC     1
      74563    IOD     1
      71505    IR1     1
      71504    IR2     1
      71503    IR3     1
      71502    IR4     1
      71501    IR5     1
      71500    IR6     1
      71477    IR7     1
          1    .F.     1
          0    .I.     1
        133    KX2    61
        132    KX4    60,  124
      71507    LAC     1
         21    SX4     1,   25
      77416    TA1   157
      77417    TA2   157
      77420    TA3   157
      77421    TA4   157
      77422    TA5   157
          1    TMP     1
      77434    TU1   157
      77435    TU2   157
      77436    TU3   157
      77437    TU4   157
      77440    TU5   157
        155    UTM    32,   50,   51
          0   BASE     1
      77444   CARD   157
      77427   CODE   157
      73612   DATE     1
      71517   DVCK     1
      71515   FLMD     1
         56   FSX4    26
          0   GETA     7,   13,   34,   37,   46,   66,  105,  111,  114,  125,  130,  140
      71516   IOCK     1
          1   ISIN     0
         60   KILL     0
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          7   LOOP    17
      71514   MTMD     1
      77412   NAME   157
         17   NEXT    12
      77425   NUFD   157
        151   PROB     3,   11
        152   PROG     5,   15
      72523   Q1U1     1
      72037   Q1U2     1
      72522   Q3U1     1
      71765   Q3U2     1
      71520   SLTS     1
      73632   SWAP     1
      76623   TAU1     1
      76540   TAU2     1
      76455   TAU3     1
      76372   TAU4     1
      76307   TAU5     1
     125000   UBTS     1
      77426   UNIT   157
      73613   USER     1
      73564   WAIT     1
      74164  ADOPT     1
      71521  ASTAT     1
      74332  AWAKE     1
      71522  BSTAT     1
        135  CHKLU     0
        147  CKLX4   135
     200000  CLKBT     1
      73605  COMSW     1
      72645  DBUF1     1
      77777  ENBWD     1
       1000  FULBT     1
     100000  GPHBT     1
      76056  ITIME     1
      77461  ..001     1
      77776  ..003     1
      77147  ..011     1
      76711  ..015     1
      76705  ..018     1
      73561  ..104     1
      73524  ..106     1
      72644  ..108     1
      72570  ..110     1
      72522  ..112     1
      72521  ..114     1
      72137  ..116     1
      72036  ..118     1
      71762  ..122     1
      71734  ..126     1
      71567  ..128     1
      71534  ..137     1
      71531  ..138     1
        146  KLFND   143
        140  KLOOP   145
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         24  LCBUF     1
      77546  LEVEL     1
        153  LOSER    31,   52,   55,   63,   72,   76,  102,  117,  122
         12  MAXLV     1
      20000  NBKBT     1
       4000  NCVBT     1
      77411  NPROB   157
      77415  NPROG   157
      77413  PASSW   157
      73525  PBUFF     1
      77036  PLIST     1
      71473  PRIND     1
      75773  PROBN     1,   10,   35
      75710  PROGN     1,   14
      71506  PTIRS     1
          3  QUITL     1
      75245  RCODE     1
      73562  READY     1
      71474  RLIND     1
        160  RSSWB   116
         53  SBTIX    36,   41,   45
      73620  SHIFT     1
      73617  STNBY     1
      73606  SWPSW     1
      73635  TBASE     1
      77410  TEMPA   157
        154  T.GRP    30,   42,   44
      52004  UBITS     1
      75542  UFDNM     1
      76725  ULIST     1
      75625  UNAME     1
      76224  UTIME     1,   47
        162  WAIT.   121
        161  WRFLX   120
        156 12MODE   104,  110,  123
         12 ACTFIL     1
         53 AFS1LN     1
        361 AFS2LN     1
         25 AFSCON     1
         26 AFSENL     1
      72571 AFSTU1     1
      72140 AFSTU2     1
      73565 ATLOST     1
      71526 ATRILC     1
      71542 AUTHOR     1
      73575 AUTOND     1
      73570 BASEAD     1
      73640 BEGTIM     1
      73566 BKGATT     1
      73603 BKGTIM     1
      71535 BREAKL     1
      71536 BRKILC     1
      71527 BTRILC     1
      71737 CCBSAV     1
          5 CDEPTH     1
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 4     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      71763 CFSAVE     1
      71736 CLCSAV     1
         40 CLKBIT     1
      73574 CLKTIM     1
         24 CLNGTH     1
      77461 COMBAS     1
      74646 COMCTR     1
      73733 COMFSW     1
      75014 COMMND     1,   67
      77462 COMRLC     1
      73601 COMTIM     1
      73576 COMWAT     1
      77414 CONSOL   136,  157
      73646 CURUSR     1
      73611 DATEYR     1
      73567 DEMKEY     1
      73571 DSKLOC     1
      73563 DUMMY8     1
      71764 EMCOND     1
      73626 EMPLVL     1
      76712 ENDPTR     1
      73614 ESTTIM     1
          1 FIBBIT     1
      73615 FIBPTR     1
      73616 FIBRUN     1
         26 FINDSB     0
          4 FULBIT     1,  107,  113,  127
      73625 FULLEN     1
      73627 FULLVL     1
      40000 GPHBIT     1
         43 GROUPS     1
      75330 GRPNO.     1,   40
      75413 GRPTBL     1
      73621 HANGUP     1
        400 HNGLBT     1
         10 HUNGBT     1
      74731 ILINES     1
      73622 INACTV     1
        100 INTBIT     1
      76710 KLUNIT     1,  141
      76706 KLUSER     1
      77631 LENGTH     1
      73623 LEVINC     1
      73633 LEVTIM     1
      77430 LSTLGT   157
      77443 LSTUNT   157
      71472 MACOND     1
      73631 MAXLVL     1
      73636 MAXTIM     1
      71475 MEMBND     1
      73630 MINLVL     1
      73647 MXUSRS     1
       1000 NBACBT     1
      10000 NBKBIT     1
       2000 NCVBIT     1
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 5     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      10000 NDEMBT     1
      77777 NEWTOP     1
      73644 NEWUSR     1
       4000 NFIBBT     1
       2000 NFORBT     1
        200 NINTBT     1
      76141 NOTIME     1
      20000 NPRCBT     1
      73607 NUSERS     1
        660 NWDSPT     1
      73573 NWORDS     1
      74101 OKPROB     1
      74016 OKPROG     1
      71530 OLDILC     1
      77461 OLDTOP     1
      73645 OLDUSR     1
         20 OUTPBT     1
      73634 PAYTIM     1
      73643 PAYUSR     1
         45 Q1U1LN     1
        100 Q1U2LN     1
          0 Q3U1LN     1
         51 Q3U2LN     1
      73624 QNTWAT     1
      73637 QUANTM     1
        100 R636BT     1
          2 RCALBT     1
          1 RCOMBT     1
        200 RDSKBT     1
         40 RKLDBT     1
         20 RPATBT     1
          4 RPROBT     1
         10 RPRVBT     1
      71541 SAVEM1     1
         34 SBLOOP    54
        157 SCHEDL    70,   74,  100
      77714 STATUS     1
      73572 STOPSW     1
      77315 STRTIM     1
      71570 SUBCOM     1
      75457 SUBSYS     1
      73602 SWPTIM     1
      73577 SWPWAT     1
      73641 SYSDAT     1
      73642 SYSTIM     1
      77441 TIMEIN   157
      74247 TIMINC     1
      77463 TIMLEV     1
      73610 TIMNOW     1
      71524 TINHIB     1
      73604 TOTTIM     1
      71523 TSSFSW     1
          1 UBACBT     1
      74415 UCHARG     1
      74500 UCLOCK     1
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 6     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      71544 UCOMBF     1
          2 UCOMBT     1
         10 UDEMBT     1
      71525 UENBWD     1
      71537 UFERTN     1
          4 UFIBBT     1
          2 UFORBT     1
      71540 UILOCK     1
      75077 UNITID     1
         20 UPRCBT     1
      71543 URCODE     1
      77432 USDFRM   157
      73600 USRWAT     1
      75162 USWICH     1,  106,  112,  115,  126,  131
      71735 WATCOM     1
      77400 WATTIM     1
         16 WDSLIN     1,  157
      77232 WRKTIM     1
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1      M1416 3845  PETER R. BOS .... 12-67 ..... WRFLX -- PRINT ON OR OFFLINE                    PAGE 1     
                  
                              *    MODIFIED FOR OFFON OPTION BY ROGER ROACH 4/01/68 
                                     PCC     ON 
                                     NOLNK
                       00000         ENTRY   -WRFLX   
                       00004         ENTRY   -WRFLXA  
                       00131         ENTRY   -CHNCOM  
                       00134         ENTRY   -NEXCOM  
                       00142         ENTRY   -DORMNT  
                       00145         ENTRY   -DEAD    
                       00150         ENTRY   -SLEEP   
                       00214         ENTRY   ON 
                       00231         ENTRY   OFF
                       00227         ENTRY   OFFON    
                       00264         ENTRY   SSPRNT   
                                     LBL     WRFLX    
                                     PCC     OFF
                  
                  
                              *     
                              *  TO SET PRINTING OFF-LINE, CALL OFF.(-NAME1-,-NAME2-)     
                              *     NAME1,NAME2 ARE PRESET TO 'WRFLX OUTPUT', MISSING     
                              *     ARGUMENTS ARE SUBSTITUTED BY THEIR OLD VALUES.  
                              *  TO SET PRINTING BACK TO ON-LINE (I.E. TIA TO WRFLX),     
                              *     CALL ON.()  
                              *  TO SET SINGLE SPACE MODE ON OR OFF, CALL SSPRNT.(X),     
                              *     WHERE X IS 0 TO FORCE SINGLE SPACE ON OUTPUT, NON-    
                              *     ZERO OTHERWISE. SINGLE SPACE MODE PRECEDES A LINE     
                              *     BY A BLANK WORD WHEN WRITING INTO A FILE. THIS IS     
                              *     THE INITIAL SETTING.    
                              *  OUTPUT LINES SENT TO WRFLXA WHICH END IN 555757575757(8) 
                              *     OR 005500570057(8), I.E. A C.R. FOLLOWED BY NULLS,    
                              *     CAUSE A NEW LINE TO BE BEGUN ON THE NEXT CALL, JUST   
                              *     AS THOUGH WRFLX HAD BEEN CALLED. SUCCESSIVE CALLS     
                              *     TO WRFLXA OTHERWISE CONTINUE TO APPEND TO THE SAME    
                              *     LINE, BY UPDATING THE LINEMARK IN THE OUTPUT FILE.    
                              *     
                  
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,ARGS                                                            
 M                            TSX    MACRO   SUBR,T        DEFINES TIA IF SUBR UNDEF.                             
                  
                  
      00000 -0520 00 0 00330  WRFLX  NZT     WROFF         ON-LINE OR OFF. Q  
      00001  0101 00 0 01260         TIA     =HWRFLX       ON-LINE.     
      00002  0600 00 0 00323         STZ     WXA           OFF, SET FLAG FOR WRFLX. 
      00003  0020 00 0 00007         TRA     START    
      00004 -0520 00 0 00330  WRFLXA NZT     WROFF         ON OR OFF. Q 
      00005  0101 00 0 01257         TIA     =HWRFLXA      ON.    
      00006 -0625 00 0 00323         STL     WXA           OF, SET FLAG FOR WRFLXA. 
      00007  0634 00 4 00123  START  SXA     XR4,4         SAVE XR4.    
                  
      00010                   OPN    CALL    OPEN(=HW,NM1,NM2,=-0,=-0,OPNER,ERCOD)  
      00010                          TSX     OPEN,4                                                           .003
      00011  3 00000 0 01262         PAR     =HW                                                              .003
      00012  3 00000 0 01223         PAR     NM1                                                              .003
1      M1416 3845  PETER R. BOS .... 12-67 ..... WRFLX -- PRINT ON OR OFFLINE                    PAGE 2     
                  
      00013  3 00000 0 01224         PAR     NM2                                                              .003
      00014  3 00000 0 01252         PAR     =-0                                                              .003
      00015  3 00000 0 01252         PAR     =-0                                                              .003
      00016  3 00000 0 00311         PAR     OPNER                                                            .003
      00017  3 00000 0 00342         PAR     ERCOD                                                            .003
      00020                          CALL    BUFFER(NM1,NM2,(BUF,,432)) 
      00020                          TSX     BUFFER,4                                                         .003
      00021  3 00000 0 01223         PAR     NM1                                                              .003
      00022  3 00000 0 01224         PAR     NM2                                                              .003
      00023  3 00660 0 00343         PAR     BUF,,432                                                         .003
                  
      00024                   OPENED CALL    FSTATE(NM1,NM2,(LTH,,1))   
      00024                          TSX     FSTATE,4                                                         .003
      00025  3 00000 0 01223         PAR     NM1                                                              .003
      00026  3 00000 0 01224         PAR     NM2                                                              .003
      00027  3 00001 0 00333         PAR     LTH,,1                                                           .003
      00030  0522 00 0 00123         XEC     XR4           RESTORE XR4. 
      00031  0560 00 4 00001         LDQ     1,4           GET OUTPUT POINTER.
      00032 -0520 00 0 00323         NZT     WXA           WRFLXA CALL. Q     
      00033  0020 00 0 00055         TRA     NOCR          NO, JUST SKIP.     
      00034 -0500 00 4 00001         CAL     1,4           ELSE, GET THE POINTER AGAIN.   
      00035  0621 00 0 00043         STA     CAL           CHECK IF LAST WORD IN BUFFER   
      00036 -0734 00 4 00000         PDX     0,4           IS C.R. FOLLOWED BY 5 NULLS.   
      00037  0754 00 4 00000         PXA     0,4           *****GAZABE*****   
      00040  0400 00 0 00043         ADD     CAL
      00041  0402 00 0 01236         SUB     =1            ADDRESS OF LAST WORD IN BUFFER.
      00042  0621 00 0 00043         STA     CAL
      00043 -0500 00 0 00000  CAL    CAL     -             GET WORD.    
      00044 -0340 00 0 01255         LAS     =O555757575757 IS C.R. Q   
      00045  0020 00 0 00047         TRA     *+2           NOT 6-BIT KIND.    
      00046  0020 00 0 00051         TRA     C.R.     
      00047  0322 00 0 01242         ERA     =O005500570057 OTHER KIND MAYBE. Q     
      00050 -0100 00 0 00055         TNZ     NOCR          NO, SO FORGET IT, IT AIN'T TRAGIC.   
      00051  0600 00 0 00323  C.R.   STZ     WXA           ELSE, PRETEND THIS CALL WAS WRFLX.   
      00052 -0130 00 0 00000         XCL                   GET FRESH POINTER. 
      00053  0402 00 0 01241         SUB     =O1000000     AND FORGET LAST WORD.    
      00054  0020 00 0 00056         TRA     NOCR+1        *****GOTCHA*****   
      00055 -0130 00 0 00000  NOCR   XCL                   REAL WRFLX CALL COMES HERE.    
      00056  0621 00 0 00120         STA     WR+4     
      00057  0622 00 0 00120         STD     WR+4     
      00060  0520 00 0 00324         ZET     WA            CHECK FOR PREVIOUS WRFLXA.     
      00061  0020 00 0 00103         TRA     REWR          IF SO, GO REWRITE LINE-MARK.   
                  
      00062 -0734 00 4 00000         PDX     0,4           WORD COUNT.  
      00063  0520 00 0 00327         ZET     SS            WANT SINGLE SPACE. Q     
      00064  1 00001 4 00065         TXI     *+1,4,1       OK, YOU GOT IT.    
      00065  0634 00 4 00334         SXA     LMARK,4       ..     
      00066 -0500 00 0 00333         CAL     LTH           GET RELLOC FOR APPENDING.
      00067  0400 00 0 01236         ADD     =1 
      00070  0602 00 0 00341         SLW     RELLOC        ..     
      00071  0602 00 0 00336         SLW     LMLOC         NOT REWRITING OLD LINE-MARK, SO IS RELLOC. 
      00072                          CALL    WRWAIT(NM1,NM2,RELLOC,(LMARK,...,NLM)) 
      00072                          TSX     WRWAIT,4                                                         .003
      00073  3 00000 0 01223         PAR     NM1                                                              .003
      00074  3 00000 0 01224         PAR     NM2                                                              .003
      00075  3 00000 0 00341         PAR     RELLOC                                                           .003
1      M1416 3845  PETER R. BOS .... 12-67 ..... WRFLX -- PRINT ON OR OFFLINE                    PAGE 3     
                  
      00076  2 00332 0 00334         BLK     LMARK,...,NLM                                                    .003
      00077 -0500 00 0 00341         CAL     RELLOC        UPDATE RELLOC.     
      00100  0400 00 0 00332         ADD     NLM           1 OR 2.
      00101  0602 00 0 00341         SLW     RELLOC   
      00102  0020 00 0 00114         TRA     WR            NOW GO WRITE OUT LINE.   
                  
      00103 -0734 00 4 00000  REWR   PDX     0,4
      00104  0754 00 4 00000         PXA     0,4           UPDATE LINE-MARK.  
      00105  0361 00 0 00334         ACL     LMARK    
      00106  0621 00 0 00334         STA     LMARK         ..     
      00107                          CALL    WRWAIT(NM1,NM2,LMLOC,(LMARK,,1)) 
      00107                          TSX     WRWAIT,4                                                         .003
      00110  3 00000 0 01223         PAR     NM1                                                              .003
      00111  3 00000 0 01224         PAR     NM2                                                              .003
      00112  3 00000 0 00336         PAR     LMLOC                                                            .003
      00113  3 00001 0 00334         PAR     LMARK,,1                                                         .003
                  
      00114                   WR     CALL    WRWAIT(NM1,NM2,RELLOC,(-,,-))    
      00114                          TSX     WRWAIT,4                                                         .003
      00115  3 00000 0 01223         PAR     NM1                                                              .003
      00116  3 00000 0 01224         PAR     NM2                                                              .003
      00117  3 00000 0 00341         PAR     RELLOC                                                           .003
      00120  3 00000 0 00000         PAR     -,,-                                                             .003
      00121 -0500 00 0 00323         CAL     WXA           SET OLD WRFLXA FLAG FROM CURRENT ONE.
      00122  0602 00 0 00324         SLW     WA            ..     
                  
      00123  0774 00 4 00000  XR4    AXT     -,4
      00124 -0520 00 0 00331         NZT     ONOFF    
      00125  0020 00 4 00002         TRA     2,4           RETURN.
      00126 -0520 00 0 00323         NZT     WXA
      00127  0101 00 0 01260         TIA     =HWRFLX  
      00130  0101 00 0 01257         TIA     =HWRFLXA 
                  
                  
      00131  0634 00 4 00175  CHNCOM SXA     X4,4          THESE ENTRIES TO RECOVER CONTROL.    
      00132  0774 00 4 00162         AXT     CHN,4    
      00133  0020 00 0 00152         TRA     CLS
      00134  0634 00 4 00175  NEXCOM SXA     X4,4     
      00135                          CALL    CLOSE(=HALL,=-0)     
      00135                          TSX     CLOSE,4                                                          .003
      00136  3 00000 0 01243         PAR     =HALL                                                            .003
      00137  3 00000 0 01252         PAR     =-0                                                              .003
      00140  0534 00 4 00175         LXA     X4,4     
      00141  0101 00 0 01253         TIA     =HNEXCOM 
      00142  0634 00 4 00175  DORMNT SXA     X4,4     
      00143  0774 00 4 00203         AXT     DMT,4    
      00144  0020 00 0 00152         TRA     CLS
      00145  0634 00 4 00175  DEAD   SXA     X4,4     
      00146  0774 00 4 00207         AXT     DED,4    
      00147  0020 00 0 00152         TRA     CLS
      00150  0634 00 4 00175  SLEEP  SXA     X4,4     
      00151  0774 00 4 00210         AXT     SLP,4    
                  
      00152  0634 00 4 00161  CLS    SXA     TRA,4         TRANSFER ADDRESS.  
      00153  0602 00 0 00337         SLW     LAC           SAVE AC.     
      00154  0601 00 0 00340         STO     AC 
1      M1416 3845  PETER R. BOS .... 12-67 ..... WRFLX -- PRINT ON OR OFFLINE                    PAGE 4     
                  
      00155                          CALL    CLOSE(NM1,NM2,*+1) CLOSE IT.     
      00155                          TSX     CLOSE,4                                                          .003
      00156  3 00000 0 01223         PAR     NM1                                                              .003
      00157  3 00000 0 01224         PAR     NM2                                                              .003
      00160  3 00000 0 00161         PAR     *+1                                                              .003
      00161  0020 00 0 00000  TRA    TRA     -  
                  
      00162  0522 00 0 00175  CHN    XEC     X4            RESTORE XR.  
      00163 -0500 00 4 00001         CAL     1,4           CHECK FOR MAD CALL.
      00164  0322 00 0 00326         ERA     PAR
      00165 -0320 00 0 01263         ANA     =O700000000000 
      00166 -0100 00 0 00177         TNZ     CHN2          IF NOT TXH, ASSUME NORMAL.     
      00167 -0500 60 4 00001         CAL*    1,4           MAD, GET ARG.
      00170  0621 00 0 00174         STA     .CHN+1   
      00171  0500 00 0 00340         CLA     AC 
      00172 -0501 00 0 00337         ORA     LAC
      00173                   .CHN   CALL    TIACHN((-,0,0)) PZE ON ARG.
      00173                          TSX     TIACHN,4                                                         .003
      00174  0 00000 0 00000         PZE     -,0,0                                                            .003
      00175  0774 00 4 00000  X4     AXT     -,4           RESTART, RETURN.   
      00176  0020 00 4 00002         TRA     2,4
      00177  0500 00 0 00340  CHN2   CLA     AC            RESTORE MACH. COND.
      00200 -0501 00 0 00337         ORA     LAC
      00201  0534 00 4 00175         LXA     X4,4     
      00202  0101 00 0 01245  TIACHN TIA     =HCHNCOM      SNEAKY.
                  
      00203  0500 00 0 00340  DMT    CLA     AC 
      00204 -0501 00 0 00337         ORA     LAC
      00205  0534 00 4 00175         LXA     X4,4     
      00206  0101 00 0 01250         TIA     =HDORMNT 
                  
      00207  0101 00 0 01247  DED    TIA     =HDEAD   
                  
      00210  0500 00 0 00340  SLP    CLA     AC 
      00211 -0501 00 0 00337         ORA     LAC
      00212  0534 00 4 00175         LXA     X4,4     
      00213  0101 00 0 01256         TIA     =HSLEEP  
                  
                  
      00214  0634 00 4 00225  ON     SXA     ONX4,4        SET PRINT ON-LINE. 
      00215  0600 00 0 00331         STZ     ONOFF    
      00216  0600 00 0 00330         STZ     WROFF         SET FLAG.    
      00217  0600 00 0 00324         STZ     WA            THAT ONE TOO.
      00220  0634 00 0 00334         ZSA     LMARK         AND EVEN THIS.     
      00221                          CALL    CLOSE(NM1,NM2,*+1) CLOSE FILE.   
      00221                          TSX     CLOSE,4                                                          .003
      00222  3 00000 0 01223         PAR     NM1                                                              .003
      00223  3 00000 0 01224         PAR     NM2                                                              .003
      00224  3 00000 0 00225         PAR     *+1                                                              .003
      00225  0774 00 4 00000  ONX4   AXT     -,4
      00226  0020 00 4 00001         TRA     1,4           AND RETURN.  
                  
      00227 -0625 00 0 00331  OFFON  STL     ONOFF    
      00230  0020 00 0 00232         TRA     *+2
      00231  0600 00 0 00331  OFF    STZ     ONOFF         SET PRINT OFF-LINE, WITH FILE  
      00232  0634 00 4 00261         SXA     OFX4,4   
1      M1416 3845  PETER R. BOS .... 12-67 ..... WRFLX -- PRINT ON OR OFFLINE                    PAGE 5     
                  
      00233                          CALL    CLOSE(NM1,NM2,*+1) NAME AS OPTIONAL ARGS.    
      00233                          TSX     CLOSE,4                                                          .003
      00234  3 00000 0 01223         PAR     NM1                                                              .003
      00235  3 00000 0 01224         PAR     NM2                                                              .003
      00236  3 00000 0 00237         PAR     *+1                                                              .003
      00237  0522 00 0 00261         XEC     OFX4          RESTORE THE XR.    
      00240 -0500 00 4 00001         CAL     1,4           GO LOOK FOR NAME1. 
      00241  0602 00 0 00243         SLW     *+2           ..     
      00242                          TSX     CHKARG,4      IS ARG. Q    
      00243  0 00000 0 00000         ***     -,-,-    
      00244  0522 00 0 00261         XEC     OFX4          (RESTORE XR4.)     
      00245  0100 00 0 00262         TZE     OFTRA         ZERO FROM CHKARG = NO ARG.     
      00246  0602 00 0 01223         SLW     NM1           SAVE AS NAME1.     
      00247  1 77777 4 00250         TXI     *+1,4,-1      INCREMENT RETURN.  
      00250  0634 00 4 00261         SXA     OFX4,4        SAVE AGAIN.  
      00251 -0500 00 4 00001         CAL     1,4           TRY FOR SECOND ARG.
      00252  0602 00 0 00254         SLW     *+2           ..     
      00253                          TSX     CHKARG,4 
      00254  0 00000 0 00000         ***     -,-,-    
      00255  0100 00 0 00261         TZE     OFX4          IF NOT, EXIT.
      00256  0522 00 0 00261         XEC     OFX4          ELSE, RESTORE XR4. 
      00257  0602 00 0 01224         SLW     NM2           AND STORE.   
      00260  1 77777 4 00262         TXI     OFTRA,4,-1    AND EXIT.    
      00261  0774 00 4 00000  OFX4   AXT     -,4
      00262 -0625 00 0 00330  OFTRA  STL     WROFF         SET FLAG, DON'T FORGET.  
      00263  0020 00 4 00001         TRA     1,4           AND RETURN AFTER LAST ARG.     
                  
                  
      00264 -0500 60 4 00001  SSPRNT CAL*    1,4           GET ARG ( 0 OR NOT ).    
      00265  0560 00 0 01236         LDQ     =1            NUMBER OF WDS FOR LMARK. 
      00266  0600 00 0 00327         STZ     SS            SET FLAG.    
      00267  0100 00 0 00272         TZE     *+3           IF 0, LEAVE IT THAT WAY. 
      00270  0560 00 0 01237         LDQ     =2            ELSE, LINE MARK + BLANK WORD.  
      00271 -0625 00 0 00327         STL     SS            AND CHANGE FLAG.   
      00272 -0600 00 0 00332         STQ     NLM           SAVE NWORDS. 
      00273  0020 00 4 00002         TRA     2,4           RETURN.
                  
                  
      00274 -0500 00 4 00001  CHKARG CAL     1,4           TEST FOR EFA, PAR OR PZE ARGUMENT.   
      00275 -0320 00 0 01264         ANA     =O777700000000 MASK OPCODE.
      00276  0322 00 0 00325         ERA     EFA           IS EFA. Q    
      00277  0100 00 0 00307         TZE     ISARG         YUP.   
      00300 -0500 00 4 00001         CAL     1,4           NOPE, GET IT AGAIN.
      00301 -0320 00 0 01265         ANA     =O777777700000 MASK OUT ADDRESS. 
      00302  0100 00 0 00307         TZE     ISARG         PZE, OK.     
      00303  0322 00 0 00326         ERA     PAR           ELSE, CHECK FOR PTH.     
      00304  0100 00 0 00307         TZE     ISARG         OK, SKIP.    
      00305 -0754 00 0 00000         ZAC                   ELSE, RETURN ZERO. 
      00306  0020 00 4 00002         TRA     2,4           AND GO AWAY. 
      00307 -0500 60 4 00001  ISARG  CAL*    1,4           ARG, GET IT. 
      00310  0020 00 4 00002         TRA     2,4           AND RETURN.  
1      M1416 3845  PETER R. BOS .... 12-67 ..... WRFLX -- PRINT ON OR OFFLINE                    PAGE 6     
                  
      00311  0500 00 0 00342  OPNER  CLA     ERCOD         F.S. ERROR, CHECK IF 'ALREADY ACTIVE'
      00312  0402 00 0 01240         SUB     =3 
      00313  0100 00 0 00024         TZE     OPENED        OK, WE'LL BELIEVE IT.    
      00314                   ERR    TSX     ON,4          ELSE, RESET WRFLX TO ONLINE.   
      00315                          TYPE    4(CAN'T OPEN FILE --WRFLX) 
      00315                          TSX     WRFLX,4                                                          .004
      00316  3 00004 0 01232         PAR     ..007,,4                                                         .004
      00317  0522 00 0 00123         XEC     XR4           RESTORE XR4. 
      00320  0520 00 0 00323         ZET     WXA           AND GO TO APPROPRIATE ENTRY.   
      00321  0020 00 0 00004         TRA     WRFLXA   
      00322  0020 00 0 00000         TRA     WRFLX    
                  
                  
      00323  0 00000 0 00000  WXA    PZE  
      00324  0 00000 0 00000  WA     PZE     0,0,0    
      00325  0761 00 0 00000  EFA    EFA  
      00326  3 00000 0 00000  PAR    PAR  
      00327  0 00000 0 00001  SS     PZE     1  
      00330  0 00000 0 00000  WROFF  PZE  
      00331  0 00000 0 00000  ONOFF  PZE  
      00332  0 00000 0 00002  NLM    PZE     2  
      00333  0 00000 0 00000  LTH    PZE  
      00334 -377777000000     LMARK  OCT     777777000000   
      00335  606060606060            BCI     1,            THIS MUST FOLLOW LMARK.  
      00336  0 00000 0 00000  LMLOC  PZE     0  
      00337  0 00000 0 00000  LAC    PZE  
      00340  0 00000 0 00000  AC     PZE  
      00341  0 00000 0 00000  RELLOC PZE  
      00342  0 00000 0 00000  ERCOD  PZE  
                  
      00343                   BUF    BSS     432           (SIGH) 
                  
      01223  606651264367     NM1    BCI     1, WRFLX      OUTPUT FILE NAME, MUST BE REASSEMBLED
      01224  466463476463     NM2    BCI     1,OUTPUT      TO CHANGE.   
                  
      01225                          RMT     *  
      01225  0101 00 0 01254  OPEN   TIA     =HOPEN                                                           .002
      01226  0101 00 0 01244  BUFFER TIA     =HBUFFER                                                         .002
      01227  0101 00 0 01251  FSTATE TIA     =HFSTATE                                                         .002
      01230  0101 00 0 01261  WRWAIT TIA     =HWRWAIT                                                         .002
      01231  0101 00 0 01246  CLOSE  TIA     =HCLOSE                                                          .002
      01232  232145636046     ..007  BCI     4,CANT OPEN FILE --WRFLX                                         .002
      01233  472545602631     
      01234  432560404066     
      01235  512643676060     
                                     END  
                  
        LITERALS  
      01236  000000000001     
      01237  000000000002     
      01240  000000000003     
      01241  000001000000     
      01242  005500570057     
      01243  214343606060     
      01244  226426262551     
      01245  233045234644     
1      M1416 3845  PETER R. BOS .... 12-67 ..... WRFLX -- PRINT ON OR OFFLINE                    PAGE 7     
                  
      01246  234346622560     
      01247  242521246060     
      01250  244651444563     
      01251  266263216325     
      01252  400000000000     
      01253  452567234644     
      01254  464725456060     
      01255  555757575757     
      01256  624325254760     
      01257  665126436721     
      01260  665126436760     
      01261  665166213163     
      01262  666060606060     
      01263  700000000000     
      01264  777700000000     
      01265  777777700000     
1      M1416 3845  PETER R. BOS .... 12-67 ..... WRFLX -- PRINT ON OR OFFLINE                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1266 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        340     AC   154,  171,  177,  203,  210
        214     ON     0,  314
        327     SS    63,  266,  271
        324     WA    60,  122,  217
        114     WR    56,   57,  102
        175     X4   131,  134,  140,  142,  145,  150,  162,  201,  205,  212
        343    BUF    23
         43    CAL    35,   40,   42
        162    CHN   132
        152    CLS   133,  144,  147
        207    DED   146
        203    DMT   143
        325    EFA   276
        314    ERR      
          1    ..A    11,   12,   13,   14,   15,   16,   17,   21,   22,   23,   25,   26,   27,   73,   74,   75,   76
                     110,  111,  112,  113,  115,  116,  117,  120,  136,  137,  156,  157,  160,  174,  222,  223,  224
                     234,  235,  236,  316
          4    ..D    11,   12,   13,   14,   15,   16,   17,   21,   22,   23,   25,   26,   27,   73,   74,   75,   76
                     110,  111,  112,  113,  115,  116,  117,  120,  136,  137,  156,  157,  160,  174,  222,  223,  224
                     234,  235,  236,  316
          0    ...    76
          0    ..T    11,   12,   13,   14,   15,   16,   17,   21,   22,   23,   25,   26,   27,   73,   74,   75,   76
                     110,  111,  112,  113,  115,  116,  117,  120,  136,  137,  156,  157,  160,  174,  222,  223,  224
                     234,  235,  236,  316
        337    LAC   153,  172,  200,  204,  211
        333    LTH    27,   66
        332    NLM    76,  100,  272
       1223    NM1    12,   21,   25,   73,  110,  115,  156,  222,  234,  246
       1224    NM2    13,   22,   26,   74,  111,  116,  157,  223,  235,  257
        231    OFF     0
         10    OPN      
        326    PAR   164,  303
        210    SLP   151
        161    TRA   152
        323    WXA     2,    6,   32,   51,  121,  126,  320
        123    XR4     7,   30,  317
        177   CHN2   166
         51   C.R.    46
        145   DEAD     0
        173   .CHN   170
          3   ..OP    11,   12,   13,   14,   15,   16,   17,   21,   22,   23,   25,   26,   27,   73,   74,   75,   76
                     110,  111,  112,  113,  115,  116,  117,  120,  136,  137,  156,  157,  160,  174,  222,  223,  224
                     234,  235,  236,  316
         55   NOCR    33,   50,   54
        261   OFX4   232,  237,  244,  250,  255,  256
        225   ONX4   214
       1225   OPEN    10
        103   REWR    61
       1231  CLOSE   135,  155,  221,  233
        342  ERCOD    17,  311
        307  ISARG   277,  302,  304
1      M1416 3845  PETER R. BOS .... 12-67 ..... WRFLX -- PRINT ON OR OFFLINE                    PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1232  ..007   316
          0  ..PZE    11,   21,   25,   73,  110,  115,  136,  156,  174,  222,  234,  316
        334  LMARK    65,   76,  105,  106,  113,  220
        336  LMLOC    71,  112
        227  OFFON     0
        262  OFTRA   245,  260
        331  ONOFF   124,  215,  227,  231
        311  OPNER    16
        150  SLEEP     0
          7  START     3
          0  WRFLX     0,  315,  322
        330  WROFF     0,    4,  216,  262
       1226 BUFFER    20
        274 CHKARG   242,  253
        131 CHNCOM     0
        142 DORMNT     0
       1227 FSTATE    24
        134 NEXCOM     0
         24 OPENED   313
        341 RELLOC    70,   75,   77,  101,  117
        264 SSPRNT     0
        202 TIACHN   173
          4 WRFLXA     0,  321
       1230 WRWAIT    72,  107,  114
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




   REF   BCD 10/12/70 1511.7    4737         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE     REF   MAD            02/15/68    1637.2
-                 
                      PROGRAM TO EXAMINE SAVED FILES FOR ADDRESS                                       LM00001    
                      REFERENCES MATCHING PRE-DETERMINED STANDARDS                                     LM00002    
                           D.R. WIDRIG  DEC. 1965                                                      LM00003    
                                                                                                       LM00004    
                      LOADING INSTRUCTIONS ...                                                         LM00005    
                                                                                                       LM00006    
                           MAD REF (LIST)                                                              LM00007    
                           NCLOAD REF                                                                  LM00008    
                           SAVE REF                                                                    LM00009    
                           R REF NAME1 LOC -DELTA-                                                     LM00010    
                                                                                                       LM00011    
                  NORMAL MODE IS INTEGER                                                          *001 LM00012    
                                                                                                       LM00013    
                  VECTOR VALUES MESS1 = $R REF NAME1 LOC(8)  -DELTA(10)-$,777777777777K           *002 LM00014    
                  VECTOR VALUES MESS2 = $EXAMINATION COMPLETED$,777777777777K                     *003 LM00015    
                  VECTOR VALUES MESS3 = $EARLY EOF ENCOUNTERED$,777777777777K                     *004 LM00016    
                                                                                                       LM00017    
                  DIMENSION DRAIN(40),BUFF1(432),BUFF2(432)                                       *005 LM00018    
                                                                                                       LM00019    
                  VECTOR VALUES IRS(0) ... IRS(7) = 0                                             *006 LM00020    
                  VECTOR VALUES LINE = 0,575757575760K,0,0,777777777777K                          *007 LM00021    
                  VECTOR VALUES R = 432                                                           *008 LM00022    
                  VECTOR VALUES FENCE = 777777777777K                                             *009 LM00023    
                  VECTOR VALUES SAVED = $ SAVED$                                                  *010 LM00024    
                                                                                                       LM00025    
                      GET ARGUMENTS                                                                    LM00026    
                                                                                                       LM00027    
                  WHENEVER COMARG.(1,N1) .E. FENCE                                                *011 LM00028    
      INFORM           PRNTP.(MESS1)                                                              *012 LM00029    
                       CHNCOM.(0)                                                                 *013 LM00030    
                  OR WHENEVER COMARG.(2,LOC) .E. FENCE                                            *014 LM00031    
                       TRANSFER TO INFORM                                                         *015 LM00032    
                  OR WHENEVER COMARG.(3,DELTA) .E. FENCE                                          *016 LM00033    
                       DELTA = 0                                                                  *017 LM00034    
                  END OF CONDITIONAL                                                              *018 LM00035    
                  DELTA = BCDEC.(DELTA)                                                           *019 LM00036    
                                                                                                       LM00037    
                      GET NEGATIVE OF LOCATION                                                         LM00038    
                                                                                                       LM00039    
                  LOC = 1K5 - BCOCT.(LOC)                                                         *020 LM00040    
                                                                                                       LM00041    
                      OPEN SAVED FILE AND GET HEADER                                                   LM00042    
                                                                                                       LM00043    
                  BFOPEN.($R$,N1,SAVED,BUFF1(R),BUFF2(R),-0,ERR1)                                 *021 LM00044    
                  BFREAD.(N1,SAVED,MEMBND...1,REOF,EOFCT,ERR1)                                    *022 LM00045    
                  SKIP = (MEMBND.RS.18) - 1 - 7                                                   *023 LM00046    
                  MEMBND = MEMBND .A. 77777K                                                      *024 LM00047    
                                                                                                       LM00048    
                      SKIP OVER ILC                                                                    LM00049    
                                                                                                       LM00050    
                  BFREAD.(N1,SAVED,DRAIN...1,REOF,EOFCT,ERR1)                                     *025 LM00051    
                                                                                                       LM00052    
                      GET INDEX REGISTERS                                                              LM00053    
                                                                                                       LM00054    
                  BFREAD.(N1,SAVED,IRS(7)...7,REOF,EOFCT,ERR1)                                    *026 LM00055    
                                                                                                       LM00056    
                      SKIP REST OF MACHINE CONDITIONS                                                  LM00057    
                                                                                                       LM00058    
                  BFREAD.(N1,SAVED,DRAIN(SKIP)...SKIP,REOF,EOFCT,ERR1)                            *027 LM00059    
                                                                                                       LM00060    
                      COMPLEMENT IRS                                                                   LM00061    
                                                                                                       LM00062    
                  THROUGH LOOP1, FOR I = 1,1,(I.G.7)                                              *028 LM00063    
                       IRS(I) = 1K5 - IRS(I)                                                      *029 LM00064    
      LOOP1       CONTINUE                                                                        *030 LM00065    
                                                                                                       LM00066    
                      NOW, LOOK THROUGH BODY OF SAVED FILE                                             LM00067    
                                                                                                       LM00068    
                  THROUGH LOOP3, FOR I = 0,1,(I.G.MEMBND)                                         *031 LM00069    
                       BFREAD.(N1,SAVED,CELL...1,REOF,EOFCT,ERR1)                                 *032 LM00070    
                                                                                                       LM00071    
                      TEST FOR CELL ADDRESS WITHIN BOUNDS                                              LM00072    
                                                                                                       LM00073    
                       TEMP = ((.ABS.CELL) + LOC) .A. 77777K                                      *033 LM00074    
                       TAG = (CELL.RS.15).A.7K                                                    *034 LM00075    
                       WHENEVER ((TEMP+IRS(TAG)).A.77777K).G.DELTA, TRANSFER TO LOOP3             *035 LM00076    
                       LINE(0) = OCABC.(I)                                                        *036 LM00077    
                       LINE(2) = OCLBC.(CELL)                                                     *037 LM00078    
                       LINE(3) = OCRBC.(CELL)                                                     *038 LM00079    
                       PRNTP.(LINE)                                                               *039 LM00080    
      LOOP3       CONTINUE                                                                        *040 LM00081    
                                                                                                       LM00082    
                  PRNTP.(MESS2)                                                                   *041 LM00083    
                  BFCLOS.(N1,SAVED,NERR1)                                                         *042 LM00084    
      NERR1       CHNCOM.(0)                                                                      *043 LM00085    
                                                                                                       LM00086    
      ERR1        PRNTER.                                                                         *044 LM00087    
                  BFCLOS.(N1,SAVED,NERR1)                                                         *045 LM00088    
                  TRANSFER TO NERR1                                                               *046 LM00089    
                                                                                                       LM00090    
      REOF        PRNTP.(MESS3)                                                                   *047 LM00091    
                  BFCLOS.(N1,SAVED,NERR1)                                                         *048 LM00092    
                  TRANSFER TO NERR1                                                               *049 LM00093    
                                                                                                       LM00094    
                  END OF PROGRAM                                                                  *050 LM00095    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   02223 TRANSFER VECTOR LENGTH  00016 PROGRAM BEGINS    01725
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BUFF1  00704 A 1        ERR1   00017   4        LOC    01661   1        MESS2  01676 A 1        R      01705 A 1  
      BUFF2  01565 A 1        FENCE  01642 A 1        LOOP1  00016   4        MESS3  01703 A 1        SAVED  01706 A 1  
      CELL   01566   1        INFORM 00020   4        LOOP3  00021   4        N1     01704   1        SKIP   01707   1  
      DELTA  01567   1        IRS    01652 A 1        MEMBND 01662   1        NERR1  00022   4        TAG    01710   1  
      DRAIN  01640 A 1        I      01653   1        MESS1  01671 A 1        REOF   00023   4        TEMP   01711   1  
      EOFCT  01641   1        LINE   01660 A 1                                                                          
0FUNCTION DICTIONARY    
      BCDEC  00000   1        BCOCT  00001   1        BFCLOS 00002   1        BFOPEN 00003   1        BFREAD 00004   1  
      CHNCOM 00005   1        COMARG 00006   1        EXIT   00007   1        .SETUP 00010   1        OCABC  00011   1  
      OCLBC  00012   1        OCRBC  00013   1        PRNTER 00014   1        PRNTP  00015   1                          
0ABSOLUTE CONSTANTS     
 01717 +000000000017     01721 +000000077777     01716 +000000000007     01720 +000000000022     01724 -116060606060    
 01722 +000000100000     01715 +000000000003     01714 +000000000002     01712 +000000000000     01713 +000000000001    
 01723 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00017 TXL -302203002202       00020 TXL -301735001733       00021 TXL -302172002171       00022 TXL -302202002200      
 00023 TXL -302212002210                                                                                                
0PROGRAM    
                 N'R                                                                001  LM00012
                 V'S MESS1 = $R REF NAME1 LOC(8)  -DELTA(10)-$,777777777777K        002  LM00014
 01725 TSX +0 07400 4 00010    01663     -3 77777 7 77777    01664     -0 06060 6 06060    01665     -2 32174 0 10034   
 01666     -2 06040 2 42543    01667     -0 34623 7 41034    01670     -0 52144 2 50160    01671     -1 16051 2 52660   
                 V'S MESS2 = $EXAMINATION COMPLETED$,777777777777K                  003  LM00015
 01672     -3 77777 7 77777    01673     -2 32524 6 06060    01674     +2 34644 4 74325    01675     +2 16331 4 64560   
 01676     +2 56721 4 43145                                                                                             
                 V'S MESS3 = $EARLY EOF ENCOUNTERED$,777777777777K                  004  LM00016
 01677     -3 77777 7 77777    01700     -1 12524 6 06060    01701     +2 34664 4 56325    01702     +2 54626 6 02545   
 01703     +2 52151 4 37060                                                                                             
                 D'N DRAIN(40),BUFF1(432),BUFF2(432)                                005  LM00018
                 V'S IRS(0) ... IRS(7) = 0                                          006  LM00020
 01643     +0 00000 0 00000    01644     +0 00000 0 00000    01645     +0 00000 0 00000    01646     +0 00000 0 00000   
 01647     +0 00000 0 00000    01650     +0 00000 0 00000    01651     +0 00000 0 00000    01652     +0 00000 0 00000   
                 V'S LINE = 0,575757575760K,0,0,777777777777K                       007  LM00021
 01654     -3 77777 7 77777    01655     +0 00000 0 00000    01656     +0 00000 0 00000    01657     -1 75757 5 75760   
 01660     +0 00000 0 00000                                                                                             
                 V'S R = 432                                                        008  LM00022
 01705     +0 00000 0 00660                                                                                             
                 V'S FENCE = 777777777777K                                          009  LM00023
 01642     -3 77777 7 77777                                                                                             
                 V'S SAVED = $ SAVED$                                               010  LM00024
 01706     -2 06221 6 52524                                                                                             
                 W'R COMARG.(1,N1) .E. FENCE                                        011  LM00028
 01726 TSX +0 07400 4 00006    01727 TXH +3 00000 0 01713    01730 TXH +3 00000 0 01704    01731 SUB +0 40200 0 01642   
 01732 TNZ -0 10000 0 01740                                                                                             
      INFORM          PRNTP.(MESS1)                                                 012  LM00029
 01733 TSX +0 07400 4 00015    01734 TXH +3 00000 0 01671                                                               
                      CHNCOM.(0)                                                    013  LM00030
 01735 TSX +0 07400 4 00005    01736 TXH +3 00000 0 01712                                                               
                 O'R COMARG.(2,LOC) .E. FENCE                                       014  LM00031
 01737 TRA +0 02000 0 01756    01740 TSX +0 07400 4 00006    01741 TXH +3 00000 0 01714    01742 TXH +3 00000 0 01661   
 01743 SUB +0 40200 0 01642    01744 TNZ -0 10000 0 01747                                                               
                      T'O INFORM                                                    015  LM00032
 01745 TRA +0 02000 0 00020                                                                                             
                 O'R COMARG.(3,DELTA) .E. FENCE                                     016  LM00033
 01746 TRA +0 02000 0 01756    01747 TSX +0 07400 4 00006    01750 TXH +3 00000 0 01715    01751 TXH +3 00000 0 01567   
 01752 SUB +0 40200 0 01642    01753 TNZ -0 10000 0 01756                                                               
                      DELTA = 0                                                     017  LM00034
 01754 CLA +0 50000 0 01712    01755 STO +0 60100 0 01567                                                               
                 E'L                                                                018  LM00035
                 DELTA = BCDEC.(DELTA)                                              019  LM00036
 01756 TSX +0 07400 4 00000    01757 TXH +3 00000 0 01567    01760 STO +0 60100 0 01567                                 
                 LOC = 1K5 - BCOCT.(LOC)                                            020  LM00040
 01761 TSX +0 07400 4 00001    01762 TXH +3 00000 0 01661    01763 CHS +0 76000 0 00002    01764 ADD +0 40000 0 01722   
 01765 STO +0 60100 0 01661                                                                                             
                 BFOPEN.($R$,N1,SAVED,BUFF1(R),BUFF2(R),-0,ERR1)                    021  LM00044
 01766 CLS +0 50200 0 01712    01767 STO +0 60100 0 02220    01770 CLA +0 50000 0 01705    01771 SUB +0 40200 0 01772   
 01772 TXH +3 00000 0 01565    01773 STA +0 62100 0 02005    01774 CLA +0 50000 0 01705    01775 SUB +0 40200 0 01776   
 01776 TXH +3 00000 0 00704    01777 STA +0 62100 0 02004    02000 TSX +0 07400 4 00003    02001 TXH +3 00000 0 01724   
 02002 TXH +3 00000 0 01704    02003 TXH +3 00000 0 01706    02004 TXH +3 00000 0 00000    02005 TXH +3 00000 0 00000   
 02006 TXH +3 00000 0 02220    02007 TXH +3 00000 0 00017                                                               
                 BFREAD.(N1,SAVED,MEMBND...1,REOF,EOFCT,ERR1)                       022  LM00045
 02010 TSX +0 07400 4 00004    02011 TXH +3 00000 0 01704    02012 TXH +3 00000 0 01706    02013 TIX +2 01713 0 01662   
 02014 TXH +3 00000 0 00023    02015 TXH +3 00000 0 01641    02016 TXH +3 00000 0 00017                                 
                 SKIP = (MEMBND.RS.18) - 1 - 7                                      023  LM00046
 02017 CAL -0 50000 0 01720    02020 STA +0 62100 0 02022    02021 CAL -0 50000 0 01662    02022 LGR -0 76500 0 00000   
 02023 SLW +0 60200 0 02220    02024 CLA +0 50000 0 02220    02025 SUB +0 40200 0 01713    02026 SUB +0 40200 0 01716   
 02027 STO +0 60100 0 01707                                                                                             
                 MEMBND = MEMBND .A. 77777K                                         024  LM00047
 02030 CAL -0 50000 0 01662    02031 ANA -0 32000 0 01721    02032 SLW +0 60200 0 01662                                 
                 BFREAD.(N1,SAVED,DRAIN...1,REOF,EOFCT,ERR1)                        025  LM00051
 02033 TSX +0 07400 4 00004    02034 TXH +3 00000 0 01704    02035 TXH +3 00000 0 01706    02036 TIX +2 01713 0 01640   
 02037 TXH +3 00000 0 00023    02040 TXH +3 00000 0 01641    02041 TXH +3 00000 0 00017                                 
                 BFREAD.(N1,SAVED,IRS(7)...7,REOF,EOFCT,ERR1)                       026  LM00055
 02042 TSX +0 07400 4 00004    02043 TXH +3 00000 0 01704    02044 TXH +3 00000 0 01706    02045 TIX +2 01716 0 01643   
 02046 TXH +3 00000 0 00023    02047 TXH +3 00000 0 01641    02050 TXH +3 00000 0 00017                                 
                 BFREAD.(N1,SAVED,DRAIN(SKIP)...SKIP,REOF,EOFCT,ERR1)               027  LM00059
 02051 CLA +0 50000 0 01707    02052 SUB +0 40200 0 02053    02053 TXH +3 00000 0 01640    02054 STA +0 62100 0 02060   
 02055 TSX +0 07400 4 00004    02056 TXH +3 00000 0 01704    02057 TXH +3 00000 0 01706    02060 TIX +2 01707 0 00000   
 02061 TXH +3 00000 0 00023    02062 TXH +3 00000 0 01641    02063 TXH +3 00000 0 00017                                 
                 T'H LOOP1, FOR I = 1,1,(I.G.7)                                     028  LM00063
 02064 CLA +0 50000 0 01713    02065 STO +0 60100 0 01653    02066 TRA +0 02000 0 02072    02067 CLA +0 50000 0 01653   
 02070 ADD +0 40000 0 01713    02071 STO +0 60100 0 01653    02072 CLA +0 50000 0 01653    02073 SUB +0 40200 0 01716   
 02074 TZE +0 10000 0 02076    02075 TPL +0 12000 0 02104                                                               
                      IRS(I) = 1K5 - IRS(I)                                         029  LM00064
 02076 LXA +0 53400 2 01653    02077 CLA +0 50000 0 01722    02100 SUB +0 40200 2 01652    02101 LXA +0 53400 1 01653   
 02102 STO +0 60100 1 01652                                                                                             
      LOOP1      C'E                                                                030  LM00065
 02103 TRA +0 02000 0 02067                                                                                             
                 T'H LOOP3, FOR I = 0,1,(I.G.MEMBND)                                031  LM00069
 02104 CLA +0 50000 0 01712    02105 STO +0 60100 0 01653    02106 TRA +0 02000 0 02112    02107 CLA +0 50000 0 01653   
 02110 ADD +0 40000 0 01713    02111 STO +0 60100 0 01653    02112 CLA +0 50000 0 01653    02113 SUB +0 40200 0 01662   
 02114 TZE +0 10000 0 02116    02115 TPL +0 12000 0 02172                                                               
                      BFREAD.(N1,SAVED,CELL...1,REOF,EOFCT,ERR1)                    032  LM00070
 02116 TSX +0 07400 4 00004    02117 TXH +3 00000 0 01704    02120 TXH +3 00000 0 01706    02121 TIX +2 01713 0 01566   
 02122 TXH +3 00000 0 00023    02123 TXH +3 00000 0 01641    02124 TXH +3 00000 0 00017                                 
                      TEMP = ((.ABS.CELL) + LOC) .A. 77777K                         033  LM00074
 02125 CLA +0 50000 0 01566    02126 SSP +0 76000 0 00003    02127 ADD +0 40000 0 01661    02130 STO +0 60100 0 02220   
 02131 CAL -0 50000 0 02220    02132 ANA -0 32000 0 01721    02133 SLW +0 60200 0 01711                                 
                      TAG = (CELL.RS.15).A.7K                                       034  LM00075
 02134 CAL -0 50000 0 01717    02135 STA +0 62100 0 02137    02136 CAL -0 50000 0 01566    02137 LGR -0 76500 0 00000   
 02140 ANA -0 32000 0 01716    02141 SLW +0 60200 0 01710                                                               
                      W'R ((TEMP+IRS(TAG)).A.77777K).G.DELTA, T'O LOOP3             035  LM00076
 02142 LXA +0 53400 2 01710    02143 CLA +0 50000 0 01711    02144 ADD +0 40000 2 01652    02145 STO +0 60100 0 02220   
 02146 CAL -0 50000 0 02220    02147 ANA -0 32000 0 01721    02150 SLW +0 60200 0 02220    02151 CLA +0 50000 0 02220   
 02152 SUB +0 40200 0 01567    02153 TZE +0 10000 0 02156    02154 TMI -0 12000 0 02156    02155 TRA +0 02000 0 00021   
                      LINE(0) = OCABC.(I)                                           036  LM00077
 02156 TSX +0 07400 4 00011    02157 TXH +3 00000 0 01653    02160 STO +0 60100 0 01660                                 
                      LINE(2) = OCLBC.(CELL)                                        037  LM00078
 02161 TSX +0 07400 4 00012    02162 TXH +3 00000 0 01566    02163 STO +0 60100 0 01656                                 
                      LINE(3) = OCRBC.(CELL)                                        038  LM00079
 02164 TSX +0 07400 4 00013    02165 TXH +3 00000 0 01566    02166 STO +0 60100 0 01655                                 
                      PRNTP.(LINE)                                                  039  LM00080
 02167 TSX +0 07400 4 00015    02170 TXH +3 00000 0 01660                                                               
      LOOP3      C'E                                                                040  LM00081
 02171 TRA +0 02000 0 02107                                                                                             
                 PRNTP.(MESS2)                                                      041  LM00083
 02172 TSX +0 07400 4 00015    02173 TXH +3 00000 0 01676                                                               
                 BFCLOS.(N1,SAVED,NERR1)                                            042  LM00084
 02174 TSX +0 07400 4 00002    02175 TXH +3 00000 0 01704    02176 TXH +3 00000 0 01706    02177 TXH +3 00000 0 00022   
      NERR1      CHNCOM.(0)                                                         043  LM00085
 02200 TSX +0 07400 4 00005    02201 TXH +3 00000 0 01712                                                               
      ERR1       PRNTER.                                                            044  LM00087
 02202 TSX +0 07400 4 00014                                                                                             
                 BFCLOS.(N1,SAVED,NERR1)                                            045  LM00088
 02203 TSX +0 07400 4 00002    02204 TXH +3 00000 0 01704    02205 TXH +3 00000 0 01706    02206 TXH +3 00000 0 00022   
                 T'O NERR1                                                          046  LM00089
 02207 TRA +0 02000 0 00022                                                                                             
      REOF       PRNTP.(MESS3)                                                      047  LM00091
 02210 TSX +0 07400 4 00015    02211 TXH +3 00000 0 01703                                                               
                 BFCLOS.(N1,SAVED,NERR1)                                            048  LM00092
 02212 TSX +0 07400 4 00002    02213 TXH +3 00000 0 01704    02214 TXH +3 00000 0 01706    02215 TXH +3 00000 0 00022   
                 T'O NERR1                                                          049  LM00093
 02216 TRA +0 02000 0 00022                                                                                             
                 E'M                                                                050  LM00095
 02217 TSX +0 07400 4 00007                                                                                             




RELOAD   BCD 10/12/70 1511.7   43203         00000    
1            LOAD SECONDARY STORAGE (TIME-SHARING VERSION)...M.J.BAILEY,2/1/65   06/01/70 1347.6 PAGE 1     
                  
                              *     
                                     EXTERN  INITTF,OPENDF  
                                     EXTERN  LTFILE,TERMTF,GETLSG 
                                     EXTERN  ATTACH,TAPFIL,MOUNT,VERIFY 
                                     EXTERN  WRFLX,FERRTN,TILOCK,UMOUNT,CLOSE,
                                     EXTERN  SETCLS,SETCLC,CHNCOM,SLEEP 
                                     EXTERN  CHFILE,DELFIL  
                              *     
                                     INSERT  BMCRSC   
                              *     
                              *  ZERO-IZE A THROUGH A+X-1   
                              *     
                               CLEAR MACRO   A,X
                                     AXT     X,1
                                     STZ     A+X,1    
                                     TIX     *-1,1,1  
                               CLEAR END  
                              *     
                              *      MOVE X WORDS FROM A ET SEQ TO B ET SEQ   
                              *     
                               MOVE  MACRO   X,A,B    
                                     AXT     X,1
                                     CAL     A+X,1    
                                     SLW     B+X,1    
                                     TIX     *-2,1,1  
                               MOVE  END  
                              *     
                              *  PRINT ONE LINE COMMENT     
                              *     
                              PRLINE MACRO   COMNT,NWC,LOC  
                                     TSX     WRFLX,4  
                                             LOC,,NWC 
                                     RMT  
                               LOC   BCI     NWC,COMNT
                                     RMT  
                              PRLINE END  
                              *     
                              *     
                              *      EXECUTE INST. IN CORE A
                              *     
                              *     
                              EXEC   MACRO   OPC,ADD  
                                     TSX     $GETA,7  
                                     OPC     ADD
                              EXEC   END  
                              *     
                              *      GET KEY SETTING VIA SUPERVISOR, SET ABANTP, NOCHAN IF APPROPRIATE
                              *     
                              GETSIG MACRO
                                     TSX     GETLSG,4 
                              GETSIG END  
                              *     
                              *      TEST WHETHER 2ND TAPE COPY IS NEEDED, IF NOT GO TO SKIP    
                              *     
                              SKIFNB MACRO   SKIP     
                                     CLA     NOCHAN   
1            LOAD SECONDARY STORAGE (TIME-SHARING VERSION)...M.J.BAILEY,2/1/65   06/01/70 1347.6 PAGE 2     
                  
                                     SUB     =1 
                                     TZE     SKIP     
                              SKIFNB END  
                              *     
                              *      PRINT AN N-WORD MESSAGE FROM  MESSGE     
                              *     
                              PRM    MACRO   MESSGE,N 
                                     TSX     WRFLX,4  
                                             MESSGE,,N
                              PRM    END  
                              *     
                              *      COMPARE 2 SETS OF N CONSECUTIVE WORDS IN A ETC., AND B ETC. ,    
                              *      AND IF THEY DO NOT ALL MATCH, GO TO NF, OR OTHERWISE CONTINUE.   
                              *     
                              CMPWDS MACRO   N,A,B,NF 
                                     AXT     N,1
                                     CAL     A+N,1    
                                     LAS     B+N,1    
                                     TRA     NF 
                                     TRA     *+2
                                     TRA     NF 
                                     TIX     *-5,1,1  
                              CMPWDS END  
                              *     
                              *      WAIT FOR I/O ON FILE (A,B) TO END, GO TO E IF ERROR OCCURRED     
                              *     
                              WAIT   MACRO   A,B,E    
                                     TSX     FWAIT,4  
                                     PTH     A  
                                     PTH     B  
                                     PTH     E  
                              WAIT   END  
                              *     
                              *      CLOSE THE FILE (A,B)   
                              *     
                              CLOSE  MACRO   A,B
                                     TSX     CLOSE,4  
                                     PTH     A  
                                     PTH     B  
                              CLOSE  END  
                              *     
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *      INITIALIZE I/O SYSTEM AND VARIABLES
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
                              *     
                  
      00000  314531636326     INITTF
      00001  464725452426     OPENDF
      00002  436326314325     LTFILE
      00003  632551446326     TERMTF
      00004  272563436227     GETLSG
      00005  216363212330     ATTACH
      00006  632147263143     TAPFIL
      00007  444664456360     MOUNT 
      00010  652551312670     VERIFY
      00011  665126436760     WRFLX 
1            LOAD SECONDARY STORAGE (TIME-SHARING VERSION)...M.J.BAILEY,2/1/65   06/01/70 1347.6 PAGE 3     
                  
      00012  262551516345     FERRTN
      00013  633143462342     TILOCK
      00014  644446644563     UMOUNT
      00015  234346622560     CLOSE 
      00016  622563234362     SETCLS
      00017  622563234323     SETCLC
      00020  233045234644     CHNCOM
      00021  624325254760     SLEEP 
      00022  233026314325     CHFILE
      00023  242543263143     DELFIL
      00024  475145632551     PRNTER
      00025  216242464751     ASKOPR
      00026  512523214760     RECAP 
                  
      00027  0760 00 0 00016         LMTM 
      00030 -0500 00 0 00452         CAL     =H C0056 
      00031  0602 00 0 74442         SLW     DU 
      00032 -0500 00 0 00451         CAL     =H 99999 
      00033  0602 00 0 74441         SLW     DP 
                              *     
                              *     
      00034 -0500 00 0 00445         CAL     =H.LOAD. 
      00035  0602 00 0 74440         SLW     LFNA     
      00036 -0500 00 0 00446         CAL     =H.TAPE. 
      00037  0602 00 0 74437         SLW     LFNB     
      00040  0500 00 0 00445         CLA     =H.LOAD. 
      00041  0602 00 0 74422         SLW     BFNA     
      00042  0500 00 0 00443         CLA     =HB.COPY 
      00043  0602 00 0 74421         SLW     BFNB     
      00044  0074 00 4 00005         TSX     ATTACH,4 
 TD   00045  3 00000 0 74442         TXH     DU 
 TD   00046  3 00000 0 74441         TXH     DP 
                              *     
      00047  0074 00 4 00012         TSX     FERRTN,4      SET TRANSFER ADDRESS FOR UNSPECIFIED 
      00050  0 00000 0 00072         PZE     ELOC          I/O SYSTEM ERROR RETURNS 
      00051  0074 00 4 00013         TSX     TILOCK,4      NO TRAP GO DORMANT IF EVER READ-     
      00052  0 00000 0 00435         PZE     =0            INTERLOCKED FROM A USER'S FILE.
                              *     
      00053  0074 00 4 00016         TSX     SETCLS,4 
      00054  0 00001 0 00276         PZE     COMD,,1  
      00055  0074 00 4 00016         TSX     SETCLS,4 
      00056  0 00002 0 00276         PZE     COMD,,2  
      00057 -0500 00 0 00404         CAL     CHNWRD   
      00060  0074 00 4 00017         TSX     SETCLC,4 
      00061  0074 00 4 00015         TSX     CLOSE,4       CLOSE ALL FILES    
 TD   00062  3 00000 0 00442         TXH     =HALL    
 TD   00063  3 00000 0 00447         TXH     =-0
 TD   00064  3 00000 0 00065         TXH     *+1
      00065  0074 00 4 00014         TSX     UMOUNT,4 
 TD   00066  3 00000 0 00442         TXH     =HALL    
      00067  2 00323 0 00314         TIX     PUMT,,LPUMT    
 TD   00070  3 00000 0 00071         TXH     *+1
      00071  0020 00 0 00101         TRA     LEH
                              *     
      00072  0634 00 4 00076  ELOC   SXA     ELOC4,4       UNSPECIFIED I/O SYSTEM ERROR OCCURRED
      00073  0074 00 4 00011         TSX     WRFLX,4  
1            LOAD SECONDARY STORAGE (TIME-SHARING VERSION)...M.J.BAILEY,2/1/65   06/01/70 1347.6 PAGE 4     
                  
      00074  0 00014 0 00410                 MESX,,12 
      00075  0074 00 4 00024         TSX     $PRNTER,4
      00076  0774 00 4 00000  ELOC4  AXT     **,4     
      00077  0020 00 4 00001         TRA     1,4           RETURN TO I/O SYSTEM CALLER    
                              *     
                              *     
                              *      LOAD ALL TAPE FILES BUT THE FIRST  
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
                              *     
      00100  0074 00 4 00003  LEG    TSX     TERMTF,4      CLOSE,UNMOUNT BOTH COPIES OF LOAD TAPE FILE
                              *     
      00101  0074 00 4 00025  LEH    TSX     $ASKOPR,4
      00102  3 00006 0 00365         PTH     MESA,,6  
      00103  3 00004 0 00257         PTH     LEV,,STOPLD    
      00104  3 00003 0 00401         PTH     MESEY,,3 
      00105  3 00001 0 00106         PTH     *+1,,CTINUE    
                              *     
      00106  0500 00 0 00441         CLA     =11           (11 AND 12)  
      00107  0601 00 0 74420         STO     AUN           CHANNEL A UNIT NO. 
      00110  0400 00 0 00436         ADD     =1 
      00111  0601 00 0 74417         STO     BUN           CHANNEL B UNIT NO. 
                              *     
      00112  0074 00 4 00022         TSX     CHFILE,4 
 TD   00113  3 00000 0 74440         TXH     LFNA     
 TD   00114  3 00000 0 74437         TXH     LFNB     
 TD   00115  3 00000 0 00435         TXH     =0 
 TD   00116  3 00000 0 00447         TXH     =-0
 TD   00117  3 00000 0 00447         TXH     =-0
 TD   00120  3 00000 0 00121         TXH     *+1
      00121  0074 00 4 00023         TSX     DELFIL,4 
 TD   00122  3 00000 0 74440         TXH     LFNA     
 TD   00123  3 00000 0 74437         TXH     LFNB     
 TD   00124  3 00000 0 00125         TXH     *+1
      00125  0074 00 4 00022         TSX     CHFILE,4 
 TD   00126  3 00000 0 74422         TXH     BFNA     
 TD   00127  3 00000 0 74421         TXH     BFNB     
 TD   00130  3 00000 0 00435         TXH     =0 
 TD   00131  3 00000 0 00447         TXH     =-0
 TD   00132  3 00000 0 00447         TXH     =-0
 TD   00133  3 00000 0 00134         TXH     *+1
      00134  0074 00 4 00023         TSX     DELFIL,4 
 TD   00135  3 00000 0 74422         TXH     BFNA     
 TD   00136  3 00000 0 74421         TXH     BFNB     
 TD   00137  3 00000 0 00140         TXH     *+1
      00140  0074 00 4 00006         TSX     TAPFIL,4      DECLARE LOAD TAPE FILE TO BE UNIT AUN
 TD   00141  3 00000 0 74440         TXH     LFNA     
 TD   00142  3 00000 0 74437         TXH     LFNB     
 TD   00143  3 00000 0 74420         TXH     AUN
 TD   00144  3 00000 0 00436         TXH     =1 
      00145  0074 00 4 00006         TSX     TAPFIL,4      DECLARE CHANNEL B LOAD FILE TO BE UNIT BUN 
 TD   00146  3 00000 0 74422         TXH     BFNA     
 TD   00147  3 00000 0 74421         TXH     BFNB     
 TD   00150  3 00000 0 74417         TXH     BUN
 TD   00151  3 00000 0 00436         TXH     =1 
                              *     
      00152  0500 00 0 00437  LEI    CLA     =2 
1            LOAD SECONDARY STORAGE (TIME-SHARING VERSION)...M.J.BAILEY,2/1/65   06/01/70 1347.6 PAGE 5     
                  
      00153  0601 00 0 74443         STO     NOCHAN   
      00154  0600 00 0 74444         STZ     ABANTP   
      00155                          PRLINE  (DOUBLE-CHANNEL LOAD IS ASSUMED FOR NEXT LOAD FILE,),9   
      00155  0074 00 4 00011         TSX     WRFLX,4                                                          .001
      00156  0 00011 0 00424                 ..001,,9                                                         .001
                                     RMT                                                                      .001
                              ..001  BCI     9,DOUBLE-CHANNEL LOAD IS ASSUMED FOR NEXT LOAD FILE,             .001
                                     RMT                                                                      .001
      00157  0074 00 4 00025         TSX     $ASKOPR,4
      00160  3 00006 0 00373         PTH     MESB,,6  
      00161  3 00006 0 00164         PTH     LEII,,SWCHAN   
      00162  3 00003 0 00401         PTH     MESEY,,3 
      00163  3 00001 0 00164         PTH     LEII,,CTINUE   
      00164  0074 00 4 00007  LEII   TSX     MOUNT,4  
 TD   00165  3 00000 0 00436         TXH     =1 
 TD   00166  3 00000 0 74420         TXH     AUN
      00167  2 00353 0 00343         TIX     MTP,,LMTP
                              *     
                              *      VERIFY NEXT TAPE FILE  
                              *     
      00170                          MOVE    4,NFTID,LABEL  
      00170  0774 00 1 00004         AXT     4,1                                                              .001
      00171 -0500 00 1 00304         CAL     NFTID+4,1                                                        .001
      00172  0602 00 1 74416         SLW     LABEL+4,1                                                        .001
      00173  2 00001 1 00171         TIX     *-2,1,1                                                          .001
      00174  0074 00 4 00010         TSX     VERIFY,4      CHECK MOUNTED TAPE 
 TD   00175  3 00000 0 74420         TXH     AUN
      00176  3 00004 0 74412         TXH     LABEL,,4 
 TD   00177  3 00000 0 00201         TXH     LEK           TRANSFER IF NOT A NEW FILE TAPE
      00200  0020 00 0 00235         TRA     LEP           SKIP IF NO UDT'S LOADED YET    
                              *     
      00201                   LEK    MOVE    4,SDTID,LABEL  
      00201  0774 00 1 00004         AXT     4,1                                                              .001
      00202 -0500 00 1 00310         CAL     SDTID+4,1                                                        .001
      00203  0602 00 1 74416         SLW     LABEL+4,1                                                        .001
      00204  2 00001 1 00202         TIX     *-2,1,1                                                          .001
      00205  0074 00 4 00010         TSX     VERIFY,4      CHECK MOUNTED TAPE 
 TD   00206  3 00000 0 74420         TXH     AUN
      00207  3 00004 0 74412         TXH     LABEL,,4 
 TD   00210  3 00000 0 00212         TXH     LEM           TRANSFER IF NOT SYSTEM FILES TAPE    
      00211  0020 00 0 00235         TRA     LEP           SKIP IF SYSTEM FILES NOT PREVIOUSLY MOUNTED
                              *     
      00212                   LEM    MOVE    4,UDTID,LABEL  
      00212  0774 00 1 00004         AXT     4,1                                                              .001
      00213 -0500 00 1 00314         CAL     UDTID+4,1                                                        .001
      00214  0602 00 1 74416         SLW     LABEL+4,1                                                        .001
      00215  2 00001 1 00213         TIX     *-2,1,1                                                          .001
      00216  0074 00 4 00010         TSX     VERIFY,4      CHECK MOUNTED TAPE 
 TD   00217  3 00000 0 74420         TXH     AUN
      00220  3 00004 0 74412         TXH     LABEL,,4 
 TD   00221  3 00000 0 00224         TXH     LEMA          TRANSFER IF UNUSUAL CONDITION  
 TD   00222  3 00000 0 00341         TXH     TEMP          TYPE   
      00223  0020 00 0 00235         TRA     LEP           SKIP IF VERIFY O.K.
                              *     
      00224  0500 00 0 00341  LEMA   CLA     TEMP     
      00225  0402 00 0 00440         SUB     =7 
1            LOAD SECONDARY STORAGE (TIME-SHARING VERSION)...M.J.BAILEY,2/1/65   06/01/70 1347.6 PAGE 6     
                  
      00226  0100 00 0 00231         TZE     LEO           SKIP IF WRONG TAPE 
      00227  0074 00 4 00024         TSX     $PRNTER,4     OTHER ERROR, TRY AGAIN   
      00230  0020 00 0 00152         TRA     LEI
                              *     
                              *     
      00231  0074 00 4 00014  LEO    TSX     UMOUNT,4      WRONG TAPE - HAVE IT TAKEN OFF 
 TD   00232  3 00000 0 74420         TXH     AUN
      00233  2 00340 0 00324         TIX     WRNGTP,,LWG    
      00234  0020 00 0 00152         TRA     LEI
                              *     
                              *      START READING NEXT TAPE FILE AND SKIP OVER 1ST MFD ON IT   
                              *     
      00235  0074 00 4 00004  LEP    TSX     GETLSG,4 
      00236                          SKIFNB  LEIB2    
      00236  0500 00 0 74443         CLA     NOCHAN                                                           .001
      00237  0402 00 0 00436         SUB     =1                                                               .001
      00240  0100 00 0 00245         TZE     LEIB2                                                            .001
      00241  0074 00 4 00007         TSX     MOUNT,4  
 TD   00242  3 00000 0 00437         TXH     =2 
 TD   00243  3 00000 0 74417         TXH     BUN
      00244  2 00364 0 00354         TIX     MTPB,,LMTPB    
      00245  0074 00 4 00000  LEIB2  TSX     INITTF,4      OPEN NEXT LOAD TAPE FILE, SPACE OVER AND   
      00246  0020 00 0 00100         TRA     LEG           ABANDON TAPE FILE RETURN 
                              *     
      00247  0074 00 4 00001         TSX     OPENDF,4      INIT'LIZE READ FROM 1ST DUMPED FILE ON TAPE
 TD   00250  3 00000 0 00252         TXH     LERA          READ ERROR   
 TD   00251  3 00000 0 00100         TXH     LEG           ABANDON TAPE FILE  
                              *     
                              *      LOAD BODY OF THIS DUMP TAPE FILE   
                              *      DOWN TO M.F.D. AT END OF TAPE.     
                              *     
      00252  0074 00 4 00002  LERA   TSX     LTFILE,4      SKIP 1ST MFD, LOAD DOWN TO MFD AT END/TAPE 
      00253  0074 00 4 00005         TSX     ATTACH,4 
      00254  3 00000 0 74442         PTH     DU 
      00255  3 00000 0 74441         PTH     DP 
      00256  0020 00 0 00100         TRA     LEG           RETURN FOR NEXT FILE     
                              *     
      00257  0074 00 4 00026  LEV    TSX     $RECAP,4 
                              *     
      00260  0074 00 4 00005         TSX     ATTACH,4 
 TD   00261  3 00000 0 74442         TXH     DU 
 TD   00262  3 00000 0 74441         TXH     DP 
                              *     
      00263  0074 00 4 00023         TSX     DELFIL,4 
 TD   00264  3 00000 0 00450         TXH     =HRESTOR 
 TD   00265  3 00000 0 00444         TXH     =HFILE.1 
 TD   00266  3 00000 0 00267         TXH     *+1
      00267  0074 00 4 00016         TSX     SETCLS,4 
      00270  0 00001 0 00405         PZE     DPCOM,,1 
      00271  0074 00 4 00016         TSX     SETCLS,4      SET 'RESUME DAEMXA' AS 2ND COMMAND IN CHAIN
      00272  0 00002 0 00405         PZE     DPCOM,,2 
      00273 -0500 00 0 00404         CAL     CHNWRD        SET THE CLC WITH THE 2 COMMANDS IN CHAIN,  
      00274  0074 00 4 00017         TSX     SETCLC,4      AND TO START FROM 1ST POSITION IN THE CHAIN
      00275  0074 00 4 00020         TSX     CHNCOM,4      EXECUTE DUMP PROGRAM CHAIN     
                              *     
                              * - - - - - - - - - - - - - - - - - - - - 
1            LOAD SECONDARY STORAGE (TIME-SHARING VERSION)...M.J.BAILEY,2/1/65   06/01/70 1347.6 PAGE 7     
                  
                              *      CONSTANTS, VARIABLES, ETC.   
                              * - - - - - - - - - - - - - - - - - - - - 
                              *     
      00276  246243462124     COMD   BCI     1,DSLOAD 
      00277 -377777777777            OCT     777777777777   
      00300  602351252163     NFTID  BCI     4, CREATED-FILE DUMP TAPE  
      00304  606270626325     SDTID  BCI     4, SYSTEM-FILES DUMP TAPE  
      00310  606462255162     UDTID  BCI     4, USERS'-FILES DUMP TAPE  
      00314  604721453123     PUMT   BCI     7, PANIC UNMOUNT, RE-READY THESE LOAD TAPES  
      00323  0 00000 0 00007  LPUMT  PZE     *-PUMT   
      00324  603144472551     WRNGTP BCI     8, IMPERMISSIBLE REEL MOUNTED FOR DISK RELOAD
      00334  604743252162            BCI     4, PLEASE TAKE IT OFF
      00340  0 00000 0 00014  LWG    PZE     *-WRNGTP 
      00341                   TEMP   BSS     2  
      00343  605125212470     MTP    BCI     8, READY THE 1ST REEL OF THE NEXT DUMP TAPE FILE   
      00353  0 00000 0 00010  LMTP   PZE     *-MTP    
      00354  605125212470     MTPB   BCI     8, READY THE DUPLICATE COPY ON THE OTHER CHANNEL.  
      00364  0 00000 0 00010  LMTPB  PZE     *-MTPB   
      00365  606346606263     MESA   BCI     6, TO STOP LOADING, START DUMPING.     
      00373  604546666046     MESB   BCI     6, NOW OR ANYTIME TO DROP 2ND CHANNEL. 
      00401  604663302551     MESEY  BCI     3, OTHERWISE, NOW.   
      00404  0 00002 0 00001  CHNWRD PZE     1,,2     
      00405  242125444645     DPCOM  BCI     1,DAEMON 
      00406  006060606060            BCI     1,0
      00407 -377777777777            OCT     777777777777   
      00410  606445256747     MESX   BCI     9, UNEXPECTED AND/OR NON-CRUCIAL I/O SYSTEM ERROR RETURN 
      00421  736066303123            BCI     3,, WHICH IS IGNORED 
                              *     
                                     INSERT  BCMEQB   
                              *     
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *      COMMON AND EQUIVALENCE FOR SECONDARY STORAGE LOAD    
                              *         (TIME-SHARING VERSION)    
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *     
                      074446  DEMKEY BOOL    74446         CORE A LOCATION FOR DAEMON KEY SETTING     
                              *     
                      000017  BASE   BOOL    17            KEY CODE BASE
                      000001  CTINUE BOOL    1             KEY CODE TO CONTINUE WITH PROGRAM,NO CHANGE
                      000002  PAUSE  BOOL    2             KEY CODE TO WAIT 60 SECS.
                      000003  CHLDFL BOOL    3             KEY CODE TO USE DIFFERENT LOAD FILE  
                      000004  STOPLD BOOL    4             KEY CODE TO STOP LOADING, START DUMPING    
                      000005  ABANKY BOOL    5             KEY CODE TO ABANDON LOAD TAPE FILE   
                      000006  SWCHAN BOOL    6             KEY CODE TO GO FROM 1 OR 2 TO 2 OR 1 CHANS.
                      000007  LSREEL BOOL    7             KEY CODE TO INDICATE LAST REEL OF LOAD FILE
                      000010  CHREEL BOOL    10            KEY CODE TO CORRECT REEL ORDER ERROR 
                       77777  NEWCOM EQU     -1            TOP OF MEMORY
                      077461  OLDCOM BOOL    77461         OLD TOP OF COMMON  
                       77462  COMRLC EQU     OLDCOM-NEWCOM RELOCATION FACTOR  
                       77777         COMMON  COMRLC        RELOCATE COMMON    
                       01554  UF     EQU     32767/2-DEMKEY/2 LENGTH OF USER LIST   
                       77777  UFL    COMMON  2*UF          USER FILE LIST  (1ST PARTS OF FILE NAMES)  
                       74446         COMMON  1             INSERT DUMMY IF NECESSARY
                       74445         COMMON  1             DEMKEY CELL IN NON-CTSS VERSION
                       74445  KEYVAL COMMON  1  
                       74444  ABANTP COMMON  1             ABANDON TAPE FILE INDICATOR    
1            LOAD SECONDARY STORAGE (TIME-SHARING VERSION)...M.J.BAILEY,2/1/65   06/01/70 1347.6 PAGE 8     
                  
                       74443  NOCHAN COMMON  1             NO. OF CHANNELS BEING READ (1 OR 2)  
                       74442  DU     COMMON  1             PROBLEM NO. OF DUMP/LOAD PACKAGE     
                       74441  DP     COMMON  1             PROGRAMMER NO. OF DITTO. 
                       74440  LFNA   COMMON  1             LOAD TAPE FILE NAME (PART 1)   
                       74437  LFNB   COMMON  1              ,,   ,,   ,,   ,,  (PART 2)   
                       74423         COMMON  11            DUMPED FILE'S PREAMBLE FROM DUMP TAPE
                       74423  PREAM  COMMON  1             DUMPED FILE'S DUMP TAPE PREAMBLE 1ST WORD  
                       74422  BFNA   COMMON  1             CHANNEL B LOAD TAPE FILE NAME (PART 1)     
                       74421  BFNB   COMMON  1             CHANNEL B LOAD TAPE FILE NAME (PART 2)     
                       74420  AUN    COMMON  1             CHANNEL A UNIT NO. 
                       74417  BUN    COMMON  1             CHANNEL B UNIT NO. 
                       74416  TEOF   COMMON  1             TAPE EOF INDICATOR/WORD COUNT  
                       74412         COMMON  3             LABEL OF TAPE FILE CURRENTLY BEING LOADED  
                       74412  LABEL  COMMON  1             LABEL OF TAPE FILE DITTO.   1ST WORD 
                       74411  X      COMMON  1             TAPE FILE POINTER  
                                     END  
                                              REMOTE SEQUENCES    
      00424  244664224325     ..001  BCI     9,DOUBLE-CHANNEL LOAD IS ASSUMED FOR NEXT LOAD FILE,             .001
                  
1            LOAD SECONDARY STORAGE (TIME-SHARING VERSION)...M.J.BAILEY,2/1/65   06/01/70 1347.6 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       74410 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
        453 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
      74411      X   424
      74441     DP    33,   46,  255,  262,  424
      74442     DU    31,   45,  254,  261,  424
       1554     UF   424
      74420    AUN   107,  143,  166,  175,  206,  217,  232,  424
      74417    BUN   111,  150,  243,  424
        100    LEG   246,  251,  256
        101    LEH    71
        152    LEI   230,  234
        201    LEK   177
        212    LEM   210
        231    LEO   226
        235    LEP   200,  211,  223
        257    LEV   103
        340    LWG   233
        343    MTP   167,  353
      77777    UFL   424
         17   BASE   424
      74422   BFNA    41,  126,  135,  146,  424
      74421   BFNB    43,  127,  136,  147,  424
        276   COMD    54,   56
         72   ELOC    50
        164   LEII   161,  163
        224   LEMA   221
        252   LERA   250
      74440   LFNA    35,  113,  122,  141,  424
      74437   LFNB    37,  114,  123,  142,  424
        353   LMTP   167
        365   MESA   102
        373   MESB   160
        410   MESX    74
        354   MTPB   244,  364
        314   PUMT    67,  323
        341   TEMP   222,  224
      74416   TEOF   424
         15  CLOSE    61
        405  DPCOM   270,  272
         76  ELOC4    72
        424  ..001   156
      74412  LABEL   172,  176,  203,  207,  214,  220,  424
        245  LEIB2   240
        364  LMTPB   244
        323  LPUMT    67
        401  MESEY   104,  162
          7  MOUNT   164,  241
        300  NFTID   171
          2  PAUSE   424
      74423  PREAM   424
         26  RECAP   257
        304  SDTID   202
1            LOAD SECONDARY STORAGE (TIME-SHARING VERSION)...M.J.BAILEY,2/1/65   06/01/70 1347.6 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         21  SLEEP      
        310  UDTID   213
         11  WRFLX    73,  155
          5 ABANKY   424
      74444 ABANTP   154,  424
         25 ASKOPR   101,  157
          5 ATTACH    44,  253,  260
         22 CHFILE   112,  125
          3 CHLDFL   424
         20 CHNCOM   275
        404 CHNWRD    57,  273
         10 CHREEL   424
      77462 COMRLC   424
          1 CTINUE   105,  163,  424
         23 DELFIL   121,  134,  263
      74446 DEMKEY   424
         12 FERRTN    47
          4 GETLSG   235
          0 INITTF   245
      74445 KEYVAL   424
          7 LSREEL   424
          2 LTFILE   252
      77777 NEWCOM   424
      74443 NOCHAN   153,  236,  424
      77461 OLDCOM   424
          1 OPENDF   247
         24 PRNTER    75,  227
         17 SETCLC    60,  274
         16 SETCLS    53,   55,  267,  271
          4 STOPLD   103,  424
          6 SWCHAN   161,  424
          6 TAPFIL   140,  145
          3 TERMTF   100
         13 TILOCK    51
         14 UMOUNT    65,  231
         10 VERIFY   174,  205,  216
        324 WRNGTP   233,  340
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            LOAD MAIN BODY OF DUMP TAPE FILE BETWEEN MFDS...M.J.BAILEY,2/1/65   06/01/70 1349.9 PAGE 1     
                  
                              *           (TIME-SHARING VERSION)  
                              *     
                       00021         ENTRY   LTFILE   
                              *     
                                     EXTERN  OPENDF,RDF,GETLSG    
                                     EXTERN  TRFILE   
                                     EXTERN  ATTACH,BUFFER,FWAIT,FSTATE 
                                     EXTERN  OPEN,CLOSE,WRFILE,SETFIL   
                                     EXTERN  WRFLX,CHFILE   
                              *     
                                     INSERT  BMCRSC   
                              *     
                              *  ZERO-IZE A THROUGH A+X-1   
                              *     
                               CLEAR MACRO   A,X
                                     AXT     X,1
                                     STZ     A+X,1    
                                     TIX     *-1,1,1  
                               CLEAR END  
                              *     
                              *      MOVE X WORDS FROM A ET SEQ TO B ET SEQ   
                              *     
                               MOVE  MACRO   X,A,B    
                                     AXT     X,1
                                     CAL     A+X,1    
                                     SLW     B+X,1    
                                     TIX     *-2,1,1  
                               MOVE  END  
                              *     
                              *  PRINT ONE LINE COMMENT     
                              *     
                              PRLINE MACRO   COMNT,NWC,LOC  
                                     TSX     WRFLX,4  
                                             LOC,,NWC 
                                     RMT  
                               LOC   BCI     NWC,COMNT
                                     RMT  
                              PRLINE END  
                              *     
                              *     
                              *      EXECUTE INST. IN CORE A
                              *     
                              *     
                              EXEC   MACRO   OPC,ADD  
                                     TSX     $GETA,7  
                                     OPC     ADD
                              EXEC   END  
                              *     
                              *      GET KEY SETTING VIA SUPERVISOR, SET ABANTP, NOCHAN IF APPROPRIATE
                              *     
                              GETSIG MACRO
                                     TSX     GETLSG,4 
                              GETSIG END  
                              *     
                              *      TEST WHETHER 2ND TAPE COPY IS NEEDED, IF NOT GO TO SKIP    
                              *     
1            LOAD MAIN BODY OF DUMP TAPE FILE BETWEEN MFDS...M.J.BAILEY,2/1/65   06/01/70 1349.9 PAGE 2     
                  
                              SKIFNB MACRO   SKIP     
                                     CLA     NOCHAN   
                                     SUB     =1 
                                     TZE     SKIP     
                              SKIFNB END  
                              *     
                              *      PRINT AN N-WORD MESSAGE FROM  MESSGE     
                              *     
                              PRM    MACRO   MESSGE,N 
                                     TSX     WRFLX,4  
                                             MESSGE,,N
                              PRM    END  
                              *     
                              *      COMPARE 2 SETS OF N CONSECUTIVE WORDS IN A ETC., AND B ETC. ,    
                              *      AND IF THEY DO NOT ALL MATCH, GO TO NF, OR OTHERWISE CONTINUE.   
                              *     
                              CMPWDS MACRO   N,A,B,NF 
                                     AXT     N,1
                                     CAL     A+N,1    
                                     LAS     B+N,1    
                                     TRA     NF 
                                     TRA     *+2
                                     TRA     NF 
                                     TIX     *-5,1,1  
                              CMPWDS END  
                              *     
                              *      WAIT FOR I/O ON FILE (A,B) TO END, GO TO E IF ERROR OCCURRED     
                              *     
                              WAIT   MACRO   A,B,E    
                                     TSX     FWAIT,4  
                                     PTH     A  
                                     PTH     B  
                                     PTH     E  
                              WAIT   END  
                              *     
                              *      CLOSE THE FILE (A,B)   
                              *     
                              CLOSE  MACRO   A,B
                                     TSX     CLOSE,4  
                                     PTH     A  
                                     PTH     B  
                              CLOSE  END  
                              *     
                              *     
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *      INITIALIZE AND GET PREAMBLE OF UFD FILE OF 1ST USER ON TAPE
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *     
                  
      00000  464725452426     OPENDF
      00001  512426606060     RDF   
      00002  272563436227     GETLSG
      00003  635126314325     TRFILE
      00004  216363212330     ATTACH
      00005  226426262551     BUFFER
      00006  266621316360     FWAIT 
1            LOAD MAIN BODY OF DUMP TAPE FILE BETWEEN MFDS...M.J.BAILEY,2/1/65   06/01/70 1349.9 PAGE 3     
                  
      00007  266263216325     FSTATE
      00010  464725456060     OPEN  
      00011  234346622560     CLOSE 
      00012  665126314325     WRFILE
      00013  622563263143     SETFIL
      00014  665126436760     WRFLX 
      00015  233026314325     CHFILE
      00016  475145632551     PRNTER
                  
                  
      00021  0634 00 1 00077  LTFILE SXA     X1,1     
      00022  0634 00 2 00076         SXA     X2,2     
      00023  0634 00 3 00075         SXA     X3,3     
      00024  0634 00 4 00074         SXA     X4,4     
                              *     
      00025  0600 00 0 00365         STZ     LUSER    
      00026  0600 00 0 00366         STZ     LUSER+1  
                              *     
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
                              *      EXAMINE NEXT DUMPED FILE ON TAPE   
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
                              *     
      00027                   XTA    CLEAR   PREAM,12 
      00027  0774 00 1 00014         AXT     12,1                                                             .001
      00030  0600 00 1 74437         STZ     PREAM+12,1                                                       .001
      00031  2 00001 1 00030         TIX     *-1,1,1                                                          .001
      00032  0074 00 4 00000         TSX     OPENDF,4      INITIALIZE READING FROM NEXT DUMPED FILE   
 TD   00033  3 00000 0 00036         TXH     XTC           (ERROR ADDRESS)    
 TD   00034  3 00000 0 00074         TXH     ABANTF        ABANDON TAPE FILE  
      00035  0020 00 0 00041         TRA     XTD           SKIP TO SEE WHAT KIND OF FILE IT IS  
                              *     
      00036  0520 00 0 74416  XTC    ZET     TEOF     
      00037  0020 00 0 00074         TRA     ABANTF   
      00040  0020 00 0 00300         TRA     ZTQB     
                              *     
      00041  0760 00 0 00166  XTD    SWT     6  
      00042  0020 00 0 00055         TRA     XTDD     
      00043                          MOVE    2,PREAM,SEE    
      00043  0774 00 1 00002         AXT     2,1                                                              .001
      00044 -0500 00 1 74425         CAL     PREAM+2,1                                                        .001
      00045  0602 00 1 00371         SLW     SEE+2,1                                                          .001
      00046  2 00001 1 00044         TIX     *-2,1,1                                                          .001
      00047                          MOVE    2,PREAM+5,SEE+2
      00047  0774 00 1 00002         AXT     2,1                                                              .001
      00050 -0500 00 1 74432         CAL     PREAM+5+2,1                                                      .001
      00051  0602 00 1 00373         SLW     SEE+2+2,1                                                        .001
      00052  2 00001 1 00050         TIX     *-2,1,1                                                          .001
      00053                          PRM     SEE,4    
      00053  0074 00 4 00014         TSX     WRFLX,4                                                          .001
      00054  0 00004 0 00367                 SEE,,4                                                           .001
                              *     
      00055                   XTDD   CMPWDS  3,UFDNAM,PREAM+5,XTE 
      00055  0774 00 1 00003         AXT     3,1                                                              .001
      00056 -0500 00 1 00376         CAL     UFDNAM+3,1                                                       .001
      00057 -0340 00 1 74433         LAS     PREAM+5+3,1                                                      .001
      00060  0020 00 0 00065         TRA     XTE                                                              .001
1            LOAD MAIN BODY OF DUMP TAPE FILE BETWEEN MFDS...M.J.BAILEY,2/1/65   06/01/70 1349.9 PAGE 4     
                  
      00061  0020 00 0 00063         TRA     *+2                                                              .001
      00062  0020 00 0 00065         TRA     XTE                                                              .001
      00063  2 00001 1 00056         TIX     *-5,1,1                                                          .001
      00064  0020 00 0 00027         TRA     XTA
                              *     
      00065                   XTE    CMPWDS  2,MFDNAM,PREAM,ZTA   
      00065  0774 00 1 00002         AXT     2,1                                                              .001
      00066 -0500 00 1 00413         CAL     MFDNAM+2,1                                                       .001
      00067 -0340 00 1 74425         LAS     PREAM+2,1                                                        .001
      00070  0020 00 0 00101         TRA     ZTA                                                              .001
      00071  0020 00 0 00073         TRA     *+2                                                              .001
      00072  0020 00 0 00101         TRA     ZTA                                                              .001
      00073  2 00001 1 00066         TIX     *-5,1,1                                                          .001
                              *     
                              *      RETURN TO CALLER IF NEXT FILE IS MFD FILE
                              *     
                       00074  ABANTF EQU     *  
      00074  0774 00 4 00000  X4     AXT     **,4     
      00075  0774 00 3 00000  X3     AXT     **,3     
      00076  0774 00 2 00000  X2     AXT     **,2     
      00077  0774 00 1 00000  X1     AXT     **,1     
      00100  0020 00 4 00001         TRA     1,4
                              *     
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *      PROCESS REGULAR FILE (NOT MFD OR UFD)    
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *     
      00101  0074 00 4 00002  ZTA    TSX     GETLSG,4 
      00102                          CMPWDS  2,LUSER,PREAM,NOSAME 
      00102  0774 00 1 00002         AXT     2,1                                                              .001
      00103 -0500 00 1 00367         CAL     LUSER+2,1                                                        .001
      00104 -0340 00 1 74425         LAS     PREAM+2,1                                                        .001
      00105  0020 00 0 00112         TRA     NOSAME                                                           .001
      00106  0020 00 0 00110         TRA     *+2                                                              .001
      00107  0020 00 0 00112         TRA     NOSAME                                                           .001
      00110  2 00001 1 00103         TIX     *-5,1,1                                                          .001
      00111  0020 00 0 00122         TRA     SAME     
      00112                   NOSAME MOVE    2,PREAM,LUSER  
      00112  0774 00 1 00002         AXT     2,1                                                              .001
      00113 -0500 00 1 74425         CAL     PREAM+2,1                                                        .001
      00114  0602 00 1 00367         SLW     LUSER+2,1                                                        .001
      00115  2 00001 1 00113         TIX     *-2,1,1                                                          .001
      00116  0074 00 4 00004         TSX     ATTACH,4 
 TD   00117  3 00000 0 74423         TXH     PREAM    
 TD   00120  3 00000 0 74424         TXH     PREAM+1  
 TD   00121  3 00000 0 00027         TXH     XTA
                              *     
      00122  0074 00 4 00007  SAME   TSX     FSTATE,4 
 TD   00123  3 00000 0 74430         TXH     PREAM+5  
 TD   00124  3 00000 0 74431         TXH     PREAM+6  
      00125  3 00007 0 00401         TXH     STAT,,7  
 TD   00126  3 00000 0 00027         TXH     XTA
                              *     
      00127  0500 00 0 00404         CLA     STAT+3   
      00130  0402 00 0 10060         SUB     =3 
      00131  0100 00 0 00027         TZE     XTA
1            LOAD MAIN BODY OF DUMP TAPE FILE BETWEEN MFDS...M.J.BAILEY,2/1/65   06/01/70 1349.9 PAGE 5     
                  
      00132  0500 00 0 00402         CLA     STAT+1   
      00133 -0120 00 0 00027         TMI     XTA
      00134 -0320 00 0 10062         ANA     =O200    
      00135  0100 00 0 00027         TZE     XTA
      00136  0500 00 0 74425         CLA     PREAM+2  
      00137  0402 00 0 00407         SUB     STAT+6   
      00140 -0120 00 0 00027         TMI     XTA
      00141  0500 00 0 00401         CLA     STAT     
      00142 -0100 00 0 00300         TNZ     ZTQB     
      00143 -0520 00 0 74435         NZT     PREAM+10 
      00144  0020 00 0 00322         TRA     CLANUP   
                              *     
      00145 -0754 00 0 00000         ZAC  
      00146  0560 00 0 74434         LDQ     PREAM+9  
      00147 -0763 00 0 00010         LGL     8  
      00150  0602 00 0 00377         SLW     TEMP+1   
                              *     
      00151  0074 00 4 00010  OPAGIN TSX     OPEN,4   
 TD   00152  3 00000 0 01277         TXH     W  
 TD   00153  3 00000 0 74430         TXH     PREAM+5  
 TD   00154  3 00000 0 74431         TXH     PREAM+6  
 TD   00155  3 00000 0 10063         TXH     =-0
 TD   00156  3 00000 0 10063         TXH     =-0
 TD   00157  3 00000 0 00242         TXH     ZTQB1    
 TD   00160  3 00000 0 00410         TXH     ZTCODE   
                              *     
                              *     
      00161  0074 00 4 00005         TSX     BUFFER,4 
 TD   00162  3 00000 0 74430         TXH     PREAM+5       ASSIGN INTERNAL BUFFERS FOR WRITE    
 TD   00163  3 00000 0 74431         TXH     PREAM+6  
      00164  2 00413 0 00414         TIX     DBUF,,LDBUF    
 TD   00165  3 00000 0 00260         TXH     ZTQ           (ERROR)
                              *     
      00166  0774 00 3 00000         AXT     0,3
      00167  0500 00 0 01274         CLA     LTPB     
      00170  0601 00 0 00376         STO     TEMP     
      00171  0774 00 2 00000         AXT     0,2
                              *     
                              *      READ-WRITE LOOP (DOUBLE BUFFERS)   
                              *     
      00172  1 00001 2 00173  ZTM    TXI     *+1,2,1       SWITCH BUFFERS     
      00173 -3 00001 2 00175         TXL     *+2,2,1  
      00174  0774 00 2 00000         AXT     0,2
      00175  0500 00 2 01276         CLA     TBADR+1,2
      00176  0621 00 0 00201         STA     ZTN
      00177  0621 00 0 00216         STA     ZTO
                              *     
      00200  0074 00 4 00001         TSX     RDF,4         READ BUFFER FULL FROM DUMP TAPE
      00201  2 01274 0 00000  ZTN    TIX     **,,LTPB 
 TD   00202  3 00000 0 00262         TXH     ZTQA          READ ERROR   
 TD   00203  3 00000 0 00236         TXH     ZTP           EOF    
 TD   00204  3 00000 0 01300         TXH     EOFCT         EOF WORD COUNT     
 TD   00205  3 00000 0 00221         TXH     ABANCL        ABANDON TAPE FILE  
                              *     
      00206  0074 00 4 00006  ZTNA   TSX     FWAIT,4       WAIT FOR PREVIOUS WRITE TO END 
 TD   00207  3 00000 0 74430         TXH     PREAM+5  
1            LOAD MAIN BODY OF DUMP TAPE FILE BETWEEN MFDS...M.J.BAILEY,2/1/65   06/01/70 1349.9 PAGE 6     
                  
 TD   00210  3 00000 0 74431         TXH     PREAM+6  
 TD   00211  3 00000 0 00260         TXH     ZTQ           ERROR ON PREVIOUS WRITE  
                              *     
      00212  0074 00 4 00012         TSX     WRFILE,4      START WRITING BUFFER FULL ON DISK/DRUM     
 TD   00213  3 00000 0 74430         TXH     PREAM+5  
 TD   00214  3 00000 0 74431         TXH     PREAM+6  
 TD   00215  3 00000 0 10056         TXH     =0 
      00216  2 00376 0 00000  ZTO    TIX     **,,TEMP 
                              *     
      00217 -3 00000 3 00172         TXL     ZTM,3,0       RETURN TO READ MORE IF NO EOF YET    
      00220  0020 00 0 00314         TRA     ZTS           FINISHED, GO CLOSE LOAD FILE   
      00221  0074 00 4 00003  ABANCL TSX     TRFILE,4 
 TD   00222  3 00000 0 74430         TXH     PREAM+5  
 TD   00223  3 00000 0 74431         TXH     PREAM+6  
 TD   00224  3 00000 0 10056         TXH     =0 
      00225  0074 00 4 00011         TSX     CLOSE,4  
 TD   00226  3 00000 0 74430         TXH     PREAM+5  
 TD   00227  3 00000 0 74431         TXH     PREAM+6  
      00230  0074 00 4 00013         TSX     SETFIL,4      RESET DATE/TIME CREATED SO     
 TD   00231  3 00000 0 74430         TXH     PREAM+5       FILE CAN BE LOADED AGAIN LATER.
 TD   00232  3 00000 0 74431         TXH     PREAM+6  
 TD   00233  3 00000 0 74432         TXH     PREAM+7  
 TD   00234  3 00000 0 74433         TXH     PREAM+8  
      00235  0020 00 0 00074         TRA     ABANTF   
                              *     
                              *     
      00236  0534 00 3 01300  ZTP    LXA     EOFCT,3       EOF    
      00237  0634 00 3 00376         SXA     TEMP,3   
      00240  3 00000 3 00206         TXH     ZTNA,3,0      GO WRITE LAST PART BUFFER FULL, IF ANY     
      00241  0020 00 0 00314         TRA     ZTS           NO MORE, GO CLOSE LOAD FILE    
                              *     
                              *      OPEN ERROR TRY CHANGING MODE 
                              *     
      00242  0074 00 4 00002  ZTQB1  TSX     GETLSG,4 
      00243  0500 00 0 00410         CLA     ZTCODE   
      00244  0402 00 0 10061         SUB     =15
      00245 -0100 00 0 00300         TNZ     ZTQB     
      00246  0074 00 4 00015         TSX     CHFILE,4 
      00247  3 00000 0 74430         PTH     PREAM+5  
      00250  3 00000 0 74431         PTH     PREAM+6  
      00251  3 00000 0 10057         PTH     =1 
      00252  3 00000 0 10063         PTH     =-0
      00253  3 00000 0 10063         PTH     =-0
      00254  3 00000 0 00300         PTH     ZTQB     
      00255 -0500 00 0 10057         CAL     =1 
      00256 -0602 00 0 00377         ORS     TEMP+1   
      00257  0020 00 0 00151         TRA     OPAGIN   
                              *     
                              *      PROCESS ERRORS LOADING DUMPED FILE 
                              *     
      00260  0074 00 4 00016  ZTQ    TSX     $PRNTER,4     UNEXPECTED I/O SYSTEM RETURN   
      00261  0020 00 0 00264         TRA     ZTRA     
      00262  0500 00 0 74416  ZTQA   CLA     TEOF     
      00263 -0100 00 0 00221         TNZ     ABANCL        SKIP IF EOF ON TAPE
      00264  0074 00 4 00003  ZTRA   TSX     TRFILE,4      RESET FILE LENGTH. 
      00265  3 00000 0 74430         PTH     PREAM+5  
1            LOAD MAIN BODY OF DUMP TAPE FILE BETWEEN MFDS...M.J.BAILEY,2/1/65   06/01/70 1349.9 PAGE 7     
                  
      00266  3 00000 0 74431         PTH     PREAM+6  
      00267  3 00000 0 10056         PTH     =0 
      00270  0074 00 4 00011         TSX     CLOSE,4       CLOSE FILE.  
 TD   00271  3 00000 0 74430         TXH     PREAM+5  
 TD   00272  3 00000 0 74431         TXH     PREAM+6  
      00273  0074 00 4 00013         TSX     SETFIL,4      NOW RESET DATE/TIME CREATED,   
 TD   00274  3 00000 0 74430         TXH     PREAM+5       SO THAT WE CAN TRY TO LOAD     
 TD   00275  3 00000 0 74431         TXH     PREAM+6       IT AGAIN LATER.   **********   
 TD   00276  3 00000 0 74432         TXH     PREAM+7  
 TD   00277  3 00000 0 74433         TXH     PREAM+8  
      00300                   ZTQB   MOVE    2,PREAM,ERMES+3
      00300  0774 00 1 00002         AXT     2,1                                                              .001
      00301 -0500 00 1 74425         CAL     PREAM+2,1                                                        .001
      00302  0602 00 1 00362         SLW     ERMES+3+2,1                                                      .001
      00303  2 00001 1 00301         TIX     *-2,1,1                                                          .001
      00304                          MOVE    2,PREAM+5,ERMES+5    
      00304  0774 00 1 00002         AXT     2,1                                                              .001
      00305 -0500 00 1 74432         CAL     PREAM+5+2,1                                                      .001
      00306  0602 00 1 00364         SLW     ERMES+5+2,1                                                      .001
      00307  2 00001 1 00305         TIX     *-2,1,1                                                          .001
      00310  0074 00 4 00014         TSX     WRFLX,4  
      00311  0 00010 0 00355                 ERMES,,8 
      00312  0074 00 4 00016         TSX     $PRNTER,4
      00313  0020 00 0 00027         TRA     XTA           GO FOR NEXT DUMPED FILE  
                              *     
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *      SET UFD ENTRY FOR FILE JUST READ, FREE IT FOR USE    
                              *      IF IT WAS ONE DEFINITELY TO BE LOADED    
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *     
      00314  0074 00 4 00006  ZTS    TSX     FWAIT,4       WAIT FOR WRITE TO END    
 TD   00315  3 00000 0 74430         TXH     PREAM+5  
 TD   00316  3 00000 0 74431         TXH     PREAM+6  
      00317  0074 00 4 00011         TSX     CLOSE,4  
 TD   00320  3 00000 0 74430         TXH     PREAM+5  
 TD   00321  3 00000 0 74431         TXH     PREAM+6  
      00322  0074 00 4 00015  CLANUP TSX     CHFILE,4      DE-PROTECT, THEN . . . . .     
 TD   00323  3 00000 0 74430         TXH     PREAM+5  
 TD   00324  3 00000 0 74431         TXH     PREAM+6  
 TD   00325  3 00000 0 00377         TXH     TEMP+1   
 TD   00326  3 00000 0 10063         TXH     =-0
 TD   00327  3 00000 0 10063         TXH     =-0
 TD   00330  3 00000 0 00332         TXH     ZTSA          UNUSUAL CONDITION TRANSFER     
      00331  0020 00 0 00333         TRA     ZTSB          SKIP IF O.K. 
      00332  0074 00 4 00016  ZTSA   TSX     $PRNTER,4     ERROR, PRINT MESSAGE     
                              *     
      00333  0074 00 4 00013  ZTSB   TSX     SETFIL,4      SET ITS DATES, TIME, AUTHOR, AS
 TD   00334  3 00000 0 74430         TXH     PREAM+5       IN PREAMBLE OF DUMPED VERSION JUST READ    
 TD   00335  3 00000 0 74431         TXH     PREAM+6  
 TD   00336  3 00000 0 74432         TXH     PREAM+7  
 TD   00337  3 00000 0 74433         TXH     PREAM+8  
      00340  0760 00 0 00165         SWT     5  
      00341  0020 00 0 00027         TRA     XTA
      00342                          MOVE    2,PREAM,MEST+1 
      00342  0774 00 1 00002         AXT     2,1                                                              .001
      00343 -0500 00 1 74425         CAL     PREAM+2,1                                                        .001
1            LOAD MAIN BODY OF DUMP TAPE FILE BETWEEN MFDS...M.J.BAILEY,2/1/65   06/01/70 1349.9 PAGE 8     
                  
      00344  0602 00 1 01304         SLW     MEST+1+2,1                                                       .001
      00345  2 00001 1 00343         TIX     *-2,1,1                                                          .001
      00346                          MOVE    2,PREAM+5,MEST+3     
      00346  0774 00 1 00002         AXT     2,1                                                              .001
      00347 -0500 00 1 74432         CAL     PREAM+5+2,1                                                      .001
      00350  0602 00 1 01306         SLW     MEST+3+2,1                                                       .001
      00351  2 00001 1 00347         TIX     *-2,1,1                                                          .001
      00352  0074 00 4 00014         TSX     WRFLX,4  
      00353  0 00005 0 01301                 MEST,,5  
      00354  0020 00 0 00027         TRA     XTA           GO LOOK AT NEXT DUMPED FILE    
                              *     
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *     
                              *  -  -  -  -  -  -  -  -  -  -  -  -     
                              *      CONSTANTS, VARIABLES, ETC.   
                              *  -  -  -  -  -  -  -  -  -  -  -  -     
                              *     
      00355  602631432560     ERMES  BCI     8, FILE NOT LOADED   
      00365                   LUSER  BSS     2  
      00367                   SEE    BSS     4  
      00373  646225516026     UFDNAM BCI     3,USER FILE DIRECTRY 
      00376                   TEMP   BSS     3  
      00401                   STAT   BSS     7  
      00410                   ZTCODE BSS     1  
      00411  443326332433     MFDNAM BCI     2,M.F.D.(FILE) 
      00413  0 00000 0 00660  LDBUF  PZE     432
      00414                   DBUF   BSS     432
      01274  0 00000 0 03264  LTPB   PZE     4*432-12 
      01275  0 00000 0 01306  TBADR  PZE     TPB
      01276  0 00000 0 04572         PZE     TPB2     
      01277  666060606060     W      BCI     1,W
      01300  0 00000 0 00000  EOFCT  PZE  
      01301  434621242524     MEST   BCI     5,LOADED 
      01306                   TPB    BSS     4*432-12 
      04572                   TPB2   BSS     4*432-12 
                              *     
                                     INSERT  BCMEQB   
                              *     
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *      COMMON AND EQUIVALENCE FOR SECONDARY STORAGE LOAD    
                              *         (TIME-SHARING VERSION)    
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *     
                      074446  DEMKEY BOOL    74446         CORE A LOCATION FOR DAEMON KEY SETTING     
                              *     
                      000017  BASE   BOOL    17            KEY CODE BASE
                      000001  CTINUE BOOL    1             KEY CODE TO CONTINUE WITH PROGRAM,NO CHANGE
                      000002  PAUSE  BOOL    2             KEY CODE TO WAIT 60 SECS.
                      000003  CHLDFL BOOL    3             KEY CODE TO USE DIFFERENT LOAD FILE  
                      000004  STOPLD BOOL    4             KEY CODE TO STOP LOADING, START DUMPING    
                      000005  ABANKY BOOL    5             KEY CODE TO ABANDON LOAD TAPE FILE   
                      000006  SWCHAN BOOL    6             KEY CODE TO GO FROM 1 OR 2 TO 2 OR 1 CHANS.
                      000007  LSREEL BOOL    7             KEY CODE TO INDICATE LAST REEL OF LOAD FILE
                      000010  CHREEL BOOL    10            KEY CODE TO CORRECT REEL ORDER ERROR 
                       77777  NEWCOM EQU     -1            TOP OF MEMORY
                      077461  OLDCOM BOOL    77461         OLD TOP OF COMMON  
1            LOAD MAIN BODY OF DUMP TAPE FILE BETWEEN MFDS...M.J.BAILEY,2/1/65   06/01/70 1349.9 PAGE 9     
                  
                       77462  COMRLC EQU     OLDCOM-NEWCOM RELOCATION FACTOR  
                       77777         COMMON  COMRLC        RELOCATE COMMON    
                       01554  UF     EQU     32767/2-DEMKEY/2 LENGTH OF USER LIST   
                       77777  UFL    COMMON  2*UF          USER FILE LIST  (1ST PARTS OF FILE NAMES)  
                       74446         COMMON  1             INSERT DUMMY IF NECESSARY
                       74445         COMMON  1             DEMKEY CELL IN NON-CTSS VERSION
                       74445  KEYVAL COMMON  1  
                       74444  ABANTP COMMON  1             ABANDON TAPE FILE INDICATOR    
                       74443  NOCHAN COMMON  1             NO. OF CHANNELS BEING READ (1 OR 2)  
                       74442  DU     COMMON  1             PROBLEM NO. OF DUMP/LOAD PACKAGE     
                       74441  DP     COMMON  1             PROGRAMMER NO. OF DITTO. 
                       74440  LFNA   COMMON  1             LOAD TAPE FILE NAME (PART 1)   
                       74437  LFNB   COMMON  1              ,,   ,,   ,,   ,,  (PART 2)   
                       74423         COMMON  11            DUMPED FILE'S PREAMBLE FROM DUMP TAPE
                       74423  PREAM  COMMON  1             DUMPED FILE'S DUMP TAPE PREAMBLE 1ST WORD  
                       74422  BFNA   COMMON  1             CHANNEL B LOAD TAPE FILE NAME (PART 1)     
                       74421  BFNB   COMMON  1             CHANNEL B LOAD TAPE FILE NAME (PART 2)     
                       74420  AUN    COMMON  1             CHANNEL A UNIT NO. 
                       74417  BUN    COMMON  1             CHANNEL B UNIT NO. 
                       74416  TEOF   COMMON  1             TAPE EOF INDICATOR/WORD COUNT  
                       74412         COMMON  3             LABEL OF TAPE FILE CURRENTLY BEING LOADED  
                       74412  LABEL  COMMON  1             LABEL OF TAPE FILE DITTO.   1ST WORD 
                       74411  X      COMMON  1             TAPE FILE POINTER  
                                     END  
                  
1            LOAD MAIN BODY OF DUMP TAPE FILE BETWEEN MFDS...M.J.BAILEY,2/1/65   06/01/70 1349.9 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       74410 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
      10064 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
       1277      W   152
      74411      X 10056
      74441     DP 10056
      74442     DU 10056
       1554     UF 10056
         77     X1    21
         76     X2    22
         75     X3    23
         74     X4    24
      74420    AUN 10056
      74417    BUN 10056
          1    RDF   200
        367    SEE    45,   51,   54
       1306    TPB  1275
      77777    UFL 10056
         27    XTA    64,  121,  126,  131,  133,  135,  140,  313,  341,  354
         36    XTC    33
         41    XTD    35
         65    XTE    60,   62
        101    ZTA    70,   72
        172    ZTM   217
        201    ZTN   176
        216    ZTO   177
        236    ZTP   203
        260    ZTQ   165,  211
        314    ZTS   220,  241
         17   BASE 10056
      74422   BFNA 10056
      74421   BFNB 10056
        414   DBUF   164
      74440   LFNA 10056
      74437   LFNB 10056
       1274   LTPB   167,  201
       1301   MEST   344,  350,  353
         10   OPEN   151
        122   SAME   111
        401   STAT   125,  127,  132,  137,  141
        376   TEMP   150,  170,  216,  237,  256,  325
      74416   TEOF    36,  262,10056
       4572   TPB2  1276
         55   XTDD    42
        206   ZTNA   240
        262   ZTQA   202
        300   ZTQB    40,  142,  245,  254
        264   ZTRA   261
        332   ZTSA   330
        333   ZTSB   331
         11  CLOSE   225,  270,  317
       1300  EOFCT   204,  236
        355  ERMES   302,  306,  311
1            LOAD MAIN BODY OF DUMP TAPE FILE BETWEEN MFDS...M.J.BAILEY,2/1/65   06/01/70 1349.9 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          6  FWAIT   206,  314
      74412  LABEL 10056
        413  LDBUF   164
        365  LUSER    25,   26,  103,  114
          2  PAUSE 10056
      74423  PREAM    30,   44,   50,   57,   67,  104,  113,  117,  120,  123,  124,  136,  143,  146,  153,  154,  162
                     163,  207,  210,  213,  214,  222,  223,  226,  227,  231,  232,  233,  234,  247,  250,  265,  266
                     271,  272,  274,  275,  276,  277,  301,  305,  315,  316,  320,  321,  323,  324,  334,  335,  336
                     337,  343,  347,10056
       1275  TBADR   175
         14  WRFLX    53,  310,  352
        242  ZTQB1   157
        221 ABANCL   205,  263
          5 ABANKY 10056
         74 ABANTF    34,   37,   74,  235
      74444 ABANTP 10056
          4 ATTACH   116
          5 BUFFER   161
         15 CHFILE   246,  322
          3 CHLDFL 10056
         10 CHREEL 10056
        322 CLANUP   144
      77462 COMRLC 10056
          1 CTINUE 10056
      74446 DEMKEY 10056
          7 FSTATE   122
          2 GETLSG   101,  242
      74445 KEYVAL 10056
          7 LSREEL 10056
         21 LTFILE     0
        411 MFDNAM    66
      77777 NEWCOM 10056
      74443 NOCHAN 10056
        112 NOSAME   105,  107
      77461 OLDCOM 10056
        151 OPAGIN   257
          0 OPENDF    32
         16 PRNTER   260,  312,  332
         13 SETFIL   230,  273,  333
          4 STOPLD 10056
          6 SWCHAN 10056
          3 TRFILE   221,  264
        373 UFDNAM    56
         12 WRFILE   212
        410 ZTCODE   160,  243
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 1     
                  
                              *           (TIME-SHARING VERSION)  
                              *     
                       00013         ENTRY   OPENDF   
                       00166         ENTRY   RDF
                              *     
                                     EXTERN  NLREC,GETLSG   
                                     EXTERN  RDWAIT   
                                     EXTERN  IODIAG,RDFILE,FWAIT  
                                     EXTERN  WRFLX    
                              *     
                                     INSERT  BMCRSC   
                              *     
                              *  ZERO-IZE A THROUGH A+X-1   
                              *     
                               CLEAR MACRO   A,X
                                     AXT     X,1
                                     STZ     A+X,1    
                                     TIX     *-1,1,1  
                               CLEAR END  
                              *     
                              *      MOVE X WORDS FROM A ET SEQ TO B ET SEQ   
                              *     
                               MOVE  MACRO   X,A,B    
                                     AXT     X,1
                                     CAL     A+X,1    
                                     SLW     B+X,1    
                                     TIX     *-2,1,1  
                               MOVE  END  
                              *     
                              *  PRINT ONE LINE COMMENT     
                              *     
                              PRLINE MACRO   COMNT,NWC,LOC  
                                     TSX     WRFLX,4  
                                             LOC,,NWC 
                                     RMT  
                               LOC   BCI     NWC,COMNT
                                     RMT  
                              PRLINE END  
                              *     
                              *     
                              *      EXECUTE INST. IN CORE A
                              *     
                              *     
                              EXEC   MACRO   OPC,ADD  
                                     TSX     $GETA,7  
                                     OPC     ADD
                              EXEC   END  
                              *     
                              *      GET KEY SETTING VIA SUPERVISOR, SET ABANTP, NOCHAN IF APPROPRIATE
                              *     
                              GETSIG MACRO
                                     TSX     GETLSG,4 
                              GETSIG END  
                              *     
                              *      TEST WHETHER 2ND TAPE COPY IS NEEDED, IF NOT GO TO SKIP    
                              *     
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 2     
                  
                              SKIFNB MACRO   SKIP     
                                     CLA     NOCHAN   
                                     SUB     =1 
                                     TZE     SKIP     
                              SKIFNB END  
                              *     
                              *      PRINT AN N-WORD MESSAGE FROM  MESSGE     
                              *     
                              PRM    MACRO   MESSGE,N 
                                     TSX     WRFLX,4  
                                             MESSGE,,N
                              PRM    END  
                              *     
                              *      COMPARE 2 SETS OF N CONSECUTIVE WORDS IN A ETC., AND B ETC. ,    
                              *      AND IF THEY DO NOT ALL MATCH, GO TO NF, OR OTHERWISE CONTINUE.   
                              *     
                              CMPWDS MACRO   N,A,B,NF 
                                     AXT     N,1
                                     CAL     A+N,1    
                                     LAS     B+N,1    
                                     TRA     NF 
                                     TRA     *+2
                                     TRA     NF 
                                     TIX     *-5,1,1  
                              CMPWDS END  
                              *     
                              *      WAIT FOR I/O ON FILE (A,B) TO END, GO TO E IF ERROR OCCURRED     
                              *     
                              WAIT   MACRO   A,B,E    
                                     TSX     FWAIT,4  
                                     PTH     A  
                                     PTH     B  
                                     PTH     E  
                              WAIT   END  
                              *     
                              *      CLOSE THE FILE (A,B)   
                              *     
                              CLOSE  MACRO   A,B
                                     TSX     CLOSE,4  
                                     PTH     A  
                                     PTH     B  
                              CLOSE  END  
                              *     
                              *     
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   
                              *      'OPEN' NEXT DUMPED FILE -- SKIP TO NEXT (READABLE) FILE,   
                              *      READ ITS PREAMBLE, AND ITS FIRST LOGICAL RECORD.     
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
                              *     
                  
      00000  454351252360     NLREC 
      00001  272563436227     GETLSG
      00002  512466213163     RDWAIT
      00003  314624312127     IODIAG
      00004  512426314325     RDFILE
      00005  266621316360     FWAIT 
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 3     
                  
      00006  665126436760     WRFLX 
      00007  475145632551     PRNTER
      00010  636263254626     TSTEOF
                  
                  
      00013  0634 00 1 00156  OPENDF SXA     X1,1     
      00014  0634 00 2 00155         SXA     X2,2     
      00015  0634 00 3 00154         SXA     X3,3     
      00016  0634 00 4 00153         SXA     X4,4     
      00017  0600 00 0 00633         STZ     M  
      00020  0600 00 0 74416         STZ     TEOF     
      00021  0500 00 0 00627         CLA     LEOROP   
      00022  0621 00 0 00526         STA     ABNADD   
      00023  0074 00 4 00001         TSX     GETLSG,4      IS OPERATOR'S TAPE FILE ABANDON
      00024  0500 00 0 74444         CLA     ABANTP        KEY CODE SETTING ON
      00025  0100 00 0 00031         TZE     *+4           SKIP IF NOT  
      00026  0074 00 4 00006         TSX     WRFLX,4  
      00027  0 00010 0 00615                 MESL,,8  
      00030  0020 00 0 00526         TRA     EORABN        IF SO OBEY IT
      00031  0500 00 0 74411         CLA     X  
      00032  0402 00 0 00574         SUB     PHYSRC   
      00033 -0120 00 0 00161         TMI     ERTN          ERROR IF PTR SET BEFORE 1ST FILE,SKIP
      00034  0100 00 0 00122         TZE     OQ            SKIP IF FILE IS 1ST ON LOAD TAPE     
                              *     
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - -     
                              *      FIND START OF NEXT LOGICAL RECORD  
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - -     
                              *     
      00035  0500 00 0 00401         CLA     SOME     
      00036 -0120 00 0 00057         TMI     JUMP     
                              *     
      00037  0500 00 0 74411         CLA     X  
      00040  0400 00 0 00401         ADD     SOME     
      00041  0601 00 0 74411         STO     X  
      00042  0601 00 0 00604         STO     Y  
      00043  0020 00 0 00051         TRA     *+6
                       00044  FL     EQU     *  
      00044  0074 00 4 00001  FLA    TSX     GETLSG,4 
      00045  0500 00 0 74411         CLA     X  
      00046  0400 00 0 00574         ADD     PHYSRC   
      00047  0601 00 0 74411         STO     X             X POINTS AT NEXT PHYSICAL RECORD     
      00050  0601 00 0 00604         STO     Y             SO DOES Y    
                              *     
      00051  0074 00 4 00414  FLAB   TSX     BREAD,4       READ 12 WORDS FROM POSTN Y     
 TD   00052  3 00000 0 00556         TXH     OPREAM   
 TD   00053  3 00000 0 04123         TXH     =12
      00054  0020 00 0 00044         TRA     FLA           UNREAD, MOVE TO NEXT PHYSICAL REC.   
      00055  0020 00 0 00044         TRA     FLA           READ ERROR, MOVE TO NEXT PHYS. REC.  
      00056  0020 00 0 00160         TRA     REOF          REAL EOF EXIT
                              *     
      00057  0500 00 0 00570  JUMP   CLA     OPREAM+10
      00060  0100 00 0 00044         TZE     FL 
      00061  0074 00 4 00000         TSX     NLREC,4  
      00062  3 00000 0 04120         PTH     =0 
      00063  3 00000 0 04120         PTH     =0 
      00064  3 00000 0 00570         PTH     OPREAM+10
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 4     
                  
      00065  3 00000 0 00573         PTH     LTPBF    
      00066  3 00000 0 04123         PTH     =12
      00067  3 00000 0 00574         PTH     PHYSRC   
      00070  3 00000 0 00575         PTH     NFLR     
      00071  3 00000 0 00576         PTH     NLAST    
      00072  0600 00 0 00601         STZ     TEMP     
      00073 -0500 00 0 00571         CAL     OPREAM+11
      00074  0621 00 0 00601         STA     TEMP     
      00075  0771 00 0 00022         ARS     18 
      00076  0621 00 0 00577         STA     IREC     
      00077  0500 00 0 00575         CLA     NFLR     
      00100  0520 00 0 00576         ZET     NLAST    
      00101  0400 00 0 04121         ADD     =1 
      00102  0601 00 0 00600         STO     NREC     
      00103  0402 00 0 00601         SUB     TEMP     
      00104 -0100 00 0 00044         TNZ     FL 
                              *     
      00105  0500 00 0 00577         CLA     IREC          O.K.   
      00106  0402 00 0 00600         SUB     NREC     
      00107  0100 00 0 00111         TZE     *+2
      00110  0120 00 0 00044         TPL     FL            SKIP IF IREC .GR. NREC, PREAMBLE INVALID   
                              *     
      00111  0500 00 0 00577         CLA     IREC          THIS IS A LOGICAL RECORD 
      00112  0402 00 0 04121         SUB     =1 
      00113 -0100 00 0 00044         TNZ     FL            SPACE DOWN TO NEXT FILE IF NOT 1ST LOG.REC.
                              *     
      00114                          MOVE    12,OPREAM,PREAM  THIS IS 1ST LOG.REC. IN FILE,AND WE WISH
      00114  0774 00 1 00014         AXT     12,1                                                             .001
      00115 -0500 00 1 00572         CAL     OPREAM+12,1                                                      .001
      00116  0602 00 1 74437         SLW     PREAM+12,1                                                       .001
      00117  2 00001 1 00115         TIX     *-2,1,1                                                          .001
      00120  0500 00 0 00570         CLA     OPREAM+10
      00121  0020 00 0 00130         TRA     OQC
                              *     
                              * - - - - - - - - - - - - - - - - - - - - - - - - -   
                              *      READ PREAMBLE OF 1ST DUMPED FILE OF LOAD FILE  
                              * - - - - - - - - - - - - - - - - - - - - - - - - -   
                              *     
      00122  0500 00 0 74411  OQ     CLA     X  
      00123  0400 00 0 04121         ADD     =1 
      00124  0601 00 0 74411         STO     X  
      00125  0601 00 0 00604         STO     Y  
      00126  0600 00 0 00401         STZ     SOME     
      00127  0020 00 0 00051         TRA     FLAB     
                              *     
                              *     
      00130  0601 00 0 00625  OQC    STO     DWC
      00131  0500 00 0 74411         CLA     X  
      00132  0400 00 0 04123         ADD     =12
      00133  0601 00 0 00604         STO     Y             Y=X+12 
      00134  0500 00 0 00577         CLA     IREC     
      00135  0402 00 0 00600         SUB     NREC     
      00136 -0120 00 0 00141         TMI     *+3
      00137  0500 00 0 00625         CLA     DWC           (TRAILING ZEROS NOT INCLUDED IF
      00140  0020 00 0 00142         TRA     *+2            NOT A FULL LOGICAL RECORD)    
      00141  0500 00 0 00573         CLA     LTPBF    
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 5     
                  
      00142  0601 00 0 00626         STO     RWC           DATA WORD COUNT FOR LOGICAL RECORD   
      00143  0074 00 4 00001         TSX     GETLSG,4 
      00144  0074 00 4 00365         TSX     GSOME,4  
                              *     
                              *      READ IN THE DATA WORDS OF THE 1ST LOGICAL RECORD OF FILE   
                              *     
                              *     
      00145  0074 00 4 00443         TSX     AREAD,4       READ IN RWC WORDS FROMPOSTN Y (=X+12)
 TD   00146  3 00000 0 00634         TXH     WBF
 TD   00147  3 00000 0 00626         TXH     RWC
      00150  0020 00 0 00161         TRA     ERTN          UNREAD, ERROR, SKIP
      00151  0020 00 0 00161         TRA     ERTN          READ ERROR, SKIP   
      00152  0020 00 0 00160         TRA     REOF          TAPE EOF - SKIP    
                              * - - - - - - - - - - - - - - - - - - - - -     
                              *      RESTORE AND RETURN FROM OPENDF     
                              * - - - - - - - - - - - - - - - - - - - - -     
                              *     
      00153  0774 00 4 00000  X4     AXT     **,4     
      00154  0774 00 3 00000  X3     AXT     **,3     
      00155  0774 00 2 00000  X2     AXT     **,2     
      00156  0774 00 1 00000  X1     AXT     **,1     
      00157  0020 00 4 00003         TRA     3,4           RETURN TO CALLER   
                              *     
      00160 -0625 00 0 74416  REOF   STL     TEOF          TAPE EOF RETURN    
      00161  0534 00 4 00153  ERTN   LXA     X4,4          ERROR RETURN 
      00162  0534 00 3 00154  IX3    LXA     X3,3     
      00163  0534 00 2 00155         LXA     X2,2     
      00164  0534 00 1 00156         LXA     X1,1     
      00165  0020 60 4 00001         TRA*    1,4
                              *     
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - -     
                              *      READ FROM DUMPED FILE ON TAPE N WORDS INTO ANAME ETC.
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - -     
                              *     
      00166  0634 00 1 00270  RDF    SXA     DX1,1    
      00167  0634 00 2 00267         SXA     DX2,2    
      00170  0634 00 3 00266         SXA     DX3,3    
      00171  0634 00 4 00265         SXA     DX4,4    
      00172  0074 00 4 00001         TSX     GETLSG,4 
      00173  0600 00 0 74416         STZ     TEOF     
      00174  0534 00 4 00265         LXA     DX4,4    
      00175  0500 00 4 00001         CLA     1,4
      00176  0621 00 0 00245         STA     RFF           ANAME  
      00177  0771 00 0 00022         ARS     18            ADDRESS OF N 
      00200  0621 00 0 00212         STA     RFA
      00201  0621 00 0 00215         STA     RFB
      00202  0500 00 0 00630         CLA     LEORRD   
      00203  0621 00 0 00526         STA     ABNADD   
      00204  0500 00 0 74444         CLA     ABANTP        TEST FOR OPRTR REQUESTED TAPE FILE ABANDON 
      00205  0100 00 0 00211         TZE     *+4           SKIP IF NOT  
      00206  0074 00 4 00006         TSX     WRFLX,4  
      00207  0 00010 0 00615                 MESL,,8  
      00210  0020 00 0 00526         TRA     EORABN        IF SO, SKIP  
                              *     
                              *      ENSURE THAT ONLY AS MANY WORDS AS ARE    
                              *      LEFT IN THE DUMPED FILE GET READ.  
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 6     
                  
                              *     
      00211  0502 00 0 00625         CLS     DWC           NO. WDS. LEFT IN FILE    
      00212  0400 00 0 00000  RFA    ADD     **            (N)    
      00213  0100 00 0 00220         TZE     RFC
      00214  0120 00 0 00220         TPL     RFC           SKIP IF N LARGER THAN NO. WORDS IN FILE    
      00215  0500 00 0 00000  RFB    CLA     **            (N)    
      00216  0600 60 4 00004         STZ*    4,4           NO END TO FILE THIS TIME 
      00217  0020 00 0 00222         TRA     RFD           SKIP   
      00220  0500 00 0 00625  RFC    CLA     DWC           NO. OF WORDS LEFT IN FILE, IS  
      00221  0601 60 4 00004         STO*    4,4           END (DUMPED) FILE WORD COUNT, AND    
      00222  0734 00 3 00000  RFD    PAX     0,3           NO. OF WORDS TO BE RETURNED BY RDF   
      00223  0601 00 0 00572         STO     NW1
      00224 -0520 00 0 00626         NZT     RWC
      00225  0020 00 0 00274         TRA     RFH           SKIP IF NOTHING LEFT IN BUFFER 
                              *     
                              *      MOVE UP TO A LOGICAL RECORD FULL OF WORDS TO CALLER'S AREA 
                              *     
      00226  0502 00 0 00626  RFDA   CLS     RWC           NO. OF WORDS LAST READ FROM LOGICAL REC.   
      00227  0400 00 0 00572         ADD     NW1
      00230  0120 00 0 00233         TPL     *+3           SKIP IF NO. WORDS TO BE READ IS BIGGER     
      00231  0500 00 0 00572         CLA     NW1           TOTAL NO. WORDS LEFT TO BE READ SMALLER    
      00232  0020 00 0 00234         TRA     *+2           SKIP TO MOVE THAT NO. ONLY     
      00233  0500 00 0 00626         CLA     RWC           ELSE USE NO. OF WORDS IN LOG. REC.   
      00234  0601 00 0 00632         STO     T             SET NO. WORDS TO BE MOVED , = T
      00235  0734 00 1 00000         PAX     0,1
      00236  0400 00 0 00245         ADD     RFF           ANAME+........     
      00237  0621 00 0 00245         STA     RFF           ANAME+........+T   
      00240  0500 00 0 00632         CLA     T             T
      00241  0400 00 0 00631         ADD     LWBF          WBF    
      00242  0400 00 0 00633         ADD     M             M
      00243  0621 00 0 00244         STA     RFE           WBF+M+T
                              *     
      00244  0500 00 1 00000  RFE    CLA     **,1          (WBF+M+T)    
      00245  0601 00 1 00000  RFF    STO     **,1          (ANAME + SUM OF ALL T'S) 
      00246  2 00001 1 00244         TIX     RFE,1,1  
                              *     
                              *      DECREASE NO. WORDS LEFT IN FILE AND IN LOG. REC. BUFFER AND NO.  
                              *      STILL NEEDED TO BE READ
                              *     
      00247  0500 00 0 00625         CLA     DWC
      00250  0402 00 0 00632         SUB     T  
      00251  0601 00 0 00625         STO     DWC
      00252  0500 00 0 00633         CLA     M  
      00253  0400 00 0 00632         ADD     T  
      00254  0601 00 0 00633         STO     M  
      00255  0500 00 0 00626         CLA     RWC
      00256  0402 00 0 00632         SUB     T  
      00257  0601 00 0 00626         STO     RWC
      00260  0500 00 0 00572         CLA     NW1
      00261  0402 00 0 00632         SUB     T  
      00262  0601 00 0 00572         STO     NW1
      00263 -0100 00 0 00274         TNZ     RFH           SKIP IF MORE WORDS NEEDED
                              *     
                              * - - - - - - - - - - - - - - 
                              *      NORMAL RETURN FROM RDF 
                              * - - - - - - - - - - - - - - 
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 7     
                  
                              *     
      00264  0074 00 4 00001         TSX     GETLSG,4 
      00265  0774 00 4 00000  DX4    AXT     **,4     
      00266  0774 00 3 00000  DX3    AXT     **,3     
      00267  0774 00 2 00000  DX2    AXT     **,2     
      00270  0774 00 1 00000  DX1    AXT     **,1     
      00271  0520 60 4 00004         ZET*    4,4           TEST E.O.F. WORD COUNT   
      00272  0020 60 4 00003         TRA*    3,4           EOF (IN DUMPED FILE) RETURN, IF NON-ZERO   
      00273  0020 00 4 00006         TRA     6,4           NORMAL RETURN IF ZERO    
                              *     
                              *      READ IN ANOTHER LOGICAL RECORD FULL
                              *     
      00274  0074 00 4 00001  RFH    TSX     GETLSG,4 
      00275  0500 00 0 00577         CLA     IREC     
      00276  0400 00 0 04121         ADD     =1 
      00277  0601 00 0 00577         STO     IREC          INDEX OF NEXT LOGICAL RECORD   
      00300  0402 00 0 00600         SUB     NREC          LAST LOG. RE. NO.  
      00301 -0120 00 0 00304         TMI     *+3           SKIP IF NOT LAST LOG. REC.     
      00302  0500 00 0 00625         CLA     DWC           LAST ONE, GET NO. WORDS LEFT IN FILE 
      00303  0020 00 0 00305         TRA     *+2           SKIP   
      00304  0500 00 0 00573         CLA     LTPBF         NOT LAST, GET SIZE OF A LOG. REC.    
      00305  0601 00 0 00626         STO     RWC           FOR NO. OF DATA WORDS TO BE READ     
      00306  0600 00 0 00633         STZ     M  
      00307  0074 00 4 00365         TSX     GSOME,4  
                              *     
      00310  0500 00 0 74411  RFHA   CLA     X  
      00311  0400 00 0 00603         ADD     LLR
      00312  0601 00 0 00604         STO     Y             MOVE Y TO START OF NEXT LOG. REC.    
      00313  0601 00 0 74411         STO     X  
                              *     
      00314                          MOVE    12,OPREAM,PRPR 
      00314  0774 00 1 00014         AXT     12,1                                                             .001
      00315 -0500 00 1 00572         CAL     OPREAM+12,1                                                      .001
      00316  0602 00 1 00556         SLW     PRPR+12,1                                                        .001
      00317  2 00001 1 00315         TIX     *-2,1,1                                                          .001
      00320  0074 00 4 00414         TSX     BREAD,4       READ PREAMBLE OF NEXT LOG. REC.
 TD   00321  3 00000 0 00556         TXH     OPREAM        AFTER MOVING 2ND COPY DOWN     
 TD   00322  3 00000 0 04123         TXH     =12           TO X, AND SETTING X=Y.   
      00323  0020 00 0 00357         TRA     DIX4          NOTHING READ 
      00324  0020 00 0 00357         TRA     DIX4          READ ERROR   
      00325  0020 00 0 00356         TRA     DIX47         TAPE EOF     
                              *     
      00326                          CMPWDS  11,OPREAM,PRPR,BADFIL
      00326  0774 00 1 00013         AXT     11,1                                                             .001
      00327 -0500 00 1 00571         CAL     OPREAM+11,1                                                      .001
      00330 -0340 00 1 00555         LAS     PRPR+11,1                                                        .001
      00331  0020 00 0 00352         TRA     BADFIL                                                           .001
      00332  0020 00 0 00334         TRA     *+2                                                              .001
      00333  0020 00 0 00352         TRA     BADFIL                                                           .001
      00334  2 00001 1 00327         TIX     *-5,1,1                                                          .001
                              *     
      00335  0500 00 0 00571         CLA     OPREAM+11
      00336  0402 00 0 00555         SUB     PRPR+11  
      00337  0100 00 0 00310         TZE     RFHA          IGNORE LOG.REC. IF SAME NO. AS LAST  
                              *     
      00340  0500 00 0 74411  RFI    CLA     X  
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 8     
                  
      00341  0400 00 0 04123         ADD     =12
      00342  0601 00 0 00604         STO     Y             Y=X+12 
                              *     
      00343  0074 00 4 00443         TSX     AREAD,4       READ IN RWC DATA WORDS FROM    
 TD   00344  3 00000 0 00634         TXH     WBF           POSTN. Y = X+12 OF TAPE FILE   
 TD   00345  3 00000 0 00626         TXH     RWC
      00346  0020 00 0 00357         TRA     DIX4     
      00347  0020 00 0 00357         TRA     DIX4     
      00350  0020 00 0 00356         TRA     DIX47    
                              *     
      00351  0020 00 0 00226         TRA     RFDA          RETURN TO MOVE WORDS FROM BUFFER     
                              *     
      00352  0500 00 0 00401  BADFIL CLA     SOME     
      00353 -0760 00 0 00003         SSM  
      00354  0601 00 0 00401         STO     SOME     
      00355  0020 00 0 00357         TRA     DIX4     
                              *     
                              *      ERROR RETURN FROM RDF  
                              *     
      00356 -0625 00 0 74416  DIX47  STL     TEOF     
      00357  0074 00 4 00001  DIX4   TSX     GETLSG,4 
      00360  0534 00 4 00265         LXA     DX4,4    
      00361  0534 00 3 00266  DIX3   LXA     DX3,3    
      00362  0534 00 2 00267         LXA     DX2,2    
      00363  0534 00 1 00270         LXA     DX1,1    
      00364  0020 60 4 00002         TRA*    2,4
                              *     
      00365  0774 00 1 00001  GSOME  AXT     1,1
      00366  0500 00 0 00626         CLA     RWC
      00367  0400 00 0 04123         ADD     =12
      00370  0402 00 0 04124         SUB     =432     
      00371 -0120 00 0 00374         TMI     *+3
      00372  0100 00 0 00374         TZE     *+2
      00373  1 00001 1 00370         TXI     *-3,1,1  
      00374  0754 00 1 00000         PXA     ,1 
      00375  0131 00 0 00000         XCA  
      00376  0200 00 0 04124         MPY     =432     
      00377 -0600 00 0 00401         STQ     SOME     
      00400  0020 00 4 00001         TRA     1,4
                              *     
      00401  0 00000 0 00000  SOME   PZE  
                              *     
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -     
                              *      BASIC READ - SKIP 2ND COPY DOWN TO X, SET X=Y, READ FROM MAIN    
                              *       COPY, POSITION Y, INTO (1,4), A NO. OF WORDS GIVEN BY (2,4).    
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -     
                              *     
      00402  0634 00 4 00410  CHERR  SXA     CH4,4    
      00403  0074 00 4 00003         TSX     IODIAG,4 
      00404  3 00007 0 00533         TXH     ERAY,,7  
      00405 -0500 00 0 00536         CAL     ERAY+3   
      00406  0402 00 0 04122         SUB     =6 
      00407  0100 00 0 00412         TZE     ANYEOF   
      00410  0774 00 4 00000  CH4    AXT     **,4     
      00411  0020 00 4 00002         TRA     2,4
      00412  0534 00 4 00410  ANYEOF LXA     CH4,4    
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 9     
                  
      00413  0020 60 4 00001         TRA*    1,4
                              *     
                              *     
      00414  0634 00 4 00504  BREAD  SXA     BRX4,4   
      00415  0500 00 4 00001         CLA     1,4
      00416  0621 00 0 00455         STA     BRE
      00417  0621 00 0 00500         STA     BRI
      00420  0500 60 4 00002         CLA*    2,4
      00421  0601 00 0 00605         STO     NWORDS   
      00422                          SKIFNB  AREADA        SKIP IF NO 2ND TAPE COPY 
      00422  0500 00 0 74443         CLA     NOCHAN                                                           .001
      00423  0402 00 0 04121         SUB     =1                                                               .001
      00424  0100 00 0 00451         TZE     AREADA                                                           .001
                              *     
      00425  0074 00 4 00004         TSX     RDFILE,4 
      00426  3 00000 0 74422         PTH     BFNA     
      00427  3 00000 0 74421         PTH     BFNB     
      00430  3 00000 0 74411         PTH     X  
      00431  3 00001 0 00601         PTH     TEMP,,1  
      00432  3 00000 0 00515         PTH     BRM
      00433  3 00000 0 00601         PTH     TEMP     
      00434  3 00000 0 00436         PTH     BRB
      00435  0020 00 0 00451         TRA     AREADA   
                              *     
      00436  0074 00 4 00402  BRB    TSX     CHERR,4  
 TD   00437  3 00000 0 00515         TXH     BRM
      00440                          PRM     MESK,7   
      00440  0074 00 4 00006         TSX     WRFLX,4                                                          .001
      00441  0 00007 0 00606                 MESK,,7                                                          .001
      00442  0020 00 0 00451         TRA     AREADA   
                              *     
                              *      READ FROM MAIN COPY, POSITION Y, INTO (1,4) ET SEQ, (2,4) WORDS  
                              *     
      00443  0634 00 4 00504  AREAD  SXA     BRX4,4   
      00444  0500 00 4 00001         CLA     1,4
      00445  0621 00 0 00455         STA     BRE
      00446  0621 00 0 00500         STA     BRI
      00447  0500 60 4 00002         CLA*    2,4
      00450  0601 00 0 00605         STO     NWORDS   
      00451  0074 00 4 00002  AREADA TSX     RDWAIT,4 
 TD   00452  3 00000 0 74440         TXH     LFNA     
 TD   00453  3 00000 0 74437         TXH     LFNB     
 TD   00454  3 00000 0 00604         TXH     Y  
      00455  2 00605 0 00000  BRE    TIX     **,,NWORDS     
 TD   00456  3 00000 0 00515         TXH     BRM
 TD   00457  3 00000 0 74416         TXH     TEOF     
 TD   00460  3 00000 0 00463         TXH     BRF
      00461  0074 00 4 00001         TSX     GETLSG,4 
      00462  0020 00 0 00504         TRA     BRX4     
                              *     
      00463  0074 00 4 00402  BRF    TSX     CHERR,4  
 TD   00464  3 00000 0 00515         TXH     BRM
                              *     
                              *      ERROR, TRY TO READ FROM SECONDARY COPY INSTEAD OF MAIN ONE 
                              *     
      00465                          SKIFNB  BRK           SKIP IF NO 2ND TAPE COPY 
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 10    
                  
      00465  0500 00 0 74443         CLA     NOCHAN                                                           .001
      00466  0402 00 0 04121         SUB     =1                                                               .001
      00467  0100 00 0 00510         TZE     BRK                                                              .001
      00470  0074 00 4 00005         TSX     FWAIT,4       WAIT ON I/O. 
 TD   00471  3 00000 0 74422         TXH     BFNA     
 TD   00472  3 00000 0 74421         TXH     BFNB     
 TD   00473  3 00000 0 00474         TXH     *+1
      00474  0074 00 4 00002         TSX     RDWAIT,4 
 TD   00475  3 00000 0 74422         TXH     BFNA     
 TD   00476  3 00000 0 74421         TXH     BFNB     
 TD   00477  3 00000 0 00604         TXH     Y  
      00500  2 00605 0 00000  BRI    TIX     **,,NWORDS     
 TD   00501  3 00000 0 00515         TXH     BRM
 TD   00502  3 00000 0 74416         TXH     TEOF     
 TD   00503  3 00000 0 00506         TXH     BRJ
      00504  0774 00 4 00000  BRX4   AXT     **,4     
      00505  0020 00 4 00006         TRA     6,4
                              *     
      00506  0074 00 4 00402  BRJ    TSX     CHERR,4  
 TD   00507  3 00000 0 00515         TXH     BRM
      00510  0074 00 4 00007  BRK    TSX     $PRNTER,4
      00511  0534 00 4 00504         LXA     BRX4,4   
      00512  0020 00 4 00004         TRA     4,4
                              *     
      00513  0534 00 4 00504  BRLA   LXA     BRX4,4   
      00514  0020 00 4 00005         TRA     5,4
                              *     
      00515  0074 00 4 00010  BRM    TSX     $TSTEOF,4     END OF REEL  
      00516  0020 00 0 00526         TRA     ABNADD        ABANDON TAPE FILE  
      00517  0020 00 0 00521         TRA     *+2           ERROR  
      00520  0020 00 0 00513         TRA     BRLA          END OF FILE (LAST REEL)  
      00521  0500 00 0 00574         CLA     PHYSRC        END OF REEL, REELS CHANGED     
      00522  0400 00 0 04121         ADD     =1 
      00523  0601 00 0 74411         STO     X  
      00524  0601 00 0 00604         STO     Y  
      00525  0020 00 0 00451         TRA     AREADA   
                              *     
                       00526  EORABN EQU     *  
      00526  0020 00 0 00000  ABNADD TRA     **            (OPENDF OR RDF RETURN)   
                              *     
      00527  0534 00 4 00153  EORAB1 LXA     X4,4          OPENDF RETURN
      00530  1 77777 4 00162         TXI     IX3,4,-1      GO RETURN VIA (2,4)
                              *     
      00531  0534 00 4 00265  EORAB2 LXA     DX4,4         RDF RETURN   
      00532  1 77775 4 00361         TXI     DIX3,4,-3     GO RETURN VIA (5,4)
                              *     
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - - -   
                              *      CONSTANTS, VARIABLES, ETC.   
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - - -   
                              *     
      00533                   ERAY   BSS     7  
      00542                   PRPR   BSS     12 
      00556                   OPREAM BSS     12 
      00572  0 00000 0 00000  NW1    PZE  
      00573  0 00000 0 03264  LTPBF  PZE     4*432-12 
      00574  0 00000 0 00660  PHYSRC PZE     432
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 11    
                  
      00575  0 00000 0 00000  NFLR   PZE  
      00576  0 00000 0 00000  NLAST  PZE  
      00577  0 00000 0 00000  IREC   PZE  
      00600  0 00000 0 00000  NREC   PZE  
      00601                   TEMP   BSS     2  
      00603  0 00000 0 03300  LLR    PZE     4*432    
      00604  0 00000 0 00000  Y      PZE  
      00605  0 00000 0 00000  NWORDS PZE  
      00606  606225234645     MESK   BCI     7, SECONDARY COPY NOT MOVED DOWN THIS TIME.  
      00615  606321472560     MESL   BCI     8, TAPE FILE WILL BE ABANDONED, PUT KEY UP AGAIN.  
      00625  0 00000 0 00000  DWC    PZE  
      00626  0 00000 0 00000  RWC    PZE  
      00627  0 00000 0 00527  LEOROP PZE     EORAB1   
      00630  0 00000 0 00531  LEORRD PZE     EORAB2   
      00631  0 00000 0 00634  LWBF   PZE     WBF
      00632  0 00000 0 00000  T      PZE  
      00633  0 00000 0 00000  M      PZE  
      00634                   WBF    BSS     4*432-12 
                                     INSERT  BCMEQB   
                              *     
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *      COMMON AND EQUIVALENCE FOR SECONDARY STORAGE LOAD    
                              *         (TIME-SHARING VERSION)    
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *     
                      074446  DEMKEY BOOL    74446         CORE A LOCATION FOR DAEMON KEY SETTING     
                              *     
                      000017  BASE   BOOL    17            KEY CODE BASE
                      000001  CTINUE BOOL    1             KEY CODE TO CONTINUE WITH PROGRAM,NO CHANGE
                      000002  PAUSE  BOOL    2             KEY CODE TO WAIT 60 SECS.
                      000003  CHLDFL BOOL    3             KEY CODE TO USE DIFFERENT LOAD FILE  
                      000004  STOPLD BOOL    4             KEY CODE TO STOP LOADING, START DUMPING    
                      000005  ABANKY BOOL    5             KEY CODE TO ABANDON LOAD TAPE FILE   
                      000006  SWCHAN BOOL    6             KEY CODE TO GO FROM 1 OR 2 TO 2 OR 1 CHANS.
                      000007  LSREEL BOOL    7             KEY CODE TO INDICATE LAST REEL OF LOAD FILE
                      000010  CHREEL BOOL    10            KEY CODE TO CORRECT REEL ORDER ERROR 
                       77777  NEWCOM EQU     -1            TOP OF MEMORY
                      077461  OLDCOM BOOL    77461         OLD TOP OF COMMON  
                       77462  COMRLC EQU     OLDCOM-NEWCOM RELOCATION FACTOR  
                       77777         COMMON  COMRLC        RELOCATE COMMON    
                       01554  UF     EQU     32767/2-DEMKEY/2 LENGTH OF USER LIST   
                       77777  UFL    COMMON  2*UF          USER FILE LIST  (1ST PARTS OF FILE NAMES)  
                       74446         COMMON  1             INSERT DUMMY IF NECESSARY
                       74445         COMMON  1             DEMKEY CELL IN NON-CTSS VERSION
                       74445  KEYVAL COMMON  1  
                       74444  ABANTP COMMON  1             ABANDON TAPE FILE INDICATOR    
                       74443  NOCHAN COMMON  1             NO. OF CHANNELS BEING READ (1 OR 2)  
                       74442  DU     COMMON  1             PROBLEM NO. OF DUMP/LOAD PACKAGE     
                       74441  DP     COMMON  1             PROGRAMMER NO. OF DITTO. 
                       74440  LFNA   COMMON  1             LOAD TAPE FILE NAME (PART 1)   
                       74437  LFNB   COMMON  1              ,,   ,,   ,,   ,,  (PART 2)   
                       74423         COMMON  11            DUMPED FILE'S PREAMBLE FROM DUMP TAPE
                       74423  PREAM  COMMON  1             DUMPED FILE'S DUMP TAPE PREAMBLE 1ST WORD  
                       74422  BFNA   COMMON  1             CHANNEL B LOAD TAPE FILE NAME (PART 1)     
                       74421  BFNB   COMMON  1             CHANNEL B LOAD TAPE FILE NAME (PART 2)     
                       74420  AUN    COMMON  1             CHANNEL A UNIT NO. 
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 12    
                  
                       74417  BUN    COMMON  1             CHANNEL B UNIT NO. 
                       74416  TEOF   COMMON  1             TAPE EOF INDICATOR/WORD COUNT  
                       74412         COMMON  3             LABEL OF TAPE FILE CURRENTLY BEING LOADED  
                       74412  LABEL  COMMON  1             LABEL OF TAPE FILE DITTO.   1ST WORD 
                       74411  X      COMMON  1             TAPE FILE POINTER  
                                     END  
                  
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       74410 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
       4125 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        633      M    17,  242,  252,  254,  306
        632      T   234,  240,  250,  253,  256,  261
      74411      X    31,   37,   41,   45,   47,  122,  124,  131,  310,  313,  340,  430,  523, 4120
        604      Y    42,   50,  125,  133,  312,  342,  454,  477,  524
      74441     DP  4120
      74442     DU  4120
         44     FL    44,   60,  104,  110,  113
        122     OQ    34
       1554     UF  4120
        156     X1    13,  164
        155     X2    14,  163
        154     X3    15,  162
        153     X4    16,  161,  527
      74420    AUN  4120
        436    BRB   434
        455    BRE   416,  445
        463    BRF   460
        500    BRI   417,  446
        506    BRJ   503
        510    BRK   467
        515    BRM   432,  437,  456,  464,  501,  507
      74417    BUN  4120
        410    CH4   402,  412
        625    DWC   130,  137,  211,  220,  247,  251,  302
        270    DX1   166,  363
        267    DX2   167,  362
        266    DX3   170,  361
        265    DX4   171,  174,  360,  531
         44    FLA    54,   55
        162    IX3   530
        603    LLR   311
        572    NW1   223,  227,  231,  260,  262
        130    OQC   121
        166    RDF     0
        212    RFA   200
        215    RFB   201
        220    RFC   213,  214
        222    RFD   217
        244    RFE   243,  246
        245    RFF   176,  236,  237
        274    RFH   225,  263
        340    RFI      
        626    RWC   142,  147,  224,  226,  233,  255,  257,  305,  345,  366
      77777    UFL  4120
        634    WBF   146,  344,  631
         17   BASE  4120
      74422   BFNA   426,  471,  475, 4120
      74421   BFNB   427,  472,  476, 4120
        513   BRLA   520
        504   BRX4   414,  443,  462,  511,  513
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        361   DIX3   532
        357   DIX4   323,  324,  346,  347,  355
        533   ERAY   404,  405
        161   ERTN    33,  150,  151
         51   FLAB   127
        577   IREC    76,  105,  111,  134,  275,  277
         57   JUMP    36
      74440   LFNA   452, 4120
      74437   LFNB   453, 4120
        631   LWBF   241
        606   MESK   441
        615   MESL    27,  207
        575   NFLR    70,   77
        600   NREC   102,  106,  135,  300
        542   PRPR   316,  330,  336
        160   REOF    56,  152
        226   RFDA   351
        310   RFHA   337
        401   SOME    35,   40,  126,  352,  354,  377
        601   TEMP    72,   74,  103,  431,  433
      74416   TEOF    20,  160,  173,  356,  457,  502, 4120
        443  AREAD   145,  343
        414  BREAD    51,  320
        402  CHERR   436,  463,  506
        356  DIX47   325,  350
          5  FWAIT   470
        365  GSOME   144,  307
      74412  LABEL  4120
        573  LTPBF    65,  141,  304
        576  NLAST    71,  100
          0  NLREC    61
          2  PAUSE  4120
      74423  PREAM   116, 4120
          6  WRFLX    26,  206,  440
          5 ABANKY  4120
      74444 ABANTP    24,  204, 4120
        526 ABNADD    22,  203,  516
        412 ANYEOF   407
        451 AREADA   424,  435,  442,  525
        352 BADFIL   331,  333
          3 CHLDFL  4120
         10 CHREEL  4120
      77462 COMRLC  4120
          1 CTINUE  4120
      74446 DEMKEY  4120
        527 EORAB1   627
        531 EORAB2   630
        526 EORABN    30,  210,  526
          1 GETLSG    23,   44,  143,  172,  264,  274,  357,  461
          3 IODIAG   403
      74445 KEYVAL  4120
        627 LEOROP    21
        630 LEORRD   202
          7 LSREEL  4120
      77777 NEWCOM  4120
1       'OPEN' DUMPED FILE/READ N WORDS FROM DUMPED FILE...M.J.BAILEY,1/31/65    06/01/70 1350.3 PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      74443 NOCHAN   422,  465, 4120
        605 NWORDS   421,  450,  455,  500
      77461 OLDCOM  4120
         13 OPENDF     0
        556 OPREAM    52,   57,   64,   73,  115,  120,  315,  321,  327,  335
        574 PHYSRC    32,   46,   67,  521
          7 PRNTER   510
          4 RDFILE   425
          2 RDWAIT   451,  474
          4 STOPLD  4120
          6 SWCHAN  4120
         10 TSTEOF   515
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 1     
                  
                              *           (TIME-SHARING VERSION)  
                              *     
                       00022         ENTRY   INITTF   
                       00403         ENTRY   TERMTF   
                       00437         ENTRY   TSTEOF   
                              *     
                                     EXTERN  GETLSG,IOBDT   
                                     EXTERN  ATTACH   
                                     EXTERN  ATTNAM   
                                     EXTERN  RDWAIT,FWAIT   
                                     EXTERN  VERIFY,BUFFER,OPEN,SLEEP   
                                     EXTERN  MOUNT,UMOUNT,CLOSE,WRFLX   
                              *     
                                     INSERT  BMCRSC   
                              *     
                              *  ZERO-IZE A THROUGH A+X-1   
                              *     
                               CLEAR MACRO   A,X
                                     AXT     X,1
                                     STZ     A+X,1    
                                     TIX     *-1,1,1  
                               CLEAR END  
                              *     
                              *      MOVE X WORDS FROM A ET SEQ TO B ET SEQ   
                              *     
                               MOVE  MACRO   X,A,B    
                                     AXT     X,1
                                     CAL     A+X,1    
                                     SLW     B+X,1    
                                     TIX     *-2,1,1  
                               MOVE  END  
                              *     
                              *  PRINT ONE LINE COMMENT     
                              *     
                              PRLINE MACRO   COMNT,NWC,LOC  
                                     TSX     WRFLX,4  
                                             LOC,,NWC 
                                     RMT  
                               LOC   BCI     NWC,COMNT
                                     RMT  
                              PRLINE END  
                              *     
                              *     
                              *      EXECUTE INST. IN CORE A
                              *     
                              *     
                              EXEC   MACRO   OPC,ADD  
                                     TSX     $GETA,7  
                                     OPC     ADD
                              EXEC   END  
                              *     
                              *      GET KEY SETTING VIA SUPERVISOR, SET ABANTP, NOCHAN IF APPROPRIATE
                              *     
                              GETSIG MACRO
                                     TSX     GETLSG,4 
                              GETSIG END  
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 2     
                  
                              *     
                              *      TEST WHETHER 2ND TAPE COPY IS NEEDED, IF NOT GO TO SKIP    
                              *     
                              SKIFNB MACRO   SKIP     
                                     CLA     NOCHAN   
                                     SUB     =1 
                                     TZE     SKIP     
                              SKIFNB END  
                              *     
                              *      PRINT AN N-WORD MESSAGE FROM  MESSGE     
                              *     
                              PRM    MACRO   MESSGE,N 
                                     TSX     WRFLX,4  
                                             MESSGE,,N
                              PRM    END  
                              *     
                              *      COMPARE 2 SETS OF N CONSECUTIVE WORDS IN A ETC., AND B ETC. ,    
                              *      AND IF THEY DO NOT ALL MATCH, GO TO NF, OR OTHERWISE CONTINUE.   
                              *     
                              CMPWDS MACRO   N,A,B,NF 
                                     AXT     N,1
                                     CAL     A+N,1    
                                     LAS     B+N,1    
                                     TRA     NF 
                                     TRA     *+2
                                     TRA     NF 
                                     TIX     *-5,1,1  
                              CMPWDS END  
                              *     
                              *      WAIT FOR I/O ON FILE (A,B) TO END, GO TO E IF ERROR OCCURRED     
                              *     
                              WAIT   MACRO   A,B,E    
                                     TSX     FWAIT,4  
                                     PTH     A  
                                     PTH     B  
                                     PTH     E  
                              WAIT   END  
                              *     
                              *      CLOSE THE FILE (A,B)   
                              *     
                              CLOSE  MACRO   A,B
                                     TSX     CLOSE,4  
                                     PTH     A  
                                     PTH     B  
                              CLOSE  END  
                              *     
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -     
                              *      INITIATE DUMP TAPE FILE READ (OPEN, AND READ I.D     
                              *       LABELS FROM BOTH COPIES, AND CHECK THEY MATCH)
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -     
                              *     
                  
      00000  272563436227     GETLSG
      00001  314622246360     IOBDT 
      00002  216363212330     ATTACH
      00003  216363452144     ATTNAM
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 3     
                  
      00004  512466213163     RDWAIT
      00005  266621316360     FWAIT 
      00006  652551312670     VERIFY
      00007  226426262551     BUFFER
      00010  464725456060     OPEN  
      00011  624325254760     SLEEP 
      00012  444664456360     MOUNT 
      00013  644446644563     UMOUNT
      00014  234346622560     CLOSE 
      00015  665126436760     WRFLX 
      00016  475145632551     PRNTER
      00017  216242464751     ASKOPR
                  
                  
      00022  0634 00 1 00401  INITTF SXA     X1,1     
      00023  0634 00 2 00400         SXA     X2,2     
      00024  0634 00 3 00377         SXA     X3,3     
      00025  0634 00 4 00376         SXA     X4,4     
      00026  0074 00 4 00000         TSX     GETLSG,4 
      00027                          SKIFNB  IA            SKIP IF ONLY ONE TAPE COPY     
      00027  0500 00 0 74443         CLA     NOCHAN                                                           .001
      00030  0402 00 0 03265         SUB     =1                                                               .001
      00031  0100 00 0 00077         TZE     IA                                                               .001
                              *     
                              *      VERIFY THAT 2ND CHANNEL HAS CORRECT DUPLICATE MOUNTED
                              *     
      00032  0774 00 2 00012         AXT     10,2     
      00033  0074 00 4 00006  CHCKBA TSX     VERIFY,4 
 TD   00034  3 00000 0 74417         TXH     BUN
      00035  3 00004 0 74412         TXH     LABEL,,4 
 TD   00036  3 00000 0 00041         TXH     CHCKBB        ERROR  
 TD   00037  3 00000 0 01014         TXH     ERCODE   
      00040  0020 00 0 00077         TRA     IA            SKIP IF OTHER CHANNEL O.K.     
                              *     
      00041  0074 00 4 00016  CHCKBB TSX     $PRNTER,4
      00042  0500 00 0 01014         CLA     ERCODE   
      00043  0402 00 0 03267         SUB     =7 
      00044 -0100 00 0 00070         TNZ     CHCKBD        SKIP IF NOT INCORRECT-LABEL ERROR    
      00045  2 00002 2 00033         TIX     CHCKBA,2,2    TRY 5 TIMES IF LABEL IS INCORRECT    
                              *     
      00046  0074 00 4 00013  WRONGB TSX     UMOUNT,4      IF STILL WRONG UNMOUNT THIS TAPE     
 TD   00047  3 00000 0 74417         TXH     BUN
      00050  2 01103 0 01067         TIX     WRNGT2,,LWT2   
      00051  0074 00 4 00017  CHCKBC TSX     $ASKOPR,4
      00052  3 00006 0 01035         PTH     MESC,,6  
      00053  3 00001 0 00063         PTH     CONT,,CTINUE   
      00054  3 00006 0 01043         PTH     MESD,,6  
      00055  3 00003 0 00075         PTH     QUITFL,,CHLDFL 
      00056  3 00006 0 01051         PTH     MESE,,6  
      00057  3 00002 0 00060         PTH     REST,,PAUSE    
                              *     
      00060 -0500 00 0 03271  REST   CAL     =45
      00061  0074 00 4 00011         TSX     SLEEP,4  
      00062  0020 00 0 00051         TRA     CHCKBC   
      00063  0074 00 4 00012  CONT   TSX     MOUNT,4       MOUNT ANOTHER ON 2ND CHANNEL   
 TD   00064  3 00000 0 03266         TXH     =2 
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 4     
                  
 TD   00065  3 00000 0 74417         TXH     BUN
      00066  2 01113 0 01104         TIX     RMT2,,LRMT2    
      00067  0020 00 0 00032         TRA     CHCKBA-1      AND RE-VERIFY
                              *     
      00070  2 00001 2 00033  CHCKBD TIX     CHCKBA,2,1    TRY 10 TIMES IF SOME OTHER ERROR     
      00071  0074 00 4 00013         TSX     UMOUNT,4      THEN UNMOUNT THIS TAPE   
 TD   00072  3 00000 0 74417         TXH     BUN
      00073  2 01132 0 01114         TIX     BADT2,,LBT2    
      00074  0020 00 0 00051         TRA     CHCKBC        THEN GO STOP TO SEE WHAT NEXT  
                              *     
                       00075  QUITFL EQU     *             TO ABANDON THIS TAPE FILE,     
      00075  0534 00 4 00376  ABEXT  LXA     X4,4     
      00076  1 00001 4 00377         TXI     X3,4,1        THEN GO EXIT VIA 1,4     
                              *     
                              *      OPEN TAPE FILE 1ST COPY AND READ ITS I.D.
                              *     
      00077  0774 00 2 00012  IA     AXT     10,2     
      00100  0074 00 4 00010  IAA    TSX     OPEN,4   
 TD   00101  3 00000 0 01013         TXH     R  
 TD   00102  3 00000 0 74440         TXH     LFNA     
 TD   00103  3 00000 0 74437         TXH     LFNB     
 TD   00104  3 00000 0 03273         TXH     =-0
 TD   00105  3 00000 0 03273         TXH     =-0
 TD   00106  3 00000 0 00162         TXH     ID            ERROR  
                              *     
      00107  0074 00 4 00007         TSX     BUFFER,4      ASSIGN BUFFERS     
 TD   00110  3 00000 0 74440         TXH     LFNA     
 TD   00111  3 00000 0 74437         TXH     LFNB     
      00112  2 01015 0 01410         TIX     IB1,,LIB 
      00113 -0500 00 0 03265         CAL     =1 
      00114  0602 00 0 74411         SLW     X  
                              *     
      00115  0774 00 3 00066         AXT     RECSIZ/8,3     
      00116  0074 00 4 00004  IB     TSX     RDWAIT,4      READ I.D. RECORD LABEL   
 TD   00117  3 00000 0 74440         TXH     LFNA     
 TD   00120  3 00000 0 74437         TXH     LFNB     
 TD   00121  3 00000 0 74411         TXH     X  
      00122  3 00010 0 02270         TXH     WBF,,8   
 TD   00123  3 00000 0 00200         TXH     IE            EOF, ERROR   
 TD   00124  3 00000 0 74416         TXH     TEOF     
 TD   00125  3 00000 0 00136         TXH     IC 
      00126  0074 00 4 00000         TSX     GETLSG,4 
      00127  0600 00 0 01012         STZ     IDERR         I.D. LABEL READ O.K., SKIP TO DO 2ND COPY  
      00130                          MOVE    8,WBF,TAPEID   
      00130  0774 00 1 00010         AXT     8,1                                                              .001
      00131 -0500 00 1 02300         CAL     WBF+8,1                                                          .001
      00132  0602 00 1 02324         SLW     TAPEID+8,1                                                       .001
      00133  2 00001 1 00131         TIX     *-2,1,1                                                          .001
      00134  0600 00 0 02324         STZ     TAPEID+8 
      00135  0020 00 0 00206         TRA     IG 
                              *     
      00136  0074 00 4 00016  IC     TSX     $PRNTER,4     READ ERROR   
      00137  0500 00 0 74411         CLA     X  
      00140  0400 00 0 03270         ADD     =8 
      00141  0601 00 0 74411         STO     X  
      00142  2 00001 3 00116         TIX     IB,3,1        TRY AGAIN AT NEXT REPETITION OF LABEL
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 5     
                  
      00143                          PRM     MESA,8        I.D. IS UNREAD,    
      00143  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00144  0 00010 0 01020                 MESA,,8                                                          .001
      00145  0074 00 4 00017  BACK   TSX     $ASKOPR,4
      00146  3 00006 0 01035         PTH     MESC,,6  
      00147  3 00001 0 00157         PTH     CONT1,,CTINUE  
      00150  3 00006 0 01043         PTH     MESD,,6  
      00151  3 00003 0 00075         PTH     QUITFL,,CHLDFL 
      00152  3 00006 0 01051         PTH     MESE,,6  
      00153  3 00002 0 00154         PTH     REST1,,PAUSE   
                              *     
      00154 -0500 00 0 03271  REST1  CAL     =45
      00155  0074 00 4 00011         TSX     SLEEP,4  
      00156  0020 00 0 00145         TRA     BACK     
                              *     
      00157  0500 00 0 03265  CONT1  CLA     =1            OR CONTINUE WITHOUT CHECKING I.D.'S  
      00160  0601 00 0 01012         STO     IDERR    
      00161  0020 00 0 00206         TRA     IG 
                              *     
      00162                   ID     PRM     MESB,5        ERROR OPENING FILE 
      00162  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00163  0 00005 0 01030                 MESB,,5                                                          .001
      00164  0074 00 4 00016         TSX     $PRNTER,4
      00165  2 00001 2 00100  IDA    TIX     IAA,2,1       TRY 10 TIMES TO OPEN     
      00166  0074 00 4 00017  BACK1  TSX     $ASKOPR,4
      00167  3 00006 0 01035         PTH     MESC,,6  
      00170  3 00001 0 00077         PTH     IA,,CTINUE     
      00171  3 00006 0 01043         PTH     MESD,,6  
      00172  3 00003 0 00075         PTH     QUITFL,,CHLDFL 
      00173  3 00006 0 01051         PTH     MESE,,6  
      00174  3 00002 0 00175         PTH     REST2,,PAUSE   
                              *     
      00175 -0500 00 0 03271  REST2  CAL     =45
      00176  0074 00 4 00011         TSX     SLEEP,4  
      00177  0020 00 0 00166         TRA     BACK1    
                              *     
      00200                   IE     PRM     MESF,8        EOF IN WRONG PLACE 
      00200  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00201  0 00010 0 01057                 MESF,,8                                                          .001
      00202                          CLOSE   LFNA,LFNB
      00202  0074 00 4 00014         TSX     CLOSE,4                                                          .001
      00203  3 00000 0 74440         PTH     LFNA                                                             .001
      00204  3 00000 0 74437         PTH     LFNB                                                             .001
      00205  0020 00 0 00165         TRA     IDA           TRY TEN TIMES TO NOT GET ONE   
                              *     
                              *     
                              *      OPEN TAPE FILE 2ND COPY, READ ITS I.D. LABEL   
                              *     
      00206                   IG     SKIFNB  IS 
      00206  0500 00 0 74443         CLA     NOCHAN                                                           .001
      00207  0402 00 0 03265         SUB     =1                                                               .001
      00210  0100 00 0 00350         TZE     IS                                                               .001
      00211  0774 00 2 00012         AXT     10,2     
      00212  0074 00 4 00010  IH     TSX     OPEN,4   
 TD   00213  3 00000 0 01013         TXH     R  
 TD   00214  3 00000 0 74422         TXH     BFNA     
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 6     
                  
 TD   00215  3 00000 0 74421         TXH     BFNB     
 TD   00216  3 00000 0 03273         TXH     =-0
 TD   00217  3 00000 0 03273         TXH     =-0
 TD   00220  3 00000 0 00272         TXH     IK            ERROR  
                              *     
      00221  0074 00 4 00007         TSX     BUFFER,4      ASSIGN BUFFER
 TD   00222  3 00000 0 74422         TXH     BFNA     
 TD   00223  3 00000 0 74421         TXH     BFNB     
      00224  2 01015 0 02325         TIX     IB2,,LIB 
      00225 -0500 00 0 03265         CAL     =1 
      00226  0602 00 0 74411         SLW     X  
                              *     
      00227  0774 00 3 00066         AXT     RECSIZ/8,3     
      00230  0074 00 4 00004  II     TSX     RDWAIT,4      READ I.D. RECORD LABEL   
 TD   00231  3 00000 0 74422         TXH     BFNA     
 TD   00232  3 00000 0 74421         TXH     BFNB     
 TD   00233  3 00000 0 74411         TXH     X  
      00234  2 01017 0 02300         TIX     WBF+8,,L8
 TD   00235  3 00000 0 00310         TXH     IM            EOF, ERROR   
 TD   00236  3 00000 0 74416         TXH     TEOF     
 TD   00237  3 00000 0 00243         TXH     IJ 
      00240 -0520 00 0 01012         NZT     IDERR         I.D. READ O.K.     
      00241  0020 00 0 00320         TRA     IO            SKIP TO COMPARE IF BOTH READ   
      00242  0020 00 0 00342         TRA     IR            OR CARRY ON WITH NO CHECK
                              *     
      00243  0074 00 4 00016  IJ     TSX     $PRNTER,4
      00244  0500 00 0 74411         CLA     X  
      00245  0400 00 0 03270         ADD     =8 
      00246  0601 00 0 74411         STO     X  
      00247  2 00001 3 00230         TIX     II,3,1        TRY TO READ AGAIN AT REPETITION OF LABEL   
      00250 -0500 00 0 03275         CAL     =H ON 2N 
      00251  0602 00 0 01022         SLW     MESA+2   
      00252 -0500 00 0 03272         CAL     =HD COPY 
      00253  0602 00 0 01023         SLW     MESA+3   
      00254                          PRM     MESA,8   
      00254  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00255  0 00010 0 01020                 MESA,,8                                                          .001
      00256  0520 00 0 01012         ZET     IDERR    
      00257  0020 00 0 00075         TRA     QUITFL        ABANDON BOTH TAPES IF NO I.D.'S READ 
      00260  0074 00 4 00017  BACK2  TSX     $ASKOPR,4
      00261  3 00006 0 01035         PTH     MESC,,6  
      00262  3 00001 0 00342         PTH     IR,,CTINUE     
      00263  3 00006 0 01043         PTH     MESD,,6  
      00264  3 00003 0 00075         PTH     QUITFL,,CHLDFL 
      00265  3 00006 0 01051         PTH     MESE,,6  
      00266  3 00002 0 00267         PTH     REST3,,PAUSE   
                              *     
      00267 -0500 00 0 03271  REST3  CAL     =45
      00270  0074 00 4 00011         TSX     SLEEP,4  
      00271  0020 00 0 00260         TRA     BACK2    
                              *     
                              *     
      00272                   IK     PRM     MESB,5   
      00272  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00273  0 00005 0 01030                 MESB,,5                                                          .001
      00274  0074 00 4 00016         TSX     $PRNTER,4
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 7     
                  
      00275  2 00001 2 00212  IL     TIX     IH,2,1        TRY 10 TIMES TO OPEN     
      00276  0074 00 4 00017  BACK3  TSX     $ASKOPR,4
      00277  3 00006 0 01035         PTH     MESC,,6  
      00300  3 00001 0 00206         PTH     IG,,CTINUE     
      00301  3 00006 0 01043         PTH     MESD,,6  
      00302  3 00003 0 00075         PTH     QUITFL,,CHLDFL 
      00303  3 00006 0 01051         PTH     MESE,,6  
      00304  3 00002 0 00305         PTH     REST4,,PAUSE   
                              *     
      00305 -0500 00 0 03271  REST4  CAL     =45
      00306  0074 00 4 00011         TSX     SLEEP,4  
      00307  0020 00 0 00276         TRA     BACK3    
                              *     
                              *     
      00310 -0500 00 0 03274  IM     CAL     =H 2ND T 
      00311  0602 00 0 01064         SLW     MESF+5   
      00312                          PRM     MESF,8   
      00312  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00313  0 00010 0 01057                 MESF,,8                                                          .001
      00314                          CLOSE   BFNA,BFNB
      00314  0074 00 4 00014         TSX     CLOSE,4                                                          .001
      00315  3 00000 0 74422         PTH     BFNA                                                             .001
      00316  3 00000 0 74421         PTH     BFNB                                                             .001
      00317  0020 00 0 00275         TRA     IL            GO RE-OPEN,READ AGAIN (10 TIMES)     
                              *     
                              *     
                              *      COMPARE I.D. LABELS ON BOTH COPIES 
                              *     
      00320                   IO     CMPWDS  8,WBF,WBF+8,IP 
      00320  0774 00 1 00010         AXT     8,1                                                              .001
      00321 -0500 00 1 02300         CAL     WBF+8,1                                                          .001
      00322 -0340 00 1 02310         LAS     WBF+8+8,1                                                        .001
      00323  0020 00 0 00330         TRA     IP                                                               .001
      00324  0020 00 0 00326         TRA     *+2                                                              .001
      00325  0020 00 0 00330         TRA     IP                                                               .001
      00326  2 00001 1 00321         TIX     *-5,1,1                                                          .001
      00327  0020 00 0 00337         TRA     IQ            SKIP IF COMPARISON O.K.  
      00330                   IP     CLOSE   LFNA,LFNB     WRONG TAPE ON 2ND CHANNEL
      00330  0074 00 4 00014         TSX     CLOSE,4                                                          .001
      00331  3 00000 0 74440         PTH     LFNA                                                             .001
      00332  3 00000 0 74437         PTH     LFNB                                                             .001
      00333                          CLOSE   BFNA,BFNB
      00333  0074 00 4 00014         TSX     CLOSE,4                                                          .001
      00334  3 00000 0 74422         PTH     BFNA                                                             .001
      00335  3 00000 0 74421         PTH     BFNB                                                             .001
      00336  0020 00 0 00046         TRA     WRONGB        GO REMOUNT AT LEAST 2ND COPY   
                              *     
                              *      PRINT I.D. LABEL AND SET FILE POINTER AT START OF 1ST DUMPED FILE
                              *     
      00337                   IQ     PRM     MESG,9        BOTH LABELS READ O.K.,PRINT MESSAGE  
      00337  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00340  0 00011 0 01152                 MESG,,9                                                          .001
      00341  0020 00 0 00350         TRA     IS            SKIP   
      00342 -0520 00 0 01012  IR     NZT     IDERR         SEE WHICH LABEL WAS READ 
      00343  0020 00 0 00350         TRA     IS            SKIP IF IT WAS 1ST COPY  
      00344                          MOVE    8,WBF+8,WBF   2ND COPY, MOVE IT DOWN   
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 8     
                  
      00344  0774 00 1 00010         AXT     8,1                                                              .001
      00345 -0500 00 1 02310         CAL     WBF+8+8,1                                                        .001
      00346  0602 00 1 02300         SLW     WBF+8,1                                                          .001
      00347  2 00001 1 00345         TIX     *-2,1,1                                                          .001
      00350                   IS     PRM     MESH,7        PRINT MESSAGE
      00350  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00351  0 00007 0 01163                 MESH,,7                                                          .001
      00352                          PRM     WBF,4    
      00352  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00353  0 00004 0 02270                 WBF,,4                                                           .001
      00354  0074 00 4 00000         TSX     GETLSG,4 
      00355 -0500 00 0 02274         CAL     WBF+4    
      00356  0602 00 0 01200         SLW     MESI+6   
      00357 -0500 00 0 02275         CAL     WBF+5    
      00360  0602 00 0 01202         SLW     MESI+8   
      00361                          PRM     MESI,9        PRINT DATE/TIME DUMPING ON IT BEGAN  
      00361  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00362  0 00011 0 01172                 MESI,,9                                                          .001
      00363 -0500 00 0 02277         CAL     WBF+7    
      00364  0100 00 0 00374         TZE     IT            SKIP IF NO END OF DUMP 'DAY'   
      00365  0074 00 4 00001         TSX     IOBDT,4  
      00366  0602 00 0 01210         SLW     MESJ+5   
      00367 -0600 00 0 01212         STQ     MESJ+7   
      00370                          PRM     MESJ,8        PRINT END OF DUMP 'DAY'  
      00370  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00371  0 00010 0 01203                 MESJ,,8                                                          .001
      00372                          PRM     MESK,5   
      00372  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00373  0 00005 0 01213                 MESK,,5                                                          .001
                              *     
      00374  0774 00 1 00660  IT     AXT     RECSIZ,1 
      00375  0634 00 1 74411         SXA     X,1           SET FILE POINTER TO START OF 1ST FILE
                              *     
      00376  0774 00 4 00000  X4     AXT     **,4     
      00377  0774 00 3 00000  X3     AXT     **,3     
      00400  0774 00 2 00000  X2     AXT     **,2     
      00401  0774 00 1 00000  X1     AXT     **,1     
      00402  0020 00 4 00002         TRA     2,4
                              *     
                              * - - - - - - - - - - - - - - - - - - - - -     
                              *      TERMINATE DUMP TAPE FILES    
                              * - - - - - - - - - - - - - - - - - - - - -     
                              *     
      00403  0634 00 4 00435  TERMTF SXA     TX4,4    
      00404  0074 00 4 00000         TSX     GETLSG,4 
      00405                          PRM     MESL,7   
      00405  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00406  0 00007 0 01220                 MESL,,7                                                          .001
      00407  0074 00 4 00005         TSX     FWAIT,4  
 TD   00410  3 00000 0 74440         TXH     LFNA     
 TD   00411  3 00000 0 74437         TXH     LFNB     
 TD   00412  3 00000 0 00413         TXH     *+1
      00413                          CLOSE   LFNA,LFNB
      00413  0074 00 4 00014         TSX     CLOSE,4                                                          .001
      00414  3 00000 0 74440         PTH     LFNA                                                             .001
      00415  3 00000 0 74437         PTH     LFNB                                                             .001
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 9     
                  
 TD   00416  3 00000 0 00417         TXH     *+1
      00417  0074 00 4 00005         TSX     FWAIT,4  
 TD   00420  3 00000 0 74422         TXH     BFNA     
 TD   00421  3 00000 0 74421         TXH     BFNB     
 TD   00422  3 00000 0 00423         TXH     *+1
      00423                          CLOSE   BFNA,BFNB
      00423  0074 00 4 00014         TSX     CLOSE,4                                                          .001
      00424  3 00000 0 74422         PTH     BFNA                                                             .001
      00425  3 00000 0 74421         PTH     BFNB                                                             .001
 TD   00426  3 00000 0 00427         TXH     *+1
      00427  0074 00 4 00013         TSX     UMOUNT,4 
 TD   00430  3 00000 0 74420         TXH     AUN
      00431  2 01141 0 01133         TIX     UMA,,LUMA
      00432  0074 00 4 00013         TSX     UMOUNT,4 
 TD   00433  3 00000 0 74417         TXH     BUN
      00434  2 01151 0 01142         TIX     UMB,,LUMB
      00435  0774 00 4 00000  TX4    AXT     **,4     
      00436  0020 00 4 00001         TRA     1,4
                              *     
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - - -   
                              *      TEST FOR END OF TAPE-FILE, IF NOT CHANGE REELS 
                              * - - - - - - - - - - - - - - - - - - - - - - - - - - - -   
                              *     
      00437  0634 00 1 00401  TSTEOF SXA     X1,1     
      00440  0634 00 2 00400         SXA     X2,2     
      00441  0634 00 3 00377         SXA     X3,3     
      00442  0634 00 4 00376         SXA     X4,4     
      00443                          PRLINE  ( END OF REEL ON RELOAD TAPE FILE.),6  
      00443  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00444  0 00006 0 03205                 ..001,,6                                                         .001
                                     RMT                                                                      .001
                              ..001  BCI     6, END OF REEL ON RELOAD TAPE FILE.                              .001
                                     RMT                                                                      .001
      00445  0074 00 4 00017         TSX     $ASKOPR,4
      00446  3 00010 0 01323         PTH     MESM,,8  
      00447  3 00007 0 00452         PTH     EOTF,,LSREEL   
      00450  3 00010 0 01333         PTH     MESN,,8  
      00451  3 00001 0 00454         PTH     TB1,,CTINUE    
                              *     
      00452  0534 00 4 00376  EOTF   LXA     X4,4          LAST REEL OF TAPE LOAD-FILE    
      00453  1 00001 4 00746         TXI     TV,4,1        GO EXIT VIA 3,4    
                              *     
      00454  0074 00 4 00003  TB1    TSX     ATTNAM,4 
      00455  3 00002 0 01010         PTH     NM,,2    
      00456  0074 00 4 00002         TSX     ATTACH,4 
      00457  3 00000 0 74442         PTH     DU 
      00460  3 00000 0 74441         PTH     DP 
                              *     
                              *     
      00461  0074 00 4 00005  TB     TSX     FWAIT,4       JUST TO CATCH ERRORS.    
 TD   00462  3 00000 0 74440         TXH     LFNA     
 TD   00463  3 00000 0 74437         TXH     LFNB     
 TD   00464  3 00000 0 00465         TXH     *+1
      00465                          CLOSE   LFNA,LFNB     CHANGE REELS 
      00465  0074 00 4 00014         TSX     CLOSE,4                                                          .001
      00466  3 00000 0 74440         PTH     LFNA                                                             .001
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 10    
                  
      00467  3 00000 0 74437         PTH     LFNB                                                             .001
 TD   00470  3 00000 0 00471         TXH     *+1
      00471  0074 00 4 00005         TSX     FWAIT,4  
 TD   00472  3 00000 0 74422         TXH     BFNA     
 TD   00473  3 00000 0 74421         TXH     BFNB     
 TD   00474  3 00000 0 00475         TXH     *+1
      00475                          CLOSE   BFNA,BFNB
      00475  0074 00 4 00014         TSX     CLOSE,4                                                          .001
      00476  3 00000 0 74422         PTH     BFNA                                                             .001
      00477  3 00000 0 74421         PTH     BFNB                                                             .001
 TD   00500  3 00000 0 00501         TXH     *+1
      00501  0074 00 4 00013         TSX     UMOUNT,4      UNMOUNT 'A' REEL   
 TD   00502  3 00000 0 74420         TXH     AUN
      00503  2 01236 0 01227         TIX     UMRA,,LUMRA    
      00504  0074 00 4 00013         TSX     UMOUNT,4 
 TD   00505  3 00000 0 74417         TXH     BUN           UNMOUNT 'B' REEL TOO. ***
      00506  2 01246 0 01237         TIX     UMRB,,LUMRB    
 TD   00507  3 00000 0 00510         TXH     *+1           NULL ERROR RETURN, IN CASE NO B COPY.
                              *     
      00510  0074 00 4 00012  TD     TSX     MOUNT,4       MOUNT NEW 'A' REEL 
 TD   00511  3 00000 0 03265         TXH     =1 
 TD   00512  3 00000 0 74420         TXH     AUN
      00513  2 01257 0 01247         TIX     MRA,,LMRA
      00514  0774 00 2 00003         AXT     3,2
      00515  0074 00 4 00006  TE     TSX     VERIFY,4      CHECK I/O SYSTEM LABEL   
 TD   00516  3 00000 0 74420         TXH     AUN
      00517  2 01016 0 74412         TIX     LABEL,,L4
 TD   00520  3 00000 0 00523         TXH     TF 
 TD   00521  3 00000 0 01014         TXH     ERCODE   
      00522  0020 00 0 00545         TRA     TH            SKIP IF O.K. 
                              *     
      00523  0074 00 4 00016  TF     TSX     $PRNTER,4     VERIFICATION ERROR 
      00524  0500 00 0 01014         CLA     ERCODE   
      00525  0402 00 0 03267         SUB     =7 
      00526  0100 00 0 00530         TZE     TG 
      00527  2 00001 2 00515         TIX     TE,2,1   
      00530  0074 00 4 00013  TG     TSX     UMOUNT,4 
 TD   00531  3 00000 0 74420         TXH     AUN
      00532  2 01305 0 01271         TIX     WRA,,LWRA
      00533  0074 00 4 00017  BACK5  TSX     $ASKOPR,4
      00534  3 00006 0 01035         PTH     MESC,,6  
      00535  3 00001 0 00510         PTH     TD,,CTINUE     
      00536  3 00006 0 01043         PTH     MESD,,6  
      00537  3 00003 0 00075         PTH     ABEXT,,CHLDFL  
      00540  3 00006 0 01051         PTH     MESE,,6  
      00541  3 00002 0 00542         PTH     REST5,,PAUSE   
                              *     
      00542 -0500 00 0 03271  REST5  CAL     =45
      00543  0074 00 4 00011         TSX     SLEEP,4  
      00544  0020 00 0 00533         TRA     BACK5    
                              *     
      00545  0074 00 4 00010  TH     TSX     OPEN,4   
 TD   00546  3 00000 0 01013         TXH     R  
 TD   00547  3 00000 0 74440         TXH     LFNA     
 TD   00550  3 00000 0 74437         TXH     LFNB     
 TD   00551  3 00000 0 03273         TXH     =-0
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 11    
                  
 TD   00552  3 00000 0 03273         TXH     =-0
 TD   00553  3 00000 0 00752         TXH     TW            ERROR  
      00554  0074 00 4 00007         TSX     BUFFER,4 
 TD   00555  3 00000 0 74440         TXH     LFNA     
 TD   00556  3 00000 0 74437         TXH     LFNB     
      00557  2 01015 0 01410         TIX     IB1,,LIB 
                              *     
      00560  0074 00 4 00004         TSX     RDWAIT,4      CHECK DAEMON'S TAPE I.D. 
 TD   00561  3 00000 0 74440         TXH     LFNA     
 TD   00562  3 00000 0 74437         TXH     LFNB     
 TD   00563  3 00000 0 03265         TXH     =1 
      00564  2 01376 0 01377         TIX     IDBF,,L9 
 TD   00565  3 00000 0 00760         TXH     TX            EOF, ERROR   
 TD   00566  3 00000 0 01375         TXH     JK 
 TD   00567  3 00000 0 00752         TXH     TW            ERROR  
                              *     
      00570                          CMPWDS  8,IDBF,TAPEID,THA    
      00570  0774 00 1 00010         AXT     8,1                                                              .001
      00571 -0500 00 1 01407         CAL     IDBF+8,1                                                         .001
      00572 -0340 00 1 02324         LAS     TAPEID+8,1                                                       .001
      00573  0020 00 0 00600         TRA     THA                                                              .001
      00574  0020 00 0 00576         TRA     *+2                                                              .001
      00575  0020 00 0 00600         TRA     THA                                                              .001
      00576  2 00001 1 00571         TIX     *-5,1,1                                                          .001
      00577  0020 00 0 00604         TRA     THB
      00600                   THA    CLOSE   LFNA,LFNB
      00600  0074 00 4 00014         TSX     CLOSE,4                                                          .001
      00601  3 00000 0 74440         PTH     LFNA                                                             .001
      00602  3 00000 0 74437         PTH     LFNB                                                             .001
      00603  0020 00 0 00530         TRA     TG 
                              *     
      00604  0500 00 0 01407  THB    CLA     IDBF+8        O.K., NOW CHECK REEL NO. 
      00605  0402 00 0 03265         SUB     =1 
      00606  0402 00 0 02324         SUB     TAPEID+8 
      00607  0100 00 0 00624         TZE     TJ            SKIP IF REEL ALL O.K.    
      00610                          PRLINE  ( REEL ORDER ERROR ON CHANNEL A.),6    
      00610  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00611  0 00006 0 03213                 ..002,,6                                                         .001
                                     RMT                                                                      .001
                              ..002  BCI     6, REEL ORDER ERROR ON CHANNEL A.                                .001
                                     RMT                                                                      .001
      00612  0074 00 4 00017  TI     TSX     $ASKOPR,4
      00613  3 00011 0 01354         PTH     MESQ,,9  
      00614  3 00001 0 00621         PTH     TJA,,CTINUE    
      00615  3 00010 0 01043         PTH     MESD,,8  
      00616  3 00003 0 00075         PTH     ABEXT,,CHLDFL  
      00617  3 00006 0 01365         PTH     MESR,,6  
      00620  3 00010 0 00461         PTH     TB,,CHREEL     
                              *     
      00621  0500 00 0 01407  TJA    CLA     IDBF+8   
      00622  0601 00 0 02324         STO     TAPEID+8 
      00623  0020 00 0 00627         TRA     TJAX     
                              *     
      00624  0500 00 0 02324  TJ     CLA     TAPEID+8      INCREMENT REEL NO. 
      00625  0400 00 0 03265         ADD     =1 
      00626  0601 00 0 02324         STO     TAPEID+8 
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 12    
                  
      00627                   TJAX   SKIFNB  TU 
      00627  0500 00 0 74443         CLA     NOCHAN                                                           .001
      00630  0402 00 0 03265         SUB     =1                                                               .001
      00631  0100 00 0 00742         TZE     TU                                                               .001
                              *     
                       00632  TK     SYN     *             (MOVED UMOUNT FOR B.COPY UP)   
                              *     
      00632  0074 00 4 00012  TL     TSX     MOUNT,4       MOUNT NEW 'B' REEL 
 TD   00633  3 00000 0 03266         TXH     =2 
 TD   00634  3 00000 0 74417         TXH     BUN
      00635  2 01270 0 01260         TIX     MRB,,LMRB
      00636  0774 00 2 00003         AXT     3,2
      00637  0074 00 4 00006  TM     TSX     VERIFY,4      CHECK I/O SYSTEM LABEL   
 TD   00640  3 00000 0 74417         TXH     BUN
      00641  2 01016 0 74412         TIX     LABEL,,L4
 TD   00642  3 00000 0 00645         TXH     TN 
 TD   00643  3 00000 0 01014         TXH     ERCODE   
      00644  0020 00 0 00667         TRA     TP            SKIP IF O.K. 
                              *     
      00645  0074 00 4 00016  TN     TSX     $PRNTER,4     VERIFICATION ERROR 
      00646  0500 00 0 01014         CLA     ERCODE   
      00647  0402 00 0 03267         SUB     =7 
      00650  0100 00 0 00652         TZE     TO 
      00651  2 00001 2 00637         TIX     TM,2,1   
      00652  0074 00 4 00013  TO     TSX     UMOUNT,4 
 TD   00653  3 00000 0 74417         TXH     BUN
      00654  2 01322 0 01306         TIX     WRB,,LWRB
      00655  0074 00 4 00017  BACK6  TSX     $ASKOPR,4
      00656  3 00006 0 01035         PTH     MESC,,6  
      00657  3 00001 0 00632         PTH     TL,,CTINUE     
      00660  3 00006 0 01043         PTH     MESD,,6  
      00661  3 00003 0 00075         PTH     QUITFL,,CHLDFL 
      00662  3 00006 0 01051         PTH     MESE,,6  
      00663  3 00002 0 00664         PTH     REST6,,PAUSE   
                              *     
      00664 -0500 00 0 03271  REST6  CAL     =45
      00665  0074 00 4 00011         TSX     SLEEP,4  
      00666  0020 00 0 00655         TRA     BACK6    
                              *     
      00667  0074 00 4 00010  TP     TSX     OPEN,4   
 TD   00670  3 00000 0 01013         TXH     R  
 TD   00671  3 00000 0 74422         TXH     BFNA     
 TD   00672  3 00000 0 74421         TXH     BFNB     
 TD   00673  3 00000 0 03273         TXH     =-0
 TD   00674  3 00000 0 03273         TXH     =-0
 TD   00675  3 00000 0 00763         TXH     TY            ERROR  
      00676  0074 00 4 00007         TSX     BUFFER,4 
 TD   00677  3 00000 0 74422         TXH     BFNA     
 TD   00700  3 00000 0 74421         TXH     BFNB     
      00701  2 01015 0 02325         TIX     IB2,,LIB 
                              *     
      00702  0074 00 4 00004         TSX     RDWAIT,4      CHECK DAEMON I.D. LABEL  
 TD   00703  3 00000 0 74422         TXH     BFNA     
 TD   00704  3 00000 0 74421         TXH     BFNB     
 TD   00705  3 00000 0 03265         TXH     =1 
      00706  3 00011 0 01377         TXH     IDBF,,9  
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 13    
                  
 TD   00707  3 00000 0 00771         TXH     TZ            EOF,ERROR    
 TD   00710  3 00000 0 01375         TXH     JK 
 TD   00711  3 00000 0 00763         TXH     TY            ERROR  
      00712                          CMPWDS  8,IDBF,TAPEID,TR     
      00712  0774 00 1 00010         AXT     8,1                                                              .001
      00713 -0500 00 1 01407         CAL     IDBF+8,1                                                         .001
      00714 -0340 00 1 02324         LAS     TAPEID+8,1                                                       .001
      00715  0020 00 0 00722         TRA     TR                                                               .001
      00716  0020 00 0 00720         TRA     *+2                                                              .001
      00717  0020 00 0 00722         TRA     TR                                                               .001
      00720  2 00001 1 00713         TIX     *-5,1,1                                                          .001
      00721  0020 00 0 00726         TRA     TS 
      00722                   TR     CLOSE   BFNA,BFNB
      00722  0074 00 4 00014         TSX     CLOSE,4                                                          .001
      00723  3 00000 0 74422         PTH     BFNA                                                             .001
      00724  3 00000 0 74421         PTH     BFNB                                                             .001
      00725  0020 00 0 00652         TRA     TO 
                              *     
      00726  0500 00 0 01407  TS     CLA     IDBF+8        NOW CHECK REEL NO. 
      00727  0402 00 0 02324         SUB     TAPEID+8 
      00730  0100 00 0 00742         TZE     TU            SKIP IF REEL O.K.  
      00731                          PRLINE  ( POSSIBLE REEL ORDER ERROR ON CHANNEL B.),8 
      00731  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00732  0 00010 0 03221                 ..003,,8                                                         .001
                                     RMT                                                                      .001
                              ..003  BCI     8, POSSIBLE REEL ORDER ERROR ON CHANNEL B.                       .001
                                     RMT                                                                      .001
      00733  0074 00 4 00017  TT     TSX     $ASKOPR,4
      00734  3 00011 0 01354         PTH     MESQ,,9  
      00735  3 00001 0 00742         PTH     TU,,CTINUE     
      00736  3 00010 0 01365         PTH     MESR,,8  
      00737  3 00010 0 00632         PTH     TK,,CHREEL     
      00740  3 00006 0 01043         PTH     MESD,,6  
      00741  3 00003 0 00075         PTH     QUITFL,,CHLDFL 
                              *     
      00742  0074 00 4 00002  TU     TSX     ATTACH,4 
      00743  3 00000 0 01010         PTH     NM 
      00744  3 00000 0 01011         PTH     NM+1     
      00745  0534 00 4 00376         LXA     X4,4     
      00746  0534 00 3 00377  TV     LXA     X3,3     
      00747  0534 00 2 00400         LXA     X2,2     
      00750  0534 00 1 00401         LXA     X1,1     
      00751  0020 00 4 00004         TRA     4,4           EXIT   
                              *     
      00752  0074 00 4 00016  TW     TSX     $PRNTER,4
      00753                          PRLINE  ( ERROR AT START OF NEW REEL ON CHANNEL A.),7
      00753  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00754  0 00007 0 03231                 ..004,,7                                                         .001
                                     RMT                                                                      .001
                              ..004  BCI     7, ERROR AT START OF NEW REEL ON CHANNEL A.                      .001
                                     RMT                                                                      .001
      00755                   TWA    PRM     MESP,9   
      00755  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00756  0 00011 0 01343                 MESP,,9                                                          .001
      00757  0020 00 0 00612         TRA     TI 
                              *     
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 14    
                  
      00760                   TX     PRLINE  ( EOF AT START OF NEW REEL ON CHANNEL A.),7  
      00760  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00761  0 00007 0 03240                 ..005,,7                                                         .001
                                     RMT                                                                      .001
                              ..005  BCI     7, EOF AT START OF NEW REEL ON CHANNEL A.                        .001
                                     RMT                                                                      .001
      00762  0020 00 0 00755         TRA     TWA
                              *     
      00763  0074 00 4 00016  TY     TSX     $PRNTER,4
      00764                          PRLINE  ( ERROR AT START OF NEW REEL ON CHANNEL B.),7
      00764  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00765  0 00007 0 03247                 ..006,,7                                                         .001
                                     RMT                                                                      .001
                              ..006  BCI     7, ERROR AT START OF NEW REEL ON CHANNEL B.                      .001
                                     RMT                                                                      .001
      00766                   TYA    PRM     MESP,9   
      00766  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00767  0 00011 0 01343                 MESP,,9                                                          .001
      00770  0020 00 0 00733         TRA     TT 
                              *     
      00771                   TZ     PRLINE  ( EOF AT START OF NEW REEL ON CHANNEL B.),7  
      00771  0074 00 4 00015         TSX     WRFLX,4                                                          .001
      00772  0 00007 0 03256                 ..007,,7                                                         .001
                                     RMT                                                                      .001
                              ..007  BCI     7, EOF AT START OF NEW REEL ON CHANNEL B.                        .001
                                     RMT                                                                      .001
      00773  0020 00 0 00766         TRA     TYA
                              *     
                              * - - - - - - - - - - - - - - - - - - - - -     
                              *      CONSTANTS AND VARIABLES
                              * - - - - - - - - - - - - - - - - - - - - -     
                              *     
      00774                   PBF    BSS     12 
      01010                   NM     BSS     2  
      01012  0 00000 0 00000  IDERR  PZE  
      01013  516060606060     R      BCI     1,R
      01014  0 00000 0 00000  ERCODE PZE  
      01015  0 00000 0 00660  LIB    PZE     RECSIZ   
      01016  0 00000 0 00004  L4     PZE     4  
      01017  0 00000 0 00010  L8     PZE     8  
      01020  603133243360     MESA   BCI     8, I.D. RECORD ON 1ST COPY OF TAPE FILE IS UNREAD. 
      01030  602551514651     MESB   BCI     5, ERROR OPENING DUMP TAPE FILE. 
      01035  606346602346     MESC   BCI     6, TO CONTINUE WITH THIS LOAD FILE,    
      01043  606346606462     MESD   BCI     6, TO USE DIFFERENT LOAD FILE, OR
      01051  606346606264     MESE   BCI     6, TO SUSPEND LOADING FOR 1 MIN..
      01057  602545246046     MESF   BCI     8, END OF FILE IN WRONG PLACE ON 1ST TAPE COPY.    
      01067  314523465151     WRNGT2 BCI     9,INCORRECT TAPE MOUNTED AS 2ND COPY OF LOAD FILE. 
      01100  604743252162            BCI     3, PLEASE REMOVE IT. 
      01103  0 00000 0 00014  LWT2   PZE     *-WRNGT2 
      01104  604446644563     RMT2   BCI     7, MOUNT ANOTHER TAPE ON THE 2ND CHANNEL.    
      01113  0 00000 0 00007  LRMT2  PZE     *-RMT2   
      01114  600245246023     BADT2  BCI     8, 2ND COPY OF LOAD FILE UNREAD AFTER 10 TRIES TO  
      01124  652551312670            BCI     6,VERIFY ITS I.D.. PLEASE REMOVE IT.   
      01132  0 00000 0 00016  LBT2   PZE     *-BADT2  
      01133  606445444664     UMA    BCI     6, UNMOUNT TAPE FILE ON MAIN CHANNEL.  
      01141  0 00000 0 00006  LUMA   PZE     *-UMA    
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 15    
                  
      01142  606445444664     UMB    BCI     7, UNMOUNT TAPE FILE ON SECONDARY CHANNEL.   
      01151  0 00000 0 00007  LUMB   PZE     *-UMB    
      01152  603133243360     MESG   BCI     9, I.D. LABELS ON BOTH COPIES OF NEW LOAD FILE MATCH O.K.
      01163  602464444760     MESH   BCI     7, DUMP TAPE FILE STARTING TO LOAD IS A
      01172  602464444731     MESI   BCI     9, DUMPING ON THIS TAPE FILE BEGAN AT         ON   
      01203  604546602631     MESJ   BCI     8, NO FILE CREATED LATER THAN           ON   
      01213  603162602464     MESK   BCI     5, IS DUMPED ON THIS TAPE FILE.  
      01220  604346212431     MESL   BCI     7, LOADING FINISHED FROM THIS TAPE FILE
      01227  605125444665     UMRA   BCI     7, REMOVE CHANNEL A REEL OF RELOAD FILE.     
      01236  0 00000 0 00007  LUMRA  PZE     *-UMRA   
      01237  605125444665     UMRB   BCI     7, REMOVE CHANNEL B REEL OF RELOAD FILE.     
      01246  0 00000 0 00007  LUMRB  PZE     *-UMRB   
      01247  604446644563     MRA    BCI     8, MOUNT ANOTHER REEL OF RELOAD FILE ON CHANNEL A  
      01257  0 00000 0 00010  LMRA   PZE     *-MRA    
      01260  604446644563     MRB    BCI     8, MOUNT ANOTHER REEL OF RELOAD FILE ON CHANNEL B  
      01270  0 00000 0 00010  LMRB   PZE     *-MRB    
      01271  606651464527     WRA    BCI     8, WRONG REEL MOUNTED ON CHANNEL A FOR RELOAD, NOT 
      01301  602225434645            BCI     4, BELONGING TO THIS SET.  
      01305  0 00000 0 00014  LWRA   PZE     *-WRA    
      01306  606651464527     WRB    BCI     8, WRONG REEL MOUNTED ON CHANNEL B FOR RELOAD, NOT 
      01316  602225434645            BCI     4, BELONGING TO THIS SET.  
      01322  0 00000 0 00014  LWRB   PZE     *-WRB    
      01323  603126606330     MESM   BCI     8, IF THIS WAS LAST REEL OF THIS RELOAD FILE, OR   
      01333  603126606330     MESN   BCI     8, IF THERE IS ANOTHER REEL TO THIS RELOAD FILE    
      01343  512525436045     MESP   BCI     9,REEL NO. UNCHECKED, FUTURE REEL NO. ERRORS COULD OCCUR 
      01354  606346605125     MESQ   BCI     9, TO RESUME RE-LOADING WITH THIS REEL NEVERTHELESS
      01365  603126607046     MESR   BCI     8, IF YOU WISH TO CHANGE THIS REEL FOR ANOTHER     
      01375  0 00000 0 00000  JK     PZE  
      01376  0 00000 0 00011  L9     PZE     9  
      01377                   IDBF   BSS     9  
                       00660  RECSIZ EQU     432
      01410                   IB1    BSS     432
      02270                   WBF    BSS     20 
      02314                   TAPEID BSS     9  
      02325                   IB2    BSS     432
                              *     
                                     INSERT  BCMEQB   
                              *     
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *      COMMON AND EQUIVALENCE FOR SECONDARY STORAGE LOAD    
                              *         (TIME-SHARING VERSION)    
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *     
                      074446  DEMKEY BOOL    74446         CORE A LOCATION FOR DAEMON KEY SETTING     
                              *     
                      000017  BASE   BOOL    17            KEY CODE BASE
                      000001  CTINUE BOOL    1             KEY CODE TO CONTINUE WITH PROGRAM,NO CHANGE
                      000002  PAUSE  BOOL    2             KEY CODE TO WAIT 60 SECS.
                      000003  CHLDFL BOOL    3             KEY CODE TO USE DIFFERENT LOAD FILE  
                      000004  STOPLD BOOL    4             KEY CODE TO STOP LOADING, START DUMPING    
                      000005  ABANKY BOOL    5             KEY CODE TO ABANDON LOAD TAPE FILE   
                      000006  SWCHAN BOOL    6             KEY CODE TO GO FROM 1 OR 2 TO 2 OR 1 CHANS.
                      000007  LSREEL BOOL    7             KEY CODE TO INDICATE LAST REEL OF LOAD FILE
                      000010  CHREEL BOOL    10            KEY CODE TO CORRECT REEL ORDER ERROR 
                       77777  NEWCOM EQU     -1            TOP OF MEMORY
                      077461  OLDCOM BOOL    77461         OLD TOP OF COMMON  
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 16    
                  
                       77462  COMRLC EQU     OLDCOM-NEWCOM RELOCATION FACTOR  
                       77777         COMMON  COMRLC        RELOCATE COMMON    
                       01554  UF     EQU     32767/2-DEMKEY/2 LENGTH OF USER LIST   
                       77777  UFL    COMMON  2*UF          USER FILE LIST  (1ST PARTS OF FILE NAMES)  
                       74446         COMMON  1             INSERT DUMMY IF NECESSARY
                       74445         COMMON  1             DEMKEY CELL IN NON-CTSS VERSION
                       74445  KEYVAL COMMON  1  
                       74444  ABANTP COMMON  1             ABANDON TAPE FILE INDICATOR    
                       74443  NOCHAN COMMON  1             NO. OF CHANNELS BEING READ (1 OR 2)  
                       74442  DU     COMMON  1             PROBLEM NO. OF DUMP/LOAD PACKAGE     
                       74441  DP     COMMON  1             PROGRAMMER NO. OF DITTO. 
                       74440  LFNA   COMMON  1             LOAD TAPE FILE NAME (PART 1)   
                       74437  LFNB   COMMON  1              ,,   ,,   ,,   ,,  (PART 2)   
                       74423         COMMON  11            DUMPED FILE'S PREAMBLE FROM DUMP TAPE
                       74423  PREAM  COMMON  1             DUMPED FILE'S DUMP TAPE PREAMBLE 1ST WORD  
                       74422  BFNA   COMMON  1             CHANNEL B LOAD TAPE FILE NAME (PART 1)     
                       74421  BFNB   COMMON  1             CHANNEL B LOAD TAPE FILE NAME (PART 2)     
                       74420  AUN    COMMON  1             CHANNEL A UNIT NO. 
                       74417  BUN    COMMON  1             CHANNEL B UNIT NO. 
                       74416  TEOF   COMMON  1             TAPE EOF INDICATOR/WORD COUNT  
                       74412         COMMON  3             LABEL OF TAPE FILE CURRENTLY BEING LOADED  
                       74412  LABEL  COMMON  1             LABEL OF TAPE FILE DITTO.   1ST WORD 
                       74411  X      COMMON  1             TAPE FILE POINTER  
                                     END  
                                              REMOTE SEQUENCES    
      03205  602545246046     ..001  BCI     6, END OF REEL ON RELOAD TAPE FILE.                              .001
      03213  605125254360     ..002  BCI     6, REEL ORDER ERROR ON CHANNEL A.                                .001
      03221  604746626231     ..003  BCI     8, POSSIBLE REEL ORDER ERROR ON CHANNEL B.                       .001
      03231  602551514651     ..004  BCI     7, ERROR AT START OF NEW REEL ON CHANNEL A.                      .001
      03240  602546266021     ..005  BCI     7, EOF AT START OF NEW REEL ON CHANNEL A.                        .001
      03247  602551514651     ..006  BCI     7, ERROR AT START OF NEW REEL ON CHANNEL B.                      .001
      03256  602546266021     ..007  BCI     7, EOF AT START OF NEW REEL ON CHANNEL B.                        .001
                  
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       74410 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
       3276 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
       1013      R   101,  213,  546,  670
      74411      X   114,  121,  137,  141,  226,  233,  244,  246,  375, 3205
      74441     DP   460, 3205
      74442     DU   457, 3205
         77     IA    31,   40,  170
        116     IB   142
        136     IC   125
        162     ID   106
        200     IE   123
        206     IG   135,  161,  300
        212     IH   275
        230     II   247
        243     IJ   237
        272     IK   220
        275     IL   317
        310     IM   235
        320     IO   241
        330     IP   323,  325
        337     IQ   327
        342     IR   242,  262
        350     IS   210,  341,  343
        374     IT   364
       1375     JK   566,  710
       1016     L4   517,  641
       1017     L8   234
       1376     L9   564
       1010     NM   455,  743,  744
        461     TB   620
        510     TD   535
        515     TE   527
        523     TF   520
        530     TG   526,  603
        545     TH   522
        612     TI   757
        624     TJ   607
        632     TK   632,  737
        632     TL   657
        637     TM   651
        645     TN   642
        652     TO   650,  725
        667     TP   644
        722     TR   715,  717
        726     TS   721
        733     TT   770
        742     TU   631,  730,  735
        746     TV   453
        752     TW   553,  567
        760     TX   565
        763     TY   675,  711
        771     TZ   707
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1554     UF  3205
        401     X1    22,  437,  750
        400     X2    23,  440,  747
        377     X3    24,   76,  441,  746
        376     X4    25,   75,  442,  452,  745
      74420    AUN   430,  502,  512,  516,  531, 3205
      74417    BUN    34,   47,   65,   72,  433,  505,  634,  640,  653, 3205
        100    IAA   165
       1410    IB1   112,  557
       2325    IB2   224,  701
        165    IDA   205
       1015    LIB   112,  224,  557,  701
       1247    MRA   513, 1257
       1260    MRB   635, 1270
        774    PBF      
        454    TB1   451
        600    THA   573,  575
        604    THB   577
        621    TJA   614
        755    TWA   762
        435    TX4   403
        766    TYA   773
      77777    UFL  3205
       1133    UMA   431, 1141
       1142    UMB   434, 1151
       2270    WBF   122,  131,  234,  321,  322,  345,  346,  353,  355,  357,  363
       1271    WRA   532, 1305
       1306    WRB   654, 1322
        145   BACK   156
         17   BASE  3205
      74422   BFNA   214,  222,  231,  315,  334,  420,  424,  472,  476,  671,  677,  703,  723, 3205
      74421   BFNB   215,  223,  232,  316,  335,  421,  425,  473,  477,  672,  700,  704,  724, 3205
         63   CONT    53
        452   EOTF   447
       1377   IDBF   564,  571,  604,  621,  706,  713,  726
       1132   LBT2    73
      74440   LFNA   102,  110,  117,  203,  331,  410,  414,  462,  466,  547,  555,  561,  601, 3205
      74437   LFNB   103,  111,  120,  204,  332,  411,  415,  463,  467,  550,  556,  562,  602, 3205
       1257   LMRA   513
       1270   LMRB   635
       1141   LUMA   431
       1151   LUMB   434
       1305   LWRA   532
       1322   LWRB   654
       1103   LWT2    50
       1020   MESA   144,  251,  253,  255
       1030   MESB   163,  273
       1035   MESC    52,  146,  167,  261,  277,  534,  656
       1043   MESD    54,  150,  171,  263,  301,  536,  615,  660,  740
       1051   MESE    56,  152,  173,  265,  303,  540,  662
       1057   MESF   201,  311,  313
       1152   MESG   340
       1163   MESH   351
       1172   MESI   356,  360,  362
       1203   MESJ   366,  367,  371
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1213   MESK   373
       1220   MESL   406
       1323   MESM   446
       1333   MESN   450
       1343   MESP   756,  767
       1354   MESQ   613,  734
       1365   MESR   617,  736
         10   OPEN   100,  212,  545,  667
         60   REST    57
       1104   RMT2    66, 1113
      74416   TEOF   124,  236, 3205
        627   TJAX   623
       1227   UMRA   503, 1236
       1237   UMRB   506, 1246
         75  ABEXT   537,  616
        166  BACK1   177
        260  BACK2   271
        276  BACK3   307
        533  BACK5   544
        655  BACK6   666
       1114  BADT2    73, 1132
         14  CLOSE   202,  314,  330,  333,  413,  423,  465,  475,  600,  722
        157  CONT1   147
          5  FWAIT   407,  417,  461,  471
       1012  IDERR   127,  160,  240,  256,  342
          1  IOBDT   365
       3205  ..001   444
       3213  ..002   611
       3221  ..003   732
       3231  ..004   754
       3240  ..005   761
       3247  ..006   765
       3256  ..007   772
      74412  LABEL    35,  517,  641, 3205
       1113  LRMT2    66
       1236  LUMRA   503
       1246  LUMRB   506
         12  MOUNT    63,  510,  632
          2  PAUSE    57,  153,  174,  266,  304,  541,  663, 3205
      74423  PREAM  3205
        154  REST1   153
        175  REST2   174
        267  REST3   266
        305  REST4   304
        542  REST5   541
        664  REST6   663
         11  SLEEP    61,  155,  176,  270,  306,  543,  665
         15  WRFLX   143,  162,  200,  254,  272,  312,  337,  350,  352,  361,  370,  372,  405,  443,  610,  731,  753
                     755,  760,  764,  766,  771
          5 ABANKY  3205
      74444 ABANTP  3205
         17 ASKOPR    51,  145,  166,  260,  276,  445,  533,  612,  655,  733
          2 ATTACH   456,  742
          3 ATTNAM   454
          7 BUFFER   107,  221,  554,  676
1       INITIATE AND TERMINATE DUMP TAPE FILE READS.....M.J.BAILEY..1/31/65      06/01/70 1350.9 PAGE 4     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         33 CHCKBA    45,   67,   70
         41 CHCKBB    36
         51 CHCKBC    62,   74
         70 CHCKBD    44
          3 CHLDFL    55,  151,  172,  264,  302,  537,  616,  661,  741, 3205
         10 CHREEL   620,  737, 3205
      77462 COMRLC  3205
          1 CTINUE    53,  147,  170,  262,  300,  451,  535,  614,  657,  735, 3205
      74446 DEMKEY  3205
       1014 ERCODE    37,   42,  521,  524,  643,  646
          0 GETLSG    26,  126,  354,  404
         22 INITTF     0
      74445 KEYVAL  3205
          7 LSREEL   447, 3205
      77777 NEWCOM  3205
      74443 NOCHAN    27,  206,  627, 3205
      77461 OLDCOM  3205
         16 PRNTER    41,  136,  164,  243,  274,  523,  645,  752,  763
         75 QUITFL    55,   75,  151,  172,  257,  264,  302,  661,  741
          4 RDWAIT   116,  230,  560,  702
        660 RECSIZ   115,  227,  374, 1015, 1410
          4 STOPLD  3205
          6 SWCHAN  3205
       2314 TAPEID   132,  134,  572,  606,  622,  624,  626,  714,  727
        403 TERMTF     0
        437 TSTEOF     0
         13 UMOUNT    46,   71,  427,  432,  501,  504,  530,  652
          6 VERIFY    33,  515,  637
       1067 WRNGT2    50, 1103
         46 WRONGB   336
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1      M1416 3845  PETER R. BOS ..... GETLSG FOR FOREGROUND RELOADER .....       06/01/70 1356.5 PAGE 1     
                  
                  
                                     PCC     ON 
                                     NOLNK
                       00003         ENTRY   GETLSG        GET OPERATOR SIGNALS (FROM CONSOLE)  
                                     LBL     FGSG     
                                     PCC     OFF
                  
                                     EXTERN  RDCOM,ZEL,BCDEC
                  
                  
                  
        TRANSFER VECTOR 
      00000  512423464460     RDCOM 
      00001  712543606060     ZEL   
      00002  222324252360     BCDEC 
                  
      00003  0634 00 4 00020  GETLSG SXA     GSX4,4        SAVE LINKAGE 
      00004  0074 00 4 00000         TSX     RDCOM,4       PICK UP LINE TYPED, PARSED     
      00005  3 00002 0 74445         PAR     KEYVAL,,2     ..     
      00006  3 00000 0 00020         PAR     GSX4          .. EMPTY RETURN    
      00007  0074 00 4 00002         TSX     BCDEC,4       CONVERT TO DECIMAL 
      00010  3 00000 0 74445         PAR     KEYVAL        ..     
      00011  0601 00 0 74445         STO     KEYVAL        .. PUT AWAY  
      00012  0774 00 4 00002         AXT     TBSIZ,4       KEY TABLE SIZE     
      00013 -0500 00 4 00033         CAL     KEYTB+TBSIZ,4 PICK UP TABLE ENTRY
      00014  0771 00 0 00022         ARS     18            GET KEY CODE 
      00015  0402 00 0 74445         SUB     KEYVAL        IS THIS IT.Q 
      00016  0100 60 4 00033         TZE*    KEYTB+TBSIZ,4 .. YES 
      00017  2 00001 4 00013         TIX     *-4,4,1       ..     
      00020  0774 00 4 00000  GSX4   AXT     -,4           RESTORE X4   
      00021  0020 00 4 00001         TRA     1,4           RETURN 
                  
      00022 -0625 00 0 74444  ABAN   STL     ABANTP        HERE TO ABANDON TAPE     
      00023  0020 00 0 00020         TRA     GSX4          RETURN 
                  
      00024  0534 00 4 74443  CHAN   LXA     NOCHAN,4      HERE TO SWITCH TAPE CHANNELS   
      00025  1 00001 4 00026         TXI     *+1,4,1       ..     
      00026  2 00002 4 00026         TIX     *,4,2         ..     
      00027  0634 00 4 74443         SXA     NOCHAN,4      ..     
      00030  0020 00 0 00020         TRA     GSX4          RETURN 
                  
                       00031  KEYTB  SYN     *  
      00031  0 00005 0 00022         PZE     ABAN,,ABANKY   
      00032  0 00006 0 00024         PZE     CHAN,,SWCHAN   
                       00002  TBSIZ  EQU     *-KEYTB  
                  
                                     INSERT  BCMEQB   
                              *     
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *      COMMON AND EQUIVALENCE FOR SECONDARY STORAGE LOAD    
                              *         (TIME-SHARING VERSION)    
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *     
                      074446  DEMKEY BOOL    74446         CORE A LOCATION FOR DAEMON KEY SETTING     
                              *     
1      M1416 3845  PETER R. BOS ..... GETLSG FOR FOREGROUND RELOADER .....       06/01/70 1356.5 PAGE 2     
                  
                      000017  BASE   BOOL    17            KEY CODE BASE
                      000001  CTINUE BOOL    1             KEY CODE TO CONTINUE WITH PROGRAM,NO CHANGE
                      000002  PAUSE  BOOL    2             KEY CODE TO WAIT 60 SECS.
                      000003  CHLDFL BOOL    3             KEY CODE TO USE DIFFERENT LOAD FILE  
                      000004  STOPLD BOOL    4             KEY CODE TO STOP LOADING, START DUMPING    
                      000005  ABANKY BOOL    5             KEY CODE TO ABANDON LOAD TAPE FILE   
                      000006  SWCHAN BOOL    6             KEY CODE TO GO FROM 1 OR 2 TO 2 OR 1 CHANS.
                      000007  LSREEL BOOL    7             KEY CODE TO INDICATE LAST REEL OF LOAD FILE
                      000010  CHREEL BOOL    10            KEY CODE TO CORRECT REEL ORDER ERROR 
                       77777  NEWCOM EQU     -1            TOP OF MEMORY
                      077461  OLDCOM BOOL    77461         OLD TOP OF COMMON  
                       77462  COMRLC EQU     OLDCOM-NEWCOM RELOCATION FACTOR  
                       77777         COMMON  COMRLC        RELOCATE COMMON    
                       01554  UF     EQU     32767/2-DEMKEY/2 LENGTH OF USER LIST   
                       77777  UFL    COMMON  2*UF          USER FILE LIST  (1ST PARTS OF FILE NAMES)  
                       74446         COMMON  1             INSERT DUMMY IF NECESSARY
                       74445         COMMON  1             DEMKEY CELL IN NON-CTSS VERSION
                       74445  KEYVAL COMMON  1  
                       74444  ABANTP COMMON  1             ABANDON TAPE FILE INDICATOR    
                       74443  NOCHAN COMMON  1             NO. OF CHANNELS BEING READ (1 OR 2)  
                       74442  DU     COMMON  1             PROBLEM NO. OF DUMP/LOAD PACKAGE     
                       74441  DP     COMMON  1             PROGRAMMER NO. OF DITTO. 
                       74440  LFNA   COMMON  1             LOAD TAPE FILE NAME (PART 1)   
                       74437  LFNB   COMMON  1              ,,   ,,   ,,   ,,  (PART 2)   
                       74423         COMMON  11            DUMPED FILE'S PREAMBLE FROM DUMP TAPE
                       74423  PREAM  COMMON  1             DUMPED FILE'S DUMP TAPE PREAMBLE 1ST WORD  
                       74422  BFNA   COMMON  1             CHANNEL B LOAD TAPE FILE NAME (PART 1)     
                       74421  BFNB   COMMON  1             CHANNEL B LOAD TAPE FILE NAME (PART 2)     
                       74420  AUN    COMMON  1             CHANNEL A UNIT NO. 
                       74417  BUN    COMMON  1             CHANNEL B UNIT NO. 
                       74416  TEOF   COMMON  1             TAPE EOF INDICATOR/WORD COUNT  
                       74412         COMMON  3             LABEL OF TAPE FILE CURRENTLY BEING LOADED  
                       74412  LABEL  COMMON  1             LABEL OF TAPE FILE DITTO.   1ST WORD 
                       74411  X      COMMON  1             TAPE FILE POINTER  
                                     END  
1      M1416 3845  PETER R. BOS ..... GETLSG FOR FOREGROUND RELOADER .....       06/01/70 1356.5 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       74410 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
         33 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
      74411      X    33
      74441     DP    33
      74442     DU    33
       1554     UF    33
      74420    AUN    33
      74417    BUN    33
      77777    UFL    33
          1    ZEL      
         22   ABAN    31
         17   BASE    33
      74422   BFNA    33
      74421   BFNB    33
         24   CHAN    32
         20   GSX4     3,    6,   23,   30
      74440   LFNA    33
      74437   LFNB    33
      74416   TEOF    33
          2  BCDEC     7
         31  KEYTB    13,   16,   31,   33
      74412  LABEL    33
          2  PAUSE    33
      74423  PREAM    33
          0  RDCOM     4
          2  TBSIZ    12,   13,   16,   33
          5 ABANKY    31,   33
      74444 ABANTP    22,   33
          3 CHLDFL    33
         10 CHREEL    33
      77462 COMRLC    33
          1 CTINUE    33
      74446 DEMKEY    33
          3 GETLSG     0
      74445 KEYVAL     5,   10,   11,   15,   33
          7 LSREEL    33
      77777 NEWCOM    33
      74443 NOCHAN    24,   27,   33
      77461 OLDCOM    33
          4 STOPLD    33
          6 SWCHAN    32,   33
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1      M1416 3845  PETER R. BOS .... DUMMY ASKOPR FOR FOREGROUND RELOADER ....   06/01/70 1356.6 PAGE 1     
                  
                  
                                     PCC     ON 
                       00006         ENTRY   ASKOPR        ASK OPERATOR QUESTION    
                                     LBL     FGAS     
                                     PCC     OFF
                  
                                     EXTERN  RSSRB,PRCODE,WAIT,GETLSG   
                  
                  
                  
        TRANSFER VECTOR 
      00000  516262512260     RSSRB 
      00001  475123462425     PRCODE
      00002  662131636060     WAIT  
      00003  272563436227     GETLSG
                  
        LINKAGE DIRECTOR
      00004  000000000000     
      00005  216242464751     
                  
      00006  0634 00 4 00053  ASKOPR SXA     ASKX4,4       SAVE XRS.    
      00007  0634 00 2 00054         SXA     ASKX2,2       ..     
      00010  0441 00 4 00001         LDI     1,4           SEE IF NULL ARG    
      00011 -0056 00  400000         LNT     400000        ..     
      00012 -0056 00  300000         LNT     300000        ..     
      00013  0020 00 4 00001         TRA     1,4           .. YES, RETURN     
      00014  0074 00 4 00000         TSX     RSSRB,4       RESET ANY INPUT LINES    
      00015  3 00000 0 00000         PAR     0             ..     
                  
      00016  0534 00 2 00053  PMSG   LXA     ASKX4,2       HERE TO PRINT MESSAGE TO OPERATOR    
      00017  0441 00 2 00001  PLOOP  LDI     1,2           HERE FOR LINE IN MESSAGE 
      00020 -0056 00  400000         LNT     400000        CHECK VALID ARG    
      00021 -0056 00  300000         LNT     300000        ..     
      00022  0020 00 0 00033         TRA     ZZZ           NO, SKIP TO SLEEP OR EXIT
      00023  0604 00 0 00031         STI     PRM           YES, SAVE MESSAGE POINTER
      00024 -0500 00 2 00002         CAL     2,2           GET TRANSFER ADDRESS     
      00025 -0734 00 4 00000         PDX     ,4            ..     
      00026  0634 00 4 00030         SXA     PRC,4         SAVE   
      00027  0074 00 4 00001         TSX     PRCODE,4      PRINT LINE TO OPERATOR   
      00030  3 00000 0 00000  PRC    PAR     -             ..     
      00031  3 00000 0 00000  PRM    PAR     -,,-          ..     
      00032  1 77776 2 00017         TXI     PLOOP,2,-2    POINT AT NEXT ARG, REPEAT
                  
      00033  0074 00 4 00002  ZZZ    TSX     WAIT,4        SLEEP, WAIT FOR REPLY    
      00034  3 00000 0 00057         PAR     =1            .. INPUT WAIT
      00035  3 00000 0 00056         PAR     =0            ..     
      00036  0074 00 4 00003         TSX     GETLSG,4      PICK UP OPERATOR SIGNAL  
      00037  0534 00 2 00053         LXA     ASKX4,2       RELOAD X2    
                  
      00040  0441 00 2 00001  CLOOP  LDI     1,2           GET ARG WORD 
      00041 -0056 00  400000         LNT     400000        WAS THAT LAST ONE  
      00042 -0056 00  300000         LNT     300000        ..     
      00043  0020 00 0 00016         TRA     PMSG          .. YES, WRONG CODE GIVEN, ASK AGAIN  
      00044 -0500 00 2 00002         CAL     2,2           NO, TRY THIS ONE   
      00045  0621 00 0 00055         STA     TRA           .. TRANSFER ADDRESS
1      M1416 3845  PETER R. BOS .... DUMMY ASKOPR FOR FOREGROUND RELOADER ....   06/01/70 1356.6 PAGE 2     
                  
      00046 -0734 00 4 00000         PDX     ,4            .. CODE
      00047  0754 00 4 00000         PXA     ,4            ..     
      00050  0402 00 0 74445         SUB     KEYVAL        RESPONSE GIVEN     
      00051  0100 00 0 00053         TZE     FOUND         MATCH, SKIP  
      00052  1 77776 2 00040         TXI     CLOOP,2,-2    NO MATCH, REPEAT   
                  
                       00053  FOUND  SYN     *  
      00053  0774 00 4 00000  ASKX4  AXT     -,4           RESTORE XRS  
      00054  0774 00 2 00000  ASKX2  AXT     -,2           ..     
      00055  0020 00 0 00000  TRA    TRA     -             SKIP TO CALLER PROGRAM   
                  
                                     INSERT  BCMEQB   
                              *     
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *      COMMON AND EQUIVALENCE FOR SECONDARY STORAGE LOAD    
                              *         (TIME-SHARING VERSION)    
                              *  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     
                              *     
                      074446  DEMKEY BOOL    74446         CORE A LOCATION FOR DAEMON KEY SETTING     
                              *     
                      000017  BASE   BOOL    17            KEY CODE BASE
                      000001  CTINUE BOOL    1             KEY CODE TO CONTINUE WITH PROGRAM,NO CHANGE
                      000002  PAUSE  BOOL    2             KEY CODE TO WAIT 60 SECS.
                      000003  CHLDFL BOOL    3             KEY CODE TO USE DIFFERENT LOAD FILE  
                      000004  STOPLD BOOL    4             KEY CODE TO STOP LOADING, START DUMPING    
                      000005  ABANKY BOOL    5             KEY CODE TO ABANDON LOAD TAPE FILE   
                      000006  SWCHAN BOOL    6             KEY CODE TO GO FROM 1 OR 2 TO 2 OR 1 CHANS.
                      000007  LSREEL BOOL    7             KEY CODE TO INDICATE LAST REEL OF LOAD FILE
                      000010  CHREEL BOOL    10            KEY CODE TO CORRECT REEL ORDER ERROR 
                       77777  NEWCOM EQU     -1            TOP OF MEMORY
                      077461  OLDCOM BOOL    77461         OLD TOP OF COMMON  
                       77462  COMRLC EQU     OLDCOM-NEWCOM RELOCATION FACTOR  
                       77777         COMMON  COMRLC        RELOCATE COMMON    
                       01554  UF     EQU     32767/2-DEMKEY/2 LENGTH OF USER LIST   
                       77777  UFL    COMMON  2*UF          USER FILE LIST  (1ST PARTS OF FILE NAMES)  
                       74446         COMMON  1             INSERT DUMMY IF NECESSARY
                       74445         COMMON  1             DEMKEY CELL IN NON-CTSS VERSION
                       74445  KEYVAL COMMON  1  
                       74444  ABANTP COMMON  1             ABANDON TAPE FILE INDICATOR    
                       74443  NOCHAN COMMON  1             NO. OF CHANNELS BEING READ (1 OR 2)  
                       74442  DU     COMMON  1             PROBLEM NO. OF DUMP/LOAD PACKAGE     
                       74441  DP     COMMON  1             PROGRAMMER NO. OF DITTO. 
                       74440  LFNA   COMMON  1             LOAD TAPE FILE NAME (PART 1)   
                       74437  LFNB   COMMON  1              ,,   ,,   ,,   ,,  (PART 2)   
                       74423         COMMON  11            DUMPED FILE'S PREAMBLE FROM DUMP TAPE
                       74423  PREAM  COMMON  1             DUMPED FILE'S DUMP TAPE PREAMBLE 1ST WORD  
                       74422  BFNA   COMMON  1             CHANNEL B LOAD TAPE FILE NAME (PART 1)     
                       74421  BFNB   COMMON  1             CHANNEL B LOAD TAPE FILE NAME (PART 2)     
                       74420  AUN    COMMON  1             CHANNEL A UNIT NO. 
                       74417  BUN    COMMON  1             CHANNEL B UNIT NO. 
                       74416  TEOF   COMMON  1             TAPE EOF INDICATOR/WORD COUNT  
                       74412         COMMON  3             LABEL OF TAPE FILE CURRENTLY BEING LOADED  
                       74412  LABEL  COMMON  1             LABEL OF TAPE FILE DITTO.   1ST WORD 
                       74411  X      COMMON  1             TAPE FILE POINTER  
                                     END  
1      M1416 3845  PETER R. BOS .... DUMMY ASKOPR FOR FOREGROUND RELOADER ....   06/01/70 1356.6 PAGE 3     
                  
        LITERALS  
      00056  000000000000     
      00057  000000000001     
1      M1416 3845  PETER R. BOS .... DUMMY ASKOPR FOR FOREGROUND RELOADER ....   06/01/70 1356.6 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       74410 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
         60 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
      74411      X    56
      74441     DP    56
      74442     DU    56
       1554     UF    56
      74420    AUN    56
      74417    BUN    56
         30    PRC    26
         31    PRM    23
         55    TRA    45
      77777    UFL    56
         33    ZZZ    22
         17   BASE    56
      74422   BFNA    56
      74421   BFNB    56
      74440   LFNA    56
      74437   LFNB    56
         16   PMSG    43
      74416   TEOF    56
          2   WAIT    33
         54  ASKX2     7
         53  ASKX4     6,   16,   37
         40  CLOOP    52
         53  FOUND    51,   53
      74412  LABEL    56
          2  PAUSE    56
         17  PLOOP    32
      74423  PREAM    56
          0  RSSRB    14
          5 ABANKY    56
      74444 ABANTP    56
          6 ASKOPR     0
          3 CHLDFL    56
         10 CHREEL    56
      77462 COMRLC    56
          1 CTINUE    56
      74446 DEMKEY    56
          3 GETLSG    36
      74445 KEYVAL    50,   56
          7 LSREEL    56
      77777 NEWCOM    56
      74443 NOCHAN    56
      77461 OLDCOM    56
          1 PRCODE    27
          4 STOPLD    56
          6 SWCHAN    56
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1                                                                                06/01/70 1356.7 PAGE 1     
                  
                       00004         ENTRY   GETA     
                       00005         ENTRY   NGETA    
                                     EXTERN  GETLOC,SETLOC  
                  
        TRANSFER VECTOR 
      00000  272563434623     GETLOC
      00001  622563434623     SETLOC
                  
        LINKAGE DIRECTOR
      00002  000000000000     
      00003  272563216060     
                  
      00004  0600 00 0 00067  GETA   STZ     NINDC    
      00005 -0600 00 0 00072  NGETA  STQ     TMPMQ    
      00006  0601 00 0 00071         STO     TMPAC    
      00007  0602 00 0 00073         SLW     TMPACL   
      00010  0634 00 7 00062         SXA     NGX7,7   
      00011  0634 00 4 00063         SXA     NGX4,4   
      00012  0604 00 0 00066         STI     INDIC    
      00013  0441 00 7 00001         LDI     1,7
      00014  0520 00 0 00067         ZET     NINDC    
      00015  0020 00 0 00031         TRA     GETL          DON'T COMPUTE EFFECTIVE ADDRESS
      00016 -0625 00 0 00067         STL     NINDC    
      00017 -0046 00 0 00000         PIA  
      00020  0074 00 7 00074  CKRL1  TSX     GETEFA,7      GET EFFECTIVE ADDRESS    
      00021 -0056 00  000060         LNT     60            IS THERE INDIRECT ADDRESS
      00022  0020 00 0 00027         TRA     CKRL2         NO     
      00023 -0057 00  000077         RIL     77            TURN OFF INDIRECT ADDRESS BITS 
      00024  0737 00 7 00000         PAC     0,7
      00025 -0500 00 7 00000         CAL     0,7
      00026  0020 00 0 00020         TRA     CKRL1         COMPUTE FINAL ADDRESS    
      00027  0057 00  777777  CKRL2  RIR     777777        FINAL ADDRESS IN AC NOW  
      00030  0043 00 0 00000         OAI                   OP CODE IN INDICATOR     
      00031 -0046 00 0 00000  GETL   PIA                   INSTRUCTION IN AC  
      00032  0621 00 0 00055         STA     GA2
      00033  0621 00 0 00040         STA     GA            SET ADDRESS TO GET FROM CORE A 
      00034  0622 00 0 00047         STD     XGA           SET OP CODE OF INSTRUCTION     
      00035  0630 00 0 00047         STP     XGA
      00036  0625 00 0 00047         STT     XGA
      00037  0074 00 4 00000         TSX     GETLOC,4 
      00040  0 00000 0 00000  GA     PZE     ** 
      00041  0602 00 0 00070         SLW     GTMP          WORD FROM CORE A INTO GTMP     
      00042 -0500 00 0 00073         CAL     TMPACL   
      00043  0560 00 0 00071         LDQ     TMPAC    
      00044  0763 00 0 00000         LLS     0  
      00045  0560 00 0 00072         LDQ     TMPMQ    
      00046  0441 00 0 00066         LDI     INDIC    
      00047  0 00000 0 00070  XGA    ***     GTMP          EXECUTE INSTRUCTION
      00050  0441 00 0 00047         LDI     XGA
      00051 -0056 00  060000         LNT     060000        IS THIS A STORE-TYPE INSTRUCTION     
      00052  0020 00 0 00062         TRA     NGX7          NO     
      00053 -0500 00 0 00070         CAL     GTMP     
      00054  0074 00 4 00001         TSX     SETLOC,4 
      00055  0 00000 0 00000  GA2    PZE     ** 
      00056 -0500 00 0 00073         CAL     TMPACL   
      00057  0560 00 0 00071         LDQ     TMPAC    
1                                                                                06/01/70 1356.7 PAGE 2     
                  
      00060  0763 00 0 00000         LLS     0  
      00061  0560 00 0 00072         LDQ     TMPMQ    
      00062  0774 00 7 00000  NGX7   AXT     **,7     
      00063  0774 00 4 00000  NGX4   AXT     **,4     
      00064  0441 00 0 00066         LDI     INDIC    
      00065  0020 00 7 00002         TRA     2,7
      00066  0 00000 0 00000  INDIC  PZE     0  
      00067 +000000777777     NINDC  OCT     777777   
      00070  0 00000 0 00000  GTMP   PZE     0  
      00071  0 00000 0 00000  TMPAC  PZE     0  
      00072  0 00000 0 00000  TMPMQ  PZE     0  
      00073  0 00000 0 00000  TMPACL PZE     0  
      00074  0634 00 7 00102  GETEFA SXA     GETF7,7  
      00075  0625 00 0 00077         STT     *+2           TAG    
      00076  0734 00 7 00000         PAX     ,7            PTR    
      00077 -0636 00 0 00100         SCD     *+1,**        -C(TAG)
      00100  1 00000 7 00101         TXI     *+1,7,**      PTH-C(TAG)   
      00101  0754 00 7 00000         PXA     ,7            INTO AC
      00102  0774 00 7 00000  GETF7  AXT     **,7     
      00103  0020 00 7 00001         TRA     1,7
                                     END  
1                                                                                06/01/70 1356.7 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        104 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         40     GA    33
         55    GA2    32
         47    XGA    34,   35,   36,   50
          4   GETA     0
         31   GETL    15
         70   GTMP    41,   47,   53
         63   NGX4    11
         62   NGX7    10,   52
         20  CKRL1    26
         27  CKRL2    22
        102  GETF7    74
         66  INDIC    12,   46,   64
          5  NGETA     0
         67  NINDC     4,   14,   16
         71  TMPAC     6,   43,   57
         72  TMPMQ     5,   45,   61
         74 GETEFA    20
          0 GETLOC    37
          1 SETLOC    54
         73 TMPACL     7,   42,   56
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1     MAD PROGRAM LISTING ... ... ...                 FILE   NLREC   MAD            06/01/70    1356.8
-                 
                  EXTERNAL FUNCTION (NRECS,IRC,LRC,LTRC,LPREAM,LPHYS,NFLR,NLAST                   *001  000001    
                1 )                                                                               *001  000002    
                  ENTRY TO    NLREC .                                                             *002  000003    
                  NWDS=(NRECS-1)*IRC+LRC                                                          *003  000004    
                  NFLR=NWDS/LTRC                                                                  *004  000005    
                  NLEFT=XMOD  .(    NWDS,LTRC)                                                    *005  000006    
                  WHENEVER (NLEFT) .LE. 0, TRANSFER TO QQ0004                                     *006  000007    
                  MLPH = NLEFT + LPREAM                                                           *007  000017    
                  REM = MLPH - (MLPH/LPHYS)*LPHYS                                                 *008  000027    
                  NLAST=(MLPH/LPHYS+(REM/REM))*LPHYS                                              *009  000037    
                  TRANSFER TO QQ0005                                                              *010  000047    
      QQ0004      NLAST=0                                                                         *011  000057    
      QQ0005      FUNCTION RETURN                                                                 *012  000067    
                  INTEGER     NWDS  ,     NRECS ,     IRC   ,     LRC                             *013  000077    
                  INTEGER     NFLR  ,     LTRC  ,     NLEFT ,     XMOD                            *014  000087    
                  INTEGER     NLAST ,     LPREAM,     LPHYS                                       *015  000097    
                  INTEGER   MLPH,     REM                                                         *016  000107    
                  END OF FUNCTION                                                                 *017  000117    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00143 TRANSFER VECTOR LENGTH  00002 PROGRAM BEGINS    00014
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      NLREC  00015   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      MLPH   00005   1        NWDS   00007   1        QQ0004 00003   4        QQ0005 00004   4        REM    00010   1  
      NLEFT  00006   1                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   0        XMOD   00001   1                                                                          
0ABSOLUTE CONSTANTS     
 00011 +000000000000     00012 +000000000001     00013 +233000000000                                                    
0STATEMENT DICTIONARY   
 00003 TXL -300101000077       00004 TXL -300102000101                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION (NRECS,IRC,LRC,LTRC,LPREAM,LPHYS,NFLR,NLAST      001   000001
                1)                                                                  001   000002
                 ENTRY TO    NLREC .                                                002   000003
 00014 TRA +0 02000 0 00017    00015 SXA +0 63400 2 00103    00016 TSX +0 07400 2 00103                                 
                 NWDS=(NRECS-1)*IRC+LRC                                             003   000004
 00017 CLA +0 50000 0 00024    00020 SUB +0 40200 0 00012    00021 XCA +0 13100 0 00000    00022 MPY +0 20000 0 00024   
 00023 XCA +0 13100 0 00000    00024 ADD +0 40000 0 00024    00025 STO +0 60100 0 00007                                 
                 NFLR=NWDS/LTRC                                                     004   000005
 00026 LDQ +0 56000 0 00007    00027 PXD -0 75400 0 00000    00030 LLS +0 76300 0 00000    00031 DVP +0 22100 0 00024   
 00032 STQ -0 60000 0 00024                                                                                             
                 NLEFT=XMOD  .(    NWDS,LTRC)                                       005   000006
 00033 TSX +0 07400 4 00001    00034 TXH +3 00000 0 00007    00035 TXH +3 00000 0 00024    00036 STO +0 60100 0 00006   
                 WHENEVER (NLEFT) .LE. 0, TRANSFER TO QQ0004                        006   000007
 00037 CLA +0 50000 0 00006    00040 SUB +0 40200 0 00011    00041 TZE +0 10000 0 00043    00042 TPL +0 12000 0 00044   
 00043 TRA +0 02000 0 00003                                                                                             
                 MLPH = NLEFT + LPREAM                                              007   000017
 00044 CLA +0 50000 0 00006    00045 ADD +0 40000 0 00024    00046 STO +0 60100 0 00005                                 
                 REM = MLPH - (MLPH/LPHYS)*LPHYS                                    008   000027
 00047 LDQ +0 56000 0 00005    00050 PXD -0 75400 0 00000    00051 LLS +0 76300 0 00000    00052 DVP +0 22100 0 00024   
 00053 MPY +0 20000 0 00024    00054 XCA +0 13100 0 00000    00055 CHS +0 76000 0 00002    00056 ADD +0 40000 0 00005   
 00057 STO +0 60100 0 00010                                                                                             
                 NLAST=(MLPH/LPHYS+(REM/REM))*LPHYS                                 009   000037
 00060 LDQ +0 56000 0 00010    00061 PXD -0 75400 0 00000    00062 LLS +0 76300 0 00000    00063 DVP +0 22100 0 00010   
 00064 STQ -0 60000 0 00140    00065 LDQ +0 56000 0 00005    00066 PXD -0 75400 0 00000    00067 LLS +0 76300 0 00000   
 00070 DVP +0 22100 0 00024    00071 XCA +0 13100 0 00000    00072 ADD +0 40000 0 00140    00073 XCA +0 13100 0 00000   
 00074 MPY +0 20000 0 00024    00075 STQ -0 60000 0 00024                                                               
                 TRANSFER TO QQ0005                                                 010   000047
 00076 TRA +0 02000 0 00004                                                                                             
      QQ0004     NLAST=0                                                            011   000057
 00077 CLA +0 50000 0 00011    00100 STO +0 60100 0 00024                                                               
      QQ0005     FUNCTION RETURN                                                    012   000067
 00101 TRA +0 02000 0 00134                                                                                             
                 INTEGER     NWDS  ,     NRECS ,     IRC   ,     LRC                013   000077
                 INTEGER     NFLR  ,     LTRC  ,     NLEFT ,     XMOD               014   000087
                 INTEGER     NLAST ,     LPREAM,     LPHYS                          015   000097
                 INTEGER   MLPH,     REM                                            016   000107
                 END OF FUNCTION                                                    017   000117
 00102 TSX +0 07400 4 00000    00103 TXH +3 00000 0 00000    00104 SXD -0 63400 1 00103    00105 SXA +0 63400 4 00134   
 00106 CLA +0 50000 4 00001    00107 STA +0 62100 0 00017    00110 CLA +0 50000 4 00002    00111 STA +0 62100 0 00022   
 00112 CLA +0 50000 4 00003    00113 STA +0 62100 0 00024    00114 CLA +0 50000 4 00004    00115 STA +0 62100 0 00031   
 00116 STO +0 60100 0 00035    00117 CLA +0 50000 4 00005    00120 STA +0 62100 0 00045    00121 CLA +0 50000 4 00006   
 00122 STA +0 62100 0 00052    00123 STA +0 62100 0 00053    00124 STA +0 62100 0 00070    00125 STA +0 62100 0 00074   
 00126 CLA +0 50000 4 00007    00127 STA +0 62100 0 00032    00130 CLA +0 50000 4 00010    00131 STA +0 62100 0 00075   
 00132 STA +0 62100 0 00100    00133 TRA +0 02000 2 00001    00134 AXT +0 77400 4 00000    00135 LXA +0 53400 2 00103   
 00136 LXD -0 53400 1 00103    00137 TRA +0 02000 4 00001                                                               
1      M1416 3845  PETER R. BOS ..... FOREGROUND 'PRCODE' FOR RELOADER ......    06/01/70 1356.9 PAGE 1     
                  
                  
                                     PCC     ON 
                                     NOLNK
                       00003         ENTRY   PRCODE   
                                     LBL     FGPR     
                                     PCC     OFF
                  
                                     EXTERN  WRFLX,WRFLXA,BZEL    
                  
                  
                  
        TRANSFER VECTOR 
      00000  665126436760     WRFLX 
      00001  665126436721     WRFLXA
      00002  227125436060     BZEL  
                  
      00003  0634 00 4 00026  PRCODE SXA     PRX4,4        SAVE LINKAGE 
      00004 -0500 00 4 00001         CAL     1,4           PICK UP ENTRY CODE WORD  
      00005 -0320 00 0 00033         ANA     =O77          MASK   
      00006 -0765 00 0 00006         LGR     6             SHIFT TO MQ FOR CONVERSION     
      00007  0767 00 0 00003         ALS     3             MAKE ROOM    
      00010 -0763 00 0 00003         LGL     3             SHIFT  
      00011  0767 00 0 00003         ALS     3             ..     
      00012 -0763 00 0 00003         LGL     3             ..     
      00013  0602 00 0 00032         SLW     CODE          ..     
      00014 -0500 00 4 00002         CAL     2,4           AND MESSAGE POINTER
      00015  0602 00 0 00025         SLW     WR+1          ..     
      00016  0074 00 4 00002         TSX     BZEL,4        BLANKS LEADING     
      00017  3 00000 0 00032         PAR     CODE          ..     
      00020  0322 00 0 00034         ERA     =O373737000000 NULL FIRST 3 BLANKS     
      00021  0601 00 0 00032         STO     CODE          PUT AWAY     
      00022  0074 00 4 00001         TSX     WRFLXA,4      PRINT 'ENTER CODE X'     
      00023  3 00003 0 00030         PAR     MESS,,3       ..     
      00024  0074 00 4 00000  WR     TSX     WRFLX,4       ..     
      00025  3 00000 0 00000         PAR     -,,-          ..     
      00026  0774 00 4 00000  PRX4   AXT     -,4           RESTORE LINKAGE    
      00027  0020 00 4 00003         TRA     3,4           RETURN 
                  
                  
      00030  254563255160     MESS   BCI     /ENTER CODE/   
      00031  234624255757     
      00032  606045575757     CODE   BCI     /  N/    
                  
                                     END  
                  
        LITERALS  
      00033  000000000077     
      00034  373737000000     
1      M1416 3845  PETER R. BOS ..... FOREGROUND 'PRCODE' FOR RELOADER ......    06/01/70 1356.9 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         35 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         24     WR    15
          2   BZEL    16
         32   CODE    13,   17,   21
         30   MESS    23
         26   PRX4     3
          0  WRFLX    24
          3 PRCODE     0
          1 WRFLXA    22
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            CONVERT I/O SYSTEM DATE/TIME TO BCD.....M.J.BAILEY,12/11/64         06/01/70 1356.9 PAGE 1     
                  
                              *       (EXTRACTED FROM GDT FOR LOADER USE)     
                              *     
                       00002         ENTRY   IOBDT    
                              *     
                              *   CONVERT I/O SYSTEM DATE/TIME FROM LAC TO BCD TIME AND DATE -- 
                              *      HHMM.M (TIME) IN AC, MMDDYY (DATE) IN MQ 
                              *     
                  
        LINKAGE DIRECTOR
      00000  000000000000     
      00001  314622246360     
                  
      00002 -0130 00 0 00000   IOBDT XCL  
 T    00003 -0754 00 0 00000         PXD  
      00004 -0763 00 0 00011         LGL     9             YEAR IN AC   
      00005 -0600 00 0 00122         STQ     GDTD     
      00006 -0130 00 0 00000         XCL                   YEAR IN MQ   
 T    00007 -0754 00 0 00000         PXD  
      00010  0221 00 0 00124         DVP     =10           TENS DIGIT OF YEAR IN MQ, UNITS IN AC
      00011 -0320 00 0 00125         ANA     =O17     
      00012  0602 00 0 00117         SLW     DATE.         '00000Y'  OF DATE  
      00013 -0130 00 0 00000         XCL  
      00014 -0320 00 0 00125         ANA     =O17     
      00015  0767 00 0 00006         ALS     6  
      00016 -0602 00 0 00117         ORS     DATE.         '0000YY' OF DATE   
      00017  0560 00 0 00122         LDQ     GDTD     
 T    00020 -0754 00 0 00000         PXD  
      00021 -0763 00 0 00004         LGL     4             MONTH IN AC  
      00022  0601 00 0 00123         STO     GDTM     
      00023  0402 00 0 00124         SUB     =10
      00024 -0120 00 0 00030         TMI     IBA
      00025  0601 00 0 00123         STO     GDTM          SAVE UNITS DIGIT OF MONTH
      00026  0500 00 0 00131         CLA     =O100    
      00027  0020 00 0 00031         TRA     *+2
 T    00030 -0754 00 0 00000    IBA  PXD  
      00031  0400 00 0 00123         ADD     GDTM     
      00032  0767 00 0 00030         ALS     24            'MM0000'     
      00033 -0602 00 0 00117         ORS     DATE.         'MM00YY' OF DATE   
 T    00034 -0754 00 0 00000         PXD  
      00035 -0763 00 0 00005         LGL     5             DAY IN AC    
      00036 -0600 00 0 00122         STQ     GDTD          SAVE THE TIME
      00037 -0130 00 0 00000         XCL                   DAY IN MQ    
 T    00040 -0754 00 0 00000         PXD  
      00041  0221 00 0 00124         DVP     =10           TENS DIGIT OF DAY IN MQ, UNITS IN AC 
      00042 -0773 00 0 00006         RQL     6  
      00043 -0600 00 0 00123         STQ     GDTM          STORE '0000D0'     
      00044  0400 00 0 00123         ADD     GDTM          '0000DD' IN AC     
      00045  0767 00 0 00014         ALS     12            '00DD00' IN AC     
      00046 -0602 00 0 00117         ORS     DATE.         'MMDDYY' OF DATE   
      00047 -0500 00 0 00122         CAL     GDTD          TIME   
      00050  0771 00 0 00022         ARS     18 
      00051 -0130 00 0 00000         XCL                   TIME IN SECS. IN MQ
      00052  0200 00 0 00130         MPY     =60           GET TIME IN 1/60TH'S SEC. IN MQ
      00053  0634 00 4 00101         SXA     TPWATX,4 
                              *     
      00054 -0754 00 0 00000   BCA   ZAC  
1            CONVERT I/O SYSTEM DATE/TIME TO BCD.....M.J.BAILEY,12/11/64         06/01/70 1356.9 PAGE 2     
                  
      00055  0221 00 0 00133         DVP     =216000       FIND HOUR    
      00056  0601 00 0 00121         STO     MIN.          SAVE REMAINDER (MINUTES) 
      00057  0074 00 4 00103         TSX     BINBCD,4      CONVERT HOURS TO BCD     
      00060 -0765 00 0 00006         LGR     6  
      00061 -0100 00 0 00063         TNZ     *+2
      00062 -0500 00 0 00127         CAL     =O60          REPLACE LEADING ZERO WITH BLANK
      00063 -0763 00 0 00006         LGL     6  
      00064  0767 00 0 00030         ALS     24            LEAVE ROOM FOR MINUTE    
      00065  0602 00 0 00120         SLW     HOUR.         SAVE HOUR    
      00066  0560 00 0 00121         LDQ     MIN.          MINUTE 
      00067 -0754 00 0 00000         ZAC  
      00070  0221 00 0 00132         DVP     =360          FIND NO. OF TENTHS OF MINUTES  
      00071  0074 00 4 00103         TSX     BINBCD,4      CONVERT TO BCD     
      00072 -0765 00 0 00006         LGR     6             TENTHS TO MQ 
      00073  0767 00 0 00014         ALS     12 
      00074 -0602 00 0 00120         ORS     HOUR.         ADD MINUTE TO HOUR 
      00075 -0500 00 0 00126         CAL     =H00000.      PRECEDE TENTHS WITH .    
      00076 -0763 00 0 00006         LGL     6             BRING BACK TENTHS  
      00077 -0501 00 0 00120         ORA     HOUR.         HHMM.M IN LOGICAL AC     
      00100  0560 00 0 00117         LDQ     DATE.         DATE TO MQ   
      00101  0774 00 4 00000  TPWATX AXT     **,4     
      00102  0020 00 4 00001         TRA     1,4
                  
      00103  0634 00 4 00114  BINBCD SXA     BNBCDX,4      BINARY TO BCD CONVERTER  
      00104  0600 00 0 00116         STZ     TPLIN.   
      00105  0774 00 4 00044         AXT     36,4     
      00106 -0754 00 0 00000  BNBCD1 ZAC                   CONVERT INTEGER TO BCD   
      00107  0221 00 0 00124         DVP     =10           ..     
      00110  0767 00 4 00044         ALS     36,4          ..     
      00111 -0602 00 0 00116         ORS     TPLIN.        ..     
      00112  2 00006 4 00106         TIX     BNBCD1,4,6    ..     
      00113 -0500 00 0 00116         CAL     TPLIN.   
      00114  0774 00 4 00000  BNBCDX AXT     **,4     
      00115  0020 00 4 00001         TRA     1,4
      00116  0 00000 0 00000  TPLIN. PZE                   TEMPORARY    
      00117  606060606060      DATE. BCI     1, 
      00120  606060606060      HOUR. BCI     1, 
      00121  0 00000 0 00000   MIN.  PZE  
      00122  0 00000 0 00000  GDTD   PZE  
      00123  0 00000 0 00000  GDTM   PZE  
                                     END  
                  
        LITERALS  
      00124  000000000012     
      00125  000000000017     
      00126  000000000033     
      00127  000000000060     
      00130  000000000074     
      00131  000000000100     
      00132  000000000550     
      00133  000000645700     
1            CONVERT I/O SYSTEM DATE/TIME TO BCD.....M.J.BAILEY,12/11/64         06/01/70 1356.9 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        134 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         54    BCA      
         30    IBA    24
        122   GDTD     5,   17,   36,   47
        123   GDTM    22,   25,   31,   43,   44
        121   MIN.    56,   66
        117  DATE.    12,   16,   33,   46,  100
        120  HOUR.    65,   74,   77
          2  IOBDT     0
        103 BINBCD    57,   71
        106 BNBCD1   112
        114 BNBCDX   103
        116 TPLIN.   104,  111,  113
        101 TPWATX    53
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1      XMOD          REMAINDERING ARG1(MOD ARG2)                                 06/01/70 1357.1 PAGE 1     
                  
                              *              CALLING SEQUENCE TSX XMOD,4
                              *                               TXH ARG1(FIXED) 
                              *                               TXH ARG2(FIXED) 
                              *                               3,4 RETURN
                              *              FUNCTION FIXED 
                       00002         ENTRY   XMOD     
                  
        LINKAGE DIRECTOR
      00000  000000000000     
      00001  674446246060     
                  
      00002  0760 00 0 00000  XMOD   CLM  
      00003  0560 60 4 00001         LDQ*    1,4
 A    00004  0763 00 0 00000         LLS                   SIGN OF MQ TO AC   
      00005  0221 60 4 00002         DVP*    2,4
      00006  0020 00 4 00003         TRA     3,4
                                                           FUNCTION IN ARITHMETIC AC FIXED
                                     END  
1      XMOD          REMAINDERING ARG1(MOD ARG2)                                 06/01/70 1357.1 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          7 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          2   XMOD     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1     MAD PROGRAM LISTING ... ... ...                 FILE  CRECAP   MAD            06/01/70    1357.2
-                 
                  EXTERNAL FUNCTION                                                               *001 LM00001    
                  NORMAL MODE IS INTEGER                                                          *002 LM00002    
                  ENTRY TO RECAP.                                                                 *003 LM00003    
                  FUNCTION RETURN                                                                 *004 LM00004    
                  END OF FUNCTION                                                                 *005 LM00005    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00023 TRANSFER VECTOR LENGTH  00001 PROGRAM BEGINS    00004
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      RECAP  00005   0                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00002 +000000000001     00003 +233000000000                                                                            
0PROGRAM    
                 EXTERNAL FUNCTION                                                  001  LM00001
                 N'R                                                                002  LM00002
                 E'O RECAP.                                                         003  LM00003
 00004 TRA +0 02000 0 00007    00005 SXA +0 63400 2 00011    00006 TSX +0 07400 2 00011                                 
                 F'N                                                                004  LM00004
 00007 TRA +0 02000 0 00015                                                                                             
                 E'N                                                                005  LM00005
 00010 TSX +0 07400 4 00000    00011 TXH +3 00000 0 00000    00012 SXD -0 63400 1 00011    00013 SXA +0 63400 4 00015   
 00014 TRA +0 02000 2 00001    00015 AXT +0 77400 4 00000    00016 LXA +0 53400 2 00011    00017 LXD -0 53400 1 00011   
 00020 TRA +0 02000 4 00001                                                                                             
1      M1416 3845  PETER R. BOS ..... READ/SCAN COMMAND FROM CONSOLE ......      06/01/70 1357.6 PAGE 1     
                  
                                     PCC     ON 
                                     NOLNK
                       00003         ENTRY   RDCOM    
                                     LBL     RCOM     
                                     PCC     OFF
                  
                                     EXTERN  RDMESS,PARSE,RPARSE  
                  
                                     UNLIST     
                  
                  
                  
      00003                   RDCOM  SAVE    RD(X1,X2,X4,MTM) SAVE XRS AND LINKAGE  
      00007  0441 00 4 00002         LDI     2,4           IS EMPTY RETURN GIVEN    
      00010 -0754 00 0 00000         ZAC                   .. ASSUME NOT
      00011  0444 00 0 00117         OFT     =O400000700000 ..    
      00012  0020 00 0 00016         TRA     RDCM1         .. NO  
      00013 -0056 00  300000         LNT     300000        ..     
      00014  0020 00 0 00016         TRA     RDCM1         .. NO  
      00015 -0500 00 0 00115         CAL     EMPRTN        YES, SET RETURN ON RDMESS CALL 
      00016  0602 00 0 00042  RDCM1  SLW     EMP1          ..     
      00017  0600 00 0 00114         STZ     FLIP          RESET SWITCH 
      00020  0441 00 4 00001         LDI     1,4           GET POINTER TO BUFFER    
      00021  0604 00 0 00045         STI     ARY           .. SAVE
      00022 -0054 00  200000         LFT     200000        IS THIS A 'BLK'    
      00023 -0054 00  100000         LFT     100000        ..     
      00024  0020 00 0 00040         TRA     START         .. NO  
      00025 -0625 00 0 00114         STL     FLIP          THIS IS A MAD CALL, BACKWARDS BUFFER 
      00026 -0500 00 4 00001         CAL     1,4           GET ADDRESS OF LAST WORD 
      00027  0737 00 1 00000         PAC     ,1            .. SAVE
      00030  0400 00 0 00116         ADD     =1            ADJUST 
      00031 -0535 00 4 00045         LDC     ARY,4         POINTER TO WORD COUNT    
      00032  0402 00 4 00000         SUB     0,4           COMPUTE ADDRESS OF FIRST WORD  
      00033  0621 00 0 00045         STA     ARY           PUT AWAY     
      00034  0737 00 2 00000         PAC     ,2            .. SAVE
      00035 -0500 00 4 00000         CAL     0,4           PICK UP WORD COUNT 
      00036  0734 00 4 00000         PAX     ,4            ..     
      00037 -0634 00 4 00045         SXD     ARY,4         ..     
                  
      00040  0074 00 4 00000  START  TSX     RDMESS,4      READ INPUT LINE    
      00041  3 00016 0 00076         PAR     LINE,,14      ..     
      00042  0020 00 0 00072  EMP1   TRA     EMPTY         .. EMPTY RETURN IF GIVEN 
      00043  0074 00 4 00001         TSX     PARSE,4       SCAN FOR BLANKS    
      00044  3 00016 0 00076         PAR     LINE,,14      ..     
      00045  3 00000 0 00000  ARY    PAR     -,,-          ..     
      00046  3 00000 0 00065         PAR     RDMORE        .. UNFINISHED LINE RETURN
      00047 -0520 00 0 00114         NZT     FLIP          WAS THIS MAD CALL  
      00050  0020 00 0 00061         TRA     RETURN        .. NO  
                  
      00051 -0500 00 1 00000  LOOP   CAL     0,1           INVERT ARRAY 
      00052  0560 00 2 00000         LDQ     0,2           ..     
      00053  0602 00 2 00000         SLW     0,2           ..     
      00054 -0600 00 1 00000         STQ     0,1           ..     
      00055  1 77777 2 00056         TXI     *+1,2,-1      INCREMENT UPPER POINTER  
      00056  1 00001 1 00057         TXI     *+1,1,1       .. AND LOWER POINTER     
      00057 -0634 00 1 00060         SXD     *+1,1         ..     
1      M1416 3845  PETER R. BOS ..... READ/SCAN COMMAND FROM CONSOLE ......      06/01/70 1357.6 PAGE 2     
                  
      00060  3 00000 2 00051         TXH     LOOP,2,-      REPEAT 
                  
      00061                   RETURN RETURN  (2,4),RD(X1,X2,X4,MTM) RETURN TO CALLER
                  
      00065  0074 00 4 00000  RDMORE TSX     RDMESS,4      HERE FOR LINE WITH NO C.R.     
      00066  3 00016 0 00076         PAR     LINE,,14      .. READ SOME MORE  
      00067  0 00000 0 00000         PZE     0             .. NO EMPTY RETURN HERE  
      00070  0074 00 4 00002         TSX     RPARSE,4      .. AND CONTINUE SCAN     
      00071  3 00016 0 00076         PAR     LINE,,14      ..     
                  
      00072                   EMPTY  RESTOR  RD(X1,X2,X4,MTM) HERE IF NO LINE TYPED 
      00075  0020 60 4 00002         TRA*    2,4           .. GIVE EMPTY RETURN     
                  
      00076                   LINE   BSS     14            INPUT BUFFER 
      00114  0 00000 0 00000  FLIP   PZE     0  
      00115  0020 00 0 00072  EMPRTN TRA     EMPTY         EMPTY RETURN FOR RDMESS  
                  
      00116                          RMT     *  
                                     END  
                  
        LITERALS  
      00116  000000000001     
      00117  400000700000     
1      M1416 3845  PETER R. BOS ..... READ/SCAN COMMAND FROM CONSOLE ......      06/01/70 1357.6 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        120 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         45    ARY    21,   31,   33,   37
         42   EMP1    16
        114   FLIP    17,   25,   47
         76   LINE    41,   44,   66,   71
         51   LOOP    60
         61   RDX1     3,   72
         62   RDX2     4,   73
         63   RDX4     5,   74
         72  EMPTY    42,  115
          1  PARSE    43
         16  RDCM1    12,   14
          3  RDCOM     0
         40  START    24
        115 EMPRTN    15
          0 RDMESS    40,   65
         65 RDMORE    46
         61 RETURN    50
          2 RPARSE    70
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1      M1416 3845  PETER R. BOS .... PARSE, RPARSE, ENDLIN ... COMMAND SCANNER   06/01/70 1357.8 PAGE 1     
                  
                                     PCC     ON 
                                     NOLNK
                       00000         ENTRY   PARSE         ENTRY TO PARSE COMMAND LINE    
                       00022         ENTRY   RPARSE        REENTRY FOR LONG LINE    
                       00052         ENTRY   ENDLIN        FUDGE UP CARRIAGE RETURN 
                       00111         ENTRY   FLAG          NON-ZERO IF FIRST WORD PROCESSED     
                                     LBL     PARS     
                                     PCC     OFF
                  
      00000  0634 00 4 00060  PARSE  SXA     PX4,4         ROUTINE TO PARSE LINE    
      00001  0760 00 0 00016         LMTM                  .. NEED 4    
      00002  0634 00 5 00061         SXA     PX5,5         ..     
      00003  0634 00 6 00062         SXA     PX6,6         ..     
      00004  0634 00 7 00063         SXA     PX7,7         ..     
      00005 -0500 00 0 00112         CAL     BLANKS        INITIALIZE   
      00006  0602 00 0 00107         SLW     TEMP          ..     
      00007 -0625 00 0 00110         STL     BLNK          ..     
      00010  0600 00 0 00111         STZ     FLAG          ..     
      00011 -0500 00 4 00002         CAL     2,4           PICK UP BUFFER LOCATION  
      00012 -0734 00 5 00000         PDX     ,5            ..     
      00013  0754 00 5 00000         PXA     ,5            ..     
      00014  1 00001 5 00015         TXI     *+1,5,1       .. MAKE TNX WORK RIGHT   
      00015  0361 00 4 00002         ACL     2,4           ..     
      00016  0621 00 0 00076         STA     PUT           ..     
      00017 -0500 00 4 00003         CAL     3,4           GET END OF LINE RETURN   
      00020  0621 00 0 00051         STA     EMPTY         ..     
      00021  0020 00 0 00023         TRA     *+2           .. SKIP RPARSE AXT 
      00022  0774 00 5 00000  RPARSE AXT     -,5           REENTRY FOR NEW LINE     
      00023  0760 00 0 00016         LMTM                  .. JUST IN CASE    
      00024 -0500 00 4 00001         CAL     1,4           GET LINE LOCATION AND WORD COUNT     
      00025 -0734 00 7 00000         PDX     ,7            ..     
      00026  0754 00 7 00000         PXA     ,7            ..     
      00027  0361 00 4 00001         ACL     1,4           ..     
      00030  0621 00 0 00032         STA     GET           .. SAVE ADDRESS    
                  
      00031  0774 00 6 00006  WRD    AXT     6,6           SIX CHARACTERS PER WORD  
      00032  0560 00 7 00000  GET    LDQ     -,7           PICK UP NEXT WORD TO SCAN
      00033 -0500 00 0 00107  CHR    CAL     TEMP          HERE FOR NEXT CHAR, RESTORE PREVIOUS RESULT
      00034 -0763 00 0 00006         LGL     6             SHIFT OUT A CHARACTER    
      00035  0044 00 0 00000         PAI                   SAVE AC
      00036 -0320 00 0 00114         ANA     =O77          MASK THIS CHARACTER
      00037  0774 00 4 00006         AXT     NSPCHR,4      LOOK FOR IT IN TABLE OF CONTROL CHARACTERS 
      00040 -0340 00 4 00107         LAS     SPCHR,4       ..     
      00041  0020 00 0 00043         TRA     *+2           ..     
      00042  0020 60 4 00110         TRA*    SPCHR+1,4     .. SPECIAL CHAR. FOUND, GO DO IT     
      00043  2 00002 4 00040         TIX     *-3,4,2       ..     
      00044  0604 00 0 00107         STI     TEMP          NORMAL CHARACTER, SAVE NEW RESULT    
      00045  0600 00 0 00110         STZ     BLNK          RESET BLANK WORD INDICATOR     
      00046  2 00001 6 00033  TIX    TIX     CHR,6,1       AND GO GET NEXT CHARACTER
      00047  2 00001 7 00031         TIX     WRD,7,1       OR NEXT WORD IF OUT OF CHARACTERS    
                  
      00050  0634 00 5 00022         SXA     RPARSE,5      HERE WHEN BUFFER EMPTY, SAVE X5
      00051  0020 00 0 00000  EMPTY  TRA     -             TAKE LINE EMPTY RETURN   
1      M1416 3845  PETER R. BOS .... PARSE, RPARSE, ENDLIN ... COMMAND SCANNER   06/01/70 1357.8 PAGE 2     
                  
      00052  0534 00 5 00022  ENDLIN LXA     RPARSE,5      END OF LINE W/O CARR. RET.     
                  
      00053  0074 00 4 00072  ENDIN  TSX     STWRD,4       HERE FOR CARRIAGE RETURN 
      00054 -2 00001 5 00055         TNX     *+1,5,1       .. DECREMENT COUNTER     
      00055 -0500 00 0 00113         CAL     FENCE         .. INSURE FENCE IS LAST ARGUMENT     
      00056  0522 00 0 00076         XEC     PUT           ..     
      00057  2 00001 5 00056         TIX     *-1,5,1       .. FILL OUT REMAINDER OF BUFFER
      00060  0774 00 4 00000  PX4    AXT     -,4           RESTORE X4   
      00061  0774 00 5 00000  PX5    AXT     -,5           ..     
      00062  0774 00 6 00000  PX6    AXT     -,6           ..     
      00063  0774 00 7 00000  PX7    AXT     -,7           ..     
      00064  0020 00 4 00004         TRA     4,4           RETURN NORMALLY    
                  
      00065  0074 00 4 00072  BLANK  TSX     STWRD,4       HERE FOR BLANK IN LINE, STORE CURRENT WORD 
      00066 -0500 00 0 00112         CAL     BLANKS        RESET TEMPORARY WORD     
      00067  0602 00 0 00107         SLW     TEMP          ..     
      00070 -0625 00 0 00110         STL     BLNK          INDICATE BLANK FOUND     
      00071  0020 00 0 00046         TRA     TIX           KEEP LOOKING 
                  
      00072  0520 00 0 00110  STWRD  ZET     BLNK          ROUTINE TO STORE WORD IN BUFFER
      00073  0020 00 4 00001         TRA     1,4           EXIT FOR REDUNDANT BLANKS
      00074 -2 00001 5 00073         TNX     *-1,5,1       EXIT IF BUFFER FILLED    
      00075 -0500 00 0 00107         CAL     TEMP          GET THIS WORD
      00076  0602 00 5 00000  PUT    SLW     -,5           PUT IT AWAY  
      00077 -0625 00 0 00111         STL     FLAG          INDICATE WORD FOUND
      00100  0020 00 4 00001         TRA     1,4           RETURN 
                  
                       00101  TSPCHR SYN     *             TABLE OF CONTROL CHARACTERS FOR PARSE
      00101 +000000000055            OCT     55            CARRIAGE RETURN    
      00102  0020 00 0 00053         TRA     ENDIN         .. ENDS LINE 
      00103 +000000000057            OCT     57            NULL (UNLIKELY)    
      00104  0020 00 0 00046         TRA     TIX           .. IS IGNORED
      00105 +000000000060            OCT     60            BLANK  
      00106  0020 00 0 00065         TRA     BLANK         .. MARKS WORD
                       00107  SPCHR  SYN     *             ..     
                       00006  NSPCHR EQU     *-TSPCHR      TABLE COUNT  
                  
      00107  0 00000 0 00000  TEMP   PZE  
      00110  0 00000 0 00000  BLNK   PZE  
      00111  0 00000 0 00000  FLAG   PZE  
                  
      00112  606060606060     BLANKS BCI     1, 
      00113 -377777777777     FENCE  OCT     777777777777   
                  
                                     END  
                  
        LITERALS  
      00114  000000000077     
1      M1416 3845  PETER R. BOS .... PARSE, RPARSE, ENDLIN ... COMMAND SCANNER   06/01/70 1357.8 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        115 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         33    CHR    46
         32    GET    30
         76    PUT    16,   56
         60    PX4     0
         61    PX5     2
         62    PX6     3
         63    PX7     4
         46    TIX    71,  104
         31    WRD    47
        110   BLNK     7,   45,   70,   72
        111   FLAG     0,   10,   77
        107   TEMP     6,   33,   44,   67,   75
         65  BLANK   106
         51  EMPTY    20
         53  ENDIN   102
        113  FENCE    55
          0  PARSE     0
        107  SPCHR    40,   42,  107
         72  STWRD    53,   65
        112 BLANKS     5,   66
         52 ENDLIN     0
          6 NSPCHR    37,  107
         22 RPARSE     0,   50,   52
        101 TSPCHR   101,  107
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




RELSUP   BCD 09/20/68 0220.8   17000         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE     REL   MAD            02/15/68    1731.3
-                 
                      PROGRAM TO PROVIDE RELOCATION FOR CTSS SUPERVISORS                               LM00001    
                                                                                                       LM00002    
                           D.R. WIDRIG  MARCH 1966                                                     LM00003    
                                                                                                       LM00004    
                      LOADING INSTRUCTIONS                                                             LM00005    
                           MAD REL (LIST)                                                              LM00006    
                           FAP GETBUF (LIST)                                                           LM00007    
                           LAED NCLOAD REL GETBUF (SQZ) (SRCH) XLIBE                                   LM00008    
                           SAVE RELSUP                                                                 LM00009    
                           R RELSUP NAME1  (NAME1 STOMAP)                                              LM00010    
                                                                                                       LM00011    
                                                                                                       LM00012    
                  NORMAL MODE IS INTEGER                                                          *001 LM00013    
                  BOOLEAN NAMESW,DECSW,SYSSW                                                      *002 LM00014    
                  DIMENSION LINE(40)                                                              *003 LM00015    
                  DIMENSION BUFF1(0),BUFF2(0)                                                     *004 LM00016    
                  DIMENSION TAB11(0),TAB21(0)                                                     *005 LM00017    
                                                                                                       LM00018    
                  VECTOR VALUES N1 = 0,$STOMAP$                                                   *006 LM00019    
                  EQUIVALENCE (STOMAP,N1(1))                                                      *007 LM00020    
                  VECTOR VALUES SNAME = $COM000$,$ SYMTB$                                         *008 LM00021    
                  EQUIVALENCE (SYMTB,SNAME(1))                                                    *009 LM00022    
                  VECTOR VALUES RESULT = 0,0,0,0,0                                                *010 LM00023    
                                                                                                       LM00024    
                  VECTOR VALUES FENCE = 777777777777K                                             *011 LM00025    
                  VECTOR VALUES LOWCOM = 77461K                                                   *012 LM00026    
                  VECTOR VALUES MZE = - 0                                                         *013 LM00027    
                  VECTOR VALUES TYPCOD = $00000F$,$00000E$,$00000C$                               *014 LM00028    
                  VECTOR VALUES TMAX = 1024                                                       *015 LM00029    
                  VECTOR VALUES TYPMAX = 3                                                        *016 LM00030    
                  VECTOR VALUES BLANKS = $      $                                                 *017 LM00031    
                  VECTOR VALUES NULLS = 575757575757K                                             *018 LM00032    
                                                                                                       LM00033    
                      MAKE SURE OF PROPER FORMAT                                                       LM00034    
                                                                                                       LM00035    
                  WHENEVER COMARG.(1,N1) .E. FENCE                                                *019 LM00036    
                       PRMESS.($R RELSUP N1 (N1 STOMAP)$)                                         *020 LM00037    
                       CHNCOM.(0)                                                                 *021 LM00038    
                  END OF CONDITIONAL                                                              *022 LM00039    
                                                                                                       LM00040    
                      IF SYSTEMS ARE THE SAME, SET SYSTEM SWITCH                                       LM00041    
                                                                                                       LM00042    
                  WHOAMI.(LINE(3)...3)                                                            *023 LM00043    
                  WHENEVER (LINE(1) .E. N1)                                                       *024 LM00044    
                       SYSSW = 1B                                                                 *025 LM00045    
                  OTHERWISE                                                                       *026 LM00046    
                       SYSSW = 0B                                                                 *027 LM00047    
                  END OF CONDITIONAL                                                              *028 LM00048    
                  SETBRK.(BEATIT)                                                                 *029 LM00049    
                                                                                                       LM00050    
                      SET UP ERROR RETURNS, ETC.                                                       LM00051    
                                                                                                       LM00052    
                  FERRTN.(ERR1)                                                                   *030 LM00053    
                                                                                                       LM00054    
                      SET UP TABLE AREAS                                                               LM00055    
                                                                                                       LM00056    
                  INDX1 = 1                                                                       *031 LM00057    
                  GETBUF.(TAB11,TMAX)                                                             *032 LM00058    
                  GETBUF.(TAB21,TMAX)                                                             *033 LM00059    
                                                                                                       LM00060    
                      OPEN STOMAP FILE                                                                 LM00061    
                                                                                                       LM00062    
                  TOP = GETBUF.(BUFF1,432)                                                        *034 LM00063    
                  GETBUF.(BUFF2,432)                                                              *035 LM00064    
                  BFOPEN.($R$,N1,STOMAP,BUFF1(BUFF1+432),BUFF2(BUFF2+432),                        *036 LM00065    
                1      MZE,ERR1)                                                                  *036 LM00066    
                  SNAME = SNAME .V. (N1.A.770000K)                                                *037 LM00067    
                                                                                                       LM00068    
                      DRAIN JUNK AT FRONT                                                              LM00069    
                                                                                                       LM00070    
                  BFREAD.(N1,STOMAP,N...1,EOF1,EOFCT,ERR1)                                        *038 LM00071    
                  N = N .A. 77K                                                                   *039 LM00072    
                  NPLUS1 = N + 1                                                                  *040 LM00073    
                  BFREAD.(N1,STOMAP,LINE(N)...NPLUS1,EOF1,EOFCT,ERR1)                             *041 LM00074    
                  N = LINE(0) .A. 77K                                                             *042 LM00075    
                  NPLUS1 = N + 1                                                                  *043 LM00076    
                  BFREAD.(N1,STOMAP,LINE(N)...NPLUS1,EOF1,EOFCT,ERR1)                             *044 LM00077    
                                                                                                       LM00078    
                      READ A LINE FROM STORAGE MAP                                                     LM00079    
                                                                                                       LM00080    
      READ1       N = LINE(0) .A. 77K                                                             *045 LM00081    
                  NPLUS1 = N + 1                                                                  *046 LM00082    
                  BFREAD.(N1,STOMAP,LINE(N)...NPLUS1,EOF1,EOFCT,ERR1)                             *047 LM00083    
                  WHENEVER N .L. 6, TRANSFER TO READ1                                             *048 LM00084    
                                                                                                       LM00085    
                      GET SYMBOL, IF ANY                                                               LM00086    
                                                                                                       LM00087    
                  WHENEVER LINE(N-2) .NE. BLANKS                                                  *049 LM00088    
                                                                                                       LM00089    
                      CLASSIFY SYMBOL, CHECK FOR END                                                   LM00090    
                                                                                                       LM00091    
                       WHENEVER LINE(N-1) .E. $LOWEST$                                            *050 LM00092    
                            LOWCOM = BCOCT.(LINE(N-5))                                            *051 LM00093    
                            TRANSFER TO EOF1                                                      *052 LM00094    
                       OR WHENEVER LINE(N-1) .E. BLANKS                                           *053 LM00095    
                            IN2 = 2K6                                                             *054 LM00096    
                       OTHERWISE                                                                  *055 LM00097    
                            IN2 = 1K6                                                             *056 LM00098    
                       END OF CONDITIONAL                                                         *057 LM00099    
                                                                                                       LM00100    
                      SPECIAL CASE CHECKS                                                              LM00101    
                                                                                                       LM00102    
                       WHENEVER LINE(N-2) .E. 0                                                   *058 LM00103    
                            IN1 = $(MAIN)$                                                        *059 LM00104    
                       OTHERWISE                                                                  *060 LM00105    
                            IN1 = RJUST.(LINE(N-2))                                               *061 LM00106    
                       END OF CONDITIONAL                                                         *062 LM00107    
                                                                                                       LM00108    
                      GET VALUE                                                                        LM00109    
                                                                                                       LM00110    
                       IN2 = IN2 .V. BCOCT.(LINE(N-4))                                            *063 LM00111    
                                                                                                       LM00112    
                      STORE SYMBOL, VALUE, AND TYPE                                                    LM00113    
                                                                                                       LM00114    
                       TAB11(TAB11+INDX1) = IN1                                                   *064 LM00115    
                       TAB21(TAB21+INDX1) = IN2                                                   *065 LM00116    
                       INDX1 = INDX1 + 1                                                          *066 LM00117    
                       WHENEVER INDX1 .G. TMAX                                                    *067 LM00118    
                            PRMESS.($OVERFLOW OF TABLE$)                                          *068 LM00119    
                            TRANSFER TO NOSYM1                                                    *069 LM00120    
                       END OF CONDITIONAL                                                         *070 LM00121    
                  END OF CONDITIONAL                                                              *071 LM00122    
                  TRANSFER TO READ1                                                               *072 LM00123    
                                                                                                       LM00124    
                      EOF, SET UP FOR SYSTEM SYMBOL TABLE                                              LM00125    
                                                                                                       LM00126    
      EOF1        BFCLOS.(N1,STOMAP,NERR0)                                                        *073 LM00127    
                                                                                                       LM00128    
                      SYMBOL TABLE IS IN PUBLIC FILE                                                   LM00129    
                                                                                                       LM00130    
      NERR0       TSSFIL.                                                                         *074 LM00131    
                  BFOPEN.($R$,SNAME,SYMTB,BUFF1(BUFF1+432),BUFF2(BUFF2+432),                      *075 LM00132    
                1      MZE,NOSYM)                                                                 *075 LM00133    
                  USRFIL.                                                                         *076 LM00134    
                                                                                                       LM00135    
                      READ SYMBOL TABLE, ONE LINE AT A TIME                                            LM00136    
                                                                                                       LM00137    
      READ2       BFREAD.(SNAME,SYMTB,LINE(14)...14,EOF2,EOFCT,NOSYM)                             *077 LM00138    
                                                                                                       LM00139    
                      PICK OFF AND STORE DEFINITIONS                                                   LM00140    
                                                                                                       LM00141    
                  THROUGH LOOP1, FOR I = 14,-3,(I.L.2)                                            *078 LM00142    
                       WHENEVER LINE(I-1) .NE. BLANKS                                             *079 LM00143    
                            IN1 = RJUST.((LINE(I-1).LS.18) .V.                                    *080 LM00144    
                1                (LINE(I-2).RS.18))                                               *080 LM00145    
                            IN2 = 4K6 .V. BCOCT.(LINE(I))                                         *081 LM00146    
                            TAB11(TAB11+INDX1) = IN1                                              *082 LM00147    
                            TAB21(TAB21+INDX1) = IN2                                              *083 LM00148    
                            INDX1 = INDX1 + 1                                                     *084 LM00149    
                            WHENEVER INDX1 .G. TMAX                                               *085 LM00150    
                                 PRMESS.($OVERFLOW OF TABLE$)                                     *086 LM00151    
                                 TRANSFER TO EOF2                                                 *087 LM00152    
                            END OF CONDITIONAL                                                    *088 LM00153    
                       END OF CONDITIONAL                                                         *089 LM00154    
      LOOP1       CONTINUE                                                                        *090 LM00155    
                  TRANSFER TO READ2                                                               *091 LM00156    
                                                                                                       LM00157    
                      EOF ON SYMBOL TABLE, GET READY TO ACCEPT INPUT                                   LM00158    
                                                                                                       LM00159    
      EOF2        RESETF.                                                                         *092 LM00160    
      RIP         SMEM.(TOP)                                                                      *093 LM00161    
      READY       PRMESS.($READY$)                                                                *094 LM00162    
                                                                                                       LM00163    
                      SET SWITCHES, ETC.                                                               LM00164    
                                                                                                       LM00165    
      INPUT       SIGN = 1                                                                        *095 LM00166    
                  DECSW = 0B                                                                      *096 LM00167    
                  NAMESW = 0B                                                                     *097 LM00168    
                  TYPE = 0                                                                        *098 LM00169    
                  VALUE = 0                                                                       *099 LM00170    
                  RESULT(0) = 575757575757K                                                       *100 LM00171    
                                                                                                       LM00172    
                      PRIME INPUT LINE                                                                 LM00173    
                                                                                                       LM00174    
                  GTWDBI.                                                                         *101 LM00175    
                                                                                                       LM00176    
                      PROCESS INPUT LINE                                                               LM00177    
                                                                                                       LM00178    
                  THROUGH LOOP2, FOR I = 1,1,(I.G.14)                                             *102 LM00179    
                       GTWDB.(LINE,EMPTY)                                                         *103 LM00180    
                                                                                                       LM00181    
                      THINK ABOUT THIS WORD                                                            LM00182    
                                                                                                       LM00183    
                       TEMP = ZEL.(LINE)                                                          *104 LM00184    
                       WHENEVER TEMP .E. $00000+$                                                 *105 LM00185    
                            SIGN = 1                                                              *106 LM00186    
                       OR WHENEVER TEMP .E. $00000-$                                              *107 LM00187    
                            SIGN = -1                                                             *108 LM00188    
                       OR WHENEVER TEMP .E. $0000//$                                              *109 LM00189    
                            DECSW = 1B                                                            *110 LM00190    
                       OR WHENEVER TEMP .E. $00000*$                                              *111 LM00191    
                            LINE = OLDNAM                                                         *112 LM00192    
                            TRANSFER TO NAMED                                                     *113 LM00193    
                       OR WHENEVER (TEMP .A. BLANKS) .E. 0                                        *114 LM00194    
                            WHENEVER (.NOT.DECSW).AND.(TEMP.A.$YYYYYY$).E.0                       *115 LM00195    
                                 VALUE = VALUE+1K5+SIGN*BCOCT.(TEMP)                              *116 LM00196    
                            OTHERWISE                                                             *117 LM00197    
                                 VALUE = VALUE+1K5+SIGN*BCDEC.(TEMP)                              *118 LM00198    
                            END OF CONDITIONAL                                                    *119 LM00199    
                            DECSW = 0B                                                            *120 LM00200    
                            SIGN = 1                                                              *121 LM00201    
                       OTHERWISE                                                                  *122 LM00202    
      NAMED                 NAMESW = 1B                                                           *123 LM00203    
                            OLDNAM = LINE                                                         *124 LM00204    
                            VALUE = VALUE+1K5+SIGN*VAL.(LINE,CODE)                                *125 LM00205    
                            TYPE = TYPE .V. CODE                                                  *126 LM00206    
                            DECSW = 0B                                                            *127 LM00207    
                            SIGN = 1                                                              *128 LM00208    
                       END OF CONDITIONAL                                                         *129 LM00209    
      LOOP2       CONTINUE                                                                        *130 LM00210    
                                                                                                       LM00211    
                      ALL DONE WITH LINE, DETERMINE TYPE OF OUTPUT                                     LM00212    
                                                                                                       LM00213    
      EMPTY       VALUE = VALUE .A. 77777K                                                        *131 LM00214    
                                                                                                       LM00215    
                      IF SYSTEM IS NOW RUNNING, GET CONTENTS OF CELL                                   LM00216    
                                                                                                       LM00217    
                  WHENEVER SYSSW                                                                  *132 LM00218    
                       WORD = GLOC.(VALUE)                                                        *133 LM00219    
                       RESULT(2) = 575757575760K                                                  *134 LM00220    
                       RESULT(3) = OCLBC.(WORD)                                                   *135 LM00221    
                       RESULT(4) = OCRBC.(WORD)                                                   *136 LM00222    
                  OTHERWISE                                                                       *137 LM00223    
                       RESULT(2) = NULLS                                                          *138 LM00224    
                       RESULT(3) = NULLS                                                          *139 LM00225    
                       RESULT(4) = NULLS                                                          *140 LM00226    
                  END OF CONDITIONAL                                                              *141 LM00227    
                  WHENEVER NAMESW                                                                 *142 LM00228    
                       WHENEVER DECSW                                                             *143 LM00229    
                            RESULT(1) = BZEL.(DERBC.(VALUE))                                      *144 LM00230    
                       OTHERWISE                                                                  *145 LM00231    
                            RESULT(1) = OCABC.(VALUE)                                             *146 LM00232    
                       END OF CONDITIONAL                                                         *147 LM00233    
                                                                                                       LM00234    
                      PICK UP TYPE CODE AND CONVERT IT                                                 LM00235    
                                                                                                       LM00236    
                       THROUGH LOOP3, FOR I = 0,1,(I.G.TYPMAX)                                    *148 LM00237    
                            WHENEVER ((TYPE.RS.I).A.1K) .NE. 0,                                   *149 LM00238    
                1                RESULT(0) = (RESULT(0).LS.6).V.TYPCOD(I)                         *149 LM00239    
      LOOP3            CONTINUE                                                                   *150 LM00240    
                                                                                                       LM00241    
                      PRINT THE RESULTING VALUE                                                        LM00242    
                                                                                                       LM00243    
                       PRMESS.(RESULT(0),RESULT(1),RESULT(2),                                     *151 LM00244    
                1           RESULT(3),RESULT(4))                                                  *151 LM00245    
                  OTHERWISE                                                                       *152 LM00246    
                                                                                                       LM00247    
                      ONLY NUMBERS GIVEN, RETURN NAME                                                  LM00248    
                                                                                                       LM00249    
                                                                                                       LM00250    
                      CLASSIFY NUMBER AS TO COMMON SYMBOL OR NOT                                       LM00251    
                                                                                                       LM00252    
                       WHENEVER (VALUE.G.LOWCOM) .OR. (VALUE.L.62K)                               *153 LM00253    
                            VALUE = 4K6 .V. VALUE                                                 *154 LM00254    
                       OTHERWISE                                                                  *155 LM00255    
                            VALUE = 1K6 .V. VALUE                                                 *156 LM00256    
                       END OF CONDITIONAL                                                         *157 LM00257    
                                                                                                       LM00258    
                      FIND NEAREST MATCH OF SAME TYPE                                                  LM00259    
                                                                                                       LM00260    
                       RESULT(0) = NAM.(VALUE)                                                    *158 LM00261    
                       VALUE = DELTA .A. 77777K                                                   *159 LM00262    
                       WHENEVER DECSW                                                             *160 LM00263    
                            RESULT(1) = BZEL.(DERBC.(VALUE))                                      *161 LM00264    
                       OTHERWISE                                                                  *162 LM00265    
                            RESULT(1) = OCABC.(VALUE)                                             *163 LM00266    
                       END OF CONDITIONAL                                                         *164 LM00267    
                       PRMESS.(RESULT(0),RESULT(1),RESULT(2),                                     *165 LM00268    
                1           RESULT(3),RESULT(4))                                                  *165 LM00269    
                  END OF CONDITIONAL                                                              *166 LM00270    
                                                                                                       LM00271    
                      GET ANOTHER INPUT LINE                                                           LM00272    
                                                                                                       LM00273    
                  TRANSFER TO INPUT                                                               *167 LM00274    
                                                                                                       LM00275    
                      FILE ERRORS, GIVE UP                                                             LM00276    
                                                                                                       LM00277    
      ERR1        PRNTER.                                                                         *168 LM00278    
                  DORMNT.                                                                         *169 LM00279    
                                                                                                       LM00280    
                      ERROR ON SYSTEM SYMBOL TABLE, ANNOUNCE IT                                        LM00281    
                                                                                                       LM00282    
      NOSYM       PRNTER.                                                                         *170 LM00283    
      NOSYM1      PRMESS.($NO COMMON SYMBOLS ALLOWED$)                                            *171 LM00284    
                  USRFIL.                                                                         *172 LM00285    
                  TRANSFER TO RIP                                                                 *173 LM00286    
                                                                                                       LM00287    
                      EXIT ROUTINES                                                                    LM00288    
                                                                                                       LM00289    
      BEATIT      RESETF.                                                                         *174 LM00290    
                  USRFIL.                                                                         *175 LM00291    
                  CHNCOM.(0)                                                                      *176 LM00292    
                                                                                                       LM00293    
                  INTERNAL FUNCTION (X,Y)                                                         *177 LM00294    
                  ENTRY TO VAL.                                                                   *178 LM00295    
                  IN1 = X                                                                         *179 LM00296    
                  THROUGH LOOP4, FOR I1 = 1,1,(I1.G.INDX1)                                        *180 LM00297    
                       WHENEVER TAB11(TAB11+I1) .E. IN1                                           *181 LM00298    
                            Y = TAB21(TAB21+I1) .RS. 18                                           *182 LM00299    
                            FUNCTION RETURN TAB21(TAB21+I1) .A. 77777K                            *183 LM00300    
                       END OF CONDITIONAL                                                         *184 LM00301    
      LOOP4       CONTINUE                                                                        *185 LM00302    
                                                                                                       LM00303    
                      SYMBOL NOT FOUND, GRIPE                                                          LM00304    
                                                                                                       LM00305    
                  PRMESS.(IN1,$ NOT FOUND$)                                                       *186 LM00306    
                  TRANSFER TO READY                                                               *187 LM00307    
                  END OF FUNCTION                                                                 *188 LM00308    
                                                                                                       LM00309    
                  INTERNAL FUNCTION (X)                                                           *189 LM00310    
                  ENTRY TO NAM.                                                                   *190 LM00311    
                  IN1 = X .A. 77777K                                                              *191 LM00312    
                  IN2 = X .RS. 18                                                                 *192 LM00313    
                  DELTA = 1K5                                                                     *193 LM00314    
                  THROUGH LOOP5, FOR I1 = 1,1,(I1.G.INDX1)                                        *194 LM00315    
                       WHENEVER (TAB21(TAB21+I1) .RS. 18) .E. IN2                                 *195 LM00316    
                            TSTVAL = TAB21(TAB21+I1) .A. 77777K                                   *196 LM00317    
                            WHENEVER (TSTVAL.LE.IN1).AND.                                         *197 LM00318    
                1           ((IN1-TSTVAL).L.DELTA)                                                *197 LM00319    
                                 CNAM = TAB11(TAB11+I1)                                           *198 LM00320    
                                 DELTA = IN1 - TSTVAL                                             *199 LM00321    
                            END OF CONDITIONAL                                                    *200 LM00322    
                       END OF CONDITIONAL                                                         *201 LM00323    
      LOOP5       CONTINUE                                                                        *202 LM00324    
                  FUNCTION RETURN CNAM                                                            *203 LM00325    
                  END OF FUNCTION                                                                 *204 LM00326    
                                                                                                       LM00327    
                  END OF PROGRAM                                                                  *205 LM00328    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01546 TRANSFER VECTOR LENGTH  00036 PROGRAM BEGINS    00261
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BEATIT 00045   4        ERR1   00051   4        LOOP4  00040   4        NULLS  00157 A 1        TAB11  00170 A 1  
      BLANKS 00063 A 1        FENCE  00073 A 1        LOOP5  00040   4        OLDNAM 00160   1        TAB21  00171 A 1  
      BUFF1  00064 A 1        I1     00074   1        LOWCOM 00152 A 1        READ1  00057   4        TEMP   00172   1  
      BUFF2  00065 A 1        IN1    00075   1        MZE    00153 A 1        READ2  00060   4        TMAX   00173 A 1  
      CNAM   00066   1        IN2    00076   1        N1     00042 A 1        READY  00061   4        TOP    00174   1  
      CODE   00067   1        INDX1  00077   1        NAMED  00053   4        RESULT 00165 A 1        TSTVAL 00175   1  
      DECSW  00070   2        INPUT  00052   4        NAMESW 00154   2        RIP    00062   4        TYPCOD 00200 A 1  
      DELTA  00071   1        I      00100   1        NERR0  00054   4        SIGN   00166   1        TYPE   00201   1  
      EMPTY  00046   4        LINE   00151 A 1        NOSYM1 00055   4        SNAME  00044 A 1        TYPMAX 00202 A 1  
      EOF1   00047   4        LOOP1  00040   4        NOSYM  00056   4        STOMAP 00041   1        VALUE  00203   1  
      EOF2   00050   4        LOOP2  00040   4        NPLUS1 00155   1        SYMTB  00043   1        WORD   00204   1  
      EOFCT  00072   1        LOOP3  00040   4        N      00156   1        SYSSW  00167   2                          
0FUNCTION DICTIONARY    
      BCDEC  00000   1        BCOCT  00001   1        BFCLOS 00002   1        BFOPEN 00003   1        BFREAD 00004   1  
      BZEL   00005   1        CHNCOM 00006   1        COMARG 00007   1        DERBC  00010   1        DORMNT 00011   1  
      EXIT   00012   1        FERRTN 00013   1        GETBUF 00014   1        GLOC   00015   1        GTWDBI 00016   1  
      GTWDB  00017   1        .SETUP 00020   1        OCABC  00021   1        OCLBC  00022   1        OCRBC  00023   1  
      PRMESS 00024   1        PRNTER 00025   1        RESETF 00026   1        RJUST  00027   1        SETBRK 00030   1  
      SMEM   00031   1        TSSFIL 00032   1        USRFIL 00033   1        WHOAMI 00034   1        ZEL    00035   1  
      NAM    00036   1        VAL    00037   1                                                                          
0ABSOLUTE CONSTANTS     
 00243 -066445246060     00253 -204546636026     00235 +246060606060     00233 +214343466625     00237 -042246436260    
 00240 -044645606270     00241 -054660234644     00221 +000000000062     00252 -175757575760     00225 +000000077777    
 00226 +000000100000     00256 -307070707070     00220 +000000000054     00224 +000000006161     00217 +000000000040    
 00215 +000000000020     00251 -175757575757     00246 -112521247060     00232 +000004000000     00216 +000000000022    
 00214 +000000000016     00254 -232122432560     00245 -066660462660     00244 -066525512643     00211 +000000000004    
 00257 -344421314534     00230 +000001000000     00231 +000002000000     00212 +000000000005     00236 -034666256263    
 00207 +000000000002     00213 +000000000006     00222 +000000000077     00227 +000000770000     00250 -116060606060    
 00223 +000000000660     00210 +000000000003     00205 +000000000000     00242 -064421473460     00260 -344501606263    
 00255 -244760450160     00247 -116051254362     00206 +000000000001     00234 +233000000000                            
0STATEMENT DICTIONARY   
 00045 TXL -301333001332       00046 TXL -301143001140       00047 TXL -300610000604       00050 TXL -300752000751      
 00051 TXL -301320001317       00052 TXL -300760000756       00053 TXL -301114001112       00054 TXL -300611000610      
 00055 TXL -301330001322       00056 TXL -301322001321       00057 TXL -300435000432       00060 TXL -300643000634      
 00061 TXL -300756000754       00062 TXL -300754000752                                                                  
0PROGRAM    
                 N'R                                                                001  LM00013
                 B'N NAMESW,DECSW,SYSSW                                             002  LM00014
                 D'N LINE(40)                                                       003  LM00015
                 D'N BUFF1(0),BUFF2(0)                                              004  LM00016
                 D'N TAB11(0),TAB21(0)                                              005  LM00017
                 V'S N1 = 0,$STOMAP$                                                006  LM00019
 00261 TSX +0 07400 4 00020    00041     -2 26346 4 42147    00042     +0 00000 0 00000                                 
                 E'E (STOMAP,N1(1))                                                 007  LM00020
                 V'S SNAME = $COM000$,$ SYMTB$                                      008  LM00021
 00043     -2 06270 4 46322    00044     +2 34644 0 00000                                                               
                 E'E (SYMTB,SNAME(1))                                               009  LM00022
                 V'S RESULT = 0,0,0,0,0                                             010  LM00023
 00161     +0 00000 0 00000    00162     +0 00000 0 00000    00163     +0 00000 0 00000    00164     +0 00000 0 00000   
 00165     +0 00000 0 00000                                                                                             
                 V'S FENCE = 777777777777K                                          011  LM00025
 00073     -3 77777 7 77777                                                                                             
                 V'S LOWCOM = 77461K                                                012  LM00026
 00152     +0 00000 0 77461                                                                                             
                 V'S MZE = - 0                                                      013  LM00027
 00153     -0 00000 0 00000                                                                                             
                 V'S TYPCOD = $00000F$,$00000E$,$00000C$                            014  LM00028
 00176     +0 00000 0 00023    00177     +0 00000 0 00025    00200     +0 00000 0 00026                                 
                 V'S TMAX = 1024                                                    015  LM00029
 00173     +0 00000 0 02000                                                                                             
                 V'S TYPMAX = 3                                                     016  LM00030
 00202     +0 00000 0 00003                                                                                             
                 V'S BLANKS = $      $                                              017  LM00031
 00063     -2 06060 6 06060                                                                                             
                 V'S NULLS = 575757575757K                                          018  LM00032
 00157     -1 75757 5 75757                                                                                             
                 W'R COMARG.(1,N1) .E. FENCE                                        019  LM00036
 00262 TSX +0 07400 4 00007    00263 TXH +3 00000 0 00206    00264 TXH +3 00000 0 00042    00265 SUB +0 40200 0 00073   
 00266 TNZ -0 10000 0 00276                                                                                             
                      PRMESS.($R RELSUP N1 (N1 STOMAP)$)                            020  LM00037
 00267 TSX +0 07400 4 00024    00270 TXH +3 00000 0 00247    00271 TXH +3 00000 0 00255    00272 TXH +3 00000 0 00260   
 00273 TXH +3 00000 0 00242                                                                                             
                      CHNCOM.(0)                                                    021  LM00038
 00274 TSX +0 07400 4 00006    00275 TXH +3 00000 0 00205                                                               
                 E'L                                                                022  LM00039
                 WHOAMI.(LINE(3)...3)                                               023  LM00043
 00276 TSX +0 07400 4 00034    00277 TIX +2 00210 0 00146                                                               
                 W'R (LINE(1) .E. N1)                                               024  LM00044
 00300 CLA +0 50000 0 00150    00301 SUB +0 40200 0 00042    00302 TNZ -0 10000 0 00306                                 
                      SYSSW = 1B                                                    025  LM00045
 00303 CLA +0 50000 0 00206    00304 STO +0 60100 0 00167                                                               
                 O'E                                                                026  LM00046
 00305 TRA +0 02000 0 00310                                                                                             
                      SYSSW = 0B                                                    027  LM00047
 00306 CLA +0 50000 0 00205    00307 STO +0 60100 0 00167                                                               
                 E'L                                                                028  LM00048
                 SETBRK.(BEATIT)                                                    029  LM00049
 00310 TSX +0 07400 4 00030    00311 TXH +3 00000 0 00045                                                               
                 FERRTN.(ERR1)                                                      030  LM00053
 00312 TSX +0 07400 4 00013    00313 TXH +3 00000 0 00051                                                               
                 INDX1 = 1                                                          031  LM00057
 00314 CLA +0 50000 0 00206    00315 STO +0 60100 0 00077                                                               
                 GETBUF.(TAB11,TMAX)                                                032  LM00058
 00316 TSX +0 07400 4 00014    00317 TXH +3 00000 0 00170    00320 TXH +3 00000 0 00173                                 
                 GETBUF.(TAB21,TMAX)                                                033  LM00059
 00321 TSX +0 07400 4 00014    00322 TXH +3 00000 0 00171    00323 TXH +3 00000 0 00173                                 
                 TOP = GETBUF.(BUFF1,432)                                           034  LM00063
 00324 TSX +0 07400 4 00014    00325 TXH +3 00000 0 00064    00326 TXH +3 00000 0 00223    00327 STO +0 60100 0 00174   
                 GETBUF.(BUFF2,432)                                                 035  LM00064
 00330 TSX +0 07400 4 00014    00331 TXH +3 00000 0 00065    00332 TXH +3 00000 0 00223                                 
                 BFOPEN.($R$,N1,STOMAP,BUFF1(BUFF1+432),BUFF2(BUFF2+432),           036  LM00065
                1     MZE,ERR1)                                                     036  LM00066
 00333 CLA +0 50000 0 00065    00334 ADD +0 40000 0 00223    00335 SUB +0 40200 0 00336    00336 TXH +3 00000 0 00065   
 00337 STA +0 62100 0 00352    00340 CLA +0 50000 0 00064    00341 ADD +0 40000 0 00223    00342 SUB +0 40200 0 00343   
 00343 TXH +3 00000 0 00064    00344 STA +0 62100 0 00351    00345 TSX +0 07400 4 00003    00346 TXH +3 00000 0 00250   
 00347 TXH +3 00000 0 00042    00350 TXH +3 00000 0 00041    00351 TXH +3 00000 0 00000    00352 TXH +3 00000 0 00000   
 00353 TXH +3 00000 0 00153    00354 TXH +3 00000 0 00051                                                               
                 SNAME = SNAME .V. (N1.A.770000K)                                   037  LM00067
 00355 CAL -0 50000 0 00042    00356 ANA -0 32000 0 00227    00357 ORA -0 50100 0 00044    00360 SLW +0 60200 0 00044   
                 BFREAD.(N1,STOMAP,N...1,EOF1,EOFCT,ERR1)                           038  LM00071
 00361 TSX +0 07400 4 00004    00362 TXH +3 00000 0 00042    00363 TXH +3 00000 0 00041    00364 TIX +2 00206 0 00156   
 00365 TXH +3 00000 0 00047    00366 TXH +3 00000 0 00072    00367 TXH +3 00000 0 00051                                 
                 N = N .A. 77K                                                      039  LM00072
 00370 CAL -0 50000 0 00156    00371 ANA -0 32000 0 00222    00372 SLW +0 60200 0 00156                                 
                 NPLUS1 = N + 1                                                     040  LM00073
 00373 CLA +0 50000 0 00156    00374 ADD +0 40000 0 00206    00375 STO +0 60100 0 00155                                 
                 BFREAD.(N1,STOMAP,LINE(N)...NPLUS1,EOF1,EOFCT,ERR1)                041  LM00074
 00376 CLA +0 50000 0 00156    00377 SUB +0 40200 0 00400    00400 TXH +3 00000 0 00151    00401 STA +0 62100 0 00405   
 00402 TSX +0 07400 4 00004    00403 TXH +3 00000 0 00042    00404 TXH +3 00000 0 00041    00405 TIX +2 00155 0 00000   
 00406 TXH +3 00000 0 00047    00407 TXH +3 00000 0 00072    00410 TXH +3 00000 0 00051                                 
                 N = LINE(0) .A. 77K                                                042  LM00075
 00411 CAL -0 50000 0 00151    00412 ANA -0 32000 0 00222    00413 SLW +0 60200 0 00156                                 
                 NPLUS1 = N + 1                                                     043  LM00076
 00414 CLA +0 50000 0 00156    00415 ADD +0 40000 0 00206    00416 STO +0 60100 0 00155                                 
                 BFREAD.(N1,STOMAP,LINE(N)...NPLUS1,EOF1,EOFCT,ERR1)                044  LM00077
 00417 CLA +0 50000 0 00156    00420 SUB +0 40200 0 00421    00421 TXH +3 00000 0 00151    00422 STA +0 62100 0 00426   
 00423 TSX +0 07400 4 00004    00424 TXH +3 00000 0 00042    00425 TXH +3 00000 0 00041    00426 TIX +2 00155 0 00000   
 00427 TXH +3 00000 0 00047    00430 TXH +3 00000 0 00072    00431 TXH +3 00000 0 00051                                 
      READ1      N = LINE(0) .A. 77K                                                045  LM00081
 00432 CAL -0 50000 0 00151    00433 ANA -0 32000 0 00222    00434 SLW +0 60200 0 00156                                 
                 NPLUS1 = N + 1                                                     046  LM00082
 00435 CLA +0 50000 0 00156    00436 ADD +0 40000 0 00206    00437 STO +0 60100 0 00155                                 
                 BFREAD.(N1,STOMAP,LINE(N)...NPLUS1,EOF1,EOFCT,ERR1)                047  LM00083
 00440 CLA +0 50000 0 00156    00441 SUB +0 40200 0 00442    00442 TXH +3 00000 0 00151    00443 STA +0 62100 0 00447   
 00444 TSX +0 07400 4 00004    00445 TXH +3 00000 0 00042    00446 TXH +3 00000 0 00041    00447 TIX +2 00155 0 00000   
 00450 TXH +3 00000 0 00047    00451 TXH +3 00000 0 00072    00452 TXH +3 00000 0 00051                                 
                 W'R N .L. 6, T'O READ1                                             048  LM00084
 00453 CLA +0 50000 0 00156    00454 SUB +0 40200 0 00213    00455 TZE +0 10000 0 00460    00456 TPL +0 12000 0 00460   
 00457 TRA +0 02000 0 00057                                                                                             
                 W'R LINE(N-2) .NE. BLANKS                                          049  LM00088
 00460 CLA +0 50000 0 00156    00461 SUB +0 40200 0 00207    00462 PAX +0 73400 1 00000    00463 CLA +0 50000 1 00151   
 00464 SUB +0 40200 0 00063    00465 TZE +0 10000 0 00603                                                               
                      W'R LINE(N-1) .E. $LOWEST$                                    050  LM00092
 00466 CLA +0 50000 0 00156    00467 SUB +0 40200 0 00206    00470 PAX +0 73400 1 00000    00471 CLA +0 50000 1 00151   
 00472 SUB +0 40200 0 00236    00473 TNZ -0 10000 0 00506                                                               
                           LOWCOM = BCOCT.(LINE(N-5))                               051  LM00093
 00474 CLA +0 50000 0 00156    00475 SUB +0 40200 0 00212    00476 SUB +0 40200 0 00477    00477 TXH +3 00000 0 00151   
 00500 STA +0 62100 0 00502    00501 TSX +0 07400 4 00001    00502 TXH +3 00000 0 00000    00503 STO +0 60100 0 00152   
                           T'O EOF1                                                 052  LM00094
 00504 TRA +0 02000 0 00047                                                                                             
                      O'R LINE(N-1) .E. BLANKS                                      053  LM00095
 00505 TRA +0 02000 0 00521    00506 CLA +0 50000 0 00156    00507 SUB +0 40200 0 00206    00510 PAX +0 73400 1 00000   
 00511 CLA +0 50000 1 00151    00512 SUB +0 40200 0 00063    00513 TNZ -0 10000 0 00517                                 
                           IN2 = 2K6                                                054  LM00096
 00514 CLA +0 50000 0 00231    00515 STO +0 60100 0 00076                                                               
                      O'E                                                           055  LM00097
 00516 TRA +0 02000 0 00521                                                                                             
                           IN2 = 1K6                                                056  LM00098
 00517 CLA +0 50000 0 00230    00520 STO +0 60100 0 00076                                                               
                      E'L                                                           057  LM00099
                      W'R LINE(N-2) .E. 0                                           058  LM00103
 00521 CLA +0 50000 0 00156    00522 SUB +0 40200 0 00207    00523 PAX +0 73400 1 00000    00524 CLA +0 50000 1 00151   
 00525 SUB +0 40200 0 00205    00526 TNZ -0 10000 0 00532                                                               
                           IN1 = $(MAIN)$                                           059  LM00104
 00527 CLA +0 50000 0 00257    00530 STO +0 60100 0 00075                                                               
                      O'E                                                           060  LM00105
 00531 TRA +0 02000 0 00542                                                                                             
                           IN1 = RJUST.(LINE(N-2))                                  061  LM00106
 00532 CLA +0 50000 0 00156    00533 SUB +0 40200 0 00207    00534 SUB +0 40200 0 00535    00535 TXH +3 00000 0 00151   
 00536 STA +0 62100 0 00540    00537 TSX +0 07400 4 00027    00540 TXH +3 00000 0 00000    00541 STO +0 60100 0 00075   
                      E'L                                                           062  LM00107
                      IN2 = IN2 .V. BCOCT.(LINE(N-4))                               063  LM00111
 00542 CLA +0 50000 0 00156    00543 SUB +0 40200 0 00211    00544 SUB +0 40200 0 00545    00545 TXH +3 00000 0 00151   
 00546 STA +0 62100 0 00550    00547 TSX +0 07400 4 00001    00550 TXH +3 00000 0 00000    00551 STO +0 60100 0 01543   
 00552 CAL -0 50000 0 00076    00553 ORA -0 50100 0 01543    00554 SLW +0 60200 0 00076                                 
                      TAB11(TAB11+INDX1) = IN1                                      064  LM00115
 00555 CLA +0 50000 0 00170    00556 ADD +0 40000 0 00077    00557 PAX +0 73400 1 00000    00560 CLA +0 50000 0 00075   
 00561 STO +0 60100 1 00170                                                                                             
                      TAB21(TAB21+INDX1) = IN2                                      065  LM00116
 00562 CLA +0 50000 0 00171    00563 ADD +0 40000 0 00077    00564 PAX +0 73400 1 00000    00565 CLA +0 50000 0 00076   
 00566 STO +0 60100 1 00171                                                                                             
                      INDX1 = INDX1 + 1                                             066  LM00117
 00567 CLA +0 50000 0 00077    00570 ADD +0 40000 0 00206    00571 STO +0 60100 0 00077                                 
                      W'R INDX1 .G. TMAX                                            067  LM00118
 00572 CLA +0 50000 0 00077    00573 SUB +0 40200 0 00173    00574 TZE +0 10000 0 00603    00575 TMI -0 12000 0 00603   
                           PRMESS.($OVERFLOW OF TABLE$)                             068  LM00119
 00576 TSX +0 07400 4 00024    00577 TXH +3 00000 0 00244    00600 TXH +3 00000 0 00245    00601 TXH +3 00000 0 00254   
                           T'O NOSYM1                                               069  LM00120
 00602 TRA +0 02000 0 00055                                                                                             
                      E'L                                                           070  LM00121
                 E'L                                                                071  LM00122
                 T'O READ1                                                          072  LM00123
 00603 TRA +0 02000 0 00057                                                                                             
      EOF1       BFCLOS.(N1,STOMAP,NERR0)                                           073  LM00127
 00604 TSX +0 07400 4 00002    00605 TXH +3 00000 0 00042    00606 TXH +3 00000 0 00041    00607 TXH +3 00000 0 00054   
      NERR0      TSSFIL.                                                            074  LM00131
 00610 TSX +0 07400 4 00032                                                                                             
                 BFOPEN.($R$,SNAME,SYMTB,BUFF1(BUFF1+432),BUFF2(BUFF2+432),         075  LM00132
                1     MZE,NOSYM)                                                    075  LM00133
 00611 CLA +0 50000 0 00065    00612 ADD +0 40000 0 00223    00613 SUB +0 40200 0 00614    00614 TXH +3 00000 0 00065   
 00615 STA +0 62100 0 00630    00616 CLA +0 50000 0 00064    00617 ADD +0 40000 0 00223    00620 SUB +0 40200 0 00621   
 00621 TXH +3 00000 0 00064    00622 STA +0 62100 0 00627    00623 TSX +0 07400 4 00003    00624 TXH +3 00000 0 00250   
 00625 TXH +3 00000 0 00044    00626 TXH +3 00000 0 00043    00627 TXH +3 00000 0 00000    00630 TXH +3 00000 0 00000   
 00631 TXH +3 00000 0 00153    00632 TXH +3 00000 0 00056                                                               
                 USRFIL.                                                            076  LM00134
 00633 TSX +0 07400 4 00033                                                                                             
      READ2      BFREAD.(SNAME,SYMTB,LINE(14)...14,EOF2,EOFCT,NOSYM)                077  LM00138
 00634 TSX +0 07400 4 00004    00635 TXH +3 00000 0 00044    00636 TXH +3 00000 0 00043    00637 TIX +2 00214 0 00133   
 00640 TXH +3 00000 0 00050    00641 TXH +3 00000 0 00072    00642 TXH +3 00000 0 00056                                 
                 T'H LOOP1, FOR I = 14,-3,(I.L.2)                                   078  LM00142
 00643 CLA +0 50000 0 00214    00644 STO +0 60100 0 00100    00645 TRA +0 02000 0 00651    00646 CLS +0 50200 0 00210   
 00647 ADD +0 40000 0 00100    00650 STO +0 60100 0 00100    00651 CLA +0 50000 0 00100    00652 SUB +0 40200 0 00207   
 00653 TZE +0 10000 0 00655    00654 TMI -0 12000 0 00750                                                               
                      W'R LINE(I-1) .NE. BLANKS                                     079  LM00143
 00655 CLA +0 50000 0 00100    00656 SUB +0 40200 0 00206    00657 PAX +0 73400 1 00000    00660 CLA +0 50000 1 00151   
 00661 SUB +0 40200 0 00063    00662 TZE +0 10000 0 00747                                                               
                           IN1 = RJUST.((LINE(I-1).LS.18) .V.                       080  LM00144
                1               (LINE(I-2).RS.18))                                  080  LM00145
 00663 CLA +0 50000 0 00100    00664 SUB +0 40200 0 00207    00665 PAX +0 73400 1 00000    00666 CAL -0 50000 0 00216   
 00667 STA +0 62100 0 00671    00670 CAL -0 50000 1 00151    00671 LGR -0 76500 0 00000    00672 SLW +0 60200 0 01543   
 00673 CLA +0 50000 0 00100    00674 SUB +0 40200 0 00206    00675 PAX +0 73400 1 00000    00676 CAL -0 50000 0 00216   
 00677 STA +0 62100 0 00701    00700 CAL -0 50000 1 00151    00701 ALS +0 76700 0 00000    00702 ORA -0 50100 0 01543   
 00703 SLW +0 60200 0 01543    00704 TSX +0 07400 4 00027    00705 TXH +3 00000 0 01543    00706 STO +0 60100 0 00075   
                           IN2 = 4K6 .V. BCOCT.(LINE(I))                            081  LM00146
 00707 CLA +0 50000 0 00100    00710 SUB +0 40200 0 00711    00711 TXH +3 00000 0 00151    00712 STA +0 62100 0 00714   
 00713 TSX +0 07400 4 00001    00714 TXH +3 00000 0 00000    00715 STO +0 60100 0 01543    00716 CAL -0 50000 0 00232   
 00717 ORA -0 50100 0 01543    00720 SLW +0 60200 0 00076                                                               
                           TAB11(TAB11+INDX1) = IN1                                 082  LM00147
 00721 CLA +0 50000 0 00170    00722 ADD +0 40000 0 00077    00723 PAX +0 73400 1 00000    00724 CLA +0 50000 0 00075   
 00725 STO +0 60100 1 00170                                                                                             
                           TAB21(TAB21+INDX1) = IN2                                 083  LM00148
 00726 CLA +0 50000 0 00171    00727 ADD +0 40000 0 00077    00730 PAX +0 73400 1 00000    00731 CLA +0 50000 0 00076   
 00732 STO +0 60100 1 00171                                                                                             
                           INDX1 = INDX1 + 1                                        084  LM00149
 00733 CLA +0 50000 0 00077    00734 ADD +0 40000 0 00206    00735 STO +0 60100 0 00077                                 
                           W'R INDX1 .G. TMAX                                       085  LM00150
 00736 CLA +0 50000 0 00077    00737 SUB +0 40200 0 00173    00740 TZE +0 10000 0 00747    00741 TMI -0 12000 0 00747   
                                PRMESS.($OVERFLOW OF TABLE$)                        086  LM00151
 00742 TSX +0 07400 4 00024    00743 TXH +3 00000 0 00244    00744 TXH +3 00000 0 00245    00745 TXH +3 00000 0 00254   
                                T'O EOF2                                            087  LM00152
 00746 TRA +0 02000 0 00050                                                                                             
                           E'L                                                      088  LM00153
                      E'L                                                           089  LM00154
      LOOP1      C'E                                                                090  LM00155
 00747 TRA +0 02000 0 00646                                                                                             
                 T'O READ2                                                          091  LM00156
 00750 TRA +0 02000 0 00060                                                                                             
      EOF2       RESETF.                                                            092  LM00160
 00751 TSX +0 07400 4 00026                                                                                             
      RIP        SMEM.(TOP)                                                         093  LM00161
 00752 TSX +0 07400 4 00031    00753 TXH +3 00000 0 00174                                                               
      READY      PRMESS.($READY$)                                                   094  LM00162
 00754 TSX +0 07400 4 00024    00755 TXH +3 00000 0 00246                                                               
      INPUT      SIGN = 1                                                           095  LM00166
 00756 CLA +0 50000 0 00206    00757 STO +0 60100 0 00166                                                               
                 DECSW = 0B                                                         096  LM00167
 00760 CLA +0 50000 0 00205    00761 STO +0 60100 0 00070                                                               
                 NAMESW = 0B                                                        097  LM00168
 00762 CLA +0 50000 0 00205    00763 STO +0 60100 0 00154                                                               
                 TYPE = 0                                                           098  LM00169
 00764 CLA +0 50000 0 00205    00765 STO +0 60100 0 00201                                                               
                 VALUE = 0                                                          099  LM00170
 00766 CLA +0 50000 0 00205    00767 STO +0 60100 0 00203                                                               
                 RESULT(0) = 575757575757K                                          100  LM00171
 00770 CLA +0 50000 0 00251    00771 STO +0 60100 0 00165                                                               
                 GTWDBI.                                                            101  LM00175
 00772 TSX +0 07400 4 00016                                                                                             
                 T'H LOOP2, FOR I = 1,1,(I.G.14)                                    102  LM00179
 00773 CLA +0 50000 0 00206    00774 STO +0 60100 0 00100    00775 TRA +0 02000 0 01001    00776 CLA +0 50000 0 00100   
 00777 ADD +0 40000 0 00206    01000 STO +0 60100 0 00100    01001 CLA +0 50000 0 00100    01002 SUB +0 40200 0 00214   
 01003 TZE +0 10000 0 01005    01004 TPL +0 12000 0 01140                                                               
                      GTWDB.(LINE,EMPTY)                                            103  LM00180
 01005 TSX +0 07400 4 00017    01006 TXH +3 00000 0 00151    01007 TXH +3 00000 0 00046                                 
                      TEMP = ZEL.(LINE)                                             104  LM00184
 01010 TSX +0 07400 4 00035    01011 TXH +3 00000 0 00151    01012 STO +0 60100 0 00172                                 
                      W'R TEMP .E. $00000+$                                         105  LM00185
 01013 CLA +0 50000 0 00172    01014 SUB +0 40200 0 00215    01015 TNZ -0 10000 0 01021                                 
                           SIGN = 1                                                 106  LM00186
 01016 CLA +0 50000 0 00206    01017 STO +0 60100 0 00166                                                               
                      O'R TEMP .E. $00000-$                                         107  LM00187
 01020 TRA +0 02000 0 01137    01021 CLA +0 50000 0 00172    01022 SUB +0 40200 0 00217    01023 TNZ -0 10000 0 01027   
                           SIGN = -1                                                108  LM00188
 01024 CLS +0 50200 0 00206    01025 STO +0 60100 0 00166                                                               
                      O'R TEMP .E. $0000//$                                         109  LM00189
 01026 TRA +0 02000 0 01137    01027 CLA +0 50000 0 00172    01030 SUB +0 40200 0 00224    01031 TNZ -0 10000 0 01035   
                           DECSW = 1B                                               110  LM00190
 01032 CLA +0 50000 0 00206    01033 STO +0 60100 0 00070                                                               
                      O'R TEMP .E. $00000*$                                         111  LM00191
 01034 TRA +0 02000 0 01137    01035 CLA +0 50000 0 00172    01036 SUB +0 40200 0 00220    01037 TNZ -0 10000 0 01044   
                           LINE = OLDNAM                                            112  LM00192
 01040 CLA +0 50000 0 00160    01041 STO +0 60100 0 00151                                                               
                           T'O NAMED                                                113  LM00193
 01042 TRA +0 02000 0 00053                                                                                             
                      O'R (TEMP .A. BLANKS) .E. 0                                   114  LM00194
 01043 TRA +0 02000 0 01137    01044 CAL -0 50000 0 00172    01045 ANA -0 32000 0 00063    01046 SLW +0 60200 0 01543   
 01047 CLA +0 50000 0 01543    01050 SUB +0 40200 0 00205    01051 TNZ -0 10000 0 01112                                 
                           W'R (.NOT.DECSW).AND.(TEMP.A.$YYYYYY$).E.0               115  LM00195
 01052 CAL -0 50000 0 00172    01053 ANA -0 32000 0 00256    01054 SLW +0 60200 0 01543    01055 CLA +0 50000 0 01543   
 01056 SUB +0 40200 0 00205    01057 TNZ -0 10000 0 01074    01060 ZET +0 52000 0 00070    01061 TRA +0 02000 0 01074   
                                VALUE = VALUE+1K5+SIGN*BCOCT.(TEMP)                 116  LM00196
 01062 TSX +0 07400 4 00001    01063 TXH +3 00000 0 00172    01064 XCA +0 13100 0 00000    01065 MPY +0 20000 0 00166   
 01066 STQ -0 60000 0 01543    01067 CLA +0 50000 0 00203    01070 ADD +0 40000 0 00226    01071 ADD +0 40000 0 01543   
 01072 STO +0 60100 0 00203                                                                                             
                           O'E                                                      117  LM00197
 01073 TRA +0 02000 0 01105                                                                                             
                                VALUE = VALUE+1K5+SIGN*BCDEC.(TEMP)                 118  LM00198
 01074 TSX +0 07400 4 00000    01075 TXH +3 00000 0 00172    01076 XCA +0 13100 0 00000    01077 MPY +0 20000 0 00166   
 01100 STQ -0 60000 0 01543    01101 CLA +0 50000 0 00203    01102 ADD +0 40000 0 00226    01103 ADD +0 40000 0 01543   
 01104 STO +0 60100 0 00203                                                                                             
                           E'L                                                      119  LM00199
                           DECSW = 0B                                               120  LM00200
 01105 CLA +0 50000 0 00205    01106 STO +0 60100 0 00070                                                               
                           SIGN = 1                                                 121  LM00201
 01107 CLA +0 50000 0 00206    01110 STO +0 60100 0 00166                                                               
                      O'E                                                           122  LM00202
 01111 TRA +0 02000 0 01137                                                                                             
      NAMED                NAMESW = 1B                                              123  LM00203
 01112 CLA +0 50000 0 00206    01113 STO +0 60100 0 00154                                                               
                           OLDNAM = LINE                                            124  LM00204
 01114 CLA +0 50000 0 00151    01115 STO +0 60100 0 00160                                                               
                           VALUE = VALUE+1K5+SIGN*VAL.(LINE,CODE)                   125  LM00205
 01116 TSX +0 07400 4 00037    01117 TXH +3 00000 0 00151    01120 TXH +3 00000 0 00067    01121 XCA +0 13100 0 00000   
 01122 MPY +0 20000 0 00166    01123 STQ -0 60000 0 01543    01124 CLA +0 50000 0 00203    01125 ADD +0 40000 0 00226   
 01126 ADD +0 40000 0 01543    01127 STO +0 60100 0 00203                                                               
                           TYPE = TYPE .V. CODE                                     126  LM00206
 01130 CAL -0 50000 0 00201    01131 ORA -0 50100 0 00067    01132 SLW +0 60200 0 00201                                 
                           DECSW = 0B                                               127  LM00207
 01133 CLA +0 50000 0 00205    01134 STO +0 60100 0 00070                                                               
                           SIGN = 1                                                 128  LM00208
 01135 CLA +0 50000 0 00206    01136 STO +0 60100 0 00166                                                               
                      E'L                                                           129  LM00209
      LOOP2      C'E                                                                130  LM00210
 01137 TRA +0 02000 0 00776                                                                                             
      EMPTY      VALUE = VALUE .A. 77777K                                           131  LM00214
 01140 CAL -0 50000 0 00203    01141 ANA -0 32000 0 00225    01142 SLW +0 60200 0 00203                                 
                 W'R SYSSW                                                          132  LM00218
 01143 NZT -0 52000 0 00167    01144 TRA +0 02000 0 01161                                                               
                      WORD = GLOC.(VALUE)                                           133  LM00219
 01145 TSX +0 07400 4 00015    01146 TXH +3 00000 0 00203    01147 STO +0 60100 0 00204                                 
                      RESULT(2) = 575757575760K                                     134  LM00220
 01150 CLA +0 50000 0 00252    01151 STO +0 60100 0 00163                                                               
                      RESULT(3) = OCLBC.(WORD)                                      135  LM00221
 01152 TSX +0 07400 4 00022    01153 TXH +3 00000 0 00204    01154 STO +0 60100 0 00162                                 
                      RESULT(4) = OCRBC.(WORD)                                      136  LM00222
 01155 TSX +0 07400 4 00023    01156 TXH +3 00000 0 00204    01157 STO +0 60100 0 00161                                 
                 O'E                                                                137  LM00223
 01160 TRA +0 02000 0 01167                                                                                             
                      RESULT(2) = NULLS                                             138  LM00224
 01161 CLA +0 50000 0 00157    01162 STO +0 60100 0 00163                                                               
                      RESULT(3) = NULLS                                             139  LM00225
 01163 CLA +0 50000 0 00157    01164 STO +0 60100 0 00162                                                               
                      RESULT(4) = NULLS                                             140  LM00226
 01165 CLA +0 50000 0 00157    01166 STO +0 60100 0 00161                                                               
                 E'L                                                                141  LM00227
                 W'R NAMESW                                                         142  LM00228
 01167 NZT -0 52000 0 00154    01170 TRA +0 02000 0 01247                                                               
                      W'R DECSW                                                     143  LM00229
 01171 NZT -0 52000 0 00070    01172 TRA +0 02000 0 01202                                                               
                           RESULT(1) = BZEL.(DERBC.(VALUE))                         144  LM00230
 01173 TSX +0 07400 4 00010    01174 TXH +3 00000 0 00203    01175 STO +0 60100 0 01543    01176 TSX +0 07400 4 00005   
 01177 TXH +3 00000 0 01543    01200 STO +0 60100 0 00164                                                               
                      O'E                                                           145  LM00231
 01201 TRA +0 02000 0 01205                                                                                             
                           RESULT(1) = OCABC.(VALUE)                                146  LM00232
 01202 TSX +0 07400 4 00021    01203 TXH +3 00000 0 00203    01204 STO +0 60100 0 00164                                 
                      E'L                                                           147  LM00233
                      T'H LOOP3, FOR I = 0,1,(I.G.TYPMAX)                           148  LM00237
 01205 CLA +0 50000 0 00205    01206 STO +0 60100 0 00100    01207 TRA +0 02000 0 01213    01210 CLA +0 50000 0 00100   
 01211 ADD +0 40000 0 00206    01212 STO +0 60100 0 00100    01213 CLA +0 50000 0 00100    01214 SUB +0 40200 0 00202   
 01215 TZE +0 10000 0 01217    01216 TPL +0 12000 0 01240                                                               
                           W'R ((TYPE.RS.I).A.1K) .NE. 0,                           149  LM00238
                1               RESULT(0) = (RESULT(0).LS.6).V.TYPCOD(I)            149  LM00239
 01217 CAL -0 50000 0 00100    01220 STA +0 62100 0 01222    01221 CAL -0 50000 0 00201    01222 LGR -0 76500 0 00000   
 01223 ANA -0 32000 0 00206    01224 SLW +0 60200 0 01543    01225 CLA +0 50000 0 01543    01226 SUB +0 40200 0 00205   
 01227 TZE +0 10000 0 01237    01230 CAL -0 50000 0 00213    01231 STA +0 62100 0 01233    01232 CAL -0 50000 0 00165   
 01233 ALS +0 76700 0 00000    01234 LXA +0 53400 2 00100    01235 ORA -0 50100 2 00200    01236 SLW +0 60200 0 00165   
      LOOP3           C'E                                                           150  LM00240
 01237 TRA +0 02000 0 01210                                                                                             
                      PRMESS.(RESULT(0),RESULT(1),RESULT(2),                        151  LM00244
                1          RESULT(3),RESULT(4))                                     151  LM00245
 01240 TSX +0 07400 4 00024    01241 TXH +3 00000 0 00165    01242 TXH +3 00000 0 00164    01243 TXH +3 00000 0 00163   
 01244 TXH +3 00000 0 00162    01245 TXH +3 00000 0 00161                                                               
                 O'E                                                                152  LM00246
 01246 TRA +0 02000 0 01316                                                                                             
                      W'R (VALUE.G.LOWCOM) .OR. (VALUE.L.62K)                       153  LM00253
 01247 CLA +0 50000 0 00203    01250 SUB +0 40200 0 00221    01251 TZE +0 10000 0 01253    01252 TMI -0 12000 0 01257   
 01253 CLA +0 50000 0 00203    01254 SUB +0 40200 0 00152    01255 TZE +0 10000 0 01263    01256 TMI -0 12000 0 01263   
                           VALUE = 4K6 .V. VALUE                                    154  LM00254
 01257 CAL -0 50000 0 00232    01260 ORA -0 50100 0 00203    01261 SLW +0 60200 0 00203                                 
                      O'E                                                           155  LM00255
 01262 TRA +0 02000 0 01266                                                                                             
                           VALUE = 1K6 .V. VALUE                                    156  LM00256
 01263 CAL -0 50000 0 00230    01264 ORA -0 50100 0 00203    01265 SLW +0 60200 0 00203                                 
                      E'L                                                           157  LM00257
                      RESULT(0) = NAM.(VALUE)                                       158  LM00261
 01266 TSX +0 07400 4 00036    01267 TXH +3 00000 0 00203    01270 STO +0 60100 0 00165                                 
                      VALUE = DELTA .A. 77777K                                      159  LM00262
 01271 CAL -0 50000 0 00071    01272 ANA -0 32000 0 00225    01273 SLW +0 60200 0 00203                                 
                      W'R DECSW                                                     160  LM00263
 01274 NZT -0 52000 0 00070    01275 TRA +0 02000 0 01305                                                               
                           RESULT(1) = BZEL.(DERBC.(VALUE))                         161  LM00264
 01276 TSX +0 07400 4 00010    01277 TXH +3 00000 0 00203    01300 STO +0 60100 0 01543    01301 TSX +0 07400 4 00005   
 01302 TXH +3 00000 0 01543    01303 STO +0 60100 0 00164                                                               
                      O'E                                                           162  LM00265
 01304 TRA +0 02000 0 01310                                                                                             
                           RESULT(1) = OCABC.(VALUE)                                163  LM00266
 01305 TSX +0 07400 4 00021    01306 TXH +3 00000 0 00203    01307 STO +0 60100 0 00164                                 
                      E'L                                                           164  LM00267
                      PRMESS.(RESULT(0),RESULT(1),RESULT(2),                        165  LM00268
                1          RESULT(3),RESULT(4))                                     165  LM00269
 01310 TSX +0 07400 4 00024    01311 TXH +3 00000 0 00165    01312 TXH +3 00000 0 00164    01313 TXH +3 00000 0 00163   
 01314 TXH +3 00000 0 00162    01315 TXH +3 00000 0 00161                                                               
                 E'L                                                                166  LM00270
                 T'O INPUT                                                          167  LM00274
 01316 TRA +0 02000 0 00052                                                                                             
      ERR1       PRNTER.                                                            168  LM00278
 01317 TSX +0 07400 4 00025                                                                                             
                 DORMNT.                                                            169  LM00279
 01320 TSX +0 07400 4 00011                                                                                             
      NOSYM      PRNTER.                                                            170  LM00283
 01321 TSX +0 07400 4 00025                                                                                             
      NOSYM1     PRMESS.($NO COMMON SYMBOLS ALLOWED$)                               171  LM00284
 01322 TSX +0 07400 4 00024    01323 TXH +3 00000 0 00241    01324 TXH +3 00000 0 00240    01325 TXH +3 00000 0 00237   
 01326 TXH +3 00000 0 00233    01327 TXH +3 00000 0 00235                                                               
                 USRFIL.                                                            172  LM00285
 01330 TSX +0 07400 4 00033                                                                                             
                 T'O RIP                                                            173  LM00286
 01331 TRA +0 02000 0 00062                                                                                             
      BEATIT     RESETF.                                                            174  LM00290
 01332 TSX +0 07400 4 00026                                                                                             
                 USRFIL.                                                            175  LM00291
 01333 TSX +0 07400 4 00033                                                                                             
                 CHNCOM.(0)                                                         176  LM00292
 01334 TSX +0 07400 4 00006    01335 TXH +3 00000 0 00205                                                               
                 INTERNAL FUNCTION (X,Y)                                            177  LM00294
 01336 TRA +0 02000 0 01430                                                                                             
                 E'O VAL.                                                           178  LM00295
 01337 TRA +0 02000 0 01342    00037 TTR +0 02100 0 01340    01340 SXA +0 63400 2 01413    01341 TSX +0 07400 2 01413   
                 IN1 = X                                                            179  LM00296
 01342 CLA +0 50000 0 00024    01343 STO +0 60100 0 00075                                                               
                 T'H LOOP4, FOR I1 = 1,1,(I1.G.INDX1)                               180  LM00297
 01344 CLA +0 50000 0 00206    01345 STO +0 60100 0 00074    01346 TRA +0 02000 0 01352    01347 CLA +0 50000 0 00074   
 01350 ADD +0 40000 0 00206    01351 STO +0 60100 0 00074    01352 CLA +0 50000 0 00074    01353 SUB +0 40200 0 00077   
 01354 TZE +0 10000 0 01356    01355 TPL +0 12000 0 01405                                                               
                      W'R TAB11(TAB11+I1) .E. IN1                                   181  LM00298
 01356 CLA +0 50000 0 00170    01357 ADD +0 40000 0 00074    01360 PAX +0 73400 1 00000    01361 CLA +0 50000 1 00170   
 01362 SUB +0 40200 0 00075    01363 TNZ -0 10000 0 01404                                                               
                           Y = TAB21(TAB21+I1) .RS. 18                              182  LM00299
 01364 CLA +0 50000 0 00171    01365 ADD +0 40000 0 00074    01366 PAX +0 73400 1 00000    01367 CAL -0 50000 0 00216   
 01370 STA +0 62100 0 01372    01371 CAL -0 50000 1 00171    01372 LGR -0 76500 0 00000    01373 SLW +0 60200 0 00024   
                           F'N TAB21(TAB21+I1) .A. 77777K                           183  LM00300
 01374 CLA +0 50000 0 00171    01375 ADD +0 40000 0 00074    01376 PAX +0 73400 1 00000    01377 CAL -0 50000 1 00171   
 01400 ANA -0 32000 0 00225    01401 SLW +0 60200 0 01427    01402 CLA +0 50000 0 01427    01403 TRA +0 02000 0 01423   
                      E'L                                                           184  LM00301
      LOOP4      C'E                                                                185  LM00302
 01404 TRA +0 02000 0 01347                                                                                             
                 PRMESS.(IN1,$ NOT FOUND$)                                          186  LM00306
 01405 TSX +0 07400 4 00024    01406 TXH +3 00000 0 00075    01407 TXH +3 00000 0 00253    01410 TXH +3 00000 0 00243   
                 T'O READY                                                          187  LM00307
 01411 TRA +0 02000 0 00061                                                                                             
                 E'N                                                                188  LM00308
 01412 TSX +0 07400 4 00012    01413 TXH +3 00000 0 00000    01414 SXD -0 63400 1 01413    01415 SXA +0 63400 4 01423   
 01416 CLA +0 50000 4 00001    01417 STA +0 62100 0 01342    01420 CLA +0 50000 4 00002    01421 STA +0 62100 0 01373   
 01422 TRA +0 02000 2 00001    01423 AXT +0 77400 4 00000    01424 LXA +0 53400 2 01413    01425 LXD -0 53400 1 01413   
 01426 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION (X)                                              189  LM00310
 01430 TRA +0 02000 0 01542                                                                                             
                 E'O NAM.                                                           190  LM00311
 01431 TRA +0 02000 0 01434    00036 TTR +0 02100 0 01432    01432 SXA +0 63400 2 01526    01433 TSX +0 07400 2 01526   
                 IN1 = X .A. 77777K                                                 191  LM00312
 01434 CAL -0 50000 0 00024    01435 ANA -0 32000 0 00225    01436 SLW +0 60200 0 00075                                 
                 IN2 = X .RS. 18                                                    192  LM00313
 01437 CAL -0 50000 0 00216    01440 STA +0 62100 0 01442    01441 CAL -0 50000 0 00024    01442 LGR -0 76500 0 00000   
 01443 SLW +0 60200 0 00076                                                                                             
                 DELTA = 1K5                                                        193  LM00314
 01444 CLA +0 50000 0 00226    01445 STO +0 60100 0 00071                                                               
                 T'H LOOP5, FOR I1 = 1,1,(I1.G.INDX1)                               194  LM00315
 01446 CLA +0 50000 0 00206    01447 STO +0 60100 0 00074    01450 TRA +0 02000 0 01454    01451 CLA +0 50000 0 00074   
 01452 ADD +0 40000 0 00206    01453 STO +0 60100 0 00074    01454 CLA +0 50000 0 00074    01455 SUB +0 40200 0 00077   
 01456 TZE +0 10000 0 01460    01457 TPL +0 12000 0 01523                                                               
                      W'R (TAB21(TAB21+I1) .RS. 18) .E. IN2                         195  LM00316
 01460 CLA +0 50000 0 00171    01461 ADD +0 40000 0 00074    01462 PAX +0 73400 1 00000    01463 CAL -0 50000 0 00216   
 01464 STA +0 62100 0 01466    01465 CAL -0 50000 1 00171    01466 LGR -0 76500 0 00000    01467 SLW +0 60200 0 01541   
 01470 CLA +0 50000 0 01541    01471 SUB +0 40200 0 00076    01472 TNZ -0 10000 0 01522                                 
                           TSTVAL = TAB21(TAB21+I1) .A. 77777K                      196  LM00317
 01473 CLA +0 50000 0 00171    01474 ADD +0 40000 0 00074    01475 PAX +0 73400 1 00000    01476 CAL -0 50000 1 00171   
 01477 ANA -0 32000 0 00225    01500 SLW +0 60200 0 00175                                                               
                           W'R (TSTVAL.LE.IN1).AND.                                 197  LM00318
                1          ((IN1-TSTVAL).L.DELTA)                                   197  LM00319
 01501 CLA +0 50000 0 00075    01502 SUB +0 40200 0 00175    01503 SUB +0 40200 0 00071    01504 TZE +0 10000 0 01522   
 01505 TPL +0 12000 0 01522    01506 CLA +0 50000 0 00175    01507 SUB +0 40200 0 00075    01510 TZE +0 10000 0 01512   
 01511 TPL +0 12000 0 01522                                                                                             
                                CNAM = TAB11(TAB11+I1)                              198  LM00320
 01512 CLA +0 50000 0 00170    01513 ADD +0 40000 0 00074    01514 PAX +0 73400 2 00000    01515 CLA +0 50000 2 00170   
 01516 STO +0 60100 0 00066                                                                                             
                                DELTA = IN1 - TSTVAL                                199  LM00321
 01517 CLA +0 50000 0 00075    01520 SUB +0 40200 0 00175    01521 STO +0 60100 0 00071                                 
                           E'L                                                      200  LM00322
                      E'L                                                           201  LM00323
      LOOP5      C'E                                                                202  LM00324
 01522 TRA +0 02000 0 01451                                                                                             
                 F'N CNAM                                                           203  LM00325
 01523 CLA +0 50000 0 00066    01524 TRA +0 02000 0 01535                                                               
                 E'N                                                                204  LM00326
 01525 TSX +0 07400 4 00012    01526 TXH +3 00000 0 00000    01527 SXD -0 63400 1 01526    01530 SXA +0 63400 4 01535   
 01531 CLA +0 50000 4 00001    01532 STA +0 62100 0 01434    01533 STA +0 62100 0 01441    01534 TRA +0 02000 2 00001   
 01535 AXT +0 77400 4 00000    01536 LXA +0 53400 2 01526    01537 LXD -0 53400 1 01526    01540 TRA +0 02000 4 00001   
                 E'M                                                                205  LM00328
 01542 TSX +0 07400 4 00012                                                                                             
1            ROUTINE TO GET A BUFFER AREA BY EXPANDING MEMORY BOUND                              PAGE 1     
                           D.R. WIDRIG  JUNE 1966                                   
                  
                       00004         ENTRY   GETBUF        GET A BUFFER 
                  
                                     EXTERN  GETMEM,SETMEM  
                  
                                             CALLING SEQUENCE IS..  GETBUF.(BUFF,N) 
                                             UPON RETURN, THE CALLER MAY USE THE    
                                             AREA BY STATEMENTS OF THE FORM..  X = BUFF(BUFF+I) 
                                             WHERE THE I'TH ELEMENT IS INTENDED     
                  
        TRANSFER VECTOR 
      00000  272563442544     GETMEM
      00001  622563442544     SETMEM
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  272563226426     
                  
      00004  0636 00 4 00024  GETBUF SCA     X4,4          SAVE LINKAGE 
      00005  0634 00 1 00025         SXA     X1,1          AND IR1
      00006  0535 00 1 00024         LAC     X4,1          SET IR1 TO IR4 (THE CALLER)    
                  
      00007  0074 00 4 00000         TSX     GETMEM,4      GET CURRENT MEMORY BOUND 
      00010  0601 00 0 00027         STO     OLDMEM        SAVE OLD MEMORY BOUND    
      00011  0400 60 1 00002         ADD*    2,1           ALLOW FOR USER'S DEMAND  
      00012  0734 00 4 00000         PAX     0,4           SAVE COMPLEMENT OF THIS VALUE  
      00013 -0636 00 4 00020         SCD     TXI,4         ..     
      00014  0400 00 0 00030         ADD     =1            ALLOW FOR BUFF(0)  
      00015  0074 00 4 00001         TSX     SETMEM,4      RAISE THE ROOF     
                  
      00016 -0500 00 1 00001         CAL     1,1           GET BASE POINTER   
      00017  0734 00 4 00000         PAX     0,4           ..     
      00020  1 00000 4 00021  TXI    TXI     *+1,4,**      DECREMENT BY AMOUNT OF STORAGE 
      00021  0754 00 4 00000         PXA     0,4           SET THIS VALUE IN USER'S PROGRAM     
      00022  0602 60 1 00001         SLW*    1,1           ..     
      00023  0500 00 0 00027         CLA     OLDMEM        RETURN OLD MEMORY BOUND  
                  
      00024 -0774 00 4 00000  X4     AXC     **,4          RESTORE LINKAGE    
      00025  0774 00 1 00000  X1     AXT     **,1          AND IR1
      00026  0020 00 4 00003         TRA     3,4           RETURN 
                  
      00027                   OLDMEM BSS     1             STORAGE FOR OLD MEMORY BOUND   
                  
                                     END  
                  
        LITERALS  
      00030  000000000001     
1            ROUTINE TO GET A BUFFER AREA BY EXPANDING MEMORY BOUND                              PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         31 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         25     X1     5
         24     X4     4,    6
         20    TXI    13
          4 GETBUF     0
          0 GETMEM     7
         27 OLDMEM    10,   23
          1 SETMEM    15
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




REMOVE   BCD 09/20/68 0220.9   14693         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  REMOVE   MAD            02/15/68    1740.3
-                 
                      DATE-REMOVE PROGRAM                                                              LM00001    
                                                                                                       LM00002    
                      LOADING INSTRUCTIONS                                                             LM00003    
                                                                                                       LM00004    
                           MAD REMOVE (LIST)                                                           LM00005    
                           MAD RLIBE (LIST)                                                            LM00006    
                           FAP .SETUP (LIST)                                                           LM00007    
                           NCLOAD REMOVE RLIBE .SETUP                                                  LM00008    
                           SAVE REMOVE                                                                 LM00009    
                           R REMOVE MMDDYY                                                             LM00010    
                                                                                                       LM00011    
                      ALL FILES UNUSED SINCE MMDDYY WILL BE REMOVED                                    LM00012    
                           D.R. WIDRIG  DEC. 1965                                                      LM00013    
                                                                                                       LM00014    
                  NORMAL MODE IS INTEGER                                                          *001 LM00015    
                  DIMENSION V(2),UFD(7),USR(7)                                                    *002 LM00016    
                  DIMENSION BUFF1(432),BUFF2(432),BUFF3(432),BUFF4(432)                           *003 LM00017    
                                                                                                       LM00018    
                  VECTOR VALUES MFD = $M.F.D.$                                                    *004 LM00019    
                  VECTOR VALUES UF = $U.F.D.$                                                     *005 LM00020    
                  VECTOR VALUES FILE = $(FILE)$                                                   *006 LM00021    
                  VECTOR VALUES TESTSW = 0B                                                       *007 LM00022    
                  VECTOR VALUES NPNDSW = 0B                                                       *008 LM00023    
                  VECTOR VALUES TRECS  = 0                                                        *009 LM00024    
                  VECTOR VALUES DRECS  = 0                                                        *010 LM00025    
                  VECTOR VALUES DCNT   = 0                                                        *011 LM00026    
                  VECTOR VALUES DONTSW = 0B                                                       *012 LM00027    
                  VECTOR VALUES PRTSW  = 0B                                                       *013 LM00028    
                  VECTOR VALUES B1B    = 60 5757575757K                                           *014 LM00029    
                                                                                                       LM00030    
                  VECTOR VALUES R = 432                                                           *015 LM00031    
                  VECTOR VALUES MZE = 4K11                                                        *016 LM00032    
                  VECTOR VALUES FENCE = 777777777777K                                             *017 LM00033    
                                                                                                       LM00034    
                                                                                                       LM00035    
                      GET AND CHECK DATES                                                              LM00036    
                                                                                                       LM00037    
                  WHENEVER COMARG.(1,OLDEST) .E. FENCE                                            *018 LM00038    
      OUT              PRMESS.($DATE IS BAD.$)                                                    *019 LM00039    
                       CHNCOM.(0)                                                                 *020 LM00040    
                  END OF CONDITIONAL                                                              *021 LM00041    
                  WHENEVER COMARG.(2,ARG) .E. $(PRNT)$                                            *022 LM00042    
                       PRTSW = 1B                                                                 *023 LM00043    
                  OR WHENEVER ARG  .E. $(TEST)$                                                   *024 LM00044    
                       PRTSW = 1B                                                                 *025 LM00045    
                       TESTSW = 1B                                                                *026 LM00046    
                  END OF CONDITIONAL                                                              *027 LM00047    
                  WHENEVER COMARG.(3,ARG) .E. $(NPND)$, NPNDSW = 1B                               *028 LM00048    
                  SETBRK.(EOF1)                                                                   *029 LM00049    
                  OLDEST = DATECV.(OLDEST,OUT)                                                    *030 LM00050    
                  TODAY = DATECV.(DATE.(0),OUT)                                                   *031 LM00051    
                                                                                                       LM00052    
                      REMEMBERING WHERE YOU WERE, ATTACH TO MFD                                        LM00053    
                                                                                                       LM00054    
                  ATTNAM.(V(2)...2,NERR3)                                                         *032 LM00055    
                  ATTACH.(MFD,FILE,ERR1)                                                          *033 LM00056    
                                                                                                       LM00057    
                      OPEN AND READ MFD                                                                LM00058    
                                                                                                       LM00059    
                  BFOPEN.($R$,UF,FILE,BUFF1(R),BUFF2(R),MZE,ERR1)                                 *034 LM00060    
                  BFREAD.(UF,FILE,USR(3)...3,EOF1,EOFCT,ERR1)                                     *035 LM00061    
                                                                                                       LM00062    
      READM       BFREAD.(UF,FILE,USR(7)...7,EOF1,EOFCT,ERR1)                                     *036 LM00063    
                  WHENEVER ((USR(7).E.0).AND.(USR(6).E.0)).OR.                                    *037 LM00064    
                1      (USR(7).E.MFD).OR.(USR(6).E.FILE), TRANSFER TO READM                       *037 LM00065    
                                                                                                       LM00066    
                      FOUND USER, OPEN AND READ HIS UFD                                                LM00067    
                      MAKE SURE ATTACHED TO MFD                                                        LM00068    
                                                                                                       LM00069    
                  ATTACH.(MFD,FILE,ERR1)                                                          *038 LM00070    
                  BFOPEN.($R$,USR(7),USR(6),BUFF3(R),BUFF4(R),MZE,ERR2)                           *039 LM00071    
                  BFREAD.(USR(7),USR(6),UFD(3)...3,EOF2,EOFCT,ERR2)                               *040 LM00072    
                                                                                                       LM00073    
                      IS THIS FILE DIRECTORY PROTECTED.Q.                                              LM00074    
                                                                                                       LM00075    
                  WHENEVER USR(7) .E. $ M1416$                                                    *041 LM00076    
                1      .OR. USR(7) .E. $ M4060$                                                   *041 LM00077    
                       DONTSW = 1B                                                                *042 LM00078    
                  OTHERWISE                                                                       *043 LM00079    
                       DONTSW = 0B                                                                *044 LM00080    
                  END OF CONDITIONAL                                                              *045 LM00081    
                                                                                                       LM00082    
                                                                                                       LM00083    
      READU       BFREAD.(USR(7),USR(6),UFD(7)...7,EOF2,EOFCT,ERR2)                               *046 LM00084    
                  DEVICE = (UFD(3).RS.15).A.7K                                                    *047 LM00085    
                  WHENEVER ((UFD(7).E.0).AND.(UFD(6).E.0)).OR.                                    *048 LM00086    
                1      (DEVICE.NE.2).OR.(((UFD(2).RS.18).A.77777K).E.0),                          *048 LM00087    
                2      TRANSFER TO READU                                                          *048 LM00088    
                                                                                                       LM00089    
                      TEST DATE-LAST-USED AGAINST OLDEST DATE ALLOWED                                  LM00090    
                                                                                                       LM00091    
                  RECS = (UFD(2) .RS. 18) .A. 77777K                                              *049 LM00092    
                  TRECS = TRECS + RECS                                                            *050 LM00093    
                  WHENEVER UFD(4) .L. OLDEST                                                      *051 LM00094    
                                                                                                       LM00095    
                      DELETABLE FILE                                                                   LM00096    
                                                                                                       LM00097    
                  WHENEVER DONTSW                                                                 *052 LM00098    
                       WHENEVER NPNDSW, TRANSFER TO READU                                         *053 LM00099    
                       PRMESS.(USR(7),B1B,USR(6),B1B,UFD(7),B1B,                                  *054 LM00100    
                1       UFD(6),$       NOT DELETED$)                                              *054 LM00101    
                       TRANSFER TO READU                                                          *055 LM00102    
                  OR WHENEVER PRTSW                                                               *056 LM00103    
                       PRMESS.(USR(7),B1B,USR(6),B1B,UFD(7),B1B,UFD(6),B1B,                       *057 LM00104    
                1       BZEL.(DERBC.(RECS)) )                                                     *057 LM00105    
                  END OF CONDITIONAL                                                              *058 LM00106    
                                                                                                       LM00107    
                  DRECS = DRECS + RECS                                                            *059 LM00108    
                  DCNT  = DCNT  + 1                                                               *060 LM00109    
                                                                                                       LM00110    
                  WHENEVER TESTSW, TRANSFER TO READU                                              *061 LM00111    
                                                                                                       LM00112    
                       ATTACH.(USR(7),USR(6),ERR2)                                                *062 LM00113    
                       CHFILE.(UFD(7),UFD(6),001K,MZE,MZE,NERR1)                                  *063 LM00114    
      NERR1            DELFIL.(UFD(7),UFD(6),NERR2)                                               *064 LM00115    
      NERR2            MODE = (UFD(3).RS.28) .V. 2K                                               *065 LM00116    
                       UFD(4) = (UFD(4).A.777777K) .V. TODAY                                      *066 LM00117    
                       SETFIL.(UFD(7),UFD(6),UFD(5),UFD(4),MODE,DEVICE,ERR3)                      *067 LM00118    
                  END OF CONDITIONAL                                                              *068 LM00119    
                  TRANSFER TO READU                                                               *069 LM00120    
                                                                                                       LM00121    
                      EOF ON UFD ENTRY, CLOSE FILE AND CONTINUE                                        LM00122    
                                                                                                       LM00123    
      EOF2        BFCLOS.(USR(7),USR(6),ERR2)                                                     *070 LM00124    
                  TRANSFER TO READM                                                               *071 LM00125    
                                                                                                       LM00126    
                      EOF ON MFD, FINISH UP AND QUIT                                                   LM00127    
                                                                                                       LM00128    
      EOF1        BFCLOS.(UF,FILE,ERR1)                                                           *072 LM00129    
      BAIL        ATTACH.(V(2),V(1),NERR3)                                                        *073 LM00130    
                  WHENEVER TESTSW, PRMESA.($WOULD HAVE$)                                          *074 LM00131    
                  PRMESS.($DELETED$,BZEL.(DERBC.(DCNT)),$ FILES$,BZEL.(DERBC.                     *075 LM00132    
                1  (DRECS)),                                                                      *075 LM00133    
                1  $ RECS.$)                                                                      *075 LM00134    
                  PRMESS.                                                                         *076 LM00135    
                  PRMESS.(BZEL.(DERBC.(TRECS)),$ RECS IN,$,BZEL.(DERBC.                           *077 LM00136    
                1  (TRECS-DRECS)),                                                                *077 LM00137    
                1  $ RECS OUT,$,BZEL.(DERBC.((100*DRECS)/TRECS)),$ PCT.$)                         *077 LM00138    
                  PRMESS.                                                                         *078 LM00139    
      NERR3       CHNCOM.(0)                                                                      *079 LM00140    
                                                                                                       LM00141    
                      ERROR IN MFD, FATAL                                                              LM00142    
                                                                                                       LM00143    
      ERR1        PRNTER.                                                                         *080 LM00144    
                  PRMESS.($FATAL ERROR$)                                                          *081 LM00145    
                  TRANSFER TO BAIL                                                                *082 LM00146    
                                                                                                       LM00147    
                      ERROR IN UFD, SKIP AND CONTINUE                                                  LM00148    
                                                                                                       LM00149    
      ERR2        PRNTER.                                                                         *083 LM00150    
                  BFCLOS.(USR(7),USR(6),READM)                                                    *084 LM00151    
                  TRANSFER TO READM                                                               *085 LM00152    
                                                                                                       LM00153    
                      ERROR IN REMOVING FILE, CONTINUE                                                 LM00154    
                                                                                                       LM00155    
      ERR3        PRNTER.                                                                         *086 LM00156    
                  TRANSFER TO READU                                                               *087 LM00157    
                                                                                                       LM00158    
                  END OF PROGRAM                                                                  *088 LM00159    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   04224 TRANSFER VECTOR LENGTH  00024 PROGRAM BEGINS    03460
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ARG    00041   1        DEVICE 03350   1        ERR3   00032   4        NERR3  00035   4        R      03365 A 1  
      B1B    00042 A 1        DONTSW 03351 A 2        FENCE  03354 A 1        NPNDSW 03361 A 2        TESTSW 03366 A 2  
      BAIL   00025   4        DRECS  03352 A 1        FILE   03355 A 1        OLDEST 03362   1        TODAY  03367   1  
      BUFF1  00723 A 1        EOF1   00026   4        MFD    03356 A 1        OUT    00036   4        TRECS  03370 A 1  
      BUFF2  01604 A 1        EOF2   00027   4        MODE   03357   1        PRTSW  03363 A 2        UFD    03400 A 1  
      BUFF3  02465 A 1        EOFCT  03353   1        MZE    03360 A 1        READM  00037   4        UF     03401 A 1  
      BUFF4  03346 A 1        ERR1   00030   4        NERR1  00033   4        READU  00040   4        USR    03411 A 1  
      DCNT   03347 A 1        ERR2   00031   4        NERR2  00034   4        RECS   03364   1        V      03414 A 1  
0FUNCTION DICTIONARY    
      ATTACH 00000   1        ATTNAM 00001   1        BFCLOS 00002   1        BFOPEN 00003   1        BFREAD 00004   1  
      BZEL   00005   1        CHFILE 00006   1        CHNCOM 00007   1        COMARG 00010   1        DATECV 00011   1  
      DATE   00012   1        DELFIL 00013   1        DERBC  00014   1        EXIT   00015   1        .SETUP 00016   1  
      PRMESA 00017   1        PRMESS 00020   1        PRNTER 00021   1        SETBRK 00022   1        SETFIL 00023   1  
0ABSOLUTE CONSTANTS     
 03435 +255151465160     03436 +262163214360     03447 -204723633360     03441 -066463736060     03440 +314573606060    
 03451 -205125236260     03425 +000000000144     03450 -205125236233     03443 -202631432562     03433 +246060606060    
 03432 +242543256325     03437 +302165256060     03454 -264664432460     03427 +000000777777     03424 +000000000034    
 03434 +254325632524     03446 -204546636024     03452 -206060606060     03426 +000000077777     03423 +000000000022    
 03422 +000000000017     03444 -204401040106     03445 -204404000600     03421 +000000000007     03442 -116060606060    
 03455 -344547452434     03420 +000000000003     03457 -346325626334     03456 -344751456334     03417 +000000000002    
 03415 +000000000000     03453 -226022212433     03431 +242163256031     03416 +000000000001     03430 +233000000000    
0STATEMENT DICTIONARY   
 00025 TXL -304101004075       00026 TXL -304075004071       00027 TXL -304070004064       00030 TXL -304202004201      
 00031 TXL -304207004206       00032 TXL -304215004214       00033 TXL -304041004035       00034 TXL -304047004041      
 00035 TXL -304201004177       00036 TXL -303471003466       00037 TXL -303603003574       00040 TXL -303676003667      
0PROGRAM    
                 N'R                                                                001  LM00015
                 D'N V(2),UFD(7),USR(7)                                             002  LM00016
                 D'N BUFF1(432),BUFF2(432),BUFF3(432),BUFF4(432)                    003  LM00017
                 V'S MFD = $M.F.D.$                                                 004  LM00019
 03460 TSX +0 07400 4 00016    03356     -0 43326 3 32433                                                               
                 V'S UF = $U.F.D.$                                                  005  LM00020
 03401     -2 43326 3 32433                                                                                             
                 V'S FILE = $(FILE)$                                                006  LM00021
 03355     -3 42631 4 32534                                                                                             
                 V'S TESTSW = 0B                                                    007  LM00022
 03366     +0 00000 0 00000                                                                                             
                 V'S NPNDSW = 0B                                                    008  LM00023
 03361     +0 00000 0 00000                                                                                             
                 V'S TRECS  = 0                                                     009  LM00024
 03370     +0 00000 0 00000                                                                                             
                 V'S DRECS  = 0                                                     010  LM00025
 03352     +0 00000 0 00000                                                                                             
                 V'S DCNT   = 0                                                     011  LM00026
 03347     +0 00000 0 00000                                                                                             
                 V'S DONTSW = 0B                                                    012  LM00027
 03351     +0 00000 0 00000                                                                                             
                 V'S PRTSW  = 0B                                                    013  LM00028
 03363     +0 00000 0 00000                                                                                             
                 V'S B1B    = 60 5757575757K                                        014  LM00029
 00042     -2 05757 5 75757                                                                                             
                 V'S R = 432                                                        015  LM00031
 03365     +0 00000 0 00660                                                                                             
                 V'S MZE = 4K11                                                     016  LM00032
 03360     -0 00000 0 00000                                                                                             
                 V'S FENCE = 777777777777K                                          017  LM00033
 03354     -3 77777 7 77777                                                                                             
                 W'R COMARG.(1,OLDEST) .E. FENCE                                    018  LM00038
 03461 TSX +0 07400 4 00010    03462 TXH +3 00000 0 03416    03463 TXH +3 00000 0 03362    03464 SUB +0 40200 0 03354   
 03465 TNZ -0 10000 0 03473                                                                                             
      OUT             PRMESS.($DATE IS BAD.$)                                       019  LM00039
 03466 TSX +0 07400 4 00020    03467 TXH +3 00000 0 03431    03470 TXH +3 00000 0 03453                                 
                      CHNCOM.(0)                                                    020  LM00040
 03471 TSX +0 07400 4 00007    03472 TXH +3 00000 0 03415                                                               
                 E'L                                                                021  LM00041
                 W'R COMARG.(2,ARG) .E. $(PRNT)$                                    022  LM00042
 03473 TSX +0 07400 4 00010    03474 TXH +3 00000 0 03417    03475 TXH +3 00000 0 00041    03476 SUB +0 40200 0 03456   
 03477 TNZ -0 10000 0 03503                                                                                             
                      PRTSW = 1B                                                    023  LM00043
 03500 CLA +0 50000 0 03416    03501 STO +0 60100 0 03363                                                               
                 O'R ARG  .E. $(TEST)$                                              024  LM00044
 03502 TRA +0 02000 0 03512    03503 CLA +0 50000 0 00041    03504 SUB +0 40200 0 03457    03505 TNZ -0 10000 0 03512   
                      PRTSW = 1B                                                    025  LM00045
 03506 CLA +0 50000 0 03416    03507 STO +0 60100 0 03363                                                               
                      TESTSW = 1B                                                   026  LM00046
 03510 CLA +0 50000 0 03416    03511 STO +0 60100 0 03366                                                               
                 E'L                                                                027  LM00047
                 W'R COMARG.(3,ARG) .E. $(NPND)$, NPNDSW = 1B                       028  LM00048
 03512 TSX +0 07400 4 00010    03513 TXH +3 00000 0 03420    03514 TXH +3 00000 0 00041    03515 SUB +0 40200 0 03455   
 03516 TNZ -0 10000 0 03521    03517 CLA +0 50000 0 03416    03520 STO +0 60100 0 03361                                 
                 SETBRK.(EOF1)                                                      029  LM00049
 03521 TSX +0 07400 4 00022    03522 TXH +3 00000 0 00026                                                               
                 OLDEST = DATECV.(OLDEST,OUT)                                       030  LM00050
 03523 TSX +0 07400 4 00011    03524 TXH +3 00000 0 03362    03525 TXH +3 00000 0 00036    03526 STO +0 60100 0 03362   
                 TODAY = DATECV.(DATE.(0),OUT)                                      031  LM00051
 03527 TSX +0 07400 4 00012    03530 TXH +3 00000 0 03415    03531 STO +0 60100 0 04217    03532 TSX +0 07400 4 00011   
 03533 TXH +3 00000 0 04217    03534 TXH +3 00000 0 00036    03535 STO +0 60100 0 03367                                 
                 ATTNAM.(V(2)...2,NERR3)                                            032  LM00055
 03536 TSX +0 07400 4 00001    03537 TIX +2 03417 0 03412    03540 TXH +3 00000 0 00035                                 
                 ATTACH.(MFD,FILE,ERR1)                                             033  LM00056
 03541 TSX +0 07400 4 00000    03542 TXH +3 00000 0 03356    03543 TXH +3 00000 0 03355    03544 TXH +3 00000 0 00030   
                 BFOPEN.($R$,UF,FILE,BUFF1(R),BUFF2(R),MZE,ERR1)                    034  LM00060
 03545 CLA +0 50000 0 03365    03546 SUB +0 40200 0 03547    03547 TXH +3 00000 0 01604    03550 STA +0 62100 0 03562   
 03551 CLA +0 50000 0 03365    03552 SUB +0 40200 0 03553    03553 TXH +3 00000 0 00723    03554 STA +0 62100 0 03561   
 03555 TSX +0 07400 4 00003    03556 TXH +3 00000 0 03442    03557 TXH +3 00000 0 03401    03560 TXH +3 00000 0 03355   
 03561 TXH +3 00000 0 00000    03562 TXH +3 00000 0 00000    03563 TXH +3 00000 0 03360    03564 TXH +3 00000 0 00030   
                 BFREAD.(UF,FILE,USR(3)...3,EOF1,EOFCT,ERR1)                        035  LM00061
 03565 TSX +0 07400 4 00004    03566 TXH +3 00000 0 03401    03567 TXH +3 00000 0 03355    03570 TIX +2 03420 0 03406   
 03571 TXH +3 00000 0 00026    03572 TXH +3 00000 0 03353    03573 TXH +3 00000 0 00030                                 
      READM      BFREAD.(UF,FILE,USR(7)...7,EOF1,EOFCT,ERR1)                        036  LM00063
 03574 TSX +0 07400 4 00004    03575 TXH +3 00000 0 03401    03576 TXH +3 00000 0 03355    03577 TIX +2 03421 0 03402   
 03600 TXH +3 00000 0 00026    03601 TXH +3 00000 0 03353    03602 TXH +3 00000 0 00030                                 
                 W'R ((USR(7).E.0).AND.(USR(6).E.0)).OR.                            037  LM00064
                1     (USR(7).E.MFD).OR.(USR(6).E.FILE), T'O READM                  037  LM00065
 03603 CLA +0 50000 0 03403    03604 SUB +0 40200 0 03355    03605 TZE +0 10000 0 03620    03606 CLA +0 50000 0 03402   
 03607 SUB +0 40200 0 03356    03610 TZE +0 10000 0 03620    03611 CLA +0 50000 0 03403    03612 SUB +0 40200 0 03415   
 03613 TNZ -0 10000 0 03617    03614 CLA +0 50000 0 03402    03615 SUB +0 40200 0 03415    03616 TZE +0 10000 0 03620   
 03617 TRA +0 02000 0 03621    03620 TRA +0 02000 0 00037                                                               
                 ATTACH.(MFD,FILE,ERR1)                                             038  LM00070
 03621 TSX +0 07400 4 00000    03622 TXH +3 00000 0 03356    03623 TXH +3 00000 0 03355    03624 TXH +3 00000 0 00030   
                 BFOPEN.($R$,USR(7),USR(6),BUFF3(R),BUFF4(R),MZE,ERR2)              039  LM00071
 03625 CLA +0 50000 0 03365    03626 SUB +0 40200 0 03627    03627 TXH +3 00000 0 03346    03630 STA +0 62100 0 03642   
 03631 CLA +0 50000 0 03365    03632 SUB +0 40200 0 03633    03633 TXH +3 00000 0 02465    03634 STA +0 62100 0 03641   
 03635 TSX +0 07400 4 00003    03636 TXH +3 00000 0 03442    03637 TXH +3 00000 0 03402    03640 TXH +3 00000 0 03403   
 03641 TXH +3 00000 0 00000    03642 TXH +3 00000 0 00000    03643 TXH +3 00000 0 03360    03644 TXH +3 00000 0 00031   
                 BFREAD.(USR(7),USR(6),UFD(3)...3,EOF2,EOFCT,ERR2)                  040  LM00072
 03645 TSX +0 07400 4 00004    03646 TXH +3 00000 0 03402    03647 TXH +3 00000 0 03403    03650 TIX +2 03420 0 03375   
 03651 TXH +3 00000 0 00027    03652 TXH +3 00000 0 03353    03653 TXH +3 00000 0 00031                                 
                 W'R USR(7) .E. $ M1416$                                            041  LM00076
                1     .OR. USR(7) .E. $ M4060$                                      041  LM00077
 03654 CLA +0 50000 0 03402    03655 SUB +0 40200 0 03445    03656 TZE +0 10000 0 03662    03657 CLA +0 50000 0 03402   
 03660 SUB +0 40200 0 03444    03661 TNZ -0 10000 0 03665                                                               
                      DONTSW = 1B                                                   042  LM00078
 03662 CLA +0 50000 0 03416    03663 STO +0 60100 0 03351                                                               
                 O'E                                                                043  LM00079
 03664 TRA +0 02000 0 03667                                                                                             
                      DONTSW = 0B                                                   044  LM00080
 03665 CLA +0 50000 0 03415    03666 STO +0 60100 0 03351                                                               
                 E'L                                                                045  LM00081
      READU      BFREAD.(USR(7),USR(6),UFD(7)...7,EOF2,EOFCT,ERR2)                  046  LM00084
 03667 TSX +0 07400 4 00004    03670 TXH +3 00000 0 03402    03671 TXH +3 00000 0 03403    03672 TIX +2 03421 0 03371   
 03673 TXH +3 00000 0 00027    03674 TXH +3 00000 0 03353    03675 TXH +3 00000 0 00031                                 
                 DEVICE = (UFD(3).RS.15).A.7K                                       047  LM00085
 03676 CAL -0 50000 0 03422    03677 STA +0 62100 0 03701    03700 CAL -0 50000 0 03375    03701 LGR -0 76500 0 00000   
 03702 ANA -0 32000 0 03421    03703 SLW +0 60200 0 03350                                                               
                 W'R ((UFD(7).E.0).AND.(UFD(6).E.0)).OR.                            048  LM00086
                1     (DEVICE.NE.2).OR.(((UFD(2).RS.18).A.77777K).E.0),             048  LM00087
                2     T'O READU                                                     048  LM00088
 03704 CAL -0 50000 0 03423    03705 STA +0 62100 0 03707    03706 CAL -0 50000 0 03376    03707 LGR -0 76500 0 00000   
 03710 ANA -0 32000 0 03426    03711 SLW +0 60200 0 04217    03712 CLA +0 50000 0 04217    03713 SUB +0 40200 0 03415   
 03714 TZE +0 10000 0 03727    03715 CLA +0 50000 0 03350    03716 SUB +0 40200 0 03417    03717 TNZ -0 10000 0 03727   
 03720 CLA +0 50000 0 03372    03721 SUB +0 40200 0 03415    03722 TNZ -0 10000 0 03726    03723 CLA +0 50000 0 03371   
 03724 SUB +0 40200 0 03415    03725 TZE +0 10000 0 03727    03726 TRA +0 02000 0 03730    03727 TRA +0 02000 0 00040   
                 RECS = (UFD(2) .RS. 18) .A. 77777K                                 049  LM00092
 03730 CAL -0 50000 0 03423    03731 STA +0 62100 0 03733    03732 CAL -0 50000 0 03376    03733 LGR -0 76500 0 00000   
 03734 ANA -0 32000 0 03426    03735 SLW +0 60200 0 03364                                                               
                 TRECS = TRECS + RECS                                               050  LM00093
 03736 CLA +0 50000 0 03370    03737 ADD +0 40000 0 03364    03740 STO +0 60100 0 03370                                 
                 W'R UFD(4) .L. OLDEST                                              051  LM00094
 03741 CLA +0 50000 0 03374    03742 SUB +0 40200 0 03362    03743 TZE +0 10000 0 04063    03744 TPL +0 12000 0 04063   
                 W'R DONTSW                                                         052  LM00098
 03745 NZT -0 52000 0 03351    03746 TRA +0 02000 0 03767                                                               
                      W'R NPNDSW, T'O READU                                         053  LM00099
 03747 NZT -0 52000 0 03361    03750 TRA +0 02000 0 03752    03751 TRA +0 02000 0 00040                                 
                      PRMESS.(USR(7),B1B,USR(6),B1B,UFD(7),B1B,                     054  LM00100
                1      UFD(6),$       NOT DELETED$)                                 054  LM00101
 03752 TSX +0 07400 4 00020    03753 TXH +3 00000 0 03402    03754 TXH +3 00000 0 00042    03755 TXH +3 00000 0 03403   
 03756 TXH +3 00000 0 00042    03757 TXH +3 00000 0 03371    03760 TXH +3 00000 0 00042    03761 TXH +3 00000 0 03372   
 03762 TXH +3 00000 0 03452    03763 TXH +3 00000 0 03446    03764 TXH +3 00000 0 03434                                 
                      T'O READU                                                     055  LM00102
 03765 TRA +0 02000 0 00040                                                                                             
                 O'R PRTSW                                                          056  LM00103
 03766 TRA +0 02000 0 04011    03767 NZT -0 52000 0 03363    03770 TRA +0 02000 0 04011                                 
                      PRMESS.(USR(7),B1B,USR(6),B1B,UFD(7),B1B,UFD(6),B1B,          057  LM00104
                1      BZEL.(DERBC.(RECS)) )                                        057  LM00105
 03771 TSX +0 07400 4 00014    03772 TXH +3 00000 0 03364    03773 STO +0 60100 0 04217    03774 TSX +0 07400 4 00005   
 03775 TXH +3 00000 0 04217    03776 STO +0 60100 0 04217    03777 TSX +0 07400 4 00020    04000 TXH +3 00000 0 03402   
 04001 TXH +3 00000 0 00042    04002 TXH +3 00000 0 03403    04003 TXH +3 00000 0 00042    04004 TXH +3 00000 0 03371   
 04005 TXH +3 00000 0 00042    04006 TXH +3 00000 0 03372    04007 TXH +3 00000 0 00042    04010 TXH +3 00000 0 04217   
                 E'L                                                                058  LM00106
                 DRECS = DRECS + RECS                                               059  LM00108
 04011 CLA +0 50000 0 03352    04012 ADD +0 40000 0 03364    04013 STO +0 60100 0 03352                                 
                 DCNT  = DCNT  + 1                                                  060  LM00109
 04014 CLA +0 50000 0 03347    04015 ADD +0 40000 0 03416    04016 STO +0 60100 0 03347                                 
                 W'R TESTSW, T'O READU                                              061  LM00111
 04017 NZT -0 52000 0 03366    04020 TRA +0 02000 0 04022    04021 TRA +0 02000 0 00040                                 
                      ATTACH.(USR(7),USR(6),ERR2)                                   062  LM00113
 04022 TSX +0 07400 4 00000    04023 TXH +3 00000 0 03402    04024 TXH +3 00000 0 03403    04025 TXH +3 00000 0 00031   
                      CHFILE.(UFD(7),UFD(6),001K,MZE,MZE,NERR1)                     063  LM00114
 04026 TSX +0 07400 4 00006    04027 TXH +3 00000 0 03371    04030 TXH +3 00000 0 03372    04031 TXH +3 00000 0 03416   
 04032 TXH +3 00000 0 03360    04033 TXH +3 00000 0 03360    04034 TXH +3 00000 0 00033                                 
      NERR1           DELFIL.(UFD(7),UFD(6),NERR2)                                  064  LM00115
 04035 TSX +0 07400 4 00013    04036 TXH +3 00000 0 03371    04037 TXH +3 00000 0 03372    04040 TXH +3 00000 0 00034   
      NERR2           MODE = (UFD(3).RS.28) .V. 2K                                  065  LM00116
 04041 CAL -0 50000 0 03424    04042 STA +0 62100 0 04044    04043 CAL -0 50000 0 03375    04044 LGR -0 76500 0 00000   
 04045 ORA -0 50100 0 03417    04046 SLW +0 60200 0 03357                                                               
                      UFD(4) = (UFD(4).A.777777K) .V. TODAY                         066  LM00117
 04047 CAL -0 50000 0 03374    04050 ANA -0 32000 0 03427    04051 ORA -0 50100 0 03367    04052 SLW +0 60200 0 03374   
                      SETFIL.(UFD(7),UFD(6),UFD(5),UFD(4),MODE,DEVICE,ERR3)         067  LM00118
 04053 TSX +0 07400 4 00023    04054 TXH +3 00000 0 03371    04055 TXH +3 00000 0 03372    04056 TXH +3 00000 0 03373   
 04057 TXH +3 00000 0 03374    04060 TXH +3 00000 0 03357    04061 TXH +3 00000 0 03350    04062 TXH +3 00000 0 00032   
                 E'L                                                                068  LM00119
                 T'O READU                                                          069  LM00120
 04063 TRA +0 02000 0 00040                                                                                             
      EOF2       BFCLOS.(USR(7),USR(6),ERR2)                                        070  LM00124
 04064 TSX +0 07400 4 00002    04065 TXH +3 00000 0 03402    04066 TXH +3 00000 0 03403    04067 TXH +3 00000 0 00031   
                 T'O READM                                                          071  LM00125
 04070 TRA +0 02000 0 00037                                                                                             
      EOF1       BFCLOS.(UF,FILE,ERR1)                                              072  LM00129
 04071 TSX +0 07400 4 00002    04072 TXH +3 00000 0 03401    04073 TXH +3 00000 0 03355    04074 TXH +3 00000 0 00030   
      BAIL       ATTACH.(V(2),V(1),NERR3)                                           073  LM00130
 04075 TSX +0 07400 4 00000    04076 TXH +3 00000 0 03412    04077 TXH +3 00000 0 03413    04100 TXH +3 00000 0 00035   
                 W'R TESTSW, PRMESA.($WOULD HAVE$)                                  074  LM00131
 04101 NZT -0 52000 0 03366    04102 TRA +0 02000 0 04106    04103 TSX +0 07400 4 00017    04104 TXH +3 00000 0 03454   
 04105 TXH +3 00000 0 03437                                                                                             
                 PRMESS.($DELETED$,BZEL.(DERBC.(DCNT)),$ FILES$,BZEL.(DERBC.        075  LM00132
                1 (DRECS)),                                                         075  LM00133
                1 $ RECS.$)                                                         075  LM00134
 04106 TSX +0 07400 4 00014    04107 TXH +3 00000 0 03352    04110 STO +0 60100 0 04217    04111 TSX +0 07400 4 00005   
 04112 TXH +3 00000 0 04217    04113 STO +0 60100 0 04217    04114 TSX +0 07400 4 00014    04115 TXH +3 00000 0 03347   
 04116 STO +0 60100 0 04220    04117 TSX +0 07400 4 00005    04120 TXH +3 00000 0 04220    04121 STO +0 60100 0 04220   
 04122 TSX +0 07400 4 00020    04123 TXH +3 00000 0 03432    04124 TXH +3 00000 0 03433    04125 TXH +3 00000 0 04220   
 04126 TXH +3 00000 0 03443    04127 TXH +3 00000 0 04217    04130 TXH +3 00000 0 03450                                 
                 PRMESS.                                                            076  LM00135
 04131 TSX +0 07400 4 00020                                                                                             
                 PRMESS.(BZEL.(DERBC.(TRECS)),$ RECS IN,$,BZEL.(DERBC.              077  LM00136
                1 (TRECS-DRECS)),                                                   077  LM00137
                1 $ RECS OUT,$,BZEL.(DERBC.((100*DRECS)/TRECS)),$ PCT.$)            077  LM00138
 04132 LDQ +0 56000 0 03425    04133 MPY +0 20000 0 03352    04134 PXD -0 75400 0 00000    04135 LLS +0 76300 0 00000   
 04136 DVP +0 22100 0 03370    04137 STQ -0 60000 0 04220    04140 TSX +0 07400 4 00014    04141 TXH +3 00000 0 04220   
 04142 STO +0 60100 0 04220    04143 TSX +0 07400 4 00005    04144 TXH +3 00000 0 04220    04145 STO +0 60100 0 04220   
 04146 CLA +0 50000 0 03370    04147 SUB +0 40200 0 03352    04150 STO +0 60100 0 04217    04151 TSX +0 07400 4 00014   
 04152 TXH +3 00000 0 04217    04153 STO +0 60100 0 04217    04154 TSX +0 07400 4 00005    04155 TXH +3 00000 0 04217   
 04156 STO +0 60100 0 04217    04157 TSX +0 07400 4 00014    04160 TXH +3 00000 0 03370    04161 STO +0 60100 0 04221   
 04162 TSX +0 07400 4 00005    04163 TXH +3 00000 0 04221    04164 STO +0 60100 0 04221    04165 TSX +0 07400 4 00020   
 04166 TXH +3 00000 0 04221    04167 TXH +3 00000 0 03451    04170 TXH +3 00000 0 03440    04171 TXH +3 00000 0 04217   
 04172 TXH +3 00000 0 03451    04173 TXH +3 00000 0 03441    04174 TXH +3 00000 0 04220    04175 TXH +3 00000 0 03447   
                 PRMESS.                                                            078  LM00139
 04176 TSX +0 07400 4 00020                                                                                             
      NERR3      CHNCOM.(0)                                                         079  LM00140
 04177 TSX +0 07400 4 00007    04200 TXH +3 00000 0 03415                                                               
      ERR1       PRNTER.                                                            080  LM00144
 04201 TSX +0 07400 4 00021                                                                                             
                 PRMESS.($FATAL ERROR$)                                             081  LM00145
 04202 TSX +0 07400 4 00020    04203 TXH +3 00000 0 03436    04204 TXH +3 00000 0 03435                                 
                 T'O BAIL                                                           082  LM00146
 04205 TRA +0 02000 0 00025                                                                                             
      ERR2       PRNTER.                                                            083  LM00150
 04206 TSX +0 07400 4 00021                                                                                             
                 BFCLOS.(USR(7),USR(6),READM)                                       084  LM00151
 04207 TSX +0 07400 4 00002    04210 TXH +3 00000 0 03402    04211 TXH +3 00000 0 03403    04212 TXH +3 00000 0 00037   
                 T'O READM                                                          085  LM00152
 04213 TRA +0 02000 0 00037                                                                                             
      ERR3       PRNTER.                                                            086  LM00156
 04214 TSX +0 07400 4 00021                                                                                             
                 T'O READU                                                          087  LM00157
 04215 TRA +0 02000 0 00040                                                                                             
                 E'M                                                                088  LM00159
 04216 TSX +0 07400 4 00015                                                                                             
1                                                                                                PAGE 1     
                           RETRIEVE VERSION OF .SETUP                               
                  
                  
  BINARY CARD NO. .SETUP00    
                       00004         ENTRY   .SETUP   
                                     EXTERN  GETIME,CDATE   
                  
                                             THIS ROUTINE IS CALLED IMPLICITLY BY (MAIN)  
                                             IT'S ONLY FUNCTION IS TO GIVE THE CURRENT DATE     
                                             TO THE 'RLIBE' MODULE
                  
                                             THIS VERSION IS USED IN THE FOREGROUND RETRIEVES   
                  
                                                           D.R. WIDRIG  DEC. 1965   
                  
        TRANSFER VECTOR 
                  
  BINARY CARD NO. .SETUP01    
      00000  272563314425     GETIME
      00001  232421632560     CDATE 
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  336225636447     
                  
      00004  0634 00 4 00012  .SETUP SXA     IR4,4         SAVE CALLER  
      00005  0760 00 0 00016         LMTM                  7-TAG MODE   
      00006  0074 00 4 00000         TSX     GETIME,4      GET CURRENT DATE   
      00007 -0600 00 0 00014         STQ     DATE          SAVE IT
      00010  0074 00 4 00001         TSX     CDATE,4       GIVE DATE TO CONVERSION PACKAGE
      00011  3 00000 0 00014         PTH     DATE     
      00012  0774 00 4 00000  IR4    AXT     **,4          RESTORE IR4  
      00013  0020 00 4 00001         TRA     1,4           RETURN TO MAIN PROGRAM   
                  
                  
      00014  0 00000 0 00000  DATE   PZE  
                                     END  
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         15 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         12    IR4     4
         14   DATE     7,   11
          1  CDATE    10
          0 GETIME     6
          4 .SETUP     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1     MAD PROGRAM LISTING ... ... ...                 FILE   RLIBE   MAD            02/15/68    1740.5
-                 
                      TIME/DATE CONVERTERS, ALSO PROBNO/PROGNO CONVERTERS                              LM00001    
                      THIS PROGRAM MUST BE EDITED AND RE-COMPILED WHEN                                 LM00002    
                      THE NEW 'LOGIN' (PSN 50) TAKES EFFECT                                            LM00003    
                           D.R. WIDRIG  DEC. 1965                                                      LM00004    
                                                                                                       LM00005    
                  EXTERNAL FUNCTION (X1,Y)                                                        *001 LM00006    
                  NORMAL MODE IS INTEGER                                                          *002 LM00007    
                  STATEMENT LABEL Y                                                               *003 LM00008    
                                                                                                       LM00009    
                  VECTOR VALUES MESS1 = $ILLEGA******.....$,0,777777777777K                       *004 LM00010    
                                                                                                       LM00011    
                  VECTOR VALUES DAYS(1) = 31,28,31,30,31,30,31,31,30,31,30,31                     *005 LM00012    
                  VECTOR VALUES DMASK = 766074607170K                                             *006 LM00013    
                  VECTOR VALUES TMASK = 777774607060K                                             *007 LM00014    
                  VECTOR VALUES PMASK = 776060606060K                                             *008 LM00015    
                                                                                                       LM00016    
                      GET CURRENT DATE                                                                 LM00017    
                                                                                                       LM00018    
                  ENTRY TO CDATE.                                                                 *009 LM00019    
                  DATNOW = X1                                                                     *010 LM00020    
                  MONTH = BCDEC.(DATNOW.RS.24)                                                    *011 LM00021    
                  DAY = BCDEC.((DATNOW.RS.12).A.7777K)                                            *012 LM00022    
                  YEAR = BCDEC.(DATNOW.A.7777K)                                                   *013 LM00023    
                  FUNCTION RETURN                                                                 *014 LM00024    
                                                                                                       LM00025    
                      RETURN CURRENT DATE AS MMDDYY                                                    LM00026    
                                                                                                       LM00027    
                  ENTRY TO DATE.                                                                  *015 LM00028    
                  FUNCTION RETURN DATNOW                                                          *016 LM00029    
                                                                                                       LM00030    
                      CONVERT BCD DATE TO I/O FORMAT                                                   LM00031    
                                                                                                       LM00032    
                  ENTRY TO DATECV.                                                                *017 LM00033    
                  MESS1(1) = $L DATE$                                                             *018 LM00034    
                  DELTA = 0                                                                       *019 LM00035    
                  X = ZEL.(X1)                                                                    *020 LM00036    
                  WHENEVER (X.A.DMASK) .NE. 0, TRANSFER TO BAD                                    *021 LM00037    
                  MM = BCDEC.(X.RS.24)                                                            *022 LM00038    
                  DD = BCDEC.((X.RS.12).A.7777K)                                                  *023 LM00039    
                  YY = BCDEC.(X.A.7777K)                                                          *024 LM00040    
                  WHENEVER ((YY/4)*4.E.YY).AND.(MM.E.2), DELTA = 1                                *025 LM00041    
                  WHENEVER (MM.G.12).OR.(MM.E.0).OR.                                              *026 LM00042    
                1      (DD.G.(DAYS(MM)+DELTA)).OR.(YY.G.YEAR).OR.                                 *026 LM00043    
                2      ((YEAR-YY).G.1).OR.((YY.E.YEAR).AND.(MM.G.MONTH)).OR.                      *026 LM00044    
                3      ((YY.E.YEAR).AND.(MM.E.MONTH).AND.(DD.G.DAY))                              *026 LM00045    
                4      , TRANSFER TO BAD                                                          *026 LM00046    
                  FUNCTION RETURN (YY.LS.27).V.(MM.LS.23).V.(DD.LS.18)                            *027 LM00047    
                                                                                                       LM00048    
      BAD         MESS1(3) = X                                                                    *028 LM00049    
                  PRNTP.(MESS1)                                                                   *029 LM00050    
                  TRANSFER TO Y                                                                   *030 LM00051    
                                                                                                       LM00052    
                      CONVERT I/O DATE TO BCD                                                          LM00053    
                                                                                                       LM00054    
                  ENTRY TO CVDATE.                                                                *031 LM00055    
                  D = X1.RS.18                                                                    *032 LM00056    
                  FUNCTION RETURN (DERBC.(D.A.37K).LS.12).V.(DERBC.((D.RS.5).A.17K)               *033 LM00057    
                1      .LS.24).V.(DERBC.((D.RS.9).A.377K))                                        *033 LM00058    
                                                                                                       LM00059    
                      CONVERT TIME TO I/O FORMAT                                                       LM00060    
                                                                                                       LM00061    
                  ENTRY TO TIMECV.                                                                *034 LM00062    
                  MESS1(1) = $L TIME$                                                             *035 LM00063    
                  X = ZEL.(X1)                                                                    *036 LM00064    
                  WHENEVER (X.A.TMASK) .NE. 0, TRANSFER TO BAD                                    *037 LM00065    
                  HH = BCDEC.((X.RS.12).A.7777K)                                                  *038 LM00066    
                  MM = BCDEC.(X.A.7777K)                                                          *039 LM00067    
                  WHENEVER (HH.G.23).OR.(MM.G.59), TRANSFER TO BAD                                *040 LM00068    
                  FUNCTION RETURN HH*3600+MM*60                                                   *041 LM00069    
                                                                                                       LM00070    
                      CONVERT I/O TIME TO BCD                                                          LM00071    
                                                                                                       LM00072    
                  ENTRY TO CVTIME.                                                                *042 LM00073    
                  D = X1.A.777777K                                                                *043 LM00074    
                  HH = D/3600                                                                     *044 LM00075    
                  FUNCTION RETURN ((DERBC.(HH).LS.12).V.                                          *045 LM00076    
                1      (DERBC.((D-HH*3600)/60)).V.$  0000$)                                       *045 LM00077    
                                                                                                       LM00078    
                      CHECK VALIDITY OF PROGNO                                                         LM00079    
                                                                                                       LM00080    
                  ENTRY TO PROGN.                                                                 *046 LM00081    
                  MESS1(1) = $L PRGN$                                                             *047 LM00082    
                  X = X1                                                                          *048 LM00083    
                  WHENEVER (ZEL.(X).A.PMASK) .E. 0, FUNCTION RETURN X                             *049 LM00084    
                  WHENEVER (X.A.777777776060K).E. $CMFL00$, FUNCTION RETURN X                     *050 LM00085    
                  TRANSFER TO BAD                                                                 *051 LM00086    
                                                                                                       LM00087    
                      REDUCE PROBNO TO STANDARD FORM                                                   LM00088    
                                                                                                       LM00089    
                  ENTRY TO PROBN.                                                                 *052 LM00090    
                  MESS1(1) = $L PRBN$                                                             *053 LM00091    
                  X = X1                                                                          *054 LM00092    
                  WHENEVER (X.A.60K).NE.0, TRANSFER TO BAD                                        *055 LM00093    
                  THROUGH LOOP1, FOR I=6,6,I.E.30                                                 *056 LM00094    
                  WHENEVER (((X.RS.I).A.60K).NE.0),                                               *057 LM00095    
                1      FUNCTION RETURN BZEL.((((X.RS.I).A.77K).LS.24).V.                          *057 LM00096    
                2      ((77777777K.RS.(24-I)).A.X))                                               *057 LM00097    
      LOOP1       CONTINUE                                                                        *058 LM00098    
                  TRANSFER TO BAD                                                                 *059 LM00099    
                                                                                                       LM00100    
                  END OF FUNCTION                                                                 *060 LM00101    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00713 TRANSFER VECTOR LENGTH  00006 PROGRAM BEGINS    00111
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      PROBN  00574   0        PROGN  00541   0        CVTIME 00477   0        TIMECV 00420   0        CVDATE 00342   0  
      DATECV 00154   0        DATE   00147   0        CDATE  00112   0                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BAD    00007   4        DD     00027   1        HH     00033   1        MM     00042   1        X      00046   1  
      DATNOW 00010   1        DELTA  00030   1        I      00034   1        MONTH  00043   1        YEAR   00047   1  
      DAY    00011   1        DMASK  00031 A 1        LOOP1  00006   4        PMASK  00044 A 1        YY     00050   1  
      DAYS   00026 A 1        D      00032   1        MESS1  00041 A 1        TMASK  00045 A 1                          
0FUNCTION DICTIONARY    
      BCDEC  00000   1        BZEL   00001   1        DERBC  00002   1        EXIT   00003   1        PRNTP  00004   1  
      ZEL    00005   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00073 +000000000077     00100 +000077777777     00066 +000000000036     00056 +000000000006     00070 +000000000060    
 00104 -036047512245     00102 +234426430000     00110 -377777776060     00105 -036047512745     00107 -206000000000    
 00077 +000000777777     00075 +000000007020     00072 +000000000074     00071 +000000000073     00106 -036063314425    
 00067 +000000000037     00061 +000000000017     00055 +000000000005     00074 +000000000377     00057 +000000000011    
 00065 +000000000033     00063 +000000000027     00062 +000000000022     00054 +000000000004     00053 +000000000002    
 00051 +000000000000     00103 -036024216325     00076 +000000007777     00060 +000000000014     00064 +000000000030    
 00052 +000000000001     00101 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00007 TXL -300336000334                                                                                                
0PROGRAM    
                 EXTERNAL FUNCTION (X1,Y)                                           001  LM00006
                 N'R                                                                002  LM00007
                 S'L Y                                                              003  LM00008
                 V'S MESS1 = $ILLEGA******.....$,0,777777777777K                    004  LM00010
 00035     -3 77777 7 77777    00036     +0 00000 0 00000    00037     +3 33333 3 33360    00040     -1 45454 5 45454   
 00041     +3 14343 2 52721                                                                                             
                 V'S DAYS(1) = 31,28,31,30,31,30,31,31,30,31,30,31                  005  LM00012
 00012     +0 00000 0 00037    00013     +0 00000 0 00036    00014     +0 00000 0 00037    00015     +0 00000 0 00036   
 00016     +0 00000 0 00037    00017     +0 00000 0 00037    00020     +0 00000 0 00036    00021     +0 00000 0 00037   
 00022     +0 00000 0 00036    00023     +0 00000 0 00037    00024     +0 00000 0 00034    00025     +0 00000 0 00037   
                 V'S DMASK = 766074607170K                                          006  LM00013
 00031     -3 66074 6 07170                                                                                             
                 V'S TMASK = 777774607060K                                          007  LM00014
 00045     -3 77774 6 07060                                                                                             
                 V'S PMASK = 776060606060K                                          008  LM00015
 00044     -3 76060 6 06060                                                                                             
                 E'O CDATE.                                                         009  LM00019
 00111 TRA +0 02000 0 00114    00112 SXA +0 63400 2 00664    00113 TSX +0 07400 2 00664                                 
                 DATNOW = X1                                                        010  LM00020
 00114 CLA +0 50000 0 00024    00115 STO +0 60100 0 00010                                                               
                 MONTH = BCDEC.(DATNOW.RS.24)                                       011  LM00021
 00116 CAL -0 50000 0 00064    00117 STA +0 62100 0 00121    00120 CAL -0 50000 0 00010    00121 LGR -0 76500 0 00000   
 00122 SLW +0 60200 0 00706    00123 TSX +0 07400 4 00000    00124 TXH +3 00000 0 00706    00125 STO +0 60100 0 00043   
                 DAY = BCDEC.((DATNOW.RS.12).A.7777K)                               012  LM00022
 00126 CAL -0 50000 0 00060    00127 STA +0 62100 0 00131    00130 CAL -0 50000 0 00010    00131 LGR -0 76500 0 00000   
 00132 ANA -0 32000 0 00076    00133 SLW +0 60200 0 00706    00134 TSX +0 07400 4 00000    00135 TXH +3 00000 0 00706   
 00136 STO +0 60100 0 00011                                                                                             
                 YEAR = BCDEC.(DATNOW.A.7777K)                                      013  LM00023
 00137 CAL -0 50000 0 00010    00140 ANA -0 32000 0 00076    00141 SLW +0 60200 0 00706    00142 TSX +0 07400 4 00000   
 00143 TXH +3 00000 0 00706    00144 STO +0 60100 0 00047                                                               
                 F'N                                                                014  LM00024
 00145 TRA +0 02000 0 00702                                                                                             
                 E'O DATE.                                                          015  LM00028
 00146 TRA +0 02000 0 00151    00147 SXA +0 63400 2 00664    00150 TSX +0 07400 2 00664                                 
                 F'N DATNOW                                                         016  LM00029
 00151 CLA +0 50000 0 00010    00152 TRA +0 02000 0 00702                                                               
                 E'O DATECV.                                                        017  LM00033
 00153 TRA +0 02000 0 00156    00154 SXA +0 63400 2 00664    00155 TSX +0 07400 2 00664                                 
                 MESS1(1) = $L DATE$                                                018  LM00034
 00156 CLA +0 50000 0 00103    00157 STO +0 60100 0 00040                                                               
                 DELTA = 0                                                          019  LM00035
 00160 CLA +0 50000 0 00051    00161 STO +0 60100 0 00030                                                               
                 X = ZEL.(X1)                                                       020  LM00036
 00162 TSX +0 07400 4 00005    00163 TXH +3 00000 0 00024    00164 STO +0 60100 0 00046                                 
                 W'R (X.A.DMASK) .NE. 0, T'O BAD                                    021  LM00037
 00165 CAL -0 50000 0 00046    00166 ANA -0 32000 0 00031    00167 SLW +0 60200 0 00706    00170 CLA +0 50000 0 00706   
 00171 SUB +0 40200 0 00051    00172 TZE +0 10000 0 00174    00173 TRA +0 02000 0 00007                                 
                 MM = BCDEC.(X.RS.24)                                               022  LM00038
 00174 CAL -0 50000 0 00064    00175 STA +0 62100 0 00177    00176 CAL -0 50000 0 00046    00177 LGR -0 76500 0 00000   
 00200 SLW +0 60200 0 00706    00201 TSX +0 07400 4 00000    00202 TXH +3 00000 0 00706    00203 STO +0 60100 0 00042   
                 DD = BCDEC.((X.RS.12).A.7777K)                                     023  LM00039
 00204 CAL -0 50000 0 00060    00205 STA +0 62100 0 00207    00206 CAL -0 50000 0 00046    00207 LGR -0 76500 0 00000   
 00210 ANA -0 32000 0 00076    00211 SLW +0 60200 0 00706    00212 TSX +0 07400 4 00000    00213 TXH +3 00000 0 00706   
 00214 STO +0 60100 0 00027                                                                                             
                 YY = BCDEC.(X.A.7777K)                                             024  LM00040
 00215 CAL -0 50000 0 00046    00216 ANA -0 32000 0 00076    00217 SLW +0 60200 0 00706    00220 TSX +0 07400 4 00000   
 00221 TXH +3 00000 0 00706    00222 STO +0 60100 0 00050                                                               
                 W'R ((YY/4)*4.E.YY).AND.(MM.E.2), DELTA = 1                        025  LM00041
 00223 CLA +0 50000 0 00042    00224 SUB +0 40200 0 00053    00225 TNZ -0 10000 0 00240    00226 LDQ +0 56000 0 00050   
 00227 PXD -0 75400 0 00000    00230 LLS +0 76300 0 00000    00231 DVP +0 22100 0 00054    00232 MPY +0 20000 0 00054   
 00233 XCA +0 13100 0 00000    00234 SUB +0 40200 0 00050    00235 TNZ -0 10000 0 00240    00236 CLA +0 50000 0 00052   
 00237 STO +0 60100 0 00030                                                                                             
                 W'R (MM.G.12).OR.(MM.E.0).OR.                                      026  LM00042
                1     (DD.G.(DAYS(MM)+DELTA)).OR.(YY.G.YEAR).OR.                    026  LM00043
                2     ((YEAR-YY).G.1).OR.((YY.E.YEAR).AND.(MM.G.MONTH)).OR.         026  LM00044
                3     ((YY.E.YEAR).AND.(MM.E.MONTH).AND.(DD.G.DAY))                 026  LM00045
                4     , T'O BAD                                                     026  LM00046
 00240 CLA +0 50000 0 00027    00241 SUB +0 40200 0 00011    00242 TZE +0 10000 0 00252    00243 TMI -0 12000 0 00252   
 00244 CLA +0 50000 0 00042    00245 SUB +0 40200 0 00043    00246 TNZ -0 10000 0 00252    00247 CLA +0 50000 0 00050   
 00250 SUB +0 40200 0 00047    00251 TZE +0 10000 0 00310    00252 CLA +0 50000 0 00042    00253 SUB +0 40200 0 00043   
 00254 TZE +0 10000 0 00261    00255 TMI -0 12000 0 00261    00256 CLA +0 50000 0 00050    00257 SUB +0 40200 0 00047   
 00260 TZE +0 10000 0 00310    00261 CLA +0 50000 0 00047    00262 SUB +0 40200 0 00050    00263 SUB +0 40200 0 00052   
 00264 TZE +0 10000 0 00266    00265 TPL +0 12000 0 00310    00266 CLA +0 50000 0 00050    00267 SUB +0 40200 0 00047   
 00270 TZE +0 10000 0 00272    00271 TPL +0 12000 0 00310    00272 LXA +0 53400 1 00042    00273 CLA +0 50000 1 00026   
 00274 ADD +0 40000 0 00030    00275 CHS +0 76000 0 00002    00276 ADD +0 40000 0 00027    00277 TZE +0 10000 0 00301   
 00300 TPL +0 12000 0 00310    00301 CLA +0 50000 0 00042    00302 SUB +0 40200 0 00051    00303 TZE +0 10000 0 00310   
 00304 CLA +0 50000 0 00042    00305 SUB +0 40200 0 00060    00306 TZE +0 10000 0 00311    00307 TMI -0 12000 0 00311   
 00310 TRA +0 02000 0 00007                                                                                             
                 F'N (YY.LS.27).V.(MM.LS.23).V.(DD.LS.18)                           027  LM00047
 00311 CAL -0 50000 0 00062    00312 STA +0 62100 0 00314    00313 CAL -0 50000 0 00027    00314 ALS +0 76700 0 00000   
 00315 SLW +0 60200 0 00706    00316 CAL -0 50000 0 00063    00317 STA +0 62100 0 00321    00320 CAL -0 50000 0 00042   
 00321 ALS +0 76700 0 00000    00322 SLW +0 60200 0 00707    00323 CAL -0 50000 0 00065    00324 STA +0 62100 0 00326   
 00325 CAL -0 50000 0 00050    00326 ALS +0 76700 0 00000    00327 ORA -0 50100 0 00707    00330 ORA -0 50100 0 00706   
 00331 SLW +0 60200 0 00707    00332 CLA +0 50000 0 00707    00333 TRA +0 02000 0 00702                                 
      BAD        MESS1(3) = X                                                       028  LM00049
 00334 CLA +0 50000 0 00046    00335 STO +0 60100 0 00036                                                               
                 PRNTP.(MESS1)                                                      029  LM00050
 00336 TSX +0 07400 4 00004    00337 TXH +3 00000 0 00041                                                               
                 T'O Y                                                              030  LM00051
 00340 TRA +0 02000 0 00024                                                                                             
                 E'O CVDATE.                                                        031  LM00055
 00341 TRA +0 02000 0 00344    00342 SXA +0 63400 2 00664    00343 TSX +0 07400 2 00664                                 
                 D = X1.RS.18                                                       032  LM00056
 00344 CAL -0 50000 0 00062    00345 STA +0 62100 0 00347    00346 CAL -0 50000 0 00024    00347 LGR -0 76500 0 00000   
 00350 SLW +0 60200 0 00032                                                                                             
                 F'N (DERBC.(D.A.37K).LS.12).V.(DERBC.((D.RS.5).A.17K)              033  LM00057
                1     .LS.24).V.(DERBC.((D.RS.9).A.377K))                           033  LM00058
 00351 CAL -0 50000 0 00057    00352 STA +0 62100 0 00354    00353 CAL -0 50000 0 00032    00354 LGR -0 76500 0 00000   
 00355 ANA -0 32000 0 00074    00356 SLW +0 60200 0 00707    00357 TSX +0 07400 4 00002    00360 TXH +3 00000 0 00707   
 00361 STO +0 60100 0 00707    00362 CAL -0 50000 0 00055    00363 STA +0 62100 0 00365    00364 CAL -0 50000 0 00032   
 00365 LGR -0 76500 0 00000    00366 ANA -0 32000 0 00061    00367 SLW +0 60200 0 00706    00370 TSX +0 07400 4 00002   
 00371 TXH +3 00000 0 00706    00372 STO +0 60100 0 00706    00373 CAL -0 50000 0 00064    00374 STA +0 62100 0 00376   
 00375 CAL -0 50000 0 00706    00376 ALS +0 76700 0 00000    00377 SLW +0 60200 0 00706    00400 CAL -0 50000 0 00032   
 00401 ANA -0 32000 0 00067    00402 SLW +0 60200 0 00710    00403 TSX +0 07400 4 00002    00404 TXH +3 00000 0 00710   
 00405 STO +0 60100 0 00710    00406 CAL -0 50000 0 00060    00407 STA +0 62100 0 00411    00410 CAL -0 50000 0 00710   
 00411 ALS +0 76700 0 00000    00412 ORA -0 50100 0 00706    00413 ORA -0 50100 0 00707    00414 SLW +0 60200 0 00710   
 00415 CLA +0 50000 0 00710    00416 TRA +0 02000 0 00702                                                               
                 E'O TIMECV.                                                        034  LM00062
 00417 TRA +0 02000 0 00422    00420 SXA +0 63400 2 00664    00421 TSX +0 07400 2 00664                                 
                 MESS1(1) = $L TIME$                                                035  LM00063
 00422 CLA +0 50000 0 00106    00423 STO +0 60100 0 00040                                                               
                 X = ZEL.(X1)                                                       036  LM00064
 00424 TSX +0 07400 4 00005    00425 TXH +3 00000 0 00024    00426 STO +0 60100 0 00046                                 
                 W'R (X.A.TMASK) .NE. 0, T'O BAD                                    037  LM00065
 00427 CAL -0 50000 0 00046    00430 ANA -0 32000 0 00045    00431 SLW +0 60200 0 00710    00432 CLA +0 50000 0 00710   
 00433 SUB +0 40200 0 00051    00434 TZE +0 10000 0 00436    00435 TRA +0 02000 0 00007                                 
                 HH = BCDEC.((X.RS.12).A.7777K)                                     038  LM00066
 00436 CAL -0 50000 0 00060    00437 STA +0 62100 0 00441    00440 CAL -0 50000 0 00046    00441 LGR -0 76500 0 00000   
 00442 ANA -0 32000 0 00076    00443 SLW +0 60200 0 00710    00444 TSX +0 07400 4 00000    00445 TXH +3 00000 0 00710   
 00446 STO +0 60100 0 00033                                                                                             
                 MM = BCDEC.(X.A.7777K)                                             039  LM00067
 00447 CAL -0 50000 0 00046    00450 ANA -0 32000 0 00076    00451 SLW +0 60200 0 00710    00452 TSX +0 07400 4 00000   
 00453 TXH +3 00000 0 00710    00454 STO +0 60100 0 00042                                                               
                 W'R (HH.G.23).OR.(MM.G.59), T'O BAD                                040  LM00068
 00455 CLA +0 50000 0 00042    00456 SUB +0 40200 0 00071    00457 TZE +0 10000 0 00461    00460 TPL +0 12000 0 00465   
 00461 CLA +0 50000 0 00033    00462 SUB +0 40200 0 00063    00463 TZE +0 10000 0 00466    00464 TMI -0 12000 0 00466   
 00465 TRA +0 02000 0 00007                                                                                             
                 F'N HH*3600+MM*60                                                  041  LM00069
 00466 LDQ +0 56000 0 00042    00467 MPY +0 20000 0 00072    00470 STQ -0 60000 0 00710    00471 LDQ +0 56000 0 00033   
 00472 MPY +0 20000 0 00075    00473 XCA +0 13100 0 00000    00474 ADD +0 40000 0 00710    00475 TRA +0 02000 0 00702   
                 E'O CVTIME.                                                        042  LM00073
 00476 TRA +0 02000 0 00501    00477 SXA +0 63400 2 00664    00500 TSX +0 07400 2 00664                                 
                 D = X1.A.777777K                                                   043  LM00074
 00501 CAL -0 50000 0 00024    00502 ANA -0 32000 0 00077    00503 SLW +0 60200 0 00032                                 
                 HH = D/3600                                                        044  LM00075
 00504 LDQ +0 56000 0 00032    00505 PXD -0 75400 0 00000    00506 LLS +0 76300 0 00000    00507 DVP +0 22100 0 00075   
 00510 STQ -0 60000 0 00033                                                                                             
                 F'N ((DERBC.(HH).LS.12).V.                                         045  LM00076
                1     (DERBC.((D-HH*3600)/60)).V.$  0000$)                          045  LM00077
 00511 LDQ +0 56000 0 00033    00512 MPY +0 20000 0 00075    00513 XCA +0 13100 0 00000    00514 CHS +0 76000 0 00002   
 00515 ADD +0 40000 0 00032    00516 LRS +0 76500 0 00043    00517 DVP +0 22100 0 00072    00520 STQ -0 60000 0 00710   
 00521 TSX +0 07400 4 00002    00522 TXH +3 00000 0 00710    00523 STO +0 60100 0 00710    00524 TSX +0 07400 4 00002   
 00525 TXH +3 00000 0 00033    00526 STO +0 60100 0 00707    00527 CAL -0 50000 0 00060    00530 STA +0 62100 0 00532   
 00531 CAL -0 50000 0 00707    00532 ALS +0 76700 0 00000    00533 ORA -0 50100 0 00710    00534 ORA -0 50100 0 00107   
 00535 SLW +0 60200 0 00710    00536 CLA +0 50000 0 00710    00537 TRA +0 02000 0 00702                                 
                 E'O PROGN.                                                         046  LM00081
 00540 TRA +0 02000 0 00543    00541 SXA +0 63400 2 00664    00542 TSX +0 07400 2 00664                                 
                 MESS1(1) = $L PRGN$                                                047  LM00082
 00543 CLA +0 50000 0 00105    00544 STO +0 60100 0 00040                                                               
                 X = X1                                                             048  LM00083
 00545 CLA +0 50000 0 00024    00546 STO +0 60100 0 00046                                                               
                 W'R (ZEL.(X).A.PMASK) .E. 0, F'N X                                 049  LM00084
 00547 TSX +0 07400 4 00005    00550 TXH +3 00000 0 00046    00551 STO +0 60100 0 00710    00552 CAL -0 50000 0 00710   
 00553 ANA -0 32000 0 00044    00554 SLW +0 60200 0 00710    00555 CLA +0 50000 0 00710    00556 SUB +0 40200 0 00051   
 00557 TNZ -0 10000 0 00562    00560 CLA +0 50000 0 00046    00561 TRA +0 02000 0 00702                                 
                 W'R (X.A.777777776060K).E. $CMFL00$, F'N X                         050  LM00085
 00562 CAL -0 50000 0 00046    00563 ANA -0 32000 0 00110    00564 SLW +0 60200 0 00710    00565 CLA +0 50000 0 00710   
 00566 SUB +0 40200 0 00102    00567 TNZ -0 10000 0 00572    00570 CLA +0 50000 0 00046    00571 TRA +0 02000 0 00702   
                 T'O BAD                                                            051  LM00086
 00572 TRA +0 02000 0 00007                                                                                             
                 E'O PROBN.                                                         052  LM00090
 00573 TRA +0 02000 0 00576    00574 SXA +0 63400 2 00664    00575 TSX +0 07400 2 00664                                 
                 MESS1(1) = $L PRBN$                                                053  LM00091
 00576 CLA +0 50000 0 00104    00577 STO +0 60100 0 00040                                                               
                 X = X1                                                             054  LM00092
 00600 CLA +0 50000 0 00024    00601 STO +0 60100 0 00046                                                               
                 W'R (X.A.60K).NE.0, T'O BAD                                        055  LM00093
 00602 CAL -0 50000 0 00046    00603 ANA -0 32000 0 00070    00604 SLW +0 60200 0 00710    00605 CLA +0 50000 0 00710   
 00606 SUB +0 40200 0 00051    00607 TZE +0 10000 0 00611    00610 TRA +0 02000 0 00007                                 
                 T'H LOOP1, FOR I=6,6,I.E.30                                        056  LM00094
 00611 CLA +0 50000 0 00056    00612 STO +0 60100 0 00034    00613 TRA +0 02000 0 00617    00614 CLA +0 50000 0 00034   
 00615 ADD +0 40000 0 00056    00616 STO +0 60100 0 00034    00617 CLA +0 50000 0 00034    00620 SUB +0 40200 0 00066   
 00621 TZE +0 10000 0 00662                                                                                             
                 W'R (((X.RS.I).A.60K).NE.0),                                       057  LM00095
                1     F'N BZEL.((((X.RS.I).A.77K).LS.24).V.                         057  LM00096
                2     ((77777777K.RS.(24-I)).A.X))                                  057  LM00097
 00622 CAL -0 50000 0 00034    00623 STA +0 62100 0 00625    00624 CAL -0 50000 0 00046    00625 LGR -0 76500 0 00000   
 00626 ANA -0 32000 0 00070    00627 SLW +0 60200 0 00710    00630 CLA +0 50000 0 00710    00631 SUB +0 40200 0 00051   
 00632 TZE +0 10000 0 00661    00633 CLA +0 50000 0 00064    00634 SUB +0 40200 0 00034    00635 STA +0 62100 0 00637   
 00636 CAL -0 50000 0 00100    00637 LGR -0 76500 0 00000    00640 ANA -0 32000 0 00046    00641 SLW +0 60200 0 00710   
 00642 CAL -0 50000 0 00034    00643 STA +0 62100 0 00645    00644 CAL -0 50000 0 00046    00645 LGR -0 76500 0 00000   
 00646 ANA -0 32000 0 00073    00647 SLW +0 60200 0 00707    00650 CAL -0 50000 0 00064    00651 STA +0 62100 0 00653   
 00652 CAL -0 50000 0 00707    00653 ALS +0 76700 0 00000    00654 ORA -0 50100 0 00710    00655 SLW +0 60200 0 00710   
 00656 TSX +0 07400 4 00001    00657 TXH +3 00000 0 00710    00660 TRA +0 02000 0 00702                                 
      LOOP1      C'E                                                                058  LM00098
 00661 TRA +0 02000 0 00614                                                                                             
                 T'O BAD                                                            059  LM00099
 00662 TRA +0 02000 0 00007                                                                                             
                 E'N                                                                060  LM00101
 00663 TSX +0 07400 4 00003    00664 TXH +3 00000 0 00000    00665 SXD -0 63400 1 00664    00666 SXA +0 63400 4 00702   
 00667 CLA +0 50000 4 00001    00670 STA +0 62100 0 00114    00671 STO +0 60100 0 00163    00672 STA +0 62100 0 00346   
 00673 STO +0 60100 0 00425    00674 STA +0 62100 0 00501    00675 STA +0 62100 0 00545    00676 STA +0 62100 0 00600   
 00677 CLA +0 50000 4 00002    00700 STA +0 62100 0 00340    00701 TRA +0 02000 2 00001    00702 AXT +0 77400 4 00000   
 00703 LXA +0 53400 2 00664    00704 LXD -0 53400 1 00664    00705 TRA +0 02000 4 00001                                 




 RNAME   BCD 09/20/68 0220.9    4205         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   RNAME   MAD            02/15/68    1750.9
-                 
                  RNAME - WRITTEN BY ROGER ROACH 6-22-67                                               LM00001    
                                                                                                       LM00002    
                  PROGRAM TO GIVE SPECIAL NAMES TO FILES.                                              LM00003    
                    THE PROGRAM WILL RECOGNIZE THE FOLLOWING                                           LM00004    
                    SPECIAL ARGUMENTS-                                                                 LM00005    
                      DATE = SUBSTITUTES THE CURRENT DATE                                              LM00006    
                      TIME = SUBSTITUTES THE CURRENT TIME                                              LM00007    
                      MONTH = SUBSTITUTES THE CURRENT MONTH                                            LM00008    
                      LMONTH = SUBSTITUTES LAST MONTH                                                  LM00009    
                       PROB  = USERS PROBLEM NUMBER                                                    LM00010    
                       PROG  = USERS PROGRAMMER NUMBER                                                 LM00011    
                      PROGL  = USERS LOGOUT SAVED                                                      LM00012    
                      NAME   = USERS NAME                                                              LM00013    
                                                                                                       LM00014    
                  VECTOR VALUES DATE = $  DATE$                                                   *001 LM00015    
                  VECTOR VALUES TIME = $  TIME$                                                   *002 LM00016    
                  VECTOR VALUES MONTH= $ MONTH$                                                   *003 LM00017    
                  VECTOR VALUES LMONTH = $LMONTH$                                                 *004 LM00018    
                  VECTOR VALUES PROB = $  PROB$                                                   *005 LM00019    
                  VECTOR VALUES PROG = $  PROG$                                                   *006 LM00020    
                  VECTOR VALUES PROGL = $ PROGL$                                                  *007 LM00021    
                  VECTOR VALUES NAME = $  NAME$                                                   *008 LM00022    
                  VECTOR VALUES FEW = 262566575757K                                               *009 LM00023    
                  VECTOR VALUES MANY = 442145705757K                                              *010 LM00024    
                  VECTOR VALUES FN = 777777777777K                                                *011 LM00025    
                  VECTOR VALUES MONTHS= $   DEC$,$   JAN$,$   FEB$,$ MARCH$,$ APRIL$,             *012 LM00026    
                1  $   MAY$,$  JUNE$,$  JULY$,$AUGUST$,$  SEPT$,                                  *012 LM00027    
                2  $   OCT$,$   NOV$,$   DEC$                                                     *012 LM00028    
                  DIMENSION N(4)                                                                  *013 LM00029    
                  DIMENSION ME(2)                                                                 *014 LM00030    
                  NORMAL MODE IS INTEGER                                                          *015 LM00031    
                                                                                                       LM00032    
                  DEFINE UNARY OPERATOR .MQ. , PRECEDENCE HIGHER THAN .ABS.                       *016 LM00033    
                  MODE STRUCTURE .MQ. 1 TO 1                                                      *017 LM00034    
             OUT  MQ                                                                              *018 LM00035    
             END                                                                                  *019 LM00036    
                                                                                                       LM00037    
                                                                                                       LM00038    
                  THROUGH LOOP1, FOR I = 1,1,I.G.4                                                *020 LM00039    
      LOOP1       N(I) = COMARG.(I)                                                               *021 LM00040    
                  ATTNAM.(ME(2)...2)                                                              *022 LM00041    
                                                                                                       LM00042    
                  THROUGH LOOP2, FOR I = 1,1,I.G.3                                                *023 LM00043    
      LOOP2       WHENEVER N(I).E.FN, TRANSFER TO FORMAT                                          *024 LM00044    
                  WHENEVER N(4) .E. FN                                                            *025 LM00045    
                    N(4) = N(2)                                                                   *026 LM00046    
                    TRANSFER TO OVER1                                                             *027 LM00047    
                    END OF CONDITIONAL                                                            *028 LM00048    
                  WHENEVER COMARG.(5).NE.FN, TRANSFER TO FORMT2                                   *029 LM00049    
      OVER1       THROUGH LOOP3, FOR I = 1,1,I.G.4                                                *030 LM00050    
                  WHENEVER N(I).E.DATE, N(I) = .MQ.GETIME.(0)                                     *031 LM00051    
                  WHENEVER N(I).E.TIME, GETTM.(MESS,N(I))                                         *032 LM00052    
                  WHENEVER N(I).E.MONTH, N(I)=MONTHS(BCDEC.(.MQ.GETIME.(0).RS.24))                *033 LM00053    
                  WHENEVER N(I).E.LMONTH,N(I)=MONTHS(BCDEC.(.MQ.GETIME.(0).RS.24)-1)              *034 LM00054    
                  WHENEVER N(I).E.PROB, N(I) = ME(2)                                              *035 LM00055    
                  WHENEVER N(I).E.PROG, N(I) = ME(1)                                              *036 LM00056    
                  WHENEVER N(I).E.PROGL, N(I) = ((ME(1).LS.6).V.$00000L$)                         *037 LM00057    
      LOOP3       WHENEVER N(I).E.NAME, N(I) = GLOC.(COMLOC.($UNAME$) +                           *038 LM00058    
                1    GLOC.(COMLOC.($USER$)))                                                      *038 LM00059    
                                                                                                       LM00060    
                  CHFILE.(N(1),N(2),-0,N(3),N(4),ERR)                                             *039 LM00061    
                  CHNCOM.(0)                                                                      *040 LM00062    
                                                                                                       LM00063    
      FORMAT      MESS = FEW                                                                      *041 LM00064    
                  TRANSFER TO OVER2                                                               *042 LM00065    
      FORMT2      MESS = MANY                                                                     *043 LM00066    
      OVER2       PRMESS.($  TOO$,MESS,$ ARGUMENTS.$)                                             *044 LM00067    
                  DEAD.                                                                           *045 LM00068    
      ERR         NCOM.($PRNTER$,371K)                                                            *046 LM00069    
                  DEAD.                                                                           *047 LM00070    
                  END OF PROGRAM                                                                  *048 LM00071    
                                         MODE STRUCTURE .MQ. 1 TO 1           017  LM00034
 (THE NUMERIC FORM OF THE OPERATOR-MODE ARGUMENT IS    11101 )    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00375 TRANSFER VECTOR LENGTH  00016 PROGRAM BEGINS    00107
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      DATE   00024 A 1        FORMT2 00021   4        LOOP3  00016   4        MONTHS 00053 A 1        PROB   00062 A 1  
      ERR    00017   4        I      00027   1        MANY   00031 A 1        NAME   00054 A 1        PROGL  00063 A 1  
      FEW    00025 A 1        LMONTH 00030 A 1        ME     00034 A 1        N      00061 A 1        PROG   00064 A 1  
      FN     00026 A 1        LOOP1  00016   4        MESS   00035   1        OVER1  00022   4        TIME   00065 A 1  
      FORMAT 00020   4        LOOP2  00016   4        MONTH  00036 A 1        OVER2  00023   4                          
0FUNCTION DICTIONARY    
      ATTNAM 00000   1        BCDEC  00001   1        CHFILE 00002   1        CHNCOM 00003   1        COMARG 00004   1  
      COMLOC 00005   1        DEAD   00006   1        EXIT   00007   1        GETIME 00010   1        GETTM  00011   1  
      GLOC   00012   1        .SETUP 00013   1        NCOM   00014   1        PRMESS 00015   1                          
0ABSOLUTE CONSTANTS     
 00077 +000000000371     00102 -075145632551     00101 +254563623360     00103 -202151276444     00104 -206063464660    
 00105 -244521442560     00106 -246225516060     00076 +000000000043     00074 +000000000006     00075 +000000000030    
 00066 +000000000000     00073 +000000000005     00071 +000000000003     00070 +000000000002     00072 +000000000004    
 00067 +000000000001     00100 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00017 TXL -300370000365       00020 TXL -300354000352       00021 TXL -300357000355       00022 TXL -300176000164      
 00023 TXL -300364000357                                                                                                
0PROGRAM    
                 V'S DATE = $  DATE$                                                001  LM00015
 00107 TSX +0 07400 4 00013    00024     -2 06024 2 16325                                                               
                 V'S TIME = $  TIME$                                                002  LM00016
 00065     -2 06063 3 14425                                                                                             
                 V'S MONTH= $ MONTH$                                                003  LM00017
 00036     -2 04446 4 56330                                                                                             
                 V'S LMONTH = $LMONTH$                                              004  LM00018
 00030     -0 34446 4 56330                                                                                             
                 V'S PROB = $  PROB$                                                005  LM00019
 00062     -2 06047 5 14622                                                                                             
                 V'S PROG = $  PROG$                                                006  LM00020
 00064     -2 06047 5 14627                                                                                             
                 V'S PROGL = $ PROGL$                                               007  LM00021
 00063     -2 04751 4 62743                                                                                             
                 V'S NAME = $  NAME$                                                008  LM00022
 00054     -2 06045 2 14425                                                                                             
                 V'S FEW = 262566575757K                                            009  LM00023
 00025     +2 62566 5 75757                                                                                             
                 V'S MANY = 442145705757K                                           010  LM00024
 00031     -0 42145 7 05757                                                                                             
                 V'S FN = 777777777777K                                             011  LM00025
 00026     -3 77777 7 77777                                                                                             
                 V'S MONTHS= $   DEC$,$   JAN$,$   FEB$,$ MARCH$,$ APRIL$,          012  LM00026
                1 $   MAY$,$  JUNE$,$  JULY$,$AUGUST$,$  SEPT$,                     012  LM00027
                2 $   OCT$,$   NOV$,$   DEC$                                        012  LM00028
 00037     -2 06060 2 42523    00040     -2 06060 4 54665    00041     -2 06060 4 62363    00042     -2 06062 2 54763   
 00043     +2 16427 6 46263    00044     -2 06041 6 44370    00045     -2 06041 6 44525    00046     -2 06060 4 42170   
 00047     -2 02147 5 13143    00050     -2 04421 5 12330    00051     -2 06060 2 62522    00052     -2 06060 4 12145   
 00053     -2 06060 2 42523                                                                                             
                 D'N N(4)                                                           013  LM00029
                 D'N ME(2)                                                          014  LM00030
                 N'R                                                                015  LM00031
                 DEFINE UNARY OPERATOR .MQ. , PRECEDENCE HIGHER THAN .ABS.          016  LM00033
                 MODE STRUCTURE .MQ. 1 TO 1                                         017  LM00034
                 T'H LOOP1, FOR I = 1,1,I.G.4                                       020  LM00039
 00110 CLA +0 50000 0 00067    00111 STO +0 60100 0 00027    00112 TRA +0 02000 0 00116    00113 CLA +0 50000 0 00027   
 00114 ADD +0 40000 0 00067    00115 STO +0 60100 0 00027    00116 CLA +0 50000 0 00027    00117 SUB +0 40200 0 00072   
 00120 TZE +0 10000 0 00122    00121 TPL +0 12000 0 00127                                                               
      LOOP1      N(I) = COMARG.(I)                                                  021  LM00040
 00122 TSX +0 07400 4 00004    00123 TXH +3 00000 0 00027    00124 LXA +0 53400 1 00027    00125 STO +0 60100 1 00061   
 00126 TRA +0 02000 0 00113                                                                                             
                 ATTNAM.(ME(2)...2)                                                 022  LM00041
 00127 TSX +0 07400 4 00000    00130 TIX +2 00070 0 00032                                                               
                 T'H LOOP2, FOR I = 1,1,I.G.3                                       023  LM00043
 00131 CLA +0 50000 0 00067    00132 STO +0 60100 0 00027    00133 TRA +0 02000 0 00137    00134 CLA +0 50000 0 00027   
 00135 ADD +0 40000 0 00067    00136 STO +0 60100 0 00027    00137 CLA +0 50000 0 00027    00140 SUB +0 40200 0 00071   
 00141 TZE +0 10000 0 00143    00142 TPL +0 12000 0 00151                                                               
      LOOP2      W'R N(I).E.FN, T'O FORMAT                                          024  LM00044
 00143 LXA +0 53400 1 00027    00144 CLA +0 50000 1 00061    00145 SUB +0 40200 0 00026    00146 TNZ -0 10000 0 00150   
 00147 TRA +0 02000 0 00020    00150 TRA +0 02000 0 00134                                                               
                 W'R N(4) .E. FN                                                    025  LM00045
 00151 CLA +0 50000 0 00055    00152 SUB +0 40200 0 00026    00153 TNZ -0 10000 0 00157                                 
                   N(4) = N(2)                                                      026  LM00046
 00154 CLA +0 50000 0 00057    00155 STO +0 60100 0 00055                                                               
                   T'O OVER1                                                        027  LM00047
 00156 TRA +0 02000 0 00022                                                                                             
                   E'L                                                              028  LM00048
                 W'R COMARG.(5).NE.FN, T'O FORMT2                                   029  LM00049
 00157 TSX +0 07400 4 00004    00160 TXH +3 00000 0 00073    00161 SUB +0 40200 0 00026    00162 TZE +0 10000 0 00164   
 00163 TRA +0 02000 0 00021                                                                                             
      OVER1      T'H LOOP3, FOR I = 1,1,I.G.4                                       030  LM00050
 00164 CLA +0 50000 0 00067    00165 STO +0 60100 0 00027    00166 TRA +0 02000 0 00172    00167 CLA +0 50000 0 00027   
 00170 ADD +0 40000 0 00067    00171 STO +0 60100 0 00027    00172 CLA +0 50000 0 00027    00173 SUB +0 40200 0 00072   
 00174 TZE +0 10000 0 00176    00175 TPL +0 12000 0 00337                                                               
                 W'R N(I).E.DATE, N(I) = .MQ.GETIME.(0)                             031  LM00051
 00176 LXA +0 53400 1 00027    00177 CLA +0 50000 1 00061    00200 SUB +0 40200 0 00024    00201 TNZ -0 10000 0 00206   
 00202 TSX +0 07400 4 00010    00203 TXH +3 00000 0 00066    00204 LXA +0 53400 1 00027    00205 STQ -0 60000 1 00061   
                 W'R N(I).E.TIME, GETTM.(MESS,N(I))                                 032  LM00052
 00206 LXA +0 53400 1 00027    00207 CLA +0 50000 1 00061    00210 SUB +0 40200 0 00065    00211 TNZ -0 10000 0 00221   
 00212 CLA +0 50000 0 00027    00213 SUB +0 40200 0 00214    00214 TXH +3 00000 0 00061    00215 STA +0 62100 0 00220   
 00216 TSX +0 07400 4 00011    00217 TXH +3 00000 0 00035    00220 TXH +3 00000 0 00000                                 
                 W'R N(I).E.MONTH, N(I)=MONTHS(BCDEC.(.MQ.GETIME.(0).RS.24))        033  LM00053
 00221 LXA +0 53400 1 00027    00222 CLA +0 50000 1 00061    00223 SUB +0 40200 0 00036    00224 TNZ -0 10000 0 00243   
 00225 TSX +0 07400 4 00010    00226 TXH +3 00000 0 00066    00227 STQ -0 60000 0 00372    00230 CAL -0 50000 0 00075   
 00231 STA +0 62100 0 00233    00232 CAL -0 50000 0 00372    00233 LGR -0 76500 0 00000    00234 SLW +0 60200 0 00372   
 00235 TSX +0 07400 4 00001    00236 TXH +3 00000 0 00372    00237 LXA +0 53400 1 00027    00240 PAX +0 73400 2 00000   
 00241 CLA +0 50000 2 00053    00242 STO +0 60100 1 00061                                                               
                 W'R N(I).E.LMONTH,N(I)=MONTHS(BCDEC.(.MQ.GETIME.(0).RS.24)-1)      034  LM00054
 00243 LXA +0 53400 1 00027    00244 CLA +0 50000 1 00061    00245 SUB +0 40200 0 00030    00246 TNZ -0 10000 0 00266   
 00247 TSX +0 07400 4 00010    00250 TXH +3 00000 0 00066    00251 STQ -0 60000 0 00372    00252 CAL -0 50000 0 00075   
 00253 STA +0 62100 0 00255    00254 CAL -0 50000 0 00372    00255 LGR -0 76500 0 00000    00256 SLW +0 60200 0 00372   
 00257 TSX +0 07400 4 00001    00260 TXH +3 00000 0 00372    00261 SUB +0 40200 0 00067    00262 LXA +0 53400 1 00027   
 00263 PAX +0 73400 2 00000    00264 CLA +0 50000 2 00053    00265 STO +0 60100 1 00061                                 
                 W'R N(I).E.PROB, N(I) = ME(2)                                      035  LM00055
 00266 LXA +0 53400 1 00027    00267 CLA +0 50000 1 00061    00270 SUB +0 40200 0 00062    00271 TNZ -0 10000 0 00274   
 00272 CLA +0 50000 0 00032    00273 STO +0 60100 1 00061                                                               
                 W'R N(I).E.PROG, N(I) = ME(1)                                      036  LM00056
 00274 LXA +0 53400 1 00027    00275 CLA +0 50000 1 00061    00276 SUB +0 40200 0 00064    00277 TNZ -0 10000 0 00302   
 00300 CLA +0 50000 0 00033    00301 STO +0 60100 1 00061                                                               
                 W'R N(I).E.PROGL, N(I) = ((ME(1).LS.6).V.$00000L$)                 037  LM00057
 00302 LXA +0 53400 1 00027    00303 CLA +0 50000 1 00061    00304 SUB +0 40200 0 00063    00305 TNZ -0 10000 0 00314   
 00306 CAL -0 50000 0 00074    00307 STA +0 62100 0 00311    00310 CAL -0 50000 0 00033    00311 ALS +0 76700 0 00000   
 00312 ORA -0 50100 0 00076    00313 SLW +0 60200 1 00061                                                               
      LOOP3      W'R N(I).E.NAME, N(I) = GLOC.(COMLOC.($UNAME$) +                   038  LM00058
                1   GLOC.(COMLOC.($USER$)))                                         038  LM00059
 00314 LXA +0 53400 1 00027    00315 CLA +0 50000 1 00061    00316 SUB +0 40200 0 00054    00317 TNZ -0 10000 0 00336   
 00320 TSX +0 07400 4 00005    00321 TXH +3 00000 0 00106    00322 STO +0 60100 0 00372    00323 TSX +0 07400 4 00012   
 00324 TXH +3 00000 0 00372    00325 STO +0 60100 0 00372    00326 TSX +0 07400 4 00005    00327 TXH +3 00000 0 00105   
 00330 ADD +0 40000 0 00372    00331 STO +0 60100 0 00372    00332 TSX +0 07400 4 00012    00333 TXH +3 00000 0 00372   
 00334 LXA +0 53400 1 00027    00335 STO +0 60100 1 00061    00336 TRA +0 02000 0 00167                                 
                 CHFILE.(N(1),N(2),-0,N(3),N(4),ERR)                                039  LM00061
 00337 CLS +0 50200 0 00066    00340 STO +0 60100 0 00372    00341 TSX +0 07400 4 00002    00342 TXH +3 00000 0 00060   
 00343 TXH +3 00000 0 00057    00344 TXH +3 00000 0 00372    00345 TXH +3 00000 0 00056    00346 TXH +3 00000 0 00055   
 00347 TXH +3 00000 0 00017                                                                                             
                 CHNCOM.(0)                                                         040  LM00062
 00350 TSX +0 07400 4 00003    00351 TXH +3 00000 0 00066                                                               
      FORMAT     MESS = FEW                                                         041  LM00064
 00352 CLA +0 50000 0 00025    00353 STO +0 60100 0 00035                                                               
                 T'O OVER2                                                          042  LM00065
 00354 TRA +0 02000 0 00023                                                                                             
      FORMT2     MESS = MANY                                                        043  LM00066
 00355 CLA +0 50000 0 00031    00356 STO +0 60100 0 00035                                                               
      OVER2      PRMESS.($  TOO$,MESS,$ ARGUMENTS.$)                                044  LM00067
 00357 TSX +0 07400 4 00015    00360 TXH +3 00000 0 00104    00361 TXH +3 00000 0 00035    00362 TXH +3 00000 0 00103   
 00363 TXH +3 00000 0 00101                                                                                             
                 DEAD.                                                              045  LM00068
 00364 TSX +0 07400 4 00006                                                                                             
      ERR        NCOM.($PRNTER$,371K)                                               046  LM00069
 00365 TSX +0 07400 4 00014    00366 TXH +3 00000 0 00102    00367 TXH +3 00000 0 00077                                 
                 DEAD.                                                              047  LM00070
 00370 TSX +0 07400 4 00006                                                                                             
                 E'M                                                                048  LM00071
 00371 TSX +0 07400 4 00007                                                                                             




  SCDA   BCD 09/20/68 0221.0   10132         00000    
1       KLUDGE VERSION OF .SCD                                                                   PAGE 1     
                  
                  
                  
                                             THIS PROGRAM DISPLAY VARIOUS CORE-A VARIABLES
                                             ON THE KLUDGE (ESL DISPLAY CONSOLE), SUCH AS THE   
                                             SCHEDULING QUEUES, AND TIMES FOR EACH USER.  
                                             IT MUST BE REASSEMBLED EACH TIME N OR MAXLV IS     
                                             CHANGED IN THE SUPERVISOR EQU PACKAGE, WITH THE    
                                             NEW VALUES OF THESE NUMBERS INSERTED IN THIS PROGRAM.    
                  
                                             TO PUT TOGETHER THE SAVED FILE,  
                                                  FAP SCDA (LIST) 
                                                    NCLOAD SCDA (LIBE) KLULIB (LIBE) XLIBE
                                                  SAVE SCDA 
                  
                                             THE PROGRAM SAMPLES THE DATA EVERY SO OFTEN, AND   
                                               UPDATES THE DISPLAY. THE SAMPLING TIME DESIRED   
                                             (IN SECONDS) SHOULD BE SET BY THE USER IN THE
                                             RIGHT-MOST 2 DIGI-SWITCHES AT THE KLUDGE CONSOLE.  
                  
                                             AND SO, WITH THESE FACTS WELL IN MIND, YOU MAY BEGIN     
                                             YOUR PERUSAL OF THE WONDERS WITHIN. JUST SIT BACK  
                                             AND TAKE IT EASY. YOUR GUIDE ON THIS ADVENTURSOME  
                                             VOYAGE IS JIM BIXBY, AND THE DATE IS 12/28/67. AND 
                                             I WISH I WERE HOME FOR CHRISTMAS VACATION INSTEAD OF     
                                             WORKING ON THIS PROGRAM.   
                  
                  
                                             NORMAL EXIT IS ACHIEVED THRU CHNCOM IF 
                                             AN INTERUPT IS RECEIVED.   
                  
                  
1       KLUDGE VERSION OF .SCD                                                                   PAGE 2     
                           MACROS THAT WILL BE USED IN THE WORK                     
                  
                  
                  
                                             'FLOAT' - TO CONVERT A FIXED     
                                                        POINT NUMBER IN THE AC TO FLOATING POINT
                  
                  
                              FLOAT  MACRO
                                     ORA     =O233000000000 
                                     FAD     =O233000000000 
                              FLOAT  END  
                  
                  
                  
                                             'DTIME' - TO COMPUTE THE DIFFERENCE BETWEEN TWO    
                                                       INTEGERS, AND LEAVE THE RESULT IN FLOATING     
                                                       POINT.     
                  
                  
                              DTIME  MACRO   LAST,NOW 
                                     CLA     NOW
                                     SUB     LAST     
                                     FLOAT
                                     STO     LAST     
                              DTIME  END  
                  
                  
                  
                                             'F6.1' - TO CONVERT A FLOATING POINTING NUMBER     
                                                      IN THE AC TO BCD, ACCORDING TO A F6.1     
                                                      FORMAT. RESULT LEFT IN THE LAC
                  
                              F6.1   MACRO
                                     UFA     =O233000000000 CONVERT TO FIXED PT. THE NUMBER     
                                     ERA     =O233000000000 IS SUPPOSED TO BE 10 * ITS REAL VALUE     
                                     LLS     0  
                                     STO     TEMP     
                                     TSX     $DEFBC,4      CONVERT TO BCD     
                                     PTH     TEMP     
                                     STO     TEMP     
                                     TSX     $BZEL,4  
                                     PTH     TEMP          AND BLANK THE LEADING ZEROS    
                                     XCA  
                                     ZAC  
                                     LGL     30            GET THE FIRST 4 DIGITS   
                                     ALS     6             MAKE ROOM FOR '.'  
                                     ORA     =H00000.      NO F6.1 NUMBER IS COMPLETE WITHOUT IT
                                     LGL     6             GET THE DECIMAL FIGURE   
                              F6.1   END  
                  
                  
                  
                                             'FIXBCD' - TO CONVERT A FIXED POINT NUMBER   
                                                          TO BCD WITH LEADING ZEROS 
1       KLUDGE VERSION OF .SCD                                                                   PAGE 3     
                           MACROS THAT WILL BE USED IN THE WORK                     
                  
                              FIXBCD MACRO   FROM,TO  
                                     TSX     $DEFBC,4 
                                     PTH     FROM     
                                     STO     TO 
                                     TSX     $BZEL,4  
                                     PTH     TO 
                                     STO     TO 
                              FIXBCD END  
                  
                  
                  
                                             'FIXCEN' - TO CONVERT A FIXED POINT NUMBER   
                                                   TO BCD OF THE FORM ' XX   '
                  
                              FIXCEN MACRO   FROM,TO  
                                     FIXBCD  FROM,TO  
                                     XCA  
                                     RQL     18 
                                     STQ     TO 
                              FIXCEN END  
                  
                  
                  
                                             'TCONV' - TO CONVERT INTEGER 60TH-S TO SSSS.S
                  
                              TCONV  MACRO   FROM,TO  
                                     LDQ     FROM     
                                     ZAC  
                                     DVP     =6 
                                     STQ     TEMP     
                                     TSX     $DEFBC,4 
                                     PTH     TEMP     
                                     STO     TEMP     
                                     TSX     $BZEL,4  
                                     PTH     TEMP     
                                     XCA  
                                     LGL     30 
                                     ALS     6  
                                     ORA     =H00000. 
                                     LGL     6  
                                     SLW     TO 
                                     ERA     =H    .0 
                                     TNZ     *+3
                                     CAL     =H 
                                     SLW     TO 
                              TCONV  END  
                  
                  
                  
                                             'PUTIN'- TO PUT 6 BCD CHARACTERS 
                                                  FROM WORD INTO A KLUDGE CHARACTER COMMAND     
                                                    SOMEWHERE NEAR PLACE
1       KLUDGE VERSION OF .SCD                                                                   PAGE 4     
                           MACROS THAT WILL BE USED IN THE WORK                     
                  
                              PUTIN  MACRO   WORD,PLACE     
                                     CAL     WORD          GET THE 6 CHARACTERS     
                                     LGR     6             MOVE ONE INTO THE MQ     
                                     ORA     =H600000      MAKE A KLUDGE PACKED LONG WORD 
                                     SLW     PLACE+2       AND STORE    
                                     STQ     PLACE+3       ..     
                              PUTIN  END  
                  
                  
                  
                                             'DATA' - TO CREATE THE KLUDGE COMMANDS 
                                                THAT GET FILLED BY 'PUTIN'    
                  
                              DATA   MACRO   SPACE,TITLE    
                                     VFD     3/0,15/'SPACE,3/4,15/0     
                                     VFD     3/2,15/LOWCS,18/0    
                                     VFD     1/0,5/6,H36/'TITLE   
                              DATA   END  
                  
                  
                  
                                             'LOAD' - TO MOVE SIZE WORDS STARTING AT ALOC IN    
                                                        CORE-A INTO CORE-B, STARTING AT BLOC    
                  
                              LOAD   MACRO   ALOC,BLOC,SIZE 
                                     TSX     GETARY,4 
                              ALOC   PZE     ** 
                                     PZE     BLOC,,SIZE     
                              LOAD   END  
                  
                  
                  
                                             'COML' - TO GET ADDRESS OF A CORE-A ARRAY    
                  
                              COML   MACRO   NAME,LOC 
                                     TSX     $COMLOC,4
                                     PTH     =H'NAME  
                                     STA     LOC
                              COML   END  
                  
1       KLUDGE VERSION OF .SCD                                                                   PAGE 5     
                           PROGRAM INITIALIZATION                                   
                  
                  
                                             THIS NEXT SECTION GETS ALL THE NEEDED CORE-A 
                                             ADDRESSES,SIGNS ON TO THE KLUDGE, AND PLOTS A
                                             DUMMY PLOT TO ESTABLISH THE NEEDED POINTERS  
                  
                  
                  
        TRANSFER VECTOR 
      00000  622563225142     SETBRK
      00001  234644434623     COMLOC
      00002  212346512560     ACORE 
      00003  622745464560     SGNON 
      00004  474346636060     PLOT  
      00005  622563476360     SETPT 
      00006  314565316260     INVIS 
      00007  242526222360     DEFBC 
      00010  227125436060     BZEL  
      00011  512524312731     REDIGI
      00012  272563634460     GETTM 
      00013  514743606060     RPL   
      00014  622745462626     SGNOFF
      00015  233045234644     CHNCOM
                  
      00016  0760 00 0 00016         LMTM                  WE WILL NEED MANY OF THESE LATER     
      00017  0074 00 4 00000         TSX     $SETBRK,4     SET UP THE EXIT    
      00020  0 00000 0 01024         PZE     OUT           ..     
                  
      00021                          COML    STATUS,ASTATS GET THE ADDRESSES  
      00024                          COML    COMMND,ACMMND  
      00027                          COML    TIMLEV,ATIMLV  
      00032                          COML    WRKTIM,AWRKTM  
      00035                          COML    PLIST,APLIST   
      00040                          COML    ULIST,AULIST   
      00043                          COML    PROBN,APROBN   
      00046                          COML    PROGN,APROGN   
      00051                          COML    UNAME,AUNAME   
      00054                          COML    MXUSRS,AMXUSR  
      00057                          COML    STNBY,ASTNBY   
      00062                          COML    NUSERS,ANUSER  
      00065                          COML    TOTTIM,ATOTTM  
      00070                          COML    BKGTIM,ABKGTM  
      00073                          COML    SWPTIM,ASWPTM  
      00076                          COML    UCLOCK,AUCLCK  
      00101                          COML    UCHARG,AUCHRG  
                  
      00104  0074 00 4 00002         TSX     $ACORE,4      GET ADDRESS OF AVG. Q LENGTH   
      00105  3 00000 0 02362         PTH     =HAVQLEN 
      00106  0771 00 0 00022         ARS     18            MOVE IT TO ADDRESS PART  
      00107  0601 00 0 00243         STO     AVQLEN        AND SAVE FOR LATER 
                  
                  
                                             DISPLAY INITIALIZATION--SIGN ON  
1       KLUDGE VERSION OF .SCD                                                                   PAGE 6     
                           PROGRAM INITIALIZATION                                   
                  
      00110  0074 00 4 00003         TSX     $SGNON,4 
      00111  3 00000 0 02340         PTH     NCONS         FOR THIS MANY CONSOLES   
      00112  3 00000 0 00000         PTH     0             AND NO TRACKING CROSS    
                  
                  
                                             PLOT THE SKELETOM DISPLAY TO GET ALL   
                                             THE POINTERS WE WILL NEED LATER. 
                  
      00113  0074 00 4 00004         TSX     $PLOT,4       PLOT THE TOP HALF OF THE DISPLAY     
      00114  3 00000 0 02327         PTH     TOP
      00115  3 00000 0 02043         PTH     POINT         POINTER TO TOP DISPLAY   
      00116  0601 00 0 02043         STO     POINT    
      00117  0500 00 0 02371         CLA     =-512         LEFT EDGE OF SCREEN
      00120  0601 00 0 02331         STO     H  
      00121  0500 00 0 02355         CLA     =190          UPPER CORNER NEAR TOP    
      00122  0601 00 0 02330         STO     V  
      00123  0774 00 1 00044         AXT     N+1,1         SET UP TO PLOT LOWER HALF OF PLOT    
                  
                  
                                             NOW WE GO THROUGH LINE BY LINE AND PUT A SET-POINT 
                                             AND TWO DUMMY LINES, ONE TO REPRESENT THE NORMAL   
                                             SECTION OF A LINE, AND ONE TO REPRESENT THE DATA   
                                             ASSOCIATED WITH BEING IN ACTIVE STATUS.
                  
      00124  0634 00 1 00141  SETDP  SXA     XR1,1         SAVE THE INDEX     
      00125  0074 00 4 00005         TSX     $SETPT,4      PUT IN THE SET-POINT     
      00126  3 00000 0 02331         PTH     H  
      00127  3 00000 0 02330         PTH     V  
      00130  0601 00 0 02044         STO     OB            THIS POINTER WON'T BE USED     
      00131  0074 00 4 00006         TSX     $INVIS,4      MAKE THE SET-POINT INVISIBLE   
      00132  3 00000 0 02044         PTH     OB 
      00133  0601 00 0 02044         STO     OB 
      00134  0074 00 4 00004         TSX     $PLOT,4       AND ADD IT TO THE DISPLAY FILE 
      00135  3 00000 0 02044         PTH     OB 
      00136  0500 00 0 02330         CLA     V  
      00137  0402 00 0 02332         SUB     SPACE         MOVE DOWN TO NEXT LINE   
      00140  0601 00 0 02330         STO     V  
      00141  0774 00 1 00000  XR1    AXT     **,1          RESTORE THE INDEX  
      00142  0074 00 4 00004         TSX     $PLOT,4       PLOT THE DUMMY LINES     
      00143  3 00000 0 02214         PTH     DUMLIN   
      00144  3 00000 0 02333         PTH     TEMP     
      00145  0522 00 0 00141         XEC     XR1
      00146  0601 00 1 02111         STO     LINES+N+1,1   LINE D.F. POINTERS 
      00147  0074 00 4 00004         TSX     $PLOT,4  
      00150  3 00000 0 02217         PTH     DUMQS    
      00151  3 00000 0 02333         PTH     TEMP     
      00152  0522 00 0 00141         XEC     XR1
      00153  0601 00 1 02155         STO     QUEUES+N+1,1  QUEUE D.F. POINTERS
      00154  2 00001 1 00124         TIX     SETDP,1,1     ONE FOR EACH POSSIBLE USER     
                  
                  
      00155  0074 00 4 00004         TSX     $PLOT,4       PUT IN AND ENDOFFILE     
      00156  3 00000 0 02222         PTH     BOTTOM   
1       KLUDGE VERSION OF .SCD                                                                   PAGE 7     
                           MAIN PROGRAM                                             
                  
                  
                  
                  
                                             LOAD A NEW SET OF VALUES FROM CORE-A   
                  
      00157                   REGEN  LOAD    ASTATS,STATUS,N+1    
      00162                          LOAD    ACMMND,COMMND,N+1    
      00165                          LOAD    ATIMLV,TIMLEV,N+1    
      00170                          LOAD    AWRKTM,WRKTIM,N+1    
      00173                          LOAD    APLIST,PLIST,QSIZE   
      00176                          LOAD    AULIST,ULIST,QSIZE   
      00201                          LOAD    APROBN,PROBN,N+1     
      00204                          LOAD    APROGN,PROGN,N+1     
      00207                          LOAD    AUNAME,UNAME,N+1     
      00212                          LOAD    AUCLCK,UCLOCK,N+1    
      00215                          LOAD    AUCHRG,UCHARG,N+1    
      00220                          LOAD    AMXUSR,MXUSRS,1
      00223                          LOAD    ASTNBY,STNBY,1 
      00226                          LOAD    ANUSER,NUSERS,1
      00231                          LOAD    ATOTTM,TOTTIM,1
      00234                          LOAD    ABKGTM,BKGTIM,1
      00237                          LOAD    ASWPTM,SWPTIM,1
      00242  0074 00 4 02347         TSX     GETLOC,4      GET THE AVERAGE Q LENGTH 
      00243  0 00000 0 00000  AVQLEN PZE     ** 
                  
1       KLUDGE VERSION OF .SCD                                                                   PAGE 8     
                           FILL IN THE UPPER DISPLAY                                
                  
      00244  0300 00 0 02364         FAD     =O233000000000 CONVERT AV. Q LEN TO FLOATING POINT 
      00245  0131 00 0 00000         XCA  
      00246  0260 00 0 02360         FMP     =.01          ADJUST 
      00247                          F6.1                  PUT INTO DISPLAY FORMAT  
      00266  0602 00 0 02262         SLW     DAVGQL        AND SAVE IN DISPLAY
                  
                  
      00267  0074 00 4 00011         TSX     $REDIGI,4     GET THE SLEEP TIME FROM THE SWITCHES 
      00270  3 00000 0 02334         PTH     LSW
      00271  3 00000 0 02335         PTH     RSW
      00272  0601 00 0 02336         STO     SLPTIM        AND SAVE FOR LATER 
      00273                          FIXBCD  SLPTIM,DSAMPL AND PLACE IN DISPLAY     
      00301 -0500 00 0 02234         CAL     DSAMPL        CHANGE THE FIRST CHAR. TO 'S'  
      00302 -0501 00 0 02404         ORA     =HS00000 
      00303  0602 00 0 02234         SLW     DSAMPL   
                  
                  
                  
      00304  0074 00 4 00012         TSX     $GETTM,4      GET THE DATE AND TIME    
      00305  3 00000 0 02242         PTH     DDATE         INTO THE DISPLAY   
      00306  3 00000 0 02243         PTH     DTIME    
                  
                  
                                             FILL IN MXUSRS,NUSERS,STNBY
                  
      00307                          FIXCEN  MXUSRS,DMXUSR  
      00320                          FIXCEN  NUSERS,DNUSER  
      00331                          FIXCEN  STNBY,DSTNBY   
                  
                  
                  
      00342  0520 00 0 02337         ZET     FFLAG         IS THIS THE FIRST TIME THRU HERE     
      00343  0020 00 0 00346         TRA     COMPCT        NO-COMPUTE GOOD, SWAP AND OTHER
      00344 -0625 00 0 02337         STL     FFLAG         YES--TURN OFF THE FLAG   
      00345  0020 00 0 00461         TRA     DUMPCT        AND SET UP FOR THE NEXT PASS   
                  
                  
                                             COMPUTE THE DELTA TIMES SINCE THE LAST PASS  
                  
      00346                   COMPCT DTIME   OTOTTM,TOTTIM  
      00353                          DTIME   OBKGTM,BKGTIM  
      00360                          DTIME   OSWPTM,SWPTIM  
                  
                  
                                             GOOD = 100*D(TOTTIM-SWPTIM-BKGTIM)/D(TOTTIM) 
                  
      00365  0500 00 0 02040         CLA     OTOTTM   
      00366  0302 00 0 02042         FSB     OSWPTM   
      00367  0302 00 0 02041         FSB     OBKGTM   
      00370  0241 00 0 02040         FDP     OTOTTM   
      00371  0260 00 0 02361         FMP     =1000.0  
      00372                          F6.1                  CONVERT RESULT FOR DISPLAY     
      00411  0602 00 0 02266         SLW     DGOOD         AND PLACE THERE    
1       KLUDGE VERSION OF .SCD                                                                   PAGE 9     
                           FILL IN THE UPPER DISPLAY                                
                  
                  
                                             SWAP = 100 * D(SWPTIM)/D(TOTTIM) 
                  
      00412  0500 00 0 02042         CLA     OSWPTM   
      00413  0241 00 0 02040         FDP     OTOTTM   
      00414  0260 00 0 02361         FMP     =1000.0  
      00415                          F6.1                  CONVERT
      00434  0602 00 0 02270         SLW     DSWAP         AND SAVE     
                  
                  
                                             OTHER = 100 * D(BKGTIM)/D(TOTTIM)
                  
      00435  0500 00 0 02041         CLA     OBKGTM   
      00436  0241 00 0 02040         FDP     OTOTTM   
      00437  0260 00 0 02361         FMP     =1000.0  
      00440                          F6.1 
      00457  0602 00 0 02274         SLW     DOTHER   
      00460  0020 00 0 00465         TRA     SETNXT   
                  
                  
                                             PUT IN DUMMY PERCENTAGES ON FIRST PASS 
                  
      00461 -0500 00 0 02402  DUMPCT CAL     =H    .  
      00462  0602 00 0 02266         SLW     DGOOD    
      00463  0602 00 0 02270         SLW     DSWAP    
      00464  0602 00 0 02274         SLW     DOTHER   
                  
                  
                                             UPDATE OLD TIMES FOR NEXT PASS   
                  
      00465 -0500 00 0 01614  SETNXT CAL     TOTTIM   
      00466  0602 00 0 02040         SLW     OTOTTM   
      00467 -0500 00 0 01615         CAL     BKGTIM   
      00470  0602 00 0 02041         SLW     OBKGTM   
      00471 -0500 00 0 01616         CAL     SWPTIM   
      00472  0602 00 0 02042         SLW     OSWPTM   
                  
                  
                                             PLOT THE NEW UPPER DISPLAY 
                  
      00473  0074 00 4 00013         TSX     $RPL,4   
      00474  3 00000 0 02327         PTH     TOP           POINTER TO THR COMMAND LIST    
      00475  3 00000 0 02043         PTH     POINT         OLD TOP DISPLAY FILE POINTER   
      00476  0601 00 0 02043         STO     POINT         AND THE NEW DISPLAY FILE POINTER     
                  
1       KLUDGE VERSION OF .SCD                                                                   PAGE 10    
                           COMPUTE QUEUE POSITIONS AND LEVELS FOR USE LATER         
                  
                  
      00477  0774 00 1 00011         AXT     9,1           QUEUE LEVEL IN XR1 
      00500  0754 00 1 00000  NQ     PXA     ,1            PUT NEXT POSITION POINTER IN ACC     
      00501  0737 00 3 00000         PAC     ,3            SO WE CAN GET IT INTO XR3
      00502  0500 00 0 02351         CLA     =1            START WITH THE FIRST POSITION  
      00503  0601 00 0 02037         STO     QPOS          IN THIS LEVEL
      00504  0500 00 3 01251  NXTQ   CLA     PLIST,3       GET POINTER TO USER IN THIS POSITION 
      00505  0737 00 3 00000         PAC     ,3            SO HE CAN BE EXTRACTED FROM ULIST    
      00506  0500 00 3 01343         CLA     ULIST,3       GET THE USER 
      00507 -0120 00 0 00520         TMI     LEVLUP        USER=-1 IS END OF THIS Q LEVEL 
      00510  0737 00 2 00000         PAC     ,2            -USER INTO XR2     
      00511  0754 00 1 00000         PXA     ,1            AND LEVEL INTO AC  
      00512  0601 00 2 01727         STO     LEV,2         STORE THIS USERS LEVEL   
      00513  0500 00 0 02037         CLA     QPOS          GET THE POSITION WITHIN THIS LEVEL   
      00514  0601 00 2 01773         STO     POS,2         AND STORE THAT TOO 
      00515  0400 00 0 02351         ADD     =1            MOVE TO NEXT POSITION    
      00516  0601 00 0 02037         STO     QPOS          OF THIS LEVEL
      00517  0020 00 0 00504         TRA     NXTQ          AND GO FIND THE USER     
      00520  2 00001 1 00500  LEVLUP TIX     NQ,1,1        MOVE ON TO NEXT LEVEL    
                  
1       KLUDGE VERSION OF .SCD                                                                   PAGE 11    
                           FILL IN TO LOWER DISPLAY                                 
                  
                  
                                             EACH LINE IN THE LOWER DISPLAY HAS TWO PARTS--     
                                               THE FIRST PART IS LINENO,NAME,PROB,PROG,UCLOCK   
                                                AND USWAP. THAT IS,INFORMATION THAT PERTAIN     
                                                  TO ANY USER THAT IS LOGGED IN.    
                                               THE SECOND PART IS WRKTIM, TIMLEV, AND QUEUE     
                                                LEVEL AND POSITION. THAT IS,  
                                                  INFORMATION WHICH APPLIES TO USERS IN WORKING 
                                                  STATUS.   
                                                 THESE TWO GROUPS ARE PLOTTED AS SEPARATE 
                                                  ITEMS IN THE DISPLAY FILE.  
                  
                  
                                             GET AND PLOT THE LINE INFO 
                  
      00521  0774 00 1 00044         AXT     N+1,1         DO ALL USERS 
                  
      00522  0634 00 1 00660  LOWER  SXA     XR12,1        SAVE THIS FOR LATER ON   
      00523 -0500 00 1 01501         CAL     PROBN+N+1,1   GET PROBN    
      00524  0100 00 0 00663         TZE     NOTIN         BRANCH IF NOT LOGGED IN  
      00525  0602 00 0 02161         SLW     BPROB         PLACE IN DISPLAY   
      00526 -0500 00 1 01141         CAL     COMMND+N+1,1  PLOT THE COMMAND   
      00527 -0100 00 0 00531         TNZ     *+2           PUT IN BLANKS IF NO COMMAND    
      00530 -0500 00 0 02403         CAL     =H            ..     
      00531  0602 00 0 02163         SLW     BCOM     
      00532  0560 00 1 01545         LDQ     PROGN+N+1,1   AND THE PROG NUM   
      00533 -0773 00 0 00006         RQL     6             CENTER IT    
      00534 -0600 00 0 02162         STQ     BPROG    
      00535 -0500 00 1 01611         CAL     UNAME+N+1,1   PUT IN HIS NAM     
      00536  0602 00 0 02160         SLW     BNAME    
      00537  0754 00 1 00000         PXA     ,1            GET THE LINE NUMBER
      00540 -0760 00 0 00003         SSM  
      00541  0400 00 0 01030         ADD     NPLUS1        LINE NO. IN AC     
      00542  0601 00 0 02333         STO     TEMP     
      00543 -0100 00 0 00553         TNZ     NOTBKG        SKIP IF NOT BACKGROUND   
      00544 -0500 00 0 02403         CAL     =H            BACKGROUND--PUT IN DUMMY JUNK  
      00545  0602 00 0 02160         SLW     BNAME    
      00546  0602 00 0 02163         SLW     BCOM     
      00547 -0500 00 0 02400         CAL     =H BACKG 
      00550  0602 00 0 02161         SLW     BPROB    
      00551 -0500 00 0 02377         CAL     =HROUND  
      00552  0602 00 0 02162         SLW     BPROG    
                  
                  
                  
      00553                   NOTBKG FIXBCD  TEMP,BLINNM   PUT IN THE LINE NUMBER   
      00561  0560 00 0 02157         LDQ     BLINNM        FUDGE THE FIRST 6 BITS AND POSITION  
      00562 -0773 00 0 00022         RQL     18 
      00563 -0500 00 0 02342         CAL     NUMMSK   
      00564 -0765 00 0 00006         LGR     6  
      00565 -0600 00 0 02157         STQ     BLINNM   
1       KLUDGE VERSION OF .SCD                                                                   PAGE 12    
                           FILL IN TO LOWER DISPLAY                                 
                  
                  
                                             PUT IN UCLOCK AND USWAP    
                  
      00566 -0500 00 1 01663         CAL     UCLOCK+N+1,1  GET UCLOCK   
      00567  0602 00 0 02333         SLW     TEMP     
      00570                          TCONV   TEMP,TEMP     CONVERT AND STORE  
      00613                          PUTIN   TEMP,BUCLK     
      00620  0500 00 1 01727         CLA     UCHARG+N+1,1  GET UCHARG   
      00621  0402 00 1 01663         SUB     UCLOCK+N+1,1  SUBTRACT TO GET USWAP    
      00622  0601 00 0 02333         STO     TEMP     
      00623                          TCONV   TEMP,TEMP     CONVERT AND STORE  
      00646                          PUTIN   TEMP,BUSWP     
                  
                  
                                             THE FIRST HALF HAS BEEN FILLED IN.     
                                             NOW WE MUST PLOT IT  
                  
      00653 -0500 00 1 02111         CAL     LINES+N+1,1   GET THE OLD D.F. POINTER 
      00654  0602 00 0 02044         SLW     OB 
      00655  0074 00 4 00013         TSX     $RPL,4        REPLACE THE OLD BASIC LINE WITH THE  
      00656  3 00000 0 02174         PTH     BASICL        ONE WE JUST CONSTRUCTED  
      00657  3 00000 0 02044         PTH     OB            'OB' TELLS IT WHERE THE OLD ONE IS   
      00660  0774 00 1 00000  XR12   AXT     **,1          RESTORE THE INDEX  
      00661  0601 00 1 02111         STO     LINES+N+1,1   SAVE THE NEW D.F. POINTER
      00662  0020 00 0 00702         TRA     PLTQS         GO OFF TO PLOT THE QUEUE INFO  
                  
1       KLUDGE VERSION OF .SCD                                                                   PAGE 13    
                           FILL IN TO LOWER DISPLAY                                 
                  
                  
                                             COME HERE IF A USER IS NOT LOGGED IN   
                                             IN THIS CASE, WE PLOT ZERO LENGTH INVISIBLE  
                                             LINES TO REPLACE ANY JUNK THAT MAY BE IN THE D.F.  
                  
                  
      00663 -0500 00 1 02111  NOTIN  CAL     LINES+N+1,1   GET THE OLD POINTER
      00664  0602 00 0 02044         SLW     OB 
      00665  0074 00 4 00013         TSX     $RPL,4        REPLACE THE OLD WITH DUMMY LINES     
      00666  3 00000 0 02214         PTH     DUMLIN   
      00667  3 00000 0 02044         PTH     OB 
      00670  0522 00 0 00660         XEC     XR12     
      00671  0601 00 1 02111         STO     LINES+N+1,1   SAVE THE NEW POINTER     
      00672 -0500 00 1 02155  NOQ    CAL     QUEUES+N+1,1  GET THE OLD Q-PORTION POINTER  
      00673  0602 00 0 02044         SLW     OB 
      00674  0074 00 4 00013         TSX     $RPL,4        REPLACE ANY OLD WITH DUMMY     
      00675  3 00000 0 02217         PTH     DUMQS    
      00676  3 00000 0 02044         PTH     OB 
      00677  0522 00 0 00660         XEC     XR12     
      00700  0601 00 1 02155         STO     QUEUES+N+1,1  SAVE THE NEW POINTER     
      00701  0020 00 0 01020         TRA     LOWLUP        AND GO TO NEXT USER
1       KLUDGE VERSION OF .SCD                                                                   PAGE 14    
                           FILL IN TO LOWER DISPLAY                                 
                  
                  
                  
                                             HERE TO CHECK IF A USER IS IN WORKING STATUS, AND  
                                             IF HE IS, TO PLOT THE QUEUE INFOR
                  
      00702  0500 00 1 01075  PLTQS  CLA     STATUS+N+1,1  GET HIS STATUS     
      00703  0402 00 0 02352         SUB     =2            WANT HIM IN WORKING STATUS     
      00704 -0100 00 0 00672         TNZ     NOQ           NOT WORKING--PLOT DUMMY QUEUES 
                  
                  
      00705 -0500 00 1 01205         CAL     TIMLEV+N+1,1  GET TIMLEV INTO DISPLAY  
      00706  0602 00 0 02333         SLW     TEMP     
      00707                          TCONV   TEMP,TEMP     CONVERT AND STORE  
      00732                          PUTIN   TEMP,QTMLV     
                  
                  
      00737 -0500 00 1 01251         CAL     WRKTIM+N+1,1  SAME FOR WRKTIM    
      00740  0602 00 0 02333         SLW     TEMP     
      00741                          TCONV   TEMP,TEMP
      00764                          PUTIN   TEMP,QWRK
                  
                  
                  
                  
                  
                                             HERE WE GENERATE THE TWO WORDS OF KLUDGE COMMAND   
                                             FOR PLOTTING THE QUEUE LEVEL AND POSITION    
                  
                  
      00771  0500 00 1 01773         CLA     LEV+N+1,1     GET THIS GUYS QUEUE LEVEL
      00772  0734 00 2 00000         PAX     ,2            FOR LATER    
      00773  0560 00 0 02403         LDQ     =H            SET UP THE LAC-MQ AD     
      00774 -0500 00 1 02037         CAL     POS+N+1,1     FIRST CHAR 'POS' AND REST BLANKS     
      00775 -0765 00 0 00006         LGR     6             ..     
      00776 -0130 00 0 00000         XCL                   ..     
      00777  0560 00 0 02403         LDQ     =H            ..     
                  
      01000  2 00001 2 01002         TIX     *+2,2,1       TEST FOR MORE SHIFTING NECESSARY     
      01001  0020 00 0 01005         TRA     *+4           NO     
      01002 -0765 00 0 00006         LGR     6             YES--OBVIOUSLY     
      01003 -0501 00 0 02370         ORA     =H.00000      PUT IN A LEADING '.'     
      01004  0020 00 0 01000         TRA     *-4           THIS IS FUN, LETS SEE IF WE CAN DO IT AGAIN
                  
      01005 -0765 00 0 00014         LGR     12            MAKE ROOM FOR THE COUNT AND FIRST BLANK    
      01006 -0501 00 0 02357         ORA     =O126000000000 THERE THEY ARE, SPORTS FANS   
      01007  0602 00 0 02207         SLW     Q15           PUT IN THE DISPLAY 
      01010 -0600 00 0 02210         STQ     Q69           NEED BOTH WORDS    
                  
                                             EVENTUALLY WE END UP HERE TO PLOT THE LINE   
                  
      01011 -0500 00 1 02155  PQ     CAL     QUEUES+N+1,1  GET THE OLD QUEUE D.F. POINTER 
      01012  0602 00 0 02044         SLW     OB 
      01013  0074 00 4 00013         TSX     $RPL,4        REPLACE THE OLD QUEUES LINE    
      01014  3 00000 0 02211         PTH     QUEUEL        WITH THE ONE WE JUST CONSTRUCTED     
1       KLUDGE VERSION OF .SCD                                                                   PAGE 15    
                           FILL IN TO LOWER DISPLAY                                 
                  
      01015  3 00000 0 02044         PTH     OB 
      01016  0522 00 0 00660         XEC     XR12     
      01017  0601 00 1 02155         STO     QUEUES+N+1,1  AND SAVE THE NEW POINTER 
                  
                  
      01020  2 00001 1 00522  LOWLUP TIX     LOWER,1,1     DO ALL THE USERS   
                  
                  
      01021  0500 00 0 02336         CLA     SLPTIM        GET THE SLEEP TIME 
      01022  0074 00 4 02346         TSX     SLEEP,4       AND DO SO    
                  
      01023  0020 00 0 00157         TRA     REGEN         THEN GO BACK TO DO THE WHOLE MESS OVER     
                  
                  
                                             COME HERE IF AN INTERUPT WAS RECEIVED  
                  
      01024  0074 00 4 00014  OUT    TSX     $SGNOFF,4     GET OFF THE KLUDGE 
      01025  3 00000 0 02350         PTH     =0 
      01026  0074 00 4 00015         TSX     $CHNCOM,4     AND EXIT     
      01027  3 00000 0 02350         PTH     =0 
                  
1       KLUDGE VERSION OF .SCD                                                                   PAGE 16    
                           STORAGE FOR THE CORE-A VARIABLES                         
                  
                  
                       00043  N      EQU     35 
      01030  0 00000 0 00044  NPLUS1 PZE     N+1
                       00012  MAXLV  EQU     10 
                       00072  QSIZE  EQU     N+1+2*MAXLV+2  
      01031                   STATUS BSS     N+1
      01075                   COMMND BSS     N+1
      01141                   TIMLEV BSS     N+1
      01205                   WRKTIM BSS     N+1
      01251                   PLIST  BSS     QSIZE    
      01343                   ULIST  BSS     QSIZE    
      01435                   PROBN  BSS     N+1
      01501                   PROGN  BSS     N+1
      01545                   UNAME  BSS     N+1
      01611                   MXUSRS BSS     1  
      01612                   NUSERS BSS     1  
      01613                   STNBY  BSS     1  
      01614                   TOTTIM BSS     1  
      01615                   BKGTIM BSS     1  
      01616                   SWPTIM BSS     1  
      01617                   UCLOCK BSS     N+1
      01663                   UCHARG BSS     N+1
                  
                  
      01727                   LEV    BSS     N+1           QUEUE LEVEL ARRAY  
      01773                   POS    BSS     N+1           QUEUE POSITION ARRAY     
      02037                   QPOS   BSS     1  
                  
                  
                  
      02040                   OTOTTM BSS     1  
      02041                   OBKGTM BSS     1  
      02042                   OSWPTM BSS     1  
                  
                  
                                             POINTERS TO THE CORE-A DISPLAY FILE    
                  
      02043                   POINT  BSS     1             POINTER TO UPPER DISPLAY 
      02044                   OB     BSS     1             TEMPORARY GENERAL PURPOSE POINTER    
      02045                   LINES  BSS     N+1           FIRST PORTION POINTERS   
      02111                   QUEUES BSS     N+1           QUEUES PORTION POINTERS  
                  
1       KLUDGE VERSION OF .SCD                                                                   PAGE 17    
                           DISPLAY FILE OBJECTS FOR PLOTTINE                        
                  
                  
                  
                                             SKELETON BASIC LOWER LINE  
                  
                  
      02155  0 00000 0 00016  BTLIN  PZE     BELIN-*-1     NUMBERS OF COMMANDS IN THIS LIST     
      02156  200007000000            VFD     3/2,15/LOWCS,18/0    
      02157  356060606060     BLINNM VFD     1/0,5/29,H30/ LINE NUMBER  
      02160  606060606060     BNAME  BCI     1, 
      02161  606060606060     BPROB  BCI     1, 
      02162  606060606060     BPROG  BCI     1, 
      02163  606060606060     BCOM   BCI     1, 
      02164                   BUCLK  DATA    10 
      02170                   BUSWP  DATA    10 
                       02174  BELIN  EQU     *  
                  
      02174  0 00000 0 02155  BASICL PZE     BTLIN         POINTER TO THE ABOVE OBJECT    
                  
                  
                  
                                             SKELETON QUEUES LOWER LINE 
                  
      02175  0 00000 0 00013  QTLIN  PZE     QELIN-*-1
      02176                   QWRK   DATA    10 
      02202                   QTMLV  DATA    10 
      02206  200014000000            VFD     3/2,15/LOWQS,18/0    
      02207  116060606060     Q15    VFD     1/0,5/9,H30/   
      02210  606060606060     Q69    BCI     1, 
                       02211  QELIN  EQU     *  
                  
      02211  0 00000 0 02175  QUEUEL PZE     QTLIN         POINTER TO ABOVE OBJECT  
                  
                  
                  
                                             DUMMY BASIC LINE     
                  
      02212 +000000000001     DMLIN  DEC     1             ONE COMMAND HERE   
      02213 +000000400000            OCT     400000        ZERO LENGTH INVISIBLE LINE     
                  
      02214  0 00000 0 02212  DUMLIN PZE     DMLIN         POINTER TO THE LINE
                  
                  
                  
                                             DUMMY QUEUES LINE    
                  
      02215 +000000000001     DMQ    DEC     1  
      02216 +000000400000            OCT     400000   
                  
      02217  0 00000 0 02215  DUMQS  PZE     DMQ           POINTER TO THE DUMMY QUEU
                  
                  
1       KLUDGE VERSION OF .SCD                                                                   PAGE 18    
                           DISPLAY FILE OBJECTS FOR PLOTTINE                        
                  
                                             DISPLAY FILE END OF FILE   
                  
      02220 +000000000001     EOFC   DEC     1  
      02221 +377777377777            OCT     377777377777   
                  
      02222  0 00000 0 02220  BOTTOM PZE     EOFC          POINTER TO END OF FILE COMMAND 
                  
                  
                  
                                             SKELETON UPPER DISPLAY     
                  
      02223  0 00000 0 00103  UPRDIS PZE     TOPBOT-*-1    COUNT OF WORDS IN OBJECT 
      02224  300002000000            VFD     3/3,13/0,3/4,13/0 SET POINT AT CENTER OF SCREEN    
      02225  040470400702            VFD     3/0,1/1,14/312,3/4,1/0,14/450 LINE TO UPPER CORNER 
      02226  200007000000            VFD     3/2,15/7,18/0 START IN ON PACKED CHARS 
      02227  672363626260            VFD     1/1,5/23,H24/CTSS,H6/
      02230  646221272560            BCI     1,USAGE  
      02231  606060606221            BCI     1,    SA 
      02232  444743256051            BCI     1,MPLE R 
      02233  232163256031            BCI     1,CATE I 
      02234  626060606060     DSAMPL BCI     1,S
      02235  606225234645            BCI     1, SECON 
      02236  246260606060            BCI     1,DS     
      02237  041336440050            VFD     3/0,1/1,14/734,3/4,1/1,14/40 NEXT LINE 
      02240  200007000000            VFD     3/2,15/7,18/0  
      02241  676331442560            VFD     1/1,5/23,H24/TIME,H6/
      02242  606060606060     DDATE  BCI     1, 
      02243  606060606060     DTIME  BCI     1, 
      02244  606044676462            BCI     1,  MXUS 
      02245  615162601360            BCI     1,/RS =  
      02246  606060606060     DMXUSR BCI     1, 
      02247  606045646225            BCI     1,  NUSE 
      02250 +355162601360            OCT     355162601360  'RS = '
      02251  606060606060     DNUSER BCI     1, 
      02252  606060626345            BCI     1,   STN 
      02253  227060136060            BCI     1,BY =   
      02254  606060606060     DSTNBY BCI     1, 
      02255  041257440050            VFD     3/0,1/1,14/687,3/4,1/1,14/40     
      02256  200007000000            VFD     3/2,15/7,18/0  
      02257  272165276050            BCI     1,GAVG Q 
      02260  642564256043            BCI     1,UEUE L 
      02261  254527633013            BCI     1,ENGTH= 
      02262  606060606060     DAVGQL BCI     1, 
      02263  040662440050            VFD     3/0,1/1,14/434,3/4,1/1,14/40     
      02264  200007000000            VFD     3/2,15/7,18/0  
      02265  272746462413            VFD     1/0,5/23,H30/GOOD=   
      02266  606060606060     DGOOD  BCI     1, 
      02267  606266214713            BCI     1, SWAP= 
      02270  606060606060     DSWAP  BCI     1, 
      02271  000016400000            VFD     3/0,1/0,14/14,3/4,1/0,14/0 
      02272  200007000000            VFD     3/2,15/7,18/0  
      02273  134663302551            VFD     1/0,5/11,H30/OTHER   
      02274  606060606060     DOTHER BCI     1, 
      02275  041274440120            VFD     3/0,1/1,14/700,3/4,1/1,14/80     
      02276  200007000000            VFD     3/2,15/LOWCS,18/0    
1       KLUDGE VERSION OF .SCD                                                                   PAGE 19    
                           DISPLAY FILE OBJECTS FOR PLOTTINE                        
                  
      02277  344331452560            VFD     1/0,5/28,H24/LINE,H6/
      02300  604521442560            BCI     1, NAME  
      02301  606060646225            BCI     1,   USE 
      02302  516060606023            BCI     1,R    C 
      02303  464444452460            BCI     1,OMMND  
      02304                          DATA    10,UCLOCK
      02310                          DATA    10,USWAP 
      02314                          DATA    10,WRKTIM
      02320                          DATA    10,TIMLEV
      02324  200014000000            VFD     3/2,15/LOWQS,18/0    
      02325 +126001020304            OCT     126001020304   
      02326  050607101100            VFD     H30/56789
                       02327  TOPBOT EQU     *  
                  
      02327  0 00000 0 02223  TOP    PZE     UPRDIS        POINTER TO UPPER DISPLAY 
                  
1       KLUDGE VERSION OF .SCD                                                                   PAGE 20    
                           OTHER CONSTANTS AND VARIABLES                            
                  
      02330                   V      BSS     1             TEMPORARY H AND V  
      02331                   H      BSS     1  
      02332 +000000000024     SPACE  DEC     20            BIT SPACING BETWEEN LOWER LINES
      02333                   TEMP   BSS     1  
      02334 +000000000010     LSW    DEC     8             LEFT SWITCH NUMBER FOR SLEET TIME    
      02335 +000000000011     RSW    DEC     9             RIGHT SWITCH FOR SLEEP TIME    
      02336                   SLPTIM BSS     1             SLEEP TIME READ FROM SWITCHES  
      02337  0 00000 0 00000  FFLAG  PZE     0             FIRST TIME FLAG    
      02340 +000000000002     NCONS  DEC     2             NUMBER OF CONSOLES DESIRED     
                       00007  LOWCS  EQU     7             LOWER DISPLAY CHARACTER SPACING
                       00014  LOWQS  EQU     12            LOWER DISPLAY Q-LEVEL SPACING  
      02341  000000000013     SWPMSK VFD     30/0,1/0,5/11  
      02342  000000000035     NUMMSK VFD     30/0,1/0,5/29  
      02343  000000000013     WRKMSK VFD     30/0,1/0,5/11  
      02344  000000000011     Q15MSK VFD     30/0,1/0,5/9   
                  
                  
                                             TIA'S    
                  
      02345  0101 00 0 02366  GETARY TIA     =HGETARY 
      02346  0101 00 0 02405  SLEEP  TIA     =HSLEEP  
      02347  0101 00 0 02367  GETLOC TIA     =HGETLOC 
                                     END  
                  
        LITERALS  
      02350  000000000000     
      02351  000000000001     
      02352  000000000002     
      02353  000000000006     
      02354  000000000033     
      02355  000000000276     
      02356  060000000000     
      02357  126000000000     
      02360  172507534121     
      02361  212764000000     
      02362  216550432545     
      02363  224227633144     
      02364  233000000000     
      02365  234644444524     
      02366  272563215170     
      02367  272563434623     
      02370  330000000000     
      02371  400000001000     
      02372  446764625162     
      02373  456462255162     
      02374  474331626360     
      02375  475146224560     
      02376  475146274560     
      02377  514664452460     
      02400  602221234227     
      02401  606060603300     
      02402  606060603360     
      02403  606060606060     
      02404  620000000000     
      02405  624325254760     
1       KLUDGE VERSION OF .SCD                                                                   PAGE 21    
                           OTHER CONSTANTS AND VARIABLES                            
                  
      02406  626321636462     
      02407  626345227060     
      02410  626647633144     
      02411  633144432565     
      02412  634663633144     
      02413  642330215127     
      02414  642343462342     
      02415  644331626360     
      02416  644521442560     
      02417  665142633144     
1       KLUDGE VERSION OF .SCD                                                                   PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2420 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
       2331      H   120,  126
         43      N   123,  146,  153,  161,  164,  167,  172,  203,  206,  211,  214,  217,  521,  523,  526,  532,  535
                     566,  620,  621,  653,  661,  663,  671,  672,  700,  702,  705,  737,  771,  774, 1011, 1017, 1030
                    1031, 1075, 1141, 1205, 1435, 1501, 1545, 1617, 1663, 1727, 1773, 2045, 2111
       2330      V   122,  127,  136,  140
        500     NQ   520
       2044     OB   130,  132,  133,  135,  654,  657,  664,  667,  673,  676, 1012, 1015
       1011     PQ      
       2215    DMQ  2217
       1727    LEV   512,  771
       2334    LSW   270
        672    NOQ   704
       1024    OUT    20
       1773    POS   514,  774
       2207    Q15  1007
       2210    Q69  1010
         13    RPL   473,  655,  665,  674, 1013
       2335    RSW   271
       2327    TOP   114,  474
        141    XR1   124,  145,  152
       2163   BCOM   531,  546
         10   BZEL   256,  276,  312,  323,  334,  401,  424,  447,  556,  577,  632,  716,  750
       2220   EOFC  2222
        504   NXTQ   517
          4   PLOT   113,  134,  142,  147,  155
       2037   QPOS   503,  513,  516
       2176   QWRK   767,  770
       2333   TEMP   144,  151,  252,  254,  255,  257,  375,  377,  400,  402,  420,  422,  423,  425,  443,  445,  446
                     450,  542,  554,  567,  570,  573,  575,  576,  600,  606,  612,  613,  622,  623,  626,  630,  631
                     633,  641,  645,  646,  706,  707,  712,  714,  715,  717,  725,  731,  732,  740,  741,  744,  746
                     747,  751,  757,  763,  764
        660   XR12   522,  670,  677, 1016
          2  ACORE   104
       2174  BELIN  2155, 2174
       2160  BNAME   536,  545
       2161  BPROB   525,  550
       2162  BPROG   534,  552
       2155  BTLIN  2174
       2164  BUCLK   616,  617
       2170  BUSWP   651,  652
       2242  DDATE   305
          7  DEFBC   253,  273,  307,  320,  331,  376,  421,  444,  553,  574,  627,  713,  745
       2266  DGOOD   411,  462
       2212  DMLIN  2214
       2270  DSWAP   434,  463
       2243  DTIME   306
       2217  DUMQS   150,  675
       2337  FFLAG   342,  344
         12  GETTM   304
          6  INVIS   131
       2045  LINES   146,  653,  661,  663,  671
1       KLUDGE VERSION OF .SCD                                                                   PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          7  LOWCS  2156, 2165, 2171, 2177, 2203, 2276, 2305, 2311, 2315, 2321, 2341
        522  LOWER  1020
         14  LOWQS  2206, 2324, 2341
         12  MAXLV  1031
       2340  NCONS   111
        663  NOTIN   524
       1251  PLIST   175,  504
        702  PLTQS   662
       2043  POINT   115,  116,  475,  476
       1435  PROBN   203,  523
       1501  PROGN   206,  532
       2211  QELIN  2175, 2211
         72  QSIZE   175,  200, 1031, 1251, 1343
       2175  QTLIN  2211
       2202  QTMLV   735,  736
        157  REGEN  1023
        124  SETDP   154
          5  SETPT   125
          3  SGNON   110
       2346  SLEEP  1022
       2332  SPACE   137
       1613  STNBY   225,  332
       1343  ULIST   200,  506
       1545  UNAME   211,  535
        235 ABKGTM    72
        163 ACMMND    26
        221 AMXUSR    56
        227 ANUSER    64
        174 APLIST    37
        202 APROBN    45
        205 APROGN    50
        160 ASTATS    23
        224 ASTNBY    61
        240 ASWPTM    75
        166 ATIMLV    31
        232 ATOTTM    67
        216 AUCHRG   103
        213 AUCLCK   100
        177 AULIST    42
        210 AUNAME    53
        243 AVQLEN   107
        171 AWRKTM    34
       2174 BASICL   656
       1615 BKGTIM   236,  353,  467
       2157 BLINNM   555,  557,  560,  561,  565
       2222 BOTTOM   156
         15 CHNCOM  1026
          1 COMLOC    21,   24,   27,   32,   35,   40,   43,   46,   51,   54,   57,   62,   65,   70,   73,   76,  101
       1075 COMMND   164,  526
        346 COMPCT   343
       2262 DAVGQL   266
       2246 DMXUSR   311,  313,  314,  317
       2251 DNUSER   322,  324,  325,  330
       2274 DOTHER   457,  464
       2234 DSAMPL   275,  277,  300,  301,  303
1       KLUDGE VERSION OF .SCD                                                                   PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2254 DSTNBY   333,  335,  336,  341
       2214 DUMLIN   143,  666
        461 DUMPCT   345
       2345 GETARY   157,  162,  165,  170,  173,  176,  201,  204,  207,  212,  215,  220,  223,  226,  231,  234,  237
       2347 GETLOC   242
        520 LEVLUP   507
       1020 LOWLUP   701
       1611 MXUSRS   222,  310
        553 NOTBKG   543
       1030 NPLUS1   541
       2342 NUMMSK   563
       1612 NUSERS   230,  321
       2041 OBKGTM   354,  357,  367,  435,  470
       2042 OSWPTM   361,  364,  366,  412,  472
       2040 OTOTTM   347,  352,  365,  370,  413,  436,  466
       2344 Q15MSK      
       2211 QUEUEL  1014
       2111 QUEUES   153,  672,  700, 1011, 1017
         11 REDIGI   267
          0 SETBRK    17
        465 SETNXT   460
         14 SGNOFF  1024
       2336 SLPTIM   272,  274, 1021
       1031 STATUS   161,  702
       2341 SWPMSK      
       1616 SWPTIM   241,  360,  471
       1141 TIMLEV   167,  705
       2327 TOPBOT  2223, 2327
       1614 TOTTIM   233,  346,  465
       1663 UCHARG   217,  620
       1617 UCLOCK   214,  566,  621
       2223 UPRDIS  2327
       2343 WRKMSK      
       1205 WRKTIM   172,  737
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




SETFIB   BCD 09/20/68 0221.0    4595         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  SETFIB   MAD            02/15/68    2132.5
-                 
                  SETFIB - WRITTEN BY ROGER ROACH 6/28/67                                              LM00001    
                                                                                                       LM00002    
                  PROGRAM TO SET UP A CALL TO FIB TO SCHEDULE                                          LM00003    
                  A JOB TO RUN X DAYS FROM THE PRESENT DATE.                                           LM00004    
                                                                                                       LM00005    
                  CALLING SEQUENCE-                                                                    LM00006    
                     R SETFIB NAME LIMIT TIME XDAYS                                                    LM00007    
                                                                                                       LM00008    
                  DEFINE UNARY OPERATOR .MQ., PRECEDENCE HIGHER THAN .ABS.                        *001 LM00009    
                  MODE STRUCTURE .MQ. 1 TO 1                                                      *002 LM00010    
             OUT  MQ                                                                              *003 LM00011    
             END                                                                                  *004 LM00012    
                  NORMAL MODE IS INTEGER                                                          *005 LM00013    
                                                                                                       LM00014    
                  DIMENSION TABLE(5)                                                              *006 LM00015    
                  EQUIVALENCE (TABLE(0),FIB),(TABLE(1),NAME),(TABLE(2),LIMIT),                    *007 LM00016    
                1   (TABLE(3),TIME),(TABLE(4),DAY),(TABLE(5),F)                                   *007 LM00017    
                  VECTOR VALUES DAYS(1) = 31,28,31,30,31,30,31,31,30,31,30,31,31                  *008 LM00018    
                  VECTOR VALUES F = 777777777777K                                                 *009 LM00019    
                  VECTOR VALUES FIB = $   FIB$                                                    *010 LM00020    
                  VECTOR VALUES MASK = 7777K                                                      *011 LM00021    
                                                                                                       LM00022    
                  NAME = COMARG.(1)                                                               *012 LM00023    
                  LIMIT = COMARG.(2)                                                              *013 LM00024    
                  TIME = COMARG.(3)                                                               *014 LM00025    
                  XDAYS = COMARG.(4)                                                              *015 LM00026    
                  TEST = COMARG.(5)                                                               *016 LM00027    
                  WHENEVER NAME .E. F                                                             *017 LM00028    
                       PRMESS.($SETFIB NAME LIMIT TIME XDAYS$)                                    *018 LM00029    
                       PRMESS.($  XDAYS IS NUMBER OF DAYS FROM TODAY,$)                           *019 LM00030    
                       PRMESS.($  IF XDAYS IS MISSING, TIME IS DELTA TIME,$)                      *020 LM00031    
                       PRMESS.($  I.E. THE NUMBER OF MINUTES FROM NOW.$)                          *021 LM00032    
                       CHNCOM.(0)                                                                 *022 LM00033    
                       END OF CONDITIONAL                                                         *023 LM00034    
                  WHENEVER XDAYS.E.F .AND. NAME.NE.F .AND. LIMIT.NE.F, TRANSFER TO XTIME          *024 LM00035    
                  XDAYS = BCDEC.(XDAYS)                                                           *025 LM00036    
                  WHENEVER NAME.E.F .OR. LIMIT.E.F .OR. TIME.E.F .OR. TEST.NE.F                   *026 LM00037    
                     PRMESS.($ILLEGAL FORMAT$)                                                    *027 LM00038    
                     CHNCOM.(0)                                                                   *028 LM00039    
                     END OF CONDITIONAL                                                           *029 LM00040    
                                                                                                       LM00041    
                  DATE = .MQ.GETIME.(0)                                                           *030 LM00042    
                  YEAR = BCDEC.(DATE.A.MASK)                                                      *031 LM00043    
                  WHENEVER YEAR/4 * 4 .E. YEAR, DAYS(2) = 29                                      *032 LM00044    
                  MONTH = BCDEC.(DATE.RS.24)                                                      *033 LM00045    
                  WHENEVER XDAYS.G.DAYS(MONTH) .OR. XDAYS.G.DAYS(MONTH+1)                         *034 LM00046    
                     PRMESS.($XDAYS TOO LARGE.$)                                                  *035 LM00047    
                     CHNCOM.(0)                                                                   *036 LM00048    
                     END OF CONDITIONAL                                                           *037 LM00049    
                  DAY = BCDEC.((DATE.RS.12).A.MASK) + XDAYS                                       *038 LM00050    
                  WHENEVER DAY .G. DAYS(MONTH), DAY = DAY-DAYS(MONTH)                             *039 LM00051    
                  TABLE(4) = DERBC.(DAY)                                                          *040 LM00052    
      CALFIB      SCLS.(TABLE,0)                                                                  *041 LM00053    
                  NCOM.(TABLE,TABLE(1))                                                           *042 LM00054    
                                                                                                       LM00055    
                  IF NO XDAYS SPECIFIED, USE TIME AS XTIME                                             LM00056    
                                                                                                       LM00057    
      XTIME       TABLE(4) = F                                                                    *043 LM00058    
                  GETTM.(TABLE(5),TIMNOW)                                                         *044 LM00059    
                  MINNOW= BCDEC.(TIMNOW.RS.24)*60+BCDEC.((TIMNOW.RS.12).A.MASK)                   *045 LM00060    
                  XMIN = BCDEC.(TIME.RS.12)*60+BCDEC.(TIME.A.MASK)                                *046 LM00061    
                  HOURS = (MINNOW+XMIN)/60                                                        *047 LM00062    
                  MINUTS = MINNOW + XMIN - HOURS*60                                               *048 LM00063    
      LOOP        WHENEVER MINUTS .G. 60                                                          *049 LM00064    
                     HOURS = HOURS+1                                                              *050 LM00065    
                     MINUTS = MINUTS-60                                                           *051 LM00066    
                     TRANSFER TO LOOP                                                             *052 LM00067    
                     END OF CONDITIONAL                                                           *053 LM00068    
                  WHENEVER HOURS.G.24, HOURS = HOURS-24                                           *054 LM00069    
                  TABLE(3) = (DERBC.(HOURS).LS.12).V.DERBC.(MINUTS)                               *055 LM00070    
                  TRANSFER TO CALFIB                                                              *056 LM00071    
                                                                                                       LM00072    
                  END OF PROGRAM                                                                  *057 LM00073    
                                         MODE STRUCTURE .MQ. 1 TO 1           002  LM00010
 (THE NUMERIC FORM OF THE OPERATOR-MODE ARGUMENT IS    11101 )    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00516 TRANSFER VECTOR LENGTH  00013 PROGRAM BEGINS    00130
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      CALFIB 00022   4        F      00014 A 1        MINNOW 00046   1        TABLE  00021 A 1        XDAYS  00053   1  
      DATE   00025   1        HOURS  00044   1        MINUTS 00047   1        TEST   00051   1        XMIN   00054   1  
      DAY    00015   1        LIMIT  00017   1        MONTH  00050   1        TIME   00016   1        XTIME  00024   4  
      DAYS   00043 A 1        LOOP   00023   4        NAME   00020   1        TIMNOW 00052   1        YEAR   00055   1  
      FIB    00021 A 1        MASK   00045 A 1                                                                          
0FUNCTION DICTIONARY    
      BCDEC  00000   1        CHNCOM 00001   1        COMARG 00002   1        DERBC  00003   1        EXIT   00004   1  
      GETIME 00005   1        GETTM  00006   1        .SETUP 00007   1        NCOM   00010   1        PRMESS 00011   1  
      SCLS   00012   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00067 +000000000074     00064 +000000000014     00103 -112725336060     00122 -234646604321     00126 -272421706260    
 00065 +000000000030     00066 +000000000035     00070 +216360606060     00100 -036026465144     00074 +314343252721    
 00056 +000000000000     00125 -263360606060     00104 -114644604546     00124 -246325626026     00102 -062660443145    
 00112 -206330256045     00110 -206031332533     00113 -206331442573     00105 -202425436321     00075 +314425603162    
 00076 +314527736063     00120 -226044316262     00072 +242170626031     00107 -206031266067     00127 -336060606060    
 00114 -206346242170     00116 -226026514644     00101 -062660242170     00123 -244422255160     00117 -226031626045    
 00111 -206067242170     00073 +242170626060     00121 -233144256067     00077 -033144316360     00106 -204521442560    
 00115 -222563263122     00063 +000000000005     00062 +000000000004     00061 +000000000003     00060 +000000000002    
 00057 +000000000001     00071 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00022 TXL -300357000354       00023 TXL -300456000452       00024 TXL -300364000362                                    
0PROGRAM    
                 DEFINE UNARY OPERATOR .MQ., PRECEDENCE HIGHER THAN .ABS.           001  LM00009
                 MODE STRUCTURE .MQ. 1 TO 1                                         002  LM00010
 00130 TSX +0 07400 4 00007                                                                                             
                 N'R                                                                005  LM00013
                 D'N TABLE(5)                                                       006  LM00015
                 E'E (TABLE(0),FIB),(TABLE(1),NAME),(TABLE(2),LIMIT),               007  LM00016
                1  (TABLE(3),TIME),(TABLE(4),DAY),(TABLE(5),F)                      007  LM00017
                 V'S DAYS(1) = 31,28,31,30,31,30,31,31,30,31,30,31,31               008  LM00018
 00026     +0 00000 0 00037    00027     +0 00000 0 00037    00030     +0 00000 0 00036    00031     +0 00000 0 00037   
 00032     +0 00000 0 00036    00033     +0 00000 0 00037    00034     +0 00000 0 00037    00035     +0 00000 0 00036   
 00036     +0 00000 0 00037    00037     +0 00000 0 00036    00040     +0 00000 0 00037    00041     +0 00000 0 00034   
 00042     +0 00000 0 00037                                                                                             
                 V'S F = 777777777777K                                              009  LM00019
 00014     -3 77777 7 77777                                                                                             
                 V'S FIB = $   FIB$                                                 010  LM00020
 00021     -2 06060 2 63122                                                                                             
                 V'S MASK = 7777K                                                   011  LM00021
 00045     +0 00000 0 07777                                                                                             
                 NAME = COMARG.(1)                                                  012  LM00023
 00131 TSX +0 07400 4 00002    00132 TXH +3 00000 0 00057    00133 STO +0 60100 0 00020                                 
                 LIMIT = COMARG.(2)                                                 013  LM00024
 00134 TSX +0 07400 4 00002    00135 TXH +3 00000 0 00060    00136 STO +0 60100 0 00017                                 
                 TIME = COMARG.(3)                                                  014  LM00025
 00137 TSX +0 07400 4 00002    00140 TXH +3 00000 0 00061    00141 STO +0 60100 0 00016                                 
                 XDAYS = COMARG.(4)                                                 015  LM00026
 00142 TSX +0 07400 4 00002    00143 TXH +3 00000 0 00062    00144 STO +0 60100 0 00053                                 
                 TEST = COMARG.(5)                                                  016  LM00027
 00145 TSX +0 07400 4 00002    00146 TXH +3 00000 0 00063    00147 STO +0 60100 0 00051                                 
                 W'R NAME .E. F                                                     017  LM00028
 00150 CLA +0 50000 0 00020    00151 SUB +0 40200 0 00014    00152 TNZ -0 10000 0 00213                                 
                      PRMESS.($SETFIB NAME LIMIT TIME XDAYS$)                       018  LM00029
 00153 TSX +0 07400 4 00011    00154 TXH +3 00000 0 00115    00155 TXH +3 00000 0 00106    00156 TXH +3 00000 0 00077   
 00157 TXH +3 00000 0 00121    00160 TXH +3 00000 0 00073                                                               
                      PRMESS.($  XDAYS IS NUMBER OF DAYS FROM TODAY,$)              019  LM00030
 00161 TSX +0 07400 4 00011    00162 TXH +3 00000 0 00111    00163 TXH +3 00000 0 00117    00164 TXH +3 00000 0 00123   
 00165 TXH +3 00000 0 00101    00166 TXH +3 00000 0 00116    00167 TXH +3 00000 0 00114    00170 TXH +3 00000 0 00127   
                      PRMESS.($  IF XDAYS IS MISSING, TIME IS DELTA TIME,$)         020  LM00031
 00171 TSX +0 07400 4 00011    00172 TXH +3 00000 0 00107    00173 TXH +3 00000 0 00072    00174 TXH +3 00000 0 00120   
 00175 TXH +3 00000 0 00076    00176 TXH +3 00000 0 00075    00177 TXH +3 00000 0 00105    00200 TXH +3 00000 0 00113   
                      PRMESS.($  I.E. THE NUMBER OF MINUTES FROM NOW.$)             021  LM00032
 00201 TSX +0 07400 4 00011    00202 TXH +3 00000 0 00110    00203 TXH +3 00000 0 00112    00204 TXH +3 00000 0 00123   
 00205 TXH +3 00000 0 00102    00206 TXH +3 00000 0 00124    00207 TXH +3 00000 0 00104    00210 TXH +3 00000 0 00125   
                      CHNCOM.(0)                                                    022  LM00033
 00211 TSX +0 07400 4 00001    00212 TXH +3 00000 0 00056                                                               
                      E'L                                                           023  LM00034
                 W'R XDAYS.E.F .AND. NAME.NE.F .AND. LIMIT.NE.F, T'O XTIME          024  LM00035
 00213 CLA +0 50000 0 00017    00214 SUB +0 40200 0 00014    00215 TZE +0 10000 0 00225    00216 CLA +0 50000 0 00020   
 00217 SUB +0 40200 0 00014    00220 TZE +0 10000 0 00225    00221 CLA +0 50000 0 00053    00222 SUB +0 40200 0 00014   
 00223 TNZ -0 10000 0 00225    00224 TRA +0 02000 0 00024                                                               
                 XDAYS = BCDEC.(XDAYS)                                              025  LM00036
 00225 TSX +0 07400 4 00000    00226 TXH +3 00000 0 00053    00227 STO +0 60100 0 00053                                 
                 W'R NAME.E.F .OR. LIMIT.E.F .OR. TIME.E.F .OR. TEST.NE.F           026  LM00037
 00230 CLA +0 50000 0 00051    00231 SUB +0 40200 0 00014    00232 TNZ -0 10000 0 00244    00233 CLA +0 50000 0 00016   
 00234 SUB +0 40200 0 00014    00235 TZE +0 10000 0 00244    00236 CLA +0 50000 0 00017    00237 SUB +0 40200 0 00014   
 00240 TZE +0 10000 0 00244    00241 CLA +0 50000 0 00020    00242 SUB +0 40200 0 00014    00243 TNZ -0 10000 0 00252   
                    PRMESS.($ILLEGAL FORMAT$)                                       027  LM00038
 00244 TSX +0 07400 4 00011    00245 TXH +3 00000 0 00074    00246 TXH +3 00000 0 00100    00247 TXH +3 00000 0 00070   
                    CHNCOM.(0)                                                      028  LM00039
 00250 TSX +0 07400 4 00001    00251 TXH +3 00000 0 00056                                                               
                    E'L                                                             029  LM00040
                 DATE = .MQ.GETIME.(0)                                              030  LM00042
 00252 TSX +0 07400 4 00005    00253 TXH +3 00000 0 00056    00254 STQ -0 60000 0 00025                                 
                 YEAR = BCDEC.(DATE.A.MASK)                                         031  LM00043
 00255 CAL -0 50000 0 00025    00256 ANA -0 32000 0 00045    00257 SLW +0 60200 0 00512    00260 TSX +0 07400 4 00000   
 00261 TXH +3 00000 0 00512    00262 STO +0 60100 0 00055                                                               
                 W'R YEAR/4 * 4 .E. YEAR, DAYS(2) = 29                              032  LM00044
 00263 LDQ +0 56000 0 00055    00264 PXD -0 75400 0 00000    00265 LLS +0 76300 0 00000    00266 DVP +0 22100 0 00062   
 00267 MPY +0 20000 0 00062    00270 XCA +0 13100 0 00000    00271 SUB +0 40200 0 00055    00272 TNZ -0 10000 0 00275   
 00273 CLA +0 50000 0 00066    00274 STO +0 60100 0 00041                                                               
                 MONTH = BCDEC.(DATE.RS.24)                                         033  LM00045
 00275 CAL -0 50000 0 00065    00276 STA +0 62100 0 00300    00277 CAL -0 50000 0 00025    00300 LGR -0 76500 0 00000   
 00301 SLW +0 60200 0 00512    00302 TSX +0 07400 4 00000    00303 TXH +3 00000 0 00512    00304 STO +0 60100 0 00050   
                 W'R XDAYS.G.DAYS(MONTH) .OR. XDAYS.G.DAYS(MONTH+1)                 034  LM00046
 00305 CLA +0 50000 0 00050    00306 ADD +0 40000 0 00057    00307 PAX +0 73400 2 00000    00310 CLA +0 50000 0 00053   
 00311 SUB +0 40200 2 00043    00312 TZE +0 10000 0 00314    00313 TPL +0 12000 0 00321    00314 LXA +0 53400 2 00050   
 00315 CLA +0 50000 0 00053    00316 SUB +0 40200 2 00043    00317 TZE +0 10000 0 00327    00320 TMI -0 12000 0 00327   
                    PRMESS.($XDAYS TOO LARGE.$)                                     035  LM00047
 00321 TSX +0 07400 4 00011    00322 TXH +3 00000 0 00126    00323 TXH +3 00000 0 00122    00324 TXH +3 00000 0 00103   
                    CHNCOM.(0)                                                      036  LM00048
 00325 TSX +0 07400 4 00001    00326 TXH +3 00000 0 00056                                                               
                    E'L                                                             037  LM00049
                 DAY = BCDEC.((DATE.RS.12).A.MASK) + XDAYS                          038  LM00050
 00327 CAL -0 50000 0 00064    00330 STA +0 62100 0 00332    00331 CAL -0 50000 0 00025    00332 LGR -0 76500 0 00000   
 00333 ANA -0 32000 0 00045    00334 SLW +0 60200 0 00512    00335 TSX +0 07400 4 00000    00336 TXH +3 00000 0 00512   
 00337 ADD +0 40000 0 00053    00340 STO +0 60100 0 00015                                                               
                 W'R DAY .G. DAYS(MONTH), DAY = DAY-DAYS(MONTH)                     039  LM00051
 00341 LXA +0 53400 2 00050    00342 CLA +0 50000 0 00015    00343 SUB +0 40200 2 00043    00344 TZE +0 10000 0 00351   
 00345 TMI -0 12000 0 00351    00346 CLA +0 50000 0 00015    00347 SUB +0 40200 2 00043    00350 STO +0 60100 0 00015   
                 TABLE(4) = DERBC.(DAY)                                             040  LM00052
 00351 TSX +0 07400 4 00003    00352 TXH +3 00000 0 00015    00353 STO +0 60100 0 00015                                 
      CALFIB     SCLS.(TABLE,0)                                                     041  LM00053
 00354 TSX +0 07400 4 00012    00355 TXH +3 00000 0 00021    00356 TXH +3 00000 0 00056                                 
                 NCOM.(TABLE,TABLE(1))                                              042  LM00054
 00357 TSX +0 07400 4 00010    00360 TXH +3 00000 0 00021    00361 TXH +3 00000 0 00020                                 
      XTIME      TABLE(4) = F                                                       043  LM00058
 00362 CLA +0 50000 0 00014    00363 STO +0 60100 0 00015                                                               
                 GETTM.(TABLE(5),TIMNOW)                                            044  LM00059
 00364 TSX +0 07400 4 00006    00365 TXH +3 00000 0 00014    00366 TXH +3 00000 0 00052                                 
                 MINNOW= BCDEC.(TIMNOW.RS.24)*60+BCDEC.((TIMNOW.RS.12).A.MASK)      045  LM00060
 00367 CAL -0 50000 0 00064    00370 STA +0 62100 0 00372    00371 CAL -0 50000 0 00052    00372 LGR -0 76500 0 00000   
 00373 ANA -0 32000 0 00045    00374 SLW +0 60200 0 00512    00375 TSX +0 07400 4 00000    00376 TXH +3 00000 0 00512   
 00377 STO +0 60100 0 00512    00400 CAL -0 50000 0 00065    00401 STA +0 62100 0 00403    00402 CAL -0 50000 0 00052   
 00403 LGR -0 76500 0 00000    00404 SLW +0 60200 0 00513    00405 TSX +0 07400 4 00000    00406 TXH +3 00000 0 00513   
 00407 XCA +0 13100 0 00000    00410 MPY +0 20000 0 00067    00411 XCA +0 13100 0 00000    00412 ADD +0 40000 0 00512   
 00413 STO +0 60100 0 00046                                                                                             
                 XMIN = BCDEC.(TIME.RS.12)*60+BCDEC.(TIME.A.MASK)                   046  LM00061
 00414 CAL -0 50000 0 00016    00415 ANA -0 32000 0 00045    00416 SLW +0 60200 0 00513    00417 TSX +0 07400 4 00000   
 00420 TXH +3 00000 0 00513    00421 STO +0 60100 0 00513    00422 CAL -0 50000 0 00064    00423 STA +0 62100 0 00425   
 00424 CAL -0 50000 0 00016    00425 LGR -0 76500 0 00000    00426 SLW +0 60200 0 00512    00427 TSX +0 07400 4 00000   
 00430 TXH +3 00000 0 00512    00431 XCA +0 13100 0 00000    00432 MPY +0 20000 0 00067    00433 XCA +0 13100 0 00000   
 00434 ADD +0 40000 0 00513    00435 STO +0 60100 0 00054                                                               
                 HOURS = (MINNOW+XMIN)/60                                           047  LM00062
 00436 CLA +0 50000 0 00046    00437 ADD +0 40000 0 00054    00440 LRS +0 76500 0 00043    00441 DVP +0 22100 0 00067   
 00442 STQ -0 60000 0 00044                                                                                             
                 MINUTS = MINNOW + XMIN - HOURS*60                                  048  LM00063
 00443 LDQ +0 56000 0 00044    00444 MPY +0 20000 0 00067    00445 STQ -0 60000 0 00513    00446 CLA +0 50000 0 00046   
 00447 ADD +0 40000 0 00054    00450 SUB +0 40200 0 00513    00451 STO +0 60100 0 00047                                 
      LOOP       W'R MINUTS .G. 60                                                  049  LM00064
 00452 CLA +0 50000 0 00047    00453 SUB +0 40200 0 00067    00454 TZE +0 10000 0 00465    00455 TMI -0 12000 0 00465   
                    HOURS = HOURS+1                                                 050  LM00065
 00456 CLA +0 50000 0 00044    00457 ADD +0 40000 0 00057    00460 STO +0 60100 0 00044                                 
                    MINUTS = MINUTS-60                                              051  LM00066
 00461 CLA +0 50000 0 00047    00462 SUB +0 40200 0 00067    00463 STO +0 60100 0 00047                                 
                    T'O LOOP                                                        052  LM00067
 00464 TRA +0 02000 0 00023                                                                                             
                    E'L                                                             053  LM00068
                 W'R HOURS.G.24, HOURS = HOURS-24                                   054  LM00069
 00465 CLA +0 50000 0 00044    00466 SUB +0 40200 0 00065    00467 TZE +0 10000 0 00474    00470 TMI -0 12000 0 00474   
 00471 CLA +0 50000 0 00044    00472 SUB +0 40200 0 00065    00473 STO +0 60100 0 00044                                 
                 TABLE(3) = (DERBC.(HOURS).LS.12).V.DERBC.(MINUTS)                  055  LM00070
 00474 TSX +0 07400 4 00003    00475 TXH +3 00000 0 00047    00476 STO +0 60100 0 00513    00477 TSX +0 07400 4 00003   
 00500 TXH +3 00000 0 00044    00501 STO +0 60100 0 00512    00502 CAL -0 50000 0 00064    00503 STA +0 62100 0 00505   
 00504 CAL -0 50000 0 00512    00505 ALS +0 76700 0 00000    00506 ORA -0 50100 0 00513    00507 SLW +0 60200 0 00016   
                 T'O CALFIB                                                         056  LM00071
 00510 TRA +0 02000 0 00022                                                                                             
                 E'M                                                                057  LM00073
 00511 TSX +0 07400 4 00004                                                                                             




  SORT   BCD 09/20/68 0221.0   23901         00000    




 NSORT   BCD 08/10/68 1410.8   17913         00000    
1            SORT FAP                                                                            PAGE 1     
                  
                                     INSERT  MRC3A1   
                              *      MRC3A1 -- MACROS BY MICHAEL R COMER -- LAST MODIFIED 2/10/67     
                              *     
                              *      TABLE OF CONTENTS
                              *     
                              *      BUFFER     
                              *      CHFILE     
                              *      CLOSE
                              *      DELFIL     
                              *      ENDMAC     
                              *      ERRMAC     
                              *      FRECOR     
                              *      FSTATE     
                              *      FWAIT
                              *      GETCOM     
                              *      GNOCOM     
                              *      MEMCOM     
                              *      MEMLOC     
                              *      MEMOCT     
                              *      MEMORY     
                              *      OPEN 
                              *      PRCOMT     
                              *      PTHIFF     
                              *      RDFILE     
                              *      RDWAIT     
                              *      RESETX     
                              *      SAVEX
                              *      TIMER
                              *      TRFILE     
                              *      WRFILE     
                              *      WRFLX
                              *      WRWAIT     
                              *     
                                     PCC  
                                     PMC  
                                     NOCRS
                              *     
                              BUFFER MACRO   NAME1,NAME2,LOC
                                     TSX     $BUFFER,4
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     PTH     LOC,,432 
                              BUFFER END  
                              *     
                              CHFILE MACRO   OLDNM1,OLDNM2,NEWMOD,NEWNM1,NEWNM2,IOERR     
                                     TSX     $CHFILE,4
                                     PTH     OLDNM1   
                                     PTH     OLDNM2   
                                     PTHIFF  NEWMOD,=-0     
                                     PTHIFF  NEWNM1,=-0     
                                     PTHIFF  NEWNM2,=-0     
                                     ERRMAC  IOERR    
                              CHFILE END  
                              *     
                              CLOSE  MACRO   NAME1,NAME2,IOERR    
                                     TSX     $CLOSE,4 
1            SORT FAP                                                                            PAGE 2     
                  
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     ERRMAC  IOERR    
                              CLOSE  END  
                              *     
                              DELFIL MACRO   NAME1,NAME2,IOERR    
                                     TSX     $DELFIL,4
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     ERRMAC  IOERR    
                              DELFIL END  
                              *     
                              ENDMAC MACRO   LIST1,LIST2    
                                     IRP     LIST1    
                              LIST1  PZE  
                                     IRP  
                                     IRP     LIST2    
                              LIST2  FRECOR  432
                                     IRP  
                                     MEMCOM     
                                     MEMOCT     
                                     MEMLOC     
                              IOERRR SXA     *+3,4    
                                     TSX     $PRNTER,4
                                     TSX     $DORMNT,4
                                     AXT     **,4     
                                     TRA     0,4
                              EOFCT  PZE  
                              ERCODE PZE  
                                     'END 
                              ENDMAC END  
                              *     
                              ERRMAC MACRO   IOERR    
                                     IFF     0,IOERR  
                                     PTH     IOERR    
                                     IFF     1,IOERR  
                                     PTH     IOERRR   
                                     PTH     ERCODE   
                              ERRMAC END  
                              *     
                                     MACRO
                              LOC    FRECOR  SIZE     
                                     IFF     ..BOOL,A,Z     
                              ..TOPC SET     32767    
                              LOC    SET     ..TOPC-SIZE+1  
                              ..TOPC SET     LOC-1    
                              ..BOOL SET     1  
                              FRECOR END  
                              *     
                              FSTATE MACRO   NAME1,NAME2,RESULT,IOERR   
                                     TSX     $FSTATE,4
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     PTH     RESULT,,8
                                     ERRMAC  IOERR    
                              FSTATE END  
1            SORT FAP                                                                            PAGE 3     
                  
                              *     
                              FWAIT  MACRO   NAME1,NAME2    
                                     TSX     $FWAIT,4 
                                     PTH     NAME1    
                                     PTH     NAME2    
                              FWAIT  END  
                              *     
                              GETCOM MACRO   N,COM,NOCOM    
                                     TSX     $GETCOM,4
                                     PZE     N  
                                     LAS     =O777777777777 
                                     TRA     *+2
                                     TRA     NOCOM    
                                     SLW     COM
                              GETCOM END  
                              *     
                              MEMCOM MACRO
                              MEMERR XCL  
                                     TSX     ...OCT,4 
                                     SLW     ..MESS+3 
                                     LDQ     LWFSTG   
                                     TSX     ...OCT,4 
                                     SLW     ..MESS+8 
                                     WRFLX   ..MESS,9 
                                     TSX     $DORMNT,4
                                     TSX     $DEAD,4  
                              ..MESS BCI     9,MEMORY BOUND =          , LOWEST FREE STORAGE =  
                              MEMCOM END  
                              *     
                              MEMLOC MACRO
                              LWFSTG PZE     ..TOPC+1 
                              MEMLOC END  
                              *     
                              MEMOCT MACRO
                              ...OCT RQL     18 
                                     AXT     6,2
                                     ZAC  
                                     LGL     3  
                                     TNZ     *+2
                                     TIX     *-2,2,1  
                                     ORA     =H     0 
                                     TRA     *+3
                                     ALS     3  
                                     LGL     3  
                                     TIX     *-2,2,1  
                                     TRA     1,4
                              MEMOCT END  
                              *     
                              MEMORY MACRO
                                     TSX     $GETMEM,4
                                     LAS     LWFSTG   
                                     TRA     MEMERR   
                                     TRA     MEMERR   
                                     CAL     =O77777  
                                     TSX     $SETMEM,4
                              MEMORY END  
1            SORT FAP                                                                            PAGE 4     
                  
                              *     
                              OPEN   MACRO   NAME1,NAME2,STATUS,IOERR   
                                     TSX     $OPEN,4  
                                     PTH     =H'STATUS
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     PTH     =0 
                                     PTH     =2 
                                     ERRMAC  IOERR    
                              OPEN   END  
                              *     
                              PRCOMT MACRO   N,MESS   
                                     TSX     $.PCOMT,4
                                     PTH     N  
                                     BCI     N,MESS   
                              PRCOMT END  
                              *     
                              PTHIFF MACRO   ON,OFF   
                                     IFF     0,ON     
                                     PTH     ON 
                                     IFF     1,ON     
                                     PTH     OFF
                              PTHIFF END  
                              *     
                              RDFILE MACRO   NAME1,NAME2,RELLOC,PTHADD,BEGLOC,LEN,EOF,IOERR     
                                     TSX     $RDFILE,4
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     PTHIFF  RELLOC,=0
                              PTHADD PTH     BEGLOC,,LEN    
                                     PTH     EOF
                                     PTH     EOFCT    
                                     ERRMAC  IOERR    
                              RDFILE END  
                              *     
                              RDWAIT MACRO   NAME1,NAME2,RELLOC,PTHADD,BEGLOC,LEN,EOF,IOERR     
                                     TSX     $RDWAIT,4
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     PTHIFF  RELLOC,=0
                              PTHADD PTH     BEGLOC,,LEN    
                                     PTH     EOF
                                     PTH     EOFCT    
                                     ERRMAC  IOERR    
                              RDWAIT END  
                              *     
                              RESETX MACRO   X  
                              X      AXT     **,1     
                                     AXT     **,2     
                                     AXT     **,3     
                                     AXT     **,4     
                                     AXT     **,5     
                                     AXT     **,6     
                                     AXT     **,7     
                              RESETX END  
                              *     
1            SORT FAP                                                                            PAGE 5     
                  
                              SAVEX  MACRO   X  
                                     SXA     X,1
                                     SXA     X+1,2    
                                     SXA     X+2,3    
                                     SXA     X+3,4    
                                     SXA     X+4,5    
                                     SXA     X+5,6    
                                     SXA     X+6,7    
                              SAVEX  END  
                              *     
                              TIMER  MACRO   MXTIME,..TIME  
                                     ORGCRS     
                                     TSX     $TIMER,4 
                                     PTH     *+4
                                     PZE     *+4
                              ..TIME PZE  
                                     TRA     *+32     
                                     PZE     MXTIME*60
                                     TSX     $JOBTM,4 
                                     PTH     ..TIME   
                                     LDQ     ..TIME   
                                     ZAC  
                                     DVP     =6 
                                     STQ     ..TIME   
                                     TSX     $DERBC,4 
                                     PZE     ..TIME   
                                     LGR     6  
                                     ALS     6  
                                     ORA     =H00000. 
                                     LGL     6  
                                     SLW     ..TIME   
                                     TSX     $BZEL,4  
                                     PZE     ..TIME   
                                     STO     ..TIME   
                                     TSX     $WRFLXA,4
                                     PZE     ..TIME,,1
                                     PRCOMT  5,( SECONDS HAVE ELAPSED.) 
                                     TSX     $TIMER,4 
                                     PTH     *+3
                                     PZE     *-27     
                                     TRA     $RSTRTN  
                                     PZE     MXTIME*60
                                     NOCRS
                              TIMER  END  
                              *     
                              TRFILE MACRO   NAME1,NAME2,RELLOC,IOERR   
                                     TSX     $TRFILE,4
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     PTHIFF  RELLOC,=0
                                     ERRMAC  IOERR    
                              TRFILE END  
                              *     
                              WRFILE MACRO   NAME1,NAME2,RELLOC,PTHADD,BEGLOC,LENGTH,IOERR,EOF  
                                     TSX     $WRFILE,4
                                     PTH     NAME1    
1            SORT FAP                                                                            PAGE 6     
                  
                                     PTH     NAME2    
                                     PTHIFF  RELLOC,=0
                              PTHADD PTH     BEGLOC,,LENGTH 
                                     PTHIFF  EOF,=-0  
                                     PTH     EOFCT    
                                     ERRMAC  IOERR    
                              WRFILE END  
                              *     
                              WRFLX  MACRO   LOC,N,A  
                                     TSX     $WRFLX'A',4    
                                     PTH     LOC,,N   
                              WRFLX  END  
                              *     
                              WRWAIT MACRO   NAME1,NAME2,RELLOC,PTHADD,BEGLOC,LENGTH,IOERR,EOF  
                                     TSX     $WRWAIT,4
                                     PTH     NAME1    
                                     PTH     NAME2    
                                     PTHIFF  RELLOC,=0
                              PTHADD PTH     BEGLOC,,LENGTH 
                                     PTHIFF  EOF,=-0  
                                     PTH     EOFCT    
                                     ERRMAC  IOERR    
                              WRWAIT END  
                  
        TRANSFER VECTOR 
      00000  272563442544     GETMEM
      00001  622563442544     SETMEM
      00002  272563234644     GETCOM
      00003  266263216325     FSTATE
      00004  464725456060     OPEN  
      00005  512466213163     RDWAIT
      00006  234346622560     CLOSE 
      00007  222324252360     BCDEC 
      00010  663046214431     WHOAMI
      00011  272563263143     GETFIL
      00012  226426262551     BUFFER
      00013  264362516367     FLSRTX
      00014  264362516345     FLSRTN
      00015  442551272567     MERGEX
      00016  442551272545     MERGEN
      00017  665166213163     WRWAIT
      00020  242543263143     DELFIL
      00021  665126436721     WRFLXA
      00022  512426436760     RDFLX 
      00023  233026314325     CHFILE
      00024  665126436760     WRFLX 
      00025  233045234644     CHNCOM
      00026  475145632551     PRNTER
      00027  244651444563     DORMNT
      00030  242521246060     DEAD  
                  
                       20700  LENGTH EQU     432*20   
      00031  0760 00 0 00016         LMTM 
      00032                          MEMORY     
      00032  0074 00 4 00000         TSX     $GETMEM,4                                                        .001
      00033 -0340 00 0 01220         LAS     LWFSTG                                                           .001
1            SORT FAP                                                                            PAGE 7     
                  
      00034  0020 00 0 01161         TRA     MEMERR                                                           .001
      00035  0020 00 0 01161         TRA     MEMERR                                                           .001
      00036 -0500 00 0 01242         CAL     =O77777                                                          .001
      00037  0074 00 4 00001         TSX     $SETMEM,4                                                        .001
      00040                          GETCOM  1,FILNAM,NOARG 
      00040  0074 00 4 00002         TSX     $GETCOM,4                                                        .001
      00041  0 00000 0 00001         PZE     1                                                                .001
      00042 -0340 00 0 01255         LAS     =O777777777777                                                   .001
      00043  0020 00 0 00045         TRA     *+2                                                              .001
      00044  0020 00 0 00774         TRA     NOARG                                                            .001
      00045  0602 00 0 01017         SLW     FILNAM                                                           .001
      00046                          GETCOM  2,NAME1,ENDARG 
      00046  0074 00 4 00002         TSX     $GETCOM,4                                                        .001
      00047  0 00000 0 00002         PZE     2                                                                .001
      00050 -0340 00 0 01255         LAS     =O777777777777                                                   .001
      00051  0020 00 0 00053         TRA     *+2                                                              .001
      00052  0020 00 0 00104         TRA     ENDARG                                                           .001
      00053  0602 00 0 01020         SLW     NAME1                                                            .001
      00054                          GETCOM  3,NAME2,ENDARG 
      00054  0074 00 4 00002         TSX     $GETCOM,4                                                        .001
      00055  0 00000 0 00003         PZE     3                                                                .001
      00056 -0340 00 0 01255         LAS     =O777777777777                                                   .001
      00057  0020 00 0 00061         TRA     *+2                                                              .001
      00060  0020 00 0 00104         TRA     ENDARG                                                           .001
      00061  0602 00 0 01021         SLW     NAME2                                                            .001
      00062                          GETCOM  4,NAME3,ENDARG 
      00062  0074 00 4 00002         TSX     $GETCOM,4                                                        .001
      00063  0 00000 0 00004         PZE     4                                                                .001
      00064 -0340 00 0 01255         LAS     =O777777777777                                                   .001
      00065  0020 00 0 00067         TRA     *+2                                                              .001
      00066  0020 00 0 00104         TRA     ENDARG                                                           .001
      00067  0602 00 0 01022         SLW     NAME3                                                            .001
      00070                          GETCOM  5,NAME4,ENDARG 
      00070  0074 00 4 00002         TSX     $GETCOM,4                                                        .001
      00071  0 00000 0 00005         PZE     5                                                                .001
      00072 -0340 00 0 01255         LAS     =O777777777777                                                   .001
      00073  0020 00 0 00075         TRA     *+2                                                              .001
      00074  0020 00 0 00104         TRA     ENDARG                                                           .001
      00075  0602 00 0 01023         SLW     NAME4                                                            .001
      00076                          GETCOM  6,REV,ENDARG   
      00076  0074 00 4 00002         TSX     $GETCOM,4                                                        .001
      00077  0 00000 0 00006         PZE     6                                                                .001
      00100 -0340 00 0 01255         LAS     =O777777777777                                                   .001
      00101  0020 00 0 00103         TRA     *+2                                                              .001
      00102  0020 00 0 00104         TRA     ENDARG                                                           .001
      00103  0602 00 0 01045         SLW     REV                                                              .001
      00104                   ENDARG FSTATE  FILNAM,SRTQST,FSTBUF,NOQST 
      00104  0074 00 4 00003         TSX     $FSTATE,4                                                        .001
      00105  3 00000 0 01017         PTH     FILNAM                                                           .001
      00106  3 00000 0 01024         PTH     SRTQST                                                           .001
      00107  3 00010 0 01025         PTH     FSTBUF,,8                                                        .001
      00110                          ERRMAC  NOQST                                                            .001
                                     IFF     0,NOQST                                                          .002
      00110  3 00000 0 00776         PTH     NOQST                                                            .002
                                     IFF     1,NOQST                                                          .002
                                     PTH     IOERRR                                                           .002
1            SORT FAP                                                                            PAGE 8     
                  
      00111  3 00000 0 01227         PTH     ERCODE                                                           .002
      00112 -0500 00 0 01025         CAL     FSTBUF   
      00113 -0340 00 0 01241         LAS     =1308    
      00114  0020 00 0 00764         TRA     TOLONG   
      00115  0020 00 0 00116         TRA     *+1
      00116  0734 00 4 00000         PAX     ,4 
      00117 -0634 00 4 00137         SXD     AD1,4    
      00120 -0500 00 0 01042         CAL     EQRQ     
      00121  0402 00 0 01025         SUB     FSTBUF   
      00122  0621 00 0 00137         STA     AD1
      00123                          OPEN    FILNAM,SRTQST,R
      00123  0074 00 4 00004         TSX     $OPEN,4                                                          .001
      00124  3 00000 0 01245         PTH     =HR                                                              .001
      00125  3 00000 0 01017         PTH     FILNAM                                                           .001
      00126  3 00000 0 01024         PTH     SRTQST                                                           .001
      00127  3 00000 0 01230         PTH     =0                                                               .001
      00130  3 00000 0 01232         PTH     =2                                                               .001
      00131                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00131  3 00000 0 01221         PTH     IOERRR                                                           .002
      00132  3 00000 0 01227         PTH     ERCODE                                                           .002
      00133                          RDWAIT  FILNAM,SRTQST,=0,AD1 
      00133  0074 00 4 00005         TSX     $RDWAIT,4                                                        .001
      00134  3 00000 0 01017         PTH     FILNAM                                                           .001
      00135  3 00000 0 01024         PTH     SRTQST                                                           .001
      00136                          PTHIFF  =0,=0                                                            .001
                                     IFF     0,=0                                                             .002
      00136  3 00000 0 01230         PTH     =0                                                               .002
                                     IFF     1,=0                                                             .002
                                     PTH     =0                                                               .002
      00137  3 00000 0 00000  AD1    PTH     ,,                                                               .001
      00140  3 00000 0 00000         PTH                                                                      .001
      00141  3 00000 0 01226         PTH     EOFCT                                                            .001
      00142                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00142  3 00000 0 01221         PTH     IOERRR                                                           .002
      00143  3 00000 0 01227         PTH     ERCODE                                                           .002
      00144                          CLOSE   FILNAM,SRTQST  
      00144  0074 00 4 00006         TSX     $CLOSE,4                                                         .001
      00145  3 00000 0 01017         PTH     FILNAM                                                           .001
      00146  3 00000 0 01024         PTH     SRTQST                                                           .001
      00147                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00147  3 00000 0 01221         PTH     IOERRR                                                           .002
      00150  3 00000 0 01227         PTH     ERCODE                                                           .002
      00151  0774 00 1 00006         AXT     6,1
      00152  0534 00 3 01025         LXA     FSTBUF,3 
      00153  0560 00 0 01251         LDQ     =H 
      00154  0600 00 0 01043         STZ     FIRST    
      00155 -0500 00 3 77112  LOP1   CAL     ENDR,3   
1            SORT FAP                                                                            PAGE 9     
                  
      00156 -0340 00 0 01253         LAS     =O777777000000 
      00157  0020 00 0 00246         TRA     SKIP1    
      00160  0020 00 0 00246         TRA     SKIP1    
      00161 -0130 00 0 00000         XCL  
      00162  0774 00 2 00006         AXT     6,2
      00163  0602 00 1 77121  LOP4   SLW     QST+6,1  
      00164 -0763 00 0 00006         LGL     6  
      00165  0044 00 0 00000         PAI  
      00166  0056 00  000060         RNT     60 
      00167  0020 00 0 00201         TRA     DATA     
      00170  0054 00  000017         RFT     17 
      00171  0020 00 0 00201         TRA     DATA     
      00172 -0520 00 0 01043         NZT     FIRST    
      00173  0020 00 0 00216         TRA     CONTIN   
      00174  0600 00 0 01043         STZ     FIRST    
      00175 -0500 00 0 01251         CAL     =H 
      00176 -2 00001 1 01000         TNX     ILLFRM,1,1     
      00177  2 00001 2 00163         TIX     LOP4,2,1 
      00200  0020 00 0 00217         TRA     ENDWRD   
      00201 -0625 00 0 01043  DATA   STL     FIRST    
      00202  0056 00  000073         RNT     73 
      00203  0020 00 0 00216         TRA     CONTIN   
      00204  0054 00  000004         RFT     4  
      00205  0020 00 0 00216         TRA     CONTIN   
      00206  3 00002 1 00762         TXH     INSUF,1,2
      00207 -0600 00 0 01067         STQ     SAVQ     
      00210  0074 00 4 00007         TSX     $BCDEC,4 
      00211  0 00000 0 77117         PZE     QST+4    
      00212  0601 00 0 77117         STO     QST+4    
      00213  0774 00 1 00661         AXT     433,1    
      00214  0560 00 0 01067         LDQ     SAVQ     
      00215  0020 00 0 00243         TRA     SKIPIN   
      00216  2 00001 2 00163  CONTIN TIX     LOP4,2,1 
      00217 -0130 00 0 00000  ENDWRD XCL  
      00220  2 00001 3 00155         TIX     LOP1,3,1 
      00221  0020 00 0 00760         TRA     INSUF1   
      00222 -0500 00 3 77112  LOP2   CAL     ENDR,3   
      00223 -0340 00 0 01253         LAS     =O777777000000 
      00224  0020 00 0 00272         TRA     SKIP2    
      00225  0020 00 0 00272         TRA     SKIP2    
      00226  0774 00 2 00006  LOP3IN AXT     6,2
      00227 -0130 00 0 00000         XCL  
      00230 -0754 00 0 00000  LOP3   ZAC  
      00231 -0763 00 0 00003         LGL     3  
      00232 -0100 00 0 00251         TNZ     SKIP3    
      00233  0600 00 0 01066         STZ     BREAK2   
      00234 -0520 00 0 01044         NZT     BREAK    
      00235  0020 00 0 00240         TRA     NOBRK    
      00236  0600 00 0 01044         STZ     BREAK    
      00237 -2 00001 1 00764         TNX     TOLONG,1,1     
      00240 -0500 00 1 00002  NOBRK  CAL     QST+439,1
      00241 -0763 00 0 00003         LGL     3  
      00242  0602 00 1 00002         SLW     QST+439,1
      00243  2 00001 2 00230  SKIPIN TIX     LOP3,2,1 
      00244  2 00001 3 00222         TIX     LOP2,3,1 
      00245  0020 00 0 00275         TRA     ALL
1            SORT FAP                                                                            PAGE 10    
                  
      00246  0560 00 0 01251  SKIP1  LDQ     =H 
      00247  2 00001 3 00155         TIX     LOP1,3,1 
      00250  0020 00 0 00762         TRA     INSUF    
      00251 -0763 00 0 00003  SKIP3  LGL     3  
      00252  0600 00 0 01044         STZ     BREAK    
      00253  0402 00 0 01237         SUB     =O57     
      00254  0100 00 0 00263         TZE     BK 
      00255  0402 00 0 01231         SUB     =1 
      00256  0100 00 0 00263         TZE     BK 
      00257 -0625 00 0 01065         STL     MFIRST   
      00260 -0625 00 0 01066         STL     BREAK2   
      00261  2 00001 1 00243         TIX     SKIPIN,1,1     
      00262  0020 00 0 00764         TRA     TOLONG   
      00263  0520 00 0 01066  BK     ZET     BREAK2   
      00264  0020 00 0 00243         TRA     SKIPIN   
      00265 -0500 00 0 01065         CAL     MFIRST   
      00266 -0625 00 0 01065         STL     MFIRST   
      00267  0100 00 0 00243         TZE     SKIPIN   
      00270 -0625 00 0 01044         STL     BREAK    
      00271  0020 00 0 00243         TRA     SKIPIN   
      00272  0600 00 0 01044  SKIP2  STZ     BREAK    
      00273 -2 00001 1 00764         TNX     TOLONG,1,1     
      00274  0020 00 0 00244         TRA     SKIPIN+1 
      00275  0756 00 1 00000  ALL    PCA     ,1 
      00276  0361 00 0 01240         ACL     =434     
      00277  0621 00 0 01035         STA     MSKDAT   
      00300  0774 00 4 00004         AXT     4,4
      00301 -0500 00 4 01024  XARG   CAL     ENDNAM,4 
      00302  0100 00 0 00312         TZE     XSKIP    
      00303 -0340 00 0 01250         LAS     =H     0 
      00304  0020 00 0 00311         TRA     XSTO     
      00305  0020 00 0 00312         TRA     XSKIP    
      00306 -0340 00 0 01247         LAS     =H    -0 
      00307  0020 00 0 00311         TRA     XSTO     
      00310  0020 00 0 00312         TRA     XSKIP    
      00311  0602 00 4 77117  XSTO   SLW     QST+4,4  
      00312  2 00001 4 00301  XSKIP  TIX     XARG,4,1 
      00313 -0500 00 0 01045         CAL     REV
      00314  0100 00 0 00316         TZE     *+2
      00315  0602 00 0 77120         SLW     QST+5    
      00316  0074 00 4 00010         TSX     $WHOAMI,4
      00317  0 00002 0 01040         PZE     WHO,,2   
      00320                   LOOP1  FSTATE  MERGE,FILE1,FSTBUF,ERR1    
      00320  0074 00 4 00003         TSX     $FSTATE,4                                                        .001
      00321  3 00000 0 01041         PTH     MERGE                                                            .001
      00322  3 00000 0 01036         PTH     FILE1                                                            .001
      00323  3 00010 0 01025         PTH     FSTBUF,,8                                                        .001
      00324                          ERRMAC  ERR1                                                             .001
                                     IFF     0,ERR1                                                           .002
      00324  3 00000 0 00332         PTH     ERR1                                                             .002
                                     IFF     1,ERR1                                                           .002
                                     PTH     IOERRR                                                           .002
      00325  3 00000 0 01227         PTH     ERCODE                                                           .002
      00326  0074 00 4 00011         TSX     $GETFIL,4
      00327  3 00000 0 01036         PTH     FILE1    
      00330  0601 00 0 01036         STO     FILE1    
1            SORT FAP                                                                            PAGE 11    
                  
      00331  0020 00 0 00320         TRA     LOOP1    
      00332  0074 00 4 00011  ERR1   TSX     $GETFIL,4
      00333  3 00000 0 01036         PTH     FILE1    
      00334  0601 00 0 01037         STO     FILE2    
      00335                   LOOP2  FSTATE  MERGE,FILE2,FSTBUF,ERR2    
      00335  0074 00 4 00003         TSX     $FSTATE,4                                                        .001
      00336  3 00000 0 01041         PTH     MERGE                                                            .001
      00337  3 00000 0 01037         PTH     FILE2                                                            .001
      00340  3 00010 0 01025         PTH     FSTBUF,,8                                                        .001
      00341                          ERRMAC  ERR2                                                             .001
                                     IFF     0,ERR2                                                           .002
      00341  3 00000 0 00347         PTH     ERR2                                                             .002
                                     IFF     1,ERR2                                                           .002
                                     PTH     IOERRR                                                           .002
      00342  3 00000 0 01227         PTH     ERCODE                                                           .002
      00343  0074 00 4 00011         TSX     $GETFIL,4
      00344  3 00000 0 01037         PTH     FILE2    
      00345  0601 00 0 01037         STO     FILE2    
      00346  0020 00 0 00335         TRA     LOOP2    
      00347                   ERR2   OPEN    MERGE,FILE1,RW 
      00347  0074 00 4 00004         TSX     $OPEN,4                                                          .001
      00350  3 00000 0 01246         PTH     =HRW                                                             .001
      00351  3 00000 0 01041         PTH     MERGE                                                            .001
      00352  3 00000 0 01036         PTH     FILE1                                                            .001
      00353  3 00000 0 01230         PTH     =0                                                               .001
      00354  3 00000 0 01232         PTH     =2                                                               .001
      00355                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00355  3 00000 0 01221         PTH     IOERRR                                                           .002
      00356  3 00000 0 01227         PTH     ERCODE                                                           .002
      00357                          OPEN    MERGE,FILE2,RW 
      00357  0074 00 4 00004         TSX     $OPEN,4                                                          .001
      00360  3 00000 0 01246         PTH     =HRW                                                             .001
      00361  3 00000 0 01041         PTH     MERGE                                                            .001
      00362  3 00000 0 01037         PTH     FILE2                                                            .001
      00363  3 00000 0 01230         PTH     =0                                                               .001
      00364  3 00000 0 01232         PTH     =2                                                               .001
      00365                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00365  3 00000 0 01221         PTH     IOERRR                                                           .002
      00366  3 00000 0 01227         PTH     ERCODE                                                           .002
      00367                          BUFFER  MERGE,FILE1,BUFF1    
      00367  0074 00 4 00012         TSX     $BUFFER,4                                                        .001
      00370  3 00000 0 01041         PTH     MERGE                                                            .001
      00371  3 00000 0 01036         PTH     FILE1                                                            .001
      00372  3 00660 0 73576         PTH     BUFF1,,432                                                       .001
      00373                          BUFFER  MERGE,FILE2,BUFF2    
      00373  0074 00 4 00012         TSX     $BUFFER,4                                                        .001
      00374  3 00000 0 01041         PTH     MERGE                                                            .001
      00375  3 00000 0 01037         PTH     FILE2                                                            .001
      00376  3 00660 0 72716         PTH     BUFF2,,432                                                       .001
      00377  0500 00 0 77117         CLA     QST+4    
1            SORT FAP                                                                            PAGE 12    
                  
      00400  0621 00 0 01060         STA     BLKLEN   
      00401                          FSTATE  QST,QST+1,FSTBUF,NOFILE    
      00401  0074 00 4 00003         TSX     $FSTATE,4                                                        .001
      00402  3 00000 0 77113         PTH     QST                                                              .001
      00403  3 00000 0 77114         PTH     QST+1                                                            .001
      00404  3 00010 0 01025         PTH     FSTBUF,,8                                                        .001
      00405                          ERRMAC  NOFILE                                                           .001
                                     IFF     0,NOFILE                                                         .002
      00405  3 00000 0 00766         PTH     NOFILE                                                           .002
                                     IFF     1,NOFILE                                                         .002
                                     PTH     IOERRR                                                           .002
      00406  3 00000 0 01227         PTH     ERCODE                                                           .002
      00407  0560 00 0 01025         LDQ     FSTBUF   
      00410 -0754 00 0 00000         ZAC  
      00411  0221 00 0 01060         DVP     BLKLEN   
      00412 -0100 00 0 00772         TNZ     NOMULT   
      00413                          OPEN    QST,QST+1,R    
      00413  0074 00 4 00004         TSX     $OPEN,4                                                          .001
      00414  3 00000 0 01245         PTH     =HR                                                              .001
      00415  3 00000 0 77113         PTH     QST                                                              .001
      00416  3 00000 0 77114         PTH     QST+1                                                            .001
      00417  3 00000 0 01230         PTH     =0                                                               .001
      00420  3 00000 0 01232         PTH     =2                                                               .001
      00421                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00421  3 00000 0 01221         PTH     IOERRR                                                           .002
      00422  3 00000 0 01227         PTH     ERCODE                                                           .002
      00423                          BUFFER  QST,QST+1,BUFF3
      00423  0074 00 4 00012         TSX     $BUFFER,4                                                        .001
      00424  3 00000 0 77113         PTH     QST                                                              .001
      00425  3 00000 0 77114         PTH     QST+1                                                            .001
      00426  3 00660 0 72036         PTH     BUFF3,,432                                                       .001
      00427 -0754 00 0 00000  CYCLE  ZAC  
      00430  0600 00 0 01073         STZ     EOF2TS   
      00431  0560 00 0 01061         LDQ     TOTLEN   
      00432  0221 00 0 01060         DVP     BLKLEN   
      00433  0040 00 0 00770         TLQ     BIGBLK   
      00434  0200 00 0 01060         MPY     BLKLEN   
      00435 -0600 00 0 01062         STQ     SRTLEN   
      00436 -0600 00 0 01063         STQ     MRGLEN   
      00437 -0600 00 0 01064         STQ     OUTLEN   
      00440  0074 00 4 00005         TSX     $RDWAIT,4
      00441  3 00000 0 77113         PTH     QST
      00442  3 00000 0 77114         PTH     QST+1    
      00443  3 00000 0 01230         PTH     =0 
      00444  2 01063 0 51136         PTW     MRGBUF,,MRGLEN 
      00445  3 00000 0 00655         PTH     EOF1     
      00446  3 00000 0 01226         PTH     EOFCT    
      00447                          ERRMAC     
                                     IFF     0,                                                               .001
                                     PTH                                                                      .001
                                     IFF     1,                                                               .001
      00447  3 00000 0 01221         PTH     IOERRR                                                           .001
      00450  3 00000 0 01227         PTH     ERCODE                                                           .001
1            SORT FAP                                                                            PAGE 13    
                  
      00451 -0500 00 0 77120  EOF1R  CAL     QST+5    
      00452 -0340 00 0 01243         LAS     =HEVERSE 
      00453  0020 00 0 00460         TRA     FN 
      00454  0020 00 0 00456         TRA     *+2
      00455  0020 00 0 00460         TRA     FN 
      00456 -0774 00 4 00460         AXC     FN,4     
      00457  0020 00 0 00013         TRA     $FLSRTX  
      00460  0074 00 4 00014  FN     TSX     $FLSRTN,4
      00461  2 01063 0 51136         PTW     MRGBUF,,MRGLEN 
      00462  0 00000 0 30236         PZE     SRTBUF   
      00463  3 00000 0 01060         PTH     BLKLEN   
      00464  2 01035 0 77121         PTW     QST+6,,MSKDAT  
      00465  0500 00 0 01234         CLA     =O20     
      00466  0621 00 0 01070         STA     FLAGS    
      00467  0074 00 4 00005  IN     TSX     $RDWAIT,4
      00470  3 00000 0 01041         PTH     MERGE    
      00471  3 00000 0 01036         PTH     FILE1    
      00472  3 00000 0 01230         PTH     =0 
      00473  2 01063 0 51136         PTW     MRGBUF,,MRGLEN 
      00474  3 00000 0 00662         PTH     EOF2     
      00475  3 00000 0 01226         PTH     EOFCT    
      00476                          ERRMAC     
                                     IFF     0,                                                               .001
                                     PTH                                                                      .001
                                     IFF     1,                                                               .001
      00476  3 00000 0 01221         PTH     IOERRR                                                           .001
      00477  3 00000 0 01227         PTH     ERCODE                                                           .001
      00500 -0500 00 0 77120  EOF2R  CAL     QST+5    
      00501 -0340 00 0 01243         LAS     =HEVERSE 
      00502  0020 00 0 00507         TRA     FN2
      00503  0020 00 0 00505         TRA     *+2
      00504  0020 00 0 00507         TRA     FN2
      00505 -0774 00 4 00507         AXC     FN2,4    
      00506  0020 00 0 00015         TRA     $MERGEX  
      00507  0074 00 4 00016  FN2    TSX     $MERGEN,4
      00510  3 00000 0 01070         PTH     FLAGS    
      00511  2 01062 0 30236         PTW     SRTBUF,,SRTLEN 
      00512  2 01063 0 51136         PTW     MRGBUF,,MRGLEN 
      00513  2 01064 0 07336         PTW     OUTPUT,,OUTLEN 
      00514  2 01035 0 77121         PTW     QST+6,,MSKDAT  
      00515  3 00000 0 01060         PTH     BLKLEN   
      00516  0621 00 0 01071         STA     MORTST   
      00517  0622 00 0 00524         STD     INSRT4   
      00520                          WRWAIT  MERGE,FILE2,=0,INSRT4,OUTPUT,**  
      00520  0074 00 4 00017         TSX     $WRWAIT,4                                                        .001
      00521  3 00000 0 01041         PTH     MERGE                                                            .001
      00522  3 00000 0 01037         PTH     FILE2                                                            .001
      00523                          PTHIFF  =0,=0                                                            .001
                                     IFF     0,=0                                                             .002
      00523  3 00000 0 01230         PTH     =0                                                               .002
                                     IFF     1,=0                                                             .002
                                     PTH     =0                                                               .002
      00524  3 00000 0 07336  INSRT4 PTH     OUTPUT,,**                                                       .001
      00525                          PTHIFF  ,=-0                                                             .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
1            SORT FAP                                                                            PAGE 14    
                  
                                     IFF     1,                                                               .002
      00525  3 00000 0 01244         PTH     =-0                                                              .002
      00526  3 00000 0 01226         PTH     EOFCT                                                            .001
      00527                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00527  3 00000 0 01221         PTH     IOERRR                                                           .002
      00530  3 00000 0 01227         PTH     ERCODE                                                           .002
      00531  0500 00 0 01071         CLA     MORTST   
      00532  0760 00 0 00001         LBT  
      00533  0020 00 0 00635         TRA     MORE1    
      00534  0771 00 0 00001         ARS     1  
      00535  0760 00 0 00001         LBT  
      00536  0020 00 0 00643         TRA     MORE2    
      00537 -0520 00 0 01073         NZT     EOF2TS   
      00540  0020 00 0 00652         TRA     IN21     
      00541  0520 00 0 01072         ZET     EOF1TS   
      00542  0020 00 0 00670         TRA     END
      00543  0500 00 0 01036         CLA     FILE1    
      00544  0560 00 0 01037         LDQ     FILE2    
      00545 -0600 00 0 01036         STQ     FILE1    
      00546  0601 00 0 01037         STO     FILE2    
      00547                          CLOSE   MERGE,FILE2    
      00547  0074 00 4 00006         TSX     $CLOSE,4                                                         .001
      00550  3 00000 0 01041         PTH     MERGE                                                            .001
      00551  3 00000 0 01037         PTH     FILE2                                                            .001
      00552                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00552  3 00000 0 01221         PTH     IOERRR                                                           .002
      00553  3 00000 0 01227         PTH     ERCODE                                                           .002
      00554                          DELFIL  MERGE,FILE2    
      00554  0074 00 4 00020         TSX     $DELFIL,4                                                        .001
      00555  3 00000 0 01041         PTH     MERGE                                                            .001
      00556  3 00000 0 01037         PTH     FILE2                                                            .001
      00557                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00557  3 00000 0 01221         PTH     IOERRR                                                           .002
      00560  3 00000 0 01227         PTH     ERCODE                                                           .002
      00561                          OPEN    MERGE,FILE2,RW 
      00561  0074 00 4 00004         TSX     $OPEN,4                                                          .001
      00562  3 00000 0 01246         PTH     =HRW                                                             .001
      00563  3 00000 0 01041         PTH     MERGE                                                            .001
      00564  3 00000 0 01037         PTH     FILE2                                                            .001
      00565  3 00000 0 01230         PTH     =0                                                               .001
      00566  3 00000 0 01232         PTH     =2                                                               .001
      00567                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00567  3 00000 0 01221         PTH     IOERRR                                                           .002
      00570  3 00000 0 01227         PTH     ERCODE                                                           .002
1            SORT FAP                                                                            PAGE 15    
                  
      00571                          CLOSE   MERGE,FILE1    
      00571  0074 00 4 00006         TSX     $CLOSE,4                                                         .001
      00572  3 00000 0 01041         PTH     MERGE                                                            .001
      00573  3 00000 0 01036         PTH     FILE1                                                            .001
      00574                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00574  3 00000 0 01221         PTH     IOERRR                                                           .002
      00575  3 00000 0 01227         PTH     ERCODE                                                           .002
      00576                          OPEN    MERGE,FILE1,RW 
      00576  0074 00 4 00004         TSX     $OPEN,4                                                          .001
      00577  3 00000 0 01246         PTH     =HRW                                                             .001
      00600  3 00000 0 01041         PTH     MERGE                                                            .001
      00601  3 00000 0 01036         PTH     FILE1                                                            .001
      00602  3 00000 0 01230         PTH     =0                                                               .001
      00603  3 00000 0 01232         PTH     =2                                                               .001
      00604                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00604  3 00000 0 01221         PTH     IOERRR                                                           .002
      00605  3 00000 0 01227         PTH     ERCODE                                                           .002
      00606 -0500 00 0 01036         CAL     FILE1    
      00607 -0340 00 0 01037         LAS     FILE2    
      00610  0020 00 0 00623         TRA     INBUFF   
      00611  0761 00 0 00000         NOP  
      00612                          BUFFER  MERGE,FILE2,BUFF2    
      00612  0074 00 4 00012         TSX     $BUFFER,4                                                        .001
      00613  3 00000 0 01041         PTH     MERGE                                                            .001
      00614  3 00000 0 01037         PTH     FILE2                                                            .001
      00615  3 00660 0 72716         PTH     BUFF2,,432                                                       .001
      00616                          BUFFER  MERGE,FILE1,BUFF1    
      00616  0074 00 4 00012         TSX     $BUFFER,4                                                        .001
      00617  3 00000 0 01041         PTH     MERGE                                                            .001
      00620  3 00000 0 01036         PTH     FILE1                                                            .001
      00621  3 00660 0 73576         PTH     BUFF1,,432                                                       .001
      00622  0020 00 0 00427         TRA     CYCLE    
      00623                   INBUFF BUFFER  MERGE,FILE2,BUFF1    
      00623  0074 00 4 00012         TSX     $BUFFER,4                                                        .001
      00624  3 00000 0 01041         PTH     MERGE                                                            .001
      00625  3 00000 0 01037         PTH     FILE2                                                            .001
      00626  3 00660 0 73576         PTH     BUFF1,,432                                                       .001
      00627                          BUFFER  MERGE,FILE1,BUFF2    
      00627  0074 00 4 00012         TSX     $BUFFER,4                                                        .001
      00630  3 00000 0 01041         PTH     MERGE                                                            .001
      00631  3 00000 0 01036         PTH     FILE1                                                            .001
      00632  3 00660 0 72716         PTH     BUFF2,,432                                                       .001
      00633  0020 00 0 00427         TRA     CYCLE    
      00634  2 00001 4 00301         TIX     XARG,4,1 
      00635  0771 00 0 00001  MORE1  ARS     1  
      00636  0760 00 0 00001         LBT  
      00637  0020 00 0 00643         TRA     MORE2    
      00640 -0520 00 0 01073         NZT     EOF2TS   
      00641  0020 00 0 00652         TRA     IN21     
      00642  0020 00 0 00645         TRA     F2R3     
1            SORT FAP                                                                            PAGE 16    
                  
      00643 -0520 00 0 01073  MORE2  NZT     EOF2TS   
      00644  0020 00 0 00650         TRA     F2R23    
      00645  0500 00 0 01233  F2R3   CLA     =O3
      00646  0621 00 0 01070  X1     STA     FLAGS    
      00647  0020 00 0 00500         TRA     EOF2R    
      00650  0500 00 0 01236  F2R23  CLA     =O23     
      00651  0020 00 0 00646         TRA     X1 
      00652  0500 00 0 01235  IN21   CLA     =O21     
      00653  0621 00 0 01070         STA     FLAGS    
      00654  0020 00 0 00467         TRA     IN 
      00655 -0625 00 0 01072  EOF1   STL     EOF1TS   
      00656  0534 00 4 01226         LXA     EOFCT,4  
      00657  0634 00 4 01062         SXA     SRTLEN,4 
      00660  0634 00 4 01063         SXA     MRGLEN,4 
      00661  0020 00 0 00451         TRA     EOF1R    
      00662 -0625 00 0 01073  EOF2   STL     EOF2TS   
      00663  0534 00 4 01226         LXA     EOFCT,4  
      00664  0634 00 4 01063         SXA     MRGLEN,4 
      00665 -0500 00 0 01254         CAL     =O777777777757 
      00666  0320 00 0 01070         ANS     FLAGS    
      00667  0020 00 0 00500         TRA     EOF2R    
      00670                   END    CLOSE   QST,QST+1
      00670  0074 00 4 00006         TSX     $CLOSE,4                                                         .001
      00671  3 00000 0 77113         PTH     QST                                                              .001
      00672  3 00000 0 77114         PTH     QST+1                                                            .001
      00673                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00673  3 00000 0 01221         PTH     IOERRR                                                           .002
      00674  3 00000 0 01227         PTH     ERCODE                                                           .002
      00675                          CLOSE   MERGE,FILE1    
      00675  0074 00 4 00006         TSX     $CLOSE,4                                                         .001
      00676  3 00000 0 01041         PTH     MERGE                                                            .001
      00677  3 00000 0 01036         PTH     FILE1                                                            .001
      00700                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00700  3 00000 0 01221         PTH     IOERRR                                                           .002
      00701  3 00000 0 01227         PTH     ERCODE                                                           .002
      00702                          CLOSE   MERGE,FILE2    
      00702  0074 00 4 00006         TSX     $CLOSE,4                                                         .001
      00703  3 00000 0 01041         PTH     MERGE                                                            .001
      00704  3 00000 0 01037         PTH     FILE2                                                            .001
      00705                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00705  3 00000 0 01221         PTH     IOERRR                                                           .002
      00706  3 00000 0 01227         PTH     ERCODE                                                           .002
      00707                          DELFIL  MERGE,FILE1    
      00707  0074 00 4 00020         TSX     $DELFIL,4                                                        .001
      00710  3 00000 0 01041         PTH     MERGE                                                            .001
      00711  3 00000 0 01036         PTH     FILE1                                                            .001
      00712                          ERRMAC                                                                   .001
1            SORT FAP                                                                            PAGE 17    
                  
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00712  3 00000 0 01221         PTH     IOERRR                                                           .002
      00713  3 00000 0 01227         PTH     ERCODE                                                           .002
      00714                          FSTATE  QST+2,QST+3,FSTBUF,FERRIN  
      00714  0074 00 4 00003         TSX     $FSTATE,4                                                        .001
      00715  3 00000 0 77115         PTH     QST+2                                                            .001
      00716  3 00000 0 77116         PTH     QST+3                                                            .001
      00717  3 00010 0 01025         PTH     FSTBUF,,8                                                        .001
      00720                          ERRMAC  FERRIN                                                           .001
                                     IFF     0,FERRIN                                                         .002
      00720  3 00000 0 00744         PTH     FERRIN                                                           .002
                                     IFF     1,FERRIN                                                         .002
                                     PTH     IOERRR                                                           .002
      00721  3 00000 0 01227         PTH     ERCODE                                                           .002
      00722 -0500 00 0 77115         CAL     QST+2    
      00723  0602 00 0 01152         SLW     FCOM+2   
      00724 -0500 00 0 77116         CAL     QST+3    
      00725  0602 00 0 01153         SLW     FCOM+3   
      00726                          WRFLX   FCOM,9,A 
      00726  0074 00 4 00021         TSX     $WRFLXA,4                                                        .001
      00727  3 00011 0 01150         PTH     FCOM,,9                                                          .001
      00730  0074 00 4 00022         TSX     $RDFLX,4 
      00731  0 00001 0 01074         PZE     LOC,,1   
      00732 -0500 00 0 01074         CAL     LOC
      00733 -0340 00 0 01252         LAS     =HYES    
      00734  0020 00 0 01003         TRA     FILCOM   
      00735  0020 00 0 00737         TRA     *+2
      00736  0020 00 0 01003         TRA     FILCOM   
      00737                          DELFIL  QST+2,QST+3,DELERR   
      00737  0074 00 4 00020         TSX     $DELFIL,4                                                        .001
      00740  3 00000 0 77115         PTH     QST+2                                                            .001
      00741  3 00000 0 77116         PTH     QST+3                                                            .001
      00742                          ERRMAC  DELERR                                                           .001
                                     IFF     0,DELERR                                                         .002
      00742  3 00000 0 01002         PTH     DELERR                                                           .002
                                     IFF     1,DELERR                                                         .002
                                     PTH     IOERRR                                                           .002
      00743  3 00000 0 01227         PTH     ERCODE                                                           .002
      00744                   FERRIN CHFILE  MERGE,FILE2,=-0,QST+2,QST+3
      00744  0074 00 4 00023         TSX     $CHFILE,4                                                        .001
      00745  3 00000 0 01041         PTH     MERGE                                                            .001
      00746  3 00000 0 01037         PTH     FILE2                                                            .001
      00747                          PTHIFF  =-0,=-0                                                          .001
                                     IFF     0,=-0                                                            .002
      00747  3 00000 0 01244         PTH     =-0                                                              .002
                                     IFF     1,=-0                                                            .002
                                     PTH     =-0                                                              .002
      00750                          PTHIFF  QST+2,=-0                                                        .001
                                     IFF     0,QST+2                                                          .002
      00750  3 00000 0 77115         PTH     QST+2                                                            .002
                                     IFF     1,QST+2                                                          .002
                                     PTH     =-0                                                              .002
      00751                          PTHIFF  QST+3,=-0                                                        .001
                                     IFF     0,QST+3                                                          .002
1            SORT FAP                                                                            PAGE 18    
                  
      00751  3 00000 0 77116         PTH     QST+3                                                            .002
                                     IFF     1,QST+3                                                          .002
                                     PTH     =-0                                                              .002
      00752                          ERRMAC                                                                   .001
                                     IFF     0,                                                               .002
                                     PTH                                                                      .002
                                     IFF     1,                                                               .002
      00752  3 00000 0 01221         PTH     IOERRR                                                           .002
      00753  3 00000 0 01227         PTH     ERCODE                                                           .002
      00754                          WRFLX
      00754  0074 00 4 00024         TSX     $WRFLX,4                                                         .001
      00755  3 00000 0 00000         PTH     ,,                                                               .001
      00756  0074 00 4 00025         TSX     $CHNCOM,4
      00757  0 00000 0 00001         PZE     1  
                              *     
                              ERROR  MACRO   N  
                                     AXC     N,4
                                     TRA     ERRS     
                              ERROR  END  
                              *     
      00760                   INSUF1 ERROR   0  
      00760 -0774 00 4 00000         AXC     0,4                                                              .001
      00761  0020 00 0 01011         TRA     ERRS                                                             .001
      00762                   INSUF  ERROR   1  
      00762 -0774 00 4 00001         AXC     1,4                                                              .001
      00763  0020 00 0 01011         TRA     ERRS                                                             .001
      00764                   TOLONG ERROR   2  
      00764 -0774 00 4 00002         AXC     2,4                                                              .001
      00765  0020 00 0 01011         TRA     ERRS                                                             .001
      00766                   NOFILE ERROR   3  
      00766 -0774 00 4 00003         AXC     3,4                                                              .001
      00767  0020 00 0 01011         TRA     ERRS                                                             .001
      00770                   BIGBLK ERROR   4  
      00770 -0774 00 4 00004         AXC     4,4                                                              .001
      00771  0020 00 0 01011         TRA     ERRS                                                             .001
      00772                   NOMULT ERROR   5  
      00772 -0774 00 4 00005         AXC     5,4                                                              .001
      00773  0020 00 0 01011         TRA     ERRS                                                             .001
      00774                   NOARG  ERROR   6  
      00774 -0774 00 4 00006         AXC     6,4                                                              .001
      00775  0020 00 0 01011         TRA     ERRS                                                             .001
      00776                   NOQST  ERROR   7  
      00776 -0774 00 4 00007         AXC     7,4                                                              .001
      00777  0020 00 0 01011         TRA     ERRS                                                             .001
      01000                   ILLFRM ERROR   8  
      01000 -0774 00 4 00010         AXC     8,4                                                              .001
      01001  0020 00 0 01011         TRA     ERRS                                                             .001
      01002  0074 00 4 00026  DELERR TSX     $PRNTER,4
      01003  0500 00 0 01037  FILCOM CLA     FILE2    
      01004  0601 00 0 01147         STO     COM9+4   
      01005  0500 00 0 01041         CLA     MERGE    
      01006  0601 00 0 01146         STO     COM9+3   
      01007                          ERROR   9  
      01007 -0774 00 4 00011         AXC     9,4                                                              .001
      01010  0020 00 0 01011         TRA     ERRS                                                             .001
      01011 -0500 00 4 01046  ERRS   CAL     ERRCOM,4 
1            SORT FAP                                                                            PAGE 19    
                  
      01012  0602 00 0 01014         SLW     *+2
      01013                          WRFLX
      01013  0074 00 4 00024         TSX     $WRFLX,4                                                         .001
      01014  3 00000 0 00000         PTH     ,,                                                               .001
      01015  0074 00 4 00025         TSX     $CHNCOM,4
      01016  0 00000 0 00001         PZE     1  
      01017  0 00000 0 00000  FILNAM PZE  
      01020  0 00000 0 00000  NAME1  PZE  
      01021  0 00000 0 00000  NAME2  PZE  
      01022  0 00000 0 00000  NAME3  PZE  
      01023  0 00000 0 00000  NAME4  PZE  
                       01024  ENDNAM SYN     *  
      01024  625163506263     SRTQST BCI     1,SRTQST 
      01025                   FSTBUF BSS     8  
      01035  0 00000 0 00000  MSKDAT PZE  
                              QST    FRECOR  437
                                     IFF     ..BOOL,A,Z                                                       .001
                       77777  ..TOPC SET     32767                                                            .001
                       77113  QST    SET     ..TOPC-437+1                                                     .001
                       77112  ..TOPC SET     QST-1                                                            .001
                       00001  ..BOOL SET     1                                                                .001
      01036  333333000001     FILE1  BCI     1,...001 
      01037  0 00000 0 00000  FILE2  PZE  
      01040  0 00000 0 00000  WHO    PZE  
      01041  0 00000 0 00000  MERGE  PZE                   WHO+1  
      01042  0 00000 0 77112  EQRQ   PZE     ENDR     
                              ENDR   FRECOR  1  
                                     IFF     ..BOOL,A,Z                                                       .001
                              ..TOPC SET     32767                                                            .001
                       77112  ENDR   SET     ..TOPC-1+1                                                       .001
                       77111  ..TOPC SET     ENDR-1                                                           .001
                       00001  ..BOOL SET     1                                                                .001
                              DUMMY  FRECOR  1308     
                                     IFF     ..BOOL,A,Z                                                       .001
                              ..TOPC SET     32767                                                            .001
                       74456  DUMMY  SET     ..TOPC-1308+1                                                    .001
                       74455  ..TOPC SET     DUMMY-1                                                          .001
                       00001  ..BOOL SET     1                                                                .001
      01043  0 00000 0 00000  FIRST  PZE  
      01044  0 00000 0 00000  BREAK  PZE  
      01045  0 00000 0 00000  REV    PZE  
      01046  0 00006 0 01077  ERRCOM PZE     COM1,,6  
      01047  0 00006 0 01077         PZE     COM1,,6  
      01050  0 00003 0 01105         PZE     COM2,,3  
      01051  0 00004 0 01110         PZE     COM3,,4  
      01052  0 00004 0 01114         PZE     COM4,,4  
      01053  0 00010 0 01120         PZE     COM5,,8  
      01054  0 00003 0 01130         PZE     COM6,,3  
      01055  0 00003 0 01133         PZE     COM7,,3  
      01056  0 00005 0 01136         PZE     COM8,,5  
      01057  0 00005 0 01143         PZE     COM9,,5  
                              BUFF1  FRECOR  432
                                     IFF     ..BOOL,A,Z                                                       .001
                              ..TOPC SET     32767                                                            .001
                       73576  BUFF1  SET     ..TOPC-432+1                                                     .001
                       73575  ..TOPC SET     BUFF1-1                                                          .001
1            SORT FAP                                                                            PAGE 20    
                  
                       00001  ..BOOL SET     1                                                                .001
                              BUFF2  FRECOR  432
                                     IFF     ..BOOL,A,Z                                                       .001
                              ..TOPC SET     32767                                                            .001
                       72716  BUFF2  SET     ..TOPC-432+1                                                     .001
                       72715  ..TOPC SET     BUFF2-1                                                          .001
                       00001  ..BOOL SET     1                                                                .001
                              BUFF3  FRECOR  432
                                     IFF     ..BOOL,A,Z                                                       .001
                              ..TOPC SET     32767                                                            .001
                       72036  BUFF3  SET     ..TOPC-432+1                                                     .001
                       72035  ..TOPC SET     BUFF3-1                                                          .001
                       00001  ..BOOL SET     1                                                                .001
      01060  0 00000 0 00000  BLKLEN PZE  
      01061  0 00000 0 20700  TOTLEN PZE     LENGTH   
      01062  0 00000 0 00000  SRTLEN PZE  
      01063  0 00000 0 00000  MRGLEN PZE  
      01064  0 00000 0 00000  OUTLEN PZE  
                              MRGBUF FRECOR  LENGTH   
                                     IFF     ..BOOL,A,Z                                                       .001
                              ..TOPC SET     32767                                                            .001
                       51136  MRGBUF SET     ..TOPC-LENGTH+1                                                  .001
                       51135  ..TOPC SET     MRGBUF-1                                                         .001
                       00001  ..BOOL SET     1                                                                .001
                              SRTBUF FRECOR  LENGTH   
                                     IFF     ..BOOL,A,Z                                                       .001
                              ..TOPC SET     32767                                                            .001
                       30236  SRTBUF SET     ..TOPC-LENGTH+1                                                  .001
                       30235  ..TOPC SET     SRTBUF-1                                                         .001
                       00001  ..BOOL SET     1                                                                .001
                              OUTPUT FRECOR  LENGTH   
                                     IFF     ..BOOL,A,Z                                                       .001
                              ..TOPC SET     32767                                                            .001
                       07336  OUTPUT SET     ..TOPC-LENGTH+1                                                  .001
                       07335  ..TOPC SET     OUTPUT-1                                                         .001
                       00001  ..BOOL SET     1                                                                .001
      01065  0 00000 0 00000  MFIRST PZE  
      01066  0 00000 0 00000  BREAK2 PZE  
      01067  0 00000 0 00000  SAVQ   PZE  
      01070  0 00000 0 00000  FLAGS  PZE  
      01071  0 00000 0 00000  MORTST PZE  
      01072  0 00000 0 00000  EOF1TS PZE  
      01073  0 00000 0 00000  EOF2TS PZE  
      01074                   LOC    BSS     2  
      01076  0 00000 0 00000  LEN    PZE  
      01077  454663602545     COM1   BCI     6,NOT ENOUGH ARGUMENTS IN SRTQST.
      01100  466427306021     
      01101  512764442545     
      01102  636260314560     
      01103  625163506263     
      01104  336060606060     
      01105  625163506263     COM2   BCI     3,SRTQST TOO LONG.   
      01106  606346466043     
      01107  464527336060     
      01110  314547646360     COM3   BCI     4,INPUT FILE NOT FOUND.    
      01111  263143256045     
1            SORT FAP                                                                            PAGE 21    
                  
      01112  466360264664     
      01113  452433606060     
      01114  224346234260     COM4   BCI     4,BLOCK SIZE TOO LARGE.    
      01115  623171256063     
      01116  464660432151     
      01117  272533606060     
      01120  263143256043     COM5   BCI     8,FILE LENGTH IS NOT A MULTIPLE OF BLOCK SIZE.     
      01121  254527633060     
      01122  316260454663     
      01123  602160446443     
      01124  633147432560     
      01125  462660224346     
      01126  234260623171     
      01127  253360606060     
      01130  454660215127     COM6   BCI     3,NO ARGUMENTS.
      01131  644425456362     
      01132  336060606060     
      01133  625163506263     COM7   BCI     3,SRTQST NOT FOUND.  
      01134  604546636026     
      01135  466445243360     
      01136  314343252721     COM8   BCI     5,ILLEGAL FORMAT IN SRTQST.
      01137  436026465144     
      01140  216360314560     
      01141  625163506263     
      01142  336060606060     
      01143  704664516051     COM9   BCI     5,YOUR RESULT IS IN EBAZAGGAZABE 
      01144  256264436360     
      01145  316260314560     
      01146  252221712127     
      01147  272171212225     
      01150  464324602631     FCOM   BCI     9,OLD FILE -- 777777777777 DO YOU WISH TO DELETE IT. --  
      01151  432560404060     
      01152  070707070707     
      01153  070707070707     
      01154  602446607046     
      01155  646066316230     
      01156  606346602425     
      01157  432563256031     
      01160  633360404060     
      01161                          ENDMAC     
                                     IRP                                                                      .001
                                     IRP                                                                      .001
      01161                          MEMCOM                                                                   .001
      01161 -0130 00 0 00000  MEMERR XCL                                                                      .002
      01162  0074 00 4 01204         TSX     ...OCT,4                                                         .002
      01163  0602 00 0 01176         SLW     ..MESS+3                                                         .002
      01164  0560 00 0 01220         LDQ     LWFSTG                                                           .002
      01165  0074 00 4 01204         TSX     ...OCT,4                                                         .002
      01166  0602 00 0 01203         SLW     ..MESS+8                                                         .002
      01167                          WRFLX   ..MESS,9                                                         .002
      01167  0074 00 4 00024         TSX     $WRFLX,4                                                         .003
      01170  3 00011 0 01173         PTH     ..MESS,,9                                                        .003
      01171  0074 00 4 00027         TSX     $DORMNT,4                                                        .002
      01172  0074 00 4 00030         TSX     $DEAD,4                                                          .002
      01173  442544465170     ..MESS BCI     9,MEMORY BOUND =          , LOWEST FREE STORAGE =                .002
      01174  602246644524     
1            SORT FAP                                                                            PAGE 22    
                  
      01175  601360606060     
      01176  606060606060     
      01177  736043466625     
      01200  626360265125     
      01201  256062634651     
      01202  212725601360     
      01203  606060606060     
      01204                          MEMOCT                                                                   .001
      01204 -0773 00 0 00022  ...OCT RQL     18                                                               .002
      01205  0774 00 2 00006         AXT     6,2                                                              .002
      01206 -0754 00 0 00000         ZAC                                                                      .002
      01207 -0763 00 0 00003         LGL     3                                                                .002
      01210 -0100 00 0 01212         TNZ     *+2                                                              .002
      01211  2 00001 2 01207         TIX     *-2,2,1                                                          .002
      01212 -0501 00 0 01250         ORA     =H     0                                                         .002
      01213  0020 00 0 01216         TRA     *+3                                                              .002
      01214  0767 00 0 00003         ALS     3                                                                .002
      01215 -0763 00 0 00003         LGL     3                                                                .002
      01216  2 00001 2 01214         TIX     *-2,2,1                                                          .002
      01217  0020 00 4 00001         TRA     1,4                                                              .002
      01220                          MEMLOC                                                                   .001
      01220  0 00000 0 07336  LWFSTG PZE     ..TOPC+1                                                         .002
      01221  0634 00 4 01224  IOERRR SXA     *+3,4                                                            .001
      01222  0074 00 4 00026         TSX     $PRNTER,4                                                        .001
      01223  0074 00 4 00027         TSX     $DORMNT,4                                                        .001
      01224  0774 00 4 00000         AXT     **,4                                                             .001
      01225  0020 00 4 00000         TRA     0,4                                                              .001
      01226  0 00000 0 00000  EOFCT  PZE                                                                      .001
      01227  0 00000 0 00000  ERCODE PZE                                                                      .001
                                     END                                                                      .001
                  
        LITERALS  
      01230  000000000000     
      01231  000000000001     
      01232  000000000002     
      01233  000000000003     
      01234  000000000020     
      01235  000000000021     
      01236  000000000023     
      01237  000000000057     
      01240  000000000662     
      01241  000000002434     
      01242  000000077777     
      01243  256525516225     
      01244  400000000000     
      01245  516060606060     
      01246  516660606060     
      01247  606060604000     
      01250  606060606000     
      01251  606060606060     
      01252  702562606060     
      01253  777777000000     
      01254  777777777757     
      01255  777777777777     
1            SORT FAP                                                                            PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1256 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        263     BK   254,  256
        460     FN   453,  455,  456
        467     IN   654
        646     X1   651
        137    AD1   117,  122
        275    ALL   245
        670    END   542
        507    FN2   502,  504,  505
       1076    LEN      
       1074    LOC   731,  732
      77113    QST   163,  211,  212,  240,  242,  311,  315,  377,  402,  403,  415,  416,  424,  425,  441,  442,  451
                     464,  500,  514,  671,  672,  715,  716,  722,  724,  740,  741,  750,  751, 1036
       1045    REV   103,  313
       1040    WHO   317
       1077   COM1  1046, 1047
       1105   COM2  1050
       1110   COM3  1051
       1114   COM4  1052
       1120   COM5  1053
       1130   COM6  1054
       1133   COM7  1055
       1136   COM8  1056
       1143   COM9  1004, 1006, 1057
        201   DATA   167,  171
         30   DEAD  1172
      77112   ENDR   155,  222, 1042, 1043
        655   EOF1   445
        662   EOF2   474
       1042   EQRQ   120
        332   ERR1   324
        347   ERR2   341
       1011   ERRS   761,  763,  765,  767,  771,  773,  775,  777, 1001, 1010
        645   F2R3   642
       1150   FCOM   723,  725,  727
        652   IN21   540,  641
        155   LOP1   220,  247
        222   LOP2   244
        230   LOP3   243
        163   LOP4   177,  216
          4   OPEN   123,  347,  357,  413,  561,  576
       1067   SAVQ   207,  214
        301   XARG   312,  634
        311   XSTO   304,  307
          7  BCDEC   210
       1044  BREAK   234,  236,  252,  270,  272
      73576  BUFF1   372,  621,  626, 1060
      72716  BUFF2   376,  615,  632, 1060
      72036  BUFF3   426, 1060
          6  CLOSE   144,  547,  571,  670,  675,  702
        427  CYCLE   622,  633
      74456  DUMMY  1043
1            SORT FAP                                                                            PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        451  EOF1R   661
        500  EOF2R   647,  667
       1226  EOFCT   141,  446,  475,  526,  656,  663
        650  F2R23   644
       1036  FILE1   322,  327,  330,  333,  352,  371,  471,  543,  545,  573,  601,  606,  620,  631,  677,  711
       1037  FILE2   334,  337,  344,  345,  362,  375,  522,  544,  546,  551,  556,  564,  607,  614,  625,  704,  746
                    1003
       1043  FIRST   154,  172,  174,  201
       1070  FLAGS   466,  510,  646,  653,  666
        762  INSUF   206,  250
        320  LOOP1   331
        335  LOOP2   346
       1041  MERGE   321,  336,  351,  361,  370,  374,  470,  521,  550,  555,  563,  572,  600,  613,  617,  624,  630
                     676,  703,  710,  745, 1005
        635  MORE1   533
        643  MORE2   536,  637
       1020  NAME1    53
       1021  NAME2    61
       1022  NAME3    67
       1023  NAME4    75
        774  NOARG    44
        240  NOBRK   235
        776  NOQST   110
         22  RDFLX   730
        246  SKIP1   157,  160
        272  SKIP2   224,  225
        251  SKIP3   232
         24  WRFLX   754, 1013, 1167
        312  XSKIP   302,  305,  310
        770 BIGBLK   433
       1060 BLKLEN   400,  411,  432,  434,  463,  515
       1066 BREAK2   233,  260,  263
         12 BUFFER   367,  373,  423,  612,  616,  623,  627
         23 CHFILE   744
         25 CHNCOM   756, 1015
        216 CONTIN   173,  203,  205
       1002 DELERR   742
         20 DELFIL   554,  707,  737
         27 DORMNT  1171, 1223
        104 ENDARG    52,   60,   66,   74,  102
       1024 ENDNAM   301, 1024
        217 ENDWRD   200
       1072 EOF1TS   541,  655
       1073 EOF2TS   430,  537,  640,  643,  662
       1227 ERCODE   111,  132,  143,  150,  325,  342,  356,  366,  406,  422,  450,  477,  530,  553,  560,  570,  575
                     605,  674,  701,  706,  713,  721,  743,  753
       1046 ERRCOM  1011
        744 FERRIN   720
       1003 FILCOM   734,  736
       1017 FILNAM    45,  105,  125,  134,  145
         14 FLSRTN   460
         13 FLSRTX   457
          3 FSTATE   104,  320,  335,  401,  714
       1025 FSTBUF   107,  112,  121,  152,  323,  340,  404,  407,  717
          2 GETCOM    40,   46,   54,   62,   70,   76
1            SORT FAP                                                                            PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         11 GETFIL   326,  332,  343
          0 GETMEM    32
       1000 ILLFRM   176
        623 INBUFF   610
        524 INSRT4   517
        760 INSUF1   221
       1221 IOERRR   131,  142,  147,  355,  365,  421,  447,  476,  527,  552,  557,  567,  574,  604,  673,  700,  705
                     712,  752
          1 ..BOOL  1036, 1043, 1060, 1065
       1204 ...OCT  1162, 1165
       1173 ..MESS  1163, 1166, 1170
       7335 ..TOPC  1036, 1043, 1060, 1065, 1220
      20700 LENGTH    31, 1061, 1065
        226 LOP3IN      
       1220 LWFSTG    33, 1164
       1161 MEMERR    34,   35
         16 MERGEN   507
         15 MERGEX   506
       1065 MFIRST   257,  265,  266
       1071 MORTST   516,  531
      51136 MRGBUF   444,  461,  473,  512, 1065
       1063 MRGLEN   436,  444,  461,  473,  512,  660,  664
       1035 MSKDAT   277,  464,  514
        766 NOFILE   405
        772 NOMULT   412
       1064 OUTLEN   437,  513
       7336 OUTPUT   513,  524, 1065
         26 PRNTER  1002, 1222
          5 RDWAIT   133,  440,  467
          1 SETMEM    37
        243 SKIPIN   215,  261,  264,  267,  271,  274
      30236 SRTBUF   462,  511, 1065
       1062 SRTLEN   435,  511,  657
       1024 SRTQST   106,  126,  135,  146
        764 TOLONG   114,  237,  262,  273
       1061 TOTLEN   431
         10 WHOAMI   316
         21 WRFLXA   726
         17 WRWAIT   520
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




FLSRTN   BCD 08/08/68 2229.9    2198         00000    
1            FLSRTN  FAP                                                                         PAGE 1     
                  
                              *     
                              *      CALLING SEQUENCE 
                              *     
                              *      TSX     $FLSRTN,4
                              *      PTH     TABLE,,LENTBL  
                              *      PTH     NEWTBL   
                              *      PTH     BLKLEN   
                              *      PTH     MASK,,MSKLEN   
                              *     
                              *     
                       00005         ENTRY   FLSRTN   
                       00003         ENTRY   FLSRTX   
                  
        TRANSFER VECTOR 
      00000  215127626060     ARGS  
                  
            LINKAGE DIRECTOR  
      00001  000000000000     
      00002  264362516345     
                  
      00003 -0625 00 0 00231  FLSRTX STL     SXTEST   
      00004  0020 00 0 00006         TRA     *+2
      00005  0600 00 0 00231  FLSRTN STZ     SXTEST   
      00006  0634 00 1 00201         SXA     XR1,1         BECOME TRANSPARENT TO INDEX REGISTERS
      00007  0634 00 2 00202         SXA     XR2,2    
      00010  0634 00 4 00203         SXA     XR4,4    
      00011  0634 00 6 00204         SXA     XR6,6    
      00012  0634 00 7 00205         SXA     XR7,7    
      00013  0636 00 4 00015         SCA     *+2,4    
      00014  0074 00 4 00000         TSX     $ARGS,4  
      00015  0 00004 0 00000         PZE     ,,4
      00016  0 00000 0 00207         PZE     ARGLOC   
      00017  0500 00 0 00207         CLA     ARGLOC        LENGTH AND ADDRESS OF TABLE TO BE SORTED   
      00020  0621 00 0 00226         STA     TABLE             ADDRESS  
      00021 -0734 00 1 00000         PDX     ,1                LENGTH   
      00022  0634 00 1 00227         SXA     TBLLEN,1 
      00023  0500 00 0 00210         CLA     ARGLOC+1 
      00024  0621 00 0 00222         STA     NEWTBL   
      00025  0500 00 0 00211         CLA     ARGLOC+2      ADDRESS OF MASK AND LENGTH OF BLOCKS 
      00026  0621 00 0 00213         STA     BLKLEN   
      00027  0500 00 0 00212         CLA     ARGLOC+3 
      00030  0771 00 0 00022         ARS     18 
      00031  0621 00 0 00221         STA     MSKLEN   
      00032  0361 00 0 00212         ACL     ARGLOC+3 
      00033  0621 00 0 00220         STA     MASK     
      00034  0560 00 0 00227  SETUP  LDQ     TBLLEN        SET UP POINTER TABLE     
      00035 -0754 00 0 00000         ZAC  
      00036  0221 00 0 00213         DVP     BLKLEN   
      00037 -0600 00 0 00217         STQ     PTRLEN   
      00040 -0130 00 0 00000         XCL  
      00041 -0760 00 0 00003         SSM  
      00042  0400 00 0 00227         ADD     TBLLEN   
      00043  0400 00 0 00222         ADD     NEWTBL   
      00044  0621 00 0 00216         STA     PNTRTB        ADDRESS OF POINTER TABLE 
      00045  0534 00 1 00217         LXA     PTRLEN,1      LENGTH OF POINTER TABLE  
      00046 -0634 00 1 00131         SXD     TXH,1    
1            FLSRTN  FAP                                                                         PAGE 2     
                  
      00047  0754 00 1 00000         PXA     ,1 
      00050  0400 00 0 00216         ADD     PNTRTB   
      00051  0621 00 0 00064         STA     STO
      00052  0621 00 0 00174         STA     CAL
      00053  0621 00 0 00110         STA     P  
      00054  0621 00 0 00113         STA     P1 
      00055  0621 00 0 00120         STA     P2 
      00056  0621 00 0 00121         STA     P3 
      00057  0621 00 0 00122         STA     P4 
      00060  0621 00 0 00123         STA     P5 
      00061  0500 00 0 00233         CLA     =O000000700000 
      00062  0400 00 0 00213         ADD     BLKLEN   
      00063  0400 00 0 00226         ADD     TABLE    
      00064  0601 00 1 00000  STO    STO     **,1     
      00065  0400 00 0 00213         ADD     BLKLEN   
      00066  2 00001 1 00064         TIX     *-2,1,1  
      00067 -0500 00 0 00217  XQS1   CAL     PTRLEN        SET UP SHELL FOR DIVISION
      00070  0400 00 0 00232         ADD     =1 
      00071  0601 00 0 00223         STO     SHELL    
      00072  0500 00 0 00223  LOOP   CLA     SHELL         DIVIDE SHELL BY TWO ROUNDING UP
      00073  0402 00 0 00232         SUB     =1 
      00074  0100 00 0 00146         TZE     WRITE         TRANSFER OUT IF LAST SHELL WAS ' 1 ' 
      00075  0771 00 0 00001         ARS     1  
      00076  0400 00 0 00232         ADD     =1 
      00077  0601 00 0 00223         STO     SHELL    
      00100  0500 00 0 00217         CLA     PTRLEN        SET UP 'I' SO START AT TOP OF TABLE  
      00101  0601 00 0 00215         STO     I  
      00102  0734 00 1 00000  LOOP1  PAX     ,1            EXAMINE ENTRIES IN TABLE SHELL UNITS APART 
      00103  0402 00 0 00223         SUB     SHELL    
      00104  0734 00 2 00000         PAX     ,2 
      00105 -3 00000 2 00072         TXL     LOOP,2,0 
      00106  0534 00 7 00213  NXQSD  LXA     BLKLEN,7 
      00107  0534 00 6 00221         LXA     MSKLEN,6 
      00110 -0500 60 1 00000  P      CAL*    **,1     
      00111 -0320 60 0 00220         ANA*    MASK     
      00112  0602 00 0 00230         SLW     TEMP     
      00113 -0500 60 2 00000  P1     CAL*    **,2     
      00114 -0320 60 0 00220         ANA*    MASK     
      00115 -0340 00 0 00230         LAS     TEMP          COMPARE 'MASKED' ENTRIES 
      00116  0020 00 0 00137         TRA     INORDR        ..IN ORDER, CONTINUE ON DOWN TABLE   
      00117  0020 00 0 00133         TRA     X  
      00120 -0500 00 1 00000  P2     CAL     **,1          ....OUT OF ORDER, EXCHANGE     
      00121  0560 00 2 00000  P3     LDQ     **,2     
      00122 -0600 00 1 00000  P4     STQ     **,1     
      00123  0602 00 2 00000  P5     SLW     **,2     
      00124  0534 00 4 00223         LXA     SHELL,4       MOVE SMALLER BLOCK AS FAR UP THE TABLE AS  
      00125 -0634 00 4 00127         SXD     *+2,4           POSSIBLE IN JUMPS OF 'SHELL' 
      00126 -0634 00 4 00130         SXD     *+2,4    
      00127  1 00000 1 00130         TXI     *+1,1,** 
      00130  1 00000 2 00131         TXI     *+1,2,** 
      00131  3 00000 1 00137  TXH    TXH     INORDR,1,**   TEST FOR OVER TOP OF THE TABLE 
      00132  0020 00 0 00106         TRA     NXQSD             GO COMPARE     
      00133 -2 00001 6 00137  X      TNX     INORDR,6,1     
      00134  2 00001 7 00110         TIX     P,7,1    
      00135  0534 00 7 00213         LXA     BLKLEN,7 
      00136  0020 00 0 00110         TRA     P  
1            FLSRTN  FAP                                                                         PAGE 3     
                  
      00137  0500 00 0 00215  INORDR CLA     I             REDUCE 'I' BY 1.0 SO AS TO EXAMINE   
      00140  0402 00 0 00232         SUB     =1               THE NEXT PAIR OF ENTRIES IN THE TABLE   
      00141  0601 00 0 00215         STO     I  
      00142  0340 00 0 00223         CAS     SHELL         TEST FOR HAVING REACHED BOTTOM OF TABLE    
      00143  0020 00 0 00102         TRA     LOOP1           NOPE, GO EXAMINE THEST ENTRIES     
      00144  0020 00 0 00072         TRA     LOOP            YES,GO REDUCE SHELL AND START OVER 
      00145  0020 00 0 00072         TRA     LOOP     
      00146 -0520 00 0 00231  WRITE  NZT     SXTEST   
      00147  0020 00 0 00171         TRA     WRITER   
      00150 -0500 00 0 00217         CAL     PTRLEN   
      00151  0771 00 0 00001         ARS     1  
      00152  0734 00 1 00000         PAX     ,1 
      00153  0774 00 2 00001         AXT     1,2
      00154  0361 00 0 00216         ACL     PNTRTB   
      00155  0621 00 0 00163         STA     SW1
      00156  0621 00 0 00166         STA     SW4
      00157 -0500 00 0 00216         CAL     PNTRTB   
      00160  0361 00 0 00217         ACL     PTRLEN   
      00161  0621 00 0 00164         STA     SW2
      00162  0621 00 0 00165         STA     SW3
      00163 -0500 00 1 00000  SW1    CAL     ,1 
      00164  0560 00 2 00000  SW2    LDQ     ,2 
      00165  0602 00 2 00000  SW3    SLW     ,2 
      00166 -0600 00 1 00000  SW4    STQ     ,1 
      00167  1 00001 2 00170         TXI     *+1,2,1  
      00170  2 00001 1 00163         TIX     SW1,1,1  
      00171  0534 00 1 00217  WRITER LXA     PTRLEN,1 
      00172  0774 00 2 00000         AXT     0,2
      00173  0534 00 7 00213  LOOP2  LXA     BLKLEN,7 
      00174 -0500 60 1 00000  CAL    CAL*    **,1     
      00175  0602 60 0 00222         SLW*    NEWTBL   
      00176  1 77777 2 00177         TXI     *+1,2,-1 
      00177  2 00001 7 00174         TIX     CAL,7,1  
      00200  2 00001 1 00173         TIX     LOOP2,1,1
      00201  0774 00 1 00000  XR1    AXT     **,1          RESTORE INDEX REGISTERS  
      00202  0774 00 2 00000  XR2    AXT     **,2     
      00203  0774 00 4 00000  XR4    AXT     **,4     
      00204  0774 00 6 00000  XR6    AXT     **,6     
      00205  0774 00 7 00000  XR7    AXT     **,7     
      00206  0020 00 4 00005         TRA     5,4           RETURN TO CALLER   
      00207                   ARGLOC BSS     4  
      00213  0 00000 0 00000  BLKLEN PZE  
      00214  0 00000 0 00000  TEM    PZE  
      00215  0 00000 0 00000  I      PZE  
      00216  0 00000 0 00000  PNTRTB PZE  
      00217  0 00000 0 00000  PTRLEN PZE  
      00220  0 00000 6 00000  MASK   PZE     **,6     
      00221  0 00000 0 00000  MSKLEN PZE  
      00222  0 00000 2 00000  NEWTBL PZE     **,2     
      00223  0 00000 0 00000  SHELL  PZE  
      00224  0 00000 0 00000  SRTLEN PZE  
      00225  0 00000 0 00000  RELLOC PZE  
      00226  0 00000 0 00000  TABLE  PZE  
      00227  0 00000 0 00000  TBLLEN PZE  
      00230  0 00000 0 00000  TEMP   PZE  
      00231  0 00000 0 00000  SXTEST PZE  
1            FLSRTN  FAP                                                                         PAGE 4     
                  
                                     END  
                  
        LITERALS  
      00232  000000000001     
      00233  000000700000     
1            FLSRTN  FAP                                                                         PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        234 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        215      I   101,  137,  141
        110      P    53,  134,  136
        133      X   117
        113     P1    54
        120     P2    55
        121     P3    56
        122     P4    57
        123     P5    60
        174    CAL    52,  177
         64    STO    51
        163    SW1   155,  170
        164    SW2   161
        165    SW3   162
        166    SW4   156
        214    TEM      
        131    TXH    46
        201    XR1     6
        202    XR2     7
        203    XR4    10
        204    XR6    11
        205    XR7    12
          0   ARGS    14
         72   LOOP   105,  144,  145
        220   MASK    33,  111,  114
        230   TEMP   112,  115
         67   XQS1      
        102  LOOP1   143
        173  LOOP2   200
        106  NXQSD   132
         34  SETUP      
        223  SHELL    71,   72,   77,  103,  124,  142
        226  TABLE    20,   63
        146  WRITE    74
        207 ARGLOC    16,   17,   23,   25,   27,   32
        213 BLKLEN    26,   36,   62,   65,  106,  135,  173
          5 FLSRTN     0
          3 FLSRTX     0
        137 INORDR   116,  131,  133
        221 MSKLEN    31,  107
        222 NEWTBL    24,   43,  175
        216 PNTRTB    44,   50,  154,  157
        217 PTRLEN    37,   45,   67,  100,  150,  160,  171
        225 RELLOC      
        224 SRTLEN      
        231 SXTEST     3,    5,  146
        227 TBLLEN    22,   34,   42
        171 WRITER   147
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




MERGEN   BCD 08/08/68 2229.9    2550         00000    
1            MERGEN  FAP                                                                         PAGE 1     
                  
                              *      BY MICHAEL R COMER        MAY 12,1966    
                              *     
                              *      TSX     $MERGEN,4
                              *      PZE     FLAGS    
                              *      PZE     B1,,L1   
                              *      PZE     B2,,L2   
                              *      PZE     R,,L3    
                              *      MASKS,,LEN 
                              *      PZE     BLKLEN   
                       00005         ENTRY   MERGEN   
                       00003         ENTRY   MERGEX   
                  
        TRANSFER VECTOR 
      00000  215127626060     ARGS  
                  
            LINKAGE DIRECTOR  
      00001  000000000000     
      00002  442551272545     
                  
      00003 -0625 00 0 00262  MERGEX STL     MXTEST   
      00004  0020 00 0 00006         TRA     *+2
      00005  0600 00 0 00262  MERGEN STZ     MXTEST   
      00006  0634 00 1 00243         SXA     XR1,1            SAVE XR'S 
      00007  0634 00 2 00244         SXA     XR2,2            ..  
      00010  0634 00 3 00245         SXA     XR3,3            ..  
      00011  0634 00 4 00246         SXA     XR4,4    
      00012  0634 00 5 00247         SXA     XR5,5            ... 
      00013  0634 00 6 00250         SXA     XR6,6    
      00014  0634 00 7 00251         SXA     XR7,7            ..  
      00015  0774 00 1 00152         AXT     I5,1     
      00016  0774 00 2 00125         AXT     TRA2+1,2 
      00017  0634 00 1 00122         SXA     TRA1,1   
      00020  0634 00 2 00124         SXA     TRA2,2   
      00021 -0520 00 0 00262         NZT     MXTEST   
      00022  0020 00 0 00025         TRA     *+3
      00023  0634 00 2 00122         SXA     TRA1,2   
      00024  0634 00 1 00124         SXA     TRA2,1   
      00025  0636 00 4 00027         SCA     *+2,4    
      00026  0074 00 4 00000         TSX     $ARGS,4  
      00027  0 00006 0 00000         PZE     ,,6
      00030  0 00000 0 00253         PZE     FLAGS    
      00031  0534 00 7 00253         LXA     FLAGS,7  
      00032  0534 00 1 00153         LXA     I1,1     
      00033  0534 00 2 00164         LXA     I2,2     
      00034  0534 00 3 00263         LXA     I3,3     
      00035  0754 00 7 00000         PXA     ,7 
      00036 -0320 00 0 00264         ANA     =1 
      00037 -0100 00 0 00050         TNZ     TWO
      00040  0500 00 0 00254         CLA     FLAGS+1  
      00041  0771 00 0 00022         ARS     18 
      00042  0734 00 1 00000         PAX     ,1 
      00043  0621 00 0 00153         STA     I1 
      00044  0361 00 0 00254         ACL     FLAGS+1  
      00045  0621 00 0 00154         STA     GR 
      00046  0621 00 0 00202         STA     WRT1+2   
      00047  0621 00 0 00114         STA     TEST     
1            MERGEN  FAP                                                                         PAGE 2     
                  
      00050  0754 00 7 00000  TWO    PXA     ,7 
      00051 -0320 00 0 00265         ANA     =2 
      00052 -0100 00 0 00063         TNZ     THREE    
      00053  0500 00 0 00255         CLA     FLAGS+2  
      00054  0771 00 0 00022         ARS     18 
      00055  0734 00 2 00000         PAX     ,2 
      00056  0621 00 0 00164         STA     I2 
      00057  0361 00 0 00255         ACL     FLAGS+2  
      00060  0621 00 0 00127         STA     LE 
      00061  0621 00 0 00212         STA     WRT2+2   
      00062  0621 00 0 00117         STA     TEST+3   
      00063  0754 00 7 00000  THREE  PXA     ,7 
      00064 -0320 00 0 00266         ANA     =4 
      00065 -0100 00 0 00076         TNZ     MASKS    
      00066  0500 00 0 00256         CLA     FLAGS+3  
      00067  0771 00 0 00022         ARS     18 
      00070  0734 00 3 00000         PAX     ,3 
      00071  0361 00 0 00256         ACL     FLAGS+3  
      00072  0621 00 0 00130         STA     LE+1     
      00073  0621 00 0 00155         STA     GR+1     
      00074  0621 00 0 00203         STA     WRT1+3   
      00075  0621 00 0 00213         STA     WRT2+3   
      00076  0500 00 0 00257  MASKS  CLA     FLAGS+4  
      00077  0771 00 0 00022         ARS     18 
      00100  0734 00 7 00000         PAX     ,7 
      00101  0621 00 0 00162         STA     I7 
      00102  0361 00 0 00257         ACL     FLAGS+4  
      00103  0621 00 0 00115         STA     TEST+1   
      00104  0621 00 0 00120         STA     TEST+4   
      00105 -0500 00 0 00260         CAL     FLAGS+5  
      00106  0734 00 5 00000         PAX     ,5 
      00107  0734 00 6 00000         PAX     ,6 
      00110  0621 00 0 00152         STA     I5 
      00111 -3 00000 1 00170         TXL     END1,1,0         CHECK FOR FINISHED LISTS    
      00112 -3 00000 2 00174         TXL     END2,2,0         ..  
      00113 -3 00000 3 00220         TXL     RET,3,0          ..  
      00114 -0500 00 1 00000  TEST   CAL     -,1              GET INPUT1+BEGPOS+L1,1(INITIALLY L1)    
      00115 -0320 00 7 00000         ANA     -,7              MASK WITH MASK+SORTNO,7(INITIALLY SORTNO
      00116  0602 00 0 00261         SLW     TEM              SAVE
      00117 -0500 00 2 00000         CAL     -,2              GET INPUT2+BEGPOS+L2,2(INITIALLY L2)    
      00120 -0320 00 7 00000         ANA     -,7              MASK WITH MASK+SORTNO,7     
      00121 -0340 00 0 00261         LAS     TEM              COMPARE WITH INPUT1   
      00122  0020 00 0 00000  TRA1   TRA     -                INPUT2 GREATER, WRITE OUT INPUT1  
      00123  1 77777 1 00143         TXI     EQ,1,-1          EQUAL, CHECK NEXT WORD
      00124  0020 00 0 00000  TRA2   TRA     -  
      00125  0534 00 5 00152         LXA     I5,5             INPUT2 LESS, WRITE OUT INPUT2, RESET    
      00126  0534 00 2 00164         LXA     I2,2             WRITE OUT INDEX, AND RESET POINTER TO ST
      00127 -0500 00 2 00000  LE     CAL     -,2              GET INPUT2+L2,2 
      00130  0602 00 3 00000         SLW     -,3              PLACE IN OUTPUT+L3,3(INITIALLY L3)
      00131  1 77777 3 00132         TXI     *+1,3,-1         NEXT WORD 
      00132  1 77777 2 00133         TXI     *+1,2,-1         '   
      00133  2 00001 5 00127         TIX     LE,5,1           TIX ON BLOCK LENGTH   
      00134  0634 00 2 00164         SXA     I2,2             END OF BLOCK, SET PERM POINTER2 TO NEXT 
      00135  0534 00 1 00153         LXA     I1,1             BLOCK.    RESET TEMP POINTER1     
      00136  0534 00 6 00152         LXA     I5,6     
      00137  0534 00 7 00162         LXA     I7,7             RESET MASK POINTER    
1            MERGEN  FAP                                                                         PAGE 3     
                  
      00140 -3 00000 2 00174         TXL     END2,2,0         CHECK FOR END OF INPUT2     
      00141  3 00000 3 00114         TXH     TEST,3,0         CHECK FOR END OF OUTPUT     
      00142  0020 00 0 00220         TRA     RET              END 
      00143  1 77777 2 00144  EQ     TXI     *+1,2,-1         INCREMENT POINTERS    
      00144 -2 00001 7 00152         TNX     I5,7,1           TIX ON SORTNO   
      00145  2 00001 6 00114         TIX     TEST,6,1 
      00146  0534 00 1 00153         LXA     I1,1     
      00147  0534 00 2 00164         LXA     I2,2     
      00150  0534 00 6 00152         LXA     I5,6     
      00151  0020 00 0 00114         TRA     TEST     
      00152  0774 00 5 00000  I5     AXT     -,5              INPUT2 GREATER, OR INPUTS EQUAL, WRITE O
      00153  0774 00 1 00000  I1     AXT     -,1              OUT INPUT1, RESET WRITE OUT INDEX, AND  
      00154 -0500 00 1 00000  GR     CAL     -,1              RESET POINTER TO START OF BLOCK, GET    
      00155  0602 00 3 00000         SLW     -,3              INPUT1+L1,1. PLACE IN IN OUTPUT+L3,3    
      00156  1 77777 3 00157         TXI     *+1,3,-1         NEXT WORD 
      00157  1 77777 1 00160         TXI     *+1,1,-1         '   
      00160  2 00001 5 00154         TIX     GR,5,1           TIX ON BLOCK LENGTH   
      00161  0634 00 1 00153         SXA     I1,1             END OF BLOCK, SET PERM POINTER1 TO NEXT 
      00162  0774 00 7 00000  I7     AXT     -,7              BLOCK.  RESET MASK POINTER  
      00163  0534 00 6 00152         LXA     I5,6     
      00164  0774 00 2 00000  I2     AXT     -,2              RESET TEMP POINTER2   
      00165 -3 00000 1 00170         TXL     END1,1,0         CHECK FOR END OF INPUT1     
      00166  3 00000 3 00114         TXH     TEST,3,0         CHECK FOR END OF OUTPUT     
      00167  0020 00 0 00220         TRA     RET
      00170  0500 00 0 00253  END1   CLA     FLAGS    
      00171 -0320 00 0 00267         ANA     =O10     
      00172  0100 00 0 00210         TZE     WRT2     
      00173  0020 00 0 00220         TRA     RET              RETURN    
      00174  0500 00 0 00253  END2   CLA     FLAGS    
      00175 -0320 00 0 00270         ANA     =O20     
      00176  0100 00 0 00200         TZE     WRT1     
      00177  0020 00 0 00220         TRA     RET              RETURN    
      00200 -3 00000 3 00220  WRT1   TXL     RET,3,0          CHECK FOR END OF OUTPUT     
      00201 -3 00000 1 00220         TXL     RET,1,0  
      00202 -0500 00 1 00000         CAL     -,1              GET INPUT1+L1,1 
      00203  0602 00 3 00000         SLW     -,3              PLACE IN OUTPUT+L3,3  
      00204  2 00001 3 00206         TIX     *+2,3,1          INC. AND CHECK FOR END OF OUTPUT  
      00205  1 77777 3 00207         TXI     *+2,3,-1 
      00206  2 00001 1 00201         TIX     WRT1+1,1,1       TIX ON L1 
      00207  1 77777 1 00220         TXI     RET,1,-1 
      00210 -3 00000 3 00220  WRT2   TXL     RET,3,0          CHECK FOR END OF OUTPUT     
      00211 -3 00000 2 00220         TXL     RET,2,0  
      00212 -0500 00 2 00000         CAL     ,2               GET INPUT2+L2,2 
      00213  0602 00 3 00000         SLW     -,3              PLACE IN OUTPUT+L3,3  
      00214  2 00001 3 00216         TIX     *+2,3,1  
      00215  1 77777 3 00217         TXI     *+2,3,-1 
      00216  2 00001 2 00211         TIX     WRT2+1,2,1       TIX ON L2 
      00217  1 77777 2 00220         TXI     *+1,2,-1 
      00220 -0500 00 0 00253  RET    CAL     FLAGS    
      00221 -0320 00 0 00266         ANA     =O4
      00222 -0100 00 0 00231         TNZ     REOUT    
      00223  0634 00 3 00263         SXA     I3,3     
      00224 -0500 00 0 00256         CAL     FLAGS+3  
      00225  0771 00 0 00022         ARS     18 
      00226  0402 00 0 00263         SUB     I3 
      00227  0767 00 0 00022         ALS     18 
1            MERGEN  FAP                                                                         PAGE 4     
                  
      00230  0020 00 0 00235         TRA     CDS
      00231  0500 00 0 00263  REOUT  CLA     I3 
      00232  0634 00 3 00263         SXA     I3,3     
      00233  0402 00 0 00263         SUB     I3 
      00234  0767 00 0 00022         ALS     18 
      00235  3 00000 1 00237  CDS    TXH     *+2,1,0  
      00236 -0501 00 0 00264         ORA     =O1
      00237  3 00000 2 00241         TXH     *+2,2,0  
      00240 -0501 00 0 00265         ORA     =O2
      00241  3 00000 3 00243         TXH     *+2,3,0  
      00242 -0501 00 0 00266         ORA     =O4
      00243  0774 00 1 00000  XR1    AXT     ,1 
      00244  0774 00 2 00000  XR2    AXT     ,2               RESTORE XR'S    
      00245  0774 00 3 00000  XR3    AXT     ,3               ..  
      00246  0774 00 4 00000  XR4    AXT     ,4 
      00247  0774 00 5 00000  XR5    AXT     ,5               ..  
      00250  0774 00 6 00000  XR6    AXT     ,6 
      00251  0774 00 7 00000  XR7    AXT     ,7               ..  
      00252  0020 00 4 00007         TRA     7,4              RETURN TO CALLER
      00253                   FLAGS  BSS     6  
      00261  0 00000 0 00000  TEM    PZE  
      00262  0 00000 0 00000  MXTEST PZE  
      00263  0 00000 0 00000  I3     PZE  
                                     END  
                  
        LITERALS  
      00264  000000000001     
      00265  000000000002     
      00266  000000000004     
      00267  000000000010     
      00270  000000000020     
1            MERGEN  FAP                                                                         PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        271 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        143     EQ   123
        154     GR    45,   73,  160
        153     I1    32,   43,  135,  146,  161
        164     I2    33,   56,  126,  134,  147
        263     I3    34,  223,  226,  231,  232,  233
        152     I5    15,  110,  125,  136,  144,  150,  163
        162     I7   101,  137
        127     LE    60,   72,  133
        235    CDS   230
        220    RET   113,  142,  167,  173,  177,  200,  201,  207,  210,  211
        261    TEM   116,  121
         50    TWO    37
        243    XR1     6
        244    XR2     7
        245    XR3    10
        246    XR4    11
        247    XR5    12
        250    XR6    13
        251    XR7    14
          0   ARGS    26
        170   END1   111,  165
        174   END2   112,  140
        114   TEST    47,   62,  103,  104,  141,  145,  151,  166
        122   TRA1    17,   23
        124   TRA2    16,   20,   24
        200   WRT1    46,   74,  176,  206
        210   WRT2    61,   75,  172,  216
        253  FLAGS    30,   31,   40,   44,   53,   57,   66,   71,   76,  102,  105,  170,  174,  220,  224
         76  MASKS    65
        231  REOUT   222
         63  THREE    52
          5 MERGEN     0
          3 MERGEX     0
        262 MXTEST     3,    5,   21
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




  ARGS   BCD 08/08/68 2229.9     661         00000    
1                                                                                                PAGE 1     
                  
                       00002         ENTRY   ARGS     
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  215127626060     
                  
      00002  0634 00 4 00054  ARGS   SXA     XR4,4    
      00003  0634 00 1 00053         SXA     XR1,1    
      00004  0500 00 4 00001         CLA     1,4
      00005  0771 00 0 00022         ARS     18 
      00006  0601 00 0 00056         STO     LEN
      00007  0361 00 4 00001         ACL     1,4
      00010  0361 00 0 00057         ACL     =1 
      00011  0621 00 0 00016         STA     GETLOC   
      00012 -0500 00 4 00002         CAL     2,4
      00013  0361 00 0 00056         ACL     LEN
      00014  0621 00 0 00051         STA     ARGLOC   
      00015  0534 00 4 00056         LXA     LEN,4    
      00016 -0500 00 4 00000  GETLOC CAL     ,4 
      00017 -0340 00 0 00061         LAS     =O277777777777 
      00020  0020 00 0 00035         TRA     PTH
      00021  0020 00 0 00022         TRA     *+1
      00022 -0340 00 0 00060         LAS     =O177777777777 
      00023  0020 00 0 00026         TRA     *+3
      00024  0020 00 0 00051         TRA     ARGLOC   
      00025  0020 00 0 00051         TRA     ARGLOC   
      00026  0602 00 0 00056         SLW     LEN
      00027 -0734 00 1 00000         PDX     ,1 
      00030  0634 00 1 00031         SXA     *+1,1    
      00031  0534 00 1 00000         LXA     ,1 
      00032 -0634 00 1 00056         SXD     LEN,1    
      00033 -0500 00 0 00056         CAL     LEN
      00034  0020 00 0 00051         TRA     ARGLOC   
      00035 -0340 00 0 00062  PTH    LAS     =O400000000000 
      00036  0020 00 0 00051         TRA     ARGLOC   
      00037  0020 00 0 00051         TRA     ARGLOC   
      00040 -0734 00 1 00000         PDX     ,1 
      00041 -0130 00 0 00000         XCL  
      00042  0754 00 1 00000         PXA     ,1 
      00043  0100 00 0 00046         TZE     GETARG   
      00044 -0130 00 0 00000         XCL  
      00045  0020 00 0 00051         TRA     ARGLOC   
      00046 -0130 00 0 00000  GETARG XCL  
      00047  0621 00 0 00050         STA     *+1
 A    00050  0500 00 0 00000         CLA  
      00051  0602 00 4 00000  ARGLOC SLW     ,4 
      00052  2 00001 4 00016         TIX     GETLOC,4,1     
      00053  0774 00 1 00000  XR1    AXT     ,1 
      00054  0774 00 4 00000  XR4    AXT     ,4 
      00055  0020 00 4 00003         TRA     3,4
      00056  0 00000 0 00000  LEN    PZE  
                                     END  
                  
        LITERALS  
      00057  000000000001     
      00060  177777777777     
1                                                                                                PAGE 2     
                  
      00061  277777777777     
      00062  400000000000     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         63 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         56    LEN     6,   13,   15,   26,   32,   33
         35    PTH    20
         53    XR1     3
         54    XR4     2
          2   ARGS     0
         51 ARGLOC    14,   24,   25,   34,   36,   37,   45
         46 GETARG    43
         16 GETLOC    11,   52
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




GETFIL   BCD 08/08/68 2229.9     509         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  GETFIL   MAD            08/08/68    2210.2
-                 
                  EXTERNAL FUNCTION (ARG)                                                         *001 LM00001    
                  ENTRY TO GETFIL.                                                                *002 LM00002    
                  NORMAL MODE IS INTEGER                                                          *003 LM00003    
                  FUNCTION RETURN DERBC.(BCDEC.((ARG.A.777777K)+1)).V.$...000$                    *004 LM00004    
                  END OF FUNCTION                                                                 *005 LM00005    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00052 TRANSFER VECTOR LENGTH  00003 PROGRAM BEGINS    00010
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      GETFIL 00011   0                                                                                                  
0FUNCTION DICTIONARY    
      BCDEC  00000   1        DERBC  00001   1        EXIT   00002   1                                                  
0ABSOLUTE CONSTANTS     
 00007 +333333000000     00005 +000000777777     00004 +000000000001     00006 +233000000000                            
0PROGRAM    
                 EXTERNAL FUNCTION (ARG)                                            001  LM00001
                 E'O GETFIL.                                                        002  LM00002
 00010 TRA +0 02000 0 00013    00011 SXA +0 63400 2 00035    00012 TSX +0 07400 2 00035                                 
                 N'R                                                                003  LM00003
                 F'N DERBC.(BCDEC.((ARG.A.777777K)+1)).V.$...000$                   004  LM00004
 00013 CAL -0 50000 0 00024    00014 ANA -0 32000 0 00005    00015 SLW +0 60200 0 00047    00016 CLA +0 50000 0 00047   
 00017 ADD +0 40000 0 00004    00020 STO +0 60100 0 00047    00021 TSX +0 07400 4 00000    00022 TXH +3 00000 0 00047   
 00023 STO +0 60100 0 00047    00024 TSX +0 07400 4 00001    00025 TXH +3 00000 0 00047    00026 STO +0 60100 0 00047   
 00027 CAL -0 50000 0 00047    00030 ORA -0 50100 0 00007    00031 SLW +0 60200 0 00047    00032 CLA +0 50000 0 00047   
 00033 TRA +0 02000 0 00043                                                                                             
                 E'N                                                                005  LM00005
 00034 TSX +0 07400 4 00002    00035 TXH +3 00000 0 00000    00036 SXD -0 63400 1 00035    00037 SXA +0 63400 4 00043   
 00040 CLA +0 50000 4 00001    00041 STA +0 62100 0 00013    00042 TRA +0 02000 2 00001    00043 AXT +0 77400 4 00000   
 00044 LXA +0 53400 2 00035    00045 LXD -0 53400 1 00035    00046 TRA +0 02000 4 00001                                 




   SPY   BCD 09/20/68 0221.1    9825         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE    SPY2   MAD            02/15/68    1817.6
-                 
                 ...NEW SPY PROGRAM                                                                    LM00001    
                                                                                                       LM00002    
                  DIMENSION COMDLN(19)                                                            *001 LM00003    
                  DIMENSION IDENT(1)                                                              *002 LM00004    
                                                                                                       LM00005    
                   MAKE SURE PROPER USER                                                               LM00006    
                                                                                                       LM00007    
                  GETCLS. (COMDLN(19))                                                            *003 LM00008    
                  WHOAMI.(IDENT(1)...2)                                                           *004 LM00009    
                  WHENEVER ((IDENT(1).NE.$ M1416$).AND.(IDENT(1).NE.$ M4060$))                    *005 LM00010    
                     PRMESS.(COMDLN(19),$ NOT FOUND.$)                                            *006 LM00011    
                     PRMESS.($READY.$,CR)                                                         *007 LM00012    
                        VECTOR VALUES CR=555757575757K                                            *008 LM00013    
                     IZERO = IZERO                                                                *009 LM00014    
                        VECTOR VALUES IZERO = 0                                                   *010 LM00015    
                     SLEEP.                                                                       *011 LM00016    
                     PRMESS.($ ILLEGAL SEQUENCE OF COMMANDS.$)                                    *012 LM00017    
                     CHNCOM.(0)                                                                   *013 LM00018    
                  END OF CONDITIONAL                                                              *014 LM00019    
                                                                                                       LM00020    
                                                                                                       LM00021    
                  NPROB=SPLFN.(COMARG.(1))                                                        *015 LM00022    
                  NPROG=COMARG.(2)                                                                *016 LM00023    
                                                                                                       LM00024    
      LOOP        A=ISIN.(NPROB,NPROG)                                                            *017 LM00025    
                  WHENEVER A.E.0                                                                  *018 LM00026    
                       WHENEVER FIRST, PRMESS.(NPROB,NPROG,$ NOT I$,$N YET$)                      *019 LM00027    
                       FIRST = 0B                                                                 *020 LM00028    
                       A = 10                                                                     *021 LM00029    
                       SLEEP.(10)                                                                 *022 LM00030    
                       TRANSFER TO LOOP                                                           *023 LM00031    
                  END OF CONDITIONAL                                                              *024 LM00032    
                                                                                                       LM00033    
                 ...WHEE.                                                                              LM00034    
                                                                                                       LM00035    
                  UNI=COMLOC.($UNITID$)                                                           *025 LM00036    
                  PRMESS.                                                                         *026 LM00037    
                  GETTM.(DATE,TIME)                                                               *027 LM00038    
                  PRMESS.(NPROB,NPROG,$ LINE$,DERBC.(A),BB,DATE,BB,TIME,BB,                       *028 LM00039    
                1  GLOC.(UNI+A))                                                                  *028 LM00040    
                                                                                                       LM00041    
                  CHNCOM.(1)                                                                      *029 LM00042    
                                                                                                       LM00043    
                 ...IF WE START AND SAY SLAVE, HE IS CAUGHT.                                           LM00044    
                                                                                                       LM00045    
                  ADOPT=COMLOC.($ADOPT$)                                                          *030 LM00046    
                  USR=COMLOC.($USER$)                                                             *031 LM00047    
                                                                                                       LM00048    
                  SLOC.(IOOO.V.A,ADOPT+GLOC.(USR))                                                *032 LM00049    
                  SLOC.(SLAVER.V.IOOO.V.GLOC.(ADOPT+A),ADOPT+A)                                   *033 LM00050    
                                                                                                       LM00051    
                 ....CONNECTION MADE                                                                   LM00052    
                                                                                                       LM00053    
                  TEMP = TEMP                                                                     *034 LM00054    
      SLX         SLEEP.(10)                                                                      *035 LM00055    
                  WHENEVER ((GLOC.(ADOPT+GLOC.(USR)).EX.(IOOO.V.A)).A.PTA)                        *036 LM00056    
                1   .V.((GLOC.(ADOPT+A).EX.(SLAVER.V.IOOO))                                       *036 LM00057    
                2   .A.(SLAVER.V.IOOO)) .NE. 0, TRANSFER TO LOOP                                  *036 LM00058    
                  TRANSFER TO SLX                                                                 *037 LM00059    
                                                                                                       LM00060    
                  VECTOR VALUES FIRST=1B                                                          *038 LM00061    
                  VECTOR VALUES TEMP = 10                                                         *039 LM00062    
                  VECTOR VALUES PTA=700 000 777 777K                                              *040 LM00063    
                  VECTOR VALUES BB=605757 575757K                                                 *041 LM00064    
                  VECTOR VALUES IOOO=3K5                                                          *042 LM00065    
                  VECTOR VALUES SLAVER=7K11                                                       *043 LM00066    
                  NORMAL MODE IS INTEGER                                                          *044 LM00067    
                  END OF PROGRAM                                                                  *045 LM00068    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00363 TRANSFER VECTOR LENGTH  00017 PROGRAM BEGINS    00115
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ADOPT  00022   1        CR     00051 A 1        IOOO   00056 A 1        NPROG  00061   1        TEMP   00064 A 1  
      A      00023   1        DATE   00052   1        IZERO  00057 A 1        PTA    00062 A 1        TIME   00065   1  
      BB     00024 A 1        FIRST  00053 A 2        LOOP   00020   4        SLAVER 00063 A 1        UNI    00066   1  
      COMDLN 00050 A 1        IDENT  00055 A 1        NPROB  00060   1        SLX    00021   4        USR    00067   1  
0FUNCTION DICTIONARY    
      CHNCOM 00000   1        COMARG 00001   1        COMLOC 00002   1        DERBC  00003   1        EXIT   00004   1  
      GETCLS 00005   1        GETTM  00006   1        GLOC   00007   1        ISIN   00010   1        .SETUP 00011   1  
      PRMESS 00012   1        SLEEP  00013   1        SLOC   00014   1        SPLFN  00015   1        WHOAMI 00016   1  
0ABSOLUTE CONSTANTS     
 00114 -246225516060     00074 +212446476360     00105 -204331452560     00113 -244531633124     00073 +000000000012    
 00100 -056070256360     00111 -204546636031     00070 +000000000000     00077 -042145246233     00101 -062660234644    
 00112 -242545232560     00075 +214360622550     00104 -203143432527     00103 -112521247033     00102 -066445243360    
 00110 -204546636026     00106 -204401040106     00107 -204404000600     00072 +000000000002     00071 +000000000001    
 00076 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00020 TXL -300167000163       00021 TXL -300311000307                                                                  
0PROGRAM    
                 D'N COMDLN(19)                                                     001  LM00003
                 D'N IDENT(1)                                                       002  LM00004
                 GETCLS. (COMDLN(19))                                               003  LM00008
 00115 TSX +0 07400 4 00011    00116 TSX +0 07400 4 00005    00117 TXH +3 00000 0 00025                                 
                 WHOAMI.(IDENT(1)...2)                                              004  LM00009
 00120 TSX +0 07400 4 00016    00121 TIX +2 00072 0 00054                                                               
                 W'R ((IDENT(1).NE.$ M1416$).AND.(IDENT(1).NE.$ M4060$))            005  LM00010
 00122 CLA +0 50000 0 00054    00123 SUB +0 40200 0 00107    00124 TZE +0 10000 0 00152    00125 CLA +0 50000 0 00054   
 00126 SUB +0 40200 0 00106    00127 TZE +0 10000 0 00152                                                               
                    PRMESS.(COMDLN(19),$ NOT FOUND.$)                               006  LM00011
 00130 TSX +0 07400 4 00012    00131 TXH +3 00000 0 00025    00132 TXH +3 00000 0 00110    00133 TXH +3 00000 0 00102   
                    PRMESS.($READY.$,CR)                                            007  LM00012
 00134 TSX +0 07400 4 00012    00135 TXH +3 00000 0 00103    00136 TXH +3 00000 0 00051                                 
                       V'S CR=555757575757K                                         008  LM00013
 00051     -1 55757 5 75757                                                                                             
                    IZERO = IZERO                                                   009  LM00014
 00137 CLA +0 50000 0 00057    00140 STO +0 60100 0 00057                                                               
                       V'S IZERO = 0                                                010  LM00015
 00057     +0 00000 0 00000                                                                                             
                    SLEEP.                                                          011  LM00016
 00141 TSX +0 07400 4 00013                                                                                             
                    PRMESS.($ ILLEGAL SEQUENCE OF COMMANDS.$)                       012  LM00017
 00142 TSX +0 07400 4 00012    00143 TXH +3 00000 0 00104    00144 TXH +3 00000 0 00075    00145 TXH +3 00000 0 00112   
 00146 TXH +3 00000 0 00101    00147 TXH +3 00000 0 00077                                                               
                    CHNCOM.(0)                                                      013  LM00018
 00150 TSX +0 07400 4 00000    00151 TXH +3 00000 0 00070                                                               
                 E'L                                                                014  LM00019
                 NPROB=SPLFN.(COMARG.(1))                                           015  LM00022
 00152 TSX +0 07400 4 00001    00153 TXH +3 00000 0 00071    00154 STO +0 60100 0 00356    00155 TSX +0 07400 4 00015   
 00156 TXH +3 00000 0 00356    00157 STO +0 60100 0 00060                                                               
                 NPROG=COMARG.(2)                                                   016  LM00023
 00160 TSX +0 07400 4 00001    00161 TXH +3 00000 0 00072    00162 STO +0 60100 0 00061                                 
      LOOP       A=ISIN.(NPROB,NPROG)                                               017  LM00025
 00163 TSX +0 07400 4 00010    00164 TXH +3 00000 0 00060    00165 TXH +3 00000 0 00061    00166 STO +0 60100 0 00023   
                 W'R A.E.0                                                          018  LM00026
 00167 CLA +0 50000 0 00023    00170 SUB +0 40200 0 00070    00171 TNZ -0 10000 0 00210                                 
                      W'R FIRST, PRMESS.(NPROB,NPROG,$ NOT I$,$N YET$)              019  LM00027
 00172 NZT -0 52000 0 00053    00173 TRA +0 02000 0 00201    00174 TSX +0 07400 4 00012    00175 TXH +3 00000 0 00060   
 00176 TXH +3 00000 0 00061    00177 TXH +3 00000 0 00111    00200 TXH +3 00000 0 00100                                 
                      FIRST = 0B                                                    020  LM00028
 00201 CLA +0 50000 0 00070    00202 STO +0 60100 0 00053                                                               
                      A = 10                                                        021  LM00029
 00203 CLA +0 50000 0 00073    00204 STO +0 60100 0 00023                                                               
                      SLEEP.(10)                                                    022  LM00030
 00205 TSX +0 07400 4 00013    00206 TXH +3 00000 0 00073                                                               
                      T'O LOOP                                                      023  LM00031
 00207 TRA +0 02000 0 00020                                                                                             
                 E'L                                                                024  LM00032
                 UNI=COMLOC.($UNITID$)                                              025  LM00036
 00210 TSX +0 07400 4 00002    00211 TXH +3 00000 0 00113    00212 STO +0 60100 0 00066                                 
                 PRMESS.                                                            026  LM00037
 00213 TSX +0 07400 4 00012                                                                                             
                 GETTM.(DATE,TIME)                                                  027  LM00038
 00214 TSX +0 07400 4 00006    00215 TXH +3 00000 0 00052    00216 TXH +3 00000 0 00065                                 
                 PRMESS.(NPROB,NPROG,$ LINE$,DERBC.(A),BB,DATE,BB,TIME,BB,          028  LM00039
                1 GLOC.(UNI+A))                                                     028  LM00040
 00217 CLA +0 50000 0 00066    00220 ADD +0 40000 0 00023    00221 STO +0 60100 0 00356    00222 TSX +0 07400 4 00007   
 00223 TXH +3 00000 0 00356    00224 STO +0 60100 0 00356    00225 TSX +0 07400 4 00003    00226 TXH +3 00000 0 00023   
 00227 STO +0 60100 0 00357    00230 TSX +0 07400 4 00012    00231 TXH +3 00000 0 00060    00232 TXH +3 00000 0 00061   
 00233 TXH +3 00000 0 00105    00234 TXH +3 00000 0 00357    00235 TXH +3 00000 0 00024    00236 TXH +3 00000 0 00052   
 00237 TXH +3 00000 0 00024    00240 TXH +3 00000 0 00065    00241 TXH +3 00000 0 00024    00242 TXH +3 00000 0 00356   
                 CHNCOM.(1)                                                         029  LM00042
 00243 TSX +0 07400 4 00000    00244 TXH +3 00000 0 00071                                                               
                 ADOPT=COMLOC.($ADOPT$)                                             030  LM00046
 00245 TSX +0 07400 4 00002    00246 TXH +3 00000 0 00074    00247 STO +0 60100 0 00022                                 
                 USR=COMLOC.($USER$)                                                031  LM00047
 00250 TSX +0 07400 4 00002    00251 TXH +3 00000 0 00114    00252 STO +0 60100 0 00067                                 
                 SLOC.(IOOO.V.A,ADOPT+GLOC.(USR))                                   032  LM00049
 00253 TSX +0 07400 4 00007    00254 TXH +3 00000 0 00067    00255 ADD +0 40000 0 00022    00256 STO +0 60100 0 00357   
 00257 CAL -0 50000 0 00056    00260 ORA -0 50100 0 00023    00261 SLW +0 60200 0 00356    00262 TSX +0 07400 4 00014   
 00263 TXH +3 00000 0 00356    00264 TXH +3 00000 0 00357                                                               
                 SLOC.(SLAVER.V.IOOO.V.GLOC.(ADOPT+A),ADOPT+A)                      033  LM00050
 00265 CLA +0 50000 0 00022    00266 ADD +0 40000 0 00023    00267 STO +0 60100 0 00357    00270 CLA +0 50000 0 00022   
 00271 ADD +0 40000 0 00023    00272 STO +0 60100 0 00356    00273 TSX +0 07400 4 00007    00274 TXH +3 00000 0 00356   
 00275 STO +0 60100 0 00356    00276 CAL -0 50000 0 00063    00277 ORA -0 50100 0 00056    00300 ORA -0 50100 0 00356   
 00301 SLW +0 60200 0 00356    00302 TSX +0 07400 4 00014    00303 TXH +3 00000 0 00356    00304 TXH +3 00000 0 00357   
                 TEMP = TEMP                                                        034  LM00054
 00305 CLA +0 50000 0 00064    00306 STO +0 60100 0 00064                                                               
      SLX        SLEEP.(10)                                                         035  LM00055
 00307 TSX +0 07400 4 00013    00310 TXH +3 00000 0 00073                                                               
                 W'R ((GLOC.(ADOPT+GLOC.(USR)).EX.(IOOO.V.A)).A.PTA)                036  LM00056
                1  .V.((GLOC.(ADOPT+A).EX.(SLAVER.V.IOOO))                          036  LM00057
                2  .A.(SLAVER.V.IOOO)) .NE. 0, T'O LOOP                             036  LM00058
 00311 CAL -0 50000 0 00063    00312 ORA -0 50100 0 00056    00313 SLW +0 60200 0 00357    00314 CAL -0 50000 0 00063   
 00315 ORA -0 50100 0 00056    00316 SLW +0 60200 0 00356    00317 CLA +0 50000 0 00022    00320 ADD +0 40000 0 00023   
 00321 STO +0 60100 0 00360    00322 TSX +0 07400 4 00007    00323 TXH +3 00000 0 00360    00324 STO +0 60100 0 00360   
 00325 CAL -0 50000 0 00360    00326 ERA +0 32200 0 00356    00327 ANA -0 32000 0 00357    00330 SLW +0 60200 0 00360   
 00331 CAL -0 50000 0 00056    00332 ORA -0 50100 0 00023    00333 SLW +0 60200 0 00357    00334 TSX +0 07400 4 00007   
 00335 TXH +3 00000 0 00067    00336 ADD +0 40000 0 00022    00337 STO +0 60100 0 00356    00340 TSX +0 07400 4 00007   
 00341 TXH +3 00000 0 00356    00342 STO +0 60100 0 00356    00343 CAL -0 50000 0 00356    00344 ERA +0 32200 0 00357   
 00345 ANA -0 32000 0 00062    00346 ORA -0 50100 0 00360    00347 SLW +0 60200 0 00360    00350 CLA +0 50000 0 00360   
 00351 SUB +0 40200 0 00070    00352 TZE +0 10000 0 00354    00353 TRA +0 02000 0 00020                                 
                 T'O SLX                                                            037  LM00059
 00354 TRA +0 02000 0 00021                                                                                             
                 V'S FIRST=1B                                                       038  LM00061
 00053     +0 00000 0 00001                                                                                             
                 V'S TEMP = 10                                                      039  LM00062
 00064     +0 00000 0 00012                                                                                             
                 V'S PTA=700 000 777 777K                                           040  LM00063
 00062     -3 00000 7 77777                                                                                             
                 V'S BB=605757 575757K                                              041  LM00064
 00024     -2 05757 5 75757                                                                                             
                 V'S IOOO=3K5                                                       042  LM00065
 00056     +0 00000 3 00000                                                                                             
                 V'S SLAVER=7K11                                                    043  LM00066
 00063     -3 00000 0 00000                                                                                             
                 N'R                                                                044  LM00067
                 E'M                                                                045  LM00068
 00355 TSX +0 07400 4 00004                                                                                             
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 1     
                  
                                             2/8/66 - NOEL I. MORRIS    
                  
                       00001         ENTRY   ISIN          DETERMINE IF USER LOGGED IN    
                       00027         ENTRY   FINDSB        FIND A STANDBY USER
                       00062         ENTRY   KILL          MURDER A LOSER     
                       00140         ENTRY   CHKLU         CHECK FOR KLUDGE USER    
                  
                                     UNLIST     
 M                            S      COMMON  M             MACRO TO REDEFINE COMMON                               
 M                            LDISW  MACRO   S,X                                                                  
 M                            STISW  MACRO   S,X                                                                  
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 2     
                           ISIN - DETERMINE IF USER ALREADY LOGGED IN.              
                  
                  
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                              *     
                              *      CALLING SEQUENCE -     
                              *     
                              *      LINE = ISIN. (PROB, PROG)    
                              *     
                              *      IF USER IS NOT LOGGED IN,  LINE IS SET TO ZERO.
                              *      OTHERWISE LINE IS SET TO THE LINE NO. OF THE USER.   
                              *     
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                  
                  
      00001  0634 00 4 00022  ISIN   SXA     SX4,4         SAVE XR4     
      00002  0760 00 0 00016         EAXM                  ENTER 7-TAG MODE  **     
                  
      00003 -0500 60 4 00001         CAL*    1,4           PICK UP PROBLEM NO.
      00004  0602 00 0 00155         SLW     PROB          ..     
      00005 -0500 60 4 00002         CAL*    2,4           AND PROGRAMMER NO. 
      00006  0602 00 0 00156         SLW     PROG          ..     
                  
      00007  0774 00 4 00043         AXT     N,4           SEARCH ALL N LINES 
      00010                   LOOP   XEC.A   CAL(PROBN+N+1,4) GET PROBLEM NO. 
      00012  0322 00 0 00155         ERA     PROB          COMPARE
      00013 -0100 00 0 00020         TNZ     NEXT          ..     
      00014                          XEC.A   CAL(PROGN+N+1,4) GET PROGRAMMER NO.    
      00016  0322 00 0 00156         ERA     PROG          COMPARE
      00017  0100 00 0 00024         TZE     FND           USER FOUND   
      00020  2 00001 4 00010  NEXT   TIX     LOOP,4,1      ..     
                  
      00021 -0754 00 0 00000         ZAC                   ZERO MEANS USER NOT FOUND
      00022  0774 00 4 00000  SX4    AXT     **,4          RESTORE XR4  
      00023  0020 00 4 00002         TRA     2,4           AND RETURN   
                  
      00024  1 77734 4 00025  FND    TXI     *+1,4,-N-1    COMPUTE USER'S LINE NO.  
      00025  0756 00 4 00000         PCA     ,4            AND PLACE IN A     
      00026  0020 00 0 00022         TRA     SX4           RETURN WITH NO. IN AC    
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 3     
                           FINDSB - FIND A STANDBY USER.                            
                  
                  
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                              *     
                              *      CALLING SEQUENCE -     
                              *     
                              *      LOSER = FINDSB. (T.GRP)
                              *     
                              *     
                              *      IF 'T.GRP' IS ZERO, THE STANDBY USER WHO HAS USED MOST TIME
                              *      WILL BE RETURNED.
                              *      IF 'T.GRP' IS NON-ZERO, THE STANDBY USER MUST BE IN  
                              *      PARTY-GROUP 'T.GRP'.   
                              *     
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                  
                  
      00027  0634 00 4 00060  FINDSB SXA     FSX4,4        SAVE XR4     
      00030  0760 00 0 00016         EAXM                   ENTER 7-TAG MODE **     
      00031  0500 60 4 00001         CLA*    1,4           GET 'T.GRP'  
      00032  0602 00 0 00160         SLW     T.GRP         INSURE NUMBER POSITIVE   
                  
      00033  0600 00 0 00157         STZ     LOSER         INITIALIZE   
      00034  0600 00 0 00161         STZ     UTM           ..     
      00035 -0774 00 4 00003         AXC     3,4           ..     
      00036                   SBLOOP XEC.A   NZT(PROBN,4)  IF LOGGED IN,
      00040  0020 00 0 00055         TRA     SBTIX         ..     
      00041                          XEC.A   CLA(GRPNO.,4) ..     
      00043  0120 00 0 00055         TPL     SBTIX         AND A STANDBY,     
      00044 -0520 00 0 00160         NZT     T.GRP         CHECK FOR 'T.GRP' SPECIFIED    
      00045  0020 00 0 00050         TRA     *+3           ..     
      00046  0400 00 0 00160         ADD     T.GRP         COMPARE WITH SPECIFIED 'T.GRP' 
      00047 -0100 00 0 00055         TNZ     SBTIX         ..     
                  
      00050                          XEC.A   CAL(UTIME,4)  GET TIME USED
      00052 -0340 00 0 00161         LAS     UTM           COMPARE AGAINST LARGEST  
      00053  0602 00 0 00161         SLW     UTM           SAVE LARGER TIME   
      00054  0636 00 4 00157         SCA     LOSER,4       AND INDEX TO THE USER    
      00055  1 77777 4 00056  SBTIX  TXI     *+1,4,-1      GO ON TO THE NEXT  
      00056  3 77734 4 00036         TXH     SBLOOP,4,-N-1 ..     
                  
      00057  0500 00 0 00157         CLA     LOSER         GET USER INDEX     
      00060  0774 00 4 00000  FSX4   AXT     **,4          RESTORE XR4  
      00061  0020 00 4 00002         TRA     2,4           AND RETURN   
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 4     
                           KILL - MURDER A LOSER.                                   
                  
                  
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                              *     
                              *      CALLING SEQUENCE -     
                              *     
                              *      KILL. (LOSER)    
                              *     
                              *     
                              *      'LOSER' IS THE LINE NUMBER OF THE USER TO BE   
                              *      MURDERED.  
                              *     
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                  
                  
      00062  0634 00 4 00135  KILL   SXA     KX4,4         SAVE XR4     
      00063  0760 00 0 00016         EAXM                  ENTER 7-TAG MODE **
      00064  0634 00 2 00136         SXA     KX2,2         AND XR2
      00065 -0500 60 4 00001         CAL*    1,4           GET 'LOSER'  
      00066  0602 00 0 00157         SLW     LOSER         ..     
      00067  0737 00 2 00000         PAC     ,2            -USER NO. IN XR2   
                  
      00070 -0500 00 0 00174         CAL     =HENDLOG      COMMAND FOR 'LOSER'
      00071                          XEC.A   SLW(COMMND,2) ..     
      00073                          SCHEDL  =2,LOSER,=1   PULL HIM OUT OF QUEUES AND     
      00077                          SCHEDL  =6,LOSER,=0   MAKE HIM RUN 
      00103                          SCHEDL  =2,LOSER,=3   AND PLACE IN WAITING COMMAND   
                  
      00107  0600 00 0 00162         STZ     12MODE        RESET 12-BIT MODE SWITCH 
      00110                          ZETBIT  ,2,FULLBT     CHECK FOR USER IN 12-BIT MODE  
      00113 -0625 00 0 00162         STL     12MODE        IF SO, SET 12-BIT MODE SWITCH  
      00114                          STZBIT  ,2,FULLBT     MAKE SURE USER IN 6-BIT MODE   
      00121                          CALL    RSSWB         AND FLUSH HIS OUTPUT BUFFERS   
      00121  0074 00 4 00164         TSX     RSSWB,4                                                          .002
      00122  0 00000 0 00157         PZE     LOSER         ..     
                  
      00123                          COMENT  WAIT.,1(WAIT,) AAAAGH ......     
      00123  0074 00 4 00165         TSX     WRFLX,4                                                          .003
      00124  3 00001 0 00166         PAR     WAIT.,,1                                                         .005
      00125  0 00000 0 00157         PZE     LOSER         ..     
                  
      00126 -0520 00 0 00162         NZT     12MODE        CHECK FOR USER PREVIOUSLY IN 12-BIT MODE   
      00127  0020 00 0 00135         TRA     KX4           USER WAS IN 6-BIT MODE   
      00130                          STLBIT  ,2,FULLBT     RESET USER'S 12-BIT MODE SWITCH
                  
      00135  0774 00 4 00000  KX4    AXT     **,4          HE SCREAMS   
      00136  0774 00 2 00000  KX2    AXT     **,2          BUT    
      00137  0020 00 4 00001         TRA     1,4           WE HAVE LEFT 
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 5     
                           CHKLU - CHECK FOR KLUDGE USER.                           
                  
                  
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                              *     
                              *      CALLING SEQUENCE -     
                              *     
                              *      CINDEX = CHKLU. ()     
                              *     
                              *      INDEX IS ZERO IF USER IS NOT A KLUDGE USER.    
                              *      INDEX IS EITHER 1 OR 2 IF USER IS A KLUDGE USER.     
                              *     
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                  
                  
      00140  0634 00 4 00153  CHKLU  SXA     CKLX4,4       SAVE XR4     
      00141  0760 00 0 00016         EAXM                  ENTER 7-TAG MODE **
                  
      00142 -0500 00 0 77415         CAL     CONSOL        PICK UP USER CONSOLE I.D.
      00143 -0774 00 4 00002         AXC     2,4           ONLY 2 KLUDGE CONSOLES   
      00144                   KLOOP  XEC.A   LAS(KLUNIT-1,4) CHECK FOR KLUDGE CONSOLE     
      00146  0020 00 0 00150         TRA     *+2           ..     
      00147  0020 00 0 00152         TRA     KLFND         FOUND ONE    
      00150  1 00001 4 00151         TXI     *+1,4,1       STEP INDEX   
      00151  3 00000 4 00144         TXH     KLOOP,4,0     AND CHECK FOR COMPLETION OF SEARCH   
                  
      00152  0756 00 4 00000  KLFND  PCA     ,4            INDEX IN AC  
      00153  0774 00 4 00000  CKLX4  AXT     **,4          RESTORE XR4  
      00154  0020 00 4 00001         TRA     1,4           AND RETURN WITH INDEX IN AC    
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 6     
                           STORAGE AND CONSTANTS.                                   
                  
      00155  0 00000 0 00000  PROB   PZE  
      00156  0 00000 0 00000  PROG   PZE  
      00157  0 00000 0 00000  LOSER  PZE  
      00160  0 00000 0 00000  T.GRP  PZE  
      00161  0 00000 0 00000  UTM    PZE  
      00162  0 00000 0 00000  12MODE PZE  
                  
                  
                                     INSERT  TEMPA    
                  
                                             *** COMMON PACKAGE FOR LOGIN PROGRAMS. ***   
                  
                       77444         KOMMON  WDSLIN-1      ALL-PURPOSE CARD IMAGE BUFFER  
                       77444  CARD   KOMMON  1             ..     
                  
                  
                                             *** VECTOR USED BY RDACCT PROGRAMS. ***
                  
                       77411         KOMMON  26 
                       77411  TEMPA  KOMMON  1  
                  
                       77412  NPROB  SYN     TEMPA+1       USER PROBLEM NUMBER
                       77413  NAME   SYN     TEMPA+2       USER NAME    
                       77414  PASSW  SYN     TEMPA+3       PASSWORD     
                       77415  CONSOL SYN     TEMPA+4       CONSOLE I.D. 
                       77416  NPROG  SYN     TEMPA+5       USER PROGRAMMER NUMBER   
                       77417  TA1    SYN     TEMPA+6       ALLOTTED TIME
                       77420  TA2    SYN     TEMPA+7       ..     
                       77421  TA3    SYN     TEMPA+8       ..     
                       77422  TA4    SYN     TEMPA+9       ..     
                       77423  TA5    SYN     TEMPA+10      ..     
                       77424  GRP    SYN     TEMPA+11      PARTY GROUP NUMBER 
                       77425  SB     SYN     TEMPA+12      NON-ZERO IF USER MAY BE STANDBY
                       77426  MULT   SYN     TEMPA+13      LINE MULTIPLIER    
                       77427  UNIT   SYN     TEMPA+14      UNIT GROUP NUMBER  
                       77430  CODE   SYN     TEMPA+15      USER RESTRICTION CODE (RCODE)  
                       77431  LSTLGT SYN     TEMPA+16      DATE AND TIME OF LAST LOGOUT (2 WORDS)     
                       77433  USDFRM SYN     TEMPA+18      DATE AND TIME TIME ACCUMULATED FROM  
                       77435  TU1    SYN     TEMPA+20      USED TIME    
                       77436  TU2    SYN     TEMPA+21      ..     
                       77437  TU3    SYN     TEMPA+22      ..     
                       77440  TU4    SYN     TEMPA+23      ..     
                       77441  TU5    SYN     TEMPA+24      ..     
                       77442  TIMEIN SYN     TEMPA+25      TOTAL CONSOLE TIME USED  
                       77443  KLUSED SYN     TEMPA+26      KLUDGE TIME USED   
                  
                  
                  
                  
                  
      00163  0101 00 0 00176  SCHEDL TIA     =HSCHEDL 
                  
      00164                          RMT     *             REMOTE SEQUENCES   
      00164  0101 00 0 00175  RSSWB  TIA     =HRSSWB                                                          .002
      00165  0101 00 0 00177  WRFLX  TIA     =HWRFLX                                                          .002
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 7     
                           STORAGE AND CONSTANTS.                                   
                  
      00166  662131637360     WAIT.  BCI     1,WAIT,                                                          .002
                  
                                     END  
                  
        LITERALS  
      00167  000000000000     
      00170  000000000001     
      00171  000000000002     
      00172  000000000003     
      00173  000000000006     
      00174  254524434627     
      00175  516262662260     
      00176  622330252443     
      00177  665126436760     
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77410 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
        200 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          1      A     1
          2      B     1
      72741      C     1
         43      N     1,    7,   11,   15,   24,   56
      72767     MQ     1
      72771     OV     1
      75126     PB     1
      77425     SB   163
      72770     SI     1
      72766     SQ     1
         24    FND    17
      77424    GRP   163
      72754    ILC     1
      75632    IOD     1
      72763    IR1     1
      72762    IR2     1
      72761    IR3     1
      72760    IR4     1
      72757    IR5     1
      72756    IR6     1
      72755    IR7     1
          1    .F.     1
          0    .I.     1
        136    KX2    64
        135    KX4    62,  127
      72765    LAC     1
         22    SX4     1,   26
      77417    TA1   163
      77420    TA2   163
      77421    TA3   163
      77422    TA4   163
      77423    TA5   163
          1    TMP     1
      77435    TU1   163
      77436    TU2   163
      77437    TU3   163
      77440    TU4   163
      77441    TU5   163
        161    UTM    34,   52,   53
          0   BASE     1
      77444   CARD   163
      77430   CODE   163
      75070   DATE     1
      72775   DVCK     1
      72773   FLMD     1
         60   FSX4    27
          0   GETA    10,   14,   36,   41,   50,   71,  110,  114,  117,  130,  133,  144
      72774   IOCK     1
          1   ISIN     0
         62   KILL     0
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         10   LOOP    20
      72772   MTMD     1
      77426   MULT   163
      77413   NAME   163
         20   NEXT    13
        155   PROB     4,   12
        156   PROG     6,   16
      74001   Q1U1     1
      73315   Q1U2     1
      74000   Q3U1     1
      73243   Q3U2     1
      72776   SLTS     1
      75110   SWAP     1
      77070   TAU1     1
      77024   TAU2     1
      76760   TAU3     1
      76714   TAU4     1
      76650   TAU5     1
      77427   UNIT   163
      75071   USER     1
      75042   WAIT     1
      75346  ADOPT     1
      72777  ASTAT     1
      75456  AWAKE     1
      73000  BSTAT     1
        140  CHKLU     0
        153  CKLX4   140
      75063  COMSW     1
      74123  DBUF1     1
      77777  ENBWD     1
       1000  FLBIT     1
      76474  ITIME     1
      77461  ..001     1
      73240  ..121     1
      73212  ..125     1
      73045  ..127     1
      73012  ..136     1
      73007  ..137     1
      72747  ..169     1
        152  KLFND   147
        144  KLOOP   151
         24  LCBUF     1
      77622  LEVEL     1
        157  LOSER    33,   54,   57,   66,   75,  101,  105,  122,  125
         12  MAXLV     1
      20000  NBKBT     1
       4000  NCVBT     1
      77412  NPROB   163
      77416  NPROG   163
      77414  PASSW   163
      75003  PBUFF     1
      77243  PLIST     1
      72751  PRIND     1
      76430  PROBN     1,   11,   37
      76364  PROGN     1,   15
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      72764  PTIRS     1
          3  QUITL     1
      76162  RCODE     1
      75040  READY     1
      72752  RLIND     1
        164  RSSWB   121
         55  SBTIX    40,   43,   47
      75076  SHIFT     1
      75075  STNBY     1
      75064  SWPSW     1
      75113  TBASE     1
      77411  TEMPA   163
        160  T.GRP    32,   44,   46
      77151  ULIST     1
      76320  UNAME     1
      76604  UTIME     1,   51
        166  WAIT.   124
        165  WRFLX   123
        162 12MODE   107,  113,  126
         12 ACTFIL     1
         53 AFS1LN     1
        361 AFS2LN     1
         25 AFSCON     1
         26 AFSENL     1
      74047 AFSTU1     1
      73416 AFSTU2     1
      75043 ATLOST     1
      73004 ATRILC     1
      73020 AUTHOR     1
      75053 AUTOND     1
      75046 BASEAD     1
      75116 BEGTIM     1
      75044 BKGATT     1
      75061 BKGTIM     1
      73013 BREAKL     1
      73014 BRKILC     1
      73005 BTRILC     1
      73215 CCBSAV     1
          5 CDEPTH     1
      73241 CFSAVE     1
      73214 CLCSAV     1
      75052 CLKTIM     1
         24 CLNGTH     1
         40 CLOCBT     1
      77461 COMBAS     1
      75676 COMCTR     1
      75172 COMFSW     1
      76006 COMMND     1,   72
      77462 COMRLC     1
      75057 COMTIM     1
      75054 COMWAT     1
      77415 CONSOL   142,  163
      75124 CURUSR     1
      75067 DATEYR     1
      75045 DEMKEY     1
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 4     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      75047 DSKLOC     1
      77776 DUMMY0     1
      77335 DUMMY2     1
      77150 DUMMY4     1
      77134 DUMMY6     1
      76317 DUMMY7     1
      75041 DUMMY8     1
      75037 DUMMYC     1
      75002 DUMMYE     1
      74122 DUMMYH     1
      74046 DUMMYI     1
      74000 DUMMYJ     1
      73777 DUMMYK     1
      73415 DUMMYL     1
      73314 DUMMYM     1
      76272 DUMY71     1
      73242 EMCOND     1
      75104 EMPLVL     1
      77135 ENDPTR     1
      75072 ESTTIM     1
          1 FIBBIT     1
      75073 FIBPTR     1
      75074 FIBRUN     1
         27 FINDSB     0
          4 FULLBT     1,  112,  116,  132
      75103 FULLEN     1
      75105 FULLVL     1
         24 GROUPS     1
      76226 GRPNO.     1,   42
      76273 GRPTBL     1
      75077 HANGUP     1
        400 HNGLBT     1
         10 HUNGBT     1
      75742 ILINES     1
      75100 INACTV     1
        100 INTBIT     1
      72742 KLTIME     1
      72746 KLUNIT     1,  145
      77443 KLUSED   163
      72744 KLUSER     1
      77666 LENGTH     1
      75101 LEVINC     1
      75111 LEVTIM     1
      77336 LINMUL     1
      77431 LSTLGT   163
      72750 MACOND     1
      75107 MAXLVL     1
      75114 MAXTIM     1
      72753 MEMBND     1
      75106 MINLVL     1
      75125 MXUSRS     1
       1000 NBACBT     1
      10000 NBKBIT     1
       2000 NCVBIT     1
      10000 NDEMBT     1
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 5     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      77777 NEWTOP     1
      75122 NEWUSR     1
       4000 NFIBBT     1
       2000 NFORBT     1
        200 NINTBT     1
      76540 NOTIME     1
      20000 NPRCBT     1
      75065 NUSERS     1
        660 NWDSPT     1
      75051 NWORDS     1
      75302 OKPROB     1
      75236 OKPROG     1
      73006 OLDILC     1
      77461 OLDTOP     1
      75123 OLDUSR     1
         20 OUTPBT     1
      75112 PAYTIM     1
      75121 PAYUSR     1
         45 Q1U1LN     1
        100 Q1U2LN     1
          0 Q3U1LN     1
         51 Q3U2LN     1
      75102 QNTWAT     1
      75115 QUANTM     1
        100 R636BT     1
          2 RCALBT     1
          1 RCOMBT     1
        200 RDSKBT     1
         40 RKLDBT     1
         20 RPATBT     1
          4 RPROBT     1
         10 RPRVBT     1
      73017 SAVEM1     1
         36 SBLOOP    56
        163 SCHEDL    73,   77,  103
      77732 STATUS     1
      75050 STOPSW     1
      77446 STRTIM     1
      73046 SUBCOM     1
      75060 SWPTIM     1
      75055 SWPWAT     1
      75117 SYSDAT     1
      75120 SYSTIM     1
      77442 TIMEIN   163
      75412 TIMINC     1
      77556 TIMLEV     1
      75066 TIMNOW     1
      73002 TINHIB     1
      75062 TOTTIM     1
      73001 TSSFSW     1
          1 UBACBT     1
      75522 UCHARG     1
      75566 UCLOCK     1
      73022 UCOMBF     1
          2 UCOMBT     1
1            UTILITY ROUTINES FOR LOGIN AND LOGOUT.                                              PAGE 6     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         10 UDEMBT     1
      73003 UENBWD     1
      73015 UFERTN     1
          4 UFIBBT     1
          2 UFORBT     1
      73016 UILOCK     1
      76052 UNITID     1
         20 UPRCBT     1
      73021 URCODE     1
      77433 USDFRM   163
      75056 USRWAT     1
      76116 USWICH     1,  111,  115,  120,  131,  134
      73213 WATCOM     1
      77512 WATTIM     1
         16 WDSLIN     1,  163
      77402 WRKTIM     1
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            GETA - EXECUTE INSTRUCTIONS TO A-CORE.                                              PAGE 1     
                  
                                             2/3/66 - NOEL I. MORRIS    
                  
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* 
                              *     
                              *      TO EXECUTE AN INSTRUCTION REFERRING TO A-CORE -
                              *     
                              *      TSX     GETA,7        XR7 MAY NOT BE USED FOR INDEXING     
                              *      OPCODE  LOCN,TAG      ..     
                              *     
                              *      ALL MEMORY REFERENCE INSTRUCTIONS WILL WORK WITH     
                              *      THIS SUBROUTINE EXCEPT THE FOLLOWING -   
                              *     
                              *      ANS                   AND TO STORAGE     
                              *      DXXX                  ALL DOUBLE-PRECISION OPERATIONS
                              *     
                              *     
                              *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* 
                  
                  
                       00002         ENTRY   GETA     
                  
                  
        TRANSFER VECTOR 
      00000  272563434623     GETLOC
      00001  622563434623     SETLOC
                  
      00002  0634 00 7 00040  GETA   SXA     X7,7          SAVE XR7     
      00003  0074 00 7 00057         TSX     SAVE,7        SAVE MACHINE CONDITIONS  
      00004 -0754 00 0 00000         ZAC                   INSURE ZERO TAG    
      00005  0625 00 0 00073         STT     INSTR         ..     
                  
      00006  0534 00 7 00040         LXA     X7,7          RESTORE XR7  
      00007  0560 00 7 00001         LDQ     1,7           GET INSTRUCTION    
      00010 -0620 00 0 00073         SLQ     INSTR         SAVE IT
      00011 -0130 00 0 00000         XCL                   ..     
      00012  0044 00 0 00000         PAI                   INTO SI
      00013 -0056 00  041400         LNT     41400         IS IT INDEX TRANSMISSION .Q.   
      00014  0020 00 0 00053         TRA     GETEFA        NO     
      00015  0625 00 0 00073         STT     INSTR         YES, SAVE TAG
                  
      00016  0621 00 0 00027  STA    STA     ADDR1         SAVE ADDRESS 
      00017  0621 00 0 00036         STA     ADDR2         ..     
      00020  0621 00 0 00043         STA     ADDR3         ..     
                  
      00021 -0051 00  060000         IIL     60000         IS IT STORE CLASS .Q.    
      00022 -0054 00  370000         LFT     370000        ..     
      00023  0020 00 0 00042         TRA     GET           NO, GO TO GETLOC   
                  
      00024 -0056 00  002000         LNT     2000          IS IT BYTE STORE .Q.     
      00025  0020 00 0 00031         TRA     PUT           NO, SKIP GETLOC    
      00026  0074 00 4 00000         TSX     GETLOC,4      GET LOC'N CONTENTS 
      00027  3 00000 0 00000  ADDR1  PTH     **            ..     
      00030  0602 00 0 00074         SLW     C(LOC)        AND SAVE     
1            GETA - EXECUTE INSTRUCTIONS TO A-CORE.                                              PAGE 2     
                  
      00031  0074 00 7 00065  PUT    TSX     RESTOR,7      RESTORE MACHINE CONDITIONS     
      00032  0522 00 0 00073         XEC     INSTR         EXECUTE INSTRUCTION
      00033  0074 00 7 00057         TSX     SAVE,7        SAVE MACHINE CONDITIONS  
                  
      00034 -0500 00 0 00074         CAL     C(LOC)        GET LOC'N CONTENTS NOW   
      00035  0074 00 4 00001         TSX     SETLOC,4      AND RESET THEM     
      00036  3 00000 0 00000  ADDR2  PTH     **            ..     
      00037  0074 00 7 00065         TSX     RESTOR,7      RESTORE MACHINE CONDITIONS     
      00040  0774 00 7 00000  X7     AXT     **,7          RESTORE XR7  
      00041  0020 00 7 00002         TRA     2,7           RETURN 
                  
                  
      00042  0074 00 4 00000  GET    TSX     GETLOC,4      GET LOC'N CONTENTS 
      00043  3 00000 0 00000  ADDR3  PTH     **            ..     
      00044  0602 00 0 00074         SLW     C(LOC)        AND SAVE     
                  
      00045  0074 00 7 00065         TSX     RESTOR,7      RESTORE CONSOLE    
      00046  0534 00 7 00040         LXA     X7,7          RESTORE XR7  
      00047  0522 00 0 00073         XEC     INSTR         EXECUTE INSTRUCTION
      00050  0020 00 7 00002         TRA     2,7           RETURN 
      00051  0020 00 7 00003         TRA     3,7           RETURN FOR 'ZET', 'CAS', ETC.  
      00052  0020 00 7 00004         TRA     4,7           ..     
                  
                  
      00053  0625 00 0 00054  GETEFA STT     *+1           CALCULATE EFFECTIVE ADDRESS    
      00054  0756 00 0 00000         PCA     ,**           ..     
      00055  0361 00 7 00001         ACL     1,7           ..     
      00056  0020 00 0 00016         TRA     STA           ..     
                  
                  
      00057  0634 00 4 00071  SAVE   SXA     X4,4          SAVE MACHINE CONDITIONS  
      00060  0602 00 0 00075         SLW     LAC           LOGICAL AC   
      00061  0601 00 0 00076         STO     AAC           ARITH. AC    
      00062 -0600 00 0 00077         STQ     MQ            SAVE MQ
      00063  0604 00 0 00100         STI     SI            AND SI 
      00064  0020 00 7 00001         TRA     1,7           RETURN 
                  
      00065  0500 00 0 00076  RESTOR CLA     AAC           ARITH. AC    
      00066 -0501 00 0 00075         ORA     LAC           LOGICAL AC   
      00067  0560 00 0 00077         LDQ     MQ            MQ     
      00070  0441 00 0 00100         LDI     SI            SI     
      00071  0774 00 4 00000  X4     AXT     **,4          RESTORE XR4  
      00072  0020 00 7 00001         TRA     1,7           RETURN 
                  
                  
      00073  0 00000 0 00074  INSTR  ***     C(LOC),**
      00074  0 00000 0 00000  C(LOC) PZE  
      00075  0 00000 0 00000  LAC    PZE  
      00076  0 00000 0 00000  AAC    PZE  
      00077  0 00000 0 00000  MQ     PZE  
      00100  0 00000 0 00000  SI     PZE  
                  
                                     EXTERN  GETLOC,SETLOC  
1            GETA - EXECUTE INSTRUCTIONS TO A-CORE.                                              PAGE 3     
                  
                                     END  
1            GETA - EXECUTE INSTRUCTIONS TO A-CORE.                                              PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        101 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         77     MQ    62,   67
        100     SI    63,   70
         71     X4    57
         40     X7     2,    6,   46
         76    AAC    61,   65
         42    GET    23
         75    LAC    60,   66
         31    PUT    25
         16    STA    56
          2   GETA     0
         57   SAVE     3,   33
         27  ADDR1    16
         36  ADDR2    17
         43  ADDR3    20
         73  INSTR     5,   10,   15,   32,   47
         74 C(LOC)    30,   34,   44,   73
         53 GETEFA    14
          0 GETLOC    26,   42
         65 RESTOR    31,   37,   45
          1 SETLOC    35
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




SUMMRY   BCD 09/20/68 0221.2   18576         00000    
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 1     
                  
                              * FROM TIMUSD TIMACC AND UACCNT TIMACC    
                  
                                     EXTERN  BFOPEN,BFCLOS,BFREAD,BFWRIT,DAYMON     
                                     EXTERN  LINK,UNLINK    
                                     EXTERN  RJUST,LJUST,BZEL,DEFBC,BCDEC     
                                     EXTERN  PRNTER,STORGE,ATTACH,FSTATE,GETTM
                                     EXTERN  OPEN,RDFILE,CLOSE    
                  
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 2     
                  
                  
                              TUIN   MACRO   X,Y
                                     TSX     BCDEC,4       CONVERTS BINARY MINUTES TO     
                                     PTH     X             BCD HOURS, ROUNDED, AND  
                                     ADD     =30           STORES INDIRECTLY IN Y   
                                     XCA  
                                     ZAC  
                                     DVP     =60
                                     STQ*    Y  
                              TUIN   END  
                  
                  
                              UPBCD  MACRO   X,Y           TO ADD A BCD NUMBER TO A 
                                     TSX     BCDEC,4       BINARY TOTAL IN Y  
                                     PTH     X  
                                     ADD     Y  
                                     STO     Y  
                              UPBCD  END  
                  
                  
                  
                              UCSTIN MACRO   TIME,PRICE     
                                     LDQ*    TIME          COMPUTE COST OF 'TIME', INDIRECT     
                                     MPY     PRICE    
                                     XCA  
                                     ADD     TEMP          AND UPDATE A TOTAL IN TEMP     
                                     STO     TEMP     
                              UCSTIN END  
                  
                              CONIN  MACRO   TIME,SLOT     MACRO TO PUT TIME INTO SLOT    
                                     CLA*    TIME          INDIRECTLY   
                                     STO     TEMP          AFTER CONVERSION TO BCD  
                                     TSX     CONVRT,4 
                                     PTH     TEMP     
                                     STO     SLOT     
                              CONIN  END  
                  
                  
                  
                  
                  
                  
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 3     
                  
                  
                  
                                             THE FOLLOWING ARE THE VARIABLES USED   
                                             FOR COMPUTING THE VARIOUS CHARGES--    
                  
        TRANSFER VECTOR 
      00000  222646472545     BFOPEN
      00001  222623434662     BFCLOS
      00002  222651252124     BFREAD
      00003  222666513163     BFWRIT
      00004  242170444645     DAYMON
      00005  433145426060     LINK  
      00006  644543314542     UNLINK
      00007  514164626360     RJUST 
      00010  434164626360     LJUST 
      00011  227125436060     BZEL  
      00012  242526222360     DEFBC 
      00013  222324252360     BCDEC 
      00014  475145632551     PRNTER
      00015  626346512725     STORGE
      00016  216363212330     ATTACH
      00017  266263216325     FSTATE
      00020  272563634460     GETTM 
      00021  464725456060     OPEN  
      00022  512426314325     RDFILE
      00023  234346622560     CLOSE 
                  
      00024  0020 00 0 00035         TRA     START    
                  
                  
      00025  0 00000 0 00454  COST1  PZE     300           INTEGER DOLLARS PER FIRST SHIFT HOUR 
      00026  0 00000 0 00310  COST2  PZE     200           SECOND SHIFT 
      00027  0 00000 0 00310  COST3  PZE     200           THIRD SHIFT  
      00030  0 00000 0 00310  COST4  PZE     200           FOURTH SHIFT 
      00031  0 00000 0 00310  COST5  PZE     200           FIFTH SHIFT (FIB)  
      00032  0 00000 0 15012  COSTD  PZE     6666          TEN-THOUSANDTHS OF A CENT CHARGED PER
                                                           DISK TRACK PER DAY 
      00033  0 00000 0 00144  COSTU  PZE     100           CENTS CHARGED PER U.F.D. TRACK PER DAY     
      00034  0 00000 0 00024  COSTS  PZE     20            INTEGER DOLLARS CHARGED PER SUSCRIBER
                                                           WITH OWN U.F.D. PER MONTH
                  
                  
                  
      00035  0774 00 1 00000  START  AXT     0,1           USED AS AN ARGUMENT INDICATOR  
      00036  0074 00 4 02353         TSX     GETCOM,4      GET FIRST ARGUMENT 
      00037  0 00000 0 00001         PZE     1             ..     
      00040  0602 00 0 02262         SLW     NAME2         ACCOUNTING FILE NAME2    
      00041 -0340 00 0 02351         LAS     FENCE         IS IT THERE--
      00042  0020 00 0 00044         TRA     *+2           YES    
      00043  1 00001 1 00055         TXI     GETMON,1,1    XR1=1--WE WANT TO FIND MONTH AND DAYS
      00044  0074 00 4 02353         TSX     GETCOM,4      PICK UP THE SECOND ARGUMENT    
      00045  0 00000 0 00002         PZE     2  
      00046 -0340 00 0 02351         LAS     FENCE         IT ALSO MUST BE SUPPLIED 
      00047  0020 00 0 00051         TRA     *+2           OK     
      00050  1 00002 1 00055         TXI     GETMON,1,2    XR1=2,WE WANT TO GIND THE DAYS IN MONTH    
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 4     
                  
      00051  0602 00 0 02335         SLW     DAYS          THERE IT IS  
      00052  0074 00 4 00013         TSX     BCDEC,4       CONVERT TO AN INTEGER    
      00053  0 00000 0 02335         PZE     DAYS     
      00054  0601 00 0 02335         STO     DAYS          AND NOW WE HAVE THE DAYS IN THIS MONTH     
      00055  0074 00 4 00004  GETMON TSX     DAYMON,4      GET THE REST OF THE ARGS 
      00056  0 00000 0 02262         PZE     NAME2         ACCOUNTING FILE NAME2    
      00057  0 00000 0 02335         PZE     DAYS          DAYS IN THE MONTH  
      00060  0 00000 0 02336         PZE     MONTH         FULL BCD MONTH     
      00061  0560 00 0 02335         LDQ     DAYS     
      00062  0200 00 0 00033         MPY     COSTU         FIND MONTHLY DRUM TRACK CHARGE 
      00063 -0600 00 0 00033         STQ     COSTU         ..     
      00064  0560 00 0 02335         LDQ     DAYS          GET THE NUMBER OF DAYS BACK TO 
      00065  0200 00 0 00032         MPY     COSTD         FIND MONTHLY DISK TRACK CHARGE 
      00066 -0600 00 0 00032         STQ     COSTD         ..     
                  
                  
                                             EXTEND MEMORY BOUND TO MAKE ROOM FOR BUFFERS 
                                             AND ALL SORTS OF ARRAYS    
                  
                  
      00067  0074 00 4 02354         TSX     GETMEM,4 
      00070  0621 00 0 00155         STA     BUF1          THE REST OF THIS STARES ADDRESSES    
      00071  0621 00 0 00277         STA     BUF2          STORES ADDRESSES AROUND THE PROGRAM  
      00072  0400 00 0 02177         ADD     BUFSIZ   
      00073  0621 00 0 00156         STA     BUF3     
      00074  0621 00 0 00300         STA     BUF4     
      00075  0400 00 0 02177         ADD     BUFSIZ   
      00076  0621 00 0 00314         STA     BUF5     
      00077  0400 00 0 02177         ADD     BUFSIZ   
      00100  0621 00 0 00315         STA     BUF6     
      00101  0400 00 0 02177         ADD     BUFSIZ   
      00102  0621 00 0 00316         STA     BUF7     
      00103  0400 00 0 02177         ADD     BUFSIZ   
      00104  0621 00 0 00324         STA     BUF8     
      00105  0400 00 0 02177         ADD     BUFSIZ   
      00106  0621 00 0 00325         STA     BUF9     
      00107  0400 00 0 02177         ADD     BUFSIZ   
      00110  0621 00 0 00326         STA     BUF10    
      00111  0400 00 0 02177         ADD     BUFSIZ        AND NOW WE FIND THE START ADDRESSES OF     
      00112  0621 00 0 02201         STA     TU1           VARIOUS ARRAYS     
      00113  0400 00 0 02200         ADD     TBLSIZ        THIS IS THE SHIFT ONE TIME ALLOTED   
      00114  0621 00 0 02202         STA     TU2           SHIFT TWO TIME ALLOTTED  
      00115  0400 00 0 02200         ADD     TBLSIZ   
      00116  0621 00 0 02203         STA     TU3           SHIFT THREE TIME ALLOTTED
      00117  0400 00 0 02200         ADD     TBLSIZ   
      00120  0621 00 0 02204         STA     TU4           SHIFT FOUR TIME ALLOTTED 
      00121  0400 00 0 02200         ADD     TBLSIZ   
      00122  0621 00 0 02205         STA     TU5           SHIFT FIVE (FIB) TIME USED     
      00123  0400 00 0 02200         ADD     TBLSIZ   
      00124  0621 00 0 02206         STA     NAME          PROGRAMMER NAME    
      00125  0400 00 0 02200         ADD     TBLSIZ   
      00126  0621 00 0 02207         STA     PROB          PROBLEM NUMBER     
      00127  0400 00 0 02200         ADD     TBLSIZ   
      00130  0621 00 0 02210         STA     PROG          PROGRAMMER NUMBER  
      00131  0400 00 0 02200         ADD     TBLSIZ   
      00132  0074 00 4 02355         TSX     SETMEM,4      AND TACK DOWN THE MEMORY BOUND HERE  
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 5     
                  
      00133  0074 00 4 02360         TSX     SETBRK,4      SET THE BREAK FOR A GRACEFUL EXIT    
      00134  0 00000 0 01753         PZE     BREAK    
                  
                  
                  
                                             OPEN AND LOAD TIMUSD TIMACC INTO THE TABLES  
                  
                  
      00135  0074 00 4 00005         TSX     LINK,4        TRY TO LINK TO TU NAME2  
      00136  3 00000 0 02350         PTH     TU 
      00137  3 00000 0 02262         PTH     NAME2    
      00140  3 00000 0 02421         PTH     =H M1416      IN M1416 CMFL02    
      00141  3 00000 0 02406         PTH     =HCMFL02 
      00142  3 00000 0 02350         PTH     TU 
      00143  3 00000 0 02262         PTH     NAME2    
      00144  3 00000 0 02361         PTH     =0 
      00145  3 00000 0 01745         PTH     LNKERR        IF ERROR IN LINK   
      00146  3 00000 0 02341         PTH     N  
      00147  0500 00 0 02362         CLA     =1            SET LNKFLG TO UNLINK LATER     
      00150  0601 00 0 02266         STO     LNKFLG   
      00151  0074 00 4 00000  TUOPEN TSX     BFOPEN,4 
      00152  3 00000 0 02343         PTH     R  
      00153  3 00000 0 02350         PTH     TU 
      00154  3 00000 0 02262         PTH     NAME2    
      00155  3 00000 0 00000  BUF1   PTH     ** 
      00156  3 00000 0 00000  BUF3   PTH     ** 
      00157  3 00000 0 02411         PTH     =-0
      00160  3 00000 0 01751         PTH     ERROR    
      00161  0500 00 0 02266         CLA     LNKFLG        CHECK TO SEE IF WE ARE LINKED  
      00162  0100 00 0 00170         TZE     LOAD-1        TO TU NAME2------NO,PROCEED    
      00163  0074 00 4 00006         TSX     UNLINK,4      YES-UNLINK   
      00164  3 00000 0 02350         PTH     TU 
      00165  3 00000 0 02262         PTH     NAME2    
      00166  3 00000 0 01751         PTH     ERROR    
      00167  3 00000 0 02341         PTH     N  
      00170  0600 00 0 02213         STZ     I             CLEAR COUNTER
      00171  0074 00 4 00002  LOAD   TSX     BFREAD,4      READ A RECORD FROM TIMUSD TIMACC     
      00172  3 00000 0 02350         PTH     TU 
      00173  3 00000 0 02262         PTH     NAME2    
      00174  3 00034 0 02277         PTH     A,,LINSIZ
      00175  3 00000 0 00264         PTH     LOADED        WHEN DONE GO HERE  
      00176  3 00000 0 02341         PTH     N             WE DONT CARE ABOUT THE COUNT   
      00177  3 00000 0 01751         PTH     ERROR         BUT WE DO MIND ERRORS    
      00200  0535 00 1 02213         LAC     I,1           PLACE THE INFO INTO THE RIGHT SPOT   
      00201 -0500 00 0 02301         CAL     A+2
      00202  0602 00 0 02251         SLW     TEMP     
      00203  0074 00 4 00010         TSX     LJUST,4  
      00204  3 00000 0 02251         PTH     TEMP     
      00205  0601 60 0 02206         STO*    NAME          WE JUST EXTRACTED THE NAME     
      00206 -0500 00 0 02277         CAL     A             GET PROBLEM NUMBER 
      00207  0602 60 0 02207         SLW*    PROB          AND STORE    
      00210 -0500 00 0 02300         CAL     A+1           GET PROGRAMMER NUMBER    
      00211  0602 60 0 02210         SLW*    PROG     
      00212                          TUIN    A+18,TU1      GET THE USED TIMES FROM  
      00221                          TUIN    A+19,TU2      TIMUSD TIMACC AND STORE IN     
      00230                          TUIN    A+20,TU3      THE TABLES   
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 6     
                  
      00237                          TUIN    A+21,TU4 
      00246                          TUIN    A+22,TU5 
      00255  1 77777 1 00256         TXI     *+1,1,-1 
      00256  3 77014 1 00262         TXH     *+4,1,-500    GO UP THE TABLES UNTIL 500 TIMES     
      00257  1 00001 1 00260         TXI     *+1,1,1       MORE THAN 500 IF HERE--ERROR   
      00260  0074 00 4 02352         TSX     WRFLX,4       SO SAY SO    
      00261  0 00007 0 02153         PZE     ERR1,,7  
      00262  0636 00 1 02213         SCA     I,1           SAVE THE INDEX     
      00263  0020 00 0 00171         TRA     LOAD          AND GO AROUND FOR NEXT RECORD  
      00264  0074 00 4 00001  LOADED TSX     BFCLOS,4      ALL DONE LOADING TIMUSD TIMACC 
      00265  3 00000 0 02350         PTH     TU            SO CLOSE UP THIS PART    
      00266  3 00000 0 02262         PTH     NAME2    
      00267  3 00000 0 01751         PTH     ERROR    
      00270  0534 00 1 02213         LXA     I,1           GET THE FINAL COUNT
      00271 -0636 00 1 00373         SCD     UMAX,1        AND SAVE FOR LATER USE   
      00272 -0636 00 1 01723         SCD     UMAX1,1       ELSEWHERE    
                  
                  
                  
                                             NOW WE BEGIN THE MAIN TASK OF GOING THROUGH  
                                             UACCNT TIMACC LINE BY LINE TO COMPUTE THE SUMMARY  
                                             AND TOTALS BY DEPARTMENT   
                  
                  
                  
      00273  0074 00 4 00000         TSX     BFOPEN,4      OPEN UP UACCNT TIMACC    
      00274  3 00000 0 02343         PTH     R  
      00275  3 00000 0 02342         PTH     UA 
      00276  3 00000 0 02345         PTH     TA 
      00277  3 00000 0 00000  BUF2   PTH     ** 
      00300  3 00000 0 00000  BUF4   PTH     ** 
      00301  3 00000 0 02411         PTH     =-0
      00302  3 00000 0 01751         PTH     ERROR    
      00303  0074 00 4 02357         TSX     ATTNAM,4      FIND OUT WHERE HOME IS   
      00304  3 00002 0 02263         PTH     HOME,,2  
      00305  0074 00 4 00020         TSX     GETTM,4       AND GET THE DATE AND TIME
      00306  3 00000 0 02333         PTH     DATE     
      00307  3 00000 0 02334         PTH     TIME     
      00310  0074 00 4 00000         TSX     BFOPEN,4      OPEN TOTALS FILE AND     
      00311  3 00000 0 02344         PTH     W  
      00312  3 00000 0 02347         PTH     TO 
      00313  3 00000 0 02262         PTH     NAME2    
      00314  3 00000 0 00000  BUF5   PTH     ** 
      00315  3 00000 0 00000  BUF6   PTH     ** 
      00316  3 00000 0 00000  BUF7   PTH     ** 
      00317  3 00000 0 01751         PTH     ERROR    
      00320  0074 00 4 00000         TSX     BFOPEN,4      THE SUMMARY FILE   
      00321  3 00000 0 02344         PTH     W  
      00322  3 00000 0 02346         PTH     SU 
      00323  3 00000 0 02262         PTH     NAME2    
      00324  3 00000 0 00000  BUF8   PTH     ** 
      00325  3 00000 0 00000  BUF9   PTH     ** 
      00326  3 00000 0 00000  BUF10  PTH     ** 
      00327  3 00000 0 01751         PTH     ERROR    
      00330  0074 00 4 00016         TSX     ATTACH,4 
      00331  3 00000 0 02413         PTH     =HM.F.D. 
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 7     
                  
      00332  3 00000 0 02440         PTH     =H(FILE) 
      00333 -0500 00 0 02420         CAL     =H FOR        SET UP THE TITLE MESSAGE 
      00334  0602 00 0 02007         SLW     MESS1+3  
      00335 -0500 00 0 02336         CAL     MONTH    
      00336  0602 00 0 02010         SLW     MESS1+4  
      00337 -0500 00 0 02337         CAL     MONTH+1  
      00340  0602 00 0 02011         SLW     MESS1+5  
      00341 -0500 00 0 02431         CAL     =H TAKEN 
      00342  0602 00 0 02012         SLW     MESS1+6  
      00343 -0500 00 0 02333         CAL     DATE     
      00344  0560 00 0 02334         LDQ     TIME     
      00345 -0765 00 0 00006         LGR     6  
      00346 -0501 00 0 02416         ORA     =H 00000 
      00347  0602 00 0 02013         SLW     MESS1+7  
      00350 -0600 00 0 02014         STQ     MESS1+8  
                  
                  
                  
                                             THE TITLE IS SET--NOW WE READ UACCNT TIMACC LINE BY LINE 
                                             AND PROCESS OUR INFO AD NAUSEUM  
                  
                  
                  
      00351  0074 00 4 00002  RDACCT TSX     BFREAD,4      READ THE NEXT LINE 
      00352  3 00000 0 02342         PTH     UA 
      00353  3 00000 0 02345         PTH     TA 
      00354  3 00034 0 02277         PTH     A,,28         28 WORDS PER LINE  
      00355  3 00000 0 01607         PTH     .CLOSE        WHEN DONE    
      00356  3 00000 0 02341         PTH     N  
      00357  3 00000 0 01751         PTH     ERROR         WHEN EVEN DONE-ER  
      00360 -0500 00 0 02277         CAL     A             GET FIRST WORD TO TEST   
      00361  0322 00 0 02415         ERA     =H*           IF '*', THIS IS A NEW PROBLEM NUMBER 
      00362  0100 00 0 01020         TZE     PROBIN        SO GO TAKE CARE OF IT    
      00363  0774 00 1 00000         AXT     0,1           START AT THE TOP OF THE LABLES TO LOOK UP  
      00364 -0500 00 0 02300  LOOKUP CAL     A+1           THIS GUY     
      00365  0322 60 0 02210         ERA*    PROG          CHECK PROGRAMMER NO.     
      00366 -0100 00 0 00372         TNZ     *+4           NOPE-- 
      00367 -0500 60 0 02207         CAL*    PROB          YES--CHECK ALSO PROB NO  
      00370  0322 00 0 02261         ERA     PROBN         ..     
      00371  0100 00 0 00403         TZE     FOUND         HURRAY...    
      00372  1 77777 1 00373         TXI     *+1,1,-1      NOPE--MOVE ON TO NEXT ONE
      00373  3 00000 1 00364  UMAX   TXH     LOOKUP,1,**   DONT EXCEED TABLE LIMITS--QUIT IF TOP
                  
                                             HERE IF NOT IN TABLE 
                  
                  
      00374  0600 60 0 02206         STZ*    NAME          MAKE A PLACE AT THE TOP  
      00375  0600 60 0 02201         STZ*    TU1
      00376  0600 60 0 02202         STZ*    TU2
      00377  0600 60 0 02203         STZ*    TU3
      00400  0600 60 0 02204         STZ*    TU4
      00401  0600 60 0 02205         STZ*    TU5
      00402  0020 00 0 00416         TRA     GETALT        AND GET THE ALLOTTED TIMES     
      00403  0500 60 0 02206  FOUND  CLA*    NAME          CHECK THE NAME--IF -1,   
      00404  0400 00 0 02362         ADD     =1            THEN WE'VE USED THIS ONE BEFORE
      00405  0100 00 0 00351         TZE     RDACCT        YES--SKIP IT 
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 8     
                  
      00406 -0500 00 0 02261         CAL     PROBN         GET THE PROBLEM NO.
      00407  0322 00 0 02060         ERA     MESS4+1       CHECK AGAINST LAST PROB NO     
      00410 -0100 00 0 00416         TNZ     GETALT        NOT THE SAME--PROCEED    
      00411  0560 00 0 02300         LDQ     A+1           GET THE PROGRAMMER NO.   
      00412 -0773 00 0 00006         RQL     6             CENTER IT    
      00413 -0130 00 0 00000         XCL                   INTO THE AC  
      00414  0322 00 0 02061         ERA     MESS4+2       AND CHECK AGAINST LAST PROG NO 
      00415  0100 00 0 00351         TZE     RDACCT        SAME--SKIP THIS ONE
                  
                                             GET THE ALLOTED TIMES
                  
      00416 -0500 00 0 02317  GETALT CAL     A+16     
      00417  0560 00 0 02320         LDQ     A+17     
      00420 -0763 00 0 00014         LGL     12 
      00421  0767 00 0 00007         ALS     7  
      00422  0771 00 0 00007         ARS     7  
      00423 -0501 00 0 02416         ORA     =H 00000 
      00424  0602 00 0 02221         SLW     T1            THERE IS THE FIRST SHIFT ALLOTMENT   
      00425 -0500 00 0 02320         CAL     A+17     
      00426  0560 00 0 02321         LDQ     A+18     
      00427 -0763 00 0 00006         LGL     6  
      00430  0767 00 0 00007         ALS     7  
      00431  0771 00 0 00007         ARS     7  
      00432 -0501 00 0 02416         ORA     =H 00000 
      00433  0602 00 0 02222         SLW     T2            AND SECOND SHIFT   
      00434 -0500 00 0 02321         CAL     A+18     
      00435  0767 00 0 00007         ALS     7  
      00436  0771 00 0 00007         ARS     7  
      00437 -0501 00 0 02416         ORA     =H 00000 
      00440  0602 00 0 02223         SLW     T3            THIRD SHIFT  
      00441 -0500 00 0 02322         CAL     A+19     
      00442  0771 00 0 00006         ARS     6  
      00443 -0501 00 0 02416         ORA     =H 00000 
      00444  0602 00 0 02224         SLW     T4            AND FOURTH SHIFT   
      00445 -0500 00 0 02323         CAL     A+20          GET FIFTH (FIB) SHIFT ALLOTTED 
      00446  0771 00 0 00014         ARS     12 
      00447 -0501 00 0 02424         ORA     =H  0000 
      00450  0602 00 0 02225         SLW     T5 
      00451                          UPBCD   T1,TT1        ADD ALLOTTED TIMES TO TOTALS   
      00455                          UPBCD   T2,TT2   
      00461                          UPBCD   T3,TT3   
      00465                          UPBCD   T4,TT4   
      00471                          UPBCD   T5,TT5   
      00475  0500 60 0 02201         CLA*    TU1           GET TOTAL TIME USED FIGURES PER SHIFT
      00476  0400 00 0 02226         ADD     TTU1     
      00477  0601 00 0 02226         STO     TTU1     
      00500  0500 60 0 02202         CLA*    TU2
      00501  0400 00 0 02227         ADD     TTU2     
      00502  0601 00 0 02227         STO     TTU2     
      00503  0500 60 0 02203         CLA*    TU3
      00504  0400 00 0 02230         ADD     TTU3     
      00505  0601 00 0 02230         STO     TTU3     
      00506  0500 60 0 02204         CLA*    TU4
      00507  0400 00 0 02231         ADD     TTU4     
      00510  0601 00 0 02231         STO     TTU4     
      00511  0500 60 0 02205         CLA*    TU5
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 9     
                  
      00512  0400 00 0 02232         ADD     TTU5     
      00513  0601 00 0 02232         STO     TTU5     
      00514  0074 00 4 00021         TSX     OPEN,4   
      00515  3 00000 0 02343         PTH     R  
      00516  3 00000 0 02261         PTH     PROBN    
      00517  3 00000 0 02300         PTH     A+1
      00520  3 00000 0 02361         PTH     =0 
      00521  3 00000 0 02361         PTH     =0 
      00522  3 00000 0 00525         PTH     NOUFD         IF ERROR ON OPEN OF U.F.D.     
      00523  3 00000 0 02341         PTH     N  
      00524  0020 00 0 00534         TRA     UFDFND        IF FOUND     
      00525  0600 00 0 02260  NOUFD  STZ     DRUM     
      00526  0600 00 0 02255         STZ     USED     
      00527  0600 00 0 02256         STZ     ALLOT    
      00530  0500 00 0 02340         CLA     USRCNT   
      00531  0400 00 0 02362         ADD     =1            UPDATE USER COUNT  
      00532  0601 00 0 02340         STO     USRCNT   
      00533  0020 00 0 00601         TRA     BACK1         AND SKIP ALL THE STORAGE BOOKKEEPING 
      00534  0074 00 4 00022  UFDFND TSX     RDFILE,4      THIS IS NORMAL--GET THE DISK FIGURES 
      00535  3 00000 0 02261         PTH     PROBN         READ THIS GUYS U.F.D. TO 
      00536  3 00000 0 02300         PTH     A+1           GET HIS DISK ALLOTMENT   
      00537  3 00000 0 02361         PTH     =0            AND USAGE    
      00540  3 00003 0 02267         PTH     B,,3     
      00541  3 00000 0 00543         PTH     *+2           ERROR RETURN 
      00542  3 00000 0 02341         PTH     N  
      00543  0074 00 4 00023         TSX     CLOSE,4       CLOSE THE U.F.D.   
      00544  3 00000 0 02261         PTH     PROBN    
      00545  3 00000 0 02300         PTH     A+1
      00546  0500 00 0 02270         CLA     B+1           GET THE DISK FIGURES     
      00547 -0765 00 0 00022         LGR     18            SPLIT THEM   
      00550  0601 00 0 02255         STO     USED     
      00551 -0773 00 0 00022         RQL     18 
      00552 -0600 00 0 02256         STQ     ALLOT    
      00553  0074 00 4 00017         TSX     FSTATE,4      GET THE SIZE OF THE U.F.D.     
      00554  3 00000 0 02261         PTH     PROBN    
      00555  3 00000 0 02300         PTH     A+1
      00556  3 00010 0 02267         PTH     B,,8     
      00557  0500 00 0 02267         CLA     B             GET THE UF.D. SIZE 
      00560  0400 00 0 02374         ADD     =431          HE WILL BE CHARGED FOR THE ODD RECORD
      00561  0131 00 0 00000         XCA  
      00562 -0754 00 0 00000         ZAC  
      00563  0221 00 0 02375         DVP     =432          GET NUMBER OF RECORDS    
      00564 -0600 00 0 02260         STQ     DRUM          AND SAVE THIS NUMBER     
      00565  0500 00 0 02257         CLA     DRMTOT        ADD TO TOTAL FOR THIS DEPARTMENT     
      00566  0400 00 0 02260         ADD     DRUM     
      00567  0601 00 0 02257         STO     DRMTOT   
      00570  0500 00 0 02340         CLA     USRCNT        UPDATE COUNT OF SUSCRIBERS WITH UFD'S
      00571  0400 00 0 02362         ADD     =1 
      00572  0601 00 0 02340         STO     USRCNT   
      00573  0500 00 0 02254         CLA     TALLOT        UPDATE DISK TOTAL ALLOTMENT    
      00574  0400 00 0 02256         ADD     ALLOT    
      00575  0601 00 0 02254         STO     TALLOT   
      00576  0500 00 0 02253         CLA     TUSED         AND UPDATE DISK TOTAL USED     
      00577  0400 00 0 02255         ADD     USED     
      00600  0601 00 0 02253         STO     TUSED    
      00601  0074 00 4 01771  BACK1  TSX     CONVRT,4      CONVERT THE DISK USED FIGURE TO BCD  
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 10    
                  
      00602  3 00000 0 02255         PTH     USED     
      00603  0601 00 0 02103         STO     MESS4+20      AND STORE IN THE LINE    
      00604  0074 00 4 01771         TSX     CONVRT,4      SAME FOR DISK ALLOTMENT  
      00605  3 00000 0 02256         PTH     ALLOT    
      00606  0601 00 0 02072         STO     MESS4+11 
      00607  0600 00 0 02251         STZ     TEMP          CLEAR TOTAL  
      00610                          UCSTIN  TU1,COST1
      00615                          UCSTIN  TU2,COST2
      00622                          UCSTIN  TU3,COST3     GET COST OF TOTAL TIME USED    
      00627                          UCSTIN  TU4,COST4
      00634                          UCSTIN  TU5,COST5
      00641  0400 00 0 02365         ADD     =30           ROUND TO NEAREST DOLLAR  
      00642  0131 00 0 00000         XCA  
      00643 -0754 00 0 00000         ZAC  
      00644  0221 00 0 02371         DVP     =60           GET TOTAL DOLLARS USED FOR TIME
      00645 -0600 00 0 02251         STQ     TEMP     
      00646  0074 00 4 01771         TSX     CONVRT,4      CONVERT THIS FIGURE TO BCD     
      00647  3 00000 0 02251         PTH     TEMP     
      00650  0601 00 0 02102         STO     MESS4+19      AND PUT INTO THE MESSAGE 
      00651  0560 00 0 02255         LDQ     USED          COMPUTE THE COST OF DISK STORAGE     
      00652  0200 00 0 00032         MPY     COSTD    
      00653  0131 00 0 00000         XCA  
      00654  0400 00 0 02376         ADD     =500000  
      00655  0131 00 0 00000         XCA  
      00656  0221 00 0 02377         DVP     =1000000      CONVERT TO DOLLARS 
      00657 -0600 00 0 02252         STQ     DSKDOL   
      00660                          CONIN   TU1,MESS4+13  INSERT THE USED TIMES    
      00665                          CONIN   TU2,MESS4+14   
      00672                          CONIN   TU3,MESS4+15   
      00677                          CONIN   TU4,MESS4+16   
      00704                          CONIN   TU5,MESS4+17   
      00711 -0500 00 0 02221         CAL     T1            PUT THE BCD ALLOTTED TIMES IN  
      00712  0602 00 0 02064         SLW     MESS4+5  
      00713 -0500 00 0 02222         CAL     T2 
      00714  0602 00 0 02065         SLW     MESS4+6  
      00715 -0500 00 0 02223         CAL     T3 
      00716  0602 00 0 02066         SLW     MESS4+7  
      00717 -0500 00 0 02224         CAL     T4 
      00720  0602 00 0 02067         SLW     MESS4+8  
      00721 -0500 00 0 02225         CAL     T5 
      00722  0602 00 0 02070         SLW     MESS4+9  
      00723 -0500 00 0 02277         CAL     A             GET PROGRAMMER NAME
      00724  0602 00 0 02062         SLW     MESS4+3       INTO THE MESSAGE   
      00725  0560 00 0 02300         LDQ     A+1           GET THE PROGRAMMER NUMBER
      00726 -0773 00 0 00006         RQL     6             CENTER IT    
      00727 -0600 00 0 02061         STQ     MESS4+2       AND IN IT GOES     
      00730 -0500 00 0 02261         CAL     PROBN         THIS ONE IS OBVIOUS
      00731  0602 00 0 02060         SLW     MESS4+1  
      00732  0074 00 4 00013         TSX     BCDEC,4       CONPUTE TOTAL TIME ALLOTTED    
      00733  3 00000 0 02221         PTH     T1 
      00734  0601 00 0 02251         STO     TEMP     
      00735  0074 00 4 00013         TSX     BCDEC,4  
      00736  3 00000 0 02222         PTH     T2 
      00737  0400 00 0 02251         ADD     TEMP     
      00740  0601 00 0 02251         STO     TEMP     
      00741  0074 00 4 00013         TSX     BCDEC,4  
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 11    
                  
      00742  3 00000 0 02223         PTH     T3 
      00743  0400 00 0 02251         ADD     TEMP     
      00744  0601 00 0 02251         STO     TEMP     
      00745  0074 00 4 00013         TSX     BCDEC,4  
      00746  3 00000 0 02224         PTH     T4 
      00747  0400 00 0 02251         ADD     TEMP     
      00750  0601 00 0 02251         STO     TEMP     
      00751  0074 00 4 00013         TSX     BCDEC,4  
      00752  3 00000 0 02225         PTH     T5 
      00753  0400 00 0 02251         ADD     TEMP     
      00754  0601 00 0 02251         STO     TEMP     
      00755  0074 00 4 01771         TSX     CONVRT,4      CONVERT TOTAL ALLOTMENT TO BCD 
      00756  3 00000 0 02251         PTH     TEMP     
      00757  0601 00 0 02071         STO     MESS4+10      AND STICK IN MESSAGE     
      00760  0500 60 0 02201         CLA*    TU1           GET TOTAL TIME USED
      00761  0400 60 0 02202         ADD*    TU2
      00762  0400 60 0 02203         ADD*    TU3
      00763  0400 60 0 02204         ADD*    TU4
      00764  0400 60 0 02205         ADD*    TU5
      00765  0601 00 0 02251         STO     TEMP     
      00766  0074 00 4 01771         TSX     CONVRT,4      CONVERT THIS TO BCD
      00767  3 00000 0 02251         PTH     TEMP     
      00770  0601 00 0 02101         STO     MESS4+18      AND IN IT GOES     
      00771  0500 00 0 02412         CLA     =-1           SET NAME FLAG TO SHOW WE'VE USED THIS ENTRY
      00772  0601 60 0 02206         STO*    NAME     
      00773  0074 00 4 01771         TSX     CONVRT,4      CONVERT THE DRUM TRACKS TO BCD 
      00774  3 00000 0 02260         PTH     DRUM     
      00775  0601 00 0 02104         STO     MESS4+21 
      00776  0560 00 0 02260         LDQ     DRUM          COMPUTE DRUM CHARGES     
      00777  0200 00 0 00033         MPY     COSTU    
      01000  0131 00 0 00000         XCA  
      01001  0400 00 0 02367         ADD     =50           ROUND OFF    
      01002  0131 00 0 00000         XCA  
      01003  0221 00 0 02372         DVP     =100          AND COMPUTE DRUM DOLLARS 
      01004  0131 00 0 00000         XCA  
      01005  0400 00 0 02252         ADD     DSKDOL   
      01006  0601 00 0 02251         STO     TEMP     
      01007  0074 00 4 01771         TSX     CONVRT,4      CONVERT TO BCD     
      01010  3 00000 0 02251         PTH     TEMP     
      01011  0601 00 0 02105         STO     MESS4+22      AND PUT IN MESSAGE 
      01012  0074 00 4 00003         TSX     BFWRIT,4      WRITE THE LINE INTO THE SUMARY FILE  
      01013  3 00000 0 02346         PTH     SU 
      01014  3 00000 0 02262         PTH     NAME2    
      01015  3 00027 0 02057         PTH     MESS4,,23
      01016  3 00000 0 01751         PTH     ERROR    
      01017  0020 00 0 00351         TRA     RDACCT        AND BACK FOR THE NEXT UACCNT TIMACC LINE   
                  
                  
                  
                  
                                             COME HERE WHEN A NEW PROBLEM NUMBER IS ENCOUNTERED 
                                             DURING THE SEARCH THRU UACCNT TIMACC   
                  
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 12    
                  
                  
      01020 -0500 00 0 02300  PROBIN CAL     A+1           GET THE NEW PROBLEM NUMBER     
      01021  0602 00 0 02261         SLW     PROBN         AND SAVE     
      01022 -0500 00 0 02302         CAL     A+3           PICK UP COMFIL 1 DISK ALLOTMENT
      01023  0602 00 0 02233         SLW     CF 
      01024 -0500 00 0 02305         CAL     A+6           GET COMFIL 2 DISK ALLOTMENT    
      01025  0560 00 0 02306         LDQ     A+7
      01026 -0763 00 0 00030         LGL     24 
      01027  0767 00 0 00006         ALS     6  
      01030  0771 00 0 00006         ARS     6  
      01031 -0501 00 0 02416         ORA     =H 00000 
      01032  0602 00 0 02234         SLW     CF+1     
      01033 -0500 00 0 02315         CAL     A+14          GET COMFIL 3 DISK ALLOTMENT    
      01034  0560 00 0 02316         LDQ     A+15     
      01035 -0763 00 0 00030         LGL     24 
      01036  0767 00 0 00006         ALS     6  
      01037  0771 00 0 00006         ARS     6  
      01040 -0501 00 0 02416         ORA     =H 00000 
      01041  0602 00 0 02235         SLW     CF+2     
      01042 -0500 00 0 02320         CAL     A+17          AND THE COMFIL 4 ALLOTMENT ALSO
      01043  0560 00 0 02321         LDQ     A+18     
      01044 -0763 00 0 00006         LGL     6  
      01045  0767 00 0 00006         ALS     6  
      01046  0771 00 0 00006         ARS     6  
      01047 -0501 00 0 02416         ORA     =H 00000 
      01050  0602 00 0 02236         SLW     CF+3     
      01051  0774 00 2 00004         AXT     4,2           GET THE COMFIL STORAGE FIGURES 
      01052 -0500 00 2 02237  CFLOOP CAL     CF+4,2        GET THE ALLOTMENT  
      01053 -0340 00 0 02427         LAS     =H     0      SEE IF ZERO  
      01054  0020 00 0 01056         TRA     *+2           NO--   
      01055  0020 00 0 01125         TRA     CFLS          YES--GO TO NEXT COMFIL   
      01056  0634 00 2 02341         SXA     N,2           FIND THE CURRENT COMFIL NUMBER 
      01057  0500 00 0 02364         CLA     =5 
      01060  0402 00 0 02341         SUB     N  
      01061 -0501 00 0 02405         ORA     =HCMFL00      TO GET THE BCD COMFIL NAME     
      01062  0602 00 0 02212         SLW     N3            THIS WILL BE USEFUL
      01063  0074 00 4 00021         TSX     OPEN,4        GO TO THE COMFIL   
      01064  3 00000 0 02343         PTH     R  
      01065  3 00000 0 02261         PTH     PROBN    
      01066  3 00000 0 02212         PTH     N3 
      01067  3 00000 0 02361         PTH     =0 
      01070  3 00000 0 02361         PTH     =0 
      01071  3 00000 0 01737         PTH     BADCF    
      01072  3 00000 0 02341         PTH     N  
      01073  0074 00 4 00022         TSX     RDFILE,4      GET THE DISK FIGURES     
      01074  3 00000 0 02261         PTH     PROBN    
      01075  3 00000 0 02212         PTH     N3 
      01076  3 00000 0 02361         PTH     =0 
      01077  3 00003 0 02267         PTH     B,,3     
      01100  3 00000 0 01102         PTH     *+2
      01101  3 00000 0 02341         PTH     N  
      01102  0074 00 4 00023         TSX     CLOSE,4  
      01103  3 00000 0 02261         PTH     PROBN    
      01104  3 00000 0 02212         PTH     N3 
      01105 -0754 00 0 00000         ZAC  
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 13    
                  
      01106  0560 00 0 02270         LDQ     B+1
      01107 -0763 00 0 00022         LGL     18 
      01110 -0773 00 0 00022         RQL     18 
      01111  0601 00 2 02237         STO     CF+4,2   
      01112 -0600 00 2 02243         STQ     CFALOT+4,2     
      01113  0074 00 4 00017         TSX     FSTATE,4      GET THE U.F.D. SIZE
      01114  3 00000 0 02261         PTH     PROBN    
      01115  3 00000 0 02212         PTH     N3 
      01116  3 00010 0 02267         PTH     B,,8     
      01117  0500 00 0 02267         CLA     B  
      01120  0400 00 0 02374         ADD     =431          CHARGE FOR ODD TRACKS    
      01121  0131 00 0 00000         XCA  
      01122 -0754 00 0 00000         ZAC  
      01123  0221 00 0 02375         DVP     =432          GET NUMBER OF TRACKS USED
      01124 -0600 00 2 02247         STQ     CFDRUM+4,2    AND STORE    
      01125  2 00001 2 01052  CFLS   TIX     CFLOOP,2,1    DO ALL 4 COMFILES  
      01126 -0500 00 0 02324         CAL     A+21          GET THE DEPARTMENT NAME  
      01127  0560 00 0 02325         LDQ     A+22     
      01130 -0763 00 0 00036         LGL     30 
      01131  0602 00 0 02247         SLW     NDEPT         AND STORE    
      01132 -0500 00 0 02250         CAL     DEPT          GET LAST DEPARTMENT
      01133  0100 00 0 01366         TZE     PRNDEP        ZERO IF FIRST PASS THROUGH     
      01134  0322 00 0 02247         ERA     NDEPT         SEE IF DEPT HAS CHANGED  
      01135  0100 00 0 01471         TZE     PRNCF         NO--PRINT OUT THE COMFIL INFO  
                  
                  
      01136  0074 00 4 01771         TSX     CONVRT,4      YES--SET UP THE TOTALS LINE FOR LAST DEPT  
      01137  3 00000 0 02253         PTH     TUSED         TOTAL DISK SPACE USED    
      01140  0601 00 0 02103         STO     MESS4+20      INTO THE TOTALS LINE     
      01141  0074 00 4 01771         TSX     CONVRT,4      GET THE BCD DISK SPACE TOTAL ALLOTMENT     
      01142  3 00000 0 02254         PTH     TALLOT   
      01143  0601 00 0 02072         STO     MESS4+11      AND STORE    
      01144  0560 00 0 02226         LDQ     TTU1          GET TOTAL DOLLARS SPENT ON TIME USED 
      01145  0200 00 0 00025         MPY     COST1    
      01146 -0600 00 0 02251         STQ     TEMP     
      01147  0560 00 0 02227         LDQ     TTU2     
      01150  0200 00 0 00026         MPY     COST2    
      01151  0131 00 0 00000         XCA  
      01152  0400 00 0 02251         ADD     TEMP     
      01153  0601 00 0 02251         STO     TEMP     
      01154  0560 00 0 02230         LDQ     TTU3     
      01155  0200 00 0 00027         MPY     COST3    
      01156  0131 00 0 00000         XCA  
      01157  0400 00 0 02251         ADD     TEMP     
      01160  0601 00 0 02251         STO     TEMP     
      01161  0560 00 0 02231         LDQ     TTU4     
      01162  0200 00 0 00030         MPY     COST4    
      01163  0131 00 0 00000         XCA  
      01164  0400 00 0 02251         ADD     TEMP     
      01165  0601 00 0 02251         STO     TEMP     
      01166  0560 00 0 02232         LDQ     TTU5     
      01167  0200 00 0 00031         MPY     COST5    
      01170  0131 00 0 00000         XCA  
      01171  0400 00 0 02251         ADD     TEMP     
      01172  0400 00 0 02365         ADD     =30           ROUND OFF    
      01173  0131 00 0 00000         XCA  
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 14    
                  
      01174 -0754 00 0 00000         ZAC  
      01175  0221 00 0 02371         DVP     =60           CONVERT TO DOLLARS 
      01176 -0600 00 0 02251         STQ     TEMP     
      01177  0074 00 4 01771         TSX     CONVRT,4      CONVERT TO BCD     
      01200  3 00000 0 02251         PTH     TEMP     
      01201  0601 00 0 02102         STO     MESS4+19      AND ONTO THE LINE IT GOES
      01202  0560 00 0 02253         LDQ     TUSED         COMPUTE COST OF TOTAL DISK USAGE     
      01203  0200 00 0 00032         MPY     COSTD    
      01204  0131 00 0 00000         XCA  
      01205  0400 00 0 02376         ADD     =500000  
      01206  0131 00 0 00000         XCA  
      01207  0221 00 0 02377         DVP     =1000000 
      01210 -0600 00 0 02252         STQ     DSKDOL   
      01211  0600 00 0 02254         STZ     TALLOT        ZERO TOTALS FOR NEXT DEPARTMENT
      01212  0600 00 0 02253         STZ     TUSED    
      01213  0560 00 0 02340         LDQ     USRCNT        GET SUSCRIBER CHARGE     
      01214  0200 00 0 00034         MPY     COSTS    
      01215 -0600 00 0 02251         STQ     TEMP     
      01216  0074 00 4 01771         TSX     CONVRT,4      CONVERT TO BCD     
      01217  3 00000 0 02251         PTH     TEMP     
      01220  0601 00 0 02251         STO     TEMP     
      01221  0074 00 4 00010         TSX     LJUST,4       PUT IN A LEADING '$'     
      01222  3 00000 0 02251         PTH     TEMP     
      01223  0601 00 0 02251         STO     TEMP     
      01224 -0500 00 0 02251         CAL     TEMP     
      01225  0771 00 0 00006         ARS     6  
      01226 -0501 00 0 02414         ORA     =H$00000 
      01227  0602 00 0 02062         SLW     MESS4+3  
      01230 -0500 00 0 02435         CAL     =HS           CHANGE TO SAY 'TOTALS'   
      01231  0602 00 0 02061         SLW     MESS4+2  
      01232 -0500 00 0 02401         CAL     =H0TOTAL 
      01233  0602 00 0 02060         SLW     MESS4+1  
      01234  0074 00 4 01771         TSX     CONVRT,4 
      01235  3 00000 0 02226         PTH     TTU1          PUT IN TOTAL USED TIMES  
      01236  0601 00 0 02074         STO     MESS4+13 
      01237  0074 00 4 01771         TSX     CONVRT,4 
      01240  3 00000 0 02227         PTH     TTU2     
      01241  0601 00 0 02075         STO     MESS4+14 
      01242  0074 00 4 01771         TSX     CONVRT,4 
      01243  3 00000 0 02230         PTH     TTU3     
      01244  0601 00 0 02076         STO     MESS4+15 
      01245  0074 00 4 01771         TSX     CONVRT,4 
      01246  3 00000 0 02231         PTH     TTU4     
      01247  0601 00 0 02077         STO     MESS4+16 
      01250  0074 00 4 01771         TSX     CONVRT,4 
      01251  3 00000 0 02232         PTH     TTU5     
      01252  0601 00 0 02100         STO     MESS4+17 
      01253  0074 00 4 01771         TSX     CONVRT,4      PUT IN TOTAL ALLOTTED TIMES    
      01254  3 00000 0 02214         PTH     TT1
      01255  0601 00 0 02064         STO     MESS4+5  
      01256  0074 00 4 01771         TSX     CONVRT,4 
      01257  3 00000 0 02215         PTH     TT2
      01260  0601 00 0 02065         STO     MESS4+6  
      01261  0074 00 4 01771         TSX     CONVRT,4 
      01262  3 00000 0 02216         PTH     TT3
      01263  0601 00 0 02066         STO     MESS4+7  
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 15    
                  
      01264  0074 00 4 01771         TSX     CONVRT,4 
      01265  3 00000 0 02217         PTH     TT4
      01266  0601 00 0 02067         STO     MESS4+8  
      01267  0074 00 4 01771         TSX     CONVRT,4 
      01270  3 00000 0 02220         PTH     TT5
      01271  0601 00 0 02070         STO     MESS4+9  
      01272  0500 00 0 02226         CLA     TTU1          GET GRAND TOTAL TIME USED
      01273  0400 00 0 02227         ADD     TTU2     
      01274  0400 00 0 02230         ADD     TTU3     
      01275  0400 00 0 02231         ADD     TTU4     
      01276  0400 00 0 02232         ADD     TTU5     
      01277  0601 00 0 02251         STO     TEMP     
      01300  0074 00 4 01771         TSX     CONVRT,4 
      01301  3 00000 0 02251         PTH     TEMP          IN BCD 
      01302  0601 00 0 02101         STO     MESS4+18 
      01303  0500 00 0 02214         CLA     TT1           GET GRAND TOTAL ALLOTTED TIME  
      01304  0400 00 0 02215         ADD     TT2
      01305  0400 00 0 02216         ADD     TT3
      01306  0400 00 0 02217         ADD     TT4
      01307  0400 00 0 02220         ADD     TT5
      01310  0601 00 0 02251         STO     TEMP     
      01311  0074 00 4 01771         TSX     CONVRT,4      CONVERT TO BCD     
      01312  3 00000 0 02251         PTH     TEMP     
      01313  0601 00 0 02071         STO     MESS4+10 
      01314  0560 00 0 02257         LDQ     DRMTOT        COMPUTE COST OF DRUM SPACE FOR UFDS  
      01315  0200 00 0 00033         MPY     COSTU    
      01316  0131 00 0 00000         XCA  
      01317  0400 00 0 02367         ADD     =50           ROUND  
      01320  0131 00 0 00000         XCA  
      01321  0221 00 0 02372         DVP     =100          COST IN DOLLARS    
      01322  0131 00 0 00000         XCA  
      01323  0400 00 0 02252         ADD     DSKDOL   
      01324  0601 00 0 02251         STO     TEMP     
      01325  0074 00 4 01771         TSX     CONVRT,4      COST IN BCD DOLLARS
      01326  3 00000 0 02251         PTH     TEMP     
      01327  0601 00 0 02105         STO     MESS4+22 
      01330  0074 00 4 01771         TSX     CONVRT,4      DRM TOTAL TRACKS USED    
      01331  3 00000 0 02257         PTH     DRMTOT   
      01332  0601 00 0 02104         STO     MESS4+21 
      01333  0600 00 0 02214         STZ     TT1           CLEAR ALL OTHER TOTALS   
      01334  0600 00 0 02215         STZ     TT2
      01335  0600 00 0 02216         STZ     TT3
      01336  0600 00 0 02217         STZ     TT4
      01337  0600 00 0 02220         STZ     TT5
      01340  0600 00 0 02226         STZ     TTU1     
      01341  0600 00 0 02227         STZ     TTU2     
      01342  0600 00 0 02230         STZ     TTU3     
      01343  0600 00 0 02231         STZ     TTU4     
      01344  0600 00 0 02232         STZ     TTU5     
      01345  0600 00 0 02340         STZ     USRCNT   
      01346  0600 00 0 02257         STZ     DRMTOT   
      01347  0074 00 4 00003         TSX     BFWRIT,4      AND WRITE THE RECORD IN SUMARY 
      01350  3 00000 0 02346         PTH     SU 
      01351  3 00000 0 02262         PTH     NAME2    
      01352  3 00027 0 02057         PTH     MESS4,,23
      01353  3 00000 0 01751         PTH     ERROR         WE HOPE NOT  
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 16    
                  
      01354  0074 00 4 00007         TSX     RJUST,4       CHANGE THINGS AROUND A LITTLE  
      01355  3 00000 0 02250         PTH     DEPT          LIKE PUT THE DEPT ON THE LINE  
      01356  0601 00 0 02060         STO     MESS4+1       INSTEAD OF THE PROBLEM NUMBER  
      01357 -0500 00 0 02430         CAL     =H 
      01360  0602 00 0 02061         SLW     MESS4+2       AND BLANK OUT THE PROGRAMMER NUMBER  
      01361  0074 00 4 00003         TSX     BFWRIT,4      AND WRITE THIS LINE INTO TOTALS
      01362  3 00000 0 02347         PTH     TO 
      01363  3 00000 0 02262         PTH     NAME2    
      01364  3 00027 0 02057         PTH     MESS4,,23
      01365  3 00000 0 01751         PTH     ERROR    
                  
                  
                  
                                             COME HERE TO PUT IN NICE FRESH HEADING AT THE TOP  
                                             OF EACH DEPARTMENT PAGE    
                  
                  
      01366 -0500 00 0 02261  PRNDEP CAL     PROBN         CHECK TO PROBLEM NUMBER  
      01367  0322 00 0 02432         ERA     =H Z9999      IF 'Z9999' WE'RE DONE    
      01370  0100 00 0 01610         TZE     DONE          SEE--WHAT I TELL YOU     
      01371  0500 00 0 02211         CLA     DPTCNT        GET THE DEPARTMENT COUNT 
      01372 -0100 00 0 01430         TNZ     CNTDPT        IF ZERO,TOTALS NEEDS NEW HEADER
      01373 -0500 00 0 02402         CAL     =H1           EJECT TO NEW PAGE  
      01374  0602 00 0 02005         SLW     MESS1+1  
      01375 -0500 00 0 02347         CAL     TO 
      01376  0602 00 0 02006         SLW     MESS1+2  
      01377 -0500 00 0 02420         CAL     =H FOR   
      01400  0602 00 0 02007         SLW     MESS1+3  
      01401  0074 00 4 00003         TSX     BFWRIT,4      WRITE THE NEW TOTAL HEADER     
      01402  3 00000 0 02347         PTH     TO 
      01403  3 00000 0 02262         PTH     NAME2    
      01404  3 00021 0 02004         PTH     MESS1,,17
      01405  3 00000 0 01751         PTH     ERROR    
      01406 -0500 00 0 02346         CAL     SU            RESTORE THE WORD 'SUMARY'
      01407  0602 00 0 02007         SLW     MESS1+3  
      01410 -0500 00 0 02425         CAL     =H  ACCE 
      01411  0602 00 0 02032         SLW     MESS3+2       PUT 'ACCESS FEE' IN COLUMN HEADER    
      01412 -0500 00 0 02436         CAL     =HSS FEE 
      01413  0602 00 0 02033         SLW     MESS3+3  
      01414 -0500 00 0 02426         CAL     =H  DEPT      AND RESTORE OTHER HEADINGS     
      01415  0602 00 0 02031         SLW     MESS3+1  
      01416  0074 00 4 00003         TSX     BFWRIT,4 
      01417  3 00000 0 02347         PTH     TO 
      01420  3 00000 0 02262         PTH     NAME2    
      01421  3 00027 0 02030         PTH     MESS3,,23
      01422  3 00000 0 01751         PTH     ERROR    
      01423  0074 00 4 00003         TSX     BFWRIT,4 
      01424  3 00000 0 02347         PTH     TO 
      01425  3 00000 0 02262         PTH     NAME2    
      01426  3 00002 0 02106         PTH     MESS5,,2 
      01427  3 00000 0 01751         PTH     ERROR    
      01430  0500 00 0 02211  CNTDPT CLA     DPTCNT        UPDATE THE DEPARTMENT COUNT    
      01431  0400 00 0 02362         ADD     =1 
      01432  0601 00 0 02211         STO     DPTCNT   
      01433  0402 00 0 02370         SUB     =54           54 DEPARTMENTS ALLOWED ON ONE TOTALS PAGE  
      01434 -0100 00 0 01436         TNZ     *+2
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 17    
                  
      01435  0600 00 0 02211         STZ     DPTCNT        THIS WILL CAUSE A TOTALS HEADER NEXT PASS  
      01436 -0500 00 0 02402         CAL     =H1           SET UP TOTALS LINE IN SUMARY   
      01437  0602 00 0 02005         SLW     MESS1+1  
      01440 -0500 00 0 02247         CAL     NDEPT         NEW DEPARTMENT NAME
      01441  0602 00 0 02006         SLW     MESS1+2  
      01442  0074 00 4 00003         TSX     BFWRIT,4      WRITE THE HEADER INTO SUMARY   
      01443  3 00000 0 02346         PTH     SU 
      01444  3 00000 0 02262         PTH     NAME2    
      01445  3 00021 0 02004         PTH     MESS1,,17
      01446  3 00000 0 01751         PTH     ERROR    
      01447 -0500 00 0 02247         CAL     NDEPT         UPDATE CURRENT DEPARTMENT
      01450  0602 00 0 02250         SLW     DEPT     
      01451 -0500 00 0 02400         CAL     =H0 PROB 
      01452  0602 00 0 02031         SLW     MESS3+1  
      01453 -0500 00 0 02423         CAL     =H PROG  
      01454  0602 00 0 02032         SLW     MESS3+2  
      01455 -0500 00 0 02422         CAL     =H NAME  
      01456  0602 00 0 02033         SLW     MESS3+3  
      01457  0074 00 4 00003         TSX     BFWRIT,4      WRITE THE COLUMN HEADERS 
      01460  3 00000 0 02346         PTH     SU 
      01461  3 00000 0 02262         PTH     NAME2    
      01462  3 00027 0 02030         PTH     MESS3,,23
      01463  3 00000 0 01751         PTH     ERROR    
      01464  0074 00 5 00003         TSX     BFWRIT,5 
      01465  3 00000 0 02346         PTH     SU 
      01466  3 00000 0 02262         PTH     NAME2    
      01467  3 00002 0 02106         PTH     MESS5,,2 
      01470  3 00000 0 01751         PTH     ERROR    
                  
                  
                  
                                             COME HERE TO PRINT OUT THE COMMON FILE INFO  
                  
                  
      01471  0774 00 2 00004  PRNCF  AXT     4,2           SET UP FOR FOUR COMMON FILES   
      01472  0500 00 2 02243         CLA     CFALOT+4,2    GET ALLOTMENT FOR THIS COMMON FILE   
      01473  0100 00 0 01605         TZE     P             SKIP IF ZERO 
      01474  0601 00 0 02251         STO     TEMP     
      01475  0074 00 4 01771         TSX     CONVRT,4      CONVERT TO BCD     
      01476  3 00000 0 02251         PTH     TEMP     
      01477  0601 00 0 02072         STO     MESS4+11 
      01500  0500 00 2 02237         CLA     CF+4,2        GET DISK USED
      01501  0601 00 0 02251         STO     TEMP     
      01502  0074 00 4 01771         TSX     CONVRT,4      INTO BCD     
      01503  3 00000 0 02251         PTH     TEMP     
      01504  0601 00 0 02103         STO     MESS4+20 
      01505  0560 00 2 02237         LDQ     CF+4,2        COMPUT COST OF USED COMMON FILE SPACE
      01506  0200 00 0 00032         MPY     COSTD    
      01507  0131 00 0 00000         XCA  
      01510  0400 00 0 02376         ADD     =500000  
      01511  0131 00 0 00000         XCA  
      01512  0221 00 0 02377         DVP     =1000000 
      01513 -0600 00 0 02252         STQ     DSKDOL   
      01514  0500 00 2 02247         CLA     CFDRUM+4,2    DRUM SPACE USED FOR THE UFD    
      01515  0601 00 0 02251         STO     TEMP     
      01516  0074 00 4 01771         TSX     CONVRT,4      INTO BCD     
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 18    
                  
      01517  3 00000 0 02251         PTH     TEMP     
      01520  0601 00 0 02104         STO     MESS4+21 
      01521  0560 00 2 02247         LDQ     CFDRUM+4,2    FIND COST OF DRUM USAGE  
      01522  0200 00 0 00033         MPY     COSTU    
      01523  0131 00 0 00000         XCA  
      01524  0400 00 0 02367         ADD     =50           ROUND OFF    
      01525  0131 00 0 00000         XCA  
      01526  0221 00 0 02372         DVP     =100     
      01527  0131 00 0 00000         XCA  
      01530  0400 00 0 02252         ADD     DSKDOL   
      01531  0601 00 0 02251         STO     TEMP     
      01532  0074 00 4 01771         TSX     CONVRT,4      INTO BCD     
      01533  3 00000 0 02251         PTH     TEMP     
      01534  0601 00 0 02105         STO     MESS4+22 
      01535  0500 00 0 02254         CLA     TALLOT        UPDATE DISK ALLOTMENT TOTAL    
      01536  0400 00 2 02243         ADD     CFALOT+4,2     
      01537  0601 00 0 02254         STO     TALLOT   
      01540  0600 00 2 02243         STZ     CFALOT+4,2     
      01541  0500 00 0 02253         CLA     TUSED         AND DISK USED TOTAL
      01542  0400 00 2 02237         ADD     CF+4,2   
      01543  0601 00 0 02253         STO     TUSED    
      01544  0600 00 2 02237         STZ     CF+4,2   
      01545  0500 00 0 02257         CLA     DRMTOT        UPDATE DRUM TRACKS TOTAL 
      01546  0400 00 2 02247         ADD     CFDRUM+4,2     
      01547  0601 00 0 02257         STO     DRMTOT   
      01550  0600 00 2 02247         STZ     CFDRUM+4,2     
      01551 -0500 00 0 02430         CAL     =H            BLANK OUT THE REST OF THE LINE 
      01552  0602 00 0 02102         SLW     MESS4+19 
      01553  0602 00 0 02101         SLW     MESS4+18 
      01554  0602 00 0 02101         SLW     MESS4+18 
      01555  0602 00 0 02077         SLW     MESS4+16 
      01556  0602 00 0 02076         SLW     MESS4+15 
      01557  0602 00 0 02075         SLW     MESS4+14 
      01560  0602 00 0 02074         SLW     MESS4+13 
      01561  0602 00 0 02071         SLW     MESS4+10 
      01562  0602 00 0 02070         SLW     MESS4+9  
      01563  0602 00 0 02067         SLW     MESS4+8  
      01564  0602 00 0 02066         SLW     MESS4+7  
      01565  0602 00 0 02065         SLW     MESS4+6  
      01566  0602 00 0 02064         SLW     MESS4+5  
      01567  0602 00 0 02062         SLW     MESS4+3  
      01570  0634 00 2 02341         SXA     N,2           GET THE COMFIL NUMBER    
      01571  0500 00 0 02364         CLA     =5 
      01572  0402 00 0 02341         SUB     N  
      01573  0767 00 0 00006         ALS     6  
      01574 -0501 00 0 02417         ORA     =H CFL0  
      01575  0602 00 0 02061         SLW     MESS4+2       AND STORE    
      01576 -0500 00 0 02261         CAL     PROBN    
      01577  0602 00 0 02060         SLW     MESS4+1       IN GOES THE PROBLEM NUMBER     
      01600  0074 00 4 00003         TSX     BFWRIT,4      WRITE THE LINE     
      01601  3 00000 0 02346         PTH     SU 
      01602  3 00000 0 02262         PTH     NAME2    
      01603  3 00027 0 02057         PTH     MESS4,,23
      01604  3 00000 0 01751         PTH     ERROR    
      01605  2 00001 2 01472  P      TIX     PRNCF+1,2,1   DO ALL FOUR  
      01606  0020 00 0 00351         TRA     RDACCT        AND BACK FOR NEXT UACCNT TIMACC RECORD     
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 19    
                  
                  
                  
                                             COME HERE TO FINISH UP     
                  
                  
      01607  0761 00 0 00000  .CLOSE NOP  
      01610  0074 00 4 00016  DONE   TSX     ATTACH,4      GO HOME
      01611  3 00000 0 02263         PTH     HOME     
      01612  3 00000 0 02264         PTH     HOME+1   
      01613  0600 00 0 02265         STZ     FLAG          ZERO ON FIRST PASS 
      01614  0774 00 1 00000         AXT     0,1           SET TO START AT TOP OF TABLE   
                  
                                             THIS NEXT PART MOVES DOWN THE NAME LIST AND  
                                             CHECKS FOR NAMES THAT WERE NOT SET TO -1.    
                                             THIS MEANS THE ENTRY WAS IN TIMUSD TIMACC    
                                             BUT NOT IN UACCNT TIMACC   
                  
      01615  0500 60 0 02206  NF     CLA*    NAME     
      01616  0340 00 0 02412         CAS     =-1           CHECK FOR USED FLAG
      01617  0020 00 0 01621         TRA     *+2           NOT USED--PRINT THIS ONE OUT   
      01620  0020 00 0 01722         TRA     CATCH         NO ACTION REQUIRED 
      01621  0500 00 0 02265         CLA     FLAG          CHECK FLAG   
      01622 -0100 00 0 01646         TNZ     PC            NOT FIRST TIME THRU--NO HEADING REQUIRED   
      01623  0500 00 0 02362         CLA     =1            HEADING TO BE PRINTED--TURN OFF FLAG 
      01624  0601 00 0 02265         STO     FLAG     
      01625  0074 00 4 02352         TSX     WRFLX,4  
      01626  0 00012 0 02165         PZE     ERR4,,10 
      01627  0074 00 4 00003         TSX     BFWRIT,4      WRITE THE HEADER IN THE FILE   
      01630  3 00000 0 02346         PTH     SU 
      01631  3 00000 0 02262         PTH     NAME2    
      01632  3 00011 0 02110         PTH     MESS6,,9 
      01633  3 00000 0 01751         PTH     ERROR    
      01634  0074 00 4 00003         TSX     BFWRIT,4 
      01635  3 00000 0 02346         PTH     SU 
      01636  3 00000 0 02262         PTH     NAME2    
      01637  3 00015 0 02121         PTH     MESS7,,13
      01640  3 00000 0 01751         PTH     ERROR    
      01641  0074 00 4 00003         TSX     BFWRIT,4 
      01642  3 00000 0 02346         PTH     SU 
      01643  3 00000 0 02262         PTH     NAME2    
      01644  3 00002 0 02106         PTH     MESS5,,2 
      01645  3 00000 0 01751         PTH     ERROR    
      01646 -0500 60 0 02201  PC     CAL*    TU1           PRINT THE JUNK FOR THIS POOR NEGLECTED MAN 
      01647  0602 00 0 02251         SLW     TEMP     
      01650  0074 00 4 01771         TSX     CONVRT,4 
      01651  3 00000 0 02251         PTH     TEMP     
      01652  0601 00 0 02146         STO     MESS8+8  
      01653 -0500 60 0 02202         CAL*    TU2           AS YOU CAN PROBABLY TELL, WE ARE     
      01654  0602 00 0 02251         SLW     TEMP     
      01655  0074 00 4 01771         TSX     CONVRT,4      IN THE PROCESS OF CONVERTING THE TIMES USED
      01656  3 00000 0 02251         PTH     TEMP          TO BCD AND LOADING THEM INTO A MESSAGE     
      01657  0601 00 0 02147         STO     MESS8+9       TO BE WRITTEN INTO THE FILE    
      01660 -0500 60 0 02203         CAL*    TU3
      01661  0602 00 0 02251         SLW     TEMP     
      01662  0074 00 4 01771         TSX     CONVRT,4 
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 20    
                  
      01663  3 00000 0 02251         PTH     TEMP     
      01664  0601 00 0 02150         STO     MESS8+10 
      01665 -0500 60 0 02204         CAL*    TU4
      01666  0602 00 0 02251         SLW     TEMP     
      01667  0074 00 4 01771         TSX     CONVRT,4 
      01670  3 00000 0 02251         PTH     TEMP     
      01671  0601 00 0 02151         STO     MESS8+11 
      01672 -0500 60 0 02205         CAL*    TU5
      01673  0602 00 0 02251         SLW     TEMP     
      01674  0074 00 4 01771         TSX     CONVRT,4 
      01675  3 00000 0 02251         PTH     TEMP     
      01676  0601 00 0 02152         STO     MESS8+12 
      01677 -0500 60 0 02206         CAL*    NAME          AND IN GOES THE REST OF THE STUFF    
      01700  0602 00 0 02144         SLW     MESS8+6  
      01701 -0500 60 0 02207         CAL*    PROB     
      01702  0602 00 0 02140         SLW     MESS8+2  
      01703 -0500 60 0 02210         CAL*    PROG     
      01704  0602 00 0 02142         SLW     MESS8+4  
      01705  0074 00 4 00003         TSX     BFWRIT,4      WRITE IT OUT 
      01706  3 00000 0 02346         PTH     SU 
      01707  3 00000 0 02262         PTH     NAME2    
      01710  3 00015 0 02136         PTH     MESS8,,13
      01711  3 00000 0 01751         PTH     ERROR    
      01712 -0500 60 0 02207         CAL*    PROB     
      01713  0602 00 0 02154         SLW     ERR1+1        PREPARE THE ONLINE ERROR MESSAGE     
      01714 -0500 60 0 02210         CAL*    PROG     
      01715  0602 00 0 02155         SLW     ERR1+2   
      01716 -0500 60 0 02206         CAL*    NAME     
      01717  0602 00 0 02153         SLW     ERR1     
      01720  0074 00 4 02352         TSX     WRFLX,4       AND WRITE IT 
      01721  0 00003 0 02153         PZE     ERR1,,3  
      01722  1 77777 1 01723  CATCH  TXI     *+1,1,-1 
      01723  3 00000 1 01615  UMAX1  TXH     NF,1,**       WE SET THE LIMIT LONG AGO
      01724  0074 00 4 00001         TSX     BFCLOS,4      CLOSE THE FILES    
      01725  3 00000 0 02347         PTH     TO 
      01726  3 00000 0 02262         PTH     NAME2    
      01727  0074 00 4 00001         TSX     BFCLOS,4 
      01730  3 00000 0 02346         PTH     SU 
      01731  3 00000 0 02262         PTH     NAME2    
      01732  0074 00 4 00001         TSX     BFCLOS,4 
      01733  3 00000 0 02342         PTH     UA 
      01734  3 00000 0 02345         PTH     TA 
      01735  0074 00 4 02356         TSX     CHNCOM,4      AND EXIT     
      01736  3 00000 0 02361         PTH     =0            ...    
                  
                  
                  
                  
                                             COME HERE IF A COMFILE DOESN'T EXIST WHAT SHOULD   
                  
                  
      01737  0074 00 4 00014  BADCF  TSX     PRNTER,4      WHAT CAN I SAY--   
      01740  3 00000 0 02366         PTH     =O61     
      01741  0600 00 2 02243         STZ     CFALOT+4,2     
      01742  0600 00 2 02237         STZ     CF+4,2   
      01743  0600 00 2 02247         STZ     CFDRUM+4,2     
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 21    
                  
      01744  0020 00 0 01125         TRA     CFLS     
                  
                  
      01745  0600 00 0 02266  LNKERR STZ     LNKFLG        HERE IF ERROR IN LINK    
      01746  0500 00 0 02341         CLA     N             GET ERROR CODE     
      01747  0402 00 0 02363         SUB     =3            SEE IF ERROR CODE 3(FILE THERE)
 T    01750  0074 00 0 00151         TSX     TUOPEN        YES--ALL IS OK     
                  
                  
                                             HERE IF AN ERROR IN THE BF-ROUTINES    
                  
      01751  0074 00 4 00014  ERROR  TSX     PRNTER,4 
      01752  3 00000 0 02373         PTH     =O375    
                  
                                             COME HERE IF A BREAK CHARACTER IS SENT 
                  
      01753  0074 00 4 00016  BREAK  TSX     ATTACH,4      GO HOME
      01754  3 00000 0 02263         PTH     HOME     
      01755  3 00000 0 02264         PTH     HOME+1   
      01756  0074 00 4 00001         TSX     BFCLOS,4 
      01757  3 00000 0 02346         PTH     SU 
      01760  3 00000 0 02262         PTH     NAME2    
      01761  0074 00 4 00001         TSX     BFCLOS,4 
      01762  3 00000 0 02347         PTH     TO 
      01763  3 00000 0 02262         PTH     NAME2    
      01764  0074 00 4 00001         TSX     BFCLOS,4 
      01765  3 00000 0 02342         PTH     UA 
      01766  3 00000 0 02345         PTH     TA 
      01767  0074 00 4 02356         TSX     CHNCOM,4 
      01770  3 00000 0 02361         PTH     =0 
                  
                  
                  
                  
                  
                                             THIS IS SUBROUTINE 'CONVRT' WHICH WAS USED   
                                             AT LEAST 67 ZILLION TIMES ABOVE--
                                             IS CONVERTS FROM BINARY TO BCD WITH LEADING  
                                             BLANKS   
                  
                  
      01771  0500 60 4 00001  CONVRT CLA*    1,4           GET ARG
      01772  0601 00 0 02003         STO     ARG           STO ARG
      01773  0634 00 4 02001         SXA     XR4,4         SXA  XR4,4   
      01774  0074 00 4 00012         TSX     DEFBC,4       CONVERT TO BCD     
      01775  3 00000 0 02003         PTH     ARG
      01776  0601 00 0 02003         STO     ARG           STO ARG
      01777  0074 00 4 00011         TSX     BZEL,4        BLANK THE LEADING ZEROES 
      02000  3 00000 0 02003         PTH     ARG
      02001  0774 00 4 00000  XR4    AXT     **,4          RESTORE INDEX
      02002  0020 00 4 00002         TRA     2,4           TRA 2,4
      02003                   ARG    BSS     1  
                  
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 22    
                  
                  
                  
                  
                                             * * * * * * * * * * * * * * * * * ** * 
                                             * VARIOUS MESSAGES TO BE WRITTEN  *    
                                             * 'MESS' TYPES GO INTO FILES.    
                                             * 'ERR' TYPES GO TO THE CONSOLE  
                                             * * * * * * * * * * * * * * * * * *    
                  
                  
      02004 -377777000020     MESS1  OCT     777777000020   
      02005  016060606060            BCI     8,1
      02006  606060606060     
      02007  606060606060     
      02010  606060606060     
      02011  606060606060     
      02012  606060606060     
      02013  606060606060     
      02014  606060606060     
      02015  606060602143            BCI     7,    ALLOTTED 
      02016  434663632524     
      02017  606060606060     
      02020  606060606060     
      02021  606060606060     
      02022  606060606060     
      02023  606060606060     
      02024  606064622524            BCI     1,  USED 
      02025 -377777000002     MESS2  OCT     777777000002   
      02026  006060606060            BCI     2,0
      02027  606060606060     
      02030 -377777000026     MESS3  OCT     777777000026   
      02031  006047514622            BCI     3,0 PROB PROG  NAME  
      02032  604751462760     
      02033  604521442560     
      02034 -206060575757            OCT     606060575757   
      02035  606060606001            BCI     5,     1     2     3     4     5 
      02036  606060606002     
      02037  606060606003     
      02040  606060606004     
      02041  606060606005     
      02042  606346632143            BCI     2, TOTAL  DISK 
      02043  606024316242     
      02044 -206060575757            OCT     606060575757   
      02045  606060606001            BCI     5,     1     2     3     4     5 
      02046  606060606002     
      02047  606060606003     
      02050  606060606004     
      02051  606060606005     
      02052  606346632143            BCI     5, TOTAL TIME$  DISK  DRUM STRG$ 
      02053  606331442553     
      02054  606024316242     
      02055  606024516444     
      02056  606263512753     
      02057 -377777000026     MESS4  OCT     777777000026   
      02060                          BSS     3  
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 23    
                  
      02063 -206060575757            OCT     606060575757   
      02064                          BSS     7  
      02073 -206060575757            OCT     606060575757   
      02074                          BSS     10 
      02106 -377777000001     MESS5  OCT     777777000001   
      02107  606060606060            BCI     1, 
      02110 -377777000010     MESS6  OCT     777777000010   
      02111  016060606060            BCI     6,1     THE FOLLOWING WERE IN TIMUSD   
      02112  633025602646     
      02113  434346663145     
      02114  276066255125     
      02115  603145606331     
      02116  446462246060     
      02117  633144212323            BCI     2,TIMACC ONLY  
      02120  604645437060     
      02121 -377777000014     MESS7  OCT     777777000014   
      02122  006060606060            BCI     4,0       PROB        PROG 
      02123  606047514622     
      02124  606060606060     
      02125  606047514627     
      02126  606060606060            BCI     4,        NAME         TU1 
      02127  606045214425     
      02130  606060606060     
      02131  606060636401     
      02132  606060636402            BCI     4,   TU2   TU3   TU4   TU5 
      02133  606060636403     
      02134  606060636404     
      02135  606060636405     
      02136 -377777000014     MESS8  OCT     777777000014   
      02137  606060606060            BCI     1, 
      02140                          BSS     1  
      02141  606060606060            BCI     1, 
      02142                          BSS     1  
      02143  606060606060            BCI     1, 
      02144                          BSS     1  
      02145  606060606060            BCI     1, 
      02146                          BSS     5  
      02153  444651256063     ERR1   BCI     4,MORE THAN 501 ENTRIES IN 
      02154  302145600500     
      02155  016025456351     
      02156  312562603145     
      02157  606331446462            BCI     3, TIMUSD TIMACC     
      02160  246063314421     
      02161  232360606060     
      02162                   ERR2   BSS     3  
      02165  633025602646     ERR4   BCI     4,THE FOLLOWING WERE IN TI 
      02166  434346663145     
      02167  276066255125     
      02170  603145606331     
      02171  446462246063            BCI     4,MUSD TIMACC BUT NOT IN U 
      02172  314421232360     
      02173  226463604546     
      02174  636031456064     
      02175  212323456360            BCI     2,ACCNT TIMACC 
      02176  633144212323     
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 24    
                  
                  
                  
                                             * * * * * * * * * * * * * * * * * * * * *    
                                             * RANDOM OTHER STORAGE     
                                             * * * * * * * * * * * *  * * * * * * *  *    
                  
      02177  0 00000 0 00660  BUFSIZ PZE     432
      02200  0 00000 0 00765  TBLSIZ PZE     501
      02201  0 00000 1 00000  TU1    PZE     **,1     
      02202  0 00000 1 00000  TU2    PZE     **,1     
      02203  0 00000 1 00000  TU3    PZE     **,1     
      02204  0 00000 1 00000  TU4    PZE     **,1     
      02205  0 00000 1 00000  TU5    PZE     **,1     
      02206  0 00000 1 00000  NAME   PZE     **,1     
      02207  0 00000 1 00000  PROB   PZE     **,1     
      02210  0 00000 1 00000  PROG   PZE     **,1     
                       00034  LINSIZ EQU     28 
      02211                   DPTCNT BSS     1  
      02212                   N3     BSS     1  
      02213                   I      BSS     1  
      02214                   TT1    BSS     1  
      02215                   TT2    BSS     1  
      02216                   TT3    BSS     1  
      02217                   TT4    BSS     1  
      02220                   TT5    BSS     1  
      02221                   T1     BSS     1  
      02222                   T2     BSS     1  
      02223                   T3     BSS     1  
      02224                   T4     BSS     1  
      02225                   T5     BSS     1  
      02226                   TTU1   BSS     1  
      02227                   TTU2   BSS     1  
      02230                   TTU3   BSS     1  
      02231                   TTU4   BSS     1  
      02232                   TTU5   BSS     1  
      02233                   CF     BSS     4  
      02237                   CFALOT BSS     4  
      02243                   CFDRUM BSS     4  
      02247                   NDEPT  BSS     1  
      02250                   DEPT   BSS     1  
      02251                   TEMP   BSS     1  
      02252                   DSKDOL BSS     1  
      02253                   TUSED  BSS     1  
      02254                   TALLOT BSS     1  
      02255                   USED   BSS     1  
      02256                   ALLOT  BSS     1  
      02257                   DRMTOT BSS     1  
      02260                   DRUM   BSS     1  
      02261                   PROBN  BSS     1  
      02262                   NAME2  BSS     1  
      02263                   HOME   BSS     2  
      02265                   FLAG   BSS     1  
      02266                   LNKFLG BSS     1  
      02267                   B      BSS     8  
      02277                   A      BSS     28 
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 25    
                  
      02333                   DATE   BSS     1  
      02334                   TIME   BSS     1  
      02335                   DAYS   BSS     1  
      02336                   MONTH  BSS     2  
      02340                   USRCNT BSS     1  
      02341                   N      BSS     1  
                  
                                             * * * * * * * *
                                             * BCI CONSTANTS
                                             * * * * * * * *
                  
      02342  642123234563     UA     BCI     1,UACCNT 
      02343  516060606060     R      BCI     1,R
      02344  666060606060     W      BCI     1,W
      02345  633144212323     TA     BCI     1,TIMACC 
      02346  626444215170     SU     BCI     1,SUMARY 
      02347  634663214362     TO     BCI     1,TOTALS 
      02350  633144646224     TU     BCI     1,TIMUSD 
      02351 -377777777777     FENCE  OCT     777777777777   
                  
                                             * * * * *
                                             * TIA'S *
                                             * * * * *
                  
      02352  0101 00 0 02437  WRFLX  TIA     =HWRFLX  
      02353  0101 00 0 02407  GETCOM TIA     =HGETCOM 
      02354  0101 00 0 02410  GETMEM TIA     =HGETMEM 
      02355  0101 00 0 02434  SETMEM TIA     =HSETMEM 
      02356  0101 00 0 02404  CHNCOM TIA     =HCHNCOM 
      02357  0101 00 0 02403  ATTNAM TIA     =HATTNAM 
      02360  0101 00 0 02433  SETBRK TIA     =HSETBRK 
                                     END  
                  
        LITERALS  
      02361  000000000000     
      02362  000000000001     
      02363  000000000003     
      02364  000000000005     
      02365  000000000036     
      02366  000000000061     
      02367  000000000062     
      02370  000000000066     
      02371  000000000074     
      02372  000000000144     
      02373  000000000375     
      02374  000000000657     
      02375  000000000660     
      02376  000001720440     
      02377  000003641100     
      02400  006047514622     
      02401  006346632143     
      02402  016060606060     
      02403  216363452144     
      02404  233045234644     
      02405  234426430000     
      02406  234426430002     
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 26    
                  
      02407  272563234644     
      02410  272563442544     
      02411  400000000000     
      02412  400000000001     
      02413  443326332433     
      02414  530000000000     
      02415  546060606060     
      02416  600000000000     
      02417  602326430060     
      02420  602646516060     
      02421  604401040106     
      02422  604521442560     
      02423  604751462760     
      02424  606000000000     
      02425  606021232325     
      02426  606024254763     
      02427  606060606000     
      02430  606060606060     
      02431  606321422545     
      02432  607111111111     
      02433  622563225142     
      02434  622563442544     
      02435  626060606060     
      02436  626260262525     
      02437  665126436760     
      02440  742631432534     
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2441 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
       2277      A   174,  201,  206,  210,  213,  222,  231,  240,  247,  354,  360,  364,  411,  416,  417,  425,  426
                     434,  441,  445,  517,  536,  545,  555,  723,  725, 1020, 1022, 1024, 1025, 1033, 1034, 1042, 1043
                    1126, 1127
       2267      B   540,  546,  556,  557, 1077, 1106, 1116, 1117
       2213      I   170,  200,  262,  270
       2341      N   146,  167,  176,  356,  523,  542, 1056, 1060, 1072, 1101, 1570, 1572, 1746
       1605      P  1473
       2343      R   152,  274,  515, 1064
       2344      W   311,  321
       2233     CF  1023, 1032, 1041, 1050, 1052, 1111, 1500, 1505, 1542, 1544, 1742
       2212     N3  1062, 1066, 1075, 1104, 1115
       1615     NF  1723
       1646     PC  1622
       2346     SU   322, 1013, 1350, 1406, 1443, 1460, 1465, 1601, 1630, 1635, 1642, 1706, 1730, 1757
       2221     T1   424,  452,  711,  733
       2222     T2   433,  456,  713,  736
       2223     T3   440,  462,  715,  742
       2224     T4   444,  466,  717,  746
       2225     T5   450,  472,  721,  752
       2345     TA   276,  353, 1734, 1766
       2347     TO   312, 1362, 1375, 1402, 1417, 1424, 1725, 1762
       2350     TU   136,  142,  153,  164,  172,  265
       2342     UA   275,  352, 1733, 1765
       2003    ARG  1772, 1775, 1776, 2000
       2214    TT1   453,  454, 1254, 1303, 1333
       2215    TT2   457,  460, 1257, 1304, 1334
       2216    TT3   463,  464, 1262, 1305, 1335
       2217    TT4   467,  470, 1265, 1306, 1336
       2220    TT5   473,  474, 1270, 1307, 1337
       2201    TU1   112,  220,  375,  475,  610,  660,  760, 1646
       2202    TU2   114,  227,  376,  500,  615,  665,  761, 1653
       2203    TU3   116,  236,  377,  503,  622,  672,  762, 1660
       2204    TU4   120,  245,  400,  506,  627,  677,  763, 1665
       2205    TU5   122,  254,  401,  511,  634,  704,  764, 1672
       2001    XR4  1773
        155   BUF1    70
        277   BUF2    71
        156   BUF3    73
        300   BUF4    74
        314   BUF5    76
        315   BUF6   100
        316   BUF7   102
        324   BUF8   104
        325   BUF9   106
         11   BZEL  1777
       1125   CFLS  1055, 1744
       2333   DATE   306,  343
       2335   DAYS    51,   53,   54,   57,   61,   64
       2250   DEPT  1132, 1355, 1450
       1610   DONE  1370
       2260   DRUM   525,  564,  566,  774,  776
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2153   ERR1   261, 1713, 1715, 1717, 1721
       2162   ERR2      
       2165   ERR4  1626
       2265   FLAG  1613, 1621, 1624
       2263   HOME   304, 1611, 1612, 1754, 1755
          5   LINK   135
        171   LOAD   162,  263
       2206   NAME   124,  205,  374,  403,  772, 1615, 1677, 1716
         21   OPEN   514, 1063
       2207   PROB   126,  207,  367, 1701, 1712
       2210   PROG   130,  211,  365, 1703, 1714
       2251   TEMP   202,  204,  607,  613,  614,  620,  621,  625,  626,  632,  633,  637,  640,  645,  647,  661,  663
                     666,  670,  673,  675,  700,  702,  705,  707,  734,  737,  740,  743,  744,  747,  750,  753,  754
                     756,  765,  767, 1006, 1010, 1146, 1152, 1153, 1157, 1160, 1164, 1165, 1171, 1176, 1200, 1215, 1217
                    1220, 1222, 1223, 1224, 1277, 1301, 1310, 1312, 1324, 1326, 1474, 1476, 1501, 1503, 1515, 1517, 1531
                    1533, 1647, 1651, 1654, 1656, 1661, 1663, 1666, 1670, 1673, 1675
       2334   TIME   307,  344
       2226   TTU1   476,  477, 1144, 1235, 1272, 1340
       2227   TTU2   501,  502, 1147, 1240, 1273, 1341
       2230   TTU3   504,  505, 1154, 1243, 1274, 1342
       2231   TTU4   507,  510, 1161, 1246, 1275, 1343
       2232   TTU5   512,  513, 1166, 1251, 1276, 1344
        373   UMAX   271
       2255   USED   526,  550,  577,  602,  651
       2256  ALLOT   527,  552,  574,  605
        601  BACK1   533
       1737  BADCF  1071
         13  BCDEC    52,  212,  221,  230,  237,  246,  451,  455,  461,  465,  471,  732,  735,  741,  745,  751
       1753  BREAK   134
        326  BUF10   110
       1722  CATCH  1620
         23  CLOSE   543, 1102
         25  COST1   611, 1145
         26  COST2   616, 1150
         27  COST3   623, 1155
         30  COST4   630, 1162
         31  COST5   635, 1167
         32  COSTD    65,   66,  652, 1203, 1506
         34  COSTS  1214
         33  COSTU    62,   63,  777, 1315, 1522
         12  DEFBC  1774
       1751  ERROR   160,  166,  177,  267,  302,  317,  327,  357, 1016, 1353, 1365, 1405, 1422, 1427, 1446, 1463, 1470
                    1604, 1633, 1640, 1645, 1711
       2351  FENCE    41,   46
        403  FOUND   371
         20  GETTM   305
         10  LJUST   203, 1221
       2004  MESS1   334,  336,  340,  342,  347,  350, 1374, 1376, 1400, 1404, 1407, 1437, 1441, 1445
       2025  MESS2      
       2030  MESS3  1411, 1413, 1415, 1421, 1452, 1454, 1456, 1462
       2057  MESS4   407,  414,  603,  606,  650,  664,  671,  676,  703,  710,  712,  714,  716,  720,  722,  724,  727
                     731,  757,  770,  775, 1011, 1015, 1140, 1143, 1201, 1227, 1231, 1233, 1236, 1241, 1244, 1247, 1252
                    1255, 1260, 1263, 1266, 1271, 1302, 1313, 1327, 1332, 1352, 1356, 1360, 1364, 1477, 1504, 1520, 1534
                    1552, 1553, 1554, 1555, 1556, 1557, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1575, 1577, 1603
       2106  MESS5  1426, 1467, 1644
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2110  MESS6  1632
       2121  MESS7  1637
       2136  MESS8  1652, 1657, 1664, 1671, 1676, 1700, 1702, 1704, 1710
       2336  MONTH    60,  335,  337
       2262  NAME2    40,   56,  137,  143,  154,  165,  173,  266,  313,  323, 1014, 1351, 1363, 1403, 1420, 1425, 1444
                    1461, 1466, 1602, 1631, 1636, 1643, 1707, 1726, 1731, 1760, 1763
       2247  NDEPT  1131, 1134, 1440, 1447
        525  NOUFD   522
       1471  PRNCF  1135, 1605
       2261  PROBN   370,  406,  516,  535,  544,  554,  730, 1021, 1065, 1074, 1103, 1114, 1366, 1576
          7  RJUST  1354
         35  START    24
       2253  TUSED   576,  600, 1137, 1202, 1212, 1541, 1543
       1723  UMAX1   272
       2352  WRFLX   260, 1625, 1720
         16 ATTACH   330, 1610, 1753
       2357 ATTNAM   303
          1 BFCLOS   264, 1724, 1727, 1732, 1756, 1761, 1764
          0 BFOPEN   151,  273,  310,  320
          2 BFREAD   171,  351
          3 BFWRIT  1012, 1347, 1361, 1401, 1416, 1423, 1442, 1457, 1464, 1600, 1627, 1634, 1641, 1705
       2177 BUFSIZ    72,   75,   77,  101,  103,  105,  107,  111
       2237 CFALOT  1112, 1472, 1536, 1540, 1741
       2243 CFDRUM  1124, 1514, 1521, 1546, 1550, 1743
       1052 CFLOOP  1125
       2356 CHNCOM  1735, 1767
       1430 CNTDPT  1372
       1771 CONVRT   601,  604,  646,  662,  667,  674,  701,  706,  755,  766,  773, 1007, 1136, 1141, 1177, 1216, 1234
                    1237, 1242, 1245, 1250, 1253, 1256, 1261, 1264, 1267, 1300, 1311, 1325, 1330, 1475, 1502, 1516, 1532
                    1650, 1655, 1662, 1667, 1674
          4 DAYMON    55
       2211 DPTCNT  1371, 1430, 1432, 1435
       2257 DRMTOT   565,  567, 1314, 1331, 1346, 1545, 1547
       2252 DSKDOL   657, 1005, 1210, 1323, 1513, 1530
         17 FSTATE   553, 1113
        416 GETALT   402,  410
       2353 GETCOM    36,   44
       2354 GETMEM    67
         55 GETMON    43,   50
       1607 .CLOSE   355
         34 LINSIZ   174, 2211
       1745 LNKERR   145
       2266 LNKFLG   150,  161, 1745
        264 LOADED   175
        364 LOOKUP   373
       1366 PRNDEP  1133
         14 PRNTER  1737, 1751
       1020 PROBIN   362
        351 RDACCT   405,  415, 1017, 1606
         22 RDFILE   534, 1073
       2360 SETBRK   133
       2355 SETMEM   132
         15 STORGE      
       2254 TALLOT   573,  575, 1142, 1211, 1535, 1537
       2200 TBLSIZ   113,  115,  117,  121,  123,  125,  127,  131
1       THIS ROUTINE PRODUCES THE MONTHLY SUMARY AND TOTALS                                      PAGE 4     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        151 TUOPEN  1750
        534 UFDFND   524
          6 UNLINK   163
       2340 USRCNT   530,  532,  570,  572, 1213, 1345
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1                                                                                                PAGE 1     
                  
                       00003         ENTRY   DAYMON   
                                     EXTERN  BCDEC    
                  
        TRANSFER VECTOR 
      00000  222324252360     BCDEC 
                  
            LINKAGE DIRECTOR  
      00001  000000000000     
      00002  242170444645     
                  
      00003  0634 00 1 00150  DAYMON SXA     XR1,1         SAVE THEM INDICESSESSS   
      00004  0634 00 2 00151         SXA     XR2,2    
      00005  0634 00 4 00152         SXA     XR4,4    
      00006  0500 00 4 00002         CLA     2,4           GET THEM ARGUMMMMMENTS   
      00007  0621 00 0 00157         STA     DAYS     
      00010  0500 00 4 00003         CLA     3,4
      00011  0621 00 0 00156         STA     MONTH    
      00012  0500 00 4 00001         CLA     1,4
      00013  0621 00 0 00154         STA     AMON     
      00014  0074 00 4 00162         TSX     GETIME,4      GET THE CURRENT DATE     
      00015 -0754 00 0 00000         ZAC  
      00016 -0763 00 0 00014         LGL     12            SHIFT MONTH INTO AC
      00017  0601 00 0 00173         STO     CURMON        AND STORE THIS MONTH     
      00020 -0754 00 0 00000         ZAC  
      00021 -0763 00 0 00014         LGL     12            GET TODAYS DATE    
      00022  0602 00 0 00174         SLW     CURDAY   
      00023 -0754 00 0 00000         ZAC  
      00024 -0763 00 0 00014         LGL     12            GET THE YEAR 
      00025  0601 00 0 00155         STO     TEMP     
      00026  0074 00 4 00000         TSX     BCDEC,4  
      00027  3 00000 0 00155         PTH     TEMP     
      00030  0131 00 0 00000         XCA  
      00031 -0754 00 0 00000         ZAC  
      00032  0221 00 0 00267         DVP     =4 
      00033  0601 00 0 00175         STO     LPYEAR        ZERO IF A LEAP-YEAR
      00034  0074 00 4 00000         TSX     BCDEC,4       CONVERT CURMON TO BINARY 
      00035  3 00000 0 00173         PTH     CURMON   
      00036  0601 00 0 00173         STO     CURMON   
      00037  0074 00 4 00000         TSX     BCDEC,4       CONVERT CURDAY TO BINARY 
      00040  3 00000 0 00174         PTH     CURDAY   
      00041  0601 00 0 00174         STO     CURDAY   
      00042 -0500 60 0 00154         CAL*    AMON          GET THE GIVEN MONTH
      00043 -0340 00 0 00273         LAS     =HLMONTH      SEE IF 'LMONTH'    
      00044  0020 00 0 00046         TRA     *+2           NO--   
      00045  0020 00 0 00047         TRA     LMONTH        YES--GO TAKE CARE OF THIS
      00046  0020 60 1 00200         TRA*    OPTION,1      USE XR1 TO DETERMIN WHICH OPTION WANTED    
      00047  0500 00 0 00173  LMONTH CLA     CURMON        GET CURRENT MONTH NUMBER 
      00050  0402 00 0 00266         SUB     =1            GO TO LAST MONTH   
      00051  0737 00 1 00000  MORE   PAC     ,1 
      00052  0767 00 0 00001         ALS     1  
      00053  0737 00 2 00000         PAC     ,2 
      00054 -0500 00 1 00201         CAL     ACCMON,1      GET THE ACC. NAME OF MONTH     
      00055  0602 60 0 00154         SLW*    AMON          AND RETURN IT
      00056  0500 00 2 00216         CLA     BCDMON,2      THE THE FULL BCD MONTH   
      00057  0560 00 2 00217         LDQ     BCDMON+1,2    ..     
      00060 -0603 60 0 00156         DST*    MONTH         AND RETURN IT ALSO 
1                                                                                                PAGE 2     
                  
      00061  0500 00 1 00250         CLA     DAYSM,1       GET THE NUMBER OF DAYS   
      00062  0020 00 0 00137         TRA     RETRN1        AND RETURN   
      00063  0774 00 1 77777  OPT2   AXT     -1,1          HERE TO FIND BCD MONTH AND DAYS FROM AMON  
      00064 -0500 60 0 00154         CAL*    AMON     
      00065 -0340 00 1 00201  LOOP0  LAS     ACCMON,1      FIND THE MONTH IN LIST   
      00066  0020 00 0 00070         TRA     *+2           MOT YET
      00067  0020 00 0 00073         TRA     CHKCUR        YES.YES
      00070  1 77777 1 00071         TXI     *+1,1,-1 
      00071  3 77763 1 00065         TXH     LOOP0,1,-13    
      00072  0020 00 0 00133         TRA     BADMON        TOO BAD--ILLEGAL MONTH GIVEN   
      00073  0756 00 1 00000  CHKCUR PCA     ,1            GET THE FOUND MONTH NUMBER     
      00074  0340 00 0 00173         CAS     CURMON        IS IT THIS MONTH   
      00075  0020 00 0 00051         TRA     MORE          NO--FINISH UP
      00076  0020 00 0 00100         TRA     OPT1          YES--HANDLE LIKE CURRENT MONTH 
      00077  0020 00 0 00051         TRA     MORE     
      00100  0500 00 0 00173  OPT1   CLA     CURMON        GET CURRENT MONTH AND DAYS     
      00101  0737 00 1 00000         PAC     ,1 
      00102  0767 00 0 00001         ALS     1  
      00103  0737 00 2 00000         PAC     ,2 
      00104 -0500 00 0 00274         CAL     =HTIMACC      RETURN 'TIMACC' FOR AMON 
      00105  0602 60 0 00154         SLW*    AMON     
      00106  0500 00 2 00216         CLA     BCDMON,2      GET BCD MONTH
      00107  0560 00 2 00217         LDQ     BCDMON+1,2     
      00110 -0603 60 0 00156         DST*    MONTH    
      00111  0500 00 0 00174         CLA     CURDAY        GET DAY OF MONTH   
      00112  0601 60 0 00157         STO*    DAYS     
      00113  0020 00 0 00150         TRA     RETRN2        AND OUT WE GO
      00114  0774 00 1 77777  OPT0   AXT     -1,1          HERE TO FIND MONTH FROM AMON   
      00115 -0500 60 0 00154         CAL*    AMON     
      00116 -0340 00 1 00201  LOOP1  LAS     ACCMON,1      SEARCH THE TABLE   
      00117  0020 00 0 00121         TRA     *+2           NOPE   
      00120  0020 00 0 00124         TRA     *+4           YUP    
      00121  1 77777 1 00122         TXI     *+1,1,-1 
      00122  3 77763 1 00116         TXH     LOOP1,1,-13    
      00123  0020 00 0 00133         TRA     BADMON        DIDN'T FIND IT, HUH
      00124  0754 00 1 00000         PXA     ,1            GET THW COUNT
      00125  0767 00 0 00001         ALS     1             TIMES TWO    
      00126  0734 00 1 00000         PAX     ,1 
      00127  0500 00 1 00216         CLA     BCDMON,1 
      00130  0560 00 1 00217         LDQ     BCDMON+1,1     
      00131 -0603 60 0 00156         DST*    MONTH    
      00132  0020 00 0 00150         TRA     RETRN2   
      00133  0074 00 4 00160  BADMON TSX     WRFLX,4  
      00134  0 00010 0 00163         PZE     ERROR,,8 
      00135  0074 00 4 00161         TSX     CHNCOM,4 
      00136  0 00000 0 00265         PZE     =0 
      00137  0131 00 0 00000  RETRN1 XCA  
      00140  0500 00 0 00175         CLA     LPYEAR        CHECK FOR LEAPYEAR 
      00141 -0100 00 0 00145         TNZ     NOLEAP   
      00142 -0763 00 0 00022         LGL     18            GET THE LEAPYEAR DAYS    
      00143  0601 60 0 00157         STO*    DAYS     
      00144  0020 00 0 00137         TRA     RETRN1   
      00145  0131 00 0 00000  NOLEAP XCA  
      00146 -0320 00 0 00270         ANA     =O777777 
      00147  0601 60 0 00157         STO*    DAYS     
      00150                   RETRN2 BSS     0  
1                                                                                                PAGE 3     
                  
      00150  0774 00 1 00000  XR1    AXT     **,1     
      00151  0774 00 2 00000  XR2    AXT     **,2     
      00152  0774 00 4 00000  XR4    AXT     **,4     
      00153  0020 00 4 00004         TRA     4,4
                  
                  
                  
      00154                   AMON   BSS     1  
      00155                   TEMP   BSS     1  
      00156                   MONTH  BSS     1  
      00157                   DAYS   BSS     1  
      00160  0101 00 0 00275  WRFLX  TIA     =HWRFLX  
      00161  0101 00 0 00271  CHNCOM TIA     =HCHNCOM 
      00162  0101 00 0 00272  GETIME TIA     =HGETIME 
      00163  273165254560     ERROR  BCI     8,GIVEN MONTH NOT FOUND IN TABLE 
      00164  444645633060     
      00165  454663602646     
      00166  644524603145     
      00167  606321224325     
      00170  606060606060     
      00171  606060606060     
      00172  606060606060     
      00173                   CURMON BSS     1  
      00174                   CURDAY BSS     1  
      00175                   LPYEAR BSS     1  
      00176  0 00000 0 00063         PZE     OPT2     
      00177  0 00000 0 00100         PZE     OPT1     
      00200  0 00000 0 00114  OPTION PZE     OPT0     
      00201  606060242523     ACCMON BCI     1,   DEC 
      00202  606060412145            BCI     1,   JAN 
      00203  606060262522            BCI     1,   FEB 
      00204  604421512330            BCI     1, MARCH 
      00205  602147513143            BCI     1, APRIL 
      00206  606060442170            BCI     1,   MAY 
      00207  606041644525            BCI     1,  JUNE 
      00210  606041644370            BCI     1,  JULY 
      00211  216427646263            BCI     1,AUGUST 
      00212  606062254763            BCI     1,  SEPT 
      00213  606060462363            BCI     1,   OCT 
      00214  606060454665            BCI     1,   NOV 
      00215  606060242523            BCI     1,   DEC 
      00216  606060602425     BCDMON BCI     2,    DECEMBER 
      00217  232544222551     
      00220  606060606041            BCI     2,     JANUARY 
      00221  214564215170     
      00222  606060602625            BCI     2,    FEBRUARY 
      00223  225164215170     
      00224  606060606060            BCI     2,       MARCH 
      00225  604421512330     
      00226  606060606060            BCI     2,       APRIL 
      00227  602147513143     
      00230  606060606060            BCI     2,         MAY 
      00231  606060442170     
      00232  606060606060            BCI     2,        JUNE 
      00233  606041644525     
      00234  606060606060            BCI     2,        JULY 
1                                                                                                PAGE 4     
                  
      00235  606041644370     
      00236  606060606060            BCI     2,      AUGUST 
      00237  216427646263     
      00240  606060622547            BCI     2,   SEPTEMBER 
      00241  632544222551     
      00242  606060606046            BCI     2,     OCTOBER 
      00243  236346222551     
      00244  606060604546            BCI     2,    NOVEMBER 
      00245  652544222551     
      00246  606060602425            BCI     2,    DECEMBER 
      00247  232544222551     
      00250  0 00037 0 00037  DAYSM  PZE     31,,31   
      00251  0 00037 0 00037         PZE     31,,31   
      00252  0 00035 0 00034         PZE     28,,29   
      00253  0 00037 0 00037         PZE     31,,31   
      00254  0 00036 0 00036         PZE     30,,30   
      00255  0 00037 0 00037         PZE     31,,31   
      00256  0 00036 0 00036         PZE     30,,30   
      00257  0 00037 0 00037         PZE     31,,31   
      00260  0 00037 0 00037         PZE     31,,31   
      00261  0 00036 0 00036         PZE     30,,30   
      00262  0 00037 0 00037         PZE     31,,31   
      00263  0 00036 0 00036         PZE     30,,30   
      00264  0 00037 0 00037         PZE     31,,31   
                                     END  
                  
        LITERALS  
      00265  000000000000     
      00266  000000000001     
      00267  000000000004     
      00270  000000777777     
      00271  233045234644     
      00272  272563314425     
      00273  434446456330     
      00274  633144212323     
      00275  665126436760     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        276 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        150    XR1     3
        151    XR2     4
        152    XR4     5
        154   AMON    13,   42,   55,   64,  105,  115
        157   DAYS     7,  112,  143,  147
         51   MORE    75,   77
        114   OPT0   200
        100   OPT1    76,  177
         63   OPT2   176
        155   TEMP    25,   27
          0  BCDEC    26,   34,   37
        250  DAYSM    61
        163  ERROR   134
         65  LOOP0    71
        116  LOOP1   122
        156  MONTH    11,   60,  110,  131
        160  WRFLX   133
        201 ACCMON    54,   65,  116
        133 BADMON    72,  123
        216 BCDMON    56,   57,  106,  107,  127,  130
         73 CHKCUR    67
        161 CHNCOM   135
        174 CURDAY    22,   40,   41,  111
        173 CURMON    17,   35,   36,   47,   74,  100
          3 DAYMON     0
        162 GETIME    14
         47 LMONTH    45
        175 LPYEAR    33,  140
        145 NOLEAP   141
        200 OPTION    46
        137 RETRN1    62,  144
        150 RETRN2   113,  132
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




SYSLST   BCD 09/20/68 0223.5   13100         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE    SYSL   MAD            02/15/68    1850.5
-                 
                      PROGRAM TO ASSEMBLE MODULES FROM LOAD LISTS                                      LM00001    
                           D.R. WIDRIG  OCT. 1966                                                      LM00002    
                                                                                                       LM00003    
                      LOADING INSTRUCTIONS                                                             LM00004    
                           MAD SYSL (LIST)                                                             LM00005    
                           FAP GETBUF (LIST)                                                           LM00006    
                           FAP SETC (LIST)                                                             LM00007    
                           LAED NCLOAD SYSL GETBUF SETC                                                LM00008    
                                (SQZ) (SRCH) XLIBE                                                     LM00009    
                           SAVE SYSLST                                                                 LM00010    
                           R SYSLST N1 -PRGN-                                                          LM00011    
                                                                                                       LM00012    
                  NORMAL MODE IS INTEGER                                                          *001 LM00013    
                  DIMENSION BUFF1(0),BUFF2(0),BUFF3(0)                                            *002 LM00014    
                  DIMENSION UFDBUF(0),N1BUF(0)                                                    *003 LM00015    
                  DIMENSION LINE(14),V(2),A(20),B(20),DRAIN(7)                                    *004 LM00016    
                  EQUIVALENCE (SYSLST,A(19)),(N1,A(18)),(PRGN,A(17))                              *005 LM00017    
                  EQUIVALENCE (RLOC,A(16)),(SAVN1,A(14)),(SAVN2,A(13))                            *006 LM00018    
                  EQUIVALENCE (NAME1,B(19)),(CLASS,B(16))                                         *007 LM00019    
                                                                                                       LM00020    
                  VECTOR VALUES UFD = $U.F.D.$                                                    *008 LM00021    
                  VECTOR VALUES FILE = $(FILE)$                                                   *009 LM00022    
                  VECTOR VALUES WORK = $(WORK)$                                                   *010 LM00023    
                  VECTOR VALUES LIST = $(LIST)$                                                   *011 LM00024    
                  VECTOR VALUES CTSSLD = $CTSSLD$                                                 *012 LM00025    
                  VECTOR VALUES BCD = $   BCD$                                                    *013 LM00026    
                  VECTOR VALUES BSS = $   BSS$                                                    *014 LM00027    
                  VECTOR VALUES SAVED = $ SAVED$                                                  *015 LM00028    
                  VECTOR VALUES OUTPUT = $OUTPUT$                                                 *016 LM00029    
                  VECTOR VALUES RQUEST = $RQUEST$                                                 *017 LM00030    
                                                                                                       LM00031    
                  VECTOR VALUES M1416 = $ M1416$                                                  *018 LM00032    
                  VECTOR VALUES MZE = -0                                                          *019 LM00033    
                  VECTOR VALUES LTHWRK = 5                                                        *020 LM00034    
                  VECTOR VALUES ERCODE = 0                                                        *021 LM00035    
                  VECTOR VALUES FENCE = 777777777777K                                             *022 LM00036    
                  VECTOR VALUES A(20) = $RESUME$                                                  *023 LM00037    
                                                                                                       LM00038    
                  VECTOR VALUES TABLE = $   MAD$,$   MAD$,$(LIST)$,777777777777K,                 *024 LM00039    
                1      $   FAP$,$   FAP$,$(LIST)$,777777777777K,                                  *024 LM00040    
                2      $CRUNCH$,$ BEFAP$,$(CRUN)$,$(LIST)$,                                       *024 LM00041    
                3      $ ALGOL$,$   AED$,$(LIST)$,777777777777K,                                  *024 LM00042    
                4      777777777777K                                                              *024 LM00043    
                  VECTOR VALUES LINE(1) = $$,$$,$$,$$,$$,$$,$$,$$,$$,                             *025 LM00044    
                1      $ BCD  $,0,$ BCD  $,0,$PRINT $                                             *025 LM00045    
                                                                                                       LM00046    
                      GET AND CHECK ARGUMENTS                                                          LM00047    
                                                                                                       LM00048    
                  ATTNAM.(V(2)...2)                                                               *026 LM00049    
                  GETCLS.(A(19))                                                                  *027 LM00050    
                  FERRTN.(ERR1)                                                                   *028 LM00051    
                  PROGN = V(1)                                                                    *029 LM00052    
                                                                                                       LM00053    
                      FIRST VERIFY INITIAL STUFF                                                       LM00054    
                                                                                                       LM00055    
                  WHENEVER N1 .E. FENCE                                                           *030 LM00056    
                       PRMESS.($R SYSLST N1 -PRGN-$)                                              *031 LM00057    
                       CHNCOM.(0)                                                                 *032 LM00058    
                  END OF CONDITIONAL                                                              *033 LM00059    
                                                                                                       LM00060    
                      CHECK FOR INITIAL ENTRY OR LATER                                                 LM00061    
                                                                                                       LM00062    
                  WHENEVER PRGN .E. FENCE                                                         *034 LM00063    
                       PRGN = PROGN                                                               *035 LM00064    
                       RLOC = 1                                                                   *036 LM00065    
                       TRANSFER TO PHASE1                                                         *037 LM00066    
                  OTHERWISE                                                                       *038 LM00067    
                       PROGN = PRGN                                                               *039 LM00068    
                  END OF CONDITIONAL                                                              *040 LM00069    
                  WHENEVER RLOC .E. FENCE                                                         *041 LM00070    
                       RLOC = 1                                                                   *042 LM00071    
                       TRANSFER TO PHASE1                                                         *043 LM00072    
                  END OF CONDITIONAL                                                              *044 LM00073    
                  TRANSFER TO PHASE2                                                              *045 LM00074    
                                                                                                       LM00075    
                      PHASE1, GET LIST OF THINGS TO DO                                                 LM00076    
                                                                                                       LM00077    
      PHASE1      WHENEVER PROGN .NE. V(1), ATTACH.(M1416,PROGN)                                  *046 LM00078    
                  FSTATE.(UFD,FILE,DRAIN(0)...1)                                                  *047 LM00079    
                  FSTATE.(N1,CTSSLD,DRAIN(1)...1)                                                 *048 LM00080    
                  DRAIN(0) = DRAIN(0) - 3                                                         *049 LM00081    
                                                                                                       LM00082    
                      GET BUFFER AREAS AND START INPUT OF FILES                                        LM00083    
                                                                                                       LM00084    
                  GETBUF.(N1BUF,DRAIN(1))                                                         *050 LM00085    
                  OPEN.($R$,N1,CTSSLD)                                                            *051 LM00086    
                  RDFILE.(N1,CTSSLD,1,N1BUF(N1BUF+DRAIN(1))...DRAIN(1))                           *052 LM00087    
                                                                                                       LM00088    
                  GETBUF.(UFDBUF,DRAIN(0))                                                        *053 LM00089    
                  OPEN.($R$,UFD,FILE)                                                             *054 LM00090    
                  RDFILE.(UFD,FILE,4,UFDBUF(UFDBUF+DRAIN(0))...DRAIN(0))                          *055 LM00091    
                                                                                                       LM00092    
                      PREPARE FOR LATER USAGES                                                         LM00093    
                                                                                                       LM00094    
                  WHENEVER PROGN .NE. V(1)                                                        *056 LM00095    
                       LINK.(SYSLST,SAVED,M1416,V(1),MZE,MZE,104K,NERR0)                          *057 LM00096    
      NERR0            ATTACH.(M1416,V(1))                                                        *058 LM00097    
                  END OF CONDITIONAL                                                              *059 LM00098    
                                                                                                       LM00099    
                      GET BUFFERS FOR OUTPUT FILE                                                      LM00100    
                                                                                                       LM00101    
                  GETBUF.(BUFF1,432)                                                              *060 LM00102    
                  GETBUF.(BUFF2,432)                                                              *061 LM00103    
                  GETBUF.(BUFF3,432)                                                              *062 LM00104    
                                                                                                       LM00105    
                      WAIT FOR I/O, THEN SCRAP INPUT FILES                                             LM00106    
                                                                                                       LM00107    
                  FWAIT.(N1,CTSSLD)                                                               *063 LM00108    
                  FWAIT.(UFD,FILE)                                                                *064 LM00109    
                  RESETF.                                                                         *065 LM00110    
                                                                                                       LM00111    
                      PREPARE OUTPUT FILE                                                              LM00112    
                                                                                                       LM00113    
                  BFOPEN.($W$,WORK,LIST,BUFF1(BUFF1+432),BUFF2(BUFF2+432),                        *066 LM00114    
                1      BUFF3(BUFF3+432),ERR1)                                                     *066 LM00115    
                  TRFILE.(WORK,LIST,0)                                                            *067 LM00116    
                                                                                                       LM00117    
                      SELECT AN ITEM FROM LOAD LIST AND CLASSIFY IT                                    LM00118    
                                                                                                       LM00119    
                  THROUGH LOOP3, FOR I = DRAIN(1),-14,(I.LE.0)                                    *068 LM00120    
                       OFFST1 = N1BUF + I                                                         *069 LM00121    
                                                                                                       LM00122    
                      LOOK THROUGH UFD FOR MATCH ON FIRST NAME                                         LM00123    
                                                                                                       LM00124    
                       THROUGH LOOP2, FOR J = DRAIN(0),-7,(J.LE.0)                                *070 LM00125    
                            WHENEVER UFDBUF(UFDBUF+J).NE.N1BUF(OFFST1),                           *071 LM00126    
                1                TRANSFER TO LOOP2                                                *071 LM00127    
                            OFFST2 = UFDBUF + J - 1                                               *072 LM00128    
                                                                                                       LM00129    
                      NOW LOOK UP SECOND NAME IN TABLE                                                 LM00130    
                                                                                                       LM00131    
                            THROUGH LOOP1, FOR K = 0,4,(TABLE(K).E.FENCE)                         *073 LM00132    
                                 WHENEVER UFDBUF(OFFST2).NE.TABLE(K),                             *074 LM00133    
                1                     TRANSFER TO LOOP1                                           *074 LM00134    
                                                                                                       LM00135    
                      WE HAVE IT, INSERT ACTION CODES INTO WORK LIST                                   LM00136    
                                                                                                       LM00137    
                                 DRAIN(7) = TABLE(K+1)                                            *075 LM00138    
                                 DRAIN(6) = N1BUF(OFFST1)                                         *076 LM00139    
                                 DRAIN(5) = TABLE(K+2)                                            *077 LM00140    
                                 DRAIN(4) = TABLE(K+3)                                            *078 LM00141    
                                 DRAIN(3) = TABLE(K)                                              *079 LM00142    
                                 BFWRIT.(WORK,LIST,DRAIN(7)...LTHWRK,ERR1)                        *080 LM00143    
                                 TRANSFER TO LOOP3                                                *081 LM00144    
                                                                                                       LM00145    
      LOOP1                 CONTINUE                                                              *082 LM00146    
      LOOP2            CONTINUE                                                                   *083 LM00147    
                                                                                                       LM00148    
                      NOT FOUND IN UFD, GRIPE                                                          LM00149    
                                                                                                       LM00150    
                       PRMESS.(N1BUF(OFFST1),$ NOT FOUND$)                                        *084 LM00151    
                                                                                                       LM00152    
      LOOP3       CONTINUE                                                                        *085 LM00153    
                                                                                                       LM00154    
                      END OF SCAN, CLOSE WORK LIST                                                     LM00155    
                                                                                                       LM00156    
                  BFCLOS.(WORK,LIST,ERR1)                                                         *086 LM00157    
                  TRANSFER TO START                                                               *087 LM00158    
                                                                                                       LM00159    
                      CONTROL ENTERS HERE TO CLEAN UP AFTER ASSEMBLY                                   LM00160    
                                                                                                       LM00161    
      PHASE2      WHOAMI.(LINE(2)...2)                                                            *088 LM00162    
                                                                                                       LM00163    
                      CHECK FOR BSS DECK AS EVIDENCE OF SUCCESS                                        LM00164    
                                                                                                       LM00165    
                  FSTATE.(SAVN1,BSS,DRAIN...0,FAILED)                                             *089 LM00166    
                                                                                                       LM00167    
                      OK, PLACE BSS DECK AND TIDY UP SOURCE FILE                                       LM00168    
                                                                                                       LM00169    
                  WHENEVER PROGN .NE. V(1)                                                        *090 LM00170    
                       MOVFIL.(SAVN1,BSS,M1416,PROGN,FAILED)                                      *091 LM00171    
                       UNLINK.(SAVN1,SAVN2,NERR5)                                                 *092 LM00172    
                  END OF CONDITIONAL                                                              *093 LM00173    
                                                                                                       LM00174    
                      MAKE OUTPUT RQUEST                                                               LM00175    
                                                                                                       LM00176    
      NERR5       FERRTN.(NORQ)                                                                   *094 LM00177    
                                                                                                       LM00178    
                  OPEN.($W$,OUTPUT,RQUEST)                                                        *095 LM00179    
                  GETBUF.(BUFF1,432)                                                              *096 LM00180    
                  BUFFER.(OUTPUT,RQUEST,BUFF1(BUFF1+432)...432)                                   *097 LM00181    
                                                                                                       LM00182    
                  LINE(13) = SAVN1                                                                *098 LM00183    
                  LINE(11) = SAVN1                                                                *099 LM00184    
                  WRFILE.(OUTPUT,RQUEST,0,LINE(14)...14)                                          *100 LM00185    
                  CLOSE.(OUTPUT,RQUEST)                                                           *101 LM00186    
                  TRANSFER TO START                                                               *102 LM00187    
                                                                                                       LM00188    
                      NO RQUEST, COMMENT AND CONTINUE                                                  LM00189    
                                                                                                       LM00190    
      NORQ        PRMESS.($REQUEST FOR$,SAVN1,$ BCD SKIPPED$)                                     *103 LM00191    
                  RESETF.                                                                         *104 LM00192    
                  TRANSFER TO START                                                               *105 LM00193    
                                                                                                       LM00194    
                      NO BSS, ASSEMBLY FAILED                                                          LM00195    
                                                                                                       LM00196    
      FAILED      PRMESS.($UNABLE TO PLACE$,SAVN1,$ BSS$)                                         *106 LM00197    
                  CHFILE.(BSS,SAVN1,MZE,SAVN1,BSS,START)                                          *107 LM00198    
                                                                                                       LM00199    
                      COMPILE NEXT ITEM ON LIST                                                        LM00200    
                                                                                                       LM00201    
      START       FERRTN.(ERR1)                                                                   *108 LM00202    
                                                                                                       LM00203    
                      SELECT ITEM FROM WORK LIST                                                       LM00204    
                                                                                                       LM00205    
                  OPEN.($R$,WORK,LIST)                                                            *109 LM00206    
      READ1       RDWAIT.(WORK,LIST,RLOC,B(20)...LTHWRK,REOF)                                     *110 LM00207    
                  RLOC = RLOC + LTHWRK                                                            *111 LM00208    
                                                                                                       LM00209    
                      FIRST, CLEAR OUT BCD FILE                                                        LM00210    
                                                                                                       LM00211    
                  CHFILE.(NAME1,BCD,1,MZE,MZE,NERR1)                                              *112 LM00212    
                  DELFIL.(NAME1,BCD,NERR1)                                                        *113 LM00213    
                                                                                                       LM00214    
                      NOW, CLEAR OUT BSS FILE                                                          LM00215    
                                                                                                       LM00216    
      NERR1       WHENEVER PROGN .NE. V(1), ATTACH.(M1416,PROGN)                                  *114 LM00217    
                  CHFILE.(NAME1,BSS,MZE,BSS,NAME1,NERR2)                                          *115 LM00218    
                                                                                                       LM00219    
                      CHECK CLEARING FOR SUCCESS                                                       LM00220    
                                                                                                       LM00221    
      NERR2       FSTATE.(NAME1,BSS,DRAIN...0,NERR3,ERCODE)                                       *116 LM00222    
      NERR3       WHENEVER (ERCODE .NE. 3), TRANSFER TO SKIPIT                                    *117 LM00223    
                                                                                                       LM00224    
                      SET UP SOURCE FILE AND CHECK IT                                                  LM00225    
                                                                                                       LM00226    
                  WHENEVER PROGN .NE. V(1)                                                        *118 LM00227    
                       ATTACH.(M1416,V(1))                                                        *119 LM00228    
                       LINK.(NAME1,CLASS,M1416,PROGN,MZE,MZE,104K,NERR4)                          *120 LM00229    
                  END OF CONDITIONAL                                                              *121 LM00230    
      NERR4       FSTATE.(NAME1,CLASS,DRAIN...0,SKIPIT)                                           *122 LM00231    
                  PRMESS.(NAME1,CLASS)                                                            *123 LM00232    
                                                                                                       LM00233    
                      ALL OK, SAVE NAMES                                                               LM00234    
                                                                                                       LM00235    
                  SAVN1 = NAME1                                                                   *124 LM00236    
                  SAVN2 = CLASS                                                                   *125 LM00237    
                  CLASS = FENCE                                                                   *126 LM00238    
                                                                                                       LM00239    
                      STUFF COMMAND BUFFERS AND GO                                                     LM00240    
                                                                                                       LM00241    
                  SETC.(B(20),0)                                                                  *127 LM00242    
                  SETC.(A(20),1)                                                                  *128 LM00243    
                  SCLC.(1,1)                                                                      *129 LM00244    
                  NCOM.(B(20),B(19))                                                              *130 LM00245    
                                                                                                       LM00246    
                      HERE WHEN FILE WILL NOT BE ASSEMBLED                                             LM00247    
                                                                                                       LM00248    
      SKIPIT      PRMESS.($ASSEMBLY OF $,NAME1,CLASS,$ OMITTED$)                                  *131 LM00249    
                  CHFILE.(BSS,NAME1,MZE,NAME1,BSS,NERR6)                                          *132 LM00250    
      NERR6       WHENEVER PROGN .NE. V(1), ATTACH.(M1416,V(1))                                   *133 LM00251    
                  TRANSFER TO READ1                                                               *134 LM00252    
                                                                                                       LM00253    
                      EOF ON WORK LIST, ALL DONE                                                       LM00254    
                                                                                                       LM00255    
      REOF        RESETF.                                                                         *135 LM00256    
                  DORMNT.                                                                         *136 LM00257    
                                                                                                       LM00258    
                      SOME ERRORS ARE FATAL                                                            LM00259    
                                                                                                       LM00260    
      ERR1        NCOM.($PRNTER$,FENCE)                                                           *137 LM00261    
                                                                                                       LM00262    
                  END OF PROGRAM                                                                  *138 LM00263    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01157 TRANSFER VECTOR LENGTH  00040 PROGRAM BEGINS    00301
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      A      00065 A 1        FAILED 00114   4        M1416  00203 A 1        NORQ   00127   4        SAVED  00213 A 1  
      BCD    00136 A 1        FENCE  00155 A 1        MZE    00204 A 1        OFFST1 00206   1        SAVN1  00047   1  
      B      00112 A 1        FILE   00156 A 1        N1BUF  00205 A 1        OFFST2 00207   1        SAVN2  00050   1  
      BSS    00137 A 1        I      00157   1        N1     00043   1        OUTPUT 00210 A 1        SKIPIT 00134   4  
      BUFF1  00140 A 1        J      00160   1        NAME1  00067   1        PHASE1 00130   4        START  00135   4  
      BUFF2  00141 A 1        K      00161   1        NERR0  00120   4        PHASE2 00131   4        SYSLST 00042   1  
      BUFF3  00142 A 1        LINE   00200 A 1        NERR1  00121   4        PRGN   00044   1        TABLE  00234 A 1  
      CLASS  00072   1        LIST   00201 A 1        NERR2  00122   4        PROGN  00211   1        UFDBUF 00235 A 1  
      CTSSLD 00143 A 1        LOOP1  00115   4        NERR3  00123   4        READ1  00132   4        UFD    00236 A 1  
      DRAIN  00153 A 1        LOOP2  00116   4        NERR4  00124   4        REOF   00133   4        V      00241 A 1  
      ERCODE 00154 A 1        LOOP3  00117   4        NERR5  00125   4        RLOC   00045   1        WORK   00242 A 1  
      ERR1   00113   4        LTHWRK 00202 A 1        NERR6  00126   4        RQUEST 00212 A 1                          
0FUNCTION DICTIONARY    
      ATTACH 00000   1        ATTNAM 00001   1        BFCLOS 00002   1        BFOPEN 00003   1        BFWRIT 00004   1  
      BUFFER 00005   1        CHFILE 00006   1        CHNCOM 00007   1        CLOSE  00010   1        DELFIL 00011   1  
      DORMNT 00012   1        EXIT   00013   1        FERRTN 00014   1        FSTATE 00015   1        FWAIT  00016   1  
      GETBUF 00017   1        GETCLS 00020   1        .SETUP 00021   1        LINK   00022   1        MOVFIL 00023   1  
      NCOM   00024   1        OPEN   00025   1        PRMESS 00026   1        RDFILE 00027   1        RDWAIT 00030   1  
      RESETF 00031   1        SCLC   00032   1        SETC   00033   1        TRFILE 00034   1        UNLINK 00035   1  
      WHOAMI 00036   1        WRFILE 00037   1                                                                          
0ABSOLUTE CONSTANTS     
 00264 -075145632551     00257 +252460606060     00273 -204644316363     00262 -037060462660     00255 +216262254422    
 00271 -202262626060     00254 +212325606060     00274 -206346604743     00277 -244521224325     00261 -023147472524    
 00270 -202223246062     00276 -236026465160     00265 -112550642562     00263 -066445246060     00272 -204546636026    
 00250 +000000000007     00251 +000000000016     00300 -266060606060     00253 +000000000660     00252 +000000000104    
 00247 +000000000004     00266 -116060606060     00246 +000000000003     00243 +000000000000     00260 -004751274540    
 00275 -226360450160     00267 -116062706243     00245 +000000000002     00244 +000000000001     00256 +233000000000    
0STATEMENT DICTIONARY   
 00113 TXL -301154001151       00114 TXL -300761000753       00115 TXL -300641000640       00116 TXL -300642000641      
 00117 TXL -300653000652       00120 TXL -300447000444       00121 TXL -301030001022       00122 TXL -301045001037      
 00123 TXL -301051001045       00124 TXL -301075001070       00125 TXL -300706000704       00126 TXL -301146001140      
 00127 TXL -300751000743       00130 TXL -300353000345       00131 TXL -300662000660       00132 TXL -301004000776      
 00133 TXL -301150001147       00134 TXL -301131001122       00135 TXL -300772000770                                    
0PROGRAM    
                 N'R                                                                001  LM00013
                 D'N BUFF1(0),BUFF2(0),BUFF3(0)                                     002  LM00014
                 D'N UFDBUF(0),N1BUF(0)                                             003  LM00015
                 D'N LINE(14),V(2),A(20),B(20),DRAIN(7)                             004  LM00016
                 E'E (SYSLST,A(19)),(N1,A(18)),(PRGN,A(17))                         005  LM00017
                 E'E (RLOC,A(16)),(SAVN1,A(14)),(SAVN2,A(13))                       006  LM00018
                 E'E (NAME1,B(19)),(CLASS,B(16))                                    007  LM00019
                 V'S UFD = $U.F.D.$                                                 008  LM00021
 00301 TSX +0 07400 4 00021    00236     -2 43326 3 32433                                                               
                 V'S FILE = $(FILE)$                                                009  LM00022
 00156     -3 42631 4 32534                                                                                             
                 V'S WORK = $(WORK)$                                                010  LM00023
 00242     -3 46646 5 14234                                                                                             
                 V'S LIST = $(LIST)$                                                011  LM00024
 00201     -3 44331 6 26334                                                                                             
                 V'S CTSSLD = $CTSSLD$                                              012  LM00025
 00143     +2 36362 6 24324                                                                                             
                 V'S BCD = $   BCD$                                                 013  LM00026
 00136     -2 06060 2 22324                                                                                             
                 V'S BSS = $   BSS$                                                 014  LM00027
 00137     -2 06060 2 26262                                                                                             
                 V'S SAVED = $ SAVED$                                               015  LM00028
 00213     -2 06221 6 52524                                                                                             
                 V'S OUTPUT = $OUTPUT$                                              016  LM00029
 00210     -0 66463 4 76463                                                                                             
                 V'S RQUEST = $RQUEST$                                              017  LM00030
 00212     -1 15064 2 56263                                                                                             
                 V'S M1416 = $ M1416$                                               018  LM00032
 00203     -2 04401 0 40106                                                                                             
                 V'S MZE = -0                                                       019  LM00033
 00204     -0 00000 0 00000                                                                                             
                 V'S LTHWRK = 5                                                     020  LM00034
 00202     +0 00000 0 00005                                                                                             
                 V'S ERCODE = 0                                                     021  LM00035
 00154     +0 00000 0 00000                                                                                             
                 V'S FENCE = 777777777777K                                          022  LM00036
 00155     -3 77777 7 77777                                                                                             
                 V'S A(20) = $RESUME$                                               023  LM00037
 00041     -1 12562 6 44425                                                                                             
                 V'S TABLE = $   MAD$,$   MAD$,$(LIST)$,777777777777K,              024  LM00039
                1     $   FAP$,$   FAP$,$(LIST)$,777777777777K,                     024  LM00040
                2     $CRUNCH$,$ BEFAP$,$(CRUN)$,$(LIST)$,                          024  LM00041
                3     $ ALGOL$,$   AED$,$(LIST)$,777777777777K,                     024  LM00042
                4     777777777777K                                                 024  LM00043
 00214     -3 77777 7 77777    00215     -3 77777 7 77777    00216     -3 44331 6 26334    00217     -2 06060 2 12524   
 00220     -2 02143 2 74643    00221     -3 44331 6 26334    00222     -3 42351 6 44534    00223     -2 02225 2 62147   
 00224     +2 35164 4 52330    00225     -3 77777 7 77777    00226     -3 44331 6 26334    00227     -2 06060 2 62147   
 00230     -2 06060 2 62147    00231     -3 77777 7 77777    00232     -3 44331 6 26334    00233     -2 06060 4 42124   
 00234     -2 06060 4 42124                                                                                             
                 V'S LINE(1) = $$,$$,$$,$$,$$,$$,$$,$$,$$,                          025  LM00044
                1     $ BCD  $,0,$ BCD  $,0,$PRINT $                                025  LM00045
 00162     -0 75131 4 56360    00163     +0 00000 0 00000    00164     -2 02223 2 46060    00165     +0 00000 0 00000   
 00166     -2 02223 2 46060    00167     -2 06060 6 06060    00170     -2 06060 6 06060    00171     -2 06060 6 06060   
 00172     -2 06060 6 06060    00173     -2 06060 6 06060    00174     -2 06060 6 06060    00175     -2 06060 6 06060   
 00176     -2 06060 6 06060    00177     -2 06060 6 06060                                                               
                 ATTNAM.(V(2)...2)                                                  026  LM00049
 00302 TSX +0 07400 4 00001    00303 TIX +2 00245 0 00237                                                               
                 GETCLS.(A(19))                                                     027  LM00050
 00304 TSX +0 07400 4 00020    00305 TXH +3 00000 0 00042                                                               
                 FERRTN.(ERR1)                                                      028  LM00051
 00306 TSX +0 07400 4 00014    00307 TXH +3 00000 0 00113                                                               
                 PROGN = V(1)                                                       029  LM00052
 00310 CLA +0 50000 0 00240    00311 STO +0 60100 0 00211                                                               
                 W'R N1 .E. FENCE                                                   030  LM00056
 00312 CLA +0 50000 0 00043    00313 SUB +0 40200 0 00155    00314 TNZ -0 10000 0 00323                                 
                      PRMESS.($R SYSLST N1 -PRGN-$)                                 031  LM00057
 00315 TSX +0 07400 4 00026    00316 TXH +3 00000 0 00267    00317 TXH +3 00000 0 00275    00320 TXH +3 00000 0 00260   
                      CHNCOM.(0)                                                    032  LM00058
 00321 TSX +0 07400 4 00007    00322 TXH +3 00000 0 00243                                                               
                 E'L                                                                033  LM00059
                 W'R PRGN .E. FENCE                                                 034  LM00063
 00323 CLA +0 50000 0 00044    00324 SUB +0 40200 0 00155    00325 TNZ -0 10000 0 00334                                 
                      PRGN = PROGN                                                  035  LM00064
 00326 CLA +0 50000 0 00211    00327 STO +0 60100 0 00044                                                               
                      RLOC = 1                                                      036  LM00065
 00330 CLA +0 50000 0 00244    00331 STO +0 60100 0 00045                                                               
                      T'O PHASE1                                                    037  LM00066
 00332 TRA +0 02000 0 00130                                                                                             
                 O'E                                                                038  LM00067
 00333 TRA +0 02000 0 00336                                                                                             
                      PROGN = PRGN                                                  039  LM00068
 00334 CLA +0 50000 0 00044    00335 STO +0 60100 0 00211                                                               
                 E'L                                                                040  LM00069
                 W'R RLOC .E. FENCE                                                 041  LM00070
 00336 CLA +0 50000 0 00045    00337 SUB +0 40200 0 00155    00340 TNZ -0 10000 0 00344                                 
                      RLOC = 1                                                      042  LM00071
 00341 CLA +0 50000 0 00244    00342 STO +0 60100 0 00045                                                               
                      T'O PHASE1                                                    043  LM00072
 00343 TRA +0 02000 0 00130                                                                                             
                 E'L                                                                044  LM00073
                 T'O PHASE2                                                         045  LM00074
 00344 TRA +0 02000 0 00131                                                                                             
      PHASE1     W'R PROGN .NE. V(1), ATTACH.(M1416,PROGN)                          046  LM00078
 00345 CLA +0 50000 0 00211    00346 SUB +0 40200 0 00240    00347 TZE +0 10000 0 00353    00350 TSX +0 07400 4 00000   
 00351 TXH +3 00000 0 00203    00352 TXH +3 00000 0 00211                                                               
                 FSTATE.(UFD,FILE,DRAIN(0)...1)                                     047  LM00079
 00353 TSX +0 07400 4 00015    00354 TXH +3 00000 0 00236    00355 TXH +3 00000 0 00156    00356 TIX +2 00244 0 00153   
                 FSTATE.(N1,CTSSLD,DRAIN(1)...1)                                    048  LM00080
 00357 TSX +0 07400 4 00015    00360 TXH +3 00000 0 00043    00361 TXH +3 00000 0 00143    00362 TIX +2 00244 0 00152   
                 DRAIN(0) = DRAIN(0) - 3                                            049  LM00081
 00363 CLA +0 50000 0 00153    00364 SUB +0 40200 0 00246    00365 STO +0 60100 0 00153                                 
                 GETBUF.(N1BUF,DRAIN(1))                                            050  LM00085
 00366 TSX +0 07400 4 00017    00367 TXH +3 00000 0 00205    00370 TXH +3 00000 0 00152                                 
                 OPEN.($R$,N1,CTSSLD)                                               051  LM00086
 00371 TSX +0 07400 4 00025    00372 TXH +3 00000 0 00266    00373 TXH +3 00000 0 00043    00374 TXH +3 00000 0 00143   
                 RDFILE.(N1,CTSSLD,1,N1BUF(N1BUF+DRAIN(1))...DRAIN(1))              052  LM00087
 00375 CLA +0 50000 0 00205    00376 ADD +0 40000 0 00152    00377 SUB +0 40200 0 00400    00400 TXH +3 00000 0 00205   
 00401 STA +0 62100 0 00406    00402 TSX +0 07400 4 00027    00403 TXH +3 00000 0 00043    00404 TXH +3 00000 0 00143   
 00405 TXH +3 00000 0 00244    00406 TIX +2 00152 0 00000                                                               
                 GETBUF.(UFDBUF,DRAIN(0))                                           053  LM00089
 00407 TSX +0 07400 4 00017    00410 TXH +3 00000 0 00235    00411 TXH +3 00000 0 00153                                 
                 OPEN.($R$,UFD,FILE)                                                054  LM00090
 00412 TSX +0 07400 4 00025    00413 TXH +3 00000 0 00266    00414 TXH +3 00000 0 00236    00415 TXH +3 00000 0 00156   
                 RDFILE.(UFD,FILE,4,UFDBUF(UFDBUF+DRAIN(0))...DRAIN(0))             055  LM00091
 00416 CLA +0 50000 0 00235    00417 ADD +0 40000 0 00153    00420 SUB +0 40200 0 00421    00421 TXH +3 00000 0 00235   
 00422 STA +0 62100 0 00427    00423 TSX +0 07400 4 00027    00424 TXH +3 00000 0 00236    00425 TXH +3 00000 0 00156   
 00426 TXH +3 00000 0 00247    00427 TIX +2 00153 0 00000                                                               
                 W'R PROGN .NE. V(1)                                                056  LM00095
 00430 CLA +0 50000 0 00211    00431 SUB +0 40200 0 00240    00432 TZE +0 10000 0 00447                                 
                      LINK.(SYSLST,SAVED,M1416,V(1),MZE,MZE,104K,NERR0)             057  LM00096
 00433 TSX +0 07400 4 00022    00434 TXH +3 00000 0 00042    00435 TXH +3 00000 0 00213    00436 TXH +3 00000 0 00203   
 00437 TXH +3 00000 0 00240    00440 TXH +3 00000 0 00204    00441 TXH +3 00000 0 00204    00442 TXH +3 00000 0 00252   
 00443 TXH +3 00000 0 00120                                                                                             
      NERR0           ATTACH.(M1416,V(1))                                           058  LM00097
 00444 TSX +0 07400 4 00000    00445 TXH +3 00000 0 00203    00446 TXH +3 00000 0 00240                                 
                 E'L                                                                059  LM00098
                 GETBUF.(BUFF1,432)                                                 060  LM00102
 00447 TSX +0 07400 4 00017    00450 TXH +3 00000 0 00140    00451 TXH +3 00000 0 00253                                 
                 GETBUF.(BUFF2,432)                                                 061  LM00103
 00452 TSX +0 07400 4 00017    00453 TXH +3 00000 0 00141    00454 TXH +3 00000 0 00253                                 
                 GETBUF.(BUFF3,432)                                                 062  LM00104
 00455 TSX +0 07400 4 00017    00456 TXH +3 00000 0 00142    00457 TXH +3 00000 0 00253                                 
                 FWAIT.(N1,CTSSLD)                                                  063  LM00108
 00460 TSX +0 07400 4 00016    00461 TXH +3 00000 0 00043    00462 TXH +3 00000 0 00143                                 
                 FWAIT.(UFD,FILE)                                                   064  LM00109
 00463 TSX +0 07400 4 00016    00464 TXH +3 00000 0 00236    00465 TXH +3 00000 0 00156                                 
                 RESETF.                                                            065  LM00110
 00466 TSX +0 07400 4 00031                                                                                             
                 BFOPEN.($W$,WORK,LIST,BUFF1(BUFF1+432),BUFF2(BUFF2+432),           066  LM00114
                1     BUFF3(BUFF3+432),ERR1)                                        066  LM00115
 00467 CLA +0 50000 0 00142    00470 ADD +0 40000 0 00253    00471 SUB +0 40200 0 00472    00472 TXH +3 00000 0 00142   
 00473 STA +0 62100 0 00514    00474 CLA +0 50000 0 00141    00475 ADD +0 40000 0 00253    00476 SUB +0 40200 0 00477   
 00477 TXH +3 00000 0 00141    00500 STA +0 62100 0 00513    00501 CLA +0 50000 0 00140    00502 ADD +0 40000 0 00253   
 00503 SUB +0 40200 0 00504    00504 TXH +3 00000 0 00140    00505 STA +0 62100 0 00512    00506 TSX +0 07400 4 00003   
 00507 TXH +3 00000 0 00300    00510 TXH +3 00000 0 00242    00511 TXH +3 00000 0 00201    00512 TXH +3 00000 0 00000   
 00513 TXH +3 00000 0 00000    00514 TXH +3 00000 0 00000    00515 TXH +3 00000 0 00113                                 
                 TRFILE.(WORK,LIST,0)                                               067  LM00116
 00516 TSX +0 07400 4 00034    00517 TXH +3 00000 0 00242    00520 TXH +3 00000 0 00201    00521 TXH +3 00000 0 00243   
                 T'H LOOP3, FOR I = DRAIN(1),-14,(I.LE.0)                           068  LM00120
 00522 CLA +0 50000 0 00152    00523 STO +0 60100 0 00157    00524 TRA +0 02000 0 00530    00525 CLS +0 50200 0 00251   
 00526 ADD +0 40000 0 00157    00527 STO +0 60100 0 00157    00530 CLA +0 50000 0 00157    00531 SUB +0 40200 0 00243   
 00532 TZE +0 10000 0 00653    00533 TMI -0 12000 0 00653                                                               
                      OFFST1 = N1BUF + I                                            069  LM00121
 00534 CLA +0 50000 0 00205    00535 ADD +0 40000 0 00157    00536 STO +0 60100 0 00206                                 
                      T'H LOOP2, FOR J = DRAIN(0),-7,(J.LE.0)                       070  LM00125
 00537 CLA +0 50000 0 00153    00540 STO +0 60100 0 00160    00541 TRA +0 02000 0 00545    00542 CLS +0 50200 0 00250   
 00543 ADD +0 40000 0 00160    00544 STO +0 60100 0 00160    00545 CLA +0 50000 0 00160    00546 SUB +0 40200 0 00243   
 00547 TZE +0 10000 0 00642    00550 TMI -0 12000 0 00642                                                               
                           W'R UFDBUF(UFDBUF+J).NE.N1BUF(OFFST1),                   071  LM00126
                1               T'O LOOP2                                           071  LM00127
 00551 CLA +0 50000 0 00235    00552 ADD +0 40000 0 00160    00553 PAX +0 73400 1 00000    00554 LXA +0 53400 2 00206   
 00555 CLA +0 50000 1 00235    00556 SUB +0 40200 2 00205    00557 TZE +0 10000 0 00561    00560 TRA +0 02000 0 00116   
                           OFFST2 = UFDBUF + J - 1                                  072  LM00128
 00561 CLA +0 50000 0 00235    00562 ADD +0 40000 0 00160    00563 SUB +0 40200 0 00244    00564 STO +0 60100 0 00207   
                           T'H LOOP1, FOR K = 0,4,(TABLE(K).E.FENCE)                073  LM00132
 00565 CLA +0 50000 0 00243    00566 STO +0 60100 0 00161    00567 TRA +0 02000 0 00573    00570 CLA +0 50000 0 00161   
 00571 ADD +0 40000 0 00247    00572 STO +0 60100 0 00161    00573 LXA +0 53400 1 00161    00574 CLA +0 50000 1 00234   
 00575 SUB +0 40200 0 00155    00576 TZE +0 10000 0 00641                                                               
                                W'R UFDBUF(OFFST2).NE.TABLE(K),                     074  LM00133
                1                    T'O LOOP1                                      074  LM00134
 00577 LXA +0 53400 1 00207    00600 LXA +0 53400 2 00161    00601 CLA +0 50000 1 00235    00602 SUB +0 40200 2 00234   
 00603 TZE +0 10000 0 00605    00604 TRA +0 02000 0 00115                                                               
                                DRAIN(7) = TABLE(K+1)                               075  LM00138
 00605 CLA +0 50000 0 00161    00606 ADD +0 40000 0 00244    00607 PAX +0 73400 2 00000    00610 CLA +0 50000 2 00234   
 00611 STO +0 60100 0 00144                                                                                             
                                DRAIN(6) = N1BUF(OFFST1)                            076  LM00139
 00612 LXA +0 53400 2 00206    00613 CLA +0 50000 2 00205    00614 STO +0 60100 0 00145                                 
                                DRAIN(5) = TABLE(K+2)                               077  LM00140
 00615 CLA +0 50000 0 00161    00616 ADD +0 40000 0 00245    00617 PAX +0 73400 2 00000    00620 CLA +0 50000 2 00234   
 00621 STO +0 60100 0 00146                                                                                             
                                DRAIN(4) = TABLE(K+3)                               078  LM00141
 00622 CLA +0 50000 0 00161    00623 ADD +0 40000 0 00246    00624 PAX +0 73400 2 00000    00625 CLA +0 50000 2 00234   
 00626 STO +0 60100 0 00147                                                                                             
                                DRAIN(3) = TABLE(K)                                 079  LM00142
 00627 LXA +0 53400 2 00161    00630 CLA +0 50000 2 00234    00631 STO +0 60100 0 00150                                 
                                BFWRIT.(WORK,LIST,DRAIN(7)...LTHWRK,ERR1)           080  LM00143
 00632 TSX +0 07400 4 00004    00633 TXH +3 00000 0 00242    00634 TXH +3 00000 0 00201    00635 TIX +2 00202 0 00144   
 00636 TXH +3 00000 0 00113                                                                                             
                                T'O LOOP3                                           081  LM00144
 00637 TRA +0 02000 0 00117                                                                                             
      LOOP1                C'E                                                      082  LM00146
 00640 TRA +0 02000 0 00570                                                                                             
      LOOP2           C'E                                                           083  LM00147
 00641 TRA +0 02000 0 00542                                                                                             
                      PRMESS.(N1BUF(OFFST1),$ NOT FOUND$)                           084  LM00151
 00642 CLA +0 50000 0 00206    00643 SUB +0 40200 0 00644    00644 TXH +3 00000 0 00205    00645 STA +0 62100 0 00647   
 00646 TSX +0 07400 4 00026    00647 TXH +3 00000 0 00000    00650 TXH +3 00000 0 00272    00651 TXH +3 00000 0 00263   
      LOOP3      C'E                                                                085  LM00153
 00652 TRA +0 02000 0 00525                                                                                             
                 BFCLOS.(WORK,LIST,ERR1)                                            086  LM00157
 00653 TSX +0 07400 4 00002    00654 TXH +3 00000 0 00242    00655 TXH +3 00000 0 00201    00656 TXH +3 00000 0 00113   
                 T'O START                                                          087  LM00158
 00657 TRA +0 02000 0 00135                                                                                             
      PHASE2     WHOAMI.(LINE(2)...2)                                               088  LM00162
 00660 TSX +0 07400 4 00036    00661 TIX +2 00245 0 00176                                                               
                 FSTATE.(SAVN1,BSS,DRAIN...0,FAILED)                                089  LM00166
 00662 TSX +0 07400 4 00015    00663 TXH +3 00000 0 00047    00664 TXH +3 00000 0 00137    00665 TIX +2 00243 0 00153   
 00666 TXH +3 00000 0 00114                                                                                             
                 W'R PROGN .NE. V(1)                                                090  LM00170
 00667 CLA +0 50000 0 00211    00670 SUB +0 40200 0 00240    00671 TZE +0 10000 0 00704                                 
                      MOVFIL.(SAVN1,BSS,M1416,PROGN,FAILED)                         091  LM00171
 00672 TSX +0 07400 4 00023    00673 TXH +3 00000 0 00047    00674 TXH +3 00000 0 00137    00675 TXH +3 00000 0 00203   
 00676 TXH +3 00000 0 00211    00677 TXH +3 00000 0 00114                                                               
                      UNLINK.(SAVN1,SAVN2,NERR5)                                    092  LM00172
 00700 TSX +0 07400 4 00035    00701 TXH +3 00000 0 00047    00702 TXH +3 00000 0 00050    00703 TXH +3 00000 0 00125   
                 E'L                                                                093  LM00173
      NERR5      FERRTN.(NORQ)                                                      094  LM00177
 00704 TSX +0 07400 4 00014    00705 TXH +3 00000 0 00127                                                               
                 OPEN.($W$,OUTPUT,RQUEST)                                           095  LM00179
 00706 TSX +0 07400 4 00025    00707 TXH +3 00000 0 00300    00710 TXH +3 00000 0 00210    00711 TXH +3 00000 0 00212   
                 GETBUF.(BUFF1,432)                                                 096  LM00180
 00712 TSX +0 07400 4 00017    00713 TXH +3 00000 0 00140    00714 TXH +3 00000 0 00253                                 
                 BUFFER.(OUTPUT,RQUEST,BUFF1(BUFF1+432)...432)                      097  LM00181
 00715 CLA +0 50000 0 00140    00716 ADD +0 40000 0 00253    00717 SUB +0 40200 0 00720    00720 TXH +3 00000 0 00140   
 00721 STA +0 62100 0 00725    00722 TSX +0 07400 4 00005    00723 TXH +3 00000 0 00210    00724 TXH +3 00000 0 00212   
 00725 TIX +2 00253 0 00000                                                                                             
                 LINE(13) = SAVN1                                                   098  LM00183
 00726 CLA +0 50000 0 00047    00727 STO +0 60100 0 00163                                                               
                 LINE(11) = SAVN1                                                   099  LM00184
 00730 CLA +0 50000 0 00047    00731 STO +0 60100 0 00165                                                               
                 WRFILE.(OUTPUT,RQUEST,0,LINE(14)...14)                             100  LM00185
 00732 TSX +0 07400 4 00037    00733 TXH +3 00000 0 00210    00734 TXH +3 00000 0 00212    00735 TXH +3 00000 0 00243   
 00736 TIX +2 00251 0 00162                                                                                             
                 CLOSE.(OUTPUT,RQUEST)                                              101  LM00186
 00737 TSX +0 07400 4 00010    00740 TXH +3 00000 0 00210    00741 TXH +3 00000 0 00212                                 
                 T'O START                                                          102  LM00187
 00742 TRA +0 02000 0 00135                                                                                             
      NORQ       PRMESS.($REQUEST FOR$,SAVN1,$ BCD SKIPPED$)                        103  LM00191
 00743 TSX +0 07400 4 00026    00744 TXH +3 00000 0 00265    00745 TXH +3 00000 0 00276    00746 TXH +3 00000 0 00047   
 00747 TXH +3 00000 0 00270    00750 TXH +3 00000 0 00261                                                               
                 RESETF.                                                            104  LM00192
 00751 TSX +0 07400 4 00031                                                                                             
                 T'O START                                                          105  LM00193
 00752 TRA +0 02000 0 00135                                                                                             
      FAILED     PRMESS.($UNABLE TO PLACE$,SAVN1,$ BSS$)                            106  LM00197
 00753 TSX +0 07400 4 00026    00754 TXH +3 00000 0 00277    00755 TXH +3 00000 0 00274    00756 TXH +3 00000 0 00254   
 00757 TXH +3 00000 0 00047    00760 TXH +3 00000 0 00271                                                               
                 CHFILE.(BSS,SAVN1,MZE,SAVN1,BSS,START)                             107  LM00198
 00761 TSX +0 07400 4 00006    00762 TXH +3 00000 0 00137    00763 TXH +3 00000 0 00047    00764 TXH +3 00000 0 00204   
 00765 TXH +3 00000 0 00047    00766 TXH +3 00000 0 00137    00767 TXH +3 00000 0 00135                                 
      START      FERRTN.(ERR1)                                                      108  LM00202
 00770 TSX +0 07400 4 00014    00771 TXH +3 00000 0 00113                                                               
                 OPEN.($R$,WORK,LIST)                                               109  LM00206
 00772 TSX +0 07400 4 00025    00773 TXH +3 00000 0 00266    00774 TXH +3 00000 0 00242    00775 TXH +3 00000 0 00201   
      READ1      RDWAIT.(WORK,LIST,RLOC,B(20)...LTHWRK,REOF)                        110  LM00207
 00776 TSX +0 07400 4 00030    00777 TXH +3 00000 0 00242    01000 TXH +3 00000 0 00201    01001 TXH +3 00000 0 00045   
 01002 TIX +2 00202 0 00066    01003 TXH +3 00000 0 00133                                                               
                 RLOC = RLOC + LTHWRK                                               111  LM00208
 01004 CLA +0 50000 0 00045    01005 ADD +0 40000 0 00202    01006 STO +0 60100 0 00045                                 
                 CHFILE.(NAME1,BCD,1,MZE,MZE,NERR1)                                 112  LM00212
 01007 TSX +0 07400 4 00006    01010 TXH +3 00000 0 00067    01011 TXH +3 00000 0 00136    01012 TXH +3 00000 0 00244   
 01013 TXH +3 00000 0 00204    01014 TXH +3 00000 0 00204    01015 TXH +3 00000 0 00121                                 
                 DELFIL.(NAME1,BCD,NERR1)                                           113  LM00213
 01016 TSX +0 07400 4 00011    01017 TXH +3 00000 0 00067    01020 TXH +3 00000 0 00136    01021 TXH +3 00000 0 00121   
      NERR1      W'R PROGN .NE. V(1), ATTACH.(M1416,PROGN)                          114  LM00217
 01022 CLA +0 50000 0 00211    01023 SUB +0 40200 0 00240    01024 TZE +0 10000 0 01030    01025 TSX +0 07400 4 00000   
 01026 TXH +3 00000 0 00203    01027 TXH +3 00000 0 00211                                                               
                 CHFILE.(NAME1,BSS,MZE,BSS,NAME1,NERR2)                             115  LM00218
 01030 TSX +0 07400 4 00006    01031 TXH +3 00000 0 00067    01032 TXH +3 00000 0 00137    01033 TXH +3 00000 0 00204   
 01034 TXH +3 00000 0 00137    01035 TXH +3 00000 0 00067    01036 TXH +3 00000 0 00122                                 
      NERR2      FSTATE.(NAME1,BSS,DRAIN...0,NERR3,ERCODE)                          116  LM00222
 01037 TSX +0 07400 4 00015    01040 TXH +3 00000 0 00067    01041 TXH +3 00000 0 00137    01042 TIX +2 00243 0 00153   
 01043 TXH +3 00000 0 00123    01044 TXH +3 00000 0 00154                                                               
      NERR3      W'R (ERCODE .NE. 3), T'O SKIPIT                                    117  LM00223
 01045 CLA +0 50000 0 00154    01046 SUB +0 40200 0 00246    01047 TZE +0 10000 0 01051    01050 TRA +0 02000 0 00134   
                 W'R PROGN .NE. V(1)                                                118  LM00227
 01051 CLA +0 50000 0 00211    01052 SUB +0 40200 0 00240    01053 TZE +0 10000 0 01070                                 
                      ATTACH.(M1416,V(1))                                           119  LM00228
 01054 TSX +0 07400 4 00000    01055 TXH +3 00000 0 00203    01056 TXH +3 00000 0 00240                                 
                      LINK.(NAME1,CLASS,M1416,PROGN,MZE,MZE,104K,NERR4)             120  LM00229
 01057 TSX +0 07400 4 00022    01060 TXH +3 00000 0 00067    01061 TXH +3 00000 0 00072    01062 TXH +3 00000 0 00203   
 01063 TXH +3 00000 0 00211    01064 TXH +3 00000 0 00204    01065 TXH +3 00000 0 00204    01066 TXH +3 00000 0 00252   
 01067 TXH +3 00000 0 00124                                                                                             
                 E'L                                                                121  LM00230
      NERR4      FSTATE.(NAME1,CLASS,DRAIN...0,SKIPIT)                              122  LM00231
 01070 TSX +0 07400 4 00015    01071 TXH +3 00000 0 00067    01072 TXH +3 00000 0 00072    01073 TIX +2 00243 0 00153   
 01074 TXH +3 00000 0 00134                                                                                             
                 PRMESS.(NAME1,CLASS)                                               123  LM00232
 01075 TSX +0 07400 4 00026    01076 TXH +3 00000 0 00067    01077 TXH +3 00000 0 00072                                 
                 SAVN1 = NAME1                                                      124  LM00236
 01100 CLA +0 50000 0 00067    01101 STO +0 60100 0 00047                                                               
                 SAVN2 = CLASS                                                      125  LM00237
 01102 CLA +0 50000 0 00072    01103 STO +0 60100 0 00050                                                               
                 CLASS = FENCE                                                      126  LM00238
 01104 CLA +0 50000 0 00155    01105 STO +0 60100 0 00072                                                               
                 SETC.(B(20),0)                                                     127  LM00242
 01106 TSX +0 07400 4 00033    01107 TXH +3 00000 0 00066    01110 TXH +3 00000 0 00243                                 
                 SETC.(A(20),1)                                                     128  LM00243
 01111 TSX +0 07400 4 00033    01112 TXH +3 00000 0 00041    01113 TXH +3 00000 0 00244                                 
                 SCLC.(1,1)                                                         129  LM00244
 01114 TSX +0 07400 4 00032    01115 TXH +3 00000 0 00244    01116 TXH +3 00000 0 00244                                 
                 NCOM.(B(20),B(19))                                                 130  LM00245
 01117 TSX +0 07400 4 00024    01120 TXH +3 00000 0 00066    01121 TXH +3 00000 0 00067                                 
      SKIPIT     PRMESS.($ASSEMBLY OF $,NAME1,CLASS,$ OMITTED$)                     131  LM00249
 01122 TSX +0 07400 4 00026    01123 TXH +3 00000 0 00255    01124 TXH +3 00000 0 00262    01125 TXH +3 00000 0 00067   
 01126 TXH +3 00000 0 00072    01127 TXH +3 00000 0 00273    01130 TXH +3 00000 0 00257                                 
                 CHFILE.(BSS,NAME1,MZE,NAME1,BSS,NERR6)                             132  LM00250
 01131 TSX +0 07400 4 00006    01132 TXH +3 00000 0 00137    01133 TXH +3 00000 0 00067    01134 TXH +3 00000 0 00204   
 01135 TXH +3 00000 0 00067    01136 TXH +3 00000 0 00137    01137 TXH +3 00000 0 00126                                 
      NERR6      W'R PROGN .NE. V(1), ATTACH.(M1416,V(1))                           133  LM00251
 01140 CLA +0 50000 0 00211    01141 SUB +0 40200 0 00240    01142 TZE +0 10000 0 01146    01143 TSX +0 07400 4 00000   
 01144 TXH +3 00000 0 00203    01145 TXH +3 00000 0 00240                                                               
                 T'O READ1                                                          134  LM00252
 01146 TRA +0 02000 0 00132                                                                                             
      REOF       RESETF.                                                            135  LM00256
 01147 TSX +0 07400 4 00031                                                                                             
                 DORMNT.                                                            136  LM00257
 01150 TSX +0 07400 4 00012                                                                                             
      ERR1       NCOM.($PRNTER$,FENCE)                                              137  LM00261
 01151 TSX +0 07400 4 00024    01152 TXH +3 00000 0 00264    01153 TXH +3 00000 0 00155                                 
                 E'M                                                                138  LM00263
 01154 TSX +0 07400 4 00013                                                                                             
1            SLIGHTLY MODIFIED FORM OF 'SCLS' AS FOUND IN LIBRARY                                PAGE 1     
                           D.R. WIDRIG  OCTOBER 1966                                
                  
                       00003         ENTRY   SETC     
                  
                                             CALL IS   SETC.(BUFF(20),N)
                  
                  
        TRANSFER VECTOR 
      00000  622563234362     SETCLS
                  
            LINKAGE DIRECTOR  
      00001  000000000000     
      00002  622563236060     
                  
      00003  0636 00 4 00013  SETC   SCA     SETX4,4       SAVE LINKAGE 
      00004  0500 00 4 00001         CLA     1,4           GET POINTER TO BASE
      00005  0621 00 0 00012         STA     SET           SAVE IT
      00006  0500 60 4 00002         CLA*    2,4           GET COMMAND BUFFER NUMBER
      00007  0767 00 0 00022         ALS     18            MOVE TO DECREMENT  
      00010  0622 00 0 00012         STD     SET           AND PLANT IT 
      00011  0074 00 4 00000         TSX     $SETCLS,4     CALL UP SUPERVISOR 
      00012  0 00000 0 00000  SET            **,,**        BUFF,,'N'    
                  
      00013 -0774 00 4 00000  SETX4  AXC     **,4          RESTORE LINKAGE    
      00014  0020 00 4 00003         TRA     3,4           RETURN TO CALLER   
                  
                                     END  
1            SLIGHTLY MODIFIED FORM OF 'SCLS' AS FOUND IN LIBRARY                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         15 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         12    SET     5,   10
          3   SETC     0
         13  SETX4     3
          0 SETCLS    11
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            ROUTINE TO GET A BUFFER AREA BY EXPANDING MEMORY BOUND                              PAGE 1     
                           D.R. WIDRIG  JUNE 1966                                   
                  
                       00004         ENTRY   GETBUF        GET A BUFFER 
                  
                                     EXTERN  GETMEM,SETMEM  
                  
                                             CALLING SEQUENCE IS..  GETBUF.(BUFF,N) 
                                             UPON RETURN, THE CALLER MAY USE THE    
                                             AREA BY STATEMENTS OF THE FORM..  X = BUFF(BUFF+I) 
                                             WHERE THE I'TH ELEMENT IS INTENDED     
                  
        TRANSFER VECTOR 
      00000  272563442544     GETMEM
      00001  622563442544     SETMEM
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  272563226426     
                  
      00004  0636 00 4 00024  GETBUF SCA     X4,4          SAVE LINKAGE 
      00005  0634 00 1 00025         SXA     X1,1          AND IR1
      00006  0535 00 1 00024         LAC     X4,1          SET IR1 TO IR4 (THE CALLER)    
                  
      00007  0074 00 4 00000         TSX     GETMEM,4      GET CURRENT MEMORY BOUND 
      00010  0601 00 0 00027         STO     OLDMEM        SAVE OLD MEMORY BOUND    
      00011  0400 60 1 00002         ADD*    2,1           ALLOW FOR USER'S DEMAND  
      00012  0734 00 4 00000         PAX     0,4           SAVE COMPLEMENT OF THIS VALUE  
      00013 -0636 00 4 00020         SCD     TXI,4         ..     
      00014  0400 00 0 00030         ADD     =1            ALLOW FOR BUFF(0)  
      00015  0074 00 4 00001         TSX     SETMEM,4      RAISE THE ROOF     
                  
      00016 -0500 00 1 00001         CAL     1,1           GET BASE POINTER   
      00017  0734 00 4 00000         PAX     0,4           ..     
      00020  1 00000 4 00021  TXI    TXI     *+1,4,**      DECREMENT BY AMOUNT OF STORAGE 
      00021  0754 00 4 00000         PXA     0,4           SET THIS VALUE IN USER'S PROGRAM     
      00022  0602 60 1 00001         SLW*    1,1           ..     
      00023  0500 00 0 00027         CLA     OLDMEM        RETURN OLD MEMORY BOUND  
                  
      00024 -0774 00 4 00000  X4     AXC     **,4          RESTORE LINKAGE    
      00025  0774 00 1 00000  X1     AXT     **,1          AND IR1
      00026  0020 00 4 00003         TRA     3,4           RETURN 
                  
      00027                   OLDMEM BSS     1             STORAGE FOR OLD MEMORY BOUND   
                  
                                     END  
                  
        LITERALS  
      00030  000000000001     
1            ROUTINE TO GET A BUFFER AREA BY EXPANDING MEMORY BOUND                              PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         31 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         25     X1     5
         24     X4     4,    6
         20    TXI    13
          4 GETBUF     0
          0 GETMEM     7
         27 OLDMEM    10,   23
          1 SETMEM    15
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




TIAGEN   BCD 10/12/70 1510.5    3340         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  TIAGEN   MAD            06/21/69    1650.4
-                 
      TIAGEN      PROGRAM TO GENERATE A FAP PROGRAM                                                    LM00001    
                  FOR TIA'S TO THE CTSS SUPERVISOR                                                     LM00002    
                   WRITTEN BY R. ROACH  6/21/69                                                        LM00003    
                                                                                                       LM00004    
                  USAGE:                                                                               LM00005    
                    R TIAGEN N1 N2 N3 N4 N5 N6 N7 ...                                                  LM00006    
                                                                                                       LM00007    
                  A FILE CALLED 'N1 FAP' WILL BE CREATED WITH THE                                      LM00008    
                  ENTRIES N1, N2, N3 ...                                                               LM00009    
                                                                                                       LM00010    
                  NORMAL MODE IS INTEGER                                                          *001 LM00011    
                  DIMENSION B1(0),B2(0),B3(0)                                                     *002 LM00012    
                  N1 = COMARG.(1)                                                                 *003 LM00013    
                  VECTOR VALUES N2 = $   FAP$                                                     *004 LM00014    
                  VECTOR VALUES FENCE = 777777777777K                                             *005 LM00015    
                                                                                                       LM00016    
                  WHENEVER N1 .E. FENCE                                                           *006 LM00017    
                     PRFULL.($'R'1NO FILE NAME GIVEN.'B$)                                         *007 LM00018    
                     EXITM.                                                                       *008 LM00019    
                  END OF CONDITIONAL                                                              *009 LM00020    
                  GETBUF.(B1,432)                                                                 *010 LM00021    
                  GETBUF.(B2,432)                                                                 *011 LM00022    
                  GETBUF.(B3,432)                                                                 *012 LM00023    
                  DELETE.(N1,N2,1,IOERR)                                                          *013 LM00024    
                  BFOPEN.($W$,N1,N2,B1(B1+432),B2(B2+432),B3(B3+432),IOERR)                       *014 LM00025    
                                                                                                       LM00026    
                  ... NOW WRITE THE 'NOLNK' CARD                                                       LM00027    
                                                                                                       LM00028    
                  BFWRIT.(N1,N2,LINE1(2)...2,IOERR)                                               *015 LM00029    
                  VECTOR VALUES LINE1(2) = 777777000001K                                          *016 LM00030    
                  VECTOR VALUES LINE1(1) = 724546434542K                                          *017 LM00031    
                                                                                                       LM00032    
                  ... NOW WRITE THE ENTRY CARDS                                                        LM00033    
                                                                                                       LM00034    
                  THROUGH LOOP1, FOR I = 1,1,COMARG.(I,ARG).E.FENCE                               *018 LM00035    
                  LINE2 = LJUST.(ARG)                                                             *019 LM00036    
                  BFWRIT.(N1,N2,LINE2(3)...4,IOERR)                                               *020 LM00037    
                  VECTOR VALUES LINE2(3) = 777777000003K                                          *021 LM00038    
                  VECTOR VALUES LINE2(2) = 722545635170K                                          *022 LM00039    
                  VECTOR VALUES LINE2(1) = 725757575757K                                          *023 LM00040    
      LOOP1       CONTINUE                                                                        *024 LM00041    
                                                                                                       LM00042    
                  ... NOW WRITE THE TIA CARDS                                                          LM00043    
                                                                                                       LM00044    
                  THROUGH LOOP2, FOR I = 1,1,COMARG.(I,ARG).E.FENCE                               *025 LM00045    
                  LINE3(3) = LJUST.(ARG)                                                          *026 LM00046    
                  LINE3 = LJUST.(ARG)                                                             *027 LM00047    
                  VECTOR VALUES LINE3(4) = 777777000004K                                          *028 LM00048    
                  VECTOR VALUES LINE3(2) = 726331217257K                                          *029 LM00049    
                  VECTOR VALUES LINE3(1) = 575757571330K                                          *030 LM00050    
                  BFWRIT.(N1,N2,LINE3(4)...5,IOERR)                                               *031 LM00051    
      LOOP2       CONTINUE                                                                        *032 LM00052    
                                                                                                       LM00053    
                  ... NOW WRITE THE END CARD                                                           LM00054    
                                                                                                       LM00055    
                  BFWRIT.(N1,N2,LINE4(1)...2,IOERR)                                               *033 LM00056    
                  VECTOR VALUES LINE4(1) = 777777000001K                                          *034 LM00057    
                  VECTOR VALUES LINE4 = 722545245757K                                             *035 LM00058    
                                                                                                       LM00059    
                  CLOSE OUT                                                                            LM00060    
                                                                                                       LM00061    
                  EXITM.                                                                          *036 LM00062    
      IOERR       PRDIAG.                                                                         *037 LM00063    
                  EXITM.                                                                          *038 LM00064    
                                                                                                       LM00065    
                  END OF PROGRAM                                                                  *039 LM00066    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00235 TRANSFER VECTOR LENGTH  00013 PROGRAM BEGINS    00057
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ARG    00015   1        B3     00020 A 1        I      00022   1        LINE3  00036 A 1        LOOP2  00013   4  
      B1     00016 A 1        FENCE  00021 A 1        LINE1  00025 A 1        LINE4  00040 A 1        N1     00041   1  
      B2     00017 A 1        IOERR  00014   4        LINE2  00031 A 1        LOOP1  00013   4        N2     00042 A 1  
0FUNCTION DICTIONARY    
      BFOPEN 00000   1        BFWRIT 00001   1        COMARG 00002   1        DELETE 00003   1        EXITM  00004   1  
      EXIT   00005   1        GETBUF 00006   1        .SETUP 00007   1        LJUST  00010   1        PRDIAG 00011   1  
      PRFULL 00012   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00046 +000000000005     00045 +000000000004     00044 +000000000002     00056 -266060606060     00047 +000000000660    
 00051 +226060606060     00053 +316525453314     00054 -052144256027     00055 -202631432560     00050 +145114014546    
 00043 +000000000001     00052 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00014 TXL -300231000230                                                                                                
0PROGRAM    
                 N'R                                                                001  LM00011
                 D'N B1(0),B2(0),B3(0)                                              002  LM00012
                 N1 = COMARG.(1)                                                    003  LM00013
 00057 TSX +0 07400 4 00007    00060 TSX +0 07400 4 00002    00061 TXH +3 00000 0 00043    00062 STO +0 60100 0 00041   
                 V'S N2 = $   FAP$                                                  004  LM00014
 00042     -2 06060 2 62147                                                                                             
                 V'S FENCE = 777777777777K                                          005  LM00015
 00021     -3 77777 7 77777                                                                                             
                 W'R N1 .E. FENCE                                                   006  LM00017
 00063 CLA +0 50000 0 00041    00064 SUB +0 40200 0 00021    00065 TNZ -0 10000 0 00075                                 
                    PRFULL.($'R'1NO FILE NAME GIVEN.'B$)                            007  LM00018
 00066 TSX +0 07400 4 00012    00067 TXH +3 00000 0 00050    00070 TXH +3 00000 0 00055    00071 TXH +3 00000 0 00054   
 00072 TXH +3 00000 0 00053    00073 TXH +3 00000 0 00051                                                               
                    EXITM.                                                          008  LM00019
 00074 TSX +0 07400 4 00004                                                                                             
                 E'L                                                                009  LM00020
                 GETBUF.(B1,432)                                                    010  LM00021
 00075 TSX +0 07400 4 00006    00076 TXH +3 00000 0 00016    00077 TXH +3 00000 0 00047                                 
                 GETBUF.(B2,432)                                                    011  LM00022
 00100 TSX +0 07400 4 00006    00101 TXH +3 00000 0 00017    00102 TXH +3 00000 0 00047                                 
                 GETBUF.(B3,432)                                                    012  LM00023
 00103 TSX +0 07400 4 00006    00104 TXH +3 00000 0 00020    00105 TXH +3 00000 0 00047                                 
                 DELETE.(N1,N2,1,IOERR)                                             013  LM00024
 00106 TSX +0 07400 4 00003    00107 TXH +3 00000 0 00041    00110 TXH +3 00000 0 00042    00111 TXH +3 00000 0 00043   
 00112 TXH +3 00000 0 00014                                                                                             
                 BFOPEN.($W$,N1,N2,B1(B1+432),B2(B2+432),B3(B3+432),IOERR)          014  LM00025
 00113 CLA +0 50000 0 00020    00114 ADD +0 40000 0 00047    00115 SUB +0 40200 0 00116    00116 TXH +3 00000 0 00020   
 00117 STA +0 62100 0 00140    00120 CLA +0 50000 0 00017    00121 ADD +0 40000 0 00047    00122 SUB +0 40200 0 00123   
 00123 TXH +3 00000 0 00017    00124 STA +0 62100 0 00137    00125 CLA +0 50000 0 00016    00126 ADD +0 40000 0 00047   
 00127 SUB +0 40200 0 00130    00130 TXH +3 00000 0 00016    00131 STA +0 62100 0 00136    00132 TSX +0 07400 4 00000   
 00133 TXH +3 00000 0 00056    00134 TXH +3 00000 0 00041    00135 TXH +3 00000 0 00042    00136 TXH +3 00000 0 00000   
 00137 TXH +3 00000 0 00000    00140 TXH +3 00000 0 00000    00141 TXH +3 00000 0 00014                                 
                 BFWRIT.(N1,N2,LINE1(2)...2,IOERR)                                  015  LM00029
 00142 TSX +0 07400 4 00001    00143 TXH +3 00000 0 00041    00144 TXH +3 00000 0 00042    00145 TIX +2 00044 0 00023   
 00146 TXH +3 00000 0 00014                                                                                             
                 V'S LINE1(2) = 777777000001K                                       016  LM00030
 00023     -3 77777 0 00001                                                                                             
                 V'S LINE1(1) = 724546434542K                                       017  LM00031
 00024     -3 24546 4 34542                                                                                             
                 T'H LOOP1, FOR I = 1,1,COMARG.(I,ARG).E.FENCE                      018  LM00035
 00147 CLA +0 50000 0 00043    00150 STO +0 60100 0 00022    00151 TRA +0 02000 0 00155    00152 CLA +0 50000 0 00022   
 00153 ADD +0 40000 0 00043    00154 STO +0 60100 0 00022    00155 TSX +0 07400 4 00002    00156 TXH +3 00000 0 00022   
 00157 TXH +3 00000 0 00015    00160 SUB +0 40200 0 00021    00161 TZE +0 10000 0 00173                                 
                 LINE2 = LJUST.(ARG)                                                019  LM00036
 00162 TSX +0 07400 4 00010    00163 TXH +3 00000 0 00015    00164 STO +0 60100 0 00031                                 
                 BFWRIT.(N1,N2,LINE2(3)...4,IOERR)                                  020  LM00037
 00165 TSX +0 07400 4 00001    00166 TXH +3 00000 0 00041    00167 TXH +3 00000 0 00042    00170 TIX +2 00045 0 00026   
 00171 TXH +3 00000 0 00014                                                                                             
                 V'S LINE2(3) = 777777000003K                                       021  LM00038
 00026     -3 77777 0 00003                                                                                             
                 V'S LINE2(2) = 722545635170K                                       022  LM00039
 00027     -3 22545 6 35170                                                                                             
                 V'S LINE2(1) = 725757575757K                                       023  LM00040
 00030     -3 25757 5 75757                                                                                             
      LOOP1      CONTINUE                                                           024  LM00041
 00172 TRA +0 02000 0 00152                                                                                             
                 T'H LOOP2, FOR I = 1,1,COMARG.(I,ARG).E.FENCE                      025  LM00045
 00173 CLA +0 50000 0 00043    00174 STO +0 60100 0 00022    00175 TRA +0 02000 0 00201    00176 CLA +0 50000 0 00022   
 00177 ADD +0 40000 0 00043    00200 STO +0 60100 0 00022    00201 TSX +0 07400 4 00002    00202 TXH +3 00000 0 00022   
 00203 TXH +3 00000 0 00015    00204 SUB +0 40200 0 00021    00205 TZE +0 10000 0 00222                                 
                 LINE3(3) = LJUST.(ARG)                                             026  LM00046
 00206 TSX +0 07400 4 00010    00207 TXH +3 00000 0 00015    00210 STO +0 60100 0 00033                                 
                 LINE3 = LJUST.(ARG)                                                027  LM00047
 00211 TSX +0 07400 4 00010    00212 TXH +3 00000 0 00015    00213 STO +0 60100 0 00036                                 
                 V'S LINE3(4) = 777777000004K                                       028  LM00048
 00032     -3 77777 0 00004                                                                                             
                 V'S LINE3(2) = 726331217257K                                       029  LM00049
 00034     -3 26331 2 17257                                                                                             
                 V'S LINE3(1) = 575757571330K                                       030  LM00050
 00035     -1 75757 5 71330                                                                                             
                 BFWRIT.(N1,N2,LINE3(4)...5,IOERR)                                  031  LM00051
 00214 TSX +0 07400 4 00001    00215 TXH +3 00000 0 00041    00216 TXH +3 00000 0 00042    00217 TIX +2 00046 0 00032   
 00220 TXH +3 00000 0 00014                                                                                             
      LOOP2      CONTINUE                                                           032  LM00052
 00221 TRA +0 02000 0 00176                                                                                             
                 BFWRIT.(N1,N2,LINE4(1)...2,IOERR)                                  033  LM00056
 00222 TSX +0 07400 4 00001    00223 TXH +3 00000 0 00041    00224 TXH +3 00000 0 00042    00225 TIX +2 00044 0 00037   
 00226 TXH +3 00000 0 00014                                                                                             
                 V'S LINE4(1) = 777777000001K                                       034  LM00057
 00037     -3 77777 0 00001                                                                                             
                 V'S LINE4 = 722545245757K                                          035  LM00058
 00040     -3 22545 2 45757                                                                                             
                 EXITM.                                                             036  LM00062
 00227 TSX +0 07400 4 00004                                                                                             
      IOERR      PRDIAG.                                                            037  LM00063
 00230 TSX +0 07400 4 00011                                                                                             
                 EXITM.                                                             038  LM00064
 00231 TSX +0 07400 4 00004                                                                                             
                 E'M                                                                039  LM00066
 00232 TSX +0 07400 4 00005                                                                                             




 TRACK   BCD 10/12/70 1510.5   21563         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   TRACK   MAD            04/29/70    1005.8
-                 
                  PROGRAM TO MAP BAD DISK TRACKS BY HEAD AND                                           LM00001    
                  CYLINDER, WITH CUMULATIVE RESULTS MAINTAINED                                         LM00002    
                  IN PERMANENT FILES.                                                                  LM00003    
                                                                                                       LM00004    
                  NORMAL MODE IS INTEGER                                                          *001 LM00005    
                  BOOLEAN RQSW, INPSW, ONSW, HRQSW                                                *002 LM00006    
                  STATEMENT LABEL TTB, X                                                          *003 LM00007    
                  FUNCTION NAME F                                                                 *004 LM00008    
                                                                                                       LM00009    
                  DIMENSION C(5), MTX(10000, MDIM), DATE(3), CYLTMP(40)                           *005 LM00010    
                  EQUIVALENCE (TIME, DATE(3))                                                     *006 LM00011    
                  VECTOR VALUES MDIM = 2, 42, 40                                                  *007 LM00012    
                                                                                                       LM00013    
                  VECTOR VALUES CTB = $MODIFY$,$     M$,$ RESET$,$     R$,                        *008 LM00014    
                1   $ PRINT$,$     P$,$  QUIT$,$     Q$,$  HELP$,$     H$,                        *008 LM00015    
                2   777777777777K                                                                 *008 LM00016    
                  VECTOR VALUES TTB = BEGIN, MODIFY, BEGIN, RESET, BEGIN, PRINT,                  *009 LM00017    
                1   QUIT, QUIT, HELP, HELP                                                        *009 LM00018    
                  VECTOR VALUES HTB = 7K, 7K, 7K, 7K, 3K, 3K, 0K, 0K, 10K, 10K, 20K               *010 LM00019    
                                                                                                       LM00020    
                  VECTOR VALUES FENCE = 777777777777K                                             *011 LM00021    
                  VECTOR VALUES LMAX = 50                                                         *012 LM00022    
                                                                                                       LM00023    
                  ..PROGRAM                                                                            LM00024    
                                                                                                       LM00025    
                  SETERR.(OUTPER)                                                                 *013 LM00026    
                  FERRTN.(PRDIAG.)                                                                *014 LM00027    
                  SETBRK.(INTRPT)                                                                 *015 LM00028    
                  RCOUPX.(DONE)                                                                   *016 LM00029    
                  PRFIL.(COMARG.(0))                                                              *017 LM00030    
                                                                                                       LM00031    
      L0          THROUGH L0, FOR I = 0, 1, I.G.5 .OR. COMARG.(I+1,C(I)) .E. FENCE                *018 LM00032    
                  WHENEVER I .E. 0                                                                *019 LM00033    
                    RQSW = 1B                                                                     *020 LM00034    
                    TRANSFER TO DONE                                                              *021 LM00035    
                  OTHERWISE                                                                       *022 LM00036    
                    TRANSFER TO LOOKUP                                                            *023 LM00037    
                  END OF CONDITIONAL                                                              *024 LM00038    
                                                                                                       LM00039    
      READ        RDCOM.(C(0)...6)                                                                *025 LM00040    
                                                                                                       LM00041    
                  FTIME.(GTDYTM.(0),DATE(1),TIME)                                                 *026 LM00042    
                  DATE(2) = DATE(1) .LS. 24 .V. $00    $                                          *027 LM00043    
                  DATE(1) = DATE(1) .A. 7777K8 .V. DATE(1) .RS. 6 .A. 7777K2                      *028 LM00044    
                1   .V. $00/00/$                                                                  *028 LM00045    
                                                                                                       LM00046    
                                                                                                       LM00047    
      LOOKUP      THROUGH L1, FOR I = 0, 1, CTB(I).E.FENCE                                        *029 LM00048    
                    WHENEVER C .E. CTB(I)                                                         *030 LM00049    
                      X = TTB((I/2)*2+1)                                                          *031 LM00050    
                      TRANSFER TO TTB((I/2)*2)                                                    *032 LM00051    
                    END OF CONDITIONAL                                                            *033 LM00052    
      L1          CONTINUE                                                                        *034 LM00053    
                  PRFULL.($'R'X$,BZ57.(C),$'B'L IS NOT A VALID REQUEST.$)                         *035 LM00054    
                  TRANSFER TO DONE                                                                *036 LM00055    
                                                                                                       LM00056    
      BEGIN       WHENEVER C(1) .E. FENCE                                                         *037 LM00057    
                    WHENEVER N1 .V. N2 .E. 0                                                      *038 LM00058    
                      TRANSFER TO NOFILE                                                          *039 LM00059    
                    OTHERWISE                                                                     *040 LM00060    
                      TRANSFER TO X                                                               *041 LM00061    
                    END OF CONDITIONAL                                                            *042 LM00062    
                  OR WHENEVER C(2) .E. FENCE                                                      *043 LM00063    
      NOFILE        C(1) = C(0)                                                                   *044 LM00064    
                    TRANSFER TO HELP                                                              *045 LM00065    
                  END OF CONDITIONAL                                                              *046 LM00066    
                  C(1) = (C(1) .A. 1) .V. $ ACC 0$                                                *047 LM00067    
                  C(2) = (C(2) .A. 7) .V. $ MOD 0$                                                *048 LM00068    
                  WHENEVER C(1) .E. $ ACC 0$ .AND. C(2) .E. $ MOD 2$                              *049 LM00069    
                    N = 400                                                                       *050 LM00070    
                  OTHERWISE                                                                       *051 LM00071    
                    N = 10000                                                                     *052 LM00072    
                  END OF CONDITIONAL                                                              *053 LM00073    
                  WHENEVER C(1) .NE. N1 .OR. C(2) .NE. N2                                         *054 LM00074    
                    WHENEVER N1 .V. N2 .NE. 0                                                     *055 LM00075    
                      CLOSE.(N1, N2)                                                              *056 LM00076    
                      N1 = 0                                                                      *057 LM00077    
                      N2 = 0                                                                      *058 LM00078    
                    END OF CONDITIONAL                                                            *059 LM00079    
                    WHENEVER C(1) .V. C(2) .NE. 0                                                 *060 LM00080    
                      OPEN.($RW$, C(1), C(2), 100K, 2, OPNERR)                                    *061 LM00081    
                      N1 = C(1)                                                                   *062 LM00082    
                      N2 = C(2)                                                                   *063 LM00083    
                      RDWAIT.(N1, N2, 1, MTX(N)...N, RDEOF., T)                                   *064 LM00084    
                    END OF CONDITIONAL                                                            *065 LM00085    
                  END OF CONDITIONAL                                                              *066 LM00086    
                  TRANSFER TO X                                                                   *067 LM00087    
                                                                                                       LM00088    
                                                                                                       LM00089    
      MODIFY      F = ADD.                                                                        *068 LM00090    
                  TRANSFER TO CHG                                                                 *069 LM00091    
                                                                                                       LM00092    
      RESET       F = REP.                                                                        *070 LM00093    
                                                                                                       LM00094    
      CHG         WHENEVER C(3) .E. FENCE                                                         *071 LM00095    
                    INPSW = 1B                                                                    *072 LM00096    
                    PRFULA.($'R'UT'LYPE.'*'B'9$)                                                  *073 LM00097    
      INPUT         RDCOM.(C(3)...3)                                                              *074 LM00098    
                  END OF CONDITIONAL                                                              *075 LM00099    
                  WHENEVER C(3) .E. $     *$                                                      *076 LM00100    
                    INPSW = 0B                                                                    *077 LM00101    
                  OR WHENEVER C(3) .E. FENCE                                                      *078 LM00102    
                    TRANSFER TO INPUT                                                             *079 LM00103    
                  OTHERWISE                                                                       *080 LM00104    
                    TRK = BCDEC.(C(3))                                                            *081 LM00105    
                    WHENEVER TRK .G. N - 1                                                        *082 LM00106    
                      PRFULA.($'R'UI'LLLEGAL TRACK NO: 'X$,C(3),$'*'B'9$)                         *083 LM00107    
                    OTHERWISE                                                                     *084 LM00108    
                      WHENEVER C(4) .E. FENCE                                                     *085 LM00109    
                        ERR = 1                                                                   *086 LM00110    
                      OTHERWISE                                                                   *087 LM00111    
                        ERR = BCDEC.(C(4))                                                        *088 LM00112    
                      END OF CONDITIONAL                                                          *089 LM00113    
                      F(0).(MTX(TRK+1), ERR)                                                      *090 LM00114    
                    END OF CONDITIONAL                                                            *091 LM00115    
                  END OF CONDITIONAL                                                              *092 LM00116    
                  WHENEVER INPSW, TRANSFER TO INPUT                                               *093 LM00117    
                  WRWAIT.(N1, N2, 1, MTX(N)...N, WREOF., T)                                       *094 LM00118    
                  TRANSFER TO DONE                                                                *095 LM00119    
                                                                                                       LM00120    
      PRINT       WHENEVER C(3) .E. $ONLINE$ .OR. C(3) .E. $    ON$                               *096 LM00121    
                    ONSW = 1B                                                                     *097 LM00122    
                  OR WHENEVER C(3) .E. $FFLINE$ .OR. C(3) .E. $   OFF$                            *098 LM00123    
                    ONSW = 0B                                                                     *099 LM00124    
                  OR WHENEVER C(3) .E. FENCE                                                      *100 LM00125    
                    CONTINUE                                                                      *101 LM00126    
                  OTHERWISE                                                                       *102 LM00127    
                    TRK = BCDEC.(C(3))                                                            *103 LM00128    
                    WHENEVER TRK .G. N - 1                                                        *104 LM00129    
                      PRFULA.($'R'UI'LLLEGAL TRACK NO: 'X$,C(3),$'*'B'9$)                         *105 LM00130    
                      TRANSFER TO DONE                                                            *106 LM00131    
                    END OF CONDITIONAL                                                            *107 LM00132    
                    WHENEVER MTX(TRK+1) .E. 1                                                     *108 LM00133    
                      S = $'8$                                                                    *109 LM00134    
                    OTHERWISE                                                                     *110 LM00135    
                      S = $S'8$                                                                   *111 LM00136    
                    END OF CONDITIONAL                                                            *112 LM00137    
                    PRFULL.($ '8$,BZ57.(DERBC.(MTX(TRK+1))),$'L ERROR'8$, S)                      *113 LM00138    
                    TRANSFER TO DONE                                                              *114 LM00139    
                  END OF CONDITIONAL                                                              *115 LM00140    
                  PRSET.(ONSW)                                                                    *116 LM00141    
                  PAGE = 0                                                                        *117 LM00142    
                  LINES = LMAX                                                                    *118 LM00143    
                  LAST = 0                                                                        *119 LM00144    
                  THROUGH L2, FOR CYL = 0, 1, CYL .GE. N/40                                       *120 LM00145    
                    WHENEVER ONSW                                                                 *121 LM00146    
                      THROUGH L3, FOR HD = 0, 1, HD .G. 39                                        *122 LM00147    
                        WHENEVER MTX(CYL, HD) .NE. 0                                              *123 LM00148    
                          WHENEVER CYL .NE. LAST+1, PRMESS.                                       *124 LM00149    
                          LAST = CYL                                                              *125 LM00150    
                          TRANSFER TO PT                                                          *126 LM00151    
                        END OF CONDITIONAL                                                        *127 LM00152    
      L3              CONTINUE                                                                    *128 LM00153    
                    OTHERWISE                                                                     *129 LM00154    
                      WHENEVER LINES .E. LMAX                                                     *130 LM00155    
                        PAGE = PAGE + 1                                                           *131 LM00156    
                        PRINT FORMAT HEADER, N1, N2, DATE(1)...DATE(3), PAGE                      *132 LM00157    
                        LINES = 0                                                                 *133 LM00158    
                      END OF CONDITIONAL                                                          *134 LM00159    
                      LINES = LINES + 1                                                           *135 LM00160    
      PT              PRINT FORMAT LINE, CYL, (HD = 0, 1, HD .G. 39, FMT.(MTX(CYL, HD)))          *136 LM00161    
                    END OF CONDITIONAL                                                            *137 LM00162    
      L2          CONTINUE                                                                        *138 LM00163    
                  TRANSFER TO DONE                                                                *139 LM00164    
                                                                                                       LM00165    
      QUIT        RQSW = 0B                                                                       *140 LM00166    
                  TRANSFER TO DONE                                                                *141 LM00167    
                                                                                                       LM00168    
      INTRPT      WHENEVER N1 .V. N2 .NE. 0                                                       *142 LM00169    
                    CLOSE.(N1, N2)                                                                *143 LM00170    
                    N1 = 0                                                                        *144 LM00171    
                    N2 = 0                                                                        *145 LM00172    
                  END OF CONDITIONAL                                                              *146 LM00173    
                  TRANSFER TO DONE                                                                *147 LM00174    
                                                                                                       LM00175    
      HELP        WHENEVER C(1) .NE. FENCE                                                        *148 LM00176    
                    HRQSW = 1B                                                                    *149 LM00177    
      L4            THROUGH L4, FOR I = 0, 1, C(1).E.CTB(I) .OR. CTB(I).E.FENCE                   *150 LM00178    
                    TRANSFER TO H1                                                                *151 LM00179    
                  OTHERWISE                                                                       *152 LM00180    
                    HRQSW = 0B                                                                    *153 LM00181    
                    THROUGH L5, FOR I = 0, 2, CTB(I).E.FENCE .OR. HRQSW                           *154 LM00182    
                      C(1) = CTB(I)                                                               *155 LM00183    
      H1              PRFULA.($'U'X$,BZ57.(C(1)))                                                 *156 LM00184    
                      WHENEVER HTB(I) .A.  1K .E.  1K, PRFULA.($'L ACC MOD'8$)                    *157 LM00185    
                      WHENEVER HTB(I) .A.  2K .E.  2K, PRFULA.($'L -TRK-'8$)                      *158 LM00186    
                      WHENEVER HTB(I) .A.  4K .E.  4K, PRFULA.($'L -N-'8$)                        *159 LM00187    
                      WHENEVER HTB(I) .A. 10K .E. 10K, PRFULA.($'L FUNCTION'8$)                   *160 LM00188    
                      WHENEVER HTB(I) .A. 20K .E. 20K, PRFULA.($'L UNKNOWN'8$)                    *161 LM00189    
                      PRFULL.                                                                     *162 LM00190    
      L5            CONTINUE                                                                      *163 LM00191    
                  END OF CONDITIONAL                                                              *164 LM00192    
                                                                                                       LM00193    
                                                                                                       LM00194    
      DONE        WHENEVER RQSW                                                                   *165 LM00195    
                    PRFULL.($'UR'LEADY.'*$)                                                       *166 LM00196    
                    TRANSFER TO READ                                                              *167 LM00197    
                  OTHERWISE                                                                       *168 LM00198    
                    WHENEVER N1 .V. N2 .NE. 0                                                     *169 LM00199    
                      CLOSE.(N1, N2)                                                              *170 LM00200    
                    END OF CONDITIONAL                                                            *171 LM00201    
                    PRSET.(1)                                                                     *172 LM00202    
                    PRMESS.($*$)                                                                  *173 LM00203    
                    CHNCOM.(0)                                                                    *174 LM00204    
                  END OF CONDITIONAL                                                              *175 LM00205    
                                                                                                       LM00206    
      OPNERR      PRDIAG.                                                                         *176 LM00207    
                  TRANSFER TO DONE                                                                *177 LM00208    
                                                                                                       LM00209    
      OUTPER      PRDIAG.                                                                         *178 LM00210    
                  PRSET.(1)                                                                       *179 LM00211    
                  TRANSFER TO DONE                                                                *180 LM00212    
                                                                                                       LM00213    
                                                                                                       LM00214    
                  VECTOR VALUES HEADER = $23H1DISK MAP OF I/O ERRORS, T52, 7HACCESS ,$,           *181 LM00215    
                1   $RC1, 11H    MODULE , RC1, T100, 3C6, 9H    PAGE , I2/$,                      *181 LM00216    
                2   $4H0CYL, S62, 4HHEAD/S8,$,                                                    *181 LM00217    
                3   $30H 00 01 02 03 04 05 06 07 08 09,$,                                         *181 LM00218    
                4   $30H 10 11 12 13 14 15 16 17 18 19,$,                                         *181 LM00219    
                5   $30H 20 21 22 23 24 25 26 27 28 29,$,                                         *181 LM00220    
                6   $30H 30 31 32 33 34 35 36 37 38 39/*$                                         *181 LM00221    
                  VECTOR VALUES LINE = $S1, I3, S4, 40RC3*$                                       *182 LM00222    
                                                                                                       LM00223    
                                                                                                       LM00224    
                  INTERNAL FUNCTION (A, B)                                                        *183 LM00225    
                  ENTRY TO ADD.                                                                   *184 LM00226    
                    A = A + B                                                                     *185 LM00227    
                    FUNCTION RETURN                                                               *186 LM00228    
                  ENTRY TO REP.                                                                   *187 LM00229    
                    A = B                                                                         *188 LM00230    
                    FUNCTION RETURN                                                               *189 LM00231    
                  END OF FUNCTION                                                                 *190 LM00232    
                                                                                                       LM00233    
                  INTERNAL FUNCTION (A)                                                           *191 LM00234    
                  ENTRY TO FMT.                                                                   *192 LM00235    
                    T = BZEL.(DERBC.(A))                                                          *193 LM00236    
                    WHENEVER T .E. $     0$, T = $     .$                                         *194 LM00237    
                    FUNCTION RETURN T                                                             *195 LM00238    
                  END OF FUNCTION                                                                 *196 LM00239    
                                                                                                       LM00240    
                  END OF PROGRAM                                                                  *197 LM00241    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   25256 TRANSFER VECTOR LENGTH  00035 PROGRAM BEGINS    24040
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BEGIN  00045   4        H1     00050   4        L1     00040   4        MODIFY 00055   4        PT     00062   4  
      CHG    00046   4        HD     00177   1        L2     00040   4        MTX    23724 A 1        QUIT   00063   4  
      C      00106 A 1        HEADER 00254 A 1        L3     00040   4        N1     23725   1        READ   00064   4  
      CTB    00121 A 1        HELP   00051   4        L4     00040   4        N2     23726   1        RESET  00065   4  
      CYL    00122   1        HRQSW  00255   2        L5     00040   4        NOFILE 00056   4        RQSW   23732   2  
      CYLTMP 00173 A 1        HTB    00270 A 1        LAST   00273   1        N      23727   1        S      23733   1  
      DATE   00044 A 1        INPSW  00271   2        LINE   00276 A 1        ONSW   23730   2        TIME   00041   1  
      DONE   00047   4        INPUT  00052   4        LINES  00277   1        OPNERR 00057   4        TRK    23734   1  
      ERR    00174   1        INTRPT 00053   4        LMAX   00300 A 1        OUTPER 00060   4        T      23735   1  
      FENCE  00175 A 1        I      00272   1        LOOKUP 00054   4        PAGE   23731   1        TTB    00077 A 4  
      F      00176   3        L0     00040   4        MDIM   00303 A 1        PRINT  00061   4        X      00100   4  
0FUNCTION DICTIONARY    
      .03311 00000   0        BCDEC  00001   1        BZ57   00002   1        BZEL   00003   1        CHNCOM 00004   1  
      CLOSE  00005   1        COMARG 00006   1        DERBC  00007   1        EXIT   00010   1        FERRTN 00011   1  
      FTIME  00012   1        GTDYTM 00013   1        .PRINT 00014   1        .SETUP 00015   1        OPEN   00016   1  
      PRDIAG 00017   1        PRFIL  00020   1        PRFULA 00021   1        PRFULL 00022   1        PRMESS 00023   1  
      PRSET  00024   1        RCOUPX 00025   1        RDCOM  00026   1        RDEOF  00027   1        RDWAIT 00030   1  
      SETBRK 00031   1        SETERR 00032   1        WREOF  00033   1        WRWAIT 00034   1        ADD    00035   1  
      FMT    00036   1        REP    00037   1                                                                          
0ABSOLUTE CONSTANTS     
 24033 -206060606033     24032 -206060606000     24022 -146060606060     24001 +212470331454     23777 +146451144325    
 24015 -054666451410     23771 +144360644542     23747 +000000000020     23761 +106060606060     24004 +236331464514    
 23766 +144360266445     23746 +000000000010     23767 +144360404540     23742 +000000000004     24010 -024014106060    
 23770 +144360406351     24025 -204446241410     23764 +144360212323     23776 +146414676060     23751 +000000000047    
 23752 +000000000050     24017 -065114106060     23765 +144360255151     24023 -201410606060     24035 -221410606060    
 23762 +141060606060     24007 +262643314525     24030 -206060462626     24016 -064543314525     24031 -206060604645    
 23775 +145414221411     24000 +146760606060     24011 -026045463560     24013 -036063512123     24012 -034343252721    
 23772 +145114643114     24034 -206060606054     23741 +000000000003     24021 -141422141160     24014 -037047253314    
 23773 +145114646314     23753 +000000000100     24020 -116660606060     23755 +000000023420     23754 +000000000620    
 24027 -204446246002     24026 -204446246000     23745 +000000000007     24024 -202123236000     24006 +256263336060    
 24005 +246051255064     24002 +216065214331     24036 -226045466360     23763 +142214436031     23774 +145114676060    
 23740 +000000000002     23760 +000061000061     24037 -377700000000     23756 +000000777700     23757 +000060606060    
 23750 +000000000030     23744 +000000000006     23743 +000000000005     23736 +000000000000     23737 +000000000001    
 24003 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00045 TXL -324227024224       00046 TXL -324362024357       00047 TXL -325125025123       00050 TXL -325036025030      
 00051 TXL -324764024761       00052 TXL -324372024370       00053 TXL -324751024743       00054 TXL -324161024147      
 00055 TXL -324354024352       00056 TXL -324246024244       00057 TXL -325152025151       00060 TXL -325154025153      
 00061 TXL -324475024467       00062 TXL -324736024704       00063 TXL -324742024740       00064 TXL -324117024115      
 00065 TXL -324357024355                                                                                                
0PROGRAM    
                 N'R                                                                001  LM00005
                 B'N RQSW, INPSW, ONSW, HRQSW                                       002  LM00006
                 S'L TTB, X                                                         003  LM00007
                 FUNCTION NAME F                                                    004  LM00008
                 D'N C(5), MTX(10000, MDIM), DATE(3), CYLTMP(40)                    005  LM00010
                 E'E (TIME, DATE(3))                                                006  LM00011
                 V'S MDIM = 2, 42, 40                                               007  LM00012
 24040 TSX +0 07400 4 00015    00301     +0 00000 0 00050    00302     +0 00000 0 00052    00303     +0 00000 0 00002   
                 V'S CTB = $MODIFY$,$     M$,$ RESET$,$     R$,                     008  LM00014
                1  $ PRINT$,$     P$,$  QUIT$,$     Q$,$  HELP$,$     H$,           008  LM00015
                2  777777777777K                                                    008  LM00016
 00107     -3 77777 7 77777    00110     -2 06060 6 06030    00111     -2 06030 2 54347    00112     -2 06060 6 06050   
 00113     -2 06050 6 43163    00114     -2 06060 6 06047    00115     -2 04751 3 14563    00116     -2 06060 6 06051   
 00117     -2 05125 6 22563    00120     -2 06060 6 06044    00121     -0 44624 3 12670                                 
                 V'S TTB = BEGIN, MODIFY, BEGIN, RESET, BEGIN, PRINT,               009  LM00017
                1  QUIT, QUIT, HELP, HELP                                           009  LM00018
 00066 TXL -3 00000 0 00051    00067 TXL -3 00000 0 00051    00070 TXL -3 00000 0 00063    00071 TXL -3 00000 0 00063   
 00072 TXL -3 00000 0 00061    00073 TXL -3 00000 0 00045    00074 TXL -3 00000 0 00065    00075 TXL -3 00000 0 00045   
 00076 TXL -3 00000 0 00055    00077 TXL -3 00000 0 00045                                                               
                 V'S HTB = 7K, 7K, 7K, 7K, 3K, 3K, 0K, 0K, 10K, 10K, 20K            010  LM00019
 00256     +0 00000 0 00020    00257     +0 00000 0 00010    00260     +0 00000 0 00010    00261     +0 00000 0 00000   
 00262     +0 00000 0 00000    00263     +0 00000 0 00003    00264     +0 00000 0 00003    00265     +0 00000 0 00007   
 00266     +0 00000 0 00007    00267     +0 00000 0 00007    00270     +0 00000 0 00007                                 
                 V'S FENCE = 777777777777K                                          011  LM00021
 00175     -3 77777 7 77777                                                                                             
                 V'S LMAX = 50                                                      012  LM00022
 00300     +0 00000 0 00062                                                                                             
                 SETERR.(OUTPER)                                                    013  LM00026
 24041 TSX +0 07400 4 00032    24042 TXH +3 00000 0 00060                                                               
                 FERRTN.(PRDIAG.)                                                   014  LM00027
 24043 TSX +0 07400 4 00011    24044 TXH +3 00000 0 00017                                                               
                 SETBRK.(INTRPT)                                                    015  LM00028
 24045 TSX +0 07400 4 00031    24046 TXH +3 00000 0 00053                                                               
                 RCOUPX.(DONE)                                                      016  LM00029
 24047 TSX +0 07400 4 00025    24050 TXH +3 00000 0 00047                                                               
                 PRFIL.(COMARG.(0))                                                 017  LM00030
 24051 TSX +0 07400 4 00006    24052 TXH +3 00000 0 23736    24053 STO +0 60100 0 25253    24054 TSX +0 07400 4 00020   
 24055 TXH +3 00000 0 25253                                                                                             
      L0         T'H L0, FOR I = 0, 1, I.G.5 .OR. COMARG.(I+1,C(I)) .E. FENCE       018  LM00032
 24056 CLA +0 50000 0 23736    24057 STO +0 60100 0 00272    24060 TRA +0 02000 0 24064    24061 CLA +0 50000 0 00272   
 24062 ADD +0 40000 0 23737    24063 STO +0 60100 0 00272    24064 CLA +0 50000 0 00272    24065 SUB +0 40200 0 24066   
 24066 TXH +3 00000 0 00106    24067 STA +0 62100 0 24075    24070 CLA +0 50000 0 00272    24071 ADD +0 40000 0 23737   
 24072 STO +0 60100 0 25253    24073 TSX +0 07400 4 00006    24074 TXH +3 00000 0 25253    24075 TXH +3 00000 0 00000   
 24076 SUB +0 40200 0 00175    24077 TZE +0 10000 0 24105    24100 CLA +0 50000 0 00272    24101 SUB +0 40200 0 23743   
 24102 TZE +0 10000 0 24104    24103 TPL +0 12000 0 24105    24104 TRA +0 02000 0 24061                                 
                 W'R I .E. 0                                                        019  LM00033
 24105 CLA +0 50000 0 00272    24106 SUB +0 40200 0 23736    24107 TNZ -0 10000 0 24114                                 
                   RQSW = 1B                                                        020  LM00034
 24110 CLA +0 50000 0 23737    24111 STO +0 60100 0 23732                                                               
                   T'O DONE                                                         021  LM00035
 24112 TRA +0 02000 0 00047                                                                                             
                 O'E                                                                022  LM00036
 24113 TRA +0 02000 0 24115                                                                                             
                   T'O LOOKUP                                                       023  LM00037
 24114 TRA +0 02000 0 00054                                                                                             
                 E'L                                                                024  LM00038
      READ       RDCOM.(C(0)...6)                                                   025  LM00040
 24115 TSX +0 07400 4 00026    24116 TIX +2 23744 0 00106                                                               
                 FTIME.(GTDYTM.(0),DATE(1),TIME)                                    026  LM00042
 24117 TSX +0 07400 4 00013    24120 TXH +3 00000 0 23736    24121 STO +0 60100 0 25253    24122 TSX +0 07400 4 00012   
 24123 TXH +3 00000 0 25253    24124 TXH +3 00000 0 00043    24125 TXH +3 00000 0 00041                                 
                 DATE(2) = DATE(1) .LS. 24 .V. $00    $                             027  LM00043
 24126 CAL -0 50000 0 23750    24127 STA +0 62100 0 24131    24130 CAL -0 50000 0 00043    24131 ALS +0 76700 0 00000   
 24132 ORA -0 50100 0 23757    24133 SLW +0 60200 0 00042                                                               
                 DATE(1) = DATE(1) .A. 7777K8 .V. DATE(1) .RS. 6 .A. 7777K2         028  LM00044
                1  .V. $00/00/$                                                     028  LM00045
 24134 CAL -0 50000 0 23744    24135 STA +0 62100 0 24137    24136 CAL -0 50000 0 00043    24137 LGR -0 76500 0 00000   
 24140 ANA -0 32000 0 23756    24141 SLW +0 60200 0 25253    24142 CAL -0 50000 0 00043    24143 ANA -0 32000 0 24037   
 24144 ORA -0 50100 0 25253    24145 ORA -0 50100 0 23760    24146 SLW +0 60200 0 00043                                 
      LOOKUP     T'H L1, FOR I = 0, 1, CTB(I).E.FENCE                               029  LM00048
 24147 CLA +0 50000 0 23736    24150 STO +0 60100 0 00272    24151 TRA +0 02000 0 24155    24152 CLA +0 50000 0 00272   
 24153 ADD +0 40000 0 23737    24154 STO +0 60100 0 00272    24155 LXA +0 53400 1 00272    24156 CLA +0 50000 1 00121   
 24157 SUB +0 40200 0 00175    24160 TZE +0 10000 0 24210                                                               
                   W'R C .E. CTB(I)                                                 030  LM00049
 24161 LXA +0 53400 2 00272    24162 CLA +0 50000 0 00106    24163 SUB +0 40200 2 00121    24164 TNZ -0 10000 0 24207   
                     X = TTB((I/2)*2+1)                                             031  LM00050
 24165 LDQ +0 56000 0 00272    24166 PXD -0 75400 0 00000    24167 LLS +0 76300 0 00000    24170 DVP +0 22100 0 23740   
 24171 MPY +0 20000 0 23740    24172 XCA +0 13100 0 00000    24173 ADD +0 40000 0 23737    24174 PAX +0 73400 2 00000   
 24175 CLA +0 50000 2 00077    24176 STO +0 60100 0 00100                                                               
                     T'O TTB((I/2)*2)                                               032  LM00051
 24177 LDQ +0 56000 0 00272    24200 PXD -0 75400 0 00000    24201 LLS +0 76300 0 00000    24202 DVP +0 22100 0 23740   
 24203 MPY +0 20000 0 23740    24204 XCA +0 13100 0 00000    24205 PAX +0 73400 2 00000    24206 TRA +0 02000 2 00077   
                   E'L                                                              033  LM00052
      L1         C'E                                                                034  LM00053
 24207 TRA +0 02000 0 24152                                                                                             
                 PRFULL.($'R'X$,BZ57.(C),$'B'L IS NOT A VALID REQUEST.$)            035  LM00054
 24210 TSX +0 07400 4 00002    24211 TXH +3 00000 0 00106    24212 STO +0 60100 0 25253    24213 TSX +0 07400 4 00022   
 24214 TXH +3 00000 0 23774    24215 TXH +3 00000 0 25253    24216 TXH +3 00000 0 23763    24217 TXH +3 00000 0 24036   
 24220 TXH +3 00000 0 24002    24221 TXH +3 00000 0 24005    24222 TXH +3 00000 0 24006                                 
                 T'O DONE                                                           036  LM00055
 24223 TRA +0 02000 0 00047                                                                                             
      BEGIN      W'R C(1) .E. FENCE                                                 037  LM00057
 24224 CLA +0 50000 0 00105    24225 SUB +0 40200 0 00175    24226 TNZ -0 10000 0 24241                                 
                   W'R N1 .V. N2 .E. 0                                              038  LM00058
 24227 CAL -0 50000 0 23725    24230 ORA -0 50100 0 23726    24231 SLW +0 60200 0 25253    24232 CLA +0 50000 0 25253   
 24233 SUB +0 40200 0 23736    24234 TNZ -0 10000 0 24237                                                               
                     T'O NOFILE                                                     039  LM00059
 24235 TRA +0 02000 0 00056                                                                                             
                   O'E                                                              040  LM00060
 24236 TRA +0 02000 0 24240                                                                                             
                     T'O X                                                          041  LM00061
 24237 TRA +0 02000 0 00100                                                                                             
                   E'L                                                              042  LM00062
                 O'R C(2) .E. FENCE                                                 043  LM00063
 24240 TRA +0 02000 0 24247    24241 CLA +0 50000 0 00104    24242 SUB +0 40200 0 00175    24243 TNZ -0 10000 0 24247   
      NOFILE       C(1) = C(0)                                                      044  LM00064
 24244 CLA +0 50000 0 00106    24245 STO +0 60100 0 00105                                                               
                   T'O HELP                                                         045  LM00065
 24246 TRA +0 02000 0 00051                                                                                             
                 E'L                                                                046  LM00066
                 C(1) = (C(1) .A. 1) .V. $ ACC 0$                                   047  LM00067
 24247 CAL -0 50000 0 00105    24250 ANA -0 32000 0 23737    24251 ORA -0 50100 0 24024    24252 SLW +0 60200 0 00105   
                 C(2) = (C(2) .A. 7) .V. $ MOD 0$                                   048  LM00068
 24253 CAL -0 50000 0 00104    24254 ANA -0 32000 0 23745    24255 ORA -0 50100 0 24026    24256 SLW +0 60200 0 00104   
                 W'R C(1) .E. $ ACC 0$ .AND. C(2) .E. $ MOD 2$                      049  LM00069
 24257 CLA +0 50000 0 00104    24260 SUB +0 40200 0 24027    24261 TNZ -0 10000 0 24270    24262 CLA +0 50000 0 00105   
 24263 SUB +0 40200 0 24024    24264 TNZ -0 10000 0 24270                                                               
                   N = 400                                                          050  LM00070
 24265 CLA +0 50000 0 23754    24266 STO +0 60100 0 23727                                                               
                 O'E                                                                051  LM00071
 24267 TRA +0 02000 0 24272                                                                                             
                   N = 10000                                                        052  LM00072
 24270 CLA +0 50000 0 23755    24271 STO +0 60100 0 23727                                                               
                 E'L                                                                053  LM00073
                 W'R C(1) .NE. N1 .OR. C(2) .NE. N2                                 054  LM00074
 24272 CLA +0 50000 0 00104    24273 SUB +0 40200 0 23726    24274 TNZ -0 10000 0 24300    24275 CLA +0 50000 0 00105   
 24276 SUB +0 40200 0 23725    24277 TZE +0 10000 0 24351                                                               
                   W'R N1 .V. N2 .NE. 0                                             055  LM00075
 24300 CAL -0 50000 0 23725    24301 ORA -0 50100 0 23726    24302 SLW +0 60200 0 25253    24303 CLA +0 50000 0 25253   
 24304 SUB +0 40200 0 23736    24305 TZE +0 10000 0 24315                                                               
                     CLOSE.(N1, N2)                                                 056  LM00076
 24306 TSX +0 07400 4 00005    24307 TXH +3 00000 0 23725    24310 TXH +3 00000 0 23726                                 
                     N1 = 0                                                         057  LM00077
 24311 CLA +0 50000 0 23736    24312 STO +0 60100 0 23725                                                               
                     N2 = 0                                                         058  LM00078
 24313 CLA +0 50000 0 23736    24314 STO +0 60100 0 23726                                                               
                   E'L                                                              059  LM00079
                   W'R C(1) .V. C(2) .NE. 0                                         060  LM00080
 24315 CAL -0 50000 0 00105    24316 ORA -0 50100 0 00104    24317 SLW +0 60200 0 25253    24320 CLA +0 50000 0 25253   
 24321 SUB +0 40200 0 23736    24322 TZE +0 10000 0 24351                                                               
                     OPEN.($RW$, C(1), C(2), 100K, 2, OPNERR)                       061  LM00081
 24323 TSX +0 07400 4 00016    24324 TXH +3 00000 0 24020    24325 TXH +3 00000 0 00105    24326 TXH +3 00000 0 00104   
 24327 TXH +3 00000 0 23753    24330 TXH +3 00000 0 23740    24331 TXH +3 00000 0 00057                                 
                     N1 = C(1)                                                      062  LM00082
 24332 CLA +0 50000 0 00105    24333 STO +0 60100 0 23725                                                               
                     N2 = C(2)                                                      063  LM00083
 24334 CLA +0 50000 0 00104    24335 STO +0 60100 0 23726                                                               
                     RDWAIT.(N1, N2, 1, MTX(N)...N, RDEOF., T)                      064  LM00084
 24336 CLA +0 50000 0 23727    24337 SUB +0 40200 0 24340    24340 TXH +3 00000 0 23724    24341 STA +0 62100 0 24346   
 24342 TSX +0 07400 4 00030    24343 TXH +3 00000 0 23725    24344 TXH +3 00000 0 23726    24345 TXH +3 00000 0 23737   
 24346 TIX +2 23727 0 00000    24347 TXH +3 00000 0 00027    24350 TXH +3 00000 0 23735                                 
                   E'L                                                              065  LM00085
                 E'L                                                                066  LM00086
                 T'O X                                                              067  LM00087
 24351 TRA +0 02000 0 00100                                                                                             
      MODIFY     F = ADD.                                                           068  LM00090
 24352 CLA +0 50000 0 00035    24353 STO +0 60100 0 00176                                                               
                 T'O CHG                                                            069  LM00091
 24354 TRA +0 02000 0 00046                                                                                             
      RESET      F = REP.                                                           070  LM00093
 24355 CLA +0 50000 0 00037    24356 STO +0 60100 0 00176                                                               
      CHG        W'R C(3) .E. FENCE                                                 071  LM00095
 24357 CLA +0 50000 0 00103    24360 SUB +0 40200 0 00175    24361 TNZ -0 10000 0 24372                                 
                   INPSW = 1B                                                       072  LM00096
 24362 CLA +0 50000 0 23737    24363 STO +0 60100 0 00271                                                               
                   PRFULA.($'R'UT'LYPE.'*'B'9$)                                     073  LM00097
 24364 TSX +0 07400 4 00021    24365 TXH +3 00000 0 23773    24366 TXH +3 00000 0 24014    24367 TXH +3 00000 0 24021   
      INPUT        RDCOM.(C(3)...3)                                                 074  LM00098
 24370 TSX +0 07400 4 00026    24371 TIX +2 23741 0 00103                                                               
                 E'L                                                                075  LM00099
                 W'R C(3) .E. $     *$                                              076  LM00100
 24372 CLA +0 50000 0 00103    24373 SUB +0 40200 0 24034    24374 TNZ -0 10000 0 24400                                 
                   INPSW = 0B                                                       077  LM00101
 24375 CLA +0 50000 0 23736    24376 STO +0 60100 0 00271                                                               
                 O'R C(3) .E. FENCE                                                 078  LM00102
 24377 TRA +0 02000 0 24450    24400 CLA +0 50000 0 00103    24401 SUB +0 40200 0 00175    24402 TNZ -0 10000 0 24405   
                   T'O INPUT                                                        079  LM00103
 24403 TRA +0 02000 0 00052                                                                                             
                 O'E                                                                080  LM00104
 24404 TRA +0 02000 0 24450                                                                                             
                   TRK = BCDEC.(C(3))                                               081  LM00105
 24405 TSX +0 07400 4 00001    24406 TXH +3 00000 0 00103    24407 STO +0 60100 0 23734                                 
                   W'R TRK .G. N - 1                                                082  LM00106
 24410 CLA +0 50000 0 23727    24411 SUB +0 40200 0 23737    24412 CHS +0 76000 0 00002    24413 ADD +0 40000 0 23734   
 24414 TZE +0 10000 0 24427    24415 TMI -0 12000 0 24427                                                               
                     PRFULA.($'R'UI'LLLEGAL TRACK NO: 'X$,C(3),$'*'B'9$)            083  LM00107
 24416 TSX +0 07400 4 00021    24417 TXH +3 00000 0 23772    24420 TXH +3 00000 0 24012    24421 TXH +3 00000 0 24013   
 24422 TXH +3 00000 0 24011    24423 TXH +3 00000 0 24000    24424 TXH +3 00000 0 00103    24425 TXH +3 00000 0 23775   
                   O'E                                                              084  LM00108
 24426 TRA +0 02000 0 24450                                                                                             
                     W'R C(4) .E. FENCE                                             085  LM00109
 24427 CLA +0 50000 0 00102    24430 SUB +0 40200 0 00175    24431 TNZ -0 10000 0 24435                                 
                       ERR = 1                                                      086  LM00110
 24432 CLA +0 50000 0 23737    24433 STO +0 60100 0 00174                                                               
                     O'E                                                            087  LM00111
 24434 TRA +0 02000 0 24440                                                                                             
                       ERR = BCDEC.(C(4))                                           088  LM00112
 24435 TSX +0 07400 4 00001    24436 TXH +3 00000 0 00102    24437 STO +0 60100 0 00174                                 
                     E'L                                                            089  LM00113
                     F(0).(MTX(TRK+1), ERR)                                         090  LM00114
 24440 CLA +0 50000 0 23734    24441 ADD +0 40000 0 23737    24442 SUB +0 40200 0 24443    24443 TXH +3 00000 0 23724   
 24444 STA +0 62100 0 24446    24445 TSX +0 07400 4 00176    24446 TXH +3 00000 0 00000    24447 TXH +3 00000 0 00174   
                   E'L                                                              091  LM00115
                 E'L                                                                092  LM00116
                 W'R INPSW, T'O INPUT                                               093  LM00117
 24450 NZT -0 52000 0 00271    24451 TRA +0 02000 0 24453    24452 TRA +0 02000 0 00052                                 
                 WRWAIT.(N1, N2, 1, MTX(N)...N, WREOF., T)                          094  LM00118
 24453 CLA +0 50000 0 23727    24454 SUB +0 40200 0 24455    24455 TXH +3 00000 0 23724    24456 STA +0 62100 0 24463   
 24457 TSX +0 07400 4 00034    24460 TXH +3 00000 0 23725    24461 TXH +3 00000 0 23726    24462 TXH +3 00000 0 23737   
 24463 TIX +2 23727 0 00000    24464 TXH +3 00000 0 00033    24465 TXH +3 00000 0 23735                                 
                 T'O DONE                                                           095  LM00119
 24466 TRA +0 02000 0 00047                                                                                             
      PRINT      W'R C(3) .E. $ONLINE$ .OR. C(3) .E. $    ON$                       096  LM00121
 24467 CLA +0 50000 0 00103    24470 SUB +0 40200 0 24031    24471 TZE +0 10000 0 24475    24472 CLA +0 50000 0 00103   
 24473 SUB +0 40200 0 24016    24474 TNZ -0 10000 0 24500                                                               
                   ONSW = 1B                                                        097  LM00122
 24475 CLA +0 50000 0 23737    24476 STO +0 60100 0 23730                                                               
                 O'R C(3) .E. $FFLINE$ .OR. C(3) .E. $   OFF$                       098  LM00123
 24477 TRA +0 02000 0 24574    24500 CLA +0 50000 0 00103    24501 SUB +0 40200 0 24030    24502 TZE +0 10000 0 24506   
 24503 CLA +0 50000 0 00103    24504 SUB +0 40200 0 24007    24505 TNZ -0 10000 0 24511                                 
                   ONSW = 0B                                                        099  LM00124
 24506 CLA +0 50000 0 23736    24507 STO +0 60100 0 23730                                                               
                 O'R C(3) .E. FENCE                                                 100  LM00125
 24510 TRA +0 02000 0 24574    24511 CLA +0 50000 0 00103    24512 SUB +0 40200 0 00175    24513 TNZ -0 10000 0 24515   
                   C'E                                                              101  LM00126
                 O'E                                                                102  LM00127
 24514 TRA +0 02000 0 24574                                                                                             
                   TRK = BCDEC.(C(3))                                               103  LM00128
 24515 TSX +0 07400 4 00001    24516 TXH +3 00000 0 00103    24517 STO +0 60100 0 23734                                 
                   W'R TRK .G. N - 1                                                104  LM00129
 24520 CLA +0 50000 0 23727    24521 SUB +0 40200 0 23737    24522 CHS +0 76000 0 00002    24523 ADD +0 40000 0 23734   
 24524 TZE +0 10000 0 24537    24525 TMI -0 12000 0 24537                                                               
                     PRFULA.($'R'UI'LLLEGAL TRACK NO: 'X$,C(3),$'*'B'9$)            105  LM00130
 24526 TSX +0 07400 4 00021    24527 TXH +3 00000 0 23772    24530 TXH +3 00000 0 24012    24531 TXH +3 00000 0 24013   
 24532 TXH +3 00000 0 24011    24533 TXH +3 00000 0 24000    24534 TXH +3 00000 0 00103    24535 TXH +3 00000 0 23775   
                     T'O DONE                                                       106  LM00131
 24536 TRA +0 02000 0 00047                                                                                             
                   E'L                                                              107  LM00132
                   W'R MTX(TRK+1) .E. 1                                             108  LM00133
 24537 CLA +0 50000 0 23734    24540 ADD +0 40000 0 23737    24541 PAX +0 73400 1 00000    24542 CLA +0 50000 1 23724   
 24543 SUB +0 40200 0 23737    24544 TNZ -0 10000 0 24550                                                               
                     S = $'8$                                                       109  LM00134
 24545 CLA +0 50000 0 23762    24546 STO +0 60100 0 23733                                                               
                   O'E                                                              110  LM00135
 24547 TRA +0 02000 0 24552                                                                                             
                     S = $S'8$                                                      111  LM00136
 24550 CLA +0 50000 0 24035    24551 STO +0 60100 0 23733                                                               
                   E'L                                                              112  LM00137
                   PRFULL.($ '8$,BZ57.(DERBC.(MTX(TRK+1))),$'L ERROR'8$, S)         113  LM00138
 24552 CLA +0 50000 0 23734    24553 ADD +0 40000 0 23737    24554 SUB +0 40200 0 24555    24555 TXH +3 00000 0 23724   
 24556 STA +0 62100 0 24560    24557 TSX +0 07400 4 00007    24560 TXH +3 00000 0 00000    24561 STO +0 60100 0 25253   
 24562 TSX +0 07400 4 00002    24563 TXH +3 00000 0 25253    24564 STO +0 60100 0 25253    24565 TSX +0 07400 4 00022   
 24566 TXH +3 00000 0 24023    24567 TXH +3 00000 0 25253    24570 TXH +3 00000 0 23765    24571 TXH +3 00000 0 24017   
 24572 TXH +3 00000 0 23733                                                                                             
                   T'O DONE                                                         114  LM00139
 24573 TRA +0 02000 0 00047                                                                                             
                 E'L                                                                115  LM00140
                 PRSET.(ONSW)                                                       116  LM00141
 24574 TSX +0 07400 4 00024    24575 TXH +3 00000 0 23730                                                               
                 PAGE = 0                                                           117  LM00142
 24576 CLA +0 50000 0 23736    24577 STO +0 60100 0 23731                                                               
                 LINES = LMAX                                                       118  LM00143
 24600 CLA +0 50000 0 00300    24601 STO +0 60100 0 00277                                                               
                 LAST = 0                                                           119  LM00144
 24602 CLA +0 50000 0 23736    24603 STO +0 60100 0 00273                                                               
                 T'H L2, FOR CYL = 0, 1, CYL .GE. N/40                              120  LM00145
 24604 CLA +0 50000 0 23736    24605 STO +0 60100 0 00122    24606 TRA +0 02000 0 24612    24607 CLA +0 50000 0 00122   
 24610 ADD +0 40000 0 23737    24611 STO +0 60100 0 00122    24612 LDQ +0 56000 0 23727    24613 PXD -0 75400 0 00000   
 24614 LLS +0 76300 0 00000    24615 DVP +0 22100 0 23752    24616 XCA +0 13100 0 00000    24617 CHS +0 76000 0 00002   
 24620 ADD +0 40000 0 00122    24621 TZE +0 10000 0 24737    24622 TPL +0 12000 0 24737                                 
                   W'R ONSW                                                         121  LM00146
 24623 NZT -0 52000 0 23730    24624 TRA +0 02000 0 24662                                                               
                     T'H L3, FOR HD = 0, 1, HD .G. 39                               122  LM00147
 24625 CLA +0 50000 0 23736    24626 STO +0 60100 0 00177    24627 TRA +0 02000 0 24633    24630 CLA +0 50000 0 00177   
 24631 ADD +0 40000 0 23737    24632 STO +0 60100 0 00177    24633 CLA +0 50000 0 00177    24634 SUB +0 40200 0 23751   
 24635 TZE +0 10000 0 24637    24636 TPL +0 12000 0 24661                                                               
                       W'R MTX(CYL, HD) .NE. 0                                      123  LM00148
 24637 LDQ +0 56000 0 00177    24640 CLA +0 50000 0 00122    24641 TSX +0 07400 4 00000    24642 TXH +3 00303 0 23724   
 24643 PAX +0 73400 1 00000    24644 CLA +0 50000 1 23724    24645 SUB +0 40200 0 23736    24646 TZE +0 10000 0 24660   
                         W'R CYL .NE. LAST+1, PRMESS.                               124  LM00149
 24647 CLA +0 50000 0 00273    24650 ADD +0 40000 0 23737    24651 CHS +0 76000 0 00002    24652 ADD +0 40000 0 00122   
 24653 TZE +0 10000 0 24655    24654 TSX +0 07400 4 00023                                                               
                         LAST = CYL                                                 125  LM00150
 24655 CLA +0 50000 0 00122    24656 STO +0 60100 0 00273                                                               
                         T'O PT                                                     126  LM00151
 24657 TRA +0 02000 0 00062                                                                                             
                       E'L                                                          127  LM00152
      L3             C'E                                                            128  LM00153
 24660 TRA +0 02000 0 24630                                                                                             
                   O'E                                                              129  LM00154
 24661 TRA +0 02000 0 24736                                                                                             
                     W'R LINES .E. LMAX                                             130  LM00155
 24662 CLA +0 50000 0 00277    24663 SUB +0 40200 0 00300    24664 TNZ -0 10000 0 24701                                 
                       PAGE = PAGE + 1                                              131  LM00156
 24665 CLA +0 50000 0 23731    24666 ADD +0 40000 0 23737    24667 STO +0 60100 0 23731                                 
                       P'T HEADER, N1, N2, DATE(1)...DATE(3), PAGE                  132  LM00157
 24670 TSX +0 07400 4 00014    24671 STR -1 00254 1 25254    24672 STR -1 00000 0 23725    24673 STR -1 00000 0 23726   
 24674 STR -1 00041 0 00043    24675 STR -1 00000 0 23731    24676 STR -1 00000 0 00000                                 
                       LINES = 0                                                    133  LM00158
 24677 CLA +0 50000 0 23736    24700 STO +0 60100 0 00277                                                               
                     E'L                                                            134  LM00159
                     LINES = LINES + 1                                              135  LM00160
 24701 CLA +0 50000 0 00277    24702 ADD +0 40000 0 23737    24703 STO +0 60100 0 00277                                 
      PT             P'T LINE, CYL, (HD = 0, 1, HD .G. 39, FMT.(MTX(CYL, HD)))      136  LM00161
 24704 TSX +0 07400 4 00014    24705 STR -1 00276 1 25254    24706 STR -1 00000 0 00122    24707 CLA +0 50000 0 23736   
 24710 STO +0 60100 0 00177    24711 TRA +0 02000 0 24715    24712 CLA +0 50000 0 00177    24713 ADD +0 40000 0 23737   
 24714 STO +0 60100 0 00177    24715 CLA +0 50000 0 00177    24716 SUB +0 40200 0 23751    24717 TZE +0 10000 0 24721   
 24720 TPL +0 12000 0 24735    24721 LDQ +0 56000 0 00177    24722 CLA +0 50000 0 00122    24723 TSX +0 07400 4 00000   
 24724 TXH +3 00303 0 23724    24725 SUB +0 40200 0 24726    24726 TXH +3 00000 0 23724    24727 STA +0 62100 0 24731   
 24730 TSX +0 07400 4 00036    24731 TXH +3 00000 0 00000    24732 STO +0 60100 0 25253    24733 STR -1 00000 0 25253   
 24734 TRA +0 02000 0 24712    24735 STR -1 00000 0 00000                                                               
                   E'L                                                              137  LM00162
      L2         C'E                                                                138  LM00163
 24736 TRA +0 02000 0 24607                                                                                             
                 T'O DONE                                                           139  LM00164
 24737 TRA +0 02000 0 00047                                                                                             
      QUIT       RQSW = 0B                                                          140  LM00166
 24740 CLA +0 50000 0 23736    24741 STO +0 60100 0 23732                                                               
                 T'O DONE                                                           141  LM00167
 24742 TRA +0 02000 0 00047                                                                                             
      INTRPT     W'R N1 .V. N2 .NE. 0                                               142  LM00169
 24743 CAL -0 50000 0 23725    24744 ORA -0 50100 0 23726    24745 SLW +0 60200 0 25253    24746 CLA +0 50000 0 25253   
 24747 SUB +0 40200 0 23736    24750 TZE +0 10000 0 24760                                                               
                   CLOSE.(N1, N2)                                                   143  LM00170
 24751 TSX +0 07400 4 00005    24752 TXH +3 00000 0 23725    24753 TXH +3 00000 0 23726                                 
                   N1 = 0                                                           144  LM00171
 24754 CLA +0 50000 0 23736    24755 STO +0 60100 0 23725                                                               
                   N2 = 0                                                           145  LM00172
 24756 CLA +0 50000 0 23736    24757 STO +0 60100 0 23726                                                               
                 E'L                                                                146  LM00173
                 T'O DONE                                                           147  LM00174
 24760 TRA +0 02000 0 00047                                                                                             
      HELP       W'R C(1) .NE. FENCE                                                148  LM00176
 24761 CLA +0 50000 0 00105    24762 SUB +0 40200 0 00175    24763 TZE +0 10000 0 25007                                 
                   HRQSW = 1B                                                       149  LM00177
 24764 CLA +0 50000 0 23737    24765 STO +0 60100 0 00255                                                               
      L4           T'H L4, FOR I = 0, 1, C(1).E.CTB(I) .OR. CTB(I).E.FENCE          150  LM00178
 24766 CLA +0 50000 0 23736    24767 STO +0 60100 0 00272    24770 TRA +0 02000 0 24774    24771 CLA +0 50000 0 00272   
 24772 ADD +0 40000 0 23737    24773 STO +0 60100 0 00272    24774 LXA +0 53400 1 00272    24775 CLA +0 50000 1 00121   
 24776 SUB +0 40200 0 00175    24777 TZE +0 10000 0 25005    25000 LXA +0 53400 2 00272    25001 CLA +0 50000 0 00105   
 25002 SUB +0 40200 2 00121    25003 TZE +0 10000 0 25005    25004 TRA +0 02000 0 24771                                 
                   T'O H1                                                           151  LM00179
 25005 TRA +0 02000 0 00050                                                                                             
                 O'E                                                                152  LM00180
 25006 TRA +0 02000 0 25123                                                                                             
                   HRQSW = 0B                                                       153  LM00181
 25007 CLA +0 50000 0 23736    25010 STO +0 60100 0 00255                                                               
                   T'H L5, FOR I = 0, 2, CTB(I).E.FENCE .OR. HRQSW                  154  LM00182
 25011 CLA +0 50000 0 23736    25012 STO +0 60100 0 00272    25013 TRA +0 02000 0 25017    25014 CLA +0 50000 0 00272   
 25015 ADD +0 40000 0 23740    25016 STO +0 60100 0 00272    25017 ZET +0 52000 0 00255    25020 TRA +0 02000 0 25123   
 25021 LXA +0 53400 1 00272    25022 CLA +0 50000 1 00121    25023 SUB +0 40200 0 00175    25024 TZE +0 10000 0 25123   
                     C(1) = CTB(I)                                                  155  LM00183
 25025 LXA +0 53400 2 00272    25026 CLA +0 50000 2 00121    25027 STO +0 60100 0 00105                                 
      H1             PRFULA.($'U'X$,BZ57.(C(1)))                                    156  LM00184
 25030 TSX +0 07400 4 00002    25031 TXH +3 00000 0 00105    25032 STO +0 60100 0 25253    25033 TSX +0 07400 4 00021   
 25034 TXH +3 00000 0 23776    25035 TXH +3 00000 0 25253                                                               
                     W'R HTB(I) .A.  1K .E.  1K, PRFULA.($'L ACC MOD'8$)            157  LM00185
 25036 LXA +0 53400 1 00272    25037 CAL -0 50000 1 00270    25040 ANA -0 32000 0 23737    25041 SLW +0 60200 0 25253   
 25042 CLA +0 50000 0 25253    25043 SUB +0 40200 0 23737    25044 TNZ -0 10000 0 25050    25045 TSX +0 07400 4 00021   
 25046 TXH +3 00000 0 23764    25047 TXH +3 00000 0 24025                                                               
                     W'R HTB(I) .A.  2K .E.  2K, PRFULA.($'L -TRK-'8$)              158  LM00186
 25050 LXA +0 53400 1 00272    25051 CAL -0 50000 1 00270    25052 ANA -0 32000 0 23740    25053 SLW +0 60200 0 25253   
 25054 CLA +0 50000 0 25253    25055 SUB +0 40200 0 23740    25056 TNZ -0 10000 0 25062    25057 TSX +0 07400 4 00021   
 25060 TXH +3 00000 0 23770    25061 TXH +3 00000 0 24010                                                               
                     W'R HTB(I) .A.  4K .E.  4K, PRFULA.($'L -N-'8$)                159  LM00187
 25062 LXA +0 53400 1 00272    25063 CAL -0 50000 1 00270    25064 ANA -0 32000 0 23742    25065 SLW +0 60200 0 25253   
 25066 CLA +0 50000 0 25253    25067 SUB +0 40200 0 23742    25070 TNZ -0 10000 0 25074    25071 TSX +0 07400 4 00021   
 25072 TXH +3 00000 0 23767    25073 TXH +3 00000 0 23762                                                               
                     W'R HTB(I) .A. 10K .E. 10K, PRFULA.($'L FUNCTION'8$)           160  LM00188
 25074 LXA +0 53400 1 00272    25075 CAL -0 50000 1 00270    25076 ANA -0 32000 0 23746    25077 SLW +0 60200 0 25253   
 25100 CLA +0 50000 0 25253    25101 SUB +0 40200 0 23746    25102 TNZ -0 10000 0 25107    25103 TSX +0 07400 4 00021   
 25104 TXH +3 00000 0 23766    25105 TXH +3 00000 0 24004    25106 TXH +3 00000 0 23761                                 
                     W'R HTB(I) .A. 20K .E. 20K, PRFULA.($'L UNKNOWN'8$)            161  LM00189
 25107 LXA +0 53400 1 00272    25110 CAL -0 50000 1 00270    25111 ANA -0 32000 0 23747    25112 SLW +0 60200 0 25253   
 25113 CLA +0 50000 0 25253    25114 SUB +0 40200 0 23747    25115 TNZ -0 10000 0 25121    25116 TSX +0 07400 4 00021   
 25117 TXH +3 00000 0 23771    25120 TXH +3 00000 0 24015                                                               
                     PRFULL.                                                        162  LM00190
 25121 TSX +0 07400 4 00022                                                                                             
      L5           C'E                                                              163  LM00191
 25122 TRA +0 02000 0 25014                                                                                             
                 E'L                                                                164  LM00192
      DONE       W'R RQSW                                                           165  LM00195
 25123 NZT -0 52000 0 23732    25124 TRA +0 02000 0 25132                                                               
                   PRFULL.($'UR'LEADY.'*$)                                          166  LM00196
 25125 TSX +0 07400 4 00022    25126 TXH +3 00000 0 23777    25127 TXH +3 00000 0 24001                                 
                   T'O READ                                                         167  LM00197
 25130 TRA +0 02000 0 00064                                                                                             
                 O'E                                                                168  LM00198
 25131 TRA +0 02000 0 25151                                                                                             
                   W'R N1 .V. N2 .NE. 0                                             169  LM00199
 25132 CAL -0 50000 0 23725    25133 ORA -0 50100 0 23726    25134 SLW +0 60200 0 25253    25135 CLA +0 50000 0 25253   
 25136 SUB +0 40200 0 23736    25137 TZE +0 10000 0 25143                                                               
                     CLOSE.(N1, N2)                                                 170  LM00200
 25140 TSX +0 07400 4 00005    25141 TXH +3 00000 0 23725    25142 TXH +3 00000 0 23726                                 
                   E'L                                                              171  LM00201
                   PRSET.(1)                                                        172  LM00202
 25143 TSX +0 07400 4 00024    25144 TXH +3 00000 0 23737                                                               
                   PRMESS.($*$)                                                     173  LM00203
 25145 TSX +0 07400 4 00023    25146 TXH +3 00000 0 24022                                                               
                   CHNCOM.(0)                                                       174  LM00204
 25147 TSX +0 07400 4 00004    25150 TXH +3 00000 0 23736                                                               
                 E'L                                                                175  LM00205
      OPNERR     PRDIAG.                                                            176  LM00207
 25151 TSX +0 07400 4 00017                                                                                             
                 T'O DONE                                                           177  LM00208
 25152 TRA +0 02000 0 00047                                                                                             
      OUTPER     PRDIAG.                                                            178  LM00210
 25153 TSX +0 07400 4 00017                                                                                             
                 PRSET.(1)                                                          179  LM00211
 25154 TSX +0 07400 4 00024    25155 TXH +3 00000 0 23737                                                               
                 T'O DONE                                                           180  LM00212
 25156 TRA +0 02000 0 00047                                                                                             
                 V'S HEADER = $23H1DISK MAP OF I/O ERRORS, T52, 7HACCESS ,$,        181  LM00215
                1  $RC1, 11H    MODULE , RC1, T100, 3C6, 9H    PAGE , I2/$,         181  LM00216
                2  $4H0CYL, S62, 4HHEAD/S8,$,                                       181  LM00217
                3  $30H 00 01 02 03 04 05 06 07 08 09,$,                            181  LM00218
                4  $30H 10 11 12 13 14 15 16 17 18 19,$,                            181  LM00219
                5  $30H 20 21 22 23 24 25 26 27 28 29,$,                            181  LM00220
                6  $30H 30 31 32 33 34 35 36 37 38 39/*$                            181  LM00221
 00200     -2 00311 6 15460    00201     -2 00307 6 00310    00202     -2 00305 6 00306    00203     -2 00303 6 00304   
 00204     -2 00301 6 00302    00205     +0 30030 6 00300    00206     -2 00211 7 36060    00207     -2 00207 6 00210   
 00210     -2 00205 6 00206    00211     -2 00203 6 00204    00212     -2 00201 6 00202    00213     +0 30030 6 00200   
 00214     -2 00111 7 36060    00215     -2 00107 6 00110    00216     -2 00105 6 00106    00217     -2 00103 6 00104   
 00220     -2 00101 6 00102    00221     +0 30030 6 00100    00222     -2 00011 7 36060    00223     -2 00007 6 00010   
 00224     -2 00005 6 00006    00225     -2 00003 6 00004    00226     -2 00001 6 00002    00227     +0 30030 6 00000   
 00230     +2 46162 1 07360    00231     -2 00430 3 02521    00232     -3 36062 0 60273    00233     +0 43000 2 37043   
 00234     -3 36031 0 26160    00235     -2 04721 2 72560    00236     -2 01130 6 06060    00237     -3 36003 2 30673   
 00240     -3 36063 0 10000    00241     -2 07360 5 12301    00242     -0 44624 6 44325    00243     +0 13060 6 06060   
 00244     -1 12301 7 36001    00245     -3 36060 6 06060    00246     +2 32325 6 26260    00247     +0 27360 0 73021   
 00250     -1 16273 6 06305    00251     -0 66025 5 15146    00252     -2 04626 6 03161    00253     -2 24260 4 42147   
 00254     +0 20330 0 12431                                                                                             
                 V'S LINE = $S1, I3, S4, 40RC3*$                                    182  LM00222
 00274     +0 40051 2 30354    00275     -3 36062 0 47360    00276     -2 20173 6 03103                                 
                 INTERNAL FUNCTION (A, B)                                           183  LM00225
 25157 TRA +0 02000 0 25215                                                                                             
                 E'O ADD.                                                           184  LM00226
 25160 TRA +0 02000 0 25163    00035 TTR +0 02100 0 25161    25161 SXA +0 63400 2 25176    25162 TSX +0 07400 2 25176   
                   A = A + B                                                        185  LM00227
 25163 CLA +0 50000 0 00023    25164 ADD +0 40000 0 00023    25165 STO +0 60100 0 00023                                 
                   F'N                                                              186  LM00228
 25166 TRA +0 02000 0 25211                                                                                             
                 E'O REP.                                                           187  LM00229
 25167 TRA +0 02000 0 25172    00037 TTR +0 02100 0 25170    25170 SXA +0 63400 2 25176    25171 TSX +0 07400 2 25176   
                   A = B                                                            188  LM00230
 25172 CLA +0 50000 0 00023    25173 STO +0 60100 0 00023                                                               
                   F'N                                                              189  LM00231
 25174 TRA +0 02000 0 25211                                                                                             
                 E'N                                                                190  LM00232
 25175 TSX +0 07400 4 00010    25176 TXH +3 00000 0 00000    25177 SXD -0 63400 1 25176    25200 SXA +0 63400 4 25211   
 25201 CLA +0 50000 4 00001    25202 STA +0 62100 0 25163    25203 STA +0 62100 0 25165    25204 STA +0 62100 0 25173   
 25205 CLA +0 50000 4 00002    25206 STA +0 62100 0 25164    25207 STA +0 62100 0 25172    25210 TRA +0 02000 2 00001   
 25211 AXT +0 77400 4 00000    25212 LXA +0 53400 2 25176    25213 LXD -0 53400 1 25176    25214 TRA +0 02000 4 00001   
                 INTERNAL FUNCTION (A)                                              191  LM00234
 25215 TRA +0 02000 0 25252                                                                                             
                 E'O FMT.                                                           192  LM00235
 25216 TRA +0 02000 0 25221    00036 TTR +0 02100 0 25217    25217 SXA +0 63400 2 25237    25220 TSX +0 07400 2 25237   
                   T = BZEL.(DERBC.(A))                                             193  LM00236
 25221 TSX +0 07400 4 00007    25222 TXH +3 00000 0 00023    25223 STO +0 60100 0 25251    25224 TSX +0 07400 4 00003   
 25225 TXH +3 00000 0 25251    25226 STO +0 60100 0 23735                                                               
                   W'R T .E. $     0$, T = $     .$                                 194  LM00237
 25227 CLA +0 50000 0 23735    25230 SUB +0 40200 0 24032    25231 TNZ -0 10000 0 25234    25232 CLA +0 50000 0 24033   
 25233 STO +0 60100 0 23735                                                                                             
                   F'N T                                                            195  LM00238
 25234 CLA +0 50000 0 23735    25235 TRA +0 02000 0 25245                                                               
                 E'N                                                                196  LM00239
 25236 TSX +0 07400 4 00010    25237 TXH +3 00000 0 00000    25240 SXD -0 63400 1 25237    25241 SXA +0 63400 4 25245   
 25242 CLA +0 50000 4 00001    25243 STO +0 60100 0 25222    25244 TRA +0 02000 2 00001    25245 AXT +0 77400 4 00000   
 25246 LXA +0 53400 2 25237    25247 LXD -0 53400 1 25237    25250 TRA +0 02000 4 00001                                 
                 END OF PROGRAM                                                     197  LM00241
 25252 TSX +0 07400 4 00010                                                                                             
1      M1416 3845  PETER R. BOS ..... READ/SCAN COMMAND FROM CONSOLE ......      04/27/70 2024.7 PAGE 1     
                  
                                     PCC     ON 
                                     NOLNK
                       00003         ENTRY   RDCOM    
                                     LBL     RCOM     
                                     PCC     OFF
                  
                                     EXTERN  RDFLXA,PARSE,RPARSE  
                  
                                     UNLIST     
                  
                  
                  
      00003                   RDCOM  SAVE    RD(X1,X2,X4,MTM) SAVE XRS AND LINKAGE  
      00007  0600 00 0 00076         STZ     FLIP          RESET SWITCH 
      00010  0441 00 4 00001         LDI     1,4           GET POINTER TO BUFFER    
      00011  0604 00 0 00034         STI     ARY           .. SAVE
      00012 -0054 00  200000         LFT     200000        IS THIS A 'BLK'    
      00013 -0054 00  100000         LFT     100000        ..     
      00014  0020 00 0 00030         TRA     START         .. NO  
      00015 -0625 00 0 00076         STL     FLIP          THIS IS A MAD CALL, BACKWARDS BUFFER 
      00016 -0500 00 4 00001         CAL     1,4           GET ADDRESS OF LAST WORD 
      00017  0737 00 1 00000         PAC     ,1            .. SAVE
      00020  0400 00 0 00077         ADD     =1            ADJUST 
      00021 -0535 00 4 00034         LDC     ARY,4         POINTER TO WORD COUNT    
      00022  0402 00 4 00000         SUB     0,4           COMPUTE ADDRESS OF FIRST WORD  
      00023  0621 00 0 00034         STA     ARY           PUT AWAY     
      00024  0737 00 2 00000         PAC     ,2            .. SAVE
      00025 -0500 00 4 00000         CAL     0,4           PICK UP WORD COUNT 
      00026  0734 00 4 00000         PAX     ,4            ..     
      00027 -0634 00 4 00034         SXD     ARY,4         ..     
                  
      00030  0074 00 4 00000  START  TSX     RDFLXA,4      READ INPUT LINE    
      00031  3 00016 0 00060         PAR     LINE,,14      ..     
      00032  0074 00 4 00001         TSX     PARSE,4       SCAN FOR BLANKS    
      00033  3 00016 0 00060         PAR     LINE,,14      ..     
      00034  3 00000 0 00000  ARY    PAR     -,,-          ..     
      00035  3 00000 0 00054         PAR     RDMORE        .. UNFINISHED LINE RETURN
      00036 -0520 00 0 00076         NZT     FLIP          WAS THIS MAD CALL  
      00037  0020 00 0 00050         TRA     RETURN        .. NO  
                  
      00040 -0500 00 1 00000  LOOP   CAL     0,1           INVERT ARRAY 
      00041  0560 00 2 00000         LDQ     0,2           ..     
      00042  0602 00 2 00000         SLW     0,2           ..     
      00043 -0600 00 1 00000         STQ     0,1           ..     
      00044  1 77777 2 00045         TXI     *+1,2,-1      INCREMENT UPPER POINTER  
      00045  1 00001 1 00046         TXI     *+1,1,1       .. AND LOWER POINTER     
      00046 -0634 00 1 00047         SXD     *+1,1         ..     
      00047  3 00000 2 00040         TXH     LOOP,2,-      REPEAT 
                  
      00050                   RETURN RETURN  (2,4),RD(X1,X2,X4,MTM) RETURN TO CALLER
                  
      00054  0074 00 4 00000  RDMORE TSX     RDFLXA,4      HERE FOR LINE WITH NO C.R.     
      00055  3 00016 0 00060         PAR     LINE,,14      .. READ SOME MORE  
      00056  0074 00 4 00002         TSX     RPARSE,4      .. AND CONTINUE SCAN     
      00057  3 00016 0 00060         PAR     LINE,,14      ..     
1      M1416 3845  PETER R. BOS ..... READ/SCAN COMMAND FROM CONSOLE ......      04/27/70 2024.7 PAGE 2     
                  
      00060                   LINE   BSS     14            INPUT BUFFER 
      00076  0 00000 0 00000  FLIP   PZE     0  
                  
      00077                          RMT     *  
                                     END  
                  
        LITERALS  
      00077  000000000001     
1      M1416 3845  PETER R. BOS ..... READ/SCAN COMMAND FROM CONSOLE ......      04/27/70 2024.7 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        100 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         34    ARY    11,   21,   23,   27
         76   FLIP     7,   15,   36
         60   LINE    31,   33,   55,   57
         40   LOOP    47
         50   RDX1     3
         51   RDX2     4
         52   RDX4     5
          1  PARSE    32
          3  RDCOM     0
         30  START    14
          0 RDFLXA    30,   54
         54 RDMORE    35
         50 RETURN    37
          2 RPARSE    56
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1      M1416 3845  PETER R. BOS .... PARSE, RPARSE, ENDLIN ... COMMAND SCANNER   04/27/70 2024.8 PAGE 1     
                  
                                     PCC     ON 
                                     NOLNK
                       00000         ENTRY   PARSE         ENTRY TO PARSE COMMAND LINE    
                       00017         ENTRY   RPARSE        REENTRY FOR LONG LINE    
                       00047         ENTRY   ENDLIN        FUDGE UP CARRIAGE RETURN 
                       00103         ENTRY   FLAG          NON-ZERO IF FIRST WORD PROCESSED     
                                     LBL     PARS     
                                     PCC     OFF
                  
      00000  0634 00 4 00055  PARSE  SXA     PX4,4         ROUTINE TO PARSE LINE    
      00001  0760 00 0 00016         LMTM                  .. NEED 4    
      00002 -0500 00 0 00104         CAL     BLANKS        INITIALIZE   
      00003  0602 00 0 00101         SLW     TEMP          ..     
      00004 -0625 00 0 00102         STL     BLNK          ..     
      00005  0600 00 0 00103         STZ     FLAG          ..     
      00006 -0500 00 4 00002         CAL     2,4           PICK UP BUFFER LOCATION  
      00007 -0734 00 5 00000         PDX     ,5            ..     
      00010  0754 00 5 00000         PXA     ,5            ..     
      00011  1 00001 5 00012         TXI     *+1,5,1       .. MAKE TNX WORK RIGHT   
      00012  0361 00 4 00002         ACL     2,4           ..     
      00013  0621 00 0 00070         STA     PUT           ..     
      00014 -0500 00 4 00003         CAL     3,4           GET END OF LINE RETURN   
      00015  0621 00 0 00046         STA     EMPTY         ..     
      00016  0020 00 0 00020         TRA     *+2           .. SKIP RPARSE AXT 
      00017  0774 00 5 00000  RPARSE AXT     -,5           REENTRY FOR NEW LINE     
      00020  0760 00 0 00016         LMTM                  .. JUST IN CASE    
      00021 -0500 00 4 00001         CAL     1,4           GET LINE LOCATION AND WORD COUNT     
      00022 -0734 00 7 00000         PDX     ,7            ..     
      00023  0754 00 7 00000         PXA     ,7            ..     
      00024  0361 00 4 00001         ACL     1,4           ..     
      00025  0621 00 0 00027         STA     GET           .. SAVE ADDRESS    
                  
      00026  0774 00 6 00006  WRD    AXT     6,6           SIX CHARACTERS PER WORD  
      00027  0560 00 7 00000  GET    LDQ     -,7           PICK UP NEXT WORD TO SCAN
      00030 -0500 00 0 00101  CHR    CAL     TEMP          HERE FOR NEXT CHAR, RESTORE PREVIOUS RESULT
      00031 -0763 00 0 00006         LGL     6             SHIFT OUT A CHARACTER    
      00032  0044 00 0 00000         PAI                   SAVE AC
      00033 -0320 00 0 00106         ANA     =O77          MASK THIS CHARACTER
      00034  0774 00 4 00006         AXT     NSPCHR,4      LOOK FOR IT IN TABLE OF CONTROL CHARACTERS 
      00035 -0340 00 4 00101         LAS     SPCHR,4       ..     
      00036  0020 00 0 00040         TRA     *+2           ..     
      00037  0020 60 4 00102         TRA*    SPCHR+1,4     .. SPECIAL CHAR. FOUND, GO DO IT     
      00040  2 00002 4 00035         TIX     *-3,4,2       ..     
      00041  0604 00 0 00101         STI     TEMP          NORMAL CHARACTER, SAVE NEW RESULT    
      00042  0600 00 0 00102         STZ     BLNK          RESET BLANK WORD INDICATOR     
      00043  2 00001 6 00030  TIX    TIX     CHR,6,1       AND GO GET NEXT CHARACTER
      00044  2 00001 7 00026         TIX     WRD,7,1       OR NEXT WORD IF OUT OF CHARACTERS    
                  
      00045  0634 00 5 00017         SXA     RPARSE,5      HERE WHEN BUFFER EMPTY, SAVE X5
      00046  0020 00 0 00000  EMPTY  TRA     -             TAKE LINE EMPTY RETURN   
                  
      00047  0534 00 5 00017  ENDLIN LXA     RPARSE,5      END OF LINE W/O CARR. RET.     
                  
      00050  0074 00 4 00064  ENDIN  TSX     STWRD,4       HERE FOR CARRIAGE RETURN 
      00051 -2 00001 5 00052         TNX     *+1,5,1       .. DECREMENT COUNTER     
      00052 -0500 00 0 00105         CAL     FENCE         .. INSURE FENCE IS LAST ARGUMENT     
1      M1416 3845  PETER R. BOS .... PARSE, RPARSE, ENDLIN ... COMMAND SCANNER   04/27/70 2024.8 PAGE 2     
                  
      00053  0522 00 0 00070         XEC     PUT           ..     
      00054  2 00001 5 00053         TIX     *-1,5,1       .. FILL OUT REMAINDER OF BUFFER
      00055  0774 00 4 00000  PX4    AXT     -,4           RESTORE X4   
      00056  0020 00 4 00004         TRA     4,4           RETURN NORMALLY    
                  
      00057  0074 00 4 00064  BLANK  TSX     STWRD,4       HERE FOR BLANK IN LINE, STORE CURRENT WORD 
      00060 -0500 00 0 00104         CAL     BLANKS        RESET TEMPORARY WORD     
      00061  0602 00 0 00101         SLW     TEMP          ..     
      00062 -0625 00 0 00102         STL     BLNK          INDICATE BLANK FOUND     
      00063  0020 00 0 00043         TRA     TIX           KEEP LOOKING 
                  
      00064  0520 00 0 00102  STWRD  ZET     BLNK          ROUTINE TO STORE WORD IN BUFFER
      00065  0020 00 4 00001         TRA     1,4           EXIT FOR REDUNDANT BLANKS
      00066 -2 00001 5 00065         TNX     *-1,5,1       EXIT IF BUFFER FILLED    
      00067 -0500 00 0 00101         CAL     TEMP          GET THIS WORD
      00070  0602 00 5 00000  PUT    SLW     -,5           PUT IT AWAY  
      00071 -0625 00 0 00103         STL     FLAG          INDICATE WORD FOUND
      00072  0020 00 4 00001         TRA     1,4           RETURN 
                  
                       00073  TSPCHR SYN     *             TABLE OF CONTROL CHARACTERS FOR PARSE
      00073 +000000000055            OCT     55            CARRIAGE RETURN    
      00074  0020 00 0 00050         TRA     ENDIN         .. ENDS LINE 
      00075 +000000000057            OCT     57            NULL (UNLIKELY)    
      00076  0020 00 0 00043         TRA     TIX           .. IS IGNORED
      00077 +000000000060            OCT     60            BLANK  
      00100  0020 00 0 00057         TRA     BLANK         .. MARKS WORD
                       00101  SPCHR  SYN     *             ..     
                       00006  NSPCHR EQU     *-TSPCHR      TABLE COUNT  
                  
      00101  0 00000 0 00000  TEMP   PZE  
      00102  0 00000 0 00000  BLNK   PZE  
      00103  0 00000 0 00000  FLAG   PZE  
                  
      00104  606060606060     BLANKS BCI     1, 
      00105 -377777777777     FENCE  OCT     777777777777   
                  
                                     END  
                  
        LITERALS  
      00106  000000000077     
1      M1416 3845  PETER R. BOS .... PARSE, RPARSE, ENDLIN ... COMMAND SCANNER   04/27/70 2024.8 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        107 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         30    CHR    43
         27    GET    25
         70    PUT    13,   53
         55    PX4     0
         43    TIX    63,   76
         26    WRD    44
        102   BLNK     4,   42,   62,   64
        103   FLAG     0,    5,   71
        101   TEMP     3,   30,   41,   61,   67
         57  BLANK   100
         46  EMPTY    15
         50  ENDIN    74
        105  FENCE    52
          0  PARSE     0
        101  SPCHR    35,   37,  101
         64  STWRD    50,   57
        104 BLANKS     2,   60
         47 ENDLIN     0
          6 NSPCHR    34,  101
         17 RPARSE     0,   45,   47
         73 TSPCHR    73,  101
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 1     
                           PETER R. BOS --- AUGUST 1967                             
                  
                                     PCC     ON 
                                     NOLNK                 DELETE LINKAGE DIRECTOR. 
                       00011         ENTRY   .PRINT        PRINT FORMAT FMT,LIST.   
                       00013         ENTRY   .COMNT        PRINT ON LINE FORMAT FMT, LIST.
                       00066         ENTRY   .PCOMT        PRINT COMMENT $...$.     
                       00101         ENTRY   .SPRNT        PRINT WITHOUT FORMAT CONVERSION.     
                       00104         ENTRY   .SCMNT        PRINT ON LINE WITHOUT FORMAT.  
                       00155         ENTRY   PRFIL         DECLARE OUTPUT FILE NAME.
                       00160         ENTRY   PRSET         SET MODE OF OUTPUT (ON OR OFF LINE). 
                       00212         ENTRY   PRGET         GET LAST PERMANENT MODE SETTING.     
                                     LBL     (SPH)         BINARY CARD LABEL. 
                                     PCC     OFF
                  
                  
                                             $.PRINT, PROCESS MAD PRINT FORMAT STATEMENT. 
                  
                  
        TRANSFER VECTOR 
      00000  743146303460     (IOH) 
      00001  665126436721     WRFLXA
      00002  665126436760     WRFLX 
      00003  222666513163     BFWRIT
      00004  222623434662     BFCLOS
      00005  222646472545     BFOPEN
      00006  222623462425     BFCODE
      00007  314625515160     IOERR 
      00010  256731636060     EXIT  
                  
      00011  0600 00 0 02655  .PRINT STZ     CMT           SET INDICATOR.     
      00012  0020 00 0 00014         TRA     *+2           AND SKIP .COMNT.   
                  
                  
                                             $.COMNT, PROCESS PRINT ON LINE FORMAT STATEMENT.   
                  
      00013 -0625 00 0 02655  .COMNT STL     CMT           SET INDICATOR.     
                  
      00014 -0500 00 0 00002         CAL     2             SAVE CURRENT LOC. 2.     
      00015  0602 00 0 02656         SLW     TEMP          ..     
      00016 -0500 00 0 00023         CAL     TRAP          SET STR TRAP RETURN.     
      00017  0602 00 0 00002         SLW     2             ..     
      00020  0600 00 0 00000         STZ     0             CLEAR OUT TRAP CELL.     
      00021 -0634 00 4 77740         SXD     L77740,4      SAVE XR4 FOR (IOH).
      00022  0020 00 4 00001         TRA     1,4           RETURN FOR CONTROL WORD. 
                  
      00023  0020 00 0 00024  TRAP   TRA     *+1           TRAP RETURN FOR STR.     
      00024 -0500 00 0 02656         CAL     TEMP          RESTORE LOC. 2     
      00025  0602 00 0 00002         SLW     2             ..     
      00026  0634 00 4 00064         SXA     XR4,4         SAVE XR4.    
      00027  0535 00 4 00000         LAC     0,4           GET TRAP LOCATION. 
      00030 -0500 00 4 77777         CAL     -1,4          GET CONTROL WORD.  
      00031 -0734 00 4 00000         PDX     0,4           TEST FOR FORMAT DIRECTION.     
      00032  0560 00 0 02664         LDQ     REV           DECR=1, MAD CALL.  
      00033  3 00000 4 00035         TXH     *+2,4,0       ..     
      00034  0560 00 0 02663         LDQ     FWD           DECR=0, FAP CALL.  
      00035  0600 00 0 77771         STZ     L77771        CLEAR SYMBOL TABLE POINTER.    
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 2     
                           PETER R. BOS --- AUGUST 1967                             
                  
      00036 -3 00001 4 00047         TXL     FMT,4,1       TEST FOR SYMBOL TABLE.   
                  
      00037  0560 00 0 02664         LDQ     REV           SYMBOL TABLE SPECIFIED.  
      00040  0600 00 0 02656         STZ     TEMP          RESET TEST CELL.   
      00041  0625 00 0 02656         STT     TEMP          DIRECTION GIVEN IN TAG.  
      00042 -0520 00 0 02656         NZT     TEMP          TAG=1, MAD CALL.   
      00043  0560 00 0 02663         LDQ     FWD           TAG=0, FAP CALL.   
      00044  0621 00 0 77771         STA     L77771        SAVE SYMBOL TABLE POINTER FOR (IOH). 
      00045 -0734 00 4 00000         PDX     0,4           FORMAT POINTER TO ADDRESS.     
      00046  0754 00 4 00000         PXA     0,4           ..     
                  
      00047 -0600 00 0 02656  FMT    STQ     TEMP          SAVE PARTIAL CONTROL WORD.     
      00050  0774 00 4 00127         AXT     WRT,4         SET UP OUTPUT TRANSMISSION ADDRESS.  
      00051 -0520 00 0 02661         NZT     SWT           TEST IF ON OR OFF LINE .PRINT. 
      00052  0520 00 0 02655         ZET     CMT           TEST IF .COMNT (ON LINE).
      00053  0774 00 4 00105         AXT     PRT,4         IF ON LINE, SET FOR WRFLX.     
      00054  0634 00 4 02656         SXA     TEMP,4        INSERT IN CONTROL WORD.  
      00055  0560 00 0 02656         LDQ     TEMP          GET WORD.    
      00056 -0600 00 0 77737         STQ     L77737        AND INSERT FOR (IOH).    
      00057 -0501 00 0 02663         ORA     FWD           GET TXH PREFIX.    
      00060  0621 00 0 77740         STA     L77740        FORMAT ADDRESS.    
      00061  0630 00 0 77740         STP     L77740        INSERT FOR (IOH).  
      00062 -0500 00 0 02665         CAL     COL           GET LINE WIDTH SPECIFICATION.  
      00063  0602 00 0 77741         SLW     L77741        INSERT FOR (IOH).  
      00064  0774 00 4 00000  XR4    AXT     -,4           RESTORE XR4. 
                  
      00065  0020 60 0 00000         TRA*    $(IOH)        EXIT TO (IOH) FOR CONVERSION.  
                  
                  
                                             $.PCOMT, PROCESS PRINT COMMENT STATEMENT.    
                  
      00066 -0500 00 4 00001  .PCOMT CAL     1,4           GET WORD COUNT.    
      00067  1 77776 4 00070         TXI     *+1,4,-2      SET XR4 TO (-BUFF).
      00070  0634 00 4 00077         SXA     .PCX4,4       SAVE XR4.    
      00071  0636 00 4 00076         SCA     PBF,4         SAVE BUFFER ADDRESS.     
      00072  0621 00 0 00100         STA     RTN           SET UP RETURN LOCATION.  
      00073  0734 00 4 00000         PAX     0,4           GET WORD COUNT.    
      00074 -0634 00 4 00076         SXD     PBF,4         INSERT IN CONTROL WORD.  
                  
      00075  0074 00 4 00101         TSX     .SPRNT,4      PRINT LINE.  
      00076  0 00000 0 00000  PBF    PZE     -,0,-         ..     
                  
      00077  0774 00 4 00000  .PCX4  AXT     -,4           RESTORE XR4. 
      00100  0020 00 4 00000  RTN    TRA     -,4           RETURN.
                  
                  
                                             $.SPRNT, PRINT WITHOUT FORMAT CONVERSION.    
                  
      00101 -0520 00 0 02661  .SPRNT NZT     SWT           TEST IF ON OR OFF LINE.  
      00102  0020 00 0 00127         TRA     WRT           ON LINE.     
      00103  0020 00 0 00105         TRA     PRT           OFF LINE.    
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 3     
                           PETER R. BOS --- AUGUST 1967                             
                  
                                             $.SCMNT, PRINT ON LINE WITHOUT FORMAT. 
                  
      00104  0020 00 0 00105  .SCMNT TRA     PRT           ON LINE.     
                  
                  
                                             PRT, PRINT ON LINE THROUGH WRFLX.
                  
      00105  0634 00 4 00125  PRT    SXA     PX4,4         SAVE XR4.    
      00106 -0500 00 4 00001         CAL     1,4           GET POINTER TO BUFFER.   
      00107 -0734 00 4 00000         PDX     0,4           WORD COUNT.  
      00110 -2 00016 4 00121         TNX     SHORT,4,N     IF LESS THAN N WORDS, SKIP.    
                  
      00111  0621 00 0 00117         STA     L1            BUFF.  
      00112 -0634 00 4 00124         SXD     L2,4          WDCT-N.
      00113  0734 00 4 00000         PAX     0,4           ..     
      00114  1 00016 4 00115         TXI     *+1,4,N       BUFF+N.
      00115  0634 00 4 00124         SXA     L2,4          INSERT FOR SECOND HALF.  
      00116  0074 00 4 00001         TSX     $WRFLXA,4     WRITE OUT FIRST PART     
      00117  0 00016 0 00000  L1     PZE     -,0,N         OF LINE ON CONSOLE.
      00120  0020 00 0 00123         TRA     *+3           SKIP.  
                  
      00121  0621 00 0 00124  SHORT  STA     L2            LESS THAN N WORDS, 
      00122  0622 00 0 00124         STD     L2            SAVE POINTER.
      00123  0074 00 4 00002         TSX     $WRFLX,4      WRITE OUT LINE OR  
      00124  0 00000 0 00000  L2     PZE     -,0,-         SECOND PART OF LINE.     
                  
      00125  0774 00 4 00000  PX4    AXT     -,4           RESTORE XR4. 
      00126  0020 00 4 00002         TRA     2,4           RETURN TO (IOH).   
                  
                  
                                             WRT, WRITE INTO DISK FILE FOR OFF-LINE PRINTING.   
                  
      00127  0634 00 4 00153  WRT    SXA     WX4,4         SAVE XR4.    
      00130 -0500 00 4 00001         CAL     1,4           GET CONTROL WORD.  
      00131  0734 00 4 00000         PAX     0,4           BUFFER ADDRESS.    
      00132  1 77777 4 00133         TXI     *+1,4,-1      EXTRA WORD FOR LINE MARK.
      00133  0634 00 4 00147         SXA     WRLOC,4       INSERT FOR WRFILE. 
      00134 -0734 00 4 00000         PDX     0,4           WDCT.  
      00135  0754 00 4 00000         PXA     0,4           TO ADDRESS.  
      00136 -0501 00 0 02670         ORA     =O777777000000 OR IN LINE MARK.  
      00137  1 00001 4 00140         TXI     *+1,4,1       INCREASE WDCT FOR LINE MARK.   
      00140 -0634 00 4 00147         SXD     WRLOC,4       INSERT FOR WRFILE. 
      00141  0560 60 0 00147         LDQ*    WRLOC         SAVE BUFF-1. 
      00142 -0600 00 0 02656         STQ     TEMP          ..     
      00143  0602 60 0 00147         SLW*    WRLOC         INSERT LINE MARK IN BUFFER.    
                  
      00144  0074 00 4 00003         TSX     $BFWRIT,4     WRITE LINE ON DISK.
      00145  3 00000 0 02657         PAR     NAME1         ..     
      00146  3 00000 0 02660         PAR     NAME2         ..     
      00147  3 00000 0 00000  WRLOC  PAR     -,,-          ..     
      00150  3 00000 0 00214         PAR     BFERR         ..     
                  
      00151 -0500 00 0 02656         CAL     TEMP          RESTORE BUFF-1.    
      00152  0602 60 0 00147         SLW*    WRLOC         ..     
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 4     
                           PETER R. BOS --- AUGUST 1967                             
                  
      00153  0774 00 4 00000  WX4    AXT     -,4           RESTORE XR4. 
      00154  0020 00 4 00002         TRA     2,4           RETURN TO (IOH).   
                  
                  
                                             $PRFIL, DECLARE OUTPUT FILE NAME.
                  
      00155 -0500 60 4 00001  PRFIL  CAL*    1,4           GET NAME.    
      00156  0602 00 0 02657         SLW     NAME1         INSERT.
      00157  0020 00 4 00002         TRA     2,4           RETURN.
                  
                  
                                             $PRSET, SET MODE OF OUTPUT FOR .PRINT. 
                  
      00160  0634 00 4 00210  PRSET  SXA     PRX4,4        SAVE XR4.    
      00161  0500 60 4 00001         CLA*    1,4           GET CONTROL WORD.  
      00162 -0120 00 0 00164         TMI     *+2           IF TEMPORARY SETTING, SKIP.    
      00163  0601 00 0 02662         STO     OLDMOD        ELSE, SET FLAG.    
      00164  0100 00 0 00175         TZE     OFFLIN        1 FOR ON-LINE, 0 FOR OFF-LINE. 
                  
      00165  0520 00 0 02661  ONLIN  ZET     SWT           TEST IF ALREADY SET.     
      00166  0020 00 4 00002         TRA     2,4           YES, EXIT.   
      00167  0074 00 4 00004         TSX     $BFCLOS,4     OTHERWISE, CLOSE OUTPUT FILE.  
      00170  3 00000 0 02657         PAR     NAME1         ..     
      00171  3 00000 0 02660         PAR     NAME2         ..     
      00172  3 00000 0 00214         PAR     BFERR         ..     
      00173 -0625 00 0 02661         STL     SWT           SET SWITCH.  
      00174  0020 00 0 00210         TRA     PRX4          EXIT.  
                  
      00175 -0520 00 0 02661  OFFLIN NZT     SWT           TEST IF ALREADY SET.     
      00176  0020 00 4 00002         TRA     2,4           YES, EXIT.   
      00177  0074 00 4 00005         TSX     $BFOPEN,4     OTHERWISE, OPEN OUTPUT FILE.   
      00200  3 00000 0 02667         PAR     =HW           ..     
      00201  3 00000 0 02657         PAR     NAME1         ..     
      00202  3 00000 0 02660         PAR     NAME2         ..     
      00203  3 00000 0 00224         PAR     BUF1          ..     
      00204  3 00000 0 01104         PAR     BUF2          ..     
      00205  3 00000 0 01764         PAR     BUF3          ..     
      00206  3 00000 0 00214         PAR     BFERR         ..     
      00207  0600 00 0 02661         STZ     SWT           SET SWITCH.  
                  
      00210  0774 00 4 00000  PRX4   AXT     -,4           RESTORE XR4. 
      00211  0020 00 4 00002         TRA     2,4           RETURN.
                  
                  
                                             $PRGET, FIND LAST PERMANENT MODE SETTING.    
                  
      00212 -0500 00 0 02662  PRGET  CAL     OLDMOD        GET MODE FLAG.     
      00213  0020 00 4 00001         TRA     1,4           RETURN.
                  
                  
                                             ERROR RETURN FROM BFOPEN, ETC.   
                  
      00214  0074 00 4 00006  BFERR  TSX     $BFCODE,4     ERROR, GET CODE.   
      00215  0100 60 0 00007         TZE*    $IOERR        IF FILE SYSTEM, ERROR, EXIT.   
      00216  0767 00 0 00036         ALS     30            SHIFT FOR PRINTING.
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 5     
                           PETER R. BOS --- AUGUST 1967                             
                  
      00217 -0501 00 0 02666         ORA     =H0.          OR IN BLANKS.
      00220  0602 00 0 02654         SLW     ERR+8         INSERT IN COMMENT. 
      00221  0074 00 4 00002         TSX     $WRFLX,4      PRINT ERROR COMMENT.     
      00222  0 00011 0 02644         PZE     ERR,0,9       ..     
      00223  0074 00 4 00010         TSX     $EXIT,4       CALL EXIT.   
                  
                  
                                             STORAGE AND CONSTANTS.     
                  
      00224                   BUF1   BSS     432           BUFFERS FOR DISK OUTPUT. 
      01104                   BUF2   BSS     432           ..     
      01764                   BUF3   BSS     432           ..     
                  
      02644  746247303473     ERR    BCI     9,(SPH), ERROR RETURN FROM BFREAD PACKAGE, ERRCOD=0.     
      02645  602551514651     
      02646  605125636451     
      02647  456026514644     
      02650  602226512521     
      02651  246047212342     
      02652  212725736025     
      02653  515123462413     
      02654  003360606060     
                  
                       00026  IOHBUF EQU     22            BUFFER LENGTH FOR (IOH). 
                       00016  N      EQU     14            BUFFER LENGTH FOR WRFLX. 
                  
      02655  0 00000 0 00000  CMT    PZE                   .PRINT/.COMNT SWITCH.    
      02656  0 00000 0 00000  TEMP   PZE                   TEMPORARY STORAGE AND TEST CELL.     
                  
      02657  0 00000 0 00000  NAME1  PZE                   OUTPUT FILE NAME.  
      02660  466463476463     NAME2  BCI     1,OUTPUT      ..     
                  
      02661  0 00000 0 00001  SWT    PZE     1             START IN ON-LINE MODE.   
      02662  0 00000 0 00000  OLDMOD PZE                   PERMANENT MODE FLAG.     
                  
      02663  3 77777 0 00000  FWD    TXH     -,0,-1        USED TO CALL (IOH).
      02664  3 00001 0 00000  REV    TXH     -,0,+1        ..     
      02665 -3 00204 0 00000  COL    TXL     0,0,132       ..     
                  
                       77771         COMMON  -200          ERASABLE.    
                       77771  L77771 COMMON  1             ..     
                       77741         COMMON  IOHBUF+1      ..     
                       77741  L77741 COMMON  1             ..     
                       77740  L77740 COMMON  1             ..     
                       77737  L77737 COMMON  1             ..     
                  
                  
                                     END  
                  
        LITERALS  
      02666  003360606060     
      02667  666060606060     
      02670  777777000000     
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77736 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
       2671 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         16      N   110,  114,  117, 2655
        117     L1   111
        124     L2   112,  115,  121,  122
       2655    CMT    11,   13,   52
       2665    COL    62
       2644    ERR   220,  222
         47    FMT    36
       2663    FWD    34,   43,   57
         76    PBF    71,   74
        105    PRT    53,  103,  104
        125    PX4   105
       2664    REV    32,   37
        100    RTN    72
       2661    SWT    51,  101,  165,  173,  175,  207
        127    WRT    50,  102
        153    WX4   127
         64    XR4    26
        224   BUF1   203
       1104   BUF2   204
       1764   BUF3   205
         10   EXIT   223
        210   PRX4   160,  174
       2656   TEMP    15,   24,   40,   41,   42,   47,   54,   55,  142,  151
         23   TRAP    16
        214  BFERR   150,  172,  206
          7  IOERR   215
         77  .PCX4    70
       2657  NAME1   145,  156,  170,  201
       2660  NAME2   146,  171,  202
        165  ONLIN      
        155  PRFIL     0
        212  PRGET     0
        160  PRSET     0
        121  SHORT   110
          2  WRFLX   123,  221
        147  WRLOC   133,  140,  141,  143,  152
          0  (IOH)    65
          4 BFCLOS   167
          6 BFCODE   214
          5 BFOPEN   177
          3 BFWRIT   144
         26 IOHBUF  2655, 2666
         13 .COMNT     0
         66 .PCOMT     0
         11 .PRINT     0
        104 .SCMNT     0
        101 .SPRNT     0,   75
      77737 L77737    56, 2666
      77740 L77740    21,   60,   61, 2666
      77741 L77741    63, 2666
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      77771 L77771    35,   44, 2666
        175 OFFLIN   164
       2662 OLDMOD   163,  212
          1 WRFLXA   116
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1      M1416 3845  PETER R. BOS ..... PROGRAM TO PROCESS FILE SYSTEM EOF .....   04/27/70 2025.1 PAGE 1     
                  
                  
                                     PCC     ON 
                                     NOLNK
                       00001         ENTRY   RDEOF    
                       00017         ENTRY   WREOF    
                                     LBL     EOF
                                     PCC     OFF
                  
                                     EXTERN  WRWAIT   
                  
                                     UNLIST     
                  
                  
      00001                   RDEOF  SAVE    ,(X4,MTM)     SAVE LINKAGE 
      00003 -0500 00 4 00004         CAL     4,4           PICK UP WORD COUNT 
      00004  0074 00 7 00044         TSX     BLKPAR,7      ..     
      00005  0771 00 0 00022         ARS     18            ..     
      00006  0734 00 7 00000         PAX     ,7            .. SAVE WORD COUNT 
      00007  0361 00 4 00004         ACL     4,4           COMPUTE BOTTOM ADDRESS   
      00010  0621 00 0 00014         STA     STZ           ..     
      00011  0754 00 7 00000         PXA     ,7            .. RESTORE WORD COUNT    
      00012  0402 60 4 00006         SUB*    6,4           .. LESS NUMBER WORDS READ
      00013  0734 00 4 00000         PAX     ,4            ..     
      00014  0600 00 4 00000  STZ    STZ     -,4           CLEAR REMAINDER OF DATA AREA   
      00015  2 00001 4 00014         TIX     *-1,4,1       ..     
      00016  0020 00 0 00042         TRA     RETURN        RETURN 
                  
                  
      00017                   WREOF  SAVE    ,(X4,MTM)     SAVE LINKAGE 
      00021 -0500 00 4 00001         CAL     1,4           SET UP POINTERS    
      00022  0621 00 0 00036         STA     WR+1          ..     
      00023 -0500 00 4 00002         CAL     2,4           ..     
      00024  0621 00 0 00037         STA     WR+2          ..     
      00025 -0500 00 4 00004         CAL     4,4           PICK UP DATA ADDRESS     
      00026  0400 60 4 00006         ADD*    6,4           PLUS WORD COUNT WRITTEN  
      00027  0621 00 0 00041         STA     WR+4          ..     
      00030  0074 00 7 00044         TSX     BLKPAR,7      GET WORD COUNT REQUESTED 
      00031  0771 00 0 00022         ARS     18            ..     
      00032  0402 60 4 00006         SUB*    6,4           LESS WORDS WRITTEN 
      00033  0767 00 0 00022         ALS     18            ..     
      00034  0622 00 0 00041         STD     WR+4          WORD COUNT FOR REMAINDER 
      00035                   WR     CALL    WRWAIT(-,-,=0,(-,,-))  WRITE REST OF DATA    
                  
      00042                   RETURN RETURN  (7,4),,(X4,MTM) RETURN TO ORIGINAL CALLER    
                  
                  
      00044  0044 00 0 00000  BLKPAR PAI                   ROUTINE TO CONVERT BLK TO PAR  
      00045 -0054 00  200000         LFT     200000        IS BLK BIT ON
      00046 -0054 00  100000         LFT     100000        YES, IS PAR BIT OFF
      00047  0020 00 7 00001         TRA     1,7           .. NO  
      00050 -0765 00 0 00022         LGR     18            POINTER TO WORD COUNT, SAVE ADDRESS  
      00051  0621 00 0 00052         STA     *+1           ..     
      00052 -0500 00 0 00000         CAL     -             PICK UP TRUE WORD COUNT  
      00053 -0763 00 0 00022         LGL     18            SHIFT TO AC  
      00054  0020 00 7 00001         TRA     1,7           RETURN 
1      M1416 3845  PETER R. BOS ..... PROGRAM TO PROCESS FILE SYSTEM EOF .....   04/27/70 2025.1 PAGE 2     
                  
      00055                          RMT     *  
                                     END  
                  
        LITERALS  
      00055  000000000000     
1      M1416 3845  PETER R. BOS ..... PROGRAM TO PROCESS FILE SYSTEM EOF .....   04/27/70 2025.1 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         56 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         35     WR    22,   24,   27,   34
         42     X4     1,   17
         14    STZ    10
          1  RDEOF     0
         17  WREOF     0
         44 BLKPAR     4,   30
         42 RETURN    16
          0 WRWAIT    35
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1       DUMMY RECOUP FOR FORMAT ERRORS                                           04/27/70 2025.2 PAGE 1     
                  
                       00005         ENTRY   RECOUP   
                       00002         ENTRY   RCOUPX   
                  
        LINKAGE DIRECTOR
      00000  000000000000     
      00001  512523466447     
                  
      00002 -0500 00 4 00001  RCOUPX CAL     1,4
      00003  0621 00 0 00006         STA     RECOUP+1 
      00004  0020 00 4 00002         TRA     2,4
      00005  0760 00 0 00016  RECOUP LMTM                  JUST IN CASE 
      00006  0020 00 0 00000         TRA     -  
                                     END  
1       DUMMY RECOUP FOR FORMAT ERRORS                                           04/27/70 2025.2 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          7 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          2 RCOUPX     0
          5 RECOUP     0,    3
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




TRKLIB   BCD 10/12/70 1510.5    6848         00000    
1      M1416 3845  PETER R. BOS ..... READ/SCAN COMMAND FROM CONSOLE ......      04/27/70 2024.7 PAGE 1     
                  
                                     PCC     ON 
                                     NOLNK
                       00003         ENTRY   RDCOM    
                                     LBL     RCOM     
                                     PCC     OFF
                  
                                     EXTERN  RDFLXA,PARSE,RPARSE  
                  
                                     UNLIST     
                  
                  
                  
      00003                   RDCOM  SAVE    RD(X1,X2,X4,MTM) SAVE XRS AND LINKAGE  
      00007  0600 00 0 00076         STZ     FLIP          RESET SWITCH 
      00010  0441 00 4 00001         LDI     1,4           GET POINTER TO BUFFER    
      00011  0604 00 0 00034         STI     ARY           .. SAVE
      00012 -0054 00  200000         LFT     200000        IS THIS A 'BLK'    
      00013 -0054 00  100000         LFT     100000        ..     
      00014  0020 00 0 00030         TRA     START         .. NO  
      00015 -0625 00 0 00076         STL     FLIP          THIS IS A MAD CALL, BACKWARDS BUFFER 
      00016 -0500 00 4 00001         CAL     1,4           GET ADDRESS OF LAST WORD 
      00017  0737 00 1 00000         PAC     ,1            .. SAVE
      00020  0400 00 0 00077         ADD     =1            ADJUST 
      00021 -0535 00 4 00034         LDC     ARY,4         POINTER TO WORD COUNT    
      00022  0402 00 4 00000         SUB     0,4           COMPUTE ADDRESS OF FIRST WORD  
      00023  0621 00 0 00034         STA     ARY           PUT AWAY     
      00024  0737 00 2 00000         PAC     ,2            .. SAVE
      00025 -0500 00 4 00000         CAL     0,4           PICK UP WORD COUNT 
      00026  0734 00 4 00000         PAX     ,4            ..     
      00027 -0634 00 4 00034         SXD     ARY,4         ..     
                  
      00030  0074 00 4 00000  START  TSX     RDFLXA,4      READ INPUT LINE    
      00031  3 00016 0 00060         PAR     LINE,,14      ..     
      00032  0074 00 4 00001         TSX     PARSE,4       SCAN FOR BLANKS    
      00033  3 00016 0 00060         PAR     LINE,,14      ..     
      00034  3 00000 0 00000  ARY    PAR     -,,-          ..     
      00035  3 00000 0 00054         PAR     RDMORE        .. UNFINISHED LINE RETURN
      00036 -0520 00 0 00076         NZT     FLIP          WAS THIS MAD CALL  
      00037  0020 00 0 00050         TRA     RETURN        .. NO  
                  
      00040 -0500 00 1 00000  LOOP   CAL     0,1           INVERT ARRAY 
      00041  0560 00 2 00000         LDQ     0,2           ..     
      00042  0602 00 2 00000         SLW     0,2           ..     
      00043 -0600 00 1 00000         STQ     0,1           ..     
      00044  1 77777 2 00045         TXI     *+1,2,-1      INCREMENT UPPER POINTER  
      00045  1 00001 1 00046         TXI     *+1,1,1       .. AND LOWER POINTER     
      00046 -0634 00 1 00047         SXD     *+1,1         ..     
      00047  3 00000 2 00040         TXH     LOOP,2,-      REPEAT 
                  
      00050                   RETURN RETURN  (2,4),RD(X1,X2,X4,MTM) RETURN TO CALLER
                  
      00054  0074 00 4 00000  RDMORE TSX     RDFLXA,4      HERE FOR LINE WITH NO C.R.     
      00055  3 00016 0 00060         PAR     LINE,,14      .. READ SOME MORE  
      00056  0074 00 4 00002         TSX     RPARSE,4      .. AND CONTINUE SCAN     
      00057  3 00016 0 00060         PAR     LINE,,14      ..     
1      M1416 3845  PETER R. BOS ..... READ/SCAN COMMAND FROM CONSOLE ......      04/27/70 2024.7 PAGE 2     
                  
      00060                   LINE   BSS     14            INPUT BUFFER 
      00076  0 00000 0 00000  FLIP   PZE     0  
                  
      00077                          RMT     *  
                                     END  
                  
        LITERALS  
      00077  000000000001     
1      M1416 3845  PETER R. BOS ..... READ/SCAN COMMAND FROM CONSOLE ......      04/27/70 2024.7 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        100 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         34    ARY    11,   21,   23,   27
         76   FLIP     7,   15,   36
         60   LINE    31,   33,   55,   57
         40   LOOP    47
         50   RDX1     3
         51   RDX2     4
         52   RDX4     5
          1  PARSE    32
          3  RDCOM     0
         30  START    14
          0 RDFLXA    30,   54
         54 RDMORE    35
         50 RETURN    37
          2 RPARSE    56
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1      M1416 3845  PETER R. BOS .... PARSE, RPARSE, ENDLIN ... COMMAND SCANNER   04/27/70 2024.8 PAGE 1     
                  
                                     PCC     ON 
                                     NOLNK
                       00000         ENTRY   PARSE         ENTRY TO PARSE COMMAND LINE    
                       00017         ENTRY   RPARSE        REENTRY FOR LONG LINE    
                       00047         ENTRY   ENDLIN        FUDGE UP CARRIAGE RETURN 
                       00103         ENTRY   FLAG          NON-ZERO IF FIRST WORD PROCESSED     
                                     LBL     PARS     
                                     PCC     OFF
                  
      00000  0634 00 4 00055  PARSE  SXA     PX4,4         ROUTINE TO PARSE LINE    
      00001  0760 00 0 00016         LMTM                  .. NEED 4    
      00002 -0500 00 0 00104         CAL     BLANKS        INITIALIZE   
      00003  0602 00 0 00101         SLW     TEMP          ..     
      00004 -0625 00 0 00102         STL     BLNK          ..     
      00005  0600 00 0 00103         STZ     FLAG          ..     
      00006 -0500 00 4 00002         CAL     2,4           PICK UP BUFFER LOCATION  
      00007 -0734 00 5 00000         PDX     ,5            ..     
      00010  0754 00 5 00000         PXA     ,5            ..     
      00011  1 00001 5 00012         TXI     *+1,5,1       .. MAKE TNX WORK RIGHT   
      00012  0361 00 4 00002         ACL     2,4           ..     
      00013  0621 00 0 00070         STA     PUT           ..     
      00014 -0500 00 4 00003         CAL     3,4           GET END OF LINE RETURN   
      00015  0621 00 0 00046         STA     EMPTY         ..     
      00016  0020 00 0 00020         TRA     *+2           .. SKIP RPARSE AXT 
      00017  0774 00 5 00000  RPARSE AXT     -,5           REENTRY FOR NEW LINE     
      00020  0760 00 0 00016         LMTM                  .. JUST IN CASE    
      00021 -0500 00 4 00001         CAL     1,4           GET LINE LOCATION AND WORD COUNT     
      00022 -0734 00 7 00000         PDX     ,7            ..     
      00023  0754 00 7 00000         PXA     ,7            ..     
      00024  0361 00 4 00001         ACL     1,4           ..     
      00025  0621 00 0 00027         STA     GET           .. SAVE ADDRESS    
                  
      00026  0774 00 6 00006  WRD    AXT     6,6           SIX CHARACTERS PER WORD  
      00027  0560 00 7 00000  GET    LDQ     -,7           PICK UP NEXT WORD TO SCAN
      00030 -0500 00 0 00101  CHR    CAL     TEMP          HERE FOR NEXT CHAR, RESTORE PREVIOUS RESULT
      00031 -0763 00 0 00006         LGL     6             SHIFT OUT A CHARACTER    
      00032  0044 00 0 00000         PAI                   SAVE AC
      00033 -0320 00 0 00106         ANA     =O77          MASK THIS CHARACTER
      00034  0774 00 4 00006         AXT     NSPCHR,4      LOOK FOR IT IN TABLE OF CONTROL CHARACTERS 
      00035 -0340 00 4 00101         LAS     SPCHR,4       ..     
      00036  0020 00 0 00040         TRA     *+2           ..     
      00037  0020 60 4 00102         TRA*    SPCHR+1,4     .. SPECIAL CHAR. FOUND, GO DO IT     
      00040  2 00002 4 00035         TIX     *-3,4,2       ..     
      00041  0604 00 0 00101         STI     TEMP          NORMAL CHARACTER, SAVE NEW RESULT    
      00042  0600 00 0 00102         STZ     BLNK          RESET BLANK WORD INDICATOR     
      00043  2 00001 6 00030  TIX    TIX     CHR,6,1       AND GO GET NEXT CHARACTER
      00044  2 00001 7 00026         TIX     WRD,7,1       OR NEXT WORD IF OUT OF CHARACTERS    
                  
      00045  0634 00 5 00017         SXA     RPARSE,5      HERE WHEN BUFFER EMPTY, SAVE X5
      00046  0020 00 0 00000  EMPTY  TRA     -             TAKE LINE EMPTY RETURN   
                  
      00047  0534 00 5 00017  ENDLIN LXA     RPARSE,5      END OF LINE W/O CARR. RET.     
                  
      00050  0074 00 4 00064  ENDIN  TSX     STWRD,4       HERE FOR CARRIAGE RETURN 
      00051 -2 00001 5 00052         TNX     *+1,5,1       .. DECREMENT COUNTER     
      00052 -0500 00 0 00105         CAL     FENCE         .. INSURE FENCE IS LAST ARGUMENT     
1      M1416 3845  PETER R. BOS .... PARSE, RPARSE, ENDLIN ... COMMAND SCANNER   04/27/70 2024.8 PAGE 2     
                  
      00053  0522 00 0 00070         XEC     PUT           ..     
      00054  2 00001 5 00053         TIX     *-1,5,1       .. FILL OUT REMAINDER OF BUFFER
      00055  0774 00 4 00000  PX4    AXT     -,4           RESTORE X4   
      00056  0020 00 4 00004         TRA     4,4           RETURN NORMALLY    
                  
      00057  0074 00 4 00064  BLANK  TSX     STWRD,4       HERE FOR BLANK IN LINE, STORE CURRENT WORD 
      00060 -0500 00 0 00104         CAL     BLANKS        RESET TEMPORARY WORD     
      00061  0602 00 0 00101         SLW     TEMP          ..     
      00062 -0625 00 0 00102         STL     BLNK          INDICATE BLANK FOUND     
      00063  0020 00 0 00043         TRA     TIX           KEEP LOOKING 
                  
      00064  0520 00 0 00102  STWRD  ZET     BLNK          ROUTINE TO STORE WORD IN BUFFER
      00065  0020 00 4 00001         TRA     1,4           EXIT FOR REDUNDANT BLANKS
      00066 -2 00001 5 00065         TNX     *-1,5,1       EXIT IF BUFFER FILLED    
      00067 -0500 00 0 00101         CAL     TEMP          GET THIS WORD
      00070  0602 00 5 00000  PUT    SLW     -,5           PUT IT AWAY  
      00071 -0625 00 0 00103         STL     FLAG          INDICATE WORD FOUND
      00072  0020 00 4 00001         TRA     1,4           RETURN 
                  
                       00073  TSPCHR SYN     *             TABLE OF CONTROL CHARACTERS FOR PARSE
      00073 +000000000055            OCT     55            CARRIAGE RETURN    
      00074  0020 00 0 00050         TRA     ENDIN         .. ENDS LINE 
      00075 +000000000057            OCT     57            NULL (UNLIKELY)    
      00076  0020 00 0 00043         TRA     TIX           .. IS IGNORED
      00077 +000000000060            OCT     60            BLANK  
      00100  0020 00 0 00057         TRA     BLANK         .. MARKS WORD
                       00101  SPCHR  SYN     *             ..     
                       00006  NSPCHR EQU     *-TSPCHR      TABLE COUNT  
                  
      00101  0 00000 0 00000  TEMP   PZE  
      00102  0 00000 0 00000  BLNK   PZE  
      00103  0 00000 0 00000  FLAG   PZE  
                  
      00104  606060606060     BLANKS BCI     1, 
      00105 -377777777777     FENCE  OCT     777777777777   
                  
                                     END  
                  
        LITERALS  
      00106  000000000077     
1      M1416 3845  PETER R. BOS .... PARSE, RPARSE, ENDLIN ... COMMAND SCANNER   04/27/70 2024.8 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        107 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         30    CHR    43
         27    GET    25
         70    PUT    13,   53
         55    PX4     0
         43    TIX    63,   76
         26    WRD    44
        102   BLNK     4,   42,   62,   64
        103   FLAG     0,    5,   71
        101   TEMP     3,   30,   41,   61,   67
         57  BLANK   100
         46  EMPTY    15
         50  ENDIN    74
        105  FENCE    52
          0  PARSE     0
        101  SPCHR    35,   37,  101
         64  STWRD    50,   57
        104 BLANKS     2,   60
         47 ENDLIN     0
          6 NSPCHR    34,  101
         17 RPARSE     0,   45,   47
         73 TSPCHR    73,  101
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 1     
                           PETER R. BOS --- AUGUST 1967                             
                  
                                     PCC     ON 
                                     NOLNK                 DELETE LINKAGE DIRECTOR. 
                       00011         ENTRY   .PRINT        PRINT FORMAT FMT,LIST.   
                       00013         ENTRY   .COMNT        PRINT ON LINE FORMAT FMT, LIST.
                       00066         ENTRY   .PCOMT        PRINT COMMENT $...$.     
                       00101         ENTRY   .SPRNT        PRINT WITHOUT FORMAT CONVERSION.     
                       00104         ENTRY   .SCMNT        PRINT ON LINE WITHOUT FORMAT.  
                       00155         ENTRY   PRFIL         DECLARE OUTPUT FILE NAME.
                       00160         ENTRY   PRSET         SET MODE OF OUTPUT (ON OR OFF LINE). 
                       00212         ENTRY   PRGET         GET LAST PERMANENT MODE SETTING.     
                                     LBL     (SPH)         BINARY CARD LABEL. 
                                     PCC     OFF
                  
                  
                                             $.PRINT, PROCESS MAD PRINT FORMAT STATEMENT. 
                  
                  
        TRANSFER VECTOR 
      00000  743146303460     (IOH) 
      00001  665126436721     WRFLXA
      00002  665126436760     WRFLX 
      00003  222666513163     BFWRIT
      00004  222623434662     BFCLOS
      00005  222646472545     BFOPEN
      00006  222623462425     BFCODE
      00007  314625515160     IOERR 
      00010  256731636060     EXIT  
                  
      00011  0600 00 0 02655  .PRINT STZ     CMT           SET INDICATOR.     
      00012  0020 00 0 00014         TRA     *+2           AND SKIP .COMNT.   
                  
                  
                                             $.COMNT, PROCESS PRINT ON LINE FORMAT STATEMENT.   
                  
      00013 -0625 00 0 02655  .COMNT STL     CMT           SET INDICATOR.     
                  
      00014 -0500 00 0 00002         CAL     2             SAVE CURRENT LOC. 2.     
      00015  0602 00 0 02656         SLW     TEMP          ..     
      00016 -0500 00 0 00023         CAL     TRAP          SET STR TRAP RETURN.     
      00017  0602 00 0 00002         SLW     2             ..     
      00020  0600 00 0 00000         STZ     0             CLEAR OUT TRAP CELL.     
      00021 -0634 00 4 77740         SXD     L77740,4      SAVE XR4 FOR (IOH).
      00022  0020 00 4 00001         TRA     1,4           RETURN FOR CONTROL WORD. 
                  
      00023  0020 00 0 00024  TRAP   TRA     *+1           TRAP RETURN FOR STR.     
      00024 -0500 00 0 02656         CAL     TEMP          RESTORE LOC. 2     
      00025  0602 00 0 00002         SLW     2             ..     
      00026  0634 00 4 00064         SXA     XR4,4         SAVE XR4.    
      00027  0535 00 4 00000         LAC     0,4           GET TRAP LOCATION. 
      00030 -0500 00 4 77777         CAL     -1,4          GET CONTROL WORD.  
      00031 -0734 00 4 00000         PDX     0,4           TEST FOR FORMAT DIRECTION.     
      00032  0560 00 0 02664         LDQ     REV           DECR=1, MAD CALL.  
      00033  3 00000 4 00035         TXH     *+2,4,0       ..     
      00034  0560 00 0 02663         LDQ     FWD           DECR=0, FAP CALL.  
      00035  0600 00 0 77771         STZ     L77771        CLEAR SYMBOL TABLE POINTER.    
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 2     
                           PETER R. BOS --- AUGUST 1967                             
                  
      00036 -3 00001 4 00047         TXL     FMT,4,1       TEST FOR SYMBOL TABLE.   
                  
      00037  0560 00 0 02664         LDQ     REV           SYMBOL TABLE SPECIFIED.  
      00040  0600 00 0 02656         STZ     TEMP          RESET TEST CELL.   
      00041  0625 00 0 02656         STT     TEMP          DIRECTION GIVEN IN TAG.  
      00042 -0520 00 0 02656         NZT     TEMP          TAG=1, MAD CALL.   
      00043  0560 00 0 02663         LDQ     FWD           TAG=0, FAP CALL.   
      00044  0621 00 0 77771         STA     L77771        SAVE SYMBOL TABLE POINTER FOR (IOH). 
      00045 -0734 00 4 00000         PDX     0,4           FORMAT POINTER TO ADDRESS.     
      00046  0754 00 4 00000         PXA     0,4           ..     
                  
      00047 -0600 00 0 02656  FMT    STQ     TEMP          SAVE PARTIAL CONTROL WORD.     
      00050  0774 00 4 00127         AXT     WRT,4         SET UP OUTPUT TRANSMISSION ADDRESS.  
      00051 -0520 00 0 02661         NZT     SWT           TEST IF ON OR OFF LINE .PRINT. 
      00052  0520 00 0 02655         ZET     CMT           TEST IF .COMNT (ON LINE).
      00053  0774 00 4 00105         AXT     PRT,4         IF ON LINE, SET FOR WRFLX.     
      00054  0634 00 4 02656         SXA     TEMP,4        INSERT IN CONTROL WORD.  
      00055  0560 00 0 02656         LDQ     TEMP          GET WORD.    
      00056 -0600 00 0 77737         STQ     L77737        AND INSERT FOR (IOH).    
      00057 -0501 00 0 02663         ORA     FWD           GET TXH PREFIX.    
      00060  0621 00 0 77740         STA     L77740        FORMAT ADDRESS.    
      00061  0630 00 0 77740         STP     L77740        INSERT FOR (IOH).  
      00062 -0500 00 0 02665         CAL     COL           GET LINE WIDTH SPECIFICATION.  
      00063  0602 00 0 77741         SLW     L77741        INSERT FOR (IOH).  
      00064  0774 00 4 00000  XR4    AXT     -,4           RESTORE XR4. 
                  
      00065  0020 60 0 00000         TRA*    $(IOH)        EXIT TO (IOH) FOR CONVERSION.  
                  
                  
                                             $.PCOMT, PROCESS PRINT COMMENT STATEMENT.    
                  
      00066 -0500 00 4 00001  .PCOMT CAL     1,4           GET WORD COUNT.    
      00067  1 77776 4 00070         TXI     *+1,4,-2      SET XR4 TO (-BUFF).
      00070  0634 00 4 00077         SXA     .PCX4,4       SAVE XR4.    
      00071  0636 00 4 00076         SCA     PBF,4         SAVE BUFFER ADDRESS.     
      00072  0621 00 0 00100         STA     RTN           SET UP RETURN LOCATION.  
      00073  0734 00 4 00000         PAX     0,4           GET WORD COUNT.    
      00074 -0634 00 4 00076         SXD     PBF,4         INSERT IN CONTROL WORD.  
                  
      00075  0074 00 4 00101         TSX     .SPRNT,4      PRINT LINE.  
      00076  0 00000 0 00000  PBF    PZE     -,0,-         ..     
                  
      00077  0774 00 4 00000  .PCX4  AXT     -,4           RESTORE XR4. 
      00100  0020 00 4 00000  RTN    TRA     -,4           RETURN.
                  
                  
                                             $.SPRNT, PRINT WITHOUT FORMAT CONVERSION.    
                  
      00101 -0520 00 0 02661  .SPRNT NZT     SWT           TEST IF ON OR OFF LINE.  
      00102  0020 00 0 00127         TRA     WRT           ON LINE.     
      00103  0020 00 0 00105         TRA     PRT           OFF LINE.    
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 3     
                           PETER R. BOS --- AUGUST 1967                             
                  
                                             $.SCMNT, PRINT ON LINE WITHOUT FORMAT. 
                  
      00104  0020 00 0 00105  .SCMNT TRA     PRT           ON LINE.     
                  
                  
                                             PRT, PRINT ON LINE THROUGH WRFLX.
                  
      00105  0634 00 4 00125  PRT    SXA     PX4,4         SAVE XR4.    
      00106 -0500 00 4 00001         CAL     1,4           GET POINTER TO BUFFER.   
      00107 -0734 00 4 00000         PDX     0,4           WORD COUNT.  
      00110 -2 00016 4 00121         TNX     SHORT,4,N     IF LESS THAN N WORDS, SKIP.    
                  
      00111  0621 00 0 00117         STA     L1            BUFF.  
      00112 -0634 00 4 00124         SXD     L2,4          WDCT-N.
      00113  0734 00 4 00000         PAX     0,4           ..     
      00114  1 00016 4 00115         TXI     *+1,4,N       BUFF+N.
      00115  0634 00 4 00124         SXA     L2,4          INSERT FOR SECOND HALF.  
      00116  0074 00 4 00001         TSX     $WRFLXA,4     WRITE OUT FIRST PART     
      00117  0 00016 0 00000  L1     PZE     -,0,N         OF LINE ON CONSOLE.
      00120  0020 00 0 00123         TRA     *+3           SKIP.  
                  
      00121  0621 00 0 00124  SHORT  STA     L2            LESS THAN N WORDS, 
      00122  0622 00 0 00124         STD     L2            SAVE POINTER.
      00123  0074 00 4 00002         TSX     $WRFLX,4      WRITE OUT LINE OR  
      00124  0 00000 0 00000  L2     PZE     -,0,-         SECOND PART OF LINE.     
                  
      00125  0774 00 4 00000  PX4    AXT     -,4           RESTORE XR4. 
      00126  0020 00 4 00002         TRA     2,4           RETURN TO (IOH).   
                  
                  
                                             WRT, WRITE INTO DISK FILE FOR OFF-LINE PRINTING.   
                  
      00127  0634 00 4 00153  WRT    SXA     WX4,4         SAVE XR4.    
      00130 -0500 00 4 00001         CAL     1,4           GET CONTROL WORD.  
      00131  0734 00 4 00000         PAX     0,4           BUFFER ADDRESS.    
      00132  1 77777 4 00133         TXI     *+1,4,-1      EXTRA WORD FOR LINE MARK.
      00133  0634 00 4 00147         SXA     WRLOC,4       INSERT FOR WRFILE. 
      00134 -0734 00 4 00000         PDX     0,4           WDCT.  
      00135  0754 00 4 00000         PXA     0,4           TO ADDRESS.  
      00136 -0501 00 0 02670         ORA     =O777777000000 OR IN LINE MARK.  
      00137  1 00001 4 00140         TXI     *+1,4,1       INCREASE WDCT FOR LINE MARK.   
      00140 -0634 00 4 00147         SXD     WRLOC,4       INSERT FOR WRFILE. 
      00141  0560 60 0 00147         LDQ*    WRLOC         SAVE BUFF-1. 
      00142 -0600 00 0 02656         STQ     TEMP          ..     
      00143  0602 60 0 00147         SLW*    WRLOC         INSERT LINE MARK IN BUFFER.    
                  
      00144  0074 00 4 00003         TSX     $BFWRIT,4     WRITE LINE ON DISK.
      00145  3 00000 0 02657         PAR     NAME1         ..     
      00146  3 00000 0 02660         PAR     NAME2         ..     
      00147  3 00000 0 00000  WRLOC  PAR     -,,-          ..     
      00150  3 00000 0 00214         PAR     BFERR         ..     
                  
      00151 -0500 00 0 02656         CAL     TEMP          RESTORE BUFF-1.    
      00152  0602 60 0 00147         SLW*    WRLOC         ..     
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 4     
                           PETER R. BOS --- AUGUST 1967                             
                  
      00153  0774 00 4 00000  WX4    AXT     -,4           RESTORE XR4. 
      00154  0020 00 4 00002         TRA     2,4           RETURN TO (IOH).   
                  
                  
                                             $PRFIL, DECLARE OUTPUT FILE NAME.
                  
      00155 -0500 60 4 00001  PRFIL  CAL*    1,4           GET NAME.    
      00156  0602 00 0 02657         SLW     NAME1         INSERT.
      00157  0020 00 4 00002         TRA     2,4           RETURN.
                  
                  
                                             $PRSET, SET MODE OF OUTPUT FOR .PRINT. 
                  
      00160  0634 00 4 00210  PRSET  SXA     PRX4,4        SAVE XR4.    
      00161  0500 60 4 00001         CLA*    1,4           GET CONTROL WORD.  
      00162 -0120 00 0 00164         TMI     *+2           IF TEMPORARY SETTING, SKIP.    
      00163  0601 00 0 02662         STO     OLDMOD        ELSE, SET FLAG.    
      00164  0100 00 0 00175         TZE     OFFLIN        1 FOR ON-LINE, 0 FOR OFF-LINE. 
                  
      00165  0520 00 0 02661  ONLIN  ZET     SWT           TEST IF ALREADY SET.     
      00166  0020 00 4 00002         TRA     2,4           YES, EXIT.   
      00167  0074 00 4 00004         TSX     $BFCLOS,4     OTHERWISE, CLOSE OUTPUT FILE.  
      00170  3 00000 0 02657         PAR     NAME1         ..     
      00171  3 00000 0 02660         PAR     NAME2         ..     
      00172  3 00000 0 00214         PAR     BFERR         ..     
      00173 -0625 00 0 02661         STL     SWT           SET SWITCH.  
      00174  0020 00 0 00210         TRA     PRX4          EXIT.  
                  
      00175 -0520 00 0 02661  OFFLIN NZT     SWT           TEST IF ALREADY SET.     
      00176  0020 00 4 00002         TRA     2,4           YES, EXIT.   
      00177  0074 00 4 00005         TSX     $BFOPEN,4     OTHERWISE, OPEN OUTPUT FILE.   
      00200  3 00000 0 02667         PAR     =HW           ..     
      00201  3 00000 0 02657         PAR     NAME1         ..     
      00202  3 00000 0 02660         PAR     NAME2         ..     
      00203  3 00000 0 00224         PAR     BUF1          ..     
      00204  3 00000 0 01104         PAR     BUF2          ..     
      00205  3 00000 0 01764         PAR     BUF3          ..     
      00206  3 00000 0 00214         PAR     BFERR         ..     
      00207  0600 00 0 02661         STZ     SWT           SET SWITCH.  
                  
      00210  0774 00 4 00000  PRX4   AXT     -,4           RESTORE XR4. 
      00211  0020 00 4 00002         TRA     2,4           RETURN.
                  
                  
                                             $PRGET, FIND LAST PERMANENT MODE SETTING.    
                  
      00212 -0500 00 0 02662  PRGET  CAL     OLDMOD        GET MODE FLAG.     
      00213  0020 00 4 00001         TRA     1,4           RETURN.
                  
                  
                                             ERROR RETURN FROM BFOPEN, ETC.   
                  
      00214  0074 00 4 00006  BFERR  TSX     $BFCODE,4     ERROR, GET CODE.   
      00215  0100 60 0 00007         TZE*    $IOERR        IF FILE SYSTEM, ERROR, EXIT.   
      00216  0767 00 0 00036         ALS     30            SHIFT FOR PRINTING.
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 5     
                           PETER R. BOS --- AUGUST 1967                             
                  
      00217 -0501 00 0 02666         ORA     =H0.          OR IN BLANKS.
      00220  0602 00 0 02654         SLW     ERR+8         INSERT IN COMMENT. 
      00221  0074 00 4 00002         TSX     $WRFLX,4      PRINT ERROR COMMENT.     
      00222  0 00011 0 02644         PZE     ERR,0,9       ..     
      00223  0074 00 4 00010         TSX     $EXIT,4       CALL EXIT.   
                  
                  
                                             STORAGE AND CONSTANTS.     
                  
      00224                   BUF1   BSS     432           BUFFERS FOR DISK OUTPUT. 
      01104                   BUF2   BSS     432           ..     
      01764                   BUF3   BSS     432           ..     
                  
      02644  746247303473     ERR    BCI     9,(SPH), ERROR RETURN FROM BFREAD PACKAGE, ERRCOD=0.     
      02645  602551514651     
      02646  605125636451     
      02647  456026514644     
      02650  602226512521     
      02651  246047212342     
      02652  212725736025     
      02653  515123462413     
      02654  003360606060     
                  
                       00026  IOHBUF EQU     22            BUFFER LENGTH FOR (IOH). 
                       00016  N      EQU     14            BUFFER LENGTH FOR WRFLX. 
                  
      02655  0 00000 0 00000  CMT    PZE                   .PRINT/.COMNT SWITCH.    
      02656  0 00000 0 00000  TEMP   PZE                   TEMPORARY STORAGE AND TEST CELL.     
                  
      02657  0 00000 0 00000  NAME1  PZE                   OUTPUT FILE NAME.  
      02660  466463476463     NAME2  BCI     1,OUTPUT      ..     
                  
      02661  0 00000 0 00001  SWT    PZE     1             START IN ON-LINE MODE.   
      02662  0 00000 0 00000  OLDMOD PZE                   PERMANENT MODE FLAG.     
                  
      02663  3 77777 0 00000  FWD    TXH     -,0,-1        USED TO CALL (IOH).
      02664  3 00001 0 00000  REV    TXH     -,0,+1        ..     
      02665 -3 00204 0 00000  COL    TXL     0,0,132       ..     
                  
                       77771         COMMON  -200          ERASABLE.    
                       77771  L77771 COMMON  1             ..     
                       77741         COMMON  IOHBUF+1      ..     
                       77741  L77741 COMMON  1             ..     
                       77740  L77740 COMMON  1             ..     
                       77737  L77737 COMMON  1             ..     
                  
                  
                                     END  
                  
        LITERALS  
      02666  003360606060     
      02667  666060606060     
      02670  777777000000     
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77736 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
       2671 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         16      N   110,  114,  117, 2655
        117     L1   111
        124     L2   112,  115,  121,  122
       2655    CMT    11,   13,   52
       2665    COL    62
       2644    ERR   220,  222
         47    FMT    36
       2663    FWD    34,   43,   57
         76    PBF    71,   74
        105    PRT    53,  103,  104
        125    PX4   105
       2664    REV    32,   37
        100    RTN    72
       2661    SWT    51,  101,  165,  173,  175,  207
        127    WRT    50,  102
        153    WX4   127
         64    XR4    26
        224   BUF1   203
       1104   BUF2   204
       1764   BUF3   205
         10   EXIT   223
        210   PRX4   160,  174
       2656   TEMP    15,   24,   40,   41,   42,   47,   54,   55,  142,  151
         23   TRAP    16
        214  BFERR   150,  172,  206
          7  IOERR   215
         77  .PCX4    70
       2657  NAME1   145,  156,  170,  201
       2660  NAME2   146,  171,  202
        165  ONLIN      
        155  PRFIL     0
        212  PRGET     0
        160  PRSET     0
        121  SHORT   110
          2  WRFLX   123,  221
        147  WRLOC   133,  140,  141,  143,  152
          0  (IOH)    65
          4 BFCLOS   167
          6 BFCODE   214
          5 BFOPEN   177
          3 BFWRIT   144
         26 IOHBUF  2655, 2666
         13 .COMNT     0
         66 .PCOMT     0
         11 .PRINT     0
        104 .SCMNT     0
        101 .SPRNT     0,   75
      77737 L77737    56, 2666
      77740 L77740    21,   60,   61, 2666
      77741 L77741    63, 2666
1            .PRINT, .COMNT, ETC.- PROCESS PRINTED OUTPUT.                       04/27/70 2024.9 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      77771 L77771    35,   44, 2666
        175 OFFLIN   164
       2662 OLDMOD   163,  212
          1 WRFLXA   116
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1      M1416 3845  PETER R. BOS ..... PROGRAM TO PROCESS FILE SYSTEM EOF .....   04/27/70 2025.1 PAGE 1     
                  
                  
                                     PCC     ON 
                                     NOLNK
                       00001         ENTRY   RDEOF    
                       00017         ENTRY   WREOF    
                                     LBL     EOF
                                     PCC     OFF
                  
                                     EXTERN  WRWAIT   
                  
                                     UNLIST     
                  
                  
      00001                   RDEOF  SAVE    ,(X4,MTM)     SAVE LINKAGE 
      00003 -0500 00 4 00004         CAL     4,4           PICK UP WORD COUNT 
      00004  0074 00 7 00044         TSX     BLKPAR,7      ..     
      00005  0771 00 0 00022         ARS     18            ..     
      00006  0734 00 7 00000         PAX     ,7            .. SAVE WORD COUNT 
      00007  0361 00 4 00004         ACL     4,4           COMPUTE BOTTOM ADDRESS   
      00010  0621 00 0 00014         STA     STZ           ..     
      00011  0754 00 7 00000         PXA     ,7            .. RESTORE WORD COUNT    
      00012  0402 60 4 00006         SUB*    6,4           .. LESS NUMBER WORDS READ
      00013  0734 00 4 00000         PAX     ,4            ..     
      00014  0600 00 4 00000  STZ    STZ     -,4           CLEAR REMAINDER OF DATA AREA   
      00015  2 00001 4 00014         TIX     *-1,4,1       ..     
      00016  0020 00 0 00042         TRA     RETURN        RETURN 
                  
                  
      00017                   WREOF  SAVE    ,(X4,MTM)     SAVE LINKAGE 
      00021 -0500 00 4 00001         CAL     1,4           SET UP POINTERS    
      00022  0621 00 0 00036         STA     WR+1          ..     
      00023 -0500 00 4 00002         CAL     2,4           ..     
      00024  0621 00 0 00037         STA     WR+2          ..     
      00025 -0500 00 4 00004         CAL     4,4           PICK UP DATA ADDRESS     
      00026  0400 60 4 00006         ADD*    6,4           PLUS WORD COUNT WRITTEN  
      00027  0621 00 0 00041         STA     WR+4          ..     
      00030  0074 00 7 00044         TSX     BLKPAR,7      GET WORD COUNT REQUESTED 
      00031  0771 00 0 00022         ARS     18            ..     
      00032  0402 60 4 00006         SUB*    6,4           LESS WORDS WRITTEN 
      00033  0767 00 0 00022         ALS     18            ..     
      00034  0622 00 0 00041         STD     WR+4          WORD COUNT FOR REMAINDER 
      00035                   WR     CALL    WRWAIT(-,-,=0,(-,,-))  WRITE REST OF DATA    
                  
      00042                   RETURN RETURN  (7,4),,(X4,MTM) RETURN TO ORIGINAL CALLER    
                  
                  
      00044  0044 00 0 00000  BLKPAR PAI                   ROUTINE TO CONVERT BLK TO PAR  
      00045 -0054 00  200000         LFT     200000        IS BLK BIT ON
      00046 -0054 00  100000         LFT     100000        YES, IS PAR BIT OFF
      00047  0020 00 7 00001         TRA     1,7           .. NO  
      00050 -0765 00 0 00022         LGR     18            POINTER TO WORD COUNT, SAVE ADDRESS  
      00051  0621 00 0 00052         STA     *+1           ..     
      00052 -0500 00 0 00000         CAL     -             PICK UP TRUE WORD COUNT  
      00053 -0763 00 0 00022         LGL     18            SHIFT TO AC  
      00054  0020 00 7 00001         TRA     1,7           RETURN 
1      M1416 3845  PETER R. BOS ..... PROGRAM TO PROCESS FILE SYSTEM EOF .....   04/27/70 2025.1 PAGE 2     
                  
      00055                          RMT     *  
                                     END  
                  
        LITERALS  
      00055  000000000000     
1      M1416 3845  PETER R. BOS ..... PROGRAM TO PROCESS FILE SYSTEM EOF .....   04/27/70 2025.1 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         56 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         35     WR    22,   24,   27,   34
         42     X4     1,   17
         14    STZ    10
          1  RDEOF     0
         17  WREOF     0
         44 BLKPAR     4,   30
         42 RETURN    16
          0 WRWAIT    35
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1       DUMMY RECOUP FOR FORMAT ERRORS                                           04/27/70 2025.2 PAGE 1     
                  
                       00005         ENTRY   RECOUP   
                       00002         ENTRY   RCOUPX   
                  
        LINKAGE DIRECTOR
      00000  000000000000     
      00001  512523466447     
                  
      00002 -0500 00 4 00001  RCOUPX CAL     1,4
      00003  0621 00 0 00006         STA     RECOUP+1 
      00004  0020 00 4 00002         TRA     2,4
      00005  0760 00 0 00016  RECOUP LMTM                  JUST IN CASE 
      00006  0020 00 0 00000         TRA     -  
                                     END  
1       DUMMY RECOUP FOR FORMAT ERRORS                                           04/27/70 2025.2 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          7 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          2 RCOUPX     0
          5 RECOUP     0,    3
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




TRACKS   BCD 10/12/70 1510.5    8735         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE       T   MAD            02/25/69    1954.1
-                 
                  NORMAL MODE IS INTEGER                                                          *001 LM00001    
                  BOOLEAN NEW,NEW1                                                                *002 LM00002    
                  DIMENSION ME(2),STATUS(7),B(431)                                                *003 LM00003    
                  VECTOR VALUES R=$R$                                                             *004 LM00004    
                  VECTOR VALUES RW=$RW$                                                           *005 LM00005    
                  VECTOR VALUES FENCE=777777777777K                                               *006 LM00006    
                  VECTOR VALUES SP=605757575757K                                                  *007 LM00007    
                  VECTOR VALUES IS=603162605757K                                                  *008 LM00008    
                                                                                                       LM00009    
                  N=1                                                                             *009 LM00010    
                  ATTNAM.(ME(2)...3)                                                              *010 LM00011    
                  RCOMBT=COMLOC.($RCOMBT$,AARGH)                                                  *011 LM00012    
                  RCALBT=COMLOC.($RCALBT$,AARGH)                                                  *012 LM00013    
                  RPRVBT=COMLOC.($RPRVBT$,AARGH)                                                  *013 LM00014    
                  UPRCBT=COMLOC.($UPRCBT$,AARGH).LS.18                                            *014 LM00015    
                  GETCF.(COMFIL)                                                                  *015 LM00016    
                  RCODE=GLOC.(COMLOC.($URCODE$,AARGH))                                            *016 LM00017    
                  SETBRK.(OUT)                                                                    *017 LM00018    
                  NEW=0B                                                                          *018 LM00019    
                  NEW1=1B                                                                         *019 LM00020    
                                                                                                       LM00021    
      LOOP        WHENEVER COMARG.(N,N1).E.FENCE                                                  *020 LM00022    
                       WHENEVER NEW.OR.NEW1                                                       *021 LM00023    
      DOUFD                 N1=$U.F.D.$                                                           *022 LM00024    
                            N2=$(FILE)$                                                           *023 LM00025    
                            N=N-2                                                                 *024 LM00026    
                            TRANSFER TO CHECK                                                     *025 LM00027    
                       END OF CONDITIONAL                                                         *026 LM00028    
      OUT              WHENEVER RCODE.A.RCOMBT.NE.0, COMFL.(COMFIL.A.77K)                         *027 LM00029    
                       WHENEVER RCODE.A.RCALBT.NE.0, ATTACH.(ME(2),ME(1),OUTERR)                  *028 LM00030    
                       CHNCOM.(0)                                                                 *029 LM00031    
                                                                                                       LM00032    
                  OR WHENEVER N1.A.777777770077K.E.$(CFL0)$                                       *030 LM00033    
                       WHENEVER NEW, TRANSFER TO DOUFD                                            *031 LM00034    
                       WHENEVER RCODE.A.RCOMBT.E.0, TRANSFER TO NOPRIV                            *032 LM00035    
                       COMFL.((N1.RS.6).A.77K)                                                    *033 LM00036    
                       N=N+1                                                                      *034 LM00037    
                       NEW=1B                                                                     *035 LM00038    
                                                                                                       LM00039    
                  OR WHENEVER N1.E.$ (ATT)$                                                       *036 LM00040    
                       WHENEVER NEW, TRANSFER TO DOUFD                                            *037 LM00041    
                       WHENEVER RCODE.A.RCALBT.E.0, TRANSFER TO NOPRIV                            *038 LM00042    
                       WHENEVER COMARG.(N+1,N1).E.FENCE.OR.COMARG.(N+2,N2)                        *039 LM00043    
                1           .E.FENCE, TRANSFER TO ILFRMT                                          *039 LM00044    
                       N1=REPROB.(N1)                                                             *040 LM00045    
                       ATTACH.(N1,N2,ATTERR)                                                      *041 LM00046    
                       N=N+3                                                                      *042 LM00047    
                       NEW=1B                                                                     *043 LM00048    
                                                                                                       LM00049    
                  OTHERWISE                                                                       *044 LM00050    
                       WHENEVER COMARG.(N+1,N2).E.FENCE, TRANSFER TO ILFRMT                       *045 LM00051    
      CHECK            NEW1=0B                                                                    *046 LM00052    
                       NEW=0B                                                                     *047 LM00053    
                       FSTATE.(N1,N2,STATUS(7)...8,FSERR)                                         *048 LM00054    
                                                                                                       LM00055    
                       WHENEVER STATUS(6).A.202K.NE.0.OR.(STATUS(6).A.20K.NE.0.AND.               *049 LM00056    
                1           ME(0).NE.STATUS(0).A.777777K.AND.RCODE.A.RPRVBT.E.                    *049 LM00057    
                2           0).OR.(STATUS(6).A.10K.NE.0.AND.RCODE.A.UPRCBT.E.0)                   *049 LM00058    
      BADMOD                PRMESS.(N1,SP,N2,IS,OCRBC.(STATUS(6)).V.                              *050 LM00059    
                1                575757000000K,$ MODE.$)                                          *050 LM00060    
                                                                                                       LM00061    
                       OTHERWISE                                                                  *051 LM00062    
                            WHENEVER STATUS(6).A.1K.E.0                                           *052 LM00063    
                                 STATUS=R                                                         *053 LM00064    
                            OTHERWISE                                                             *054 LM00065    
                                 WHENEVER STATUS(6).A.4K.NE.0.AND.RCODE.A.                        *055 LM00066    
                1                     UPRCBT.E.0, TRANSFER TO BADMOD                              *055 LM00067    
                                 STATUS=RW                                                        *056 LM00068    
                            END OF CONDITIONAL                                                    *057 LM00069    
                            WHENEVER N1.E.$U.F.D.$.AND.N2.E.$(FILE)$, UPDATE.                     *058 LM00070    
                            OPEN.(STATUS,N1,N2,-0,-0,IOERR)                                       *059 LM00071    
                            NEWFIL.(N1,N2,OOPS)                                                   *060 LM00072    
                                                                                                       LM00073    
      TLOOP                 RDWAIT.(N1,N2,0,B(431)...432,EOF,TEMP,IOERR)                          *061 LM00074    
                            TEMP=TRACKS.(0)                                                       *062 LM00075    
                            PRMESS.(TEMP)                                                         *063 LM00076    
                            TRANSFER TO TLOOP                                                     *064 LM00077    
                                                                                                       LM00078    
      EOF                   WHENEVER TEMP.NE.0                                                    *065 LM00079    
                                 TEMP=TRACKS.(0)                                                  *066 LM00080    
                                 PRMESS.(TEMP)                                                    *067 LM00081    
                            END OF CONDITIONAL                                                    *068 LM00082    
                            CLOSE.(N1,N2,IOERR)                                                   *069 LM00083    
                       END OF CONDITIONAL                                                         *070 LM00084    
      FSRTN            PRMESS.($*$)                                                               *071 LM00085    
                       N=N+2                                                                      *072 LM00086    
                  END OF CONDITIONAL                                                              *073 LM00087    
                  TRANSFER TO LOOP                                                                *074 LM00088    
                                                                                                       LM00089    
      AARGH       PRMESS.($ERROR IN COMLOC$)                                                      *075 LM00090    
                  TRANSFER TO OUT                                                                 *076 LM00091    
                                                                                                       LM00092    
      OUTERR      PRNTER.(375K)                                                                   *077 LM00093    
                  CHNCOM.(0)                                                                      *078 LM00094    
                                                                                                       LM00095    
      NOPRIV      PRMESS.($INSUFFICIENT PRIVILEGES$)                                              *079 LM00096    
                  TRANSFER TO OUT                                                                 *080 LM00097    
                                                                                                       LM00098    
      ILFRMT      PRMESS.($NOT ENOUGH ARGUMENTS$)                                                 *081 LM00099    
                  TRANSFER TO OUT                                                                 *082 LM00100    
                                                                                                       LM00101    
      ATTERR      PRNTER.(375K)                                                                   *083 LM00102    
                  TRANSFER TO OUT                                                                 *084 LM00103    
                                                                                                       LM00104    
      FSERR       PRNTER.(61K)                                                                    *085 LM00105    
                  TRANSFER TO FSRTN                                                               *086 LM00106    
                                                                                                       LM00107    
      IOERR       PRNTER.(375K)                                                                   *087 LM00108    
                  TEMP=TRACKS.(0)                                                                 *088 LM00109    
                  PRMESS.(TEMP)                                                                   *089 LM00110    
                  CLOSE.(N1,N2,FSRTN)                                                             *090 LM00111    
                  TRANSFER TO FSRTN                                                               *091 LM00112    
                                                                                                       LM00113    
      OOPS        PRMESS.(N1,SP,N2,$ NOT FOUND IN AFST$)                                          *092 LM00114    
                  CLOSE.(N1,N2,IOERR)                                                             *093 LM00115    
                  TRANSFER TO FSRTN                                                               *094 LM00116    
                                                                                                       LM00117    
                  END OF PROGRAM                                                                  *095 LM00118    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01603 TRANSFER VECTOR LENGTH  00026 PROGRAM BEGINS    01036
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      AARGH  00027   4        FENCE  00730 A 1        ME     00734 A 1        OOPS   00043   4        R      00746 A 1  
      ATTERR 00030   4        FSERR  00035   4        N1     00735   1        OUTERR 00044   4        RW     00747 A 1  
      BADMOD 00031   4        FSRTN  00036   4        N2     00736   1        OUT    00045   4        SP     00750 A 1  
      B      00726 A 1        ILFRMT 00037   4        NEW1   00737   2        RCALBT 00742   1        STATUS 00760 A 1  
      CHECK  00032   4        IOERR  00040   4        NEW    00740   2        RCODE  00743   1        TEMP   00761   1  
      COMFIL 00727   1        IS     00731 A 1        NOPRIV 00042   4        RCOMBT 00744   1        TLOOP  00046   4  
      DOUFD  00033   4        LOOP   00041   4        N      00741   1        RPRVBT 00745   1        UPRCBT 00762   1  
      EOF    00034   4                                                                                                  
0FUNCTION DICTIONARY    
      ATTACH 00000   1        ATTNAM 00001   1        CHNCOM 00002   1        CLOSE  00003   1        COMARG 00004   1  
      COMFL  00005   1        COMLOC 00006   1        EXIT   00007   1        FSTATE 00010   1        GETCF  00011   1  
      GLOC   00012   1        .SETUP 00013   1        NEWFIL 00014   1        OCRBC  00015   1        OPEN   00016   1  
      PRMESS 00017   1        PRNTER 00020   1        RDWAIT 00021   1        REPROB 00022   1        SETBRK 00023   1  
      TRACKS 00024   1        UPDATE 00025   1                                                                          
0ABSOLUTE CONSTANTS     
 01012 -056021266263     01014 -066445246031     01024 -204546636026     00774 +000000000061     01027 -236260606060    
 01017 -112764442545     01013 -066427306021     01011 -054663602545     01007 -032527256260     01025 -204751316531    
 01004 +312331254563     01006 +314562642626     00777 +000000000375     01010 -034623606060     01005 +314560234644    
 01003 +255151465160     01021 -146060606060     01000 +000000000660     00767 +000000000004     01023 -204446242533    
 01022 -175757000000     00776 +000000000202     00772 +000000000020     01001 +000000777777     00771 +000000000010    
 01026 -207421636334     00770 +000000000006     01033 -342326430034     01035 -377777770077     00775 +000000000077    
 00765 +000000000002     01034 -342631432534     01030 -243326332433     00763 +000000000000     01032 -245123462425    
 00773 +000000000022     01031 -244751232263     01020 -114751652263     01015 -112321432263     01016 -112346442263    
 00766 +000000000003     00764 +000000000001     01002 +233000000000                                                    
0STATEMENT DICTIONARY   
 00027 TXL -301517001513       00030 TXL -301542001540       00031 TXL -301374001357       00032 TXL -301304001302      
 00033 TXL -301122001120       00034 TXL -301474001471       00035 TXL -301545001543       00036 TXL -301507001505      
 00037 TXL -301537001532       00040 TXL -301550001546       00041 TXL -301114001107       00042 TXL -301531001524      
 00043 TXL -301571001562       00044 TXL -301522001520       00045 TXL -301143001130       00046 TXL -301463001453      
0PROGRAM    
                 N'R                                                                001  LM00001
                 BOOLEAN NEW,NEW1                                                   002  LM00002
                 D'N ME(2),STATUS(7),B(431)                                         003  LM00003
                 V'S R=$R$                                                          004  LM00004
 01036 TSX +0 07400 4 00013    00746     -1 16060 6 06060                                                               
                 V'S RW=$RW$                                                        005  LM00005
 00747     -1 16660 6 06060                                                                                             
                 V'S FENCE=777777777777K                                            006  LM00006
 00730     -3 77777 7 77777                                                                                             
                 V'S SP=605757575757K                                               007  LM00007
 00750     -2 05757 5 75757                                                                                             
                 V'S IS=603162605757K                                               008  LM00008
 00731     -2 03162 6 05757                                                                                             
                 N=1                                                                009  LM00010
 01037 CLA +0 50000 0 00764    01040 STO +0 60100 0 00741                                                               
                 ATTNAM.(ME(2)...3)                                                 010  LM00011
 01041 TSX +0 07400 4 00001    01042 TIX +2 00766 0 00732                                                               
                 RCOMBT=COMLOC.($RCOMBT$,AARGH)                                     011  LM00012
 01043 TSX +0 07400 4 00006    01044 TXH +3 00000 0 01016    01045 TXH +3 00000 0 00027    01046 STO +0 60100 0 00744   
                 RCALBT=COMLOC.($RCALBT$,AARGH)                                     012  LM00013
 01047 TSX +0 07400 4 00006    01050 TXH +3 00000 0 01015    01051 TXH +3 00000 0 00027    01052 STO +0 60100 0 00742   
                 RPRVBT=COMLOC.($RPRVBT$,AARGH)                                     013  LM00014
 01053 TSX +0 07400 4 00006    01054 TXH +3 00000 0 01020    01055 TXH +3 00000 0 00027    01056 STO +0 60100 0 00745   
                 UPRCBT=COMLOC.($UPRCBT$,AARGH).LS.18                               014  LM00015
 01057 TSX +0 07400 4 00006    01060 TXH +3 00000 0 01031    01061 TXH +3 00000 0 00027    01062 STO +0 60100 0 01577   
 01063 CAL -0 50000 0 00773    01064 STA +0 62100 0 01066    01065 CAL -0 50000 0 01577    01066 ALS +0 76700 0 00000   
 01067 SLW +0 60200 0 00762                                                                                             
                 GETCF.(COMFIL)                                                     015  LM00016
 01070 TSX +0 07400 4 00011    01071 TXH +3 00000 0 00727                                                               
                 RCODE=GLOC.(COMLOC.($URCODE$,AARGH))                               016  LM00017
 01072 TSX +0 07400 4 00006    01073 TXH +3 00000 0 01032    01074 TXH +3 00000 0 00027    01075 STO +0 60100 0 01577   
 01076 TSX +0 07400 4 00012    01077 TXH +3 00000 0 01577    01100 STO +0 60100 0 00743                                 
                 SETBRK.(OUT)                                                       017  LM00018
 01101 TSX +0 07400 4 00023    01102 TXH +3 00000 0 00045                                                               
                 NEW=0B                                                             018  LM00019
 01103 CLA +0 50000 0 00763    01104 STO +0 60100 0 00740                                                               
                 NEW1=1B                                                            019  LM00020
 01105 CLA +0 50000 0 00764    01106 STO +0 60100 0 00737                                                               
      LOOP       W'R COMARG.(N,N1).E.FENCE                                          020  LM00022
 01107 TSX +0 07400 4 00004    01110 TXH +3 00000 0 00741    01111 TXH +3 00000 0 00735    01112 SUB +0 40200 0 00730   
 01113 TNZ -0 10000 0 01160                                                                                             
                      W'R NEW.OR.NEW1                                               021  LM00023
 01114 ZET +0 52000 0 00737    01115 TRA +0 02000 0 01120    01116 NZT -0 52000 0 00740    01117 TRA +0 02000 0 01130   
      DOUFD                N1=$U.F.D.$                                              022  LM00024
 01120 CLA +0 50000 0 01030    01121 STO +0 60100 0 00735                                                               
                           N2=$(FILE)$                                              023  LM00025
 01122 CLA +0 50000 0 01034    01123 STO +0 60100 0 00736                                                               
                           N=N-2                                                    024  LM00026
 01124 CLA +0 50000 0 00741    01125 SUB +0 40200 0 00765    01126 STO +0 60100 0 00741                                 
                           T'O CHECK                                                025  LM00027
 01127 TRA +0 02000 0 00032                                                                                             
                      E'L                                                           026  LM00028
      OUT             W'R RCODE.A.RCOMBT.NE.0, COMFL.(COMFIL.A.77K)                 027  LM00029
 01130 CAL -0 50000 0 00743    01131 ANA -0 32000 0 00744    01132 SLW +0 60200 0 01577    01133 CLA +0 50000 0 01577   
 01134 SUB +0 40200 0 00763    01135 TZE +0 10000 0 01143    01136 CAL -0 50000 0 00727    01137 ANA -0 32000 0 00775   
 01140 SLW +0 60200 0 01577    01141 TSX +0 07400 4 00005    01142 TXH +3 00000 0 01577                                 
                      W'R RCODE.A.RCALBT.NE.0, ATTACH.(ME(2),ME(1),OUTERR)          028  LM00030
 01143 CAL -0 50000 0 00743    01144 ANA -0 32000 0 00742    01145 SLW +0 60200 0 01577    01146 CLA +0 50000 0 01577   
 01147 SUB +0 40200 0 00763    01150 TZE +0 10000 0 01155    01151 TSX +0 07400 4 00000    01152 TXH +3 00000 0 00732   
 01153 TXH +3 00000 0 00733    01154 TXH +3 00000 0 00044                                                               
                      CHNCOM.(0)                                                    029  LM00031
 01155 TSX +0 07400 4 00002    01156 TXH +3 00000 0 00763                                                               
                 O'R N1.A.777777770077K.E.$(CFL0)$                                  030  LM00033
 01157 TRA +0 02000 0 01512    01160 CAL -0 50000 0 00735    01161 ANA -0 32000 0 01035    01162 SLW +0 60200 0 01577   
 01163 CLA +0 50000 0 01577    01164 SUB +0 40200 0 01033    01165 TNZ -0 10000 0 01216                                 
                      W'R NEW, T'O DOUFD                                            031  LM00034
 01166 NZT -0 52000 0 00740    01167 TRA +0 02000 0 01171    01170 TRA +0 02000 0 00033                                 
                      W'R RCODE.A.RCOMBT.E.0, T'O NOPRIV                            032  LM00035
 01171 CAL -0 50000 0 00743    01172 ANA -0 32000 0 00744    01173 SLW +0 60200 0 01577    01174 CLA +0 50000 0 01577   
 01175 SUB +0 40200 0 00763    01176 TNZ -0 10000 0 01200    01177 TRA +0 02000 0 00042                                 
                      COMFL.((N1.RS.6).A.77K)                                       033  LM00036
 01200 CAL -0 50000 0 00770    01201 STA +0 62100 0 01203    01202 CAL -0 50000 0 00735    01203 LGR -0 76500 0 00000   
 01204 ANA -0 32000 0 00775    01205 SLW +0 60200 0 01577    01206 TSX +0 07400 4 00005    01207 TXH +3 00000 0 01577   
                      N=N+1                                                         034  LM00037
 01210 CLA +0 50000 0 00741    01211 ADD +0 40000 0 00764    01212 STO +0 60100 0 00741                                 
                      NEW=1B                                                        035  LM00038
 01213 CLA +0 50000 0 00764    01214 STO +0 60100 0 00740                                                               
                 O'R N1.E.$ (ATT)$                                                  036  LM00040
 01215 TRA +0 02000 0 01512    01216 CLA +0 50000 0 00735    01217 SUB +0 40200 0 01026    01220 TNZ -0 10000 0 01271   
                      W'R NEW, T'O DOUFD                                            037  LM00041
 01221 NZT -0 52000 0 00740    01222 TRA +0 02000 0 01224    01223 TRA +0 02000 0 00033                                 
                      W'R RCODE.A.RCALBT.E.0, T'O NOPRIV                            038  LM00042
 01224 CAL -0 50000 0 00743    01225 ANA -0 32000 0 00742    01226 SLW +0 60200 0 01577    01227 CLA +0 50000 0 01577   
 01230 SUB +0 40200 0 00763    01231 TNZ -0 10000 0 01233    01232 TRA +0 02000 0 00042                                 
                      W'R COMARG.(N+1,N1).E.FENCE.OR.COMARG.(N+2,N2)                039  LM00043
                1          .E.FENCE, T'O ILFRMT                                     039  LM00044
 01233 CLA +0 50000 0 00741    01234 ADD +0 40000 0 00765    01235 STO +0 60100 0 01577    01236 TSX +0 07400 4 00004   
 01237 TXH +3 00000 0 01577    01240 TXH +3 00000 0 00736    01241 SUB +0 40200 0 00730    01242 TZE +0 10000 0 01253   
 01243 CLA +0 50000 0 00741    01244 ADD +0 40000 0 00764    01245 STO +0 60100 0 01577    01246 TSX +0 07400 4 00004   
 01247 TXH +3 00000 0 01577    01250 TXH +3 00000 0 00735    01251 SUB +0 40200 0 00730    01252 TNZ -0 10000 0 01254   
 01253 TRA +0 02000 0 00037                                                                                             
                      N1=REPROB.(N1)                                                040  LM00045
 01254 TSX +0 07400 4 00022    01255 TXH +3 00000 0 00735    01256 STO +0 60100 0 00735                                 
                      ATTACH.(N1,N2,ATTERR)                                         041  LM00046
 01257 TSX +0 07400 4 00000    01260 TXH +3 00000 0 00735    01261 TXH +3 00000 0 00736    01262 TXH +3 00000 0 00030   
                      N=N+3                                                         042  LM00047
 01263 CLA +0 50000 0 00741    01264 ADD +0 40000 0 00766    01265 STO +0 60100 0 00741                                 
                      NEW=1B                                                        043  LM00048
 01266 CLA +0 50000 0 00764    01267 STO +0 60100 0 00740                                                               
                 O'E                                                                044  LM00050
 01270 TRA +0 02000 0 01512                                                                                             
                      W'R COMARG.(N+1,N2).E.FENCE, T'O ILFRMT                       045  LM00051
 01271 CLA +0 50000 0 00741    01272 ADD +0 40000 0 00764    01273 STO +0 60100 0 01577    01274 TSX +0 07400 4 00004   
 01275 TXH +3 00000 0 01577    01276 TXH +3 00000 0 00736    01277 SUB +0 40200 0 00730    01300 TNZ -0 10000 0 01302   
 01301 TRA +0 02000 0 00037                                                                                             
      CHECK           NEW1=0B                                                       046  LM00052
 01302 CLA +0 50000 0 00763    01303 STO +0 60100 0 00737                                                               
                      NEW=0B                                                        047  LM00053
 01304 CLA +0 50000 0 00763    01305 STO +0 60100 0 00740                                                               
                      FSTATE.(N1,N2,STATUS(7)...8,FSERR)                            048  LM00054
 01306 TSX +0 07400 4 00010    01307 TXH +3 00000 0 00735    01310 TXH +3 00000 0 00736    01311 TIX +2 00771 0 00751   
 01312 TXH +3 00000 0 00035                                                                                             
                      W'R STATUS(6).A.202K.NE.0.OR.(STATUS(6).A.20K.NE.0.AND.       049  LM00056
                1          ME(0).NE.STATUS(0).A.777777K.AND.RCODE.A.RPRVBT.E.       049  LM00057
                2          0).OR.(STATUS(6).A.10K.NE.0.AND.RCODE.A.UPRCBT.E.0)      049  LM00058
 01313 CAL -0 50000 0 00743    01314 ANA -0 32000 0 00762    01315 SLW +0 60200 0 01577    01316 CLA +0 50000 0 01577   
 01317 SUB +0 40200 0 00763    01320 TNZ -0 10000 0 01327    01321 CAL -0 50000 0 00752    01322 ANA -0 32000 0 00771   
 01323 SLW +0 60200 0 01577    01324 CLA +0 50000 0 01577    01325 SUB +0 40200 0 00763    01326 TNZ -0 10000 0 01357   
 01327 CAL -0 50000 0 00743    01330 ANA -0 32000 0 00745    01331 SLW +0 60200 0 01577    01332 CLA +0 50000 0 01577   
 01333 SUB +0 40200 0 00763    01334 TNZ -0 10000 0 01351    01335 CAL -0 50000 0 00760    01336 ANA -0 32000 0 01001   
 01337 SLW +0 60200 0 01577    01340 CLA +0 50000 0 00734    01341 SUB +0 40200 0 01577    01342 TZE +0 10000 0 01351   
 01343 CAL -0 50000 0 00752    01344 ANA -0 32000 0 00772    01345 SLW +0 60200 0 01577    01346 CLA +0 50000 0 01577   
 01347 SUB +0 40200 0 00763    01350 TNZ -0 10000 0 01357    01351 CAL -0 50000 0 00752    01352 ANA -0 32000 0 00776   
 01353 SLW +0 60200 0 01577    01354 CLA +0 50000 0 01577    01355 SUB +0 40200 0 00763    01356 TZE +0 10000 0 01375   
      BADMOD               PRMESS.(N1,SP,N2,IS,OCRBC.(STATUS(6)).V.                 050  LM00059
                1               575757000000K,$ MODE.$)                             050  LM00060
 01357 TSX +0 07400 4 00015    01360 TXH +3 00000 0 00752    01361 STO +0 60100 0 01577    01362 CAL -0 50000 0 01577   
 01363 ORA -0 50100 0 01022    01364 SLW +0 60200 0 01577    01365 TSX +0 07400 4 00017    01366 TXH +3 00000 0 00735   
 01367 TXH +3 00000 0 00750    01370 TXH +3 00000 0 00736    01371 TXH +3 00000 0 00731    01372 TXH +3 00000 0 01577   
 01373 TXH +3 00000 0 01023                                                                                             
                      O'E                                                           051  LM00062
 01374 TRA +0 02000 0 01505                                                                                             
                           W'R STATUS(6).A.1K.E.0                                   052  LM00063
 01375 CAL -0 50000 0 00752    01376 ANA -0 32000 0 00764    01377 SLW +0 60200 0 01577    01400 CLA +0 50000 0 01577   
 01401 SUB +0 40200 0 00763    01402 TNZ -0 10000 0 01406                                                               
                                STATUS=R                                            053  LM00064
 01403 CLA +0 50000 0 00746    01404 STO +0 60100 0 00760                                                               
                           O'E                                                      054  LM00065
 01405 TRA +0 02000 0 01425                                                                                             
                                W'R STATUS(6).A.4K.NE.0.AND.RCODE.A.                055  LM00066
                1                    UPRCBT.E.0, T'O BADMOD                         055  LM00067
 01406 CAL -0 50000 0 00743    01407 ANA -0 32000 0 00762    01410 SLW +0 60200 0 01577    01411 CLA +0 50000 0 01577   
 01412 SUB +0 40200 0 00763    01413 TNZ -0 10000 0 01423    01414 CAL -0 50000 0 00752    01415 ANA -0 32000 0 00767   
 01416 SLW +0 60200 0 01577    01417 CLA +0 50000 0 01577    01420 SUB +0 40200 0 00763    01421 TZE +0 10000 0 01423   
 01422 TRA +0 02000 0 00031                                                                                             
                                STATUS=RW                                           056  LM00068
 01423 CLA +0 50000 0 00747    01424 STO +0 60100 0 00760                                                               
                           E'L                                                      057  LM00069
                           W'R N1.E.$U.F.D.$.AND.N2.E.$(FILE)$, UPDATE.             058  LM00070
 01425 CLA +0 50000 0 00736    01426 SUB +0 40200 0 01034    01427 TNZ -0 10000 0 01434    01430 CLA +0 50000 0 00735   
 01431 SUB +0 40200 0 01030    01432 TNZ -0 10000 0 01434    01433 TSX +0 07400 4 00025                                 
                           OPEN.(STATUS,N1,N2,-0,-0,IOERR)                          059  LM00071
 01434 CLS +0 50200 0 00763    01435 STO +0 60100 0 01577    01436 CLS +0 50200 0 00763    01437 STO +0 60100 0 01600   
 01440 TSX +0 07400 4 00016    01441 TXH +3 00000 0 00760    01442 TXH +3 00000 0 00735    01443 TXH +3 00000 0 00736   
 01444 TXH +3 00000 0 01600    01445 TXH +3 00000 0 01577    01446 TXH +3 00000 0 00040                                 
                           NEWFIL.(N1,N2,OOPS)                                      060  LM00072
 01447 TSX +0 07400 4 00014    01450 TXH +3 00000 0 00735    01451 TXH +3 00000 0 00736    01452 TXH +3 00000 0 00043   
      TLOOP                RDWAIT.(N1,N2,0,B(431)...432,EOF,TEMP,IOERR)             061  LM00074
 01453 TSX +0 07400 4 00021    01454 TXH +3 00000 0 00735    01455 TXH +3 00000 0 00736    01456 TXH +3 00000 0 00763   
 01457 TIX +2 01000 0 00047    01460 TXH +3 00000 0 00034    01461 TXH +3 00000 0 00761    01462 TXH +3 00000 0 00040   
                           TEMP=TRACKS.(0)                                          062  LM00075
 01463 TSX +0 07400 4 00024    01464 TXH +3 00000 0 00763    01465 STO +0 60100 0 00761                                 
                           PRMESS.(TEMP)                                            063  LM00076
 01466 TSX +0 07400 4 00017    01467 TXH +3 00000 0 00761                                                               
                           T'O TLOOP                                                064  LM00077
 01470 TRA +0 02000 0 00046                                                                                             
      EOF                  W'R TEMP.NE.0                                            065  LM00079
 01471 CLA +0 50000 0 00761    01472 SUB +0 40200 0 00763    01473 TZE +0 10000 0 01501                                 
                                TEMP=TRACKS.(0)                                     066  LM00080
 01474 TSX +0 07400 4 00024    01475 TXH +3 00000 0 00763    01476 STO +0 60100 0 00761                                 
                                PRMESS.(TEMP)                                       067  LM00081
 01477 TSX +0 07400 4 00017    01500 TXH +3 00000 0 00761                                                               
                           E'L                                                      068  LM00082
                           CLOSE.(N1,N2,IOERR)                                      069  LM00083
 01501 TSX +0 07400 4 00003    01502 TXH +3 00000 0 00735    01503 TXH +3 00000 0 00736    01504 TXH +3 00000 0 00040   
                      E'L                                                           070  LM00084
      FSRTN           PRMESS.($*$)                                                  071  LM00085
 01505 TSX +0 07400 4 00017    01506 TXH +3 00000 0 01021                                                               
                      N=N+2                                                         072  LM00086
 01507 CLA +0 50000 0 00741    01510 ADD +0 40000 0 00765    01511 STO +0 60100 0 00741                                 
                 E'L                                                                073  LM00087
                 T'O LOOP                                                           074  LM00088
 01512 TRA +0 02000 0 00041                                                                                             
      AARGH      PRMESS.($ERROR IN COMLOC$)                                         075  LM00090
 01513 TSX +0 07400 4 00017    01514 TXH +3 00000 0 01003    01515 TXH +3 00000 0 01005    01516 TXH +3 00000 0 01010   
                 T'O OUT                                                            076  LM00091
 01517 TRA +0 02000 0 00045                                                                                             
      OUTERR     PRNTER.(375K)                                                      077  LM00093
 01520 TSX +0 07400 4 00020    01521 TXH +3 00000 0 00777                                                               
                 CHNCOM.(0)                                                         078  LM00094
 01522 TSX +0 07400 4 00002    01523 TXH +3 00000 0 00763                                                               
      NOPRIV     PRMESS.($INSUFFICIENT PRIVILEGES$)                                 079  LM00096
 01524 TSX +0 07400 4 00017    01525 TXH +3 00000 0 01006    01526 TXH +3 00000 0 01004    01527 TXH +3 00000 0 01025   
 01530 TXH +3 00000 0 01007                                                                                             
                 T'O OUT                                                            080  LM00097
 01531 TRA +0 02000 0 00045                                                                                             
      ILFRMT     PRMESS.($NOT ENOUGH ARGUMENTS$)                                    081  LM00099
 01532 TSX +0 07400 4 00017    01533 TXH +3 00000 0 01011    01534 TXH +3 00000 0 01013    01535 TXH +3 00000 0 01017   
 01536 TXH +3 00000 0 01027                                                                                             
                 T'O OUT                                                            082  LM00100
 01537 TRA +0 02000 0 00045                                                                                             
      ATTERR     PRNTER.(375K)                                                      083  LM00102
 01540 TSX +0 07400 4 00020    01541 TXH +3 00000 0 00777                                                               
                 T'O OUT                                                            084  LM00103
 01542 TRA +0 02000 0 00045                                                                                             
      FSERR      PRNTER.(61K)                                                       085  LM00105
 01543 TSX +0 07400 4 00020    01544 TXH +3 00000 0 00774                                                               
                 T'O FSRTN                                                          086  LM00106
 01545 TRA +0 02000 0 00036                                                                                             
      IOERR      PRNTER.(375K)                                                      087  LM00108
 01546 TSX +0 07400 4 00020    01547 TXH +3 00000 0 00777                                                               
                 TEMP=TRACKS.(0)                                                    088  LM00109
 01550 TSX +0 07400 4 00024    01551 TXH +3 00000 0 00763    01552 STO +0 60100 0 00761                                 
                 PRMESS.(TEMP)                                                      089  LM00110
 01553 TSX +0 07400 4 00017    01554 TXH +3 00000 0 00761                                                               
                 CLOSE.(N1,N2,FSRTN)                                                090  LM00111
 01555 TSX +0 07400 4 00003    01556 TXH +3 00000 0 00735    01557 TXH +3 00000 0 00736    01560 TXH +3 00000 0 00036   
                 T'O FSRTN                                                          091  LM00112
 01561 TRA +0 02000 0 00036                                                                                             
      OOPS       PRMESS.(N1,SP,N2,$ NOT FOUND IN AFST$)                             092  LM00114
 01562 TSX +0 07400 4 00017    01563 TXH +3 00000 0 00735    01564 TXH +3 00000 0 00750    01565 TXH +3 00000 0 00736   
 01566 TXH +3 00000 0 01024    01567 TXH +3 00000 0 01014    01570 TXH +3 00000 0 01012                                 
                 CLOSE.(N1,N2,IOERR)                                                093  LM00115
 01571 TSX +0 07400 4 00003    01572 TXH +3 00000 0 00735    01573 TXH +3 00000 0 00736    01574 TXH +3 00000 0 00040   
                 T'O FSRTN                                                          094  LM00116
 01575 TRA +0 02000 0 00036                                                                                             
                 E'M                                                                095  LM00118
 01576 TSX +0 07400 4 00007                                                                                             
1     FAP ASSEMBLY LISTING  ...  ...  ...        FILE TRACKS _____FAP___         02/25/69 1954.7 PAGE 1     
                  
                       00007         ENTRY   NEWFIL   
                       00110         ENTRY   TRACKS   
                       00105         ENTRY   SETRKS   
                       00123         ENTRY   TRKS     
                  
                                     EXTERN  ATTNAM,ATTACH  
                                     EXTERN  COMLOC   
                                     EXTERN  GETLOC,DELBC   
                  
                  
        TRANSFER VECTOR 
      00000  216363452144     ATTNAM
      00001  216363212330     ATTACH
      00002  234644434623     COMLOC
      00003  272563434623     GETLOC
      00004  242543222360     DELBC 
                  
            LINKAGE DIRECTOR  
      00005  000000000000     
      00006  452566263143     
                  
      00007  0634 00 4 00101  NEWFIL SXA     XR4,4    
                  
      00010  0020 00 0 00011  GATE   TRA     *+1
      00011  0074 00 4 00000         TSX     ATTNAM,4 
      00012  3 00002 0 00127         PTH     N1,,2    
      00013  0074 00 4 00002         TSX     COMLOC,4 
      00014  3 00000 0 00136         PTH     =HACTFIL 
      00015  3 00000 0 00103         PTH     OOPS     
      00016  0621 00 0 00040         STA     ACTFIL   
      00017  0074 00 4 00002         TSX     COMLOC,4 
      00020  3 00000 0 00137         PTH     =HAFSTU2 
      00021  3 00000 0 00103         PTH     OOPS     
      00022  0400 00 0 00131         ADD     AFSCON   
      00023  0621 00 0 00041         STA     BASE     
      00024  0074 00 4 00001         TSX     ATTACH,4 
      00025  3 00000 0 00127         PTH     N1 
      00026  3 00000 0 00130         PTH     N2 
      00027  3 00000 0 00030         PTH     *+1
      00030  0534 00 4 00101         LXA     XR4,4    
      00031 -0625 00 0 00010         STL     GATE     
                  
      00032 -0500 60 4 00001         CAL*    1,4
      00033  0602 00 0 00127         SLW     N1 
      00034 -0500 60 4 00002         CAL*    2,4
      00035  0602 00 0 00130         SLW     N2 
      00036  0634 00 1 00077         SXA     XR1,1    
      00037  0634 00 2 00100         SXA     XR2,2    
      00040  0774 00 1 00000  ACTFIL AXT     **,1     
      00041 -0774 00 2 00000  BASE   AXC     **,2     
                  
      00042  0756 00 2 00000  FNDLOP PCA     ,2 
      00043  0400 00 0 00132         ADD     RPROBN   
      00044  0621 00 0 00046         STA     *+2
      00045  0074 00 4 00003         TSX     GETLOC,4 
      00046  0 00000 0 00000                 ** 
1     FAP ASSEMBLY LISTING  ...  ...  ...        FILE TRACKS _____FAP___         02/25/69 1954.7 PAGE 2     
                  
      00047  0100 00 0 00066         TZE     FNDNXT   
      00050  0756 00 2 00000         PCA     ,2 
      00051  0400 00 0 00133         ADD     RNAME1   
      00052  0621 00 0 00054         STA     *+2
      00053  0074 00 4 00003         TSX     GETLOC,4 
      00054  0 00000 0 00000                 ** 
      00055  0322 00 0 00127         ERA     N1 
      00056 -0100 00 0 00066         TNZ     FNDNXT   
      00057  0756 00 2 00000         PCA     ,2 
      00060  0400 00 0 00134         ADD     RNAME2   
      00061  0621 00 0 00063         STA     *+2
      00062  0074 00 4 00003         TSX     GETLOC,4 
      00063  0 00000 0 00000                 ** 
      00064  0322 00 0 00130         ERA     N2 
      00065  0100 00 0 00074         TZE     FOUND    
      00066  1 77752 2 00067  FNDNXT TXI     *+1,2,-AFSENL  
      00067  2 00001 1 00042         TIX     FNDLOP,1,1     
      00070  0534 00 1 00077         LXA     XR1,1    
      00071  0534 00 2 00100         LXA     XR2,2    
      00072  0534 00 4 00101         LXA     XR4,4    
      00073  0020 60 4 00003         TRA*    3,4
                  
      00074  0756 00 2 00000  FOUND  PCA     ,2 
      00075  0400 00 0 00135         ADD     SMTMP2   
      00076  0621 00 0 00112         STA     TRKADR   
      00077  0774 00 1 00000  XR1    AXT     **,1     
      00100  0774 00 2 00000  XR2    AXT     **,2     
      00101  0774 00 4 00000  XR4    AXT     **,4     
      00102  0020 00 4 00004         TRA     4,4
                  
      00103  0534 00 4 00101  OOPS   LXA     XR4,4    
      00104  0020 60 4 00003         TRA*    3,4
                  
      00105 -0500 00 0 00112  SETRKS CAL     TRKADR   
      00106  0621 00 0 00125         STA     TRKAD1   
      00107  0020 00 4 00001         TRA     1,4
                  
      00110  0634 00 4 00121  TRACKS SXA     TX4,4    
      00111  0074 00 4 00003         TSX     GETLOC,4 
      00112  0 00000 0 00000  TRKADR         ** 
      00113  0602 00 0 00127         SLW     N1 
      00114  0074 00 4 00004         TSX     DELBC,4  
      00115  3 00000 0 00127         PTH     N1 
      00116  0131 00 0 00000         XCA  
      00117 -0773 00 0 00006         RQL     6  
      00120 -0130 00 0 00000         XCL  
      00121  0774 00 4 00000  TX4    AXT     **,4     
      00122  0020 00 4 00001         TRA     1,4
                  
      00123  0634 00 4 00121  TRKS   SXA     TX4,4    
      00124  0074 00 4 00003         TSX     GETLOC,4 
      00125  0 00000 0 00000  TRKAD1         ** 
      00126  0020 00 0 00113         TRA     TRKADR+1 
1     FAP ASSEMBLY LISTING  ...  ...  ...        FILE TRACKS _____FAP___         02/25/69 1954.7 PAGE 3     
                  
      00127  0 00000 0 00000  N1    
      00130  0 00000 0 00000  N2    
                  
      00131  0 00000 0 00025  AFSCON PZE     21 
      00132  0 00000 0 00000  RPROBN PZE     0  
      00133  0 00000 0 00002  RNAME1 PZE     2  
      00134  0 00000 0 00003  RNAME2 PZE     3  
      00135  0 00000 0 00025  SMTMP2 PZE     21 
                  
                       00026  AFSENL EQU     22 
                  
                                     END  
                  
        LITERALS  
      00136  212363263143     
      00137  212662636402     
1     FAP ASSEMBLY LISTING  ...  ...  ...        FILE TRACKS _____FAP___         02/25/69 1954.7 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        140 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        127     N1    12,   25,   33,   55,  113,  115
        130     N2    26,   35,   64
        121    TX4   110,  123
         77    XR1    36,   70
        100    XR2    37,   71
        101    XR4     7,   30,   72,  103
         41   BASE    23
         10   GATE    31
        103   OOPS    15,   21
        123   TRKS     0
          4  DELBC   114
         74  FOUND    65
         40 ACTFIL    16
        131 AFSCON    22
         26 AFSENL    66,  136
          1 ATTACH    24
          0 ATTNAM    11
          2 COMLOC    13,   17
         42 FNDLOP    67
         66 FNDNXT    47,   56
          3 GETLOC    45,   53,   62,  111,  124
          7 NEWFIL     0
        133 RNAME1    51
        134 RNAME2    60
        132 RPROBN    43
        105 SETRKS     0
        135 SMTMP2    75
        110 TRACKS     0
        125 TRKAD1   106
        112 TRKADR    76,  105,  126
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




TSSPMT   BCD 02/09/69 0651.2    4271         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  TSSPMT   MAD            10/29/68    1424.5
-                 
                  TSSPMT. - CREATE NEW PERMIT FILE FOR M1416 CMFL04                                    LM00001    
                    THIS CREATES A PERMIT FILE WHICH ALLOWS                                            LM00002    
                    EVERYONE TO LINK TO THOSE FILES WHICH ARE                                          LM00003    
                    THEMSELVES LINKS.                                                                  LM00004    
                                                                                                       LM00005    
                  NORMAL MODE IS INTEGER                                                          *001 LM00006    
                  DIMENSION UF(7), WHERE(2), B1(0), B2(0), BUFF(0)                                *002 LM00007    
                  VECTOR VALUES UFD=$U.F.D.$                                                      *003 LM00008    
                  VECTOR VALUES FI= $(FILE)$                                                      *004 LM00009    
                  VECTOR VALUES PMT=$PERMIT$                                                      *005 LM00010    
                  VECTOR VALUES FIL=$  FILE$                                                      *006 LM00011    
                                                                                                       LM00012    
                  ATTNAM.(WHERE(1)...2)                                                           *007 LM00013    
                  ATTACH.($ M1416$,$CMFL04$)                                                      *008 LM00014    
                  STORGE.(2,QUOTA,USED)                                                           *009 LM00015    
                  FERRTN.(OOPS)                                                                   *010 LM00016    
                  TEMPQ=USED+1                                                                    *011 LM00017    
                  ALLOT.(2,TEMPQ)                                                                 *012 LM00018    
                  FSTATE.(UFD,FI,LTH...1)                                                         *013 LM00019    
                  LTH=((LTH-3)/7)*6                                                               *014 LM00020    
                  GETBUF.(BUFF,LTH)                                                               *015 LM00021    
                  GETBUF.(B1,432)                                                                 *016 LM00022    
                  GETBUF.(B2,432)                                                                 *017 LM00023    
                  N=0                                                                             *018 LM00024    
                                                                                                       LM00025    
                  BFOPEN.($R$,UFD,FI,B1(B1+431),B2(B2+431),-0,OOPS)                               *019 LM00026    
                  BFREAD.(UFD,FI,UF(7)...3,EOF,UF,OOPS)                                           *020 LM00027    
      RD          BFREAD.(UFD,FI,UF(7)...7,EOF,UF,OOPS)                                           *021 LM00028    
                  WHENEVER UF(7).E.0.AND.UF(6).E.0, TRANSFER TO RD                                *022 LM00029    
                  WHENEVER F.(UF).E.0, PRMT.(UF(7),UF(6))                                         *023 LM00030    
                  TRANSFER TO RD                                                                  *024 LM00031    
      EOF         BFCLOS.(UFD,FI,OOPS)                                                            *025 LM00032    
                  OPEN.($W$,PMT,FIL,120K)                                                         *026 LM00033    
                  BUFFER.(PMT,FIL,B1(B1+431)...432)                                               *027 LM00034    
                  TRFILE.(PMT,FIL,0)                                                              *028 LM00035    
                  WRFILE.(PMT,FIL,0,BUFF(BUFF+N)...N)                                             *029 LM00036    
                  CLOSE.(PMT,FIL)                                                                 *030 LM00037    
                  ALLOT.(2,QUOTA)                                                                 *031 LM00038    
                  ATTACH.(WHERE(1),WHERE(0))                                                      *032 LM00039    
                  PRMESS.($*$)                                                                    *033 LM00040    
                                                                                                       LM00041    
                  CHNCOM.(0)                                                                      *034 LM00042    
                                                                                                       LM00043    
      OOPS        FERRTN.(0)                                                                      *035 LM00044    
                  CLOSE.($ALL$)                                                                   *036 LM00045    
                  ALLOT.(2,QUOTA)                                                                 *037 LM00046    
                  USRFIL.                                                                         *038 LM00047    
                  DSKER.                                                                          *039 LM00048    
                                                                                                       LM00049    
                                                                                                       LM00050    
                  INTERNAL FUNCTION F.(ARG)=ARG(3).A.700000K                                      *040 LM00051    
                                                                                                       LM00052    
                  INTERNAL FUNCTION (N1,N2)                                                       *041 LM00053    
                  ENTRY TO PRMT.                                                                  *042 LM00054    
                  N=N+6                                                                           *043 LM00055    
                  BUFF(BUFF+N)=LMARK                                                              *044 LM00056    
                  BUFF(BUFF+N-1)=N1                                                               *045 LM00057    
                  BUFF(BUFF+N-2)=N2                                                               *046 LM00058    
                  BUFF(BUFF+N-3)=$     *$                                                         *047 LM00059    
                  BUFF(BUFF+N-4)=$     *$                                                         *048 LM00060    
                  BUFF(BUFF+N-5)=$   104$                                                         *049 LM00061    
                  FUNCTION RETURN                                                                 *050 LM00062    
                  VECTOR VALUES LMARK=777777000005K                                               *051 LM00063    
                  END OF FUNCTION                                                                 *052 LM00064    
                                                                                                       LM00065    
                  END OF PROGRAM                                                                  *053 LM00066    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00450 TRANSFER VECTOR LENGTH  00025 PROGRAM BEGINS    00110
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      B1     00033 A 1        FIL    00036 A 1        N      00042   1        RD     00032   4        UF     00056 A 1  
      B2     00034 A 1        FI     00037 A 1        OOPS   00031   4        TEMPQ  00045   1        USED   00057   1  
      BUFF   00035 A 1        LMARK  00040 A 1        PMT    00043 A 1        UFD    00046 A 1        WHERE  00062 A 1  
      EOF    00030   4        LTH    00041   1        QUOTA  00044   1                                                  
0FUNCTION DICTIONARY    
      ALLOT  00000   1        ATTACH 00001   1        ATTNAM 00002   1        BFCLOS 00003   1        BFOPEN 00004   1  
      BFREAD 00005   1        BUFFER 00006   1        CHNCOM 00007   1        CLOSE  00010   1        DSKER  00011   1  
      EXIT   00012   1        FERRTN 00013   1        FSTATE 00014   1        GETBUF 00015   1        .SETUP 00016   1  
      OPEN   00017   1        PRMESS 00020   1        STORGE 00021   1        TRFILE 00022   1        USRFIL 00023   1  
      WRFILE 00024   1        F      00025   1        PRMT   00026   1                                                  
0ABSOLUTE CONSTANTS     
 00105 -206060010004     00070 +000000000005     00067 +000000000004     00106 -206060606054     00076 +000000700000    
 00077 +214343606060     00103 -146060606060     00073 +000000000120     00107 -266060606060     00102 -116060606060    
 00074 +000000000657     00063 +000000000000     00075 +000000000660     00071 +000000000006     00072 +000000000007    
 00066 +000000000003     00101 +234426430004     00104 -204401040106     00065 +000000000002     00064 +000000000001    
 00100 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00030 TXL -300244000240       00031 TXL -300317000315       00032 TXL -300221000212                                    
0PROGRAM    
                 N'S INTEGER                                                        001  LM00006
                 D'N UF(7), WHERE(2), B1(0), B2(0), BUFF(0)                         002  LM00007
                 V'S UFD=$U.F.D.$                                                   003  LM00008
 00110 TSX +0 07400 4 00016    00046     -2 43326 3 32433                                                               
                 V'S FI= $(FILE)$                                                   004  LM00009
 00037     -3 42631 4 32534                                                                                             
                 V'S PMT=$PERMIT$                                                   005  LM00010
 00043     -0 72551 4 43163                                                                                             
                 V'S FIL=$  FILE$                                                   006  LM00011
 00036     -2 06026 3 14325                                                                                             
                 ATTNAM.(WHERE(1)...2)                                              007  LM00013
 00111 TSX +0 07400 4 00002    00112 TIX +2 00065 0 00061                                                               
                 ATTACH.($ M1416$,$CMFL04$)                                         008  LM00014
 00113 TSX +0 07400 4 00001    00114 TXH +3 00000 0 00104    00115 TXH +3 00000 0 00101                                 
                 STORGE.(2,QUOTA,USED)                                              009  LM00015
 00116 TSX +0 07400 4 00021    00117 TXH +3 00000 0 00065    00120 TXH +3 00000 0 00044    00121 TXH +3 00000 0 00057   
                 FERRTN.(OOPS)                                                      010  LM00016
 00122 TSX +0 07400 4 00013    00123 TXH +3 00000 0 00031                                                               
                 TEMPQ=USED+1                                                       011  LM00017
 00124 CLA +0 50000 0 00057    00125 ADD +0 40000 0 00064    00126 STO +0 60100 0 00045                                 
                 ALLOT.(2,TEMPQ)                                                    012  LM00018
 00127 TSX +0 07400 4 00000    00130 TXH +3 00000 0 00065    00131 TXH +3 00000 0 00045                                 
                 FSTATE.(UFD,FI,LTH...1)                                            013  LM00019
 00132 TSX +0 07400 4 00014    00133 TXH +3 00000 0 00046    00134 TXH +3 00000 0 00037    00135 TIX +2 00064 0 00041   
                 LTH=((LTH-3)/7)*6                                                  014  LM00020
 00136 CLA +0 50000 0 00041    00137 SUB +0 40200 0 00066    00140 LRS +0 76500 0 00043    00141 DVP +0 22100 0 00072   
 00142 MPY +0 20000 0 00071    00143 STQ -0 60000 0 00041                                                               
                 GETBUF.(BUFF,LTH)                                                  015  LM00021
 00144 TSX +0 07400 4 00015    00145 TXH +3 00000 0 00035    00146 TXH +3 00000 0 00041                                 
                 GETBUF.(B1,432)                                                    016  LM00022
 00147 TSX +0 07400 4 00015    00150 TXH +3 00000 0 00033    00151 TXH +3 00000 0 00075                                 
                 GETBUF.(B2,432)                                                    017  LM00023
 00152 TSX +0 07400 4 00015    00153 TXH +3 00000 0 00034    00154 TXH +3 00000 0 00075                                 
                 N=0                                                                018  LM00024
 00155 CLA +0 50000 0 00063    00156 STO +0 60100 0 00042                                                               
                 BFOPEN.($R$,UFD,FI,B1(B1+431),B2(B2+431),-0,OOPS)                  019  LM00026
 00157 CLS +0 50200 0 00063    00160 STO +0 60100 0 00445    00161 CLA +0 50000 0 00034    00162 ADD +0 40000 0 00074   
 00163 SUB +0 40200 0 00164    00164 TXH +3 00000 0 00034    00165 STA +0 62100 0 00200    00166 CLA +0 50000 0 00033   
 00167 ADD +0 40000 0 00074    00170 SUB +0 40200 0 00171    00171 TXH +3 00000 0 00033    00172 STA +0 62100 0 00177   
 00173 TSX +0 07400 4 00004    00174 TXH +3 00000 0 00102    00175 TXH +3 00000 0 00046    00176 TXH +3 00000 0 00037   
 00177 TXH +3 00000 0 00000    00200 TXH +3 00000 0 00000    00201 TXH +3 00000 0 00445    00202 TXH +3 00000 0 00031   
                 BFREAD.(UFD,FI,UF(7)...3,EOF,UF,OOPS)                              020  LM00027
 00203 TSX +0 07400 4 00005    00204 TXH +3 00000 0 00046    00205 TXH +3 00000 0 00037    00206 TIX +2 00066 0 00047   
 00207 TXH +3 00000 0 00030    00210 TXH +3 00000 0 00056    00211 TXH +3 00000 0 00031                                 
      RD         BFREAD.(UFD,FI,UF(7)...7,EOF,UF,OOPS)                              021  LM00028
 00212 TSX +0 07400 4 00005    00213 TXH +3 00000 0 00046    00214 TXH +3 00000 0 00037    00215 TIX +2 00072 0 00047   
 00216 TXH +3 00000 0 00030    00217 TXH +3 00000 0 00056    00220 TXH +3 00000 0 00031                                 
                 W'R UF(7).E.0.AND.UF(6).E.0, T'O RD                                022  LM00029
 00221 CLA +0 50000 0 00050    00222 SUB +0 40200 0 00063    00223 TNZ -0 10000 0 00230    00224 CLA +0 50000 0 00047   
 00225 SUB +0 40200 0 00063    00226 TNZ -0 10000 0 00230    00227 TRA +0 02000 0 00032                                 
                 W'R F.(UF).E.0, PRMT.(UF(7),UF(6))                                 023  LM00030
 00230 TSX +0 07400 4 00025    00231 TXH +3 00000 0 00056    00232 SUB +0 40200 0 00063    00233 TNZ -0 10000 0 00237   
 00234 TSX +0 07400 4 00026    00235 TXH +3 00000 0 00047    00236 TXH +3 00000 0 00050                                 
                 T'O RD                                                             024  LM00031
 00237 TRA +0 02000 0 00032                                                                                             
      EOF        BFCLOS.(UFD,FI,OOPS)                                               025  LM00032
 00240 TSX +0 07400 4 00003    00241 TXH +3 00000 0 00046    00242 TXH +3 00000 0 00037    00243 TXH +3 00000 0 00031   
                 OPEN.($W$,PMT,FIL,120K)                                            026  LM00033
 00244 TSX +0 07400 4 00017    00245 TXH +3 00000 0 00107    00246 TXH +3 00000 0 00043    00247 TXH +3 00000 0 00036   
 00250 TXH +3 00000 0 00073                                                                                             
                 BUFFER.(PMT,FIL,B1(B1+431)...432)                                  027  LM00034
 00251 CLA +0 50000 0 00033    00252 ADD +0 40000 0 00074    00253 SUB +0 40200 0 00254    00254 TXH +3 00000 0 00033   
 00255 STA +0 62100 0 00261    00256 TSX +0 07400 4 00006    00257 TXH +3 00000 0 00043    00260 TXH +3 00000 0 00036   
 00261 TIX +2 00075 0 00000                                                                                             
                 TRFILE.(PMT,FIL,0)                                                 028  LM00035
 00262 TSX +0 07400 4 00022    00263 TXH +3 00000 0 00043    00264 TXH +3 00000 0 00036    00265 TXH +3 00000 0 00063   
                 WRFILE.(PMT,FIL,0,BUFF(BUFF+N)...N)                                029  LM00036
 00266 CLA +0 50000 0 00035    00267 ADD +0 40000 0 00042    00270 SUB +0 40200 0 00271    00271 TXH +3 00000 0 00035   
 00272 STA +0 62100 0 00277    00273 TSX +0 07400 4 00024    00274 TXH +3 00000 0 00043    00275 TXH +3 00000 0 00036   
 00276 TXH +3 00000 0 00063    00277 TIX +2 00042 0 00000                                                               
                 CLOSE.(PMT,FIL)                                                    030  LM00037
 00300 TSX +0 07400 4 00010    00301 TXH +3 00000 0 00043    00302 TXH +3 00000 0 00036                                 
                 ALLOT.(2,QUOTA)                                                    031  LM00038
 00303 TSX +0 07400 4 00000    00304 TXH +3 00000 0 00065    00305 TXH +3 00000 0 00044                                 
                 ATTACH.(WHERE(1),WHERE(0))                                         032  LM00039
 00306 TSX +0 07400 4 00001    00307 TXH +3 00000 0 00061    00310 TXH +3 00000 0 00062                                 
                 PRMESS.($*$)                                                       033  LM00040
 00311 TSX +0 07400 4 00020    00312 TXH +3 00000 0 00103                                                               
                 CHNCOM.(0)                                                         034  LM00042
 00313 TSX +0 07400 4 00007    00314 TXH +3 00000 0 00063                                                               
      OOPS       FERRTN.(0)                                                         035  LM00044
 00315 TSX +0 07400 4 00013    00316 TXH +3 00000 0 00063                                                               
                 CLOSE.($ALL$)                                                      036  LM00045
 00317 TSX +0 07400 4 00010    00320 TXH +3 00000 0 00077                                                               
                 ALLOT.(2,QUOTA)                                                    037  LM00046
 00321 TSX +0 07400 4 00000    00322 TXH +3 00000 0 00065    00323 TXH +3 00000 0 00044                                 
                 USRFIL.                                                            038  LM00047
 00324 TSX +0 07400 4 00023                                                                                             
                 DSKER.                                                             039  LM00048
 00325 TSX +0 07400 4 00011                                                                                             
                 INTERNAL FUNCTION F.(ARG)=ARG(3).A.700000K                         040  LM00051
 00326 TRA +0 02000 0 00353    00025 TTR +0 02100 0 00327    00327 SXA +0 63400 2 00337    00330 TSX +0 07400 2 00337   
 00331 CAL -0 50000 0 00021    00332 ANA -0 32000 0 00076    00333 SLW +0 60200 0 00352    00334 CLA +0 50000 0 00352   
 00335 TRA +0 02000 0 00346    00336 PZE +0 00000 0 00003    00337 TXH +3 00000 0 00000    00340 SXD -0 63400 1 00337   
 00341 SXA +0 63400 4 00346    00342 CLA +0 50000 4 00001    00343 SUB +0 40200 0 00336    00344 STA +0 62100 0 00331   
 00345 TRA +0 02000 2 00001    00346 AXT +0 77400 4 00000    00347 LXA +0 53400 2 00337    00350 LXD -0 53400 1 00337   
 00351 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION (N1,N2)                                          041  LM00053
 00353 TRA +0 02000 0 00444                                                                                             
                 ENTRY TO PRMT.                                                     042  LM00054
 00354 TRA +0 02000 0 00357    00026 TTR +0 02100 0 00355    00355 SXA +0 63400 2 00430    00356 TSX +0 07400 2 00430   
                 N=N+6                                                              043  LM00055
 00357 CLA +0 50000 0 00042    00360 ADD +0 40000 0 00071    00361 STO +0 60100 0 00042                                 
                 BUFF(BUFF+N)=LMARK                                                 044  LM00056
 00362 CLA +0 50000 0 00035    00363 ADD +0 40000 0 00042    00364 PAX +0 73400 1 00000    00365 CLA +0 50000 0 00040   
 00366 STO +0 60100 1 00035                                                                                             
                 BUFF(BUFF+N-1)=N1                                                  045  LM00057
 00367 CLA +0 50000 0 00035    00370 ADD +0 40000 0 00042    00371 SUB +0 40200 0 00064    00372 PAX +0 73400 1 00000   
 00373 CLA +0 50000 0 00024    00374 STO +0 60100 1 00035                                                               
                 BUFF(BUFF+N-2)=N2                                                  046  LM00058
 00375 CLA +0 50000 0 00035    00376 ADD +0 40000 0 00042    00377 SUB +0 40200 0 00065    00400 PAX +0 73400 1 00000   
 00401 CLA +0 50000 0 00024    00402 STO +0 60100 1 00035                                                               
                 BUFF(BUFF+N-3)=$     *$                                            047  LM00059
 00403 CLA +0 50000 0 00035    00404 ADD +0 40000 0 00042    00405 SUB +0 40200 0 00066    00406 PAX +0 73400 1 00000   
 00407 CLA +0 50000 0 00106    00410 STO +0 60100 1 00035                                                               
                 BUFF(BUFF+N-4)=$     *$                                            048  LM00060
 00411 CLA +0 50000 0 00035    00412 ADD +0 40000 0 00042    00413 SUB +0 40200 0 00067    00414 PAX +0 73400 1 00000   
 00415 CLA +0 50000 0 00106    00416 STO +0 60100 1 00035                                                               
                 BUFF(BUFF+N-5)=$   104$                                            049  LM00061
 00417 CLA +0 50000 0 00035    00420 ADD +0 40000 0 00042    00421 SUB +0 40200 0 00070    00422 PAX +0 73400 1 00000   
 00423 CLA +0 50000 0 00105    00424 STO +0 60100 1 00035                                                               
                 F'N                                                                050  LM00062
 00425 TRA +0 02000 0 00440                                                                                             
                 V'S LMARK=777777000005K                                            051  LM00063
 00040     -3 77777 0 00005                                                                                             
                 E'N                                                                052  LM00064
 00426 TSX +0 07400 4 00012    00427 PZE +0 00000 0 00003    00430 TXH +3 00000 0 00000    00431 SXD -0 63400 1 00430   
 00432 SXA +0 63400 4 00440    00433 CLA +0 50000 4 00001    00434 STA +0 62100 0 00373    00435 CLA +0 50000 4 00002   
 00436 STA +0 62100 0 00401    00437 TRA +0 02000 2 00001    00440 AXT +0 77400 4 00000    00441 LXA +0 53400 2 00430   
 00442 LXD -0 53400 1 00430    00443 TRA +0 02000 4 00001                                                               
                 END OF PROGRAM                                                     053  LM00066
 00444 TSX +0 07400 4 00012                                                                                             




   TUT   BCD 02/09/69 0728.3    5975         00000    
1       M1416-3845 PETER R. BOS ..... TUT, PRINT TRACK USAGE FIGURES .....                       PAGE 1     
                  
                                     PCC     ON 
                                     LBL     TUT00000 
                                     PCC     OFF
                  
                                     EXTERN  WRFLX,SETBRK,GETCOM,BCDEC,GETLOC,ACORE,GETMEM
                                     EXTERN  SETMEM,SETFUL,GETARY,BITBL,DEFBC,BZEL,BCLFUL 
                                     EXTERN  BCRFUL,BZ57,SETBCD,SLEEP,CHNCOM  
                  
                  
                                     UNLIST     
 M                            CALL   MACRO   NAME,LIST     SUBROUTINE CALL MACRO                                  
                  
                  
      00023  0760 00 0 00016         LMTM                  MAY AS WELL...     
      00024  0760 00 0 00141         SLN     1             TURN ON A SENSE LIGHT.   
      00025                          CALL    WRFLX((*,,0)) TYPE A C.R.  
      00027                          CALL    SETBRK(XIT)   SET INTERRUPT.     
      00031                          CALL    GETCOM(1)     GET SLEEP ARGUMENT, IF ANY.    
      00033  0602 00 0 00272         SLW     SLPTIM        SAVE IT.     
      00034  0322 00 0 00273         ERA     FENCE         TEST IF NO ARG.    
      00035 -0100 00 0 00037         TNZ     *+2           NOT FENCE, SKIP.   
      00036  0600 00 0 00272         STZ     SLPTIM        ELSE, CLEAR SLEEP TIME.  
      00037                          CALL    BCDEC(SLPTIM) CONVERT TO BINARY. 
      00041  0131 00 0 00000         XCA  
      00042  0200 00 0 00301         MPY     =60           TURN TO SECONDS.   
      00043 -0600 00 0 00272         STQ     SLPTIM        AND PUT IT AWAY.   
                  
      00044  0074 00 4 00004  TUTLOC TSX     GETLOC,4      TRY ABSOLUTE LOC'N FIRST 
      00045  0 00000 0 46722         PZE     TUT           ..     
      00046  0322 00 0 00045         ERA     TUTLOC+1      TEST IF RIGHT PLACE.     
      00047  0100 00 0 00057         TZE     START         ZOWIE, HIT IT.     
      00050 -0760 00 0 00141         SLT     1             IF WE ALREADY TRIED BEFORE,    
      00051  0020 00 0 00206         TRA     BAD           FORGET IT.   
      00052                          CALL    ACORE(=HGETTRK) TRY TO GET PROGRAM ORIGIN.   
      00054  0361 00 0 00267         ACL     RELADR        PLUS RELATIVE ADDRESS LAST TIME
      00055  0621 00 0 00045         STA     TUTLOC+1      WE LOOKED AT THE LISTINGS, AND 
      00056  0020 00 0 00044         TRA     TUTLOC        TRY ONCE MORE (ONLY ONCE).     
                  
                       00057  START  SYN     *  
      00057  0074 00 4 00006         TSX     GETMEM,4      GET MEMORY BOUND NOW.    
      00060  0621 00 0 00074         STA     GET+2         SAVE FOR CALL TO GETARY. 
      00061  0774 00 7 00003         AXT     NTABLS,7      NUMBER OF DIFFERENT TABLES TO GET.   
      00062  0621 00 7 00227         STA     PTABLE,7      TABLE START ADDRESS IN BCORE.  
      00063  0400 00 7 00224         ADD     LTABLE,7      TABLE LENGTH.
      00064  2 00001 7 00062         TIX     *-2,7,1       REPEAT TILL DONE.  
      00065  0074 00 4 00007         TSX     SETMEM,4      NOW SET NEW MEMORY BOUND.
                  
      00066  0534 00 4 00045         LXA     TUTLOC+1,4    GET A-CORE TABLE ORIGIN. 
      00067  1 00001 4 00070         TXI     *+1,4,1       ..     
      00070  0634 00 4 00073         SXA     GET+1,4       AND INSERT IN CALL 
                  
                       00071  WORK   SYN     *             RETURN HERE AFTER WAKING UP.   
      00071  0074 00 4 00010         TSX     SETFUL,4      TO 12-BIT MODE.    
      00072  0074 00 4 00011  GET    TSX     GETARY,4      READ IN ENTIRE USAGE TABLE.    
      00073  0 00000 0 00000         PZE     -             ..     
      00074  0 04363 0 00000         PZE     -,,TOTLTH     ..     
1       M1416-3845 PETER R. BOS ..... TUT, PRINT TRACK USAGE FIGURES .....                       PAGE 2     
                  
      00075  0774 00 7 00003         AXT     NTABLS,7      GET NUMBER OF TABLES TO DO.    
                  
      00076 -0500 00 7 00227  MORE   CAL     PTABLE,7      GET B-CORE ADDRESS OF ORIGIN.  
      00077 -0734 00 1 00000         PDX     0,1           COUNT TO XR1.
      00100  0737 00 2 00000         PAC     0,2           -(ORIGIN) TO XR2.  
      00101  0600 00 0 00270         STZ     COUNT         CLEAR BIT COUNT FOR THIS TABLE.
      00102 -0500 00 7 00221         CAL     LBITS,7       GET NUMBER OF BITS IN LAST WORD.     
      00103  0734 00 4 00000         PAX     0,4           TO XR4 FOR SHIFTING.     
                       00104  LOOP   SYN     *             LOOP HERE TO COUNT BITS. 
      00104 -0500 00 2 00000         CAL     0,2           GET WORD FROM TABLE.     
      00105  0760 00 0 00006         COM                   1 BIT = UNUSED TRACK, SO COMPLEMENT. 
      00106 -0320 00 0 00273         ANA     FENCE         GET RID OF DAMNED Q BIT. 
      00107  3 00001 1 00111         TXH     *+2,1,1       SKIP EXCEPT ON LAST WORD.
      00110  0771 00 4 00044         ARS     36,4          SHIFT OUT UNUSED BITS ON LAST WORD.  
      00111 -0130 00 0 00000         XCL                   WORD TO MQ.  
      00112 -0754 00 0 00000         ZAC                   CLEAR COUNT IN AC. 
      00113  0522 60 0 00012         XEC*    BITBL         COUNT BITS IN MQ (VIA CAQ TABLE)     
      00114  0771 00 0 00022         ARS     18            SHIFT COUNT. 
      00115  0400 00 0 00270         ADD     COUNT         ADD IN PREVIOUS RESULTS. 
      00116  0601 00 0 00270         STO     COUNT         AND SAVE IT NOW.   
      00117  1 77777 2 00120         TXI     *+1,2,-1      INCREMENT TABLE ADDRESS. 
      00120  2 00001 1 00104         TIX     LOOP,1,1      LOOP TILL DONE.    
                  
      00121  0560 00 0 00270         LDQ     COUNT         GET BIT COUNT FROM TABLE.
      00122  0200 00 7 00216         MPY     FACTOR,7      FOR DISK TRACKS, 1 BIT = 2 RECORDS.  
      00123 -0600 00 0 00270         STQ     COUNT         SAVE RESULT. 
      00124  0200 00 0 00303         MPY     =1000         NOW CONVERT TO PERCENTAGE.     
      00125 -0754 00 0 00000         ZAC                   JUST IN CASE.
      00126  0221 00 7 00232         DVP     TOTAL,7       DIVIDE BY TOTAL AVAILABLE.     
      00127 -0600 00 0 00271         STQ     TEMP          SAVE.  
      00130                          CALL    DEFBC(TEMP)   CONVERT TO DECIMAL.
      00132 -0765 00 0 00006         LGR     6             MAKE ROOM FOR DECIMAL POINT.   
      00133  0767 00 0 00006         ALS     6             ..     
      00134 -0501 00 0 00300         ORA     =O33          '.'    
      00135 -0763 00 0 00014         LGL     12            SHIFT TO LEFT OF WORD,   
      00136  0602 00 0 00271         SLW     TEMP          AND SAVE AGAIN.    
      00137                          CALL    BZEL(TEMP)    BLANK OUT LEADING ZEROS. 
      00141  0601 00 0 00271         STO     TEMP          AND AGAIN.   
      00142                          CALL    BCLFUL(TEMP)  NOW CONVERT TO 12-BIT.   
      00144  0602 00 0 00241         SLW     MESS+NWDS     LEFT HALF OF PCT.  
      00145                          CALL    BCRFUL(TEMP)  THE RIGHT HALF IS NICE TO HAVE ALSO. 
      00147 -0501 00 0 00302         ORA     =O105         ADD A PERCENT SIGN.
      00150  0602 00 0 00242         SLW     MESS+NWDS+1   ..     
                  
      00151  0500 00 7 00232         CLA     TOTAL,7       GET TOTAL AVAILABLE FOR TABLE. 
      00152  0402 00 0 00270         SUB     COUNT         LESS THE ONES BEING USED.
      00153  0601 00 0 00271         STO     TEMP          SAVE RESULT. 
      00154                          CALL    DEFBC(TEMP)   CONVERT TO DECIMAL ALSO. 
      00156  0601 00 0 00271         STO     TEMP          ..     
      00157                          CALL    BZ57(TEMP)    NULLS, PLEASE.     
      00161  0602 00 0 00271         SLW     TEMP          AGAIN..
      00162                          CALL    BCLFUL(TEMP)  CONVERT TO 12-BIT. 
      00164  0602 00 0 00246         SLW     MESS+NWDS+5   INSERT IN MESSAGE. 
      00165                          CALL    BCRFUL(TEMP)  GET THE OTHER HALF TOO.  
      00167  0602 00 0 00247         SLW     MESS+NWDS+6   AND ADD THAT IN.   
1       M1416-3845 PETER R. BOS ..... TUT, PRINT TRACK USAGE FIGURES .....                       PAGE 3     
                  
      00170  0774 00 4 00004         AXT     NWDS,4        NOW GET THE NAME OF THE SILLY THING. 
      00171 -0500 60 7 00235         CAL*    MESSNM,7      (A FEW WORDS)
      00172  0602 00 4 00241         SLW     MESS+NWDS,4   AND ADD THAT TO MESSAGE TOO.   
      00173  2 00001 4 00171         TIX     *-2,4,1       LOOP TILL DONE.    
                  
      00174                          CALL    WRFLX((MESS,,LMESS)) 
      00176  2 00001 7 00076         TIX     MORE,7,1      REPEAT FOR EACH TABLE.   
      00177  0074 00 4 00020         TSX     SETBCD,4      BACK TO 6-BIT MODE.
      00200                          CALL    WRFLX((*,,0)) AND A C.R.   
                  
      00202 -0500 00 0 00272         CAL     SLPTIM        ARE WE TO SLEEP. Q 
      00203  0100 00 0 00210         TZE     XIT           NO, JUST GO AWAY.  
      00204  0074 00 4 00021         TSX     SLEEP,4       ZZZ .. ZZZ .. ZZZ  
      00205  0020 00 0 00071         TRA     WORK          (YAWN) .. DO SOME MORE STUFF.  
                  
      00206                   BAD    TYPE    4(BAD UTABLE ADDRESS)
      00210  0074 00 4 00020  XIT    TSX     SETBCD,4      MAKE SURE IN 6-BIT MODE. 
      00211                          CALL    CHNCOM(0)     AND EXIT.    
1       M1416-3845 PETER R. BOS ..... TUT, PRINT TRACK USAGE FIGURES .....                       PAGE 4     
                  
                                             STORAGE AND CONSTANTS.     
                  
                                     INSERT  NMODS         DEFINE NDRUMS AND NDISKS 
                       00001  NDRUMS EQU     1             NUMBER OF DRUM MODULES   
                       00010  NDISKS EQU     8             NUMBER OF DISK MODULES   
                  
                       00620  TKPDRM EQU     400           NUMBER OF BITS IN TABLE PER DRUM MODULE.   
                       23420  TKPDSK EQU     10000         NUMBER OF BITS IN TABLE PER DISK MODULE.   
                       00372  CLPDSK EQU     250           NUMBER OF CYLINDERS PER DISK MODULE. 
                  
                       00001  DRMFAC EQU     1             NUMBER OF DRUM RECORDS PER BIT.
                       00002  DSKFAC EQU     2             NUMBER OF DISK RECORDS PER BIT.
                       00001  CYLFAC EQU     1             NUMBER OF CYLINDERS PER BIT.   
                  
      00213  0 00000 0 00001         PZE     DRMFAC   
      00214  0 00000 0 00002         PZE     DSKFAC   
      00215  0 00000 0 00001         PZE     CYLFAC   
                       00216  FACTOR SYN     *             MULTIPLYING FACTORS.     
                  
                       00004  LDRMBT EQU     NDRUMS*TKPDRM-NDRUMS*TKPDRM/36*36
                       00010  LDSKBT EQU     NDISKS*TKPDSK-NDISKS*TKPDSK/36*36
                       00024  LCYLBT EQU     NDISKS*CLPDSK-NDISKS*CLPDSK/36*36
                  
                       00014  DRUML  EQU     NDRUMS*TKPDRM/36+1   
                       04257  DISKL  EQU     NDISKS*TKPDSK/36+1   
                       00070  CYLDL  EQU     NDISKS*CLPDSK/36+1   
                  
      00216  0 00000 0 00004         PZE     LDRMBT   
      00217  0 00000 0 00010         PZE     LDSKBT   
      00220  0 00000 0 00024         PZE     LCYLBT   
                       00221  LBITS  SYN     *             NUMBER OF BITS IN LAST TABLE WORD.   
                  
                       00221  TOPTBL SYN     *             TOP OF LENGTH TABLE.     
      00221  0 00000 0 00014         PZE     DRUML    
      00222  0 00000 0 04257         PZE     DISKL    
      00223  0 00000 0 00070         PZE     CYLDL    
                       00224  LTABLE SYN     *             TABLE OF USAGE TABLE LENGTHS.  
                       00003  NTABLS EQU     LTABLE-TOPTBL NUMBER OF TABLES.  
                  
                       04363  TOTLTH EQU     DRUML+DISKL+CYLDL TOTAL LENGTH OF ALL TABLES.
                  
      00224  0 00014 0 00000         PZE     -,,DRUML 
      00225  0 04257 0 00000         PZE     -,,DISKL 
      00226  0 00070 0 00000         PZE     -,,CYLDL 
                       00227  PTABLE SYN     *             POINTERS TO TABLE LOC'N IN B-CORE.   
                  
      00227  000000000620            VFD     36/NDRUMS*TKPDRM*DRMFAC    
      00230  000000470400            VFD     36/NDISKS*TKPDSK*DSKFAC    
      00231  000000003720            VFD     36/NDISKS*CLPDSK*CYLFAC    
                       00232  TOTAL  SYN     *             TOTAL AVAILABLE SPACE PER TABLE.     
                  
                       00004  NWDS   EQU     4             NUMBER OF WORDS RESERVED FOR NAME OF TABLE.
      00232  0 00000 4 00256         PZE     DRMMES+NWDS,4  
      00233  0 00000 4 00262         PZE     DSKMES+NWDS,4  
      00234  0 00000 4 00266         PZE     CYLMES+NWDS,4  
                       00235  MESSNM SYN     *             POINTERS TO TABLE NAMES FOR PRINTING.
1       M1416-3845 PETER R. BOS ..... TUT, PRINT TRACK USAGE FIGURES .....                       PAGE 5     
                  
      00235                   MESS   BSS     NWDS          RESERVED FOR TABLE NAME. 
      00241                          BSS     2             PCT. USED.   
      00243  006001640162            BCI     2,0 1U1S1E1D0, 
      00244  012501240073     
      00245 +006000570057            OCT     006000570057   
      00246                          BSS     2             AMOUNT LEFT. 
      00250  006001430125            BCI     2,0 1L1E1F1T0. 
      00251  012601630033     
                       00015  LMESS  EQU     *-MESS   
                  
      00252  462401510164     DRMMES BCI     1,OD1R1U 
      00253 +014400350060            OCT     014400350060   
                       00254         DUP     1,NWDS-*+DRMMES
      00254 +005700570057            OCT     005700570057   
      00255 +005700570057     
      00256  002401310162     DSKMES BCI     1,0D1I1S 
      00257 +014200350060            OCT     014200350060   
                       00260         DUP     1,NWDS-*+DSKMES
      00260 +005700570057            OCT     005700570057   
      00261 +005700570057     
      00262  002301700143     CYLMES BCI     3,0C1Y1L1I1N1D1E1R1S 
      00263  013101450124     
      00264  012501510162     
      00265 +003500600057            OCT     003500600057   
 F                     00266         DUP     1,NWDS-*+CYLMES
      00266 +005700570057            OCT     005700570057   
                  
                      046722  TUT    BOOL    46722         LOCATION OF TABLE WHEN LAST SEEN.    
                      000774  REL    BOOL    774           RELATIVE LOCATION IN PROGRAM.  
      00267  0 00000 0 00774  RELADR PZE     REL           ..     
                  
      00270  0 00000 0 00000  COUNT  PZE  
      00271  0 00000 0 00000  TEMP   PZE  
      00272  0 00000 0 00000  SLPTIM PZE  
      00273 -377777777777     FENCE  OCT     777777777777   
                  
      00274                          RMT     *             REMOTE SEQUENCES.  
                  
                                     END  
                  
        LITERALS  
      00300  000000000033     
      00301  000000000074     
      00302  000000000105     
      00303  000000001750     
      00304  272563635142     
1       M1416-3845 PETER R. BOS ..... TUT, PRINT TRACK USAGE FIGURES .....                       PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        305 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        206    BAD    51
         72    GET    60,   70
        774    REL   267
      46722    TUT    45,  267
        210    XIT    30,  203
         17   BZ57   157
         14   BZEL   137
        104   LOOP   104,  120
        235   MESS   144,  150,  164,  167,  172,  175,  252
         76   MORE   176
          4   NWDS   144,  150,  164,  167,  170,  172,  232,  233,  234,  235,  254,  260,  266
        271   TEMP   127,  131,  136,  140,  141,  143,  146,  153,  155,  156,  160,  161,  163,  166
         71   WORK    71,  205
          5  ACORE    52
          3  BCDEC    37
         12  BITBL   113
        270  COUNT   101,  115,  116,  121,  123,  152
         70  CYLDL   216,  223,  224,  226
         13  DEFBC   130,  154
       4257  DISKL   216,  222,  224,  225
         14  DRUML   216,  221,  224
        273  FENCE    34,  106
        274  ..008   207
        221  LBITS   102,  221
         15  LMESS   175,  252
         21  SLEEP   204
         57  START    47,   57
        232  TOTAL   126,  151,  232
          0  WRFLX    25,  174,  200,  206
         15 BCLFUL   142,  162
         16 BCRFUL   145,  165
         22 CHNCOM   211
        372 CLPDSK   213,  216,  231
          1 CYLFAC   213,  215,  231
        262 CYLMES   234,  266
          1 DRMFAC   213,  227
        252 DRMMES   232,  254
          2 DSKFAC   213,  214,  230
        256 DSKMES   233,  260
        216 FACTOR   122,  216
         11 GETARY    72
          2 GETCOM    31
          4 GETLOC    44
          6 GETMEM    57
         24 LCYLBT   216,  220
          4 LDRMBT   216
         10 LDSKBT   216,  217
        224 LTABLE    63,  224
        235 MESSNM   171,  235
         10 NDISKS   213,  216,  230,  231
          1 NDRUMS   213,  216,  227
1       M1416-3845 PETER R. BOS ..... TUT, PRINT TRACK USAGE FIGURES .....                       PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          3 NTABLS    61,   75,  224
        227 PTABLE    62,   76,  227
        267 RELADR    54
         20 SETBCD   177,  210
          1 SETBRK    27
         10 SETFUL    71
          7 SETMEM    65
        272 SLPTIM    33,   36,   40,   43,  202
        620 TKPDRM   213,  216,  227
      23420 TKPDSK   213,  216,  230
        221 TOPTBL   221,  224
       4363 TOTLTH    74,  224
         44 TUTLOC    46,   55,   56,   66
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            CAQ TABLE FOR FINDING NUMBER OF BITS IN A NUMBER.                                   PAGE 1     
                  
                                             7/16/65 - NOEL I. MORRIS   
                  
                              GEN    MACRO   OP,VARF  
                                     PMC     ON 
                                     OP      VARF     
                                     PMC     OFF
                                     END  
                  
                              TGEN   MACRO   ITERS    
                                     BITBL   ABC,0    
                              ABC    SET     ABC+1    
                                     IFF     ITERS-ABC,,    
                                     TGEN    ITERS    
                                     END  
                  
                              BITBL  MACRO   NUMBER,SUM     
                              NBITS  SET     NUMBER+SUM     
                              HALF   SET     NUMBER/2 
                                     IFF     HALF,,A  
                                     GEN     PZE(TABLE,,NBITS)    
                                     IFF     HALF,,   
                                     BITBL   HALF,NBITS-2*HALF    
                                     END  
                  
                  
                       00100         ENTRY   BITBL    
                  
                  
                       00000  ABC    SET     0  
      00000                   TABLE  TGEN    64 
      00000  0 00000 0 00000         PZE     TABLE,,NBITS                                                     .003
      00001  0 00001 0 00000         PZE     TABLE,,NBITS                                                     .004
      00002  0 00001 0 00000         PZE     TABLE,,NBITS                                                     .006
      00003  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .007
      00004  0 00001 0 00000         PZE     TABLE,,NBITS                                                     .009
      00005  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .010
      00006  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .011
      00007  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .012
      00010  0 00001 0 00000         PZE     TABLE,,NBITS                                                     .014
      00011  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .015
      00012  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .016
      00013  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .017
      00014  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .018
      00015  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .019
      00016  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .020
      00017  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .021
      00020  0 00001 0 00000         PZE     TABLE,,NBITS                                                     .023
      00021  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .024
      00022  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .025
      00023  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .026
      00024  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .027
      00025  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .028
      00026  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .029
      00027  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .030
      00030  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .031
      00031  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .032
1            CAQ TABLE FOR FINDING NUMBER OF BITS IN A NUMBER.                                   PAGE 2     
                  
      00032  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .033
      00033  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .034
      00034  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .035
      00035  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .036
      00036  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .037
      00037  0 00005 0 00000         PZE     TABLE,,NBITS                                                     .038
      00040  0 00001 0 00000         PZE     TABLE,,NBITS                                                     .040
      00041  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .041
      00042  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .042
      00043  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .043
      00044  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .044
      00045  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .045
      00046  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .046
      00047  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .047
      00050  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .048
      00051  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .049
      00052  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .050
      00053  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .051
      00054  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .052
      00055  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .053
      00056  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .054
      00057  0 00005 0 00000         PZE     TABLE,,NBITS                                                     .055
      00060  0 00002 0 00000         PZE     TABLE,,NBITS                                                     .056
      00061  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .057
      00062  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .058
      00063  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .059
      00064  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .060
      00065  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .061
      00066  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .062
      00067  0 00005 0 00000         PZE     TABLE,,NBITS                                                     .063
      00070  0 00003 0 00000         PZE     TABLE,,NBITS                                                     .064
      00071  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .065
      00072  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .066
      00073  0 00005 0 00000         PZE     TABLE,,NBITS                                                     .067
      00074  0 00004 0 00000         PZE     TABLE,,NBITS                                                     .068
      00075  0 00005 0 00000         PZE     TABLE,,NBITS                                                     .069
      00076  0 00005 0 00000         PZE     TABLE,,NBITS                                                     .070
      00077  0 00006 0 00000         PZE     TABLE,,NBITS                                                     .071
                  
      00100 -0114 06 0 00000  BITBL  CAQ     TABLE,,6 
                  
                                     END  
1            CAQ TABLE FOR FINDING NUMBER OF BITS IN A NUMBER.                                   PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        101 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        100    ABC     0,    1,    2,    3,    4,    5,    6,    7,   10,   11,   12,   13,   14,   15,   16,   17,   20
                      21,   22,   23,   24,   25,   26,   27,   30,   31,   32,   33,   34,   35,   36,   37,   40,   41
                      42,   43,   44,   45,   46,   47,   50,   51,   52,   53,   54,   55,   56,   57,   60,   61,   62
                      63,   64,   65,   66,   67,   70,   71,   72,   73,   74,   75,   76,   77,  100
          0   HALF     0,    1,    2,    3,    4,    5,    6,    7,   10,   11,   12,   13,   14,   15,   16,   17,   20
                      21,   22,   23,   24,   25,   26,   27,   30,   31,   32,   33,   34,   35,   36,   37,   40,   41
                      42,   43,   44,   45,   46,   47,   50,   51,   52,   53,   54,   55,   56,   57,   60,   61,   62
                      63,   64,   65,   66,   67,   70,   71,   72,   73,   74,   75,   76,   77
        100  BITBL     0
          6  NBITS     0,    1,    2,    3,    4,    5,    6,    7,   10,   11,   12,   13,   14,   15,   16,   17,   20
                      21,   22,   23,   24,   25,   26,   27,   30,   31,   32,   33,   34,   35,   36,   37,   40,   41
                      42,   43,   44,   45,   46,   47,   50,   51,   52,   53,   54,   55,   56,   57,   60,   61,   62
                      63,   64,   65,   66,   67,   70,   71,   72,   73,   74,   75,   76,   77
          0  TABLE     0,    1,    2,    3,    4,    5,    6,    7,   10,   11,   12,   13,   14,   15,   16,   17,   20
                      21,   22,   23,   24,   25,   26,   27,   30,   31,   32,   33,   34,   35,   36,   37,   40,   41
                      42,   43,   44,   45,   46,   47,   50,   51,   52,   53,   54,   55,   56,   57,   60,   61,   62
                      63,   64,   65,   66,   67,   70,   71,   72,   73,   74,   75,   76,   77,  100
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            BCRFUL., BCLFUL., FULBCD.- 6 TO 12 BIT CONVERSION.                                  PAGE 1     
                           PETER R. BOS --- AUGUST 1967                             
                  
                                     PCC     ON 
                                     NOLNK
                       00000         ENTRY   BCRFUL        CONVERT RIGHT HALF BCD TO 12 BIT.    
                       00002         ENTRY   BCLFUL        CONVERT LEFT HALF BCD TO 12 BIT.     
                       00015         ENTRY   FULBCD        CONVERT 12 BIT TO BCD.   
                                     LBL     BCRFUL   
                                     PCC     OFF
                  
                  
                                             $BDRFUL  
                  
      00000 -0625 00 0 00026  BCRFUL STL     RQL           SET FLAG FOR RIGHT HALF. 
      00001  0020 00 0 00003         TRA     *+2           SKIP.  
                  
                  
                                             $BCLFUL  
                  
      00002  0600 00 0 00026  BCLFUL STZ     RQL           SET FLAG FOR LEFT HALF.  
                  
      00003  0560 60 4 00001         LDQ*    1,4           PICK UP BCD WORD.  
      00004  0520 00 0 00026         ZET     RQL           IF RIGHT HALF,     
      00005 -0773 00 0 00022         RQL     18            SHIFT TOWARD AC.   
      00006 -0754 00 0 00000         ZAC                   CLEAR AC.    
      00007 -0763 00 0 00006         LGL     6             CONVERT.     
      00010  0767 00 0 00006         ALS     6             ..     
      00011 -0763 00 0 00006         LGL     6             ..     
      00012  0767 00 0 00006         ALS     6             ..     
      00013 -0763 00 0 00006         LGL     6             ..     
                  
      00014  0020 00 4 00002         TRA     2,4           RETURN RESULT IN AC.     
                  
                  
                                             $FULBCD  
                  
      00015  0560 60 4 00001  FULBCD LDQ*    1,4           PICK UP 12 BIT WORD.     
      00016 -0754 00 0 00000         ZAC                   CLEAR AC.    
      00017 -0773 00 0 00006         RQL     6             CONVERT.     
      00020 -0763 00 0 00006         LGL     6             ..     
      00021 -0773 00 0 00006         RQL     6             ..     
      00022 -0763 00 0 00006         LGL     6             ..     
      00023 -0773 00 0 00006         RQL     6             ..     
      00024 -0763 00 0 00006         LGL     6             ..     
                  
      00025  0020 00 4 00002         TRA     2,4           RETURN RESULT IN AC.     
                  
                  
      00026  0 00000 0 00000  RQL    PZE  
                  
                  
                                     END  
1            BCRFUL., BCLFUL., FULBCD.- 6 TO 12 BIT CONVERSION.                                  PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         27 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         26    RQL     0,    2,    4
          2 BCLFUL     0
          0 BCRFUL     0
         15 FULBCD     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




UFDCHK   BCD 09/20/68 0223.7    3156         00000    
1       THIS ROUTINE PRINTS THE FIRST TWO WORDS (NAME1 NAME2)                                    PAGE 1     
                  
                              * OF A USERS UFD, INCLUDING ZERO ENTRIES. IT IS USEFUL FOR  
                              * CLEANING UP A UFD.  USAGE---
                              *                    R UFDCHK -PROB PROG- 
                              * WHERE PROB PROG ARE OPTIONAL ARGUMENTS GIVING THE   
                              * FILE DIRECTORY TO BE CHECKED, IF OTHER THAN THE CURRENT   
                              * DIRECTORY.  -PROB PROG- MAY NOT BE USED UNLESS THE USER   
                              * HAS ATTACH PRIVELEGES.
                  
                  
                                     EXTERN  PRNTER,FSTATE,OPEN,RDFILE,CLOSE,UPDATE 
                                     EXTERN  FCHECK,BZEL,DEFBC,ATTNAM,GETCOM  
                                     EXTERN  GETMEM,SETMEM,ATTACH,WRFLX,CHNCOM
                  
                  
                              CNVRT  MACRO   X  
                                     TSX     DEFBC,4  
                                     PTH     X  
                                     STO     X  
                                     TSX     BZEL,4   
                                     PTH     X  
                                     STO     X  
                              CNVRT  END  
                  
                  
                  
                  
                  
        TRANSFER VECTOR 
      00000  475145632551     PRNTER
      00001  266263216325     FSTATE
      00002  464725456060     OPEN  
      00003  512426314325     RDFILE
      00004  234346622560     CLOSE 
      00005  644724216325     UPDATE
      00006  262330252342     FCHECK
      00007  227125436060     BZEL  
      00010  242526222360     DEFBC 
      00011  216363452144     ATTNAM
      00012  272563234644     GETCOM
      00013  272563442544     GETMEM
      00014  622563442544     SETMEM
      00015  216363212330     ATTACH
      00016  665126436760     WRFLX 
      00017  233045234644     CHNCOM
                  
      00020  0074 00 4 00011         TSX     ATTNAM,4      GET THE NAME OF THE CURRENT DIRECTORY
      00021  3 00002 0 00264         PTH     HOME,,2  
      00022  0074 00 4 00012         TSX     GETCOM,4      GET THE FIRST ARGUMENT   
      00023  0 00000 0 00001         PZE     1  
      00024 -0340 00 0 00360         LAS     =H SHORT 
      00025  0020 00 0 00032         TRA     SHOVER   
      00026  0020 00 0 00030         TRA     *+2
      00027  0020 00 0 00032         TRA     SHOVER   
      00030 -0625 00 0 00270         STL     INDICX   
      00031  0020 00 0 00036         TRA     SHHOME   
      00032 -0340 00 0 00266  SHOVER LAS     FENCE         IS IT THERE  
1       THIS ROUTINE PRINTS THE FIRST TWO WORDS (NAME1 NAME2)                                    PAGE 2     
                  
      00033  0020 00 0 00044         TRA     HAVARG        YES    
      00034  0020 00 0 00036         TRA     *+2           NO--JUMP TWO FORWARD     
      00035  0020 00 0 00044         TRA     HAVARG        YES.   
                  
                  
      00036  0500 00 0 00264  SHHOME CLA     HOME          PUT CURRENT DIRECTORY    
      00037  0560 00 0 00265         LDQ     HOME+1        IN PROBN PROGN     
      00040 -0603 00 0 00326         DST     PROBN    
      00041  0500 00 0 00351         CLA     =1            SET FLAG FOR NO ATTACHING
      00042  0601 00 0 00267         STO     ATTFLG   
      00043  0020 00 0 00062         TRA     SETUP         AND GO SETUP 
                  
                  
      00044  0602 00 0 00326  HAVARG SLW     PROBN         ARG1 WAS THE PROBLEM NUMBER    
      00045  0074 00 4 00012         TSX     GETCOM,4      GET THE SECOND ARGUMENT  
      00046  0 00000 0 00002         PZE     2  
      00047  0602 00 0 00327         SLW     PROGN         WHICH IS THE PROGRAMMER NO.    
      00050  0074 00 4 00015         TSX     ATTACH,4      ATTACH TO PROBN PROGN    
      00051  3 00000 0 00326         PTH     PROBN    
      00052  3 00000 0 00327         PTH     PROGN    
      00053  3 00000 0 00261         PTH     ERROR         ERROR RETURN 
      00054  0600 00 0 00267         STZ     ATTFLG        AND SET FLAG TO COME HOME LATER
                              *     
      00055  0074 00 4 00012         TSX     GETCOM,4      CHECK FOR SHORT MODE     
      00056  0 00000 0 00003         PZE     3  
      00057 -0340 00 0 00360         LAS     =H SHORT 
      00060  0020 00 0 00062         TRA     SETUP    
      00061 -0625 00 0 00270         STL     INDICX   
                  
                  
      00062  0074 00 4 00005  SETUP  TSX     UPDATE,4      MAKE SURE UFD IS UP-TO-DATE    
      00063  0074 00 4 00001         TSX     FSTATE,4      GET THE LENGTH OF THE UFD
      00064  3 00000 0 00344         PTH     UFD
      00065  3 00000 0 00345         PTH     FILE     
      00066  3 00010 0 00334         PTH     A,,8     
      00067  3 00000 0 00261         PTH     ERROR    
      00070  0500 00 0 00334         CLA     A             GET NUMBER OF WORDS
      00071  0767 00 0 00022         ALS     18 
      00072  0622 00 0 00115         STD     LOC           COUNT FOR 'RDFILE' 
      00073  0074 00 4 00013         TSX     GETMEM,4      MAKE ROOM TO LOAD THE U.F.D.   
      00074  0621 00 0 00115         STA     LOC           BEGINNING FOR 'RDFILE'   
      00075  0621 00 0 00146         STA     NAME1         AND BASE OF THE SEARCH   
      00076  0400 00 0 00351         ADD     =1            UP ONE FOR SECOND NAME SEARCH  
      00077  0621 00 0 00144         STA     LOOP     
      00100  0400 00 0 00334         ADD     A             ADD IN UFD SIZE    
      00101  0074 00 4 00014         TSX     SETMEM,4      AND TACK DOWN MEMORY HERE
      00102  0074 00 4 00002         TSX     OPEN,4        OPEN THE UFD TO READ     
      00103  3 00000 0 00346         PTH     R  
      00104  3 00000 0 00344         PTH     UFD
      00105  3 00000 0 00345         PTH     FILE     
      00106  3 00000 0 00350         PTH     =0 
      00107  3 00000 0 00350         PTH     =0 
      00110  3 00000 0 00261         PTH     ERROR    
      00111  0074 00 4 00003         TSX     RDFILE,4      READ THE ENTIRE FILE     
      00112  3 00000 0 00344         PTH     UFD
      00113  3 00000 0 00345         PTH     FILE     
1       THIS ROUTINE PRINTS THE FIRST TWO WORDS (NAME1 NAME2)                                    PAGE 3     
                  
      00114  3 00000 0 00352         PTH     =4            STARTING AT WORD 4 
      00115  3 00000 0 00000  LOC    PTH     **,,**        FILLED IN ABOVE    
      00116  3 00000 0 00121         PTH     *+3           FOR END OF FILE    
      00117  3 00000 0 00347         PTH     CNT           NUMBER OF WORDS READ     
      00120  3 00000 0 00261         PTH     ERROR    
      00121  0074 00 4 00006         TSX     FCHECK,4      FINISH UP THE INPUT
      00122  3 00000 0 00344         PTH     UFD
      00123  3 00000 0 00345         PTH     FILE     
      00124  3 00000 0 00125         PTH     *+1
      00125  0074 00 4 00004         TSX     CLOSE,4       AND CLOSE THE FILE 
      00126  3 00000 0 00344         PTH     UFD
      00127  3 00000 0 00345         PTH     FILE     
      00130  0534 00 1 00347         LXA     CNT,1         LOAD THE TOTAL COUNT     
      00131 -0636 00 1 00163         SCD     CKLOOP,1      TO STOP THE LOOP   
      00132  0560 00 0 00334         LDQ     A             GET THE NUMBER OF WORDS  
      00133 -0754 00 0 00000         ZAC  
      00134  0221 00 0 00353         DVP     =7            DIVIDED BY WORDS PER ENTRY     
      00135 -0600 00 0 00301         STQ     SLOTS         AND STORE NUMBER OF SLOTS
      00136  0520 00 0 00270         ZET     INDICX        CHECK FOR SHORT MODE     
      00137  0020 00 0 00142         TRA     *+3           YES, BYPASS PRINTING THE HEADER
      00140  0074 00 4 00016         TSX     WRFLX,4       PRINT THE HEADING  
      00141  0 00012 0 00322         PZE     HEAD,,10 
      00142  0774 00 1 00000         AXT     0,1           ENPTY SLOT COUNTER 
      00143  0774 00 2 00000         AXT     0,2           WORD POINTER 
                  
                  
                  
      00144 -0500 00 2 00000  LOOP   CAL     **,2          GET NAME2    
      00145  0602 00 0 00273         SLW     OUT+2         INTO THE OUTPUT MESSAGE  
      00146 -0500 00 2 00000  NAME1  CAL     **,2          GET NAME1    
      00147  0602 00 0 00271         SLW     OUT           INTO THE MESSAGE   
      00150 -0100 00 0 00152         TNZ     *+2           JUMP IF NOT ZERO   
      00151  1 00001 1 00152         TXI     *+1,1,1       IF ZERO, INCREMENT THE EMPLTY SLOT CTR.    
                  
      00152  0520 00 0 00270         ZET     INDICX        ARE WE IN SHORT MODE     
      00153  0020 00 0 00162         TRA     CKLUP         YES, JUMP AHEAD    
      00154 -0100 00 0 00160         TNZ     NOTZRO        NOPE, PRINT FILE NAME IF NON-ZERO    
                  
      00155  0074 00 4 00016         TSX     WRFLX,4       WRITE A '0' FOR NO FILE HERE   
      00156  0 00001 0 00356         PZE     =H0     ,,1   ..     
      00157  0020 00 0 00162         TRA     CKLUP    
                  
                  
      00160  0074 00 4 00016  NOTZRO TSX     WRFLX,4       PRINT THE ENTRY    
      00161  0 00003 0 00271         PZE     OUT,,3   
      00162  1 77771 2 00163  CKLUP  TXI     *+1,2,-7      MOVE DOWN THE UFD  
      00163  3 00000 2 00144  CKLOOP TXH     LOOP,2,**     DO THE ENTIRE TABLE
                  
                  
      00164  0754 00 1 00000         PXA     ,1            EMPTY COUNT  
      00165  0601 00 0 00274         STO     EMPTY    
      00166  0131 00 0 00000         XCA  
      00167  0200 00 0 00353         MPY     =7 
      00170 -0600 00 0 00304         STQ     EMPTWD        WASTED WORDS 
      00171  0560 00 0 00334         LDQ     A  
      00172 -0754 00 0 00000         ZAC                   NUMBER OF WORDS IN UFD   
1       THIS ROUTINE PRINTS THE FIRST TWO WORDS (NAME1 NAME2)                                    PAGE 4     
                  
      00173  0221 00 0 00355         DVP     =432          DIVIDED BY RECORD SIZE   
      00174  0601 00 0 00315         STO     ODD           REMAINDER=WORDS IN ODD REC.    
      00175  0100 00 0 00201         TZE     *+4           GET NUMBER OF RECORDS USED     
      00176  0131 00 0 00000         XCA  
      00177  0400 00 0 00351         ADD     =1 
      00200  0131 00 0 00000         XCA  
      00201 -0600 00 0 00310         STQ     RECS     
      00202                          CNVRT   ODD           CONVERT THESE FOR PRINTING     
      00210                          CNVRT   EMPTY    
      00216                          CNVRT   EMPTWD   
      00224                          CNVRT   SLOTS    
      00232                          CNVRT   RECS     
      00240  0074 00 4 00016         TSX     WRFLX,4       AND PRINT THE SUMMARY INFO     
      00241  0 00000 0 00000         PZE     0             THAT WAS A CARRIAGE RETURN     
      00242  0074 00 4 00016         TSX     WRFLX,4  
      00243  0 00010 0 00274         PZE     EMPTY,,8 
      00244  0074 00 4 00016         TSX     WRFLX,4  
      00245  0 00004 0 00304         PZE     EMPTWD,,4
      00246  0074 00 4 00016         TSX     WRFLX,4  
      00247  0 00012 0 00310         PZE     RECS,,10 
      00250  0074 00 4 00016         TSX     WRFLX,4  
      00251  0 00001 0 00357         PZE     =H*     ,,1   AND A '*' FOR GOOD LUCK  
      00252  0500 00 0 00267  LEAVE  CLA     ATTFLG        CHECK THE ATTACH FLAG    
      00253 -0100 00 0 00257         TNZ     ATHOME        NO ATTACH HEEDED   
      00254  0074 00 4 00015         TSX     ATTACH,4      GO HOME
      00255  3 00000 0 00264         PTH     HOME     
      00256  3 00000 0 00265         PTH     HOME+1   
      00257  0074 00 4 00017  ATHOME TSX     CHNCOM,4      EXIT   
      00260  3 00000 0 00350         PTH     =0 
      00261  0074 00 4 00000  ERROR  TSX     PRNTER,4      PRINT ANY ERRORS   
      00262  3 00000 0 00354         PTH     =0375    
      00263  0020 00 0 00252         TRA     LEAVE         AND EXIT     
                  
                  
                                             * * * * * * * * * * * * *  
                                             * STORAGE AND CONSTANTS *  
                                             * * * * * * * * * * * * *  
                  
                  
      00264                   HOME   BSS     2  
      00266 -377777777777     FENCE  OCT     777777777777   
      00267                   ATTFLG BSS     1  
      00270  0 00000 0 00000  INDICX PZE     0             SHORT MODE INDICATOR (ORIG. ZERO)    
      00271                   OUT    BSS     1  
      00272 -205757575757            OCT     605757575757   
      00273                          BSS     1  
      00274  000000000000     EMPTY  BCI     4,000000 EMPTY SLOTS OUT O 
      00275  602544476370     
      00276  606243466362     
      00277  604664636046     
      00300 +265757575757            OCT     265757575757   
      00301  000000000000     SLOTS  BCI     3,000000 SLOTS TOTAL 
      00302  606243466362     
      00303  606346632143     
      00304  000000000000     EMPTWD BCI     4,000000 TOTAL EMPTY WORDS 
      00305  606346632143     
1       THIS ROUTINE PRINTS THE FIRST TWO WORDS (NAME1 NAME2)                                    PAGE 5     
                  
      00306  602544476370     
      00307  606646512462     
      00310  000000000000     RECS   BCI     4,000000 RECORDS IN U.F.D. 
      00311  605125234651     
      00312  246260314560     
      00313  643326332433     
      00314 -335757575757            OCT     735757575757   
      00315  000000000000     ODD    BCI     5,000000 WORDS IN LAST RECORD    
      00316  606646512462     
      00317  603145604321     
      00320  626360512523     
      00321  465124606060     
      00322 -155757575757     HEAD   OCT     555757575757   
      00323  643326332433            BCI     2,U.F.D. CHECK 
      00324  602330252342     
      00325 -204645575757            OCT     604645575757   
      00326                   PROBN  BSS     1  
      00327                   PROGN  BSS     1  
      00330 -155557575757            OCT     555557575757   
      00331  604521442501            BCI     2, NAME1  NAME 
      00332  606045214425     
      00333 +025557575757            OCT     025557575757   
      00334                   A      BSS     8  
      00344  643326332433     UFD    BCI     1,U.F.D. 
      00345  742631432534     FILE   BCI     1,(FILE) 
      00346  516060606060     R      BCI     1,R
      00347                   CNT    BSS     1  
                                     END  
                  
        LITERALS  
      00350  000000000000     
      00351  000000000001     
      00352  000000000004     
      00353  000000000007     
      00354  000000000567     
      00355  000000000660     
      00356  006060606060     
      00357  546060606060     
      00360  606230465163     
1       THIS ROUTINE PRINTS THE FIRST TWO WORDS (NAME1 NAME2)                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        361 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        334      A    66,   70,  100,  132,  171
        346      R   103
        347    CNT   117,  130
        115    LOC    72,   74
        315    ODD   174,  203,  204,  206,  207
        271    OUT   145,  147,  161
        344    UFD    64,  104,  112,  122,  126
          7   BZEL   205,  213,  221,  227,  235
        345   FILE    65,  105,  113,  123,  127
        322   HEAD   141
        264   HOME    21,   36,   37,  255,  256
        144   LOOP    77,  163
          2   OPEN   102
        310   RECS   201,  233,  234,  236,  237,  247
        162  CKLUP   153,  157
          4  CLOSE   125
         10  DEFBC   202,  210,  216,  224,  232
        274  EMPTY   165,  211,  212,  214,  215,  243
        261  ERROR    53,   67,  110,  120
        266  FENCE    32
        252  LEAVE   263
        146  NAME1    75
        326  PROBN    40,   44,   51
        327  PROGN    47,   52
         62  SETUP    43,   60
        301  SLOTS   135,  225,  226,  230,  231
         16  WRFLX   140,  155,  160,  240,  242,  244,  246,  250
        257 ATHOME   253
         15 ATTACH    50,  254
        267 ATTFLG    42,   54,  252
         11 ATTNAM    20
         17 CHNCOM   257
        163 CKLOOP   131
        304 EMPTWD   170,  217,  220,  222,  223,  245
          6 FCHECK   121
          1 FSTATE    63
         12 GETCOM    22,   45,   55
         13 GETMEM    73
         44 HAVARG    33,   35
        270 INDICX    30,   61,  136,  152
        160 NOTZRO   154
          0 PRNTER   261
          3 RDFILE   111
         14 SETMEM   101
         36 SHHOME    31
         32 SHOVER    25,   27
          5 UPDATE    62
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




UASCAN   BCD 10/12/70 1517.9   16094         00000    
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 1     
                  
                  
                                             WRITTEN BY JIM BIXBY  4-26-68    
                  
                                             CMPAR MACRO    
                  
                              CMPAR  MACRO   TSTWRD,FILWRD,FLAG,YES,NO  
                                     TSX     CMPARE,4 
                                     PTH     TSTWRD   
                                     PTH     FILWRD   
                                     PTH     FLAG     
                                     PTH     YES
                                     PTH     NO 
                              CMPAR  END  
                  
                  
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 2     
                           PROCESS THE ARGUMENT STRING                              
                  
                  
                  
        TRANSFER VECTOR 
      00000  622563225142     SETBRK
      00001  272563234362     GETCLS
      00002  665126436760     WRFLX 
      00003  233045234644     CHNCOM
      00004  272563634460     GETTM 
      00005  434164626360     LJUST 
      00006  512547514622     REPROB
      00007  227125436060     BZEL  
      00010  222324252360     BCDEC 
      00011  222346236360     BCOCT 
      00012  712543606060     ZEL   
      00013  462626606060     OFF   
      00014  626247514563     SSPRNT
      00015  462626464560     OFFON 
      00016  216363452144     ATTNAM
      00017  216363212330     ATTACH
      00020  272563442544     GETMEM
      00021  622563442544     SETMEM
      00022  222646472545     BFOPEN
      00023  222651252124     BFREAD
      00024  242526222360     DEFBC 
      00025  227105076060     BZ57  
      00026  452144216242     NAMASK
      00027  665126436721     WRFLXA
      00030  222623434662     BFCLOS
      00031  222623462425     BFCODE
      00032  234346622560     CLOSE 
      00033  452567234644     NEXCOM
                  
      00034  0074 00 4 00000         TSX     $SETBRK,4     ARGUMENT PROCESSING EXIT 
      00035  0 00000 0 01273         PZE     LEAVE    
                  
      00036  0760 00 0 00016         LMTM                  WE NEED NORE 
      00037 -0774 00 3 00001         AXC     1,3           ARGUMENT COUNTER   
                  
      00040  0074 00 4 00001         TSX     $GETCLS,4     LOAD THE BUFFER FOR PRINTING   
      00041  0 00000 0 01651         PZE     ARGBUF,,0
                  
      00042 -0500 00 0 01652         CAL     ARGBUF+1      TEST FIRST ARG. FOR A FENCE    
      00043  0322 00 0 01411         ERA     FENCE         ..     
      00044 -0100 00 0 00063         TNZ     NOFENC        SKIP IF NO FENCE   
      00045  0074 00 4 00002         TSX     $WRFLX,4      PRINT OUT OPTIONS  
      00046  0 00012 0 01541         PZE     FMESS1,,10     
      00047  0074 00 4 00002         TSX     WRFLX,4  
      00050  0 00012 0 01553         PZE     FMESS2,,10     
      00051  0074 00 4 00002         TSX     WRFLX,4  
      00052  0 00012 0 01565         PZE     FMESS3,,10     
      00053  0074 00 4 00002         TSX     WRFLX,4  
      00054  0 00012 0 01577         PZE     FMESS4,,10     
      00055  0074 00 4 00002         TSX     WRFLX,4  
      00056  0 00012 0 01611         PZE     FMESS5,,10     
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 3     
                           PROCESS THE ARGUMENT STRING                              
                  
      00057  0074 00 4 00002         TSX     WRFLX,4  
      00060  0 00012 0 01623         PZE     FMESS6,,10     
      00061  0074 00 4 00003         TSX     $CHNCOM,4
      00062  0 00000 0 00000         PZE     0  
                  
                       00063  NOFENC SYN     *  
                  
      00063  0074 00 4 00004         TSX     $GETTM,4      FOR A LATER MESSAGE
      00064  3 00000 0 01643         PTH     DATE     
      00065  3 00000 0 01644         PTH     TIME     
      00066  0074 00 4 00002         TSX     $WRFLX,4      GIVE A CARRIAGE RETURN   
      00067  3 00000 0 00000         PTH     ,,0
                  
                  
                                             PROCESS THE ARGUMENTS --   
                  
                  
      00070  0600 00 0 01374         STZ     SPECFL        FLAG FOR (----) ARGUMENTS
      00071  0600 00 0 01372         STZ     NOTFLG        NON-ZERO WHEN A (NOT) HAS BEEN USED  
      00072 -0500 00 3 01651  NXTARG CAL     ARGBUF,3      GET NEXT ARGUMENT  
      00073  0602 00 0 01407         SLW     ARG           ..     
      00074  0322 00 0 01411         ERA     FENCE         IS IT THERE--
      00075  0100 00 0 00404         TZE     ARGFIN        NO--FINISH ARG PROCESSING
      00076  0520 00 0 01374         ZET     SPECFL        ARE WE WORKING ON A () ARG--   
      00077  0020 00 2 00001         TRA     1,2           YES--GO TO THE PROPER ROUTINE  
      00100 -0500 00 0 01407         CAL     ARG           NO-- IT IS PROB, PROG, NAME, OR ()   
      00101 -0320 00 0 02055         ANA     =O77          SAVE LAST CHARACTER
      00102  0322 00 0 01410         ERA     RPAREN        IS IT XXXXXX)--    
      00103  0100 00 0 00141         TZE     SPECL         YES -- TREAT IT AS (XXXX)
                  
                                             NOW WE ASSUME THE ARG IS   
                                             PROB, PROG, OR NAME  
                  
      00104                   PRPGNM CMPAR   =HCMFL**,ARG,=1,PRGARG,*+1 
      00112 -0500 00 0 01407         CAL     ARG           GET    
      00113 -0320 00 0 02055         ANA     =O77          LAST CHARACTER OF ARG    
      00114 -0340 00 0 02054         LAS     =9            IS IT A NUMBER     
      00115  0020 00 0 00120         TRA     *+3           NO-THIS MUST BE A NAME   
      00116  0020 00 0 00130         TRA     PRBPRG        YES, PROBLEM NUMBER
      00117  0020 00 0 00130         TRA     PRBPRG          OR PROGRAMMER NUMBER   
                  
                                             HERE IF THE ARG IS A NAME  
                  
      00120  0074 00 4 00005  NAMARG TSX     $LJUST,4      MOVE IT OVER 
      00121  3 00000 0 01407         PTH     ARG           ..     
      00122  0601 00 0 01423         STO     NAME          AND SAVE IT  
      00123  0500 00 0 02051         CLA     =1 
      00124  0520 00 0 01372         ZET     NOTFLG        ..     
      00125 -0760 00 0 00003         SSM  
      00126  0601 00 0 01350         STO     FNAME    
      00127  0020 00 0 00163         TRA     CLRBAK   
                  
                                             HERE IF THE ARG IS A PROG OR PROB
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 4     
                           PROCESS THE ARGUMENT STRING                              
                  
      00130  0074 00 4 00005  PRBPRG TSX     $LJUST,4      LEFT JUSTIFY 
      00131  3 00000 0 01407         PTH     ARG
      00132  0131 00 0 00000         XCA                   MOVE TO MQ   
      00133 -0754 00 0 00000         ZAC  
      00134 -0763 00 0 00006         LGL     6             GET LEFT CHAR
      00135 -0340 00 0 02054         LAS     =9            IS IT A NUMBER     
      00136  0020 00 0 00205         TRA     PRBARG        NO--MUST BE A PROBLEM NUMBER   
      00137  0020 00 0 00215         TRA     PRGARG        YES--IT IS A PROGRAMMER NUMBER 
      00140  0020 00 0 00215         TRA     PRGARG   
                  
                                             SPECIAL ARGUMENT PROCESSORS
                  
                  
                                             HERE TO PROCESS FIRST OCCURRENCE OF (XXX)    
                  
      00141 -0625 00 0 01374  SPECL  STL     SPECFL        SET THE FLAG 
      00142  0774 00 1 00077         AXT     ARGSIZ,1      SET UP TO SEARCH THE TABLE     
      00143 -0500 00 0 01407         CAL     ARG           PICK UP THE ARG    
      00144 -0340 00 1 02050         LAS     ARGTBL+ARGSIZ,1 COMPARE WITH NEXT ENTRY
      00145  0020 00 0 00147         TRA     *+2           NO     
      00146  0020 00 1 02051         TRA     ARGTBL+ARGSIZ+1,1 YES--WE FOUND IT     
      00147  2 00003 1 00144         TIX     *-3,1,3       SEARCH ENTIRE TABLE
      00150  0020 00 0 01270         TRA     BADARG        NOT FOUND--ERROR   
                  
                  
                                             BELOW ARE THE SMALL ROUTINE FOR EACH   
                                             SPECIAL ARGUMENT     
                  
                  
                                             (GAF) -- 
                  
      00151  0520 00 0 01372  GAFARG ZET     NOTFLG        WAS A 'NOT' GIVEN  
      00152  0020 00 0 01245         TRA     BADNOT        YES--NOT ALLOWED   
      00153 -0500 00 0 01415         CAL     GAFNM2        NEW INPUT FILE NAME2 = 'GAF'   
      00154 -0625 00 0 01400         STL     GAFFLG        SET GAF FLAG 
      00155  0602 00 0 01406         SLW     INFIL2        RECORD IT THUSLY   
      00156 -0500 00 0 01407         CAL     ARG           NAME1 GIVEN BY THE USER  
      00157  0602 00 0 01405         SLW     INFIL1        ..     
      00160 -0320 00 0 02057         ANA     =O7777   
      00161 -0501 00 0 02072         ORA     =H    00      PUT IN LEADING BLANKS    
      00162  0602 00 0 01451         SLW     SAGRP         SAVE ACCOUNTING GROUP    
      00163  0600 00 0 01372  CLRBAK STZ     NOTFLG        CLEAR THE FLAGS    
      00164  0600 00 0 01374         STZ     SPECFL   
      00165  1 77777 3 00072  INCARG TXI     NXTARG,3,-1   AND GET THE NEXT ARGUMENT
                  
                  
                                             (INPT) --
      00166  0 00000 0 00000  REM   
      00167  0520 00 0 01372  INPARG ZET     NOTFLG        WAS A NOT GIVEN    
      00170  0020 00 0 01245         TRA     BADNOT        YES--NO GOOD 
      00171 -0500 00 0 01407         CAL     ARG           GET THE FILE NAME1 
      00172  0602 00 0 01405         SLW     INFIL1        AND MAKE IT DO SOME GOOD 
      00173  0074 00 2 00165         TSX     INCARG,2      GET THE FILE NAME2 
      00174 -0500 00 0 01407         CAL     ARG           SAVE THAT TOO
      00175  0602 00 0 01406         SLW     INFIL2        ..     
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 5     
                           PROCESS THE ARGUMENT STRING                              
                  
      00176  0020 00 0 00163         TRA     CLRBAK        AND GO ROUND AGAIN 
                  
                  
                                             (NOT) -- 
                  
      00177 -0625 00 0 01372  NOTARG STL     NOTFLG        SET THE'NOT' FLAG  
      00200 -0500 00 0 01407         CAL     ARG           GET NEXT ARG 
      00201 -0320 00 0 02055         ANA     =O77          SAVE LAST CHAR     
      00202  0322 00 0 01410         ERA     RPAREN        IS IT A RIGHT PARENTHESIS--    
      00203 -0100 00 0 00104         TNZ     PRPGNM        NO--MUST BE PROB,PROG OR NAME  
      00204  0020 00 0 00141         TRA     SPECL         YES--LOOK UP IN ARG TABLE
                  
                  
                                             (PROB) --
                  
      00205  0074 00 4 00006  PRBARG TSX     $REPROB,4     PUT ARG IN PROBLEM NUMBER FORMAT     
      00206  3 00000 0 01407         PTH     ARG           ..     
      00207  0601 00 0 01424         STO     PROB     
      00210  0500 00 0 02051         CLA     =1            SET THE SEARCH FLAG
      00211  0520 00 0 01372         ZET     NOTFLG        FLAG = NEG IF (NOT) USED 
      00212 -0760 00 0 00003         SSM  
      00213  0601 00 0 01351         STO     FPROB         SEARCH FLAG  
      00214  0020 00 0 00163         TRA     CLRBAK        BACK FOR MORE
                  
                  
                                             (PROG) --
                  
      00215 -0500 00 0 01407  PRGARG CAL     ARG           SAVE THE ARG 
      00216  0602 00 0 01425         SLW     PROG     
      00217  0500 00 0 02051         CLA     =1            AND SET THE SEARCH FLG   
      00220  0520 00 0 01372         ZET     NOTFLG   
      00221 -0760 00 0 00003         SSM  
      00222  0601 00 0 01352         STO     FPROG    
      00223  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                                             (FULL) --
                  
      00224  0520 00 0 01372  FULARG ZET     NOTFLG        IS (NOT) BEFORE THIS     
      00225  0020 00 0 01245         TRA     BADNOT        YES--ERROR   
      00226 -0625 00 0 01375         STL     FULFLG        SET FULL PRINT FLAG
      00227  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                                             (CUT) -- 
                  
      00230  0074 00 4 00007  CUTARG TSX     $BZEL,4       GET ARG (MMDDYY)   
      00231  3 00000 0 01407         PTH     ARG           ..     
      00232  0131 00 0 00000         XCA                   NOW IN MQ    
      00233 -0773 00 0 00030         RQL     24            NOW ITS YYMMDD     
      00234 -0600 00 0 01433         STQ     DATEF         SAVE FOR SEARCH    
      00235  0500 00 0 02051         CLA     =1            SET THE FLAG 
      00236  0520 00 0 01372         ZET     NOTFLG        NEG IF (NOT) SPECIFIED   
      00237 -0760 00 0 00003         SSM  
      00240  0601 00 0 01370         STO     FDATEF   
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 6     
                           PROCESS THE ARGUMENT STRING                              
                  
      00241  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                                             (DEV) -- 
                  
      00242  0074 00 4 00010  DEVARG TSX     $BCDEC,4      CONVERT DEVICE TO DEC    
      00243  3 00000 0 01407         PTH     ARG
      00244  0100 00 0 01260         TZE     BADDEV        NO SUCH THING
      00245  0737 00 1 00000         PAC     ,1            SET THE RIGHT FLAG 
      00246  0402 00 0 02052         SUB     =4            AFTER MORE CHECKING
      00247  0120 00 0 01260         TPL     BADDEV        MUST BE 1,2,OR 3   
      00250  0500 00 0 02065         CLA     =-1           CONSTRUCT THE FLAG 
      00251  0520 00 0 01372         ZET     NOTFLG   
      00252  0760 00 0 00003         SSP  
      00253  0601 00 1 01357         STO     FDRUM-1,1     POP--IN IT GOES    
      00254  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                                             (NAME) --
                  
                  
                  
                                             (SHFT) --
                  
      00255  0074 00 4 00010  SFTARG TSX     $BCDEC,4      CONVERT ARG TO A SHIFT NUM     
      00256  3 00000 0 01407         PTH     ARG
      00257  0100 00 0 01265         TZE     BADSFT        NO ZERO SHIFT
      00260  0737 00 1 00000         PAC     ,1            PLOT THE FLAG INTO THE RIGHT SLOT    
      00261  0402 00 0 02053         SUB     =6 
      00262  0120 00 0 01265         TPL     BADSFT        AS LONG AS IT EXISTS     
      00263  0500 00 0 02065         CLA     =-1           CONSTRUCT FLAG     
      00264  0520 00 0 01372         ZET     NOTFLG   
      00265  0760 00 0 00003         SSP  
      00266  0601 00 1 01362         STO     FT1-1,1  
      00267  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                                             (PSWD) --
                  
      00270  0520 00 0 01372  PSWARG ZET     NOTFLG        (NOT) OPTION NOT ALLOWED 
      00271  0020 00 0 01245         TRA     BADNOT   
      00272 -0625 00 0 01376         STL     PSWFLG        SET THE PASSWORD PRINT FLAG    
      00273  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                  
                                             (RCOD) --
                  
      00274  0500 00 0 02051  RCDARG CLA     =1            SET THE SEARCH FLAG
      00275  0520 00 0 01372         ZET     NOTFLG   
      00276 -0760 00 0 00003         SSM  
      00277  0601 00 0 01356         STO     FRCODE   
      00300  0074 00 4 00011         TSX     $BCOCT,4      AND CONVERT THE CODE TO OCTAL  
      00301  0 00000 0 01407         PZE     ARG
      00302  0601 00 0 01431         STO     RCODE         SAVE IT
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 7     
                           PROCESS THE ARGUMENT STRING                              
                  
      00303  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                                             (OFFN) --
                  
      00304 -0625 00 0 01373  OFNARG STL     OFNFLG        SET THE OFFON FLAG 
                  
                  
                                             (OFF) -- 
                  
      00305  0520 00 0 01372  OFFARG ZET     NOTFLG        (NOT) NOT ALLOWED HERE   
      00306  0020 00 0 01245         TRA     BADNOT   
      00307 -0500 00 0 01407         CAL     ARG           GET ARG
      00310  0602 00 0 01401         SLW     OUTNM1        AS OUTPUT FILE NAME1     
      00311  0074 00 2 00165         TSX     INCARG,2      GET NEXT ARG 
      00312 -0500 00 0 01407         CAL     ARG           AS OUTPUT NAME2    
      00313  0602 00 0 01402         SLW     OUTNM2   
      00314  0020 00 0 00163         TRA     CLRBAK        OUTNM1 ACTS AS THE FLAG HERE   
                  
                  
                                             (PGRP) --
                  
      00315 -0500 00 0 01407  PGPARG CAL     ARG
      00316  0602 00 0 01426         SLW     PARTY         STORE THE DESIRED PARTY GROUP  
      00317  0500 00 0 02051         CLA     =1            SET FLAG     
      00320  0520 00 0 01372         ZET     NOTFLG   
      00321 -0760 00 0 00003         SSM  
      00322  0601 00 0 01353         STO     FPARTY   
      00323  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                                             (UGRP) --
                  
      00324  0560 00 0 01407  UGPARG LDQ     ARG           BECAUSE ITS THIS WAY IN THE FILE     
      00325 -0773 00 0 00006         RQL     6               THAT WE DO THIS..
      00326 -0600 00 0 01430         STQ     UNIT          SAVE THE UNIT GROUP
      00327  0500 00 0 02051         CLA     =1            SET FLAG     
      00330  0520 00 0 01372         ZET     NOTFLG   
      00331 -0760 00 0 00003         SSM  
      00332  0601 00 0 01355         STO     FUNIT    
      00333  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                                             (AGRP) --
                  
      00334  0074 00 4 00012  AGPARG TSX     $ZEL,4        GET THE ACCOUNTING GROUP 
      00335  3 00000 0 01407         PTH     ARG           WITH LEADING ZEROES
      00336  0601 00 0 01412         STO     TEMP          ..     
      00337 -0500 00 0 01412         CAL     TEMP     
      00340  0767 00 0 00006         ALS     6             PUT IN RIGHT SPOT  
      00341 -0501 00 0 01420         ORA     AGMSK2        PUT IN LEADING 'GRP'     
      00342  0602 00 0 01434         SLW     AGRP     
      00343  0500 00 0 02051         CLA     =1            AND SET FLAG 
      00344  0520 00 0 01372         ZET     NOTFLG   
      00345 -0760 00 0 00003         SSM  
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 8     
                           PROCESS THE ARGUMENT STRING                              
                  
      00346  0601 00 0 01371         STO     FAGRP    
      00347  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                                             (UFDN) --
                  
      00350 -0500 00 0 01407  UFDARG CAL     ARG           GET THE UFDNAME    
      00351  0602 00 0 01427         SLW     UFDNM    
      00352  0500 00 0 02051         CLA     =1 
      00353  0520 00 0 01372         ZET     NOTFLG        AND SET FLAG 
      00354 -0760 00 0 00003         SSM  
      00355  0601 00 0 01354         STO     FUFDNM   
      00356  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                                             (ACCT) --
                  
      00357  0520 00 0 01372  ACTARG ZET     NOTFLG        (NOT) NOT ALLOWED  
      00360  0020 00 0 01245         TRA     BADNOT   
      00361 -0625 00 0 01377         STL     ACTFLG        SET FLAG FOR ACCOUNTING PRINTOUT     
      00362 -0625 00 0 01375         STL     FULFLG        AND GROUP INFORMATION    
      00363  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                                             (ATT) -- 
                  
      00364  0520 00 0 01372  ATTARG ZET     NOTFLG        (NOT) NOT ALLOWED  
      00365  0020 00 0 01245         TRA     BADNOT   
      00366 -0500 00 0 01407         CAL     ARG           FIRST ARG IS ATTACH NAME1
      00367  0602 00 0 01403         SLW     ATTNM1        ATTNM1 ACTS AS THE FLAG HERE   
      00370  0074 00 2 00165         TSX     INCARG,2      GET NEXT ARG 
      00371 -0500 00 0 01407         CAL     ARG           WHICH IS ATTACH NAME2    
      00372  0602 00 0 01404         SLW     ATTNM2   
      00373  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                                             (FLAG) --
                  
      00374  0500 00 0 02051  FLGARG CLA     =1            SET SEARCH FLAG    
      00375  0520 00 0 01372         ZET     NOTFLG   
      00376 -0760 00 0 00003         SSM  
      00377  0601 00 0 01357         STO     FFLAGS   
      00400  0074 00 4 00011         TSX     $BCOCT,4      CONVERT FLAGS TO OCT     
      00401  3 00000 0 01407         PTH     ARG
      00402  0601 00 0 01432         STO     FLAGS    
      00403  0020 00 0 00163         TRA     CLRBAK   
                  
                  
                                             HERE WHEN THE FENCE IS ENCOUNTERED IN THE    
                                             ARGUMENT STRING. FIRST WE MAKE SURE THE
                                             LAST (NOT) OR (XXXX) HAS ALL ITS NEEDED
                                             ARGUMENTS, THEN SET UP FOR ON OR OFF   
                                             LINE PRINTING. 
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 9     
                           PROCESS THE ARGUMENT STRING                              
                  
      00404  0520 00 0 01372  ARGFIN ZET     NOTFLG        UNFILLED (NOT) --  
      00405  0020 00 0 01277         TRA     WNTMOR        YES    
      00406  0520 00 0 01374         ZET     SPECFL        UNFILLED (XXXX)    
      00407  0020 00 0 01277         TRA     WNTMOR        YES    
      00410 -0520 00 0 01401         NZT     OUTNM1        WAS AN OUTPUT FILE SPECIFIED   
      00411  0020 00 0 00435         TRA     SETUP         NO--SET UP THE INPUT FILE
                  
                  
                                             SETUP FOR OFF LINE PRINTING
                  
      00412  0074 00 4 00013  OFFLIN TSX     $OFF,4   
      00413  3 00000 0 01401         PTH     OUTNM1   
      00414  3 00000 0 01402         PTH     OUTNM2   
                  
      00415  0074 00 4 00014         TSX     $SSPRNT,4     ALLOW INSERTION OF AN EJECT    
      00416  3 00000 0 02050         PTH     =0 
      00417  0074 00 4 00002         TSX     $WRFLX,4 
      00420  3 00005 0 01640         PTH     HIMES,,5      PUT A HELLO INTO THE FILE
      00421  0074 00 4 00014         TSX     $SSPRNT,4     AND GO BACK TO SINGLE SPACE MOVE     
      00422  3 00000 0 02051         PTH     =1 
                  
      00423  1 00001 3 00424         TXI     *+1,3,1       FUDGE ARGUMENT COUNT     
      00424 -0636 00 3 00426         SCD     *+2,3         AND INTO THE WRITE COMMAND     
      00425  0074 00 4 00002         TSX     $WRFLX,4      PUT THE ARGUMENT STRING INTO THE FILE
      00426  3 00000 0 01652         PTH     ARGBUF+1,,**   
      00427  0074 00 4 00002         TSX     $WRFLX,4      AND AN EXTRA CARRIAGE RETURN   
      00430  3 00000 0 00000         PTH     ,,0
      00431  0520 00 0 01373         ZET     OFNFLG        ON LINE ALSO--     
      00432  0074 00 4 00015         TSX     $OFFON,4      SO DO SO     
      00433  3 00000 0 01401         PTH     OUTNM1   
      00434  3 00000 0 01402         PTH     OUTNM2   
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 10    
                           SET UP THE INPUT FILE                                    
                  
      00435  0074 00 4 00000  SETUP  TSX     $SETBRK,4     MOVE THE BREAK ENTRY     
      00436  0 00000 0 01302         PZE     FILXIT        ITS HAIRIER NOW    
      00437 -0520 00 0 01403         NZT     ATTNM1        WAS AN ATTACH NAME GIVEN 
      00440  0020 00 0 00446         TRA     FILLOD        NO, GET BUFFERS    
      00441  0074 00 4 00016         TSX     $ATTNAM,4     YES, WHERE ARE WE NOW    
      00442  3 00002 0 01413         PTH     HMPROB,,2
      00443  0074 00 4 00017         TSX     $ATTACH,4     GO TO THE DIRECTORY
      00444  3 00000 0 01403         PTH     ATTNM1   
      00445  3 00000 0 01404         PTH     ATTNM2   
      00446  0074 00 4 00020  FILLOD TSX     $GETMEM,4     SET BUFFER ADDRESSES     
      00447  0621 00 0 00460         STA     BUFF1    
      00450  0400 00 0 02056         ADD     =432     
      00451  0621 00 0 00461         STA     BUFF2    
      00452  0400 00 0 02056         ADD     =432     
      00453  0074 00 4 00021         TSX     $SETMEM,4     NEW MEMORY BOUND   
      00454  0074 00 4 00022         TSX     $BFOPEN,4     OPEN THE FILE
      00455  3 00000 0 02067         PTH     =HR           FOR READING  
      00456  3 00000 0 01405         PTH     INFIL1   
      00457  3 00000 0 01406         PTH     INFIL2   
      00460  3 00000 0 00000  BUFF1  PTH     ** 
      00461  3 00000 0 00000  BUFF2  PTH     ** 
      00462  3 00000 0 02064         PTH     =-0
      00463  3 00000 0 01317         PTH     IOERR    
      00464 -0520 00 0 01403         NZT     ATTNM1        DID WE ATTACH--    
      00465  0020 00 0 00472         TRA     SEARCH        NO--BEGIN THE SEARCH AND PRINT 
      00466  0074 00 4 00017         TSX     $ATTACH,4     YES--GO HOME 
      00467  3 00000 0 01413         PTH     HMPROB   
      00470  3 00000 0 01414         PTH     HMPROG   
      00471  0600 00 0 01403         STZ     ATTNM1        AND SHOW NO MORE ATTACHING TO DO     
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 11    
                           SEARCH EACH ENTRY, AND DECIDE TO PRINT IT                
                  
      00472  0600 00 0 01701  SEARCH STZ     COUNT         ZERO THE ENTRY COUNT     
      00473  0074 00 4 01011  NXTCRD TSX     READ,4        READ THE NEXT TWO CARDS  
      00474 -0500 00 0 01463         CAL     CARD          CHECK FIRST WORD FOR ACCOUNTING GROUP
      00475 -0320 00 0 01417         ANA     AGMSK1   
      00476  0322 00 0 02063         ERA     =HGRP00  
      00477 -0100 00 0 00511         TNZ     TRYPRB        NOT GRP HEADER, TRY PROB HEADER
      00500 -0500 00 0 01464         CAL     CARD+1        MAKE SURE NEXT FIELD IS BLANK  
      00501  0322 00 0 02073         ERA     =H            CHANGE BLANKS TO ZERO    
      00502 -0100 00 0 00511         TNZ     TRYPRB        SKIP IF NOT  
      00503 -0500 00 0 01463         CAL     CARD          OTHERWISE RESET SAGRP    
      00504  0771 00 0 00006         ARS     6  
      00505 -0320 00 0 02057         ANA     =O7777   
      00506 -0501 00 0 02072         ORA     =H    00 
      00507  0602 00 0 01451         SLW     SAGRP    
      00510  0020 00 0 00745         TRA     AGRPHD        NOW TEST IF THIS IS RIGHT ONE  
      00511 -0500 00 0 01463  TRYPRB CAL     CARD          NOT A GROUP HEADER 
      00512  0322 00 0 01422         ERA     PRBMSK        IS IT A PROBLEM NUMBER HEADER  
      00513  0100 00 0 00773         TZE     PRBHED        YES    
                  
                  
                                             HERE WHEN WE HAVE THE RIGHT
                                             ACCOUNTING GROUP, PROGLEM NUMBER,
                                             AND ARE LOOKING AT A PROGRAMMER OR     
                                             COMFIL CARD    
                  
                  
      00514 -0520 00 0 01400         NZT     GAFFLG        IS THIS A GAF FILE--     
      00515  0020 00 0 00524         TRA     CHKNAM        NO--WE HAVE ALREADY CHECK PROB NO.   
      00516                          CMPAR   PROB,UGPROB,FPROB,*+2,NXTCRD     
      00524                   CHKNAM CMPAR   NAME,UNAME,FNAME,*+2,NXTCRD
      00532                          CMPAR   PROG,UPROG,FPROG,*+2,NXTCRD
      00540                          CMPAR   ZERO,UDRUM,FDRUM,*+2,NXTCRD
      00546                          CMPAR   ZERO,UDISK,FDISK,*+2,NXTCRD
      00554                          CMPAR   ZERO,UTAPE,FTAPE,*+2,NXTCRD
      00562 -0500 00 0 01463         CAL     UNAME         IS THIS A COMFIL ENTRY-- 
      00563  0322 00 0 01464         ERA     UPROG         (UPROG MUST EQUAL UNAME) 
      00564 -0100 00 0 00604         TNZ     CHKTHM        NO, DO NOTHING SPECIAL HERE    
      00565  0774 00 1 00005         AXT     5,1           YES--SEE IF TIMES WERE DESIRED 
      00566  0520 00 1 01370         ZET     FT1+5,1       CHECK THEM ALL     
      00567  0020 00 0 00473         TRA     NXTCRD        FOUND ONE--REJECT THIS ENTRY   
      00570  2 00001 1 00566         TIX     *-2,1,1       ..     
      00571  0520 00 0 01356         ZET     FRCODE        CHECKING RCODE .Q. 
      00572  0020 00 0 00473         TRA     NXTCRD        NOT FOR COMFILS WE DONT  
      00573  0520 00 0 01357         ZET     FFLAGS        CHECKING FLAGS .Q. 
      00574  0020 00 0 00473         TRA     NXTCRD        NOT FOR COMFILS WE DONT  
      00575  0520 00 0 01353         ZET     FPARTY        CHECKING PARTY GROUP .Q. 
      00576  0020 00 0 00473         TRA     NXTCRD        NOT FOR COMFILS WE DONT  
      00577  0520 00 0 01354         ZET     FUFDNM        CHECKING UFD NAME .Q.    
      00600  0020 00 0 00473         TRA     NXTCRD        NOT FOR COMFILS WE DONT  
      00601  0520 00 0 01355         ZET     FUNIT         CHECKING UNIT GROUP .Q.  
      00602  0020 00 0 00473         TRA     NXTCRD        NOT FOR COMFILS WE DONT .A.    
      00603  0020 00 0 00727         TRA     CHKCUT        BUT WE CHECK NEITHER, SO ONWARD
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 12    
                           SEARCH EACH ENTRY, AND DECIDE TO PRINT IT                
                  
                  
      00604                   CHKTHM CMPAR   PARTY,UPARTY,FPARTY,*+2,NXTCRD   
      00612                          CMPAR   UFDNM,UUFDNM,FUFDNM,*+2,NXTCRD   
      00620                          CMPAR   UNIT,UUNIT,FUNIT,*+2,NXTCRD
      00626                          CMPAR   ZERO,UT1,FT1,*+2,NXTCRD    
      00634                          CMPAR   ZERO,UT2,FT2,*+2,NXTCRD    
      00642                          CMPAR   ZERO,UT3,FT3,*+2,NXTCRD    
      00650                          CMPAR   ZERO,UT4,FT4,*+2,NXTCRD    
      00656                          CMPAR   ZERO,UT5,FT5,*+2,NXTCRD    
                  
      00664 -0520 00 0 01356         NZT     FRCODE        DO WE CHECK RCODE--
      00665  0020 00 0 00702         TRA     CHKFLG        NO     
      00666  0074 00 4 00011         TSX     $BCOCT,4      YES--CONVERT FILE RCODE TO OCTAL     
      00667  3 00000 0 01471         PTH     URCODE   
      00670  0601 00 0 01412         STO     TEMP          SAVE FOR NOW 
      00671 -0500 00 0 01412         CAL     TEMP          BACK IN LAC  
      00672 -0501 00 0 01431         ORA     RCODE         COMPARE WITH INPUT RCODE 
      00673  0322 00 0 01412         ERA     TEMP     
      00674  0100 00 0 00700         TZE     RCMTCH        THE MATCH    
      00675  0500 00 0 01356         CLA     FRCODE        THEY DONT MATCH--GET SEARCH FLAG     
      00676  0120 00 0 00473         TPL     NXTCRD        WE WANT THEM TO, SO SKIP 
      00677  0020 00 0 00702         TRA     CHKFLG        WE DONT WANT THEM TO AND THEY DONT   
      00700  0500 00 0 01356  RCMTCH CLA     FRCODE        THEY MATCH   
      00701 -0120 00 0 00473         TMI     NXTCRD        AND WE CONT WANT THEM TO 
      00702 -0520 00 0 01357  CHKFLG NZT     FFLAGS        SHALL WE CHECK FLAGS--   
      00703  0020 00 0 00727         TRA     CHKCUT        NO     
      00704 -0500 00 0 01472         CAL     UFLAGS        YES--CONVERT UFLAGS
      00705  0771 00 0 00006         ARS     6  
      00706  0602 00 0 01412         SLW     TEMP     
      00707  0074 00 4 00011         TSX     $BCOCT,4      TO OCTAL     
      00710  3 00000 0 01412         PTH     TEMP     
      00711  0601 00 0 01412         STO     TEMP     
      00712 -0500 00 0 01412         CAL     TEMP          CONVERTED UFLAGS TO LAC  
      00713 -0520 00 0 01432         NZT     FLAGS         IF FLAGS ARE ZERO  
      00714  0100 00 0 00725         TZE     FGMTCH        AND TEMP IS ZERO, THEY MATCH   
      00715 -0520 00 0 01432         NZT     FLAGS         OR IF FLAGS ARE ZERO     
      00716 -0100 00 0 00722         TNZ     FGNMTH        AND TEMP IS NON-ZERO, NO MATCH 
      00717 -0320 00 0 01432         ANA     FLAGS         OTHERWISE AND OUT PERTAINENT FLAGS   
      00720  0322 00 0 01432         ERA     FLAGS         CHECK IF THEY ARE ALL ON 
      00721  0100 00 0 00725         TZE     FGMTCH        THEY MATCH   
      00722  0500 00 0 01357  FGNMTH CLA     FFLAGS        THEY DO NOT MATCH  
      00723  0120 00 0 00473         TPL     NXTCRD        AND WE WANT THEM TO
      00724  0020 00 0 00727         TRA     CHKCUT   
      00725  0500 00 0 01357  FGMTCH CLA     FFLAGS        THEY MATCH   
      00726 -0120 00 0 00473         TMI     NXTCRD        AND WE DONT WANT THEM TO 
                  
                  
      00727 -0520 00 0 01370  CHKCUT NZT     FDATEF        SHALL WE CHECK FINISH DATE TOO--     
      00730  0020 00 0 01125         TRA     FORMAT        NO     
      00731  0560 00 0 01514         LDQ     UDATEF        MMDDYY 
      00732 -0773 00 0 00030         RQL     24            YYMMDD 
      00733 -0130 00 0 00000         XCL                   READY FOR COMPARE BOSS   
      00734 -0340 00 0 01433         LAS     DATEF         COMPARE WITH GIVEN DATE  
      00735  0020 00 0 00742         TRA     CUTNO         FILE DATE AFTER GIVEN DATE     
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 13    
                           SEARCH EACH ENTRY, AND DECIDE TO PRINT IT                
                  
      00736  0020 00 0 01125         TRA     FORMAT        SAME DATE--SELECT IT     
      00737  0500 00 0 01370         CLA     FDATEF        THE DATE IS TOO BIG
      00740  0120 00 0 01125         TPL     FORMAT        BUT THATS OK 
      00741  0020 00 0 00473         TRA     NXTCRD        NO IT WASNT  
      00742  0500 00 0 01370  CUTNO  CLA     FDATEF        THE DATE IS WRONG  
      00743 -0120 00 0 01125         TMI     FORMAT        IF THE FLAG LIKES IT     
      00744  0020 00 0 00473         TRA     NXTCRD        CUT IT MIGHT NOT   
                  
                  
                  
                                             FIND THE DESIRED ACCOUNTING GROUP ENTRY
                  
      00745                   AGRPHD CMPAR   AGRP,CARD,FAGRP,AGPYES,*+1 
      00753  0074 00 4 01011  ANEXT  TSX     READ,4        IF NOT RIGHT, FIND THE RIGHT ONE     
      00754                          CMPAR   AGMSK3,CARD,=1,AGRPHD,ANEXT
      00762 -0500 00 0 01464  AGPYES CAL     CARD+1        GOT A 'GRP** ', NOW SEE IF GRP HEADER
      00763  0322 00 0 02073         ERA     =H            NEXT WORD MUST BE BLANK  
      00764 -0100 00 0 00745         TNZ     AGRPHD        OTHERWISE, KEEP LOOKING  
      00765 -0500 00 0 01463         CAL     CARD          GOT THE CORRECT GROUP    
      00766  0771 00 0 00006         ARS     6             RIGHT JUSTIFY IT   
      00767 -0320 00 0 02057         ANA     =O7777        SAVE LAST TWO DIGITS     
      00770 -0501 00 0 02072         ORA     =H    00      PUT IN LEADING BLANKS    
      00771  0602 00 0 01451         SLW     SAGRP         SAVE THE ACCOUNTING GROUP FOR PRINT  
      00772  0020 00 0 00473         TRA     NXTCRD        AND GO ON    
                  
                  
                                             FIND THE DESIRED PROBLEM HEADER  
                  
      00773                   PRBHED CMPAR   PROB,UPROB,FPROB,PRBYES,*+1
      01001  0074 00 4 01011  PRBLUK TSX     READ,4        NOT THIS ONE,TRY ANOTHER 
      01002 -0500 00 0 01463         CAL     CARD     
      01003  0322 00 0 02070         ERA     =H*           WITH  A '*' IN COLUMN ONE
      01004 -0100 00 0 01001         TNZ     PRBLUK   
      01005  0020 00 0 00773         TRA     PRBHED   
      01006 -0500 00 0 01464  PRBYES CAL     UPROB         WE WANT THIS ONE   
      01007  0602 00 0 01416         SLW     QPROB         SAVE FOR PRINTING  
      01010  0020 00 0 00473         TRA     NXTCRD        AND SEARCH EVER ONWARD   
                  
                  
                                             SUBROUTINE READ --   
                                                 READS TWO CARDS AND HANDLES END OF FILE  
                  
      01011  0634 00 4 01041  READ   SXA     RXR4,4        EVEN LOOKS LIKE A XUBROUTINE   
      01012  0074 00 4 00023         TSX     $BFREAD,4     READ THE TWO CARDS 
      01013  3 00000 0 01405         PTH     INFIL1   
      01014  3 00000 0 01406         PTH     INFIL2   
      01015  3 00034 0 01463         PTH     CARD,,28 
      01016  3 00000 0 01043         PTH     ENDFIL        IF EOF ENCOUNTERED 
      01017  3 00000 0 01412         PTH     TEMP          NOT CONCERNED ABOUT EOF COUNT  
      01020 -0520 00 0 01400         NZT     GAFFLG        CHECK GAF FLAG     
      01021  0020 00 0 01025         TRA     *+4           NOT ON, TEST FOR NEW ACCT GROUP
      01022 -0500 00 0 01474         CAL     UGPROB   
      01023  0602 00 0 01416         SLW     QPROB         SAVE NEW PROBLEM NUMBER FOR PRINTING 
      01024  0020 00 0 01041         TRA     RXR4          EXIT FROM READ     
      01025 -0500 00 0 01463         CAL     CARD          CHECK FIRST WORD FOR NEW ACCT. GROUP 
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 14    
                           SEARCH EACH ENTRY, AND DECIDE TO PRINT IT                
                  
      01026 -0320 00 0 01417         ANA     AGMSK1        ..     
      01027  0322 00 0 01420         ERA     AGMSK2        ..     
      01030 -0100 00 0 01041         TNZ     RXR4          ..     
      01031 -0500 00 0 01464         CAL     CARD+1        MAKE SURE NEXT CARD IS EMPTY   
      01032  0322 00 0 02073         ERA     =H            ..     
      01033 -0100 00 0 01041         TNZ     RXR4          NOT REALLY A NEW GROUP   
      01034 -0500 00 0 01463         CAL     CARD          IT WAS A NEW GROUP 
      01035  0771 00 0 00006         ARS     6             SO RESET SAGRP     
      01036 -0320 00 0 02057         ANA     =O7777   
      01037 -0501 00 0 02072         ORA     =H    00 
      01040  0602 00 0 01451         SLW     SAGRP    
      01041  0774 00 4 00000  RXR4   AXT     **,4          RESTORE THAT INDEX 
      01042  0020 00 4 00001         TRA     1,4           AND RETURN   
                  
      01043 -0520 00 0 01401  ENDFIL NZT     OUTNM1        ARE WE WORKING ON AN OFFLINE FILE--  
      01044  0020 00 0 01051         TRA     LSTLNS        NO--PRINT THE LAST LINES 
      01045 -0520 00 0 01373         NZT     OFNFLG        DONT SET OFFON IF ALREADY SET  
      01046  0074 00 4 00015         TSX     $OFFON,4      YES--PRINT BOTH ON AND OFF LINE
      01047  3 00000 0 01401         PTH     OUTNM1   
      01050  3 00000 0 01402         PTH     OUTNM2   
      01051  0074 00 4 00002  LSTLNS TSX     $WRFLX,4      GIVE AN EXTRA CARRIAGE RETURN  
      01052  3 00000 0 00000         PTH     ,,0
      01053 -0520 00 0 01701         NZT     COUNT         WERE ANY ENTRIES FOUND   
      01054  0020 00 0 01073         TRA     NONE          NO--SAY SO   
      01055  0500 00 0 01701         CLA     COUNT         WAS ONLY ONE ENTRY FOUND 
      01056  0402 00 0 02051         SUB     =1            IF SO, THE CLOD CAN COUNT THEM 
      01057  0100 00 0 01070         TZE     PSTAR         HIMSELF...   
      01060  0074 00 4 00024         TSX     $DEFBC,4      CONVERT COUNT FOR PRINTING     
      01061  3 00000 0 01701         PTH     COUNT    
      01062  0601 00 0 01701         STO     COUNT    
      01063  0074 00 4 00025         TSX     $BZ57,4       ..     
      01064  3 00000 0 01701         PTH     COUNT    
      01065  0601 00 0 01701         STO     COUNT    
      01066  0074 00 4 00002         TSX     $WRFLX,4      WRITE THE NUMBER FOUND   
      01067  3 00002 0 01701         PTH     COUNT,,2 
      01070  0074 00 4 00002  PSTAR  TSX     $WRFLX,4      PRINT AN ASTERISK  
      01071  3 00001 0 02070         PTH     =H*     ,,1    
      01072  0020 00 0 01302         TRA     FILXIT        AND EAVE     
      01073  0074 00 4 00002  NONE   TSX     $WRFLX,4      PRINT NONE FOUND   
      01074  3 00005 0 01703         PTH     NOENT,,5 
      01075  0020 00 0 01070         TRA     PSTAR         AND THEN AN ASTERISK     
                  
                  
                                             SUBROUTINE CMPARE -- 
                                               CALLING SEQUENCE-- 
                                                 CMPARE.(TSTWRD,FILWRD,FLAG,YES,NO) 
                  
                                             TSTWRD -- WORD WITH EMBEDDED '*'S.     
                                             FILWRD -- COMPARED WITH TSTWRD BY THE LISTF * CONVENTION 
                                             FLAG   -- ROUTINE TRANSFERS IMMEDIATELY
                                                       WITH NO TESTING TO YES IF FLAG = 0 
                                                       ROUTINE TRANSFERS TO YES IF FLAG   
                                                       IS NONZERO AND POSITIVE AND THE    
                                                       COMPARISON IS SUCCESSFUL     
                                                       ROUTINE TRANSFERS TO YES IF  
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 15    
                           SEARCH EACH ENTRY, AND DECIDE TO PRINT IT                
                  
                                                       FLAG IS NEGATIVE AND TEST FAILS    
                                             YES   --  RETURN FOR SUCCESSFUL TEST   
                                             NO    --  RETURN FOR UNSUCCESSFUL TEST 
                  
                  
      01076  0634 00 4 01105  CMPARE SXA     CXR4,4        SAVE IT
      01077  0500 60 4 00003         CLA*    3,4           GET THE FLAG 
      01100  0100 60 4 00004         TZE*    4,4           RETURN IMMEDIATELY IF ZERO     
      01101 -0500 00 4 00001         CAL     1,4           GET THE TSTWRD     
      01102  0621 00 0 01104         STA     NACALL        ADDRESS FOR LATER  
      01103  0074 00 4 00026         TSX     $NAMASK,4     GET THE MASK 
      01104  3 00000 0 00000  NACALL PTH     **            ADDRESS OF TSTWRD  
      01105  0774 00 4 00000  CXR4   AXT     **,4          RESTORE THE INDEX  
      01106  0601 00 0 01123         STO     MASK          AND SAVE THE NAMASK
      01107 -0500 60 4 00002         CAL*    2,4           GET THE INPUT WORD 
      01110  0322 60 4 00001         ERA*    1,4           COMPARE AGAINST TSTWRD   
      01111 -0320 00 0 01123         ANA     MASK          UNDER THE NAMASK   
      01112  0602 00 0 01124         SLW     RESULT        AND SAVE RESULT    
      01113  0500 60 4 00003         CLA*    3,4           GET THE FLAG 
      01114 -0120 00 0 01120         TMI     *+4           IF YES-NO TO BE REVERSED 
      01115  0520 00 0 01124         ZET     RESULT        DID THEY MATCH     
      01116  0020 60 4 00005         TRA*    5,4           NO--RETURN TO NO   
      01117  0020 60 4 00004         TRA*    4,4           YES--RETURN TO YES 
      01120  0520 00 0 01124         ZET     RESULT        DID THEY MATCH     
      01121  0020 60 4 00004         TRA*    4,4           NO, BUT WE DONT WANT THEM TO   
      01122  0020 60 4 00005         TRA*    5,4           YES, AND WE DIDNT WANT THEM TO 
                  
      01123                   MASK   BSS     1  
      01124                   RESULT BSS     1  
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 16    
                           FORMAT THE SELECT OUTPUT AND PRINT IT                    
                  
                  
      01125  0500 00 0 01701  FORMAT CLA     COUNT         GET THE COUNT
      01126  0400 00 0 02051         ADD     =1            UPDATE IT    
      01127  0601 00 0 01701         STO     COUNT         ..     
                  
      01130  3 00000 0 01151  GATE   PTH     FORM          CHANGED TO A TXL LATER   
      01131  0074 00 4 00027         TSX     $WRFLXA,4     WRITE THE HEADINGS 
      01132  3 00006 0 01717         PTH     BASIC,,6      WE KNOW WE WANT AT LEAST THIS  
      01133  0520 00 0 01375         ZET     FULFLG        DO WE WANT MORE--  
      01134  0074 00 4 00027         TSX     $WRFLXA,4     YES--PRINT GROUP HEADINGS
      01135  3 00004 0 01725         PTH     FULHED,,4
      01136 -0500 00 0 02073         CAL     =H            GET SOME BLANKS    
      01137 -0520 00 0 01376         NZT     PSWFLG        SHALL WE PRINT PASSWORDS--     
      01140  0602 00 0 01731         SLW     PASHED        NO--BLANK OUT THAT HEADING     
      01141  0074 00 4 00002         TSX     $WRFLX,4      PRINT THE PASSWORD HEADING     
      01142  3 00001 0 01731         PTH     PASHED,,1
      01143  0520 00 0 01377         ZET     ACTFLG        WANT ALLOTMENTS--  
      01144  0074 00 4 00002         TSX     $WRFLX,4      YES--PRINT THEM    
      01145  3 00011 0 01732         PTH     ALLOTS,,9
                              $      ZET     ACTFLG        CHECK AGAIN, MISTER
                              $      TSX     $WRFLX,4      BEFORE PRINTING THE REST 
                              $      PTH     REQS,,5  
      01146  0500 00 0 01130         CLA     GATE          CLOSE THE GATE     
      01147 -0760 00 0 00003         SSM  
      01150  0601 00 0 01130         STO     GATE     
                  
                  
                                             LOAD THE INFO TO BUFFERS, AND PRINT    
                                             SOME (ALL) OF IT     
                  
      01151 -0500 00 0 01435  FORM   CAL     SPROB         GET LAST PRINTED PROB    
      01152  0322 00 0 01416         ERA     QPROB         IS IT CURRNT PROB--
      01153  0100 00 0 01156         TZE     *+3           YES, SKIP CARRIAGE RETURN
      01154  0074 00 4 00002         TSX     $WRFLX,4      NO-GIVE A CARRIAGE RETURN
      01155  3 00000 0 00000         PTH     ,,0
      01156 -0500 00 0 01416         CAL     QPROB         PLUG IN THIS PROB  
      01157  0602 00 0 01435         SLW     SPROB    
      01160 -0500 00 0 01464         CAL     UPROG    
      01161  0602 00 0 01437         SLW     SPROG    
      01162 -0500 00 0 01463         CAL     UNAME         GET THE USERS NAME 
      01163  0602 00 0 01441         SLW     SNAME    
      01164 -0500 00 0 01471         CAL     URCODE        PRETTY UP RCODE    
      01165 -0320 00 0 02060         ANA     =O777777 
      01166 -0501 00 0 02071         ORA     =H   000 
      01167  0602 00 0 01443         SLW     SRCODE   
      01170 -0500 00 0 01467         CAL     UUFDNM   
      01171  0602 00 0 01445         SLW     SUFDNM   
      01172 -0500 00 0 01463         CAL     UNAME         TEST FOR A COMMON FILE   
      01173  0322 00 0 01464         ERA     UPROG         (UPROG MUST EQUAL UNAME) 
      01174 -0100 00 0 01200         TNZ     BWRITE        NOT A COMFIL ENTRY 
      01175  0074 00 4 00002         TSX     $WRFLX,4      A COMMON FILE--WRITE     
      01176  3 00005 0 01435         PTH     SPROB,,5        AN ABBREVIATED LINE    
      01177  0020 00 0 01226         TRA     LINE2         AND SKIP REST OF THIS LINE     
      01200  0322 00 0 01437  BWRITE ERA     SPROG         IS THE UFDNAME SAME AS PROG    
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 17    
                           FORMAT THE SELECT OUTPUT AND PRINT IT                    
                  
      01201 -0100 00 0 01204         TNZ     *+3           NO     
      01202 -0500 00 0 02073         CAL     =H            YES--CHANGE TO BLANKS    
      01203  0602 00 0 01445         SLW     SUFDNM   
      01204  0074 00 4 00027         TSX     $WRFLXA,4     WRITE OUT THIS BASIC LINE
      01205  3 00012 0 01435         PTH     SPROB,,10
                  
      01206 -0520 00 0 01375         NZT     FULFLG        MORE ON THIS LINE--
      01207  0020 00 0 01220         TRA     FRPASS        NO     
                  
      01210 -0500 00 0 01470         CAL     UUNIT         YES--ASSEMBLE AND PRINT  
      01211  0602 00 0 01447         SLW     SUNIT    
      01212 -0500 00 0 01465         CAL     UPARTY   
      01213  0602 00 0 01450         SLW     SPARTY   
      01214 -0500 00 0 01472         CAL     UFLAGS   
      01215  0602 00 0 01452         SLW     SFLAGS   
      01216  0074 00 4 00027         TSX     $WRFLXA,4     FINISH PRINTING THE LINE 
      01217  3 00004 0 01447         PTH     SUNIT,,4 
      01220 -0500 00 0 01473  FRPASS CAL     UPSWD         CAREFULL NOW....   
      01221 -0520 00 0 01376         NZT     PSWFLG        SHALL WE PRINT THE PASSWORD    
      01222 -0500 00 0 02073         CAL     =H            NO--BLANK IT OUT   
      01223  0602 00 0 01453         SLW     SPSWD         AND STORE    
      01224  0074 00 4 00002         TSX     $WRFLX,4      FINISH THE FIRST OUTPUT LINE   
      01225  3 00001 0 01453         PTH     SPSWD,,1 
      01226 -0520 00 0 01377  LINE2  NZT     ACTFLG        SHALL WE PRINT ALLOTMENTS TOO  
      01227  0020 00 0 01244         TRA     FRMEND        NO     
                  
      01230 -0500 00 0 01511         CAL     UREQNO        YES--ASSEMBLE THE LINE   
      01231  0602 00 0 01454         SLW     SREQNO   
      01232 -0500 00 0 01512         CAL     UDEPT    
      01233  0602 00 0 01456         SLW     SDEPT    
      01234 -0500 00 0 01513         CAL     UDATE    
      01235  0602 00 0 01460         SLW     SDATE    
      01236 -0500 00 0 01514         CAL     UDATEF   
      01237  0602 00 0 01462         SLW     SDATEF   
      01240  0074 00 4 00027         TSX     $WRFLXA,4     PRINT THE FIRST PART OF THE LINE     
      01241  3 00001 0 02073         PTH     =H      ,,1   PRECEEDED BY A WORD OF BLANKS  
      01242  0074 00 4 00002         TSX     $WRFLX,4 
      01243  3 00010 0 01501         PTH     UDRUM,,8      FIRST THE ALLOTMENTS     
                              $      TSX     $WRFLX,4      THEN THE REST
                              $      PTH     SREQNO,,7
                  
      01244  0020 00 0 00473  FRMEND TRA     NXTCRD        BACK WE GO FOR MORE
                                                       (WILL IT NEVER END .Q.)
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 18    
                           ERROR ROUTINES                                           
                  
                  
      01245  1 00001 3 01246  BADNOT TXI     *+1,3,1       MOVE BACK ONE ARG  
      01246  0774 00 1 00003         AXT     3,1           TO GET THREE 
      01247 -0500 00 3 01651         CAL     ARGBUF,3      GET THE ARG  
      01250  0602 00 1 01640         SLW     ERRBUF+3,1    ..     
      01251  1 77777 3 01252         TXI     *+1,3,-1      MOVE TO NEXT ARG   
      01252  2 00001 1 01247         TIX     *-3,1,1       AND DO THREE 
      01253  0074 00 4 00027         TSX     $WRFLXA,4     PRINT THEM   
      01254  3 00004 0 01517         PTH     NOTMES,,4
      01255  0074 00 4 00002         TSX     $WRFLX,4 
      01256  3 00003 0 01635         PTH     ERRBUF,,3
      01257  0020 00 0 01273         TRA     LEAVE         AND EXIT     
                  
                  
                  
                  
                  
      01260  0074 00 4 00027  BADDEV TSX     $WRFLXA,4     BAD DEVICE SPECIFIED     
      01261  3 00005 0 01523         PTH     DEVMES,,5
      01262  0074 00 4 00002  PTARG  TSX     $WRFLX,4      PRINT THE OFFENTING ARG  
      01263  3 00001 0 01407         PTH     ARG,,1        ..     
      01264  0020 00 0 01273         TRA     LEAVE    
                  
                  
                  
      01265  0074 00 4 00027  BADSFT TSX     $WRFLXA,4     BAD SHIFT SPECIFIED
      01266  3 00005 0 01530         PTH     SFTMES,,5
      01267  0020 00 0 01262         TRA     PTARG    
                  
                  
                  
      01270  0074 00 4 00027  BADARG TSX     $WRFLXA,4     (XXXX) NOT IN TABLE
      01271  3 00004 0 01645         PTH     ARGMES,,4
      01272  0020 00 0 01262         TRA     PTARG    
                  
                  
                  
      01273  0074 00 4 00002  LEAVE  TSX     $WRFLX,4      EXIT QUICKLY 
      01274  3 00001 0 02070         PTH     =H*     ,,1    
      01275  0074 00 4 00003         TSX     $CHNCOM,4
      01276  0 00000 0 00000         PZE     0  
                  
                  
                  
      01277  0074 00 4 00002  WNTMOR TSX     $WRFLX,4      (NOT) OR (XXX) NEEDS MORE ARGS 
      01300  3 00004 0 01675         PTH     MORMES,,4
      01301  0020 00 0 01273         TRA     LEAVE    
                  
                  
                  
      01302 -0520 00 0 01403  FILXIT NZT     ATTNM1        WERE WE ATTACHED   
      01303  0020 00 0 01311         TRA     BCLOSE        NO     
      01304  0074 00 4 00017         TSX     $ATTACH,4     YES--GO HOME 
      01305  3 00000 0 01413         PTH     HMPROB   
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 19    
                           ERROR ROUTINES                                           
                  
      01306  3 00000 0 01414         PTH     HMPROG   
      01307  3 00000 0 01311         PTH     *+2           DONT WORRY ABOUT ERRORS  
      01310  3 00000 0 01412         PTH     TEMP          WE WONT BE HERE LONG ANYWAY    
      01311  0074 00 4 00030  BCLOSE TSX     $BFCLOS,4     CLOSE THE FILE     
      01312  3 00000 0 01405         PTH     INFIL1   
      01313  3 00000 0 01406         PTH     INFIL2   
      01314  3 00000 0 01315         PTH     *+1
      01315  0074 00 4 00003         TSX     $CHNCOM,4     AND AWAY WE GO     
      01316  0 00000 0 00000         PZE     0  
                  
                  
                  
      01317  0074 00 4 00031  IOERR  TSX     $BFCODE,4     GET THE BF ERROR CODE    
      01320  3 00000 0 01412         PTH     TEMP     
      01321 -0520 00 0 01412         NZT     TEMP          IS THE ERROR CODE ZERO-- 
      01322  0020 00 0 01334         TRA     NOTBER        YES-NOT A BF-ERROR 
      01323  0074 00 4 00024         TSX     $DEFBC,4      CONVERT THE ERROR CODE   
      01324  3 00000 0 01412         PTH     TEMP          FOR PRINTING 
      01325  0601 00 0 01412         STO     TEMP     
      01326  0074 00 4 00007         TSX     $BZEL,4  
      01327  3 00000 0 01412         PTH     TEMP     
      01330  0601 00 0 01716         STO     ERROR    
      01331  0074 00 4 00002         TSX     $WRFLX,4      PRINT THE ERROR    
      01332  3 00007 0 01710         PTH     IOMES,,7 
      01333  0020 00 0 01302         TRA     FILXIT   
                  
                                             HERE IF AN I/O ERROR OCCURRED    
                  
      01334  0074 00 4 00032  NOTBER TSX     $CLOSE,4      CLOSE THEM ALL     
      01335  3 00000 0 02061         PTH     =HALL         ..     
      01336 -0520 00 0 01403         NZT     ATTNM1        ARE WE ANYWHERE    
      01337  0020 00 0 01345         TRA     ERXIT         NOPE   
      01340  0074 00 4 00017         TSX     $ATTACH,4     YES, RETURN  
      01341  3 00000 0 01413         PTH     HMPROB   
      01342  3 00000 0 01414         PTH     HMPROG   
      01343  3 00000 0 01345         PTH     *+2
      01344  3 00000 0 01412         PTH     TEMP     
                  
      01345  0560 00 0 01411  ERXIT  LDQ     FENCE         SET UP CALL TO PRNTER    
      01346 -0500 00 0 02066         CAL     =HPRNTER      ..     
      01347  0074 00 4 00033         TSX     $NEXCOM,4     AND EXCUTE THE COMMAND   
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 20    
                           STORAGE, CONSTANTS, MESSAGES, FLAGS, AND OTHER STUFF     
                  
                  
                  
                                             * * * * * * * * *    
                                             * SEARCH FLAGS  *    
                                             * * * * * * * * *    
                  
      01350  0 00000 0 00000  FNAME  PZE  
      01351  0 00000 0 00000  FPROB  PZE  
      01352  0 00000 0 00000  FPROG  PZE  
      01353  0 00000 0 00000  FPARTY PZE  
      01354  0 00000 0 00000  FUFDNM PZE  
      01355  0 00000 0 00000  FUNIT  PZE  
      01356  0 00000 0 00000  FRCODE PZE  
      01357  0 00000 0 00000  FFLAGS PZE  
      01360  0 00000 0 00000  FDRUM  PZE  
      01361  0 00000 0 00000  FDISK  PZE  
      01362  0 00000 0 00000  FTAPE  PZE  
      01363  0 00000 0 00000  FT1    PZE  
      01364  0 00000 0 00000  FT2    PZE  
      01365  0 00000 0 00000  FT3    PZE  
      01366  0 00000 0 00000  FT4    PZE  
      01367  0 00000 0 00000  FT5    PZE  
      01370  0 00000 0 00000  FDATEF PZE  
      01371  0 00000 0 00000  FAGRP  PZE  
                  
                                             * * * * * * * *
                                             * OTHER FLAGS *
                                             * * * * * * * *
                  
      01372  0 00000 0 00000  NOTFLG PZE                   NONZERO AFTER '(NOT)'    
      01373  0 00000 0 00000  OFNFLG PZE                   NONZERO AFTER '(OFFN)    
      01374  0 00000 0 00000  SPECFL PZE                   NONZERO AFTER (XXXX)     
      01375  0 00000 0 00000  FULFLG PZE                   NONZERO TO GET FULL FIRST LINE PRINTOUT    
      01376  0 00000 0 00000  PSWFLG PZE                   NONZERO TO PRINT PASSWORDS     
      01377  0 00000 0 00000  ACTFLG PZE                   NONZERO TO PRINT SECOND LINE   
      01400  0 00000 0 00000  GAFFLG PZE                   NONZERO WHEN WORKING ON A GAF FILE   
      01401  0 00000 0 00000  OUTNM1 PZE                   FILE NAME1 FOR OFFLINE OUTPUT  
      01402  0 00000 0 00000  OUTNM2 PZE                   FILE NAME2 FOR OFFLINE OUTPUT  
      01403  0 00000 0 00000  ATTNM1 PZE                   NAME1 FOR ATTACH (ATT)   
      01404  0 00000 0 00000  ATTNM2 PZE                   NAME2 FOR ATTACH (ATT)   
      01405  642123234563     INFIL1 BCI     1,UACCNT      INPUT FILE NAME1   
      01406  633144212323     INFIL2 BCI     1,TIMACC      INPUT FILE NAME2   
                  
                  
                                             * * * * * * * * * * * * *  
                                             * RANDOM OTHER STORAGE  *  
                                             * * * * * * * * * * * * *  
                  
      01407                   ARG    BSS     1  
      01410  000000000034     RPAREN BCI     1,00000) 
      01411 -377777777777     FENCE  OCT     777777777777   
      01412                   TEMP   BSS     1  
      01413                   HMPROB BSS     1  
      01414                   HMPROG BSS     1  
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 21    
                           STORAGE, CONSTANTS, MESSAGES, FLAGS, AND OTHER STUFF     
                  
      01415  606060272126     GAFNM2 BCI     1,   GAF      SECOND NAME OF GAF FILE  
      01416                   QPROB  BSS     1  
                  
                  
                                             * * * * * * * * *    
                                             * SEARCH MASKS  *    
                                             * * * * * * * * *    
                  
      01417 -377777000077     AGMSK1 OCT     777777000077   
      01420  275147000060     AGMSK2 BCI     1,GRP00  
      01421  275147545460     AGMSK3 BCI     1,GRP**  
      01422  546060606060     PRBMSK BCI     1,*
                  
                                             * * * * * * * * * * * * * *
                                             * COMPARISON WORD STORAGE *
                                             * * * * * * * * * * * * * *
                  
      01423  0 00000 0 00000  NAME   PZE  
      01424  0 00000 0 00000  PROB   PZE  
      01425  0 00000 0 00000  PROG   PZE  
      01426  0 00000 0 00000  PARTY  PZE  
      01427  0 00000 0 00000  UFDNM  PZE  
      01430  0 00000 0 00000  UNIT   PZE  
      01431  0 00000 0 00000  RCODE  PZE  
      01432  0 00000 0 00000  FLAGS  PZE  
      01433  0 00000 0 00000  DATEF  PZE  
      01434  0 00000 0 00000  AGRP   PZE  
                  
                  
                                             * * * * * * * * * * * *    
                                             * OUTPUT LINE BUFFERS *    
                                             * * * * * * * * * * * *    
                  
      01435  0 00000 0 00000  SPROB  PZE  
      01436 -205757575757            OCT     605757575757   
      01437  0 00000 0 00000  SPROG  PZE  
      01440 -205757575757            OCT     605757575757   
      01441  0 00000 0 00000  SNAME  PZE  
      01442 -205757575757            OCT     605757575757   
      01443  0 00000 0 00000  SRCODE PZE  
      01444 -205757575757            OCT     605757575757   
      01445  0 00000 0 00000  SUFDNM PZE  
      01446 -205757575757            OCT     605757575757   
      01447  0 00000 0 00000  SUNIT  PZE  
      01450  0 00000 0 00000  SPARTY PZE  
      01451  606060606060     SAGRP  BCI     1, 
      01452  0 00000 0 00000  SFLAGS PZE  
      01453  0 00000 0 00000  SPSWD  PZE  
      01454  0 00000 0 00000  SREQNO PZE  
      01455 -205757575757            OCT     605757575757   
      01456  0 00000 0 00000  SDEPT  PZE  
      01457 -205757575757            OCT     605757575757   
      01460  0 00000 0 00000  SDATE  PZE  
      01461 -205757575757            OCT     605757575757   
      01462  0 00000 0 00000  SDATEF PZE  
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 22    
                           STORAGE, CONSTANTS, MESSAGES, FLAGS, AND OTHER STUFF     
                  
                  
                                             * * * * * * * * *    
                                             * INPUT STORAGE *    
                                             * * * * * * * * *    
                  
                  
      01463                   CARD   BSS     28 
                       01463  UNAME  EQU     CARD     
                       01464  UPROG  EQU     CARD+1   
                       01464  UPROB  EQU     CARD+1   
                       01465  UPARTY EQU     CARD+2   
                       01467  UUFDNM EQU     CARD+4   
                       01470  UUNIT  EQU     CARD+5   
                       01471  URCODE EQU     CARD+6   
                       01472  UFLAGS EQU     CARD+7   
                       01473  UPSWD  EQU     CARD+8   
                       01474  UGPROB EQU     CARD+9   
                       01501  UDRUM  EQU     CARD+14  
                       01502  UDISK  EQU     CARD+15  
                       01503  UTAPE  EQU     CARD+16  
                       01504  UT1    EQU     CARD+17  
                       01505  UT2    EQU     CARD+18  
                       01506  UT3    EQU     CARD+19  
                       01507  UT4    EQU     CARD+20  
                       01510  UT5    EQU     CARD+21  
                       01511  UREQNO EQU     CARD+22  
                       01512  UDEPT  EQU     CARD+23  
                       01513  UDATE  EQU     CARD+24  
                       01514  UDATEF EQU     CARD+25  
                  
                  
                                             * * * * * * * * * * * * * * *    
                                             * ERROR AND OTHER MESSAGES  *    
                                             * * * * * * * * * * * * * * *    
                  
      01517  314343252721     NOTMES BCI     4,ILLEGAL USE OF '(NOT)'-- 
      01520  436064622560     
      01521  462660147445     
      01522  466334144040     
      01523  314343252721     DEVMES BCI     5,ILLEGAL '(DEV)' PARAMETER--    
      01524  436014742425     
      01525  653414604721     
      01526  512144256325     
      01527  514040606060     
      01530  314343252721     SFTMES BCI     5,ILLEGAL '(SHFT)' PARAMETER--   
      01531  436014746230     
      01532  266334146047     
      01533  215121442563     
      01534  255140406060     
      01535  314343252721     PRBMES BCI     4,ILLEGAL PROGRAMMER NO.-- 
      01536  436047514627     
      01537  512144442551     
      01540  604546334040     
      01541  606421622321     FMESS1 BCI , UASCAN - PRINT OUT SELECTED INFORMATION FROM UACCNT TIMACC 
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 23    
                           STORAGE, CONSTANTS, MESSAGES, FLAGS, AND OTHER STUFF     
                  
      01542  456040604751     
      01543  314563604664     
      01544  636062254325     
      01545  236325246031     
      01546  452646514421     
      01547  633146456026     
      01550  514644606421     
      01551  232345636063     
      01552  314421232360     
      01553  606462212725     FMESS2 BCI , USAGE: R UASCAN ARGS , WHERE ARGS MAY BE 
      01554  356051606421     
      01555  622321456021     
      01556  512762607360     
      01557  663025512560     
      01560  215127626044     
      01561  217060222560     
      01562  606060606060     
      01563  606060606060     
      01564  606060606060     
      01565  607447514622     FMESS3 BCI , (PROB) PROBNO, (PROG) PROGNO, (NAME) NAME, (UFDN) UFDNAM,  
      01566  346047514622     
      01567  454673607447     
      01570  514627346047     
      01571  514627454673     
      01572  607445214425     
      01573  346045214425     
      01574  736074642624     
      01575  453460642624     
      01576  452144736060     
      01577  607421275147     FMESS4 BCI , (AGRP) X, (PGRP) X, (UGRP) X, (RCOD) RCODE, (FLAG) FLAGS,  
      01600  346067736074     
      01601  472751473460     
      01602  677360746427     
      01603  514734606773     
      01604  607451234624     
      01605  346051234624     
      01606  257360742643     
      01607  212734602643     
      01610  212762736060     
      01611  607462302663     FMESS5 BCI , (SHFT) X, (DEV) X, (INPT) N1 N2, (GAF) N1, (ATT) PB PG,    
      01612  346067736074     
      01613  242565346067     
      01614  736074314547     
      01615  633460450160     
      01616  450273607427     
      01617  212634604501     
      01620  736074216363     
      01621  346047226047     
      01622  277360606060     
      01623  607426644343     FMESS6 BCI , (FULL), (ACCT), (NOT), (OFF) N1 N2, (OFFN) N1 N2.    
      01624  347360742123     
      01625  236334736074     
      01626  454663347360     
      01627  744626263460     
      01630  450160450273     
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 24    
                           STORAGE, CONSTANTS, MESSAGES, FLAGS, AND OTHER STUFF     
                  
      01631  607446262645     
      01632  346045016045     
      01633  023360606060     
      01634  606060606060     
                  
      01635                   ERRBUF BSS     3  
      01640  016060606064     HIMES  BCI     2,1    UASCAN  
      01641  216223214560     
      01642 -205757575757            OCT     605757575757   
      01643                   DATE   BSS     1  
      01644                   TIME   BSS     1  
      01645  314343252721     ARGMES BCI     4,ILLEGAL ARGUMENT --
      01646  436021512764     
      01647  442545636040     
      01650  406060606060     
      01651                   ARGBUF BSS     20 
      01675  454663602545     MORMES BCI     4,NOT ENOUGH ARGUMENTS     
      01676  466427306021     
      01677  512764442545     
      01700  636260606060     
      01701                   COUNT  BSS     1  
      01702  602646644524            BCI     1, FOUND 
      01703  454660254563     NOENT  BCI     5,NO ENTRY SATISFIES REQUEST     
      01704  517060622163     
      01705  316226312562     
      01706  605125506425     
      01707  626360606060     
      01710  255151465160     IOMES  BCI     6,ERROR IN BFREAD OR BFOPEN. ERRCODE=  
      01711  314560222651     
      01712  252124604651     
      01713  602226464725     
      01714  453360255151     
      01715  234624251360     
      01716                   ERROR  BSS     1  
      01717  606047514622     BASIC  BCI     6,  PROB   PROG  NAME   RCODE  UFDNM   
      01720  606060475146     
      01721  276060452144     
      01722  256060605123     
      01723  462425606064     
      01724  262445446060     
      01725  644531636060     FULHED BCI     4,UNIT  PARTY ACCTG FLAGS  
      01726  472151637060     
      01727  212323632760     
      01730  264321276260     
      01731  476266246060     PASHED BCI     1,PSWD   
      01732  606060606060     ALLOTS BCI     5,        DRUM  DISK  TAPE    T1 
      01733  606024516444     
      01734  606024316242     
      01735  606063214725     
      01736  606060606301     
      01737  606060606302            BCI     4,    T2    T3    T4    T5 
      01740  606060606303     
      01741  606060606304     
      01742  606060606305     
      01743  605125504546     REQS   BCI     5, REQNO   DEPT  DATE   DATEF    
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 25    
                           STORAGE, CONSTANTS, MESSAGES, FLAGS, AND OTHER STUFF     
                  
      01744  606060242547     
      01745  636060242163     
      01746  256060602421     
      01747  632526606060     
      01750  606060606000     ZERO   BCI     1,     0 
                  
                  
                  
                                             * * * * * * * * * *  
                                             * ARGUMENT TABLE  *  
                                             * * * * * * * * * *  
                  
      01751  607427212634     ARGTBL BCI     1, (GAF)      SPECIFY G.A.F. AS INPUT FILE   
      01752  0074 00 2 00165         TSX     INCARG,2      SO GET THE FILE NAME     
      01753  0020 00 0 00151         TRA     GAFARG        AND PLAY WITH IT   
                  
      01754  743145476334            BCI     1,(INPT)      SPECIFY NAME1 NAME2 AS INPUT FILE    
      01755  0074 00 2 00165         TSX     INCARG,2      GET NAME1    
      01756  0020 00 0 00167         TRA     INPARG        AND PLAY     
                  
      01757  607445466334            BCI     1, (NOT)      TO NEGATE THE MEANING OF SOME ARGS   
      01760  0074 00 2 00165         TSX     INCARG,2      GET THE NEXT (XXXX)
      01761  0020 00 0 00177         TRA     NOTARG   
                  
      01762  744751462234            BCI     1,(PROB)      PROBLEM NUMBER FOLLOWS   
      01763  0074 00 2 00165         TSX     INCARG,2      GET IT 
      01764  0020 00 0 00205         TRA     PRBARG   
                  
      01765  744751462734            BCI     1,(PROG)      PROGRAMMER NUMBER FOLLOWS
      01766  0074 00 2 00165         TSX     INCARG,2      GET IT 
      01767  0020 00 0 00215         TRA     PRGARG   
                  
      01770  742664434334            BCI     1,(FULL)      FULL PRINT OPTION DESIRED
      01771  0020 00 0 00224         TRA     FULARG   
      01772  0761 00 0 00000         NOP                   TAKE UP SPACE IN TABLE   
                  
      01773  607423646334            BCI     1, (CUT)      SELECT BY CUT DATE 
      01774  0074 00 2 00165         TSX     INCARG,2      GET MMDDYY FOR CUT 
      01775  0020 00 0 00230         TRA     CUTARG   
                  
      01776  607424256534            BCI     1, (DEV)      SELECT BY DEVICE ALLOTMENT     
      01777  0074 00 2 00165         TSX     INCARG,2      GET THE DEVICE NUMBER    
      02000  0020 00 0 00242         TRA     DEVARG   
                  
      02001  744521442534            BCI     1,(NAME)      SELECT BY NAME     
      02002  0074 00 2 00165         TSX     INCARG,2      GET THE NAME 
      02003  0020 00 0 00120         TRA     NAMARG   
                  
      02004  746230266334            BCI     1,(SHFT)      SELECT BY SHIFT TIME ALLOTMENT 
      02005  0074 00 2 00165         TSX     INCARG,2      GET THE SHIFT NUMBER     
      02006  0020 00 0 00255         TRA     SFTARG        ..     
                  
      02007  744762662434            BCI     1,(PSWD)      PRINT PASSWORDS    
      02010  0020 00 0 00270         TRA     PSWARG   
      02011  0761 00 0 00000         NOP  
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 26    
                           STORAGE, CONSTANTS, MESSAGES, FLAGS, AND OTHER STUFF     
                  
      02012  745123462434            BCI     1,(RCOD)      SELECT BY RCODE    
      02013  0074 00 2 00165         TSX     INCARG,2      GET THE CODE BITS DESIRED
      02014  0020 00 0 00274         TRA     RCDARG   
                  
      02015  607446262634            BCI     1, (OFF)      OFFLINE OUTPUT     
      02016  0074 00 2 00165         TSX     INCARG,2      GET NAME1 OF THE OUTPUT FILE   
      02017  0020 00 0 00305         TRA     OFFARG   
                  
      02020  744626264534            BCI     1,(OFFN)      OUTPUT ON LINE AND 
      02021  0074 00 2 00165         TSX     INCARG,2      OFF LINE IN NAME1 NAME2  
      02022  0020 00 0 00304         TRA     OFNARG        ..     
                  
      02023  744727514734            BCI     1,(PGRP)      SELECT BY PARTY GROUP    
      02024  0074 00 2 00165         TSX     INCARG,2      GET THE DESIRED GROUP NUM.     
      02025  0020 00 0 00315         TRA     PGPARG   
                  
      02026  746427514734            BCI     1,(UGRP)      SELECT BY UNIT GROUP     
      02027  0074 00 2 00165         TSX     INCARG,2      GET THE UNIT GROUP NUMBER
      02030  0020 00 0 00324         TRA     UGPARG   
                  
      02031  742127514734            BCI     1,(AGRP)      SELECT BY ACCOUNTING GROUP     
      02032  0074 00 2 00165         TSX     INCARG,2      GET THE ACCOUNTING GROUP 
      02033  0020 00 0 00334         TRA     AGPARG   
                  
      02034  746426244534            BCI     1,(UFDN)      SELECT BY HOME UFD NAME  
      02035  0074 00 2 00165         TSX     INCARG,2      GET THE UFD NAME   
      02036  0020 00 0 00350         TRA     UFDARG   
                  
      02037  742123236334            BCI     1,(ACCT)      DESIRE AN ACCOUNTING PRINTOUT  
      02040  0020 00 0 00357         TRA     ACTARG   
      02041  0761 00 0 00000         NOP  
                  
      02042  607421636334            BCI     1, (ATT)      ATTACH PROB PROG TO GET INPUT FILE   
      02043  0074 00 2 00165         TSX     INCARG,2      GET THE PROBLEM NUMBER   
      02044  0020 00 0 00364         TRA     ATTARG   
                  
      02045  742643212734            BCI     1,(FLAG)      SELECT BY FLAG BITS
      02046  0074 00 2 00165         TSX     INCARG,2      GET THE FLAG BITS  
      02047  0020 00 0 00374         TRA     FLGARG   
                  
                       00077  ARGSIZ EQU     *-ARGTBL      SIZE OF THE ABOVE TABLE  
                  
                  
                                     END  
                  
        LITERALS  
      02050  000000000000     
      02051  000000000001     
      02052  000000000004     
      02053  000000000006     
      02054  000000000011     
      02055  000000000077     
      02056  000000000660     
      02057  000000007777     
      02060  000000777777     
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 27    
                           STORAGE, CONSTANTS, MESSAGES, FLAGS, AND OTHER STUFF     
                  
      02061  214343606060     
      02062  234426435454     
      02063  275147000060     
      02064  400000000000     
      02065  400000000001     
      02066  475145632551     
      02067  516060606060     
      02070  546060606060     
      02071  606060000000     
      02072  606060600000     
      02073  606060606060     
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       2074 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
       1407    ARG    73,  100,  106,  112,  121,  131,  143,  156,  171,  174,  200,  206,  215,  231,  243,  256,  301
                     307,  312,  315,  324,  335,  350,  366,  371,  401, 1263
       1363    FT1   266,  566,  631
       1364    FT2   637
       1365    FT3   645
       1366    FT4   653
       1367    FT5   661
         13    OFF   412
        166    REM      
       1504    UT1   630, 1517
       1505    UT2   636, 1517
       1506    UT3   644, 1517
       1507    UT4   652, 1517
       1510    UT5   660, 1517
         12    ZEL   334
       1434   AGRP   342,  746
         25   BZ57  1063
          7   BZEL   230, 1326
       1463   CARD   474,  500,  503,  511,  747,  756,  762,  765, 1002, 1015, 1025, 1031, 1034, 1517
       1105   CXR4  1076
       1643   DATE    64
       1151   FORM  1130
       1130   GATE  1146, 1150
       1123   MASK  1106, 1111
       1423   NAME   122,  525
       1073   NONE  1054
       1424   PROB   207,  517,  774
       1425   PROG   216,  533
       1011   READ   473,  753, 1001
       1743   REQS      
       1041   RXR4  1011, 1024, 1030, 1033
       1412   TEMP   336,  337,  670,  671,  673,  706,  710,  711,  712, 1017, 1310, 1320, 1321, 1324, 1325, 1327, 1344
       1644   TIME    65
       1430   UNIT   326,  621
       1750   ZERO   541,  547,  555,  627,  635,  643,  651,  657
        753  ANEXT   761
       1717  BASIC  1132
         10  BCDEC   242,  255
         11  BCOCT   300,  400,  666,  707
        460  BUFF1   447
        461  BUFF2   451
         32  CLOSE  1334
       1701  COUNT   472, 1053, 1055, 1061, 1062, 1064, 1065, 1067, 1125, 1127
        742  CUTNO   735
       1433  DATEF   234,  734
         24  DEFBC  1060, 1323
       1716  ERROR  1330
       1345  ERXIT  1337
       1371  FAGRP   346,  750
       1361  FDISK   551
       1360  FDRUM   253,  543
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1411  FENCE    43,   74, 1345
       1432  FLAGS   402,  713,  715,  717,  720
       1350  FNAME   126,  527
       1351  FPROB   213,  521,  776
       1352  FPROG   222,  535
       1362  FTAPE   557
       1355  FUNIT   332,  601,  623
          4  GETTM    63
       1640  HIMES   420
       1317  IOERR   463
       1710  IOMES  1332
       1273  LEAVE    35, 1257, 1264, 1301
       1226  LINE2  1177
          5  LJUST   120,  130
       1703  NOENT  1074
         15  OFFON   432, 1046
       1426  PARTY   316,  605
       1070  PSTAR  1057, 1075
       1262  PTARG  1267, 1272
       1416  QPROB  1007, 1023, 1152, 1156
       1431  RCODE   302,  672
       1451  SAGRP   162,  507,  771, 1040
       1460  SDATE  1235
       1456  SDEPT  1233
        435  SETUP   411
       1441  SNAME  1163
        141  SPECL   103,  204
       1435  SPROB  1151, 1157, 1176, 1205
       1437  SPROG  1161, 1200
       1453  SPSWD  1223, 1225
       1447  SUNIT  1211, 1217
       1513  UDATE  1234, 1517
       1512  UDEPT  1232, 1517
       1502  UDISK   550, 1517
       1501  UDRUM   542, 1243, 1517
       1427  UFDNM   351,  613
       1463  UNAME   526,  562, 1162, 1172, 1517
       1464  UPROB   775, 1006, 1517
       1464  UPROG   534,  563, 1160, 1173, 1517
       1473  UPSWD  1220, 1517
       1503  UTAPE   556, 1517
       1470  UUNIT   622, 1210, 1517
          2  WRFLX    45,   47,   51,   53,   55,   57,   66,  417,  425,  427, 1051, 1066, 1070, 1073, 1141, 1144, 1154
                    1175, 1224, 1242, 1255, 1262, 1273, 1277, 1331
        357 ACTARG  2040
       1377 ACTFLG   361, 1143, 1226
       1417 AGMSK1   475, 1026
       1420 AGMSK2   341, 1027
       1421 AGMSK3   755
        334 AGPARG  2033
        762 AGPYES   751
        745 AGRPHD   510,  760,  764
       1732 ALLOTS  1145
       1651 ARGBUF    41,   42,   72,  426, 1247
        404 ARGFIN    75
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1645 ARGMES  1271
         77 ARGSIZ   142,  144,  146, 2050
       1751 ARGTBL   144,  146, 2050
         17 ATTACH   443,  466, 1304, 1340
        364 ATTARG  2044
         16 ATTNAM   441
       1403 ATTNM1   367,  437,  444,  464,  471, 1302, 1336
       1404 ATTNM2   372,  445
       1270 BADARG   150
       1260 BADDEV   244,  247
       1245 BADNOT   152,  170,  225,  271,  306,  360,  365
       1265 BADSFT   257,  262
       1311 BCLOSE  1303
         30 BFCLOS  1311
         31 BFCODE  1317
         22 BFOPEN   454
         23 BFREAD  1012
       1200 BWRITE  1174
        727 CHKCUT   603,  703,  724
        702 CHKFLG   665,  677
        524 CHKNAM   515
        604 CHKTHM   564
          3 CHNCOM    61, 1275, 1315
        163 CLRBAK   127,  176,  214,  223,  227,  241,  254,  267,  273,  303,  314,  323,  333,  347,  356,  363,  373
                     403
       1076 CMPARE   104,  516,  524,  532,  540,  546,  554,  604,  612,  620,  626,  634,  642,  650,  656,  745,  754
                     773
        230 CUTARG  1775
        242 DEVARG  2000
       1523 DEVMES  1261
       1043 ENDFIL  1016
       1635 ERRBUF  1250, 1256
       1370 FDATEF   240,  727,  737,  742
       1357 FFLAGS   377,  573,  702,  722,  725
        725 FGMTCH   714,  721
        722 FGNMTH   716
        446 FILLOD   440
       1302 FILXIT   436, 1072, 1333
        374 FLGARG  2047
       1541 FMESS1    46
       1553 FMESS2    50
       1565 FMESS3    52
       1577 FMESS4    54
       1611 FMESS5    56
       1623 FMESS6    60
       1125 FORMAT   730,  736,  740,  743
       1353 FPARTY   322,  575,  607
       1356 FRCODE   277,  571,  664,  675,  700
       1244 FRMEND  1227
       1220 FRPASS  1207
       1354 FUFDNM   355,  577,  615
        224 FULARG  1771
       1375 FULFLG   226,  362, 1133, 1206
       1725 FULHED  1135
        151 GAFARG  1753
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 4     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1400 GAFFLG   154,  514, 1020
       1415 GAFNM2   153
          1 GETCLS    40
         20 GETMEM   446
       1413 HMPROB   442,  467, 1305, 1341
       1414 HMPROG   470, 1306, 1342
        165 INCARG   173,  311,  370, 1752, 1755, 1760, 1763, 1766, 1774, 1777, 2002, 2005, 2013, 2016, 2021, 2024, 2027
                    2032, 2035, 2043, 2046
       1405 INFIL1   157,  172,  456, 1013, 1312
       1406 INFIL2   155,  175,  457, 1014, 1313
        167 INPARG  1756
       1051 LSTLNS  1044
       1675 MORMES  1300
       1104 NACALL  1102
        120 NAMARG  2003
         26 NAMASK  1103
         33 NEXCOM  1347
         63 NOFENC    44,   63
        177 NOTARG  1761
       1334 NOTBER  1322
       1372 NOTFLG    71,  124,  151,  163,  167,  177,  211,  220,  224,  236,  251,  264,  270,  275,  305,  320,  330
                     344,  353,  357,  364,  375,  404
       1517 NOTMES  1254
         72 NXTARG   165
        473 NXTCRD   523,  531,  537,  545,  553,  561,  567,  572,  574,  576,  600,  602,  611,  617,  625,  633,  641
                     647,  655,  663,  676,  701,  723,  726,  741,  744,  772, 1010, 1244
        305 OFFARG  2017
        412 OFFLIN      
        304 OFNARG  2022
       1373 OFNFLG   304,  431, 1045
       1401 OUTNM1   310,  410,  413,  433, 1043, 1047
       1402 OUTNM2   313,  414,  434, 1050
       1731 PASHED  1140, 1142
        315 PGPARG  2025
        205 PRBARG   136, 1764
        773 PRBHED   513, 1005
       1001 PRBLUK  1004
       1535 PRBMES      
       1422 PRBMSK   512
        130 PRBPRG   116,  117
       1006 PRBYES   777
        215 PRGARG   110,  137,  140, 1767
        104 PRPGNM   203
        270 PSWARG  2010
       1376 PSWFLG   272, 1137, 1221
        274 RCDARG  2014
        700 RCMTCH   674
          6 REPROB   205
       1124 RESULT  1112, 1115, 1120
       1410 RPAREN   102,  202
       1462 SDATEF  1237
        472 SEARCH   465
          0 SETBRK    34,  435
         21 SETMEM   453
       1452 SFLAGS  1215
1       UASCAN - TO SELECT AND PRINT INFORMATION FROM UACCNT TIMACC              04/28/69 1231.2 PAGE 5     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        255 SFTARG  2006
       1530 SFTMES  1266
       1450 SPARTY  1213
       1374 SPECFL    70,   76,  141,  164,  406
       1443 SRCODE  1167
       1454 SREQNO  1231
         14 SSPRNT   415,  421
       1445 SUFDNM  1171, 1203
        511 TRYPRB   477,  502
       1514 UDATEF   731, 1236, 1517
        350 UFDARG  2036
       1472 UFLAGS   704, 1214, 1517
        324 UGPARG  2030
       1474 UGPROB   520, 1022, 1517
       1465 UPARTY   606, 1212, 1517
       1471 URCODE   667, 1164, 1517
       1511 UREQNO  1230, 1517
       1467 UUFDNM   614, 1170, 1517
       1277 WNTMOR   405,  407
         27 WRFLXA  1131, 1134, 1204, 1216, 1240, 1253, 1260, 1265, 1270
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
