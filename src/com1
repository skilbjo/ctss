



AARCHV   BCD 10/04/70 1545.9   42312         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   ARCHV   MAD            02/27/70    1738.3
-                 
                                                                                                       LM00001    
                  ARCHIV COMMAND--DON WAGNER 9 SEPT 1965                                               LM00002    
                    MODIFIED BY R. ROACH 9/27/68                                                       LM00003    
                                                                                                       LM00004    
                                                                                                       LM00005    
                  LOADING-- 'ARCHV MAD' HAS TWO INSERTS,                                               LM00006    
                  'ASUBS MAD' AND 'AFORM MAD'.                                                         LM00007    
                      MAD ARCHV                                                                        LM00008    
                      LAED NCLOAD ARCHV (SRCH) XLIBE                                                   LM00009    
                      SAVE ARCHIV                                                                      LM00010    
                      RENAME ARCHIV SAVED ARCHIV TSSDC.                                                LM00011    
                                                                                                       LM00012    
                  INITIALIZATION                                                                       LM00013    
                                                                                                       LM00014    
                  WHENEVER COMARG.(1).A.77K.E.77K                                                 *001 LM00015    
                       PRMESS.( $ARCHIV KEY NM1 NM2 FL1 FL2 ...$)                                 *002 LM00016    
                    PRMESS.($WHERE KEY = COMBIN, TABLE, PRINT, DELETE, REPLAC$)                   *003 LM00017    
                       PRMESS.($XTRACT, OR UPDATE$)                                               *004 LM00018    
                       PRMESS.($ALL KEYS MAY BE ABBREVIATED BY FIRST LETTER.$)                    *005 LM00019    
      OUT              CHNCOM.(0)                                                                 *006 LM00020    
                  END OF CONDITIONAL                                                              *007 LM00021    
                  KEY=COMARG.(1)                                                                  *008 LM00022    
                  WHENEVER KEY .E. $  TOFF$                                                       *009 LM00023    
                    TOFF = 1B                                                                     *010 LM00024    
                    BOOLEAN TOFF                                                                  *011 LM00025    
                    VECTOR VALUES TOFF = 0B                                                       *012 LM00026    
                    KEY = $     T$                                                                *013 LM00027    
                  END OF CONDITIONAL                                                              *014 LM00028    
                  WHENEVER KEY .E. $   TON$                                                       *015 LM00029    
                     TON = 1B                                                                     *016 LM00030    
                     KEY = $     T$                                                               *017 LM00031    
                     BOOLEAN TON                                                                  *018 LM00032    
                      VECTOR VALUES TON = 0B                                                      *019 LM00033    
                  END OF CONDITIONAL                                                              *020 LM00034    
                  NM1=COMARG.(2)                                                                  *021 LM00035    
                  NM2=COMARG.(3)                                                                  *022 LM00036    
                  SETBRK.(OUT)                                                                    *023 LM00037    
                                                                                                       LM00038    
                  GETTM.(DATE,TIME)                                                               *024 LM00039    
                    DIMENSION ANAM(2)                                                             *025 LM00040    
                    EQUIVALENCE (NM1,ANAM(0)), (NM2,ANAM(1))                                      *026 LM00041    
                  WHENEVER NM1.A.77K.E.77K .OR. NM2.A.77K.E.77K                                   *027 LM00042    
                       PRMESS.($NOT ENOUGH ARGUMENTS$)                                            *028 LM00043    
                       CHNCOM.(0)                                                                 *029 LM00044    
                  END OF CONDITIONAL                                                              *030 LM00045    
                                                                                                       LM00046    
                  FILTAB IS A TABLE OF SPECIFIED FILES.                                                LM00047    
                  FILTAB(0) CONTAINS COUNT.                                                            LM00048    
                                                                                                       LM00049    
                  WHENEVER NM2.E.$SOURCE$.OR.NM2.E.$ARCHIV$                                       *031 LM00050    
                     NAMTYP=1B                                                                    *032 LM00051    
                     THROUGH IN00, FOR FILTAB=0,2,COMARG.(FILTAB+4).A.77K.E.77K                   *033 LM00052    
                1       .OR.FILTAB.E.FILTBZ                                                       *033 LM00053    
                     FILTAB(FILTAB+1)=COMARG.(FILTAB+4)                                           *034 LM00054    
                     WHENEVER COMARG.(FILTAB+5).A.77K.E.77K                                       *035 LM00055    
                     PRMESS.( $LAST ARGUMENT INCOMPLETE, RETYPE REQUEST$)                         *036 LM00056    
                     CHNCOM.(0)                                                                   *037 LM00057    
                     OTHERWISE                                                                    *038 LM00058    
                        FILTAB(FILTAB+2)=COMARG.(FILTAB+5)                                        *039 LM00059    
                     END OF CONDITIONAL                                                           *040 LM00060    
      IN00           CONTINUE                                                                     *041 LM00061    
                  OTHERWISE                                                                       *042 LM00062    
                     NAMTYP=0B                                                                    *043 LM00063    
                     THROUGH IN01, FOR FILTAB=0,1,COMARG.(FILTAB+4).A.77K.E.77K                   *044 LM00064    
                1       .OR. FILTAB.E.FILTBZ                                                      *044 LM00065    
      IN01        FILTAB(FILTAB+1)=COMARG.(FILTAB+4)                                              *045 LM00066    
                  END OF CONDITIONAL                                                              *046 LM00067    
                                                                                                       LM00068    
                  TEMPORARY FILE NAME IS PROB PROG                                                     LM00069    
                                                                                                       LM00070    
                  WHOAMI.(WHBUF(8)...8)                                                           *047 LM00071    
                    DIMENSION WHBUF(8)                                                            *048 LM00072    
                    DIMENSION TFIL(2)                                                             *049 LM00073    
                  TM1=WHBUF(8)                                                                    *050 LM00074    
                  TM2=WHBUF(7)                                                                    *051 LM00075    
                    EQUIVALENCE (TM1,TFIL(0)), (TM2,TFIL(1))                                      *052 LM00076    
                                                                                                       LM00077    
                  COMBIN--MAKE ORIGINAL ARCHIV                                                         LM00078    
                                                                                                       LM00079    
                  WHENEVER KEY.E.$COMBIN$ .OR. KEY.E.$     C$                                     *053 LM00080    
                  FSTATE.(NM1,NM2,FSBUF(8)...8,CM01)                                              *054 LM00081    
                  WHENEVER NAMTYP                                                                 *055 LM00082    
                  THROUGH CMP1A, FOR I=1,2,I.G.FILTAB                                             *056 LM00083    
      CMP1A       WHENEVER FILTAB(I).E.NM1.AND.FILTAB(I+1).E.NM2, TRANSFER TO CM01                *057 LM00084    
                  OTHERWISE                                                                       *058 LM00085    
                  THROUGH CMP1B, FOR I = 1,1,I.G.FILTAB                                           *059 LM00086    
      CMP1B       WHENEVER FILTAB(I).E.NM1, TRANSFER TO CM01                                      *060 LM00087    
                  END OF CONDITIONAL                                                              *061 LM00088    
                  PRMESS.($ YOU HAVE NOT INCLUDED THE OLD$,NM1,NM2,$.$)                           *062 LM00089    
                  PRMESA.($ IS THIS OK,$)                                                         *063 LM00090    
                  WHENEVER .NOT. YES.(0), TRANSFER TO FORGET                                      *064 LM00091    
      CM01        CONTINUE                                                                        *065 LM00092    
                  WHENEVER NAMTYP                                                                 *066 LM00093    
                  THROUGH CM03A, FOR FILTBP=1,2,FILTBP.G.FILTAB                                   *067 LM00094    
                  WHENEVER .NOT.CPFIL.(FILTAB(FILTBP),FILTAB(FILTBP+1)),                          *068 LM00095    
                1    PRNTER.(61K)                                                                 *068 LM00096    
      CM03A       CONTINUE                                                                        *069 LM00097    
                  OTHERWISE                                                                       *070 LM00098    
                  THROUGH CM03, FOR FILTBP=1,1,FILTBP.G.FILTAB                                    *071 LM00099    
                  WHENEVER .NOT. CPFIL.(FILTAB(FILTBP),NM2),                                      *072 LM00100    
                1    PRNTER.(61K)                                                                 *072 LM00101    
      CM03        CONTINUE                                                                        *073 LM00102    
                  END OF CONDITIONAL                                                              *074 LM00103    
                  WHENEVER TMOPSW, CLS.(NM1,NM2)                                                  *075 LM00104    
                  TRANSFER TO EXT                                                                 *076 LM00105    
      FORGET      PRMESS.($NOTHING DONE.$)                                                        *077 LM00106    
                  CHNCOM.(0)                                                                      *078 LM00107    
                                                                                                       LM00108    
                  TABLE--PRINT TABLE OF CONTENTS.                                                      LM00109    
                                                                                                       LM00110    
                  OR WHENEVER KEY.E.$ TABLE$ .OR. KEY.E.$     T$                                  *079 LM00111    
                  COPYSW=0B                                                                       *080 LM00112    
                  PRSSW=0B                                                                        *081 LM00113    
                  VECTOR VALUES BL = 605757575757K                                                *082 LM00114    
                  VECTOR VALUES CR = 555757575757K                                                *083 LM00115    
      TB01        WHENEVER FILTAB.E.0                                                             *084 LM00116    
                            GNEXT.(TFNF)                                                          *085 LM00117    
                     WHENEVER FIRST                                                               *086 LM00118    
                        FIRST = 0B                                                                *087 LM00119    
                        WHENEVER TOFF, OFF.($ARCHIV$,$OUTPUT$)                                    *088 LM00120    
                        WHENEVER TON, OFFON.($ARCHIV$,$OUTPUT$)                                   *089 LM00121    
                            PRMESS.                                                               *090 LM00122    
                        PRMESS.($ ***$,NM1,BL,NM2,BL,BL,DATE,BL,TIME)                             *091 LM00123    
                       PRMESS.                                                                    *092 LM00124    
                     END OF CONDITIONAL                                                           *093 LM00125    
                  BOOLEAN FIRST                                                                   *094 LM00126    
                  VECTOR VALUES FIRST = 1B                                                        *095 LM00127    
                  OTHERWISE                                                                       *096 LM00128    
                       SEARCH.(TFNF)                                                              *097 LM00129    
                        WHENEVER FIRST                                                            *098 LM00130    
                       FIRST = 0B                                                                 *099 LM00131    
                            WHENEVER TOFF, OFF.($ARCHIV$,$OUTPUT$)                                *100 LM00132    
                            WHENEVER TON, OFFON.($ARCHIV$,$OUTPUT$)                               *101 LM00133    
                       END OF CONDITIONAL                                                         *102 LM00134    
                  END OF CONDITIONAL                                                              *103 LM00135    
                  PTLNMK.                                                                         *104 LM00136    
                  TRANSFER TO TB01                                                                *105 LM00137    
                                                                                                       LM00138    
      TFNF        PRMESS.                                                                         *106 LM00139    
                  TRANSFER TO FNF                                                                 *107 LM00140    
                                                                                                       LM00141    
                  DELETE--REMOVE ENTRIES                                                               LM00142    
                                                                                                       LM00143    
                  OR WHENEVER KEY.E.$DELETE$ .OR. KEY.E.$     D$                                  *108 LM00144    
      DL01        COPYSW=1B                                                                       *109 LM00145    
                  PRSSW=1B                                                                        *110 LM00146    
                  WMRKSW=1B                                                                       *111 LM00147    
                  SEARCH.(REN)                                                                    *112 LM00148    
                  COPYSW=0B                                                                       *113 LM00149    
                  GNEXT.(REN)                                                                     *114 LM00150    
                  TRANSFER TO DL01                                                                *115 LM00151    
                                                                                                       LM00152    
                  XTRACT-                                                                              LM00153    
                                                                                                       LM00154    
                  OR WHENEVER KEY.E.$XTRACT$ .OR. KEY.E.$     X$ .OR. KEY.E.$    XT$              *116 LM00155    
      XT01        COPYSW=0B                                                                       *117 LM00156    
                  PRSSW=1B                                                                        *118 LM00157    
                  WHENEVER FILTAB.NE.0                                                            *119 LM00158    
                       SEARCH.(FNF)                                                               *120 LM00159    
                  OTHERWISE                                                                       *121 LM00160    
                       WHENEVER .NOT. GOTNXT, GNEXT.(FNF)                                         *122 LM00161    
                  END OF CONDITIONAL                                                              *123 LM00162    
                  NW1=FLN1.(PRLNMK)                                                               *124 LM00163    
                  NW2=FLN2.(PRLNMK)                                                               *125 LM00164    
                  COPYSW=1B                                                                       *126 LM00165    
                  WMRKSW=0B                                                                       *127 LM00166    
                  GNEXT.(XT02)                                                                    *128 LM00167    
                  GOTNXT=1B                                                                       *129 LM00168    
                  TRANSFER TO XT03                                                                *130 LM00169    
      XT02        NAMO=1B                                                                         *131 LM00170    
      XT03        WHENEVER CLS.(NW1,NW2)                                                          *132 LM00171    
                       WHENEVER KEY.E.$    XT$, CHFILE.(NW1,NW2,001K,-0,-0)                       *133 LM00172    
                  END OF CONDITIONAL                                                              *134 LM00173    
                  WHENEVER NAMO,TRANSFER TO FNF                                                   *135 LM00174    
                  TRANSFER TO XT01                                                                *136 LM00175    
                                                                                                       LM00176    
                  REPLAC                                                                               LM00177    
                                                                                                       LM00178    
                  OR WHENEVER KEY.E.$REPLAC$ .OR. KEY.E.$     R$ .OR. KEY.E.$    RD$              *137 LM00179    
      RP01        COPYSW=1B                                                                       *138 LM00180    
                  PRSSW=1B                                                                        *139 LM00181    
                  WMRKSW=1B                                                                       *140 LM00182    
                  WHENEVER FILTAB.NE.0                                                            *141 LM00183    
                       SEARCH.(RP02)                                                              *142 LM00184    
                  OTHERWISE                                                                       *143 LM00185    
                       WHENEVER .NOT. GOTNXT, GNEXT.(RP02)                                        *144 LM00186    
                  END OF CONDITIONAL                                                              *145 LM00187    
                  GOTNXT=0B                                                                       *146 LM00188    
                  WHENEVER .NOT. CPFIL.(FLN1.(PRLNMK),FLN2.(PRLNMK))                              *147 LM00189    
                       PRNTER.(61K)                                                               *148 LM00190    
                       COPYSW=1B                                                                  *149 LM00191    
                  OTHERWISE                                                                       *150 LM00192    
                  WHENEVER DELST.L.DELSTZ                                                         *151 LM00193    
                       DELST=DELST+1                                                              *152 LM00194    
                       DELST1(DELST)=FLN1.(PRLNMK)                                                *153 LM00195    
                       DELST2(DELST)=FLN2.(PRLNMK)                                                *154 LM00196    
                  END OF CONDITIONAL                                                              *155 LM00197    
                       COPYSW=0B                                                                  *156 LM00198    
                  END OF CONDITIONAL                                                              *157 LM00199    
                  GNEXT.(RP02)                                                                    *158 LM00200    
                  GOTNXT=1B                                                                       *159 LM00201    
                  TRANSFER TO RP01                                                                *160 LM00202    
      RP02        WHENEVER NAMTYP                                                                 *161 LM00203    
                     TYP=1                                                                        *162 LM00204    
                  OTHERWISE                                                                       *163 LM00205    
                     TYP=0                                                                        *164 LM00206    
                  END OF CONDITIONAL                                                              *165 LM00207    
                  THROUGH RP03, FOR JI=1,1,JI+TYP*(JI-1).G.FILTAB                                 *166 LM00208    
                  WHENEVER NAMTYP                                                                 *167 LM00209    
                     JJ=2*JI-1                                                                    *168 LM00210    
                     CNM2=FILTAB(JJ+1)                                                            *169 LM00211    
                  OTHERWISE                                                                       *170 LM00212    
                     JJ=JI                                                                        *171 LM00213    
                     CNM2=NM2                                                                     *172 LM00214    
                  END OF CONDITIONAL                                                              *173 LM00215    
                  WHENEVER .NOT. FILFND(JI)                                                       *174 LM00216    
                  PRMESS.(FILTAB(JJ),BL,CNM2,$ ADDED$,606346605757K,NM1,BL,NM2)                   *175 LM00217    
                       WHENEVER .NOT. CPFIL.(FILTAB(JJ),CNM2)                                     *176 LM00218    
                            PRNTER.(61K)                                                          *177 LM00219    
                       OTHERWISE                                                                  *178 LM00220    
                            FILFND(JI)=1B                                                         *179 LM00221    
                       WHENEVER DELST.L.DELSTZ                                                    *180 LM00222    
                            DELST=DELST+1                                                         *181 LM00223    
                            DELST1(DELST)=FILTAB(JJ)                                              *182 LM00224    
                            DELST2(DELST)=CNM2                                                    *183 LM00225    
                       END OF CONDITIONAL                                                         *184 LM00226    
                       END OF CONDITIONAL                                                         *185 LM00227    
      RP03        END OF CONDITIONAL                                                              *186 LM00228    
                  WHENEVER CLS.(NM1,NM2)                                                          *187 LM00229    
                  WHENEVER KEY.E.$    RD$                                                         *188 LM00230    
                       THROUGH RPD01, FOR I=1,1,I.G.DELST                                         *189 LM00231    
      RPD01                 DELT.(DELST1(I),DELST2(I))                                            *190 LM00232    
                  END OF CONDITIONAL                                                              *191 LM00233    
                  END OF CONDITIONAL                                                              *192 LM00234    
                  TRANSFER TO EXT                                                                 *193 LM00235    
                  BOOLEAN GOTNXT                                                                  *194 LM00236    
                  DIMENSION DELST1(100), DELST2(100)                                              *195 LM00237    
                  VECTOR VALUES DELSTZ=100                                                        *196 LM00238    
                                                                                                       LM00239    
                  UPDATE--CONDITIONAL REPLAC                                                           LM00240    
                                                                                                       LM00241    
                  OR WHENEVER KEY.E.$UPDATE$ .OR. KEY.E.$     U$                                  *197 LM00242    
      UP01        COPYSW=1B                                                                       *198 LM00243    
                  PRSSW=1B                                                                        *199 LM00244    
                  WMRKSW=1B                                                                       *200 LM00245    
                  WHENEVER FILTAB.NE.0                                                            *201 LM00246    
                       SEARCH.(REN)                                                               *202 LM00247    
                  OTHERWISE                                                                       *203 LM00248    
                       WHENEVER .NOT. GOTNXT, GNEXT.(REN)                                         *204 LM00249    
                  END OF CONDITIONAL                                                              *205 LM00250    
                  FSTATE.(FLN1.(PRLNMK),FLN2.(PRLNMK),FSBUF(8)...8,UP02)                          *206 LM00251    
                  WHENEVER FSBUF(2).A.377777777777K.G.DATTM.(PRLNMK).A.377777777777K              *207 LM00252    
                       PTLNMK.                                                                    *208 LM00253    
                       COPYSW=0B                                                                  *209 LM00254    
                       WHENEVER .NOT. CPFIL.(FLN1.(PRLNMK),FLN2.(PRLNMK)), COPYSW=1B              *210 LM00255    
                  OTHERWISE                                                                       *211 LM00256    
      UP02             COPYSW=1B                                                                  *212 LM00257    
                  END OF CONDITIONAL                                                              *213 LM00258    
                  GNEXT.(REN)                                                                     *214 LM00259    
                  GOTNXT=1B                                                                       *215 LM00260    
                  TRANSFER TO UP01                                                                *216 LM00261    
                                                                                                       LM00262    
                  ERROR                                                                                LM00263    
                                                                                                       LM00264    
                  OTHERWISE                                                                       *217 LM00265    
                  PRMESS.(KEY,$ -- NOT A VALID ARGUMENT.$)                                        *218 LM00266    
                  CHNCOM.(0)                                                                      *219 LM00267    
                  END OF CONDITIONAL                                                              *220 LM00268    
                                                                                                       LM00269    
                  GRACEFUL EXIT                                                                        LM00270    
                                                                                                       LM00271    
      SPC         PRMESS.                                                                         *221 LM00272    
                  TRANSFER TO FNF                                                                 *222 LM00273    
      REN         CLS.(NM1,NM2)                                                                   *223 LM00274    
      FNF         WHENEVER NAMTYP                                                                 *224 LM00275    
                     THROUGH FN01A, FOR I = 1,1,I.G.FILTAB/2                                      *225 LM00276    
                     WHENEVER .NOT.FILFND(I)                                                      *226 LM00277    
                  PRMESS.(FILTAB(2*I-1),BL,FILTAB(2*I),$ NOT FOUND I$,                            *227 LM00278    
                1  456057575757K,NM1,BL,NM2)                                                      *227 LM00279    
      FN01A          END OF CONDITIONAL                                                           *228 LM00280    
                  OTHERWISE                                                                       *229 LM00281    
                     THROUGH FNO1B, FOR I=1,1,I.G.FILTAB                                          *230 LM00282    
                     WHENEVER .NOT.FILFND(I)                                                      *231 LM00283    
                       PRMESS.(FILTAB(I),BL,NM2,$ NOT FOUND I$,456057575757K,                     *232 LM00284    
                1   NM1,BL,NM2)                                                                   *232 LM00285    
      FNO1B          END OF CONDITIONAL                                                           *233 LM00286    
                  END OF CONDITIONAL                                                              *234 LM00287    
      EXT         CHNCOM.(0)                                                                      *235 LM00288    
                  PRMESS.($FRAM$)                                                                 *236 LM00289    
                  PRMESS.($NOTIFY SYSTEMS STAFF$)                                                 *237 LM00290    
                  DORMNT.                                                                         *238 LM00291    
                                                                                                       LM00292    
                  ASUBS CONTAINS INTERNAL FUNCTIONS SEARCH., GNEXT., CPFIL.,                           LM00293    
                  CLS., YES.                                                                           LM00294    
                  AFORM CONTAINS INTERNAL FUNCTIONS MKLNMK., BDLNMK., DATTM.,                          LM00295    
                  FLN1., FLN2., CNT.                                                                   LM00296    
                  AFORM CONTAINS ALL INFORMATION ON THE ACTUAL LINE MARK FORMA                         LM00297    
                                                                                                       LM00298    
                  INSERT FILE ASUBS                                                               *239 LM00299    
                  SEARCH. FINDS THE NEXT 'SUPER LINE MARK' WHOSE                                  *239 LM00001    
                  NAME IS IN THE TABLE FILTAB SET UP DURING                                       *239 LM00002    
                  INITIALIZATION.                                                                 *239 LM00003    
                                                                                                  *239 LM00004    
                  THE SEARCH WILL INCLUDE PRLNMK, THE PRESENT LINE MARK,                          *239 LM00005    
                  IFF PRSSW.E.1B                                                                  *239 LM00006    
                                                                                                  *239 LM00007    
                  INTERNAL FUNCTION (EOFXT)                                                       *240 LM00008    
                  STATEMENT LABEL EOFXT                                                           *241 LM00009    
                  ENTRY TO SEARCH.                                                                *242 LM00010    
                  WHENEVER NAMTYP                                                                 *243 LM00011    
                     WHENEVER .NOT. COPYSW                                                        *244 LM00012    
                     THROUGH SR00A, FOR I=1,1,I.G.FILTAB                                          *245 LM00013    
      SR00A       WHENEVER .NOT. FILFND(I), TRANSFER TO SRP0A                                     *246 LM00014    
                     BFCLOS.(NM1,NM2,GERR)                                                        *247 LM00015    
                     AROPSW=0B                                                                    *248 LM00016    
                     TRANSFER TO EOFXT                                                            *249 LM00017    
                  END OF CONDITIONAL                                                              *250 LM00018    
      SRP0A       CONTINUE                                                                        *251 LM00019    
                  WHENEVER PRSSW.AND.AROPSW, TRANSFER TO SR02A                                    *252 LM00020    
      SR01A       GNEXT.(EOFXT)                                                                   *253 LM00021    
      SR02A       THROUGH SR03A, FOR FILTBP=1,2,FILTBP.G.FILTAB                                   *254 LM00022    
                  PNTR=(FILTBP+1)/2                                                               *255 LM00023    
                  WHENEVER FLN1.(PRLNMK).E.FILTAB(FILTBP)                                         *256 LM00024    
                1    .AND.FLN2.(PRLNMK).E.FILTAB(FILTBP+1)                                        *256 LM00025    
                2    .AND..NOT.FILFND(PNTR)                                                       *256 LM00026    
                  FILFND(PNTR)=1B                                                                 *257 LM00027    
                  FUNCTION RETURN                                                                 *258 LM00028    
      SR03A       END OF CONDITIONAL                                                              *259 LM00029    
                  TRANSFER TO SR01A                                                               *260 LM00030    
                  OTHERWISE                                                                       *261 LM00031    
                  WHENEVER .NOT.COPYSW                                                            *262 LM00032    
                     THROUGH SR00, FOR I=1,1,I.G.FILTAB                                           *263 LM00033    
      SR00           WHENEVER .NOT.FILFND(I), TRANSFER TO SRP0                                    *264 LM00034    
                     BFCLOS.(NM1,NM2,GERR)                                                        *265 LM00035    
                     AROPSW=0B                                                                    *266 LM00036    
                     TRANSFER TO EOFXT                                                            *267 LM00037    
                  END OF CONDITIONAL                                                              *268 LM00038    
      SRP0        CONTINUE                                                                        *269 LM00039    
                  WHENEVER PRSSW.AND.AROPSW, TRANSFER TO SR02                                     *270 LM00040    
      SR01        GNEXT.(EOFXT)                                                                   *271 LM00041    
      SR02        WHENEVER FLN2.(PRLNMK).NE.NM2                                                   *272 LM00042    
                     TRANSFER TO SR01                                                             *273 LM00043    
                  OTHERWISE                                                                       *274 LM00044    
                     THROUGH SR03, FOR FILTBP=1,1,FILTBP.G.FILTAB                                 *275 LM00045    
                  WHENEVER FLN1.(PRLNMK).E.FILTAB(FILTBP)                                         *276 LM00046    
                1    .AND..NOT.FILFND(FILTBP)                                                     *276 LM00047    
                        FILFND(FILTBP)=1B                                                         *277 LM00048    
                        FUNCTION RETURN                                                           *278 LM00049    
      SR03           END OF CONDITIONAL                                                           *279 LM00050    
                  TRANSFER TO SR01                                                                *280 LM00051    
                  END OF CONDITIONAL                                                              *281 LM00052    
                  END OF CONDITIONAL                                                              *282 LM00053    
                  END OF FUNCTION                                                                 *283 LM00054    
                                                                                                       LM00055    
                  GNEXT. FINDS THE NEXT 'SUPER LINE MARK,' READING                                     LM00056    
                  SERIALLY THROUGH THE ARCHIV FILE AND COPYING IT                                      LM00057    
                  INTO THE TEMPORARY FILE IFF COPYSW.E.1B.                                             LM00058    
                  PRLNMK, THE PRESENT LINE MARK, IS COPIED IFF WMRKSW.E.1B                             LM00059    
                                                                                                       LM00060    
                  INTERNAL FUNCTION (EOFXT)                                                       *284 LM00061    
                  STATEMENT LABEL EOFXT                                                           *285 LM00062    
                  ENTRY TO GNEXT.                                                                 *286 LM00063    
                  WHENEVER .NOT. AROPSW                                                           *287 LM00064    
                       BFOPEN.($R$,NM1,NM2,BUF1(BUFZ),BUF2(BUFZ),-0,GERR)                         *288 LM00065    
                       BFREAD.(NM1,NM2,PRLNMK(LMKZ)...LMKZ,FRMER,EOFCT,GERR)                      *289 LM00066    
                       WHENEVER BDLNMK.(PRLNMK)                                                   *290 LM00067    
                       TRANSFER TO FRMER                                                          *291 LM00068    
                       END OF CONDITIONAL                                                         *292 LM00069    
                  AROPSW=1B                                                                       *293 LM00070    
                  FUNCTION RETURN                                                                 *294 LM00071    
                  END OF CONDITIONAL                                                              *295 LM00072    
                  WHENEVER COPYSW .AND. .NOT. TMOPSW                                              *296 LM00073    
                       DELETE.(TM1,TM2,0,OUT)                                                     *297 LM00074    
                       BFOPEN.($W$,TM1,TM2,BUF3(BUFZ),BUF4(BUFZ),BUF5(BUFZ),                      *298 LM00075    
                1        GERR)                                                                    *298 LM00076    
                       TMOPSW=1B                                                                  *299 LM00077    
                  END OF CONDITIONAL                                                              *300 LM00078    
                  WHENEVER COPYSW .AND. WMRKSW                                                    *301 LM00079    
                       BFWRIT.(TM1,TM2,PRLNMK(LMKZ)...LMKZ,GERR)                                  *302 LM00080    
                  END OF CONDITIONAL                                                              *303 LM00081    
                  WHENEVER .NOT. ADJSW                                                            *304 LM00082    
                       AFZ=CNT.(PRLNMK)                                                           *305 LM00083    
                       THROUGH COPY, FOR I=CPBUFZ,CPBUFZ,I.GE.AFZ                                 *306 LM00084    
                            BFREAD.(NM1,NM2,CPBUF(CPBUFZ)...CPBUFZ,                               *307 LM00085    
                1             FRMER,EOFCT,GERR)                                                   *307 LM00086    
                            WHENEVER COPYSW                                                       *308 LM00087    
                                 BFWRIT.(TM1,TM2,CPBUF(CPBUFZ)...CPBUFZ,GERR)                     *309 LM00088    
                            END OF CONDITIONAL                                                    *310 LM00089    
      COPY             CONTINUE                                                                   *311 LM00090    
                       REMN=CPBUFZ-(I-AFZ)                                                        *312 LM00091    
                       BFREAD.(NM1,NM2,CPBUF(REMN)...REMN,                                        *313 LM00092    
                1        FRMER,EOFCT,GERR)                                                        *313 LM00093    
                       WHENEVER COPYSW                                                            *314 LM00094    
                            WHENEVER .NOT. WMRKSW                                                 *315 LM00095    
                                 THROUGH FXT, FOR I = 27, -9, I.L.0                               *316 LM00096    
                                 WHENEVER ((CPBUF (1) .RS. I) .A. 777K) .E. 000K                  *317 LM00097    
                                 CPBUF (1) = CPBUF (1) .V. 003K .LS. I                            *318 LM00098    
                                 TRANSFER TO EFXT                                                 *319 LM00099    
      FXT                        END OF CONDITIONAL                                               *320 LM00100    
      EFXT                  END OF CONDITIONAL                                                    *321 LM00101    
                            BFWRIT.(TM1,TM2,CPBUF(REMN)...REMN,GERR)                              *322 LM00102    
                       END OF CONDITIONAL                                                         *323 LM00103    
                  END OF CONDITIONAL                                                              *324 LM00104    
                  BFREAD.(NM1,NM2,PRLNMK(LMKZ)...LMKZ,EOF,EOFCT,GERR)                             *325 LM00105    
                  WHENEVER BDLNMK.(PRLNMK),TRANSFER TO FRMER                                      *326 LM00106    
                  ADJSW=0B                                                                        *327 LM00107    
                  FUNCTION RETURN                                                                 *328 LM00108    
      EOF         BFCLOS.(NM1,NM2,GERR)                                                           *329 LM00109    
                  AROPSW=0B                                                                       *330 LM00110    
                  TRANSFER TO EOFXT                                                               *331 LM00111    
      FRMER       PRMESS.($ARCHIV FORMAT ERROR IN$,NM1,BL,NM2)                                    *332 LM00112    
                  BFCLOS.($   ALL$,-0,GERR)                                                       *333 LM00113    
                  CHNCOM.(1)                                                                      *334 LM00114    
      GERR        PRNTER.(61K)                                                                    *335 LM00115    
                  CHNCOM.(1)                                                                      *336 LM00116    
                  END OF FUNCTION                                                                 *337 LM00117    
                                                                                                       LM00118    
                  CPFIL.(A,B) COPIES FILE A B INTO THE TEMPORARY FILE.                                 LM00119    
                  CPFIL. ALWAYS MAKES THE LINE MARK NWLNMK AND WRITES                                  LM00120    
                  IT AT THE BEGINNING OF THE ENTRY UNLESS THE FILE IS AN                               LM00121    
                  ARCHIV FILE ALREADY.                                                                 LM00122    
                                                                                                       LM00123    
                  RETURNS 1B IFF SUCCESSFUL                                                            LM00124    
                                                                                                       LM00125    
                  BOOLEAN CPFIL.                                                                  *338 LM00126    
                  INTERNAL FUNCTION(A,B)                                                          *339 LM00127    
                  ENTRY TO CPFIL.                                                                 *340 LM00128    
                  WHENEVER .NOT. MKLNMK.(A,B,CT)                                                  *341 LM00129    
                       FUNCTION RETURN 0B                                                         *342 LM00130    
                  OTHERWISE                                                                       *343 LM00131    
                       WHENEVER .NOT. TMOPSW                                                      *344 LM00132    
                            DELETE.(TM1,TM2,0,OUT)                                                *345 LM00133    
                            BFOPEN.($W$,TM1,TM2,BUF3(BUFZ),BUF4(BUFZ),                            *346 LM00134    
                1             BUF5(BUFZ),GERR)                                                    *346 LM00135    
                            TMOPSW=1B                                                             *347 LM00136    
                       END OF CONDITIONAL                                                         *348 LM00137    
                       BFOPEN.($R$,A,B,BUF6(BUFZ),BUF7(BUFZ),-0,GERR)                             *349 LM00138    
                       FRSTSW=1B                                                                  *350 LM00139    
                       THROUGH CPF01, FOR I=CPBUFZ,CPBUFZ,I.G.CT                                  *351 LM00140    
                            BFREAD.(A,B,CPBUF(CPBUFZ)...CPBUFZ,                                   *352 LM00141    
                1             CPFEF,EOFCT,GERR)                                                   *352 LM00142    
                            WHENEVER BDLNMK.(CPBUF(CPBUFZ-LMKZ)) .AND. FRSTSW                     *353 LM00143    
                                 BFWRIT.(TM1,TM2,NWLNMK(LMKZ)...LMKZ,GERR)                        *354 LM00144    
                            END OF CONDITIONAL                                                    *355 LM00145    
                       FRSTSW=0B                                                                  *356 LM00146    
      CPF01                 BFWRIT.(TM1,TM2,CPBUF(CPBUFZ)...CPBUFZ,GERR)                          *357 LM00147    
                       REMN=CPBUFZ-(I-CT)                                                         *358 LM00148    
                       BFREAD.(A,B,CPBUF(REMN)...REMN,CPFEF,EOFCT,GERR)                           *359 LM00149    
                       WHENEVER  BDLNMK.(CPBUF(REMN-LMKZ)) .AND. FRSTSW                           *360 LM00150    
                            BFWRIT.(TM1,TM2,NWLNMK(LMKZ)...LMKZ,GERR)                             *361 LM00151    
                       END OF CONDITIONAL                                                         *362 LM00152    
                                                                                                       LM00153    
                      ERASE '003' CHARACTER AT END                                                     LM00154    
                                                                                                       LM00155    
                  THROUGH FDLOOP, FOR I = 27,-9,(I.L.0)                                           *363 LM00156    
                       WHENEVER ((CPBUF(1).RS.I).A.777K).E.003K,                                  *364 LM00157    
                1           CPBUF(1) = CPBUF(1) .EX. (3K.LS.I)                                    *364 LM00158    
      FDLOOP      CONTINUE                                                                        *365 LM00159    
                       BFWRIT.(TM1,TM2,CPBUF(REMN)...REMN,GERR)                                   *366 LM00160    
                       BFCLOS.(A,B,GERR)                                                          *367 LM00161    
                       FUNCTION RETURN 1B                                                         *368 LM00162    
                  END OF CONDITIONAL                                                              *369 LM00163    
      CPFEF       PRINT COMMENT $ERROR IN FSTATE.--NOTIFY SYSTEMS STAFF.$                         *370 LM00164    
                  PRINT COMMENT $DORMNT CALLED$                                                   *371 LM00165    
                  DORMNT.                                                                         *372 LM00166    
                  END OF FUNCTION                                                                 *373 LM00167    
                  NORMAL MODE IS INTEGER                                                          *374 LM00168    
                  BOOLEAN COPYSW, PRSSW, WMRKSW, AROPSW, TMOPSW, FRSTSW                           *375 LM00169    
                  BOOLEAN NAMO, ADJSW, NAMTYP                                                     *376 LM00170    
                  VECTOR VALUES BUFZ=432                                                          *377 LM00171    
                  DIMENSION BUF1(432), BUF2(432), BUF3(432), BUF4(432), BUF5(432),                *378 LM00172    
                1   BUF6(432), BUF7(432)                                                          *378 LM00173    
                  DIMENSION CPBUF(432)                                                            *379 LM00174    
                    VECTOR VALUES CPBUFZ=432                                                      *380 LM00175    
                  VECTOR VALUES FILTBZ=16                                                         *381 LM00176    
                  DIMENSION FILTAB(16)                                                            *382 LM00177    
                  BOOLEAN FILFND                                                                  *383 LM00178    
                  DIMENSION FILFND(16)                                                            *384 LM00179    
                                                                                                       LM00180    
                  CLS.(A,B) CLOSES THE TEMPORARY FILE AND RENAMES IT A B                               LM00181    
                                                                                                       LM00182    
                  BOOLEAN CLS.                                                                    *385 LM00183    
                  INTERNAL FUNCTION (A,B)                                                         *386 LM00184    
                  ENTRY TO CLS.                                                                   *387 LM00185    
                  WHENEVER TMOPSW                                                                 *388 LM00186    
                       BFCLOS.(TM1,TM2,GERR)                                                      *389 LM00187    
                       TMOPSW=0B                                                                  *390 LM00188    
                       DIMENSION FNM(2)                                                           *391 LM00189    
                       FNM(0)=A                                                                   *392 LM00190    
                       FNM(1)=B                                                                   *393 LM00191    
                       FSTATE.(A,B,FSBUF(8)...8,NFND)                                             *394 LM00192    
                         EQUIVALENCE (MODE,FSBUF(7))                                              *395 LM00193    
                       MODE=MODE.A.134K                                                           *396 LM00194    
      CL01        DELETE.(A,B,0,NDEL1)                                                            *397 LM00195    
                  CHFILE.(TM1,TM2,-0,A,B)                                                         *398 LM00196    
                       WHENEVER MODE.NE.000K .AND. KEY.NE.$    XT$                                *399 LM00197    
                            CHFILE.(A,B,MODE,-0,-0)                                               *400 LM00198    
                       MODEP = (OCRBC.(MODE).A.777777K).V.575757K6                                *401 LM00199    
                       PRMESS.(A,BL,B,BL,$CREATED IN '$,MODEP,$' MODE.$)                          *402 LM00200    
                       END OF CONDITIONAL                                                         *403 LM00201    
                       FUNCTION RETURN 1B                                                         *404 LM00202    
      NDEL1            FUNCTION RETURN 0B                                                         *405 LM00203    
                  OTHERWISE                                                                       *406 LM00204    
                       FUNCTION RETURN 0B                                                         *407 LM00205    
                  END OF CONDITIONAL                                                              *408 LM00206    
      NFND        MODE=000K                                                                       *409 LM00207    
                  TRANSFER TO CL01                                                                *410 LM00208    
                  END OF FUNCTION                                                                 *411 LM00209    
                                                                                                       LM00210    
                                                                                                       LM00211    
                  YES. READS A LINE AND RETURNS 1B IFF IT IS 'YES'                                     LM00212    
                                                                                                       LM00213    
                  BOOLEAN YES.                                                                    *412 LM00214    
                  INTERNAL FUNCTION                                                               *413 LM00215    
                  ENTRY TO YES.                                                                   *414 LM00216    
                  RDFLXC.(YESNO,6)                                                                *415 LM00217    
                  WHENEVER YESNO.E.$YES   $                                                       *416 LM00218    
                       FUNCTION RETURN 1B                                                         *417 LM00219    
                  OTHERWISE                                                                       *418 LM00220    
                       FUNCTION RETURN 0B                                                         *419 LM00221    
                  END OF CONDITIONAL                                                              *420 LM00222    
                  END OF FUNCTION                                                                 *421 LM00223    
                                                                                                       LM00224    
                  DELT. DELETES A FILE AND TELLS YOU ABOUT IT.                                         LM00225    
                  RETURNS 1B IFF SUCCESSFUL.                                                           LM00226    
                                                                                                       LM00227    
                  BOOLEAN DELT.                                                                   *422 LM00228    
                  INTERNAL FUNCTION (A,B)                                                         *423 LM00229    
                  ENTRY TO DELT.                                                                  *424 LM00230    
                  FNM(0)=A                                                                        *425 LM00231    
                  FNM(1)=B                                                                        *426 LM00232    
                  DELETE.(A,B,0,NOTDEL)                                                           *427 LM00233    
                       PRMESS.(A,BL,B,$ DELETED.$)                                                *428 LM00234    
                       FUNCTION RETURN 1B                                                         *429 LM00235    
      NOTDEL      PRMESS.(A,BL,B,$ NOT DELETED.$)                                                 *430 LM00236    
                  FUNCTION RETURN 0B                                                              *431 LM00237    
                  END OF FUNCTION                                                                 *432 LM00238    
                  INSERT FILE AFORM                                                               *433 LM00300    
                                                                                                  *433 LM00001    
                      THE FORMAT OF 'SUPER LINE MARK' IN ASCII ARCHIV FILES                       *433 LM00002    
                      IS DEFINED AS FOLLOWS:                                                      *433 LM00003    
                      FF NL NL NL DEL DEL DEL DEL                                                 *433 LM00004    
                      NAME1 SP SP NAME2 SP SP MM/DD/YY SP SP                                      *433 LM00005    
                      HHMM.M SP SP ZZZZZZ DEL DEL DEL DEL NL NL NL NL                             *433 LM00006    
                      TOTALLING 14 WORDS.  ZZZZZZ IS THE WORD COUNT.                              *433 LM00007    
                      THE FOLLOWING INTERNAL FUNCTIONS DIDDLE                                     *433 LM00008    
                      WITH THIS INFO AND ARE CALLED BY THE REST OF THE                            *433 LM00009    
                      ARCHIV ROUTINES.                                                            *433 LM00010    
                           D.R. WIDRIG  APRIL 1967                                                *433 LM00011    
                                                                                                  *433 LM00012    
                      MKLNMK.(A,B,CT) MAKES A 'SUPER LINE MARK' FOR 'A B'                         *433 LM00013    
                      IN NWLNMK AND SET 'CT' = FILE SIZE. THE ROUTINE                             *433 LM00014    
                      RETURNS 1B IF OK, 0B IF FILE DOES NOT EXIST.                                *433 LM00015    
                                                                                                  *433 LM00016    
                  INTERNAL FUNCTION (A,B,CT)                                                      *434 LM00017    
                  ENTRY TO MKLNMK.                                                                *435 LM00018    
                  BOOLEAN MKLNMK.                                                                 *436 LM00019    
                  FSTATE.(A,B,CT...1,NTFND)                                                       *437 LM00020    
                  RCONV.(BZEL.(DEFBC.(CT)),NWLNMK(4),NWLNMK(3))                                   *438 LM00021    
                                                                                                       LM00022    
                      PREPARE LINE MARK                                                                LM00023    
                                                                                                       LM00024    
                  VECTOR VALUES NWLNMK(13) = 177 177 011 011K, 014 012 012 012K                   *439 LM00025    
                  VECTOR VALUES NWLNMK(1) = 012 012 012 012K, 177 177 177 177K                    *440 LM00026    
                  LCONV.(A,NWLNMK(12),NWLNMK(11))                                                 *441 LM00027    
                  LCONV.(B,NWLNMK(10),NWLNMK(9))                                                  *442 LM00028    
                                                                                                       LM00029    
                      GET TIME OF CREATION, IF NOT ALREADY DONE                                        LM00030    
                                                                                                       LM00031    
                  VECTOR VALUES GOTTM = 0B                                                        *443 LM00032    
                  WHENEVER .NOT. GOTTM                                                            *444 LM00033    
                       GOTTM = 1B                                                                 *445 LM00034    
                       GETTIM.(PDATE,PTIME)                                                       *446 LM00035    
                       RCONV.(PTIME,NWLNMK(6),NWLNMK(5))                                          *447 LM00036    
                       TEMP1 = (PDATE.A.7777K8) .V. $00/00/$ .V.                                  *448 LM00037    
                1           ((PDATE.RS.6).A.7777K2)                                               *448 LM00038    
                       LCONV.(TEMP1,NWLNMK(8),NWLNMK(7))                                          *449 LM00039    
                       NWLNMK(7) = (NWLNMK(7).A.777777K6) .V.                                     *450 LM00040    
                1           TSSASC.((PDATE.RS.6).A.77K).LS.9 .V.                                  *450 LM00041    
                2           TSSASC.(PDATE.A.77K)                                                  *450 LM00042    
                  END OF CONDITIONAL                                                              *451 LM00043    
                  FUNCTION RETURN 1B                                                              *452 LM00044    
                                                                                                       LM00045    
      NTFND       FUNCTION RETURN 0B                                                              *453 LM00046    
                  END OF FUNCTION                                                                 *454 LM00047    
                                                                                                       LM00048    
                      BDLNMK.(LMK) RETURNS 1B IF LMK(LMKZ)...LMKZ                                      LM00049    
                      IS NOT A 'SUPER LINE MARK', 0B IF IT IS.                                         LM00050    
                                                                                                       LM00051    
                  BOOLEAN BDLNMK.                                                                 *455 LM00052    
                  INTERNAL FUNCTION BDLNMK.(LMK)=(LMK(14) .NE. NWLNMK(14)) .OR.                   *456 LM00053    
                1      (LMK(13) .NE. NWLNMK(13)) .OR. (LMK(2) .NE. NWLNMK(2))                     *456 LM00054    
                2      .OR. (LMK(1) .NE. NWLNMK(1))                                               *456 LM00055    
                                                                                                       LM00056    
                      DATTM.(LMK) RETURNS THE DATE AND TIME OF ARCHIVING                               LM00057    
                      OF THE FILE HEADED BY LMK(LMKZ)...LMKZ IN FILE SYSTEM                            LM00058    
                      FORMAT.                                                                          LM00059    
                                                                                                       LM00060    
                  INTERNAL FUNCTION (LMK)                                                         *457 LM00061    
                  ENTRY TO DATTM.                                                                 *458 LM00062    
                  TEMP1 = CONVL.(LMK(8),LMK(7))                                                   *459 LM00063    
                  TEMP1 = (TEMP1.A.7777K8) .V. ((TEMP1.LS.6).A.7777K4)                            *460 LM00064    
                  TEMP1 = TEMP1 .V. (CONVR.(LMK(8),LMK(7)).A.7777K)                               *461 LM00065    
                  TEMP2 = CONVR.(LMK(6),LMK(5))                                                   *462 LM00066    
                                                                                                       LM00067    
                      NOW, CONVERT IBM BCD INTO FILE SYSTEM FORMAT                                     LM00068    
                                                                                                       LM00069    
                  FUNCTION RETURN (BCDEC.(TEMP1.A.7777K).LS. 27) .V.                              *463 LM00070    
                1      (BCDEC.((TEMP1.RS.12).A.7777K).LS.18) .V.                                  *463 LM00071    
                2      (BCDEC.(TEMP1.RS.24).LS.23) .V.                                            *463 LM00072    
                3      (BCDEC.(TEMP2.RS.24)*3600 +                                                *463 LM00073    
                4      BCDEC.((TEMP2.RS.12).A.7777K)*60 +                                         *463 LM00074    
                5      BCDEC.(TEMP2.A.77K)*6)                                                     *463 LM00075    
                  END OF FUNCTION                                                                 *464 LM00076    
                                                                                                       LM00077    
                      INTERNAL FUNCTIONS TO GET NAMES AND COUNTS                                       LM00078    
                                                                                                       LM00079    
                  INTERNAL FUNCTION CNT.(LMK) = BCDEC.(CONVR.(LMK(4),LMK(3)))                     *465 LM00080    
                  INTERNAL FUNCTION FLN1.(LMK) = CONVL.(LMK(12),LMK(11))                          *466 LM00081    
                  INTERNAL FUNCTION FLN2.(LMK) = CONVL.(LMK(10),LMK(9))                           *467 LM00082    
                                                                                                       LM00083    
                      PTLNMK. PRINTS OUT THE CURRENT 'SUPER LINE MARK'                                 LM00084    
                                                                                                       LM00085    
                  INTERNAL FUNCTION                                                               *468 LM00086    
                  ENTRY TO PTLNMK.                                                                *469 LM00087    
                  PRMESS. (CONVL.(PRLNMK(12),PRLNMK(11)), BL,                                     *470 LM00088    
                1      CONVL.(PRLNMK(10),PRLNMK(9)), BL,                                          *470 LM00089    
                2      CONVL.(PRLNMK(8),PRLNMK(7)),                                               *470 LM00090    
                3      CONVR.(PRLNMK(8),PRLNMK(7)) .LS. 24 .V. 60575757K,                         *470 LM00091    
                4      CONVR.(PRLNMK(6),PRLNMK(5)), BL,                                           *470 LM00092    
                5      CONVR.(PRLNMK(4),PRLNMK(3)) )                                              *470 LM00093    
                  FUNCTION RETURN                                                                 *471 LM00094    
                  END OF FUNCTION                                                                 *472 LM00095    
                                                                                                       LM00096    
                  DIMENSION PRLNMK(14),NWLNMK(14)                                                 *473 LM00097    
                  VECTOR VALUES LMKZ = 14                                                         *474 LM00098    
                  DIMENSION FSBUF (432)                                                           *475 LM00099    
                                                                                                       LM00100    
                      UTILITY ROUTINES FOR ASCII-BCD AND BCD-ASCII                                     LM00101    
                      NOT VERY PLEASANT BUT WIDRIG GETS LAZY SOMETIMES                                 LM00102    
                                                                                                       LM00103    
                                                                                                       LM00104    
                      THIS ROUTINE CONVERTS 6 BCD CHARS TO 8 ASCII                                     LM00105    
                      RIGHT-ADJUSTED WITH LEADING BLANKS                                               LM00106    
                                                                                                       LM00107    
                  INTERNAL FUNCTION (ARG1,ARG2,ARG3)                                              *476 LM00108    
                  ENTRY TO RCONV.                                                                 *477 LM00109    
                  ARG2 = 040 040K6 .V. (TSSASC.(ARG1.RS.30).LS.9) .V.                             *478 LM00110    
                1      TSSASC.((ARG1.RS.24).A.77K)                                                *478 LM00111    
                  ARG3 = (TSSASC.((ARG1.RS.18).A.77K).LS.27)                                      *479 LM00112    
                1      .V. (TSSASC.((ARG1.RS.12).A.77K).LS.18)                                    *479 LM00113    
                2      .V. (TSSASC.((ARG1.RS.6).A.77K) .LS. 9)                                    *479 LM00114    
                3      .V. TSSASC.(ARG1.A.77K)                                                    *479 LM00115    
                  FUNCTION RETURN                                                                 *480 LM00116    
                  END OF FUNCTION                                                                 *481 LM00117    
                                                                                                       LM00118    
                      THIS ROUTINE CONVERTS 6 BCD CHARS TO 8 ASCII                                     LM00119    
                      LEFT-ADJUSTED WITH TRAILING BLANKS                                               LM00120    
                                                                                                       LM00121    
                  INTERNAL FUNCTION (ARG1,ARG2,ARG3)                                              *482 LM00122    
                  ENTRY TO LCONV.                                                                 *483 LM00123    
                  ARG2 = (TSSASC.((ARG1.RS.30)).LS.27)                                            *484 LM00124    
                1      .V. (TSSASC.((ARG1.RS.24).A.77K).LS.18)                                    *484 LM00125    
                2      .V. (TSSASC.((ARG1.RS.18).A.77K).LS.9)                                     *484 LM00126    
                3      .V. TSSASC.((ARG1.RS.12).A.77K)                                            *484 LM00127    
                  ARG3 = 040 040K .V. (TSSASC.((ARG1.RS.6).A.77K).LS.27) .V.                      *485 LM00128    
                1      (TSSASC.(ARG1.A.77K).LS.18)                                                *485 LM00129    
                  FUNCTION RETURN                                                                 *486 LM00130    
                  END OF FUNCTION                                                                 *487 LM00131    
                                                                                                       LM00132    
                      THIS ROUTINE CONVERTS THE RIGHT 6 ASCII CHARS                                    LM00133    
                      INTO 6 BCD CHARS                                                                 LM00134    
                                                                                                       LM00135    
                  INTERNAL FUNCTION (ARG2,ARG3)                                                   *488 LM00136    
                  ENTRY TO CONVR.                                                                 *489 LM00137    
                  FUNCTION RETURN (ASCTSS.(ARG2.RS.9).LS.30) .V. (ASCTSS.(ARG2).LS.24) .V.        *490 LM00138    
                1      (ASCTSS.(ARG3.RS.27).LS.18) .V.                                            *490 LM00139    
                2      (ASCTSS.(ARG3.RS.18).LS.12) .V.                                            *490 LM00140    
                3      (ASCTSS.(ARG3.RS.9).LS.6) .V. ASCTSS.(ARG3)                                *490 LM00141    
                  END OF FUNCTION                                                                 *491 LM00142    
                                                                                                       LM00143    
                      THIS ROUTINE CONVERTS THE RIGHT 6 ASCII CHARS                                    LM00144    
                      INTO 6 BCD CHARS                                                                 LM00145    
                                                                                                       LM00146    
                  INTERNAL FUNCTION (ARG2,ARG3)                                                   *492 LM00147    
                  ENTRY TO CONVL.                                                                 *493 LM00148    
                  FUNCTION RETURN (ASCTSS.(ARG2.RS.27).LS.30).V.(ASCTSS.(ARG2.RS.18).LS.24)       *494 LM00149    
                1      .V. (ASCTSS.(ARG2.RS.9).LS.18)                                             *494 LM00150    
                2      .V. (ASCTSS.(ARG2) .LS. 12)                                                *494 LM00151    
                3      .V. (ASCTSS.(ARG3.RS.27).LS.6)                                             *494 LM00152    
                4      .V. (ASCTSS.(ARG3.RS.18))                                                  *494 LM00153    
                  END OF FUNCTION                                                                 *495 LM00154    
                  END OF PROGRAM                                                                  *496 LM00301    
       THE FOLLOWING NAMES HAVE OCCURRED ONLY ONCE IN THIS PROGRAM.     
       THEY WILL ALL BE ASSIGNED TO THE SAME LOCATION, AND  
       COMPILATION WILL CONTINUE.   
      SPC   
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   15356 TRANSFER VECTOR LENGTH  00035 PROGRAM BEGINS    10512
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ADJSW  01006   2        CPF01  00056   4        FORGET 00756   4        NTFND  00764   4        SR03   00056   4  
      AFZ    01007   1        CPFEF  00750   4        FRMER  00757   4        NW1    10231   1        SRP0A  00775   4  
      ANAM   00061 A 1        CR     07626 A 1        FRSTSW 10216   2        NW2    10232   1        SRP0   00776   4  
      AROPSW 01010   2        CT     07627   1        FSBUF  00745 A 1        NWLNMK 10251 A 1        TB01   00777   4  
      BL     01011 A 1        DATE   07630   1        FXT    00056   4        OUT    00765   4        TEMP1  10276   1  
      BUF1   01672 A 1        DELST1 07775 A 1        GERR   00760   4        PDATE  10252   1        TEMP2  10277   1  
      BUF2   02553 A 1        DELST2 10142 A 1        GOTNXT 10217   2        PNTR   10253   1        TFIL   00064 A 1  
      BUF3   03434 A 1        DELST  10143   1        GOTTM  10220 A 2        PRLNMK 10272 A 1        TFNF   01000   4  
      BUF4   04315 A 1        DELSTZ 10144 A 1        IN00   00056   4        PRSSW  10273   2        TIME   10300   1  
      BUF5   05176 A 1        DL01   00751   4        IN01   00056   4        PTIME  10274   1        TM1    00064   1  
      BUF6   06057 A 1        EFXT   00752   4        I      10221   1        REMN   10275   1        TM2    00063   1  
      BUF7   06740 A 1        EOFCT  10145   1        JI     10222   1        REN    00766   4        TMOPSW 10301   2  
      BUFZ   06741 A 1        EOF    00753   4        JJ     10223   1        RP01   00767   4        TOFF   10302 A 2  
      CL01   00746   4        EXT    00754   4        KEY    10224   1        RP02   00770   4        TON    10303 A 2  
      CM01   00747   4        FDLOOP 00056   4        LMKZ   10225 A 1        RP03   00056   4        TYP    10304   1  
      CM03A  00056   4        FILFND 10166 A 2        MODEP  10226   1        RPD01  00056   4        UP01   01001   4  
      CM03   00056   4        FILTAB 10207 A 1        MODE   00736   1        SPC    00056   4        UP02   01002   4  
      CMP1A  00056   4        FILTBP 10210   1        NAMO   10227   2        SR00A  00056   4        WHBUF  10315 A 1  
      CMP1B  00056   4        FILTBZ 10211 A 1        NAMTYP 10230   2        SR00   00056   4        WMRKSW 10316   2  
      CNM2   06742   1        FIRST  10212 A 2        NDEL1  00761   4        SR01A  00771   4        XT01   01003   4  
      COPY   00056   4        FN01A  00056   4        NFND   00762   4        SR01   00772   4        XT02   01004   4  
      COPYSW 06743   2        FNF    00755   4        NM1    00061   1        SR02A  00773   4        XT03   01005   4  
      CPBUF  07624 A 1        FNM    10215 A 1        NM2    00060   1        SR02   00774   4        YESNO  10317   1  
      CPBUFZ 07625 A 1        FNO1B  00056   4        NOTDEL 00763   4        SR03A  00056   4                          
0FUNCTION DICTIONARY    
      ASCTSS 00000   1        BCDEC  00001   1        BFCLOS 00002   1        BFOPEN 00003   1        BFREAD 00004   1  
      BFWRIT 00005   1        BZEL   00006   1        CHFILE 00007   1        CHNCOM 00010   1        COMARG 00011   1  
      DEFBC  00012   1        DELETE 00013   1        DORMNT 00014   1        EXIT   00015   1        FSTATE 00016   1  
      GETTIM 00017   1        GETTM  00020   1        .PCOMT 00021   1        .SETUP 00022   1        OCRBC  00023   1  
      OFFON  00024   1        OFF    00025   1        PRMESA 00026   1        PRMESS 00027   1        PRNTER 00030   1  
      RDFLXC 00031   1        SETBRK 00032   1        TSSASC 00033   1        WHOAMI 00034   1        BDLNMK 00035   2  
      CLS    00036   2        CNT    00037   1        CONVL  00040   1        CONVR  00041   1        CPFIL  00042   2  
      DATTM  00043   1        DELT   00044   2        FLN1   00045   1        FLN2   00046   1        GNEXT  00047   1  
      LCONV  00050   1        MKLNMK 00051   2        PTLNMK 00052   1        RCONV  00053   1        SEARCH 00054   1  
      YES    00055   2                                                                                                  
0ABSOLUTE CONSTANTS     
 10346 +000000040040     10354 +040040000000     10336 +000000000036     10351 +000060575757     10332 +000000000022    
 10333 +000000000027     10344 +000000007020     10334 +000000000030     10340 +000000000074     10331 +000000000014    
 10345 +000000007777     10353 +000077770000     10511 -377777000000     10352 +000061000061     10510 -377700000000    
 10347 +000000777700     10370 +254325632524     10444 -204546636024     10367 +252433606060     10434 -202425432563    
 10503 -302562606060     10326 +000000000006     10355 +146044462425     10366 +246031456014     10364 +235125216325    
 10431 -175757000000     10350 +000000777777     10342 +000000000134     10447 -206060214343     10427 -116031456060    
 10471 -236025515146     10437 -202646514421     10343 +000000000777     10330 +000000000011     10335 +000000000033    
 10501 -266060606060     10430 -116060606060     10372 +262660606060     10411 -046260626321     10462 -206270626325    
 10413 -054663312670     10373 +265121446060     10415 -056057575757     10420 -066445246031     10445 -204546636026    
 10375 +276444254563     10406 -033124602151     10470 -236021606521     10441 -204040604546     10401 +377777777777    
 10477 -244724216325     10455 -206060606064     10464 -206346605757     10432 -202124242524     10453 -206060606051    
 10450 -206060605124     10456 -206060606067     10457 -206060606763     10365 +242543256325     10452 -206060606024    
 10446 -205454546060     10421 -066463476463     10463 -206321224325     10374 +276024464525     10412 -054663303145    
 10337 +000000000061     10377 +316260464273     10440 -203162606330     10400 +336060606060     10376 +302560464324    
 10475 -242425246063     10472 -236031452343     10360 +216525604546     10465 -207046646030     10451 -206060606023    
 10327 +000000000010     10476 -242562636060     10423 -072560512550     10506 -336051256370     10410 -044743256325    
 10473 -236031452346     10404 -032162636021     10325 +000000000005     10324 +000000000004     10466 -224664512325    
 10474 -236260606060     10425 -112764442545     10417 -066427306021     10414 -054663602545     10323 +000000000003    
 10322 +000000000002     10460 -206060634645     10454 -206060606063     10461 -206063462626     10320 +000000000000    
 10426 -113360606060     10443 -204325636325     10435 -202631516263     10467 -232524602270     10361 +225125653121    
 10433 -202225602122     10504 -306260442170     10356 +214343604225     10422 -072421632560     10505 -336046516064    
 10502 -276351212363     10424 -112547432123     10405 -032563257360     10416 -056373602425     10371 +257360475131    
 10507 -336063212243     10363 +234644223145     10402 -022570601360     10500 -263025512560     10403 -030260333333    
 10436 -202643016026     10407 -040160454402     10442 -204225706045     10357 +215123303165     10341 +000000000077    
 10321 +000000000001     10362 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00746 TXL -313406013401       00747 TXL -311132011132       00750 TXL -313315013304       00751 TXL -311340011336      
 00752 TXL -312705012705       00753 TXL -312744012740       00754 TXL -312173012171       00755 TXL -312062012060      
 00756 TXL -311226011222       00757 TXL -312757012747       00760 TXL -312771012767       00761 TXL -313463013461      
 00762 TXL -313470013466       00763 TXL -313606013577       00764 TXL -313755013753       00765 TXL -310562010560      
 00766 TXL -312060012055       00767 TXL -311465011463       00770 TXL -311554011552       00771 TXL -312250012246      
 00772 TXL -312355012353       00773 TXL -312262012250       00774 TXL -312361012355       00775 TXL -312241012241      
 00776 TXL -312346012346       00777 TXL -311246011243       01000 TXL -311326011325       01001 TXL -311744011742      
 01002 TXL -312034012032       01003 TXL -311367011365       01004 TXL -311424011422       01005 TXL -311430011424      
0PROGRAM    
                 W'R COMARG.(1).A.77K.E.77K                                         001  LM00015
 10512 TSX +0 07400 4 00022    10513 TSX +0 07400 4 00011    10514 TXH +3 00000 0 10321    10515 STO +0 60100 0 15352   
 10516 CAL -0 50000 0 15352    10517 ANA -0 32000 0 10341    10520 SLW +0 60200 0 15352    10521 CLA +0 50000 0 15352   
 10522 SUB +0 40200 0 10341    10523 TNZ -0 10000 0 10562                                                               
                      PRMESS.( $ARCHIV KEY NM1 NM2 FL1 FL2 ...$)                    002  LM00016
 10524 TSX +0 07400 4 00027    10525 TXH +3 00000 0 10357    10526 TXH +3 00000 0 10442    10527 TXH +3 00000 0 10407   
 10530 TXH +3 00000 0 10436    10531 TXH +3 00000 0 10403                                                               
                   PRMESS.($WHERE KEY = COMBIN, TABLE, PRINT, DELETE, REPLAC$)      003  LM00017
 10532 TSX +0 07400 4 00027    10533 TXH +3 00000 0 10500    10534 TXH +3 00000 0 10402    10535 TXH +3 00000 0 10363   
 10536 TXH +3 00000 0 10507    10537 TXH +3 00000 0 10371    10540 TXH +3 00000 0 10416    10541 TXH +3 00000 0 10405   
 10542 TXH +3 00000 0 10424                                                                                             
                      PRMESS.($XTRACT, OR UPDATE$)                                  004  LM00018
 10543 TSX +0 07400 4 00027    10544 TXH +3 00000 0 10502    10545 TXH +3 00000 0 10505    10546 TXH +3 00000 0 10422   
                      PRMESS.($ALL KEYS MAY BE ABBREVIATED BY FIRST LETTER.$)       005  LM00019
 10547 TSX +0 07400 4 00027    10550 TXH +3 00000 0 10356    10551 TXH +3 00000 0 10504    10552 TXH +3 00000 0 10433   
 10553 TXH +3 00000 0 10361    10554 TXH +3 00000 0 10467    10555 TXH +3 00000 0 10435    10556 TXH +3 00000 0 10443   
 10557 TXH +3 00000 0 10426                                                                                             
      OUT             CHNCOM.(0)                                                    006  LM00020
 10560 TSX +0 07400 4 00010    10561 TXH +3 00000 0 10320                                                               
                 E'L                                                                007  LM00021
                 KEY=COMARG.(1)                                                     008  LM00022
 10562 TSX +0 07400 4 00011    10563 TXH +3 00000 0 10321    10564 STO +0 60100 0 10224                                 
                 W'R KEY .E. $  TOFF$                                               009  LM00023
 10565 CLA +0 50000 0 10224    10566 SUB +0 40200 0 10461    10567 TNZ -0 10000 0 10574                                 
                   TOFF = 1B                                                        010  LM00024
 10570 CLA +0 50000 0 10321    10571 STO +0 60100 0 10302                                                               
                   BOOLEAN TOFF                                                     011  LM00025
                   V'S TOFF = 0B                                                    012  LM00026
 10302     +0 00000 0 00000                                                                                             
                   KEY = $     T$                                                   013  LM00027
 10572 CLA +0 50000 0 10454    10573 STO +0 60100 0 10224                                                               
                 E'L                                                                014  LM00028
                 W'R KEY .E. $   TON$                                               015  LM00029
 10574 CLA +0 50000 0 10224    10575 SUB +0 40200 0 10460    10576 TNZ -0 10000 0 10603                                 
                    TON = 1B                                                        016  LM00030
 10577 CLA +0 50000 0 10321    10600 STO +0 60100 0 10303                                                               
                    KEY = $     T$                                                  017  LM00031
 10601 CLA +0 50000 0 10454    10602 STO +0 60100 0 10224                                                               
                    BOOLEAN TON                                                     018  LM00032
                     V'S TON = 0B                                                   019  LM00033
 10303     +0 00000 0 00000                                                                                             
                 E'L                                                                020  LM00034
                 NM1=COMARG.(2)                                                     021  LM00035
 10603 TSX +0 07400 4 00011    10604 TXH +3 00000 0 10322    10605 STO +0 60100 0 00061                                 
                 NM2=COMARG.(3)                                                     022  LM00036
 10606 TSX +0 07400 4 00011    10607 TXH +3 00000 0 10323    10610 STO +0 60100 0 00060                                 
                 SETBRK.(OUT)                                                       023  LM00037
 10611 TSX +0 07400 4 00032    10612 TXH +3 00000 0 00765                                                               
                 GETTM.(DATE,TIME)                                                  024  LM00039
 10613 TSX +0 07400 4 00020    10614 TXH +3 00000 0 07630    10615 TXH +3 00000 0 10300                                 
                   D'N ANAM(2)                                                      025  LM00040
                   EQUIVALENCE (NM1,ANAM(0)), (NM2,ANAM(1))                         026  LM00041
                 W'R NM1.A.77K.E.77K .OR. NM2.A.77K.E.77K                           027  LM00042
 10616 CAL -0 50000 0 00060    10617 ANA -0 32000 0 10341    10620 SLW +0 60200 0 15352    10621 CLA +0 50000 0 15352   
 10622 SUB +0 40200 0 10341    10623 TZE +0 10000 0 10632    10624 CAL -0 50000 0 00061    10625 ANA -0 32000 0 10341   
 10626 SLW +0 60200 0 15352    10627 CLA +0 50000 0 15352    10630 SUB +0 40200 0 10341    10631 TNZ -0 10000 0 10641   
                      PRMESS.($NOT ENOUGH ARGUMENTS$)                               028  LM00043
 10632 TSX +0 07400 4 00027    10633 TXH +3 00000 0 10414    10634 TXH +3 00000 0 10417    10635 TXH +3 00000 0 10425   
 10636 TXH +3 00000 0 10474                                                                                             
                      CHNCOM.(0)                                                    029  LM00044
 10637 TSX +0 07400 4 00010    10640 TXH +3 00000 0 10320                                                               
                 E'L                                                                030  LM00045
                 W'R NM2.E.$SOURCE$.OR.NM2.E.$ARCHIV$                               031  LM00050
 10641 CLA +0 50000 0 00060    10642 SUB +0 40200 0 10357    10643 TZE +0 10000 0 10647    10644 CLA +0 50000 0 00060   
 10645 SUB +0 40200 0 10466    10646 TNZ -0 10000 0 10755                                                               
                    NAMTYP=1B                                                       032  LM00051
 10647 CLA +0 50000 0 10321    10650 STO +0 60100 0 10230                                                               
                    T'H IN00, FOR FILTAB=0,2,COMARG.(FILTAB+4).A.77K.E.77K          033  LM00052
                1      .OR.FILTAB.E.FILTBZ                                          033  LM00053
 10651 CLA +0 50000 0 10320    10652 STO +0 60100 0 10207    10653 TRA +0 02000 0 10657    10654 CLA +0 50000 0 10207   
 10655 ADD +0 40000 0 10322    10656 STO +0 60100 0 10207    10657 CLA +0 50000 0 10207    10660 SUB +0 40200 0 10211   
 10661 TZE +0 10000 0 10754    10662 CLA +0 50000 0 10207    10663 ADD +0 40000 0 10324    10664 STO +0 60100 0 15352   
 10665 TSX +0 07400 4 00011    10666 TXH +3 00000 0 15352    10667 STO +0 60100 0 15352    10670 CAL -0 50000 0 15352   
 10671 ANA -0 32000 0 10341    10672 SLW +0 60200 0 15352    10673 CLA +0 50000 0 15352    10674 SUB +0 40200 0 10341   
 10675 TZE +0 10000 0 10754                                                                                             
                    FILTAB(FILTAB+1)=COMARG.(FILTAB+4)                              034  LM00054
 10676 CLA +0 50000 0 10207    10677 ADD +0 40000 0 10324    10700 STO +0 60100 0 15352    10701 TSX +0 07400 4 00011   
 10702 TXH +3 00000 0 15352    10703 STO +0 60100 0 15352    10704 CLA +0 50000 0 10207    10705 ADD +0 40000 0 10321   
 10706 PAX +0 73400 1 00000    10707 CLA +0 50000 0 15352    10710 STO +0 60100 1 10207                                 
                    W'R COMARG.(FILTAB+5).A.77K.E.77K                               035  LM00055
 10711 CLA +0 50000 0 10207    10712 ADD +0 40000 0 10325    10713 STO +0 60100 0 15352    10714 TSX +0 07400 4 00011   
 10715 TXH +3 00000 0 15352    10716 STO +0 60100 0 15352    10717 CAL -0 50000 0 15352    10720 ANA -0 32000 0 10341   
 10721 SLW +0 60200 0 15352    10722 CLA +0 50000 0 15352    10723 SUB +0 40200 0 10341    10724 TNZ -0 10000 0 10740   
                    PRMESS.( $LAST ARGUMENT INCOMPLETE, RETYPE REQUEST$)            036  LM00056
 10725 TSX +0 07400 4 00027    10726 TXH +3 00000 0 10404    10727 TXH +3 00000 0 10425    10730 TXH +3 00000 0 10473   
 10731 TXH +3 00000 0 10410    10732 TXH +3 00000 0 10506    10733 TXH +3 00000 0 10423    10734 TXH +3 00000 0 10476   
                    CHNCOM.(0)                                                      037  LM00057
 10735 TSX +0 07400 4 00010    10736 TXH +3 00000 0 10320                                                               
                    O'E                                                             038  LM00058
 10737 TRA +0 02000 0 10753                                                                                             
                       FILTAB(FILTAB+2)=COMARG.(FILTAB+5)                           039  LM00059
 10740 CLA +0 50000 0 10207    10741 ADD +0 40000 0 10325    10742 STO +0 60100 0 15352    10743 TSX +0 07400 4 00011   
 10744 TXH +3 00000 0 15352    10745 STO +0 60100 0 15352    10746 CLA +0 50000 0 10207    10747 ADD +0 40000 0 10322   
 10750 PAX +0 73400 1 00000    10751 CLA +0 50000 0 15352    10752 STO +0 60100 1 10207                                 
                    E'L                                                             040  LM00060
      IN00          CONTINUE                                                        041  LM00061
 10753 TRA +0 02000 0 10654                                                                                             
                 O'E                                                                042  LM00062
 10754 TRA +0 02000 0 11020                                                                                             
                    NAMTYP=0B                                                       043  LM00063
 10755 CLA +0 50000 0 10320    10756 STO +0 60100 0 10230                                                               
                    T'H IN01, FOR FILTAB=0,1,COMARG.(FILTAB+4).A.77K.E.77K          044  LM00064
                1      .OR. FILTAB.E.FILTBZ                                         044  LM00065
 10757 CLA +0 50000 0 10320    10760 STO +0 60100 0 10207    10761 TRA +0 02000 0 10765    10762 CLA +0 50000 0 10207   
 10763 ADD +0 40000 0 10321    10764 STO +0 60100 0 10207    10765 CLA +0 50000 0 10207    10766 SUB +0 40200 0 10211   
 10767 TZE +0 10000 0 11020    10770 CLA +0 50000 0 10207    10771 ADD +0 40000 0 10324    10772 STO +0 60100 0 15352   
 10773 TSX +0 07400 4 00011    10774 TXH +3 00000 0 15352    10775 STO +0 60100 0 15352    10776 CAL -0 50000 0 15352   
 10777 ANA -0 32000 0 10341    11000 SLW +0 60200 0 15352    11001 CLA +0 50000 0 15352    11002 SUB +0 40200 0 10341   
 11003 TZE +0 10000 0 11020                                                                                             
      IN01       FILTAB(FILTAB+1)=COMARG.(FILTAB+4)                                 045  LM00066
 11004 CLA +0 50000 0 10207    11005 ADD +0 40000 0 10324    11006 STO +0 60100 0 15352    11007 TSX +0 07400 4 00011   
 11010 TXH +3 00000 0 15352    11011 STO +0 60100 0 15352    11012 CLA +0 50000 0 10207    11013 ADD +0 40000 0 10321   
 11014 PAX +0 73400 1 00000    11015 CLA +0 50000 0 15352    11016 STO +0 60100 1 10207    11017 TRA +0 02000 0 10762   
                 E'L                                                                046  LM00067
                 WHOAMI.(WHBUF(8)...8)                                              047  LM00071
 11020 TSX +0 07400 4 00034    11021 TIX +2 10327 0 10305                                                               
                   D'N WHBUF(8)                                                     048  LM00072
                   D'N TFIL(2)                                                      049  LM00073
                 TM1=WHBUF(8)                                                       050  LM00074
 11022 CLA +0 50000 0 10305    11023 STO +0 60100 0 00064                                                               
                 TM2=WHBUF(7)                                                       051  LM00075
 11024 CLA +0 50000 0 10306    11025 STO +0 60100 0 00063                                                               
                   EQUIVALENCE (TM1,TFIL(0)), (TM2,TFIL(1))                         052  LM00076
                 W'R KEY.E.$COMBIN$ .OR. KEY.E.$     C$                             053  LM00080
 11026 CLA +0 50000 0 10224    11027 SUB +0 40200 0 10451    11030 TZE +0 10000 0 11034    11031 CLA +0 50000 0 10224   
 11032 SUB +0 40200 0 10363    11033 TNZ -0 10000 0 11231                                                               
                 FSTATE.(NM1,NM2,FSBUF(8)...8,CM01)                                 054  LM00081
 11034 TSX +0 07400 4 00016    11035 TXH +3 00000 0 00061    11036 TXH +3 00000 0 00060    11037 TIX +2 10327 0 00735   
 11040 TXH +3 00000 0 00747                                                                                             
                 W'R NAMTYP                                                         055  LM00082
 11041 NZT -0 52000 0 10230    11042 TRA +0 02000 0 11072                                                               
                 T'H CMP1A, FOR I=1,2,I.G.FILTAB                                    056  LM00083
 11043 CLA +0 50000 0 10321    11044 STO +0 60100 0 10221    11045 TRA +0 02000 0 11051    11046 CLA +0 50000 0 10221   
 11047 ADD +0 40000 0 10322    11050 STO +0 60100 0 10221    11051 CLA +0 50000 0 10221    11052 SUB +0 40200 0 10207   
 11053 TZE +0 10000 0 11055    11054 TPL +0 12000 0 11071                                                               
      CMP1A      W'R FILTAB(I).E.NM1.AND.FILTAB(I+1).E.NM2, T'O CM01                057  LM00084
 11055 CLA +0 50000 0 10221    11056 ADD +0 40000 0 10321    11057 PAX +0 73400 1 00000    11060 CLA +0 50000 1 10207   
 11061 SUB +0 40200 0 00060    11062 TNZ -0 10000 0 11070    11063 LXA +0 53400 1 10221    11064 CLA +0 50000 1 10207   
 11065 SUB +0 40200 0 00061    11066 TNZ -0 10000 0 11070    11067 TRA +0 02000 0 00747    11070 TRA +0 02000 0 11046   
                 O'E                                                                058  LM00085
 11071 TRA +0 02000 0 11112                                                                                             
                 T'H CMP1B, FOR I = 1,1,I.G.FILTAB                                  059  LM00086
 11072 CLA +0 50000 0 10321    11073 STO +0 60100 0 10221    11074 TRA +0 02000 0 11100    11075 CLA +0 50000 0 10221   
 11076 ADD +0 40000 0 10321    11077 STO +0 60100 0 10221    11100 CLA +0 50000 0 10221    11101 SUB +0 40200 0 10207   
 11102 TZE +0 10000 0 11104    11103 TPL +0 12000 0 11112                                                               
      CMP1B      W'R FILTAB(I).E.NM1, T'O CM01                                      060  LM00087
 11104 LXA +0 53400 1 10221    11105 CLA +0 50000 1 10207    11106 SUB +0 40200 0 00061    11107 TNZ -0 10000 0 11111   
 11110 TRA +0 02000 0 00747    11111 TRA +0 02000 0 11075                                                               
                 E'L                                                                061  LM00088
                 PRMESS.($ YOU HAVE NOT INCLUDED THE OLD$,NM1,NM2,$.$)              062  LM00089
 11112 TSX +0 07400 4 00027    11113 TXH +3 00000 0 10465    11114 TXH +3 00000 0 10360    11115 TXH +3 00000 0 10472   
 11116 TXH +3 00000 0 10475    11117 TXH +3 00000 0 10376    11120 TXH +3 00000 0 00061    11121 TXH +3 00000 0 00060   
 11122 TXH +3 00000 0 10400                                                                                             
                 PRMESA.($ IS THIS OK,$)                                            063  LM00090
 11123 TSX +0 07400 4 00026    11124 TXH +3 00000 0 10440    11125 TXH +3 00000 0 10377                                 
                 W'R .NOT. YES.(0), T'O FORGET                                      064  LM00091
 11126 TSX +0 07400 4 00055    11127 TXH +3 00000 0 10320    11130 TNZ -0 10000 0 11132    11131 TRA +0 02000 0 00756   
      CM01       CONTINUE                                                           065  LM00092
                 W'R NAMTYP                                                         066  LM00093
 11132 NZT -0 52000 0 10230    11133 TRA +0 02000 0 11167                                                               
                 T'H CM03A, FOR FILTBP=1,2,FILTBP.G.FILTAB                          067  LM00094
 11134 CLA +0 50000 0 10321    11135 STO +0 60100 0 10210    11136 TRA +0 02000 0 11142    11137 CLA +0 50000 0 10210   
 11140 ADD +0 40000 0 10322    11141 STO +0 60100 0 10210    11142 CLA +0 50000 0 10210    11143 SUB +0 40200 0 10207   
 11144 TZE +0 10000 0 11146    11145 TPL +0 12000 0 11166                                                               
                 W'R .NOT.CPFIL.(FILTAB(FILTBP),FILTAB(FILTBP+1)),                  068  LM00095
                1   PRNTER.(61K)                                                    068  LM00096
 11146 CLA +0 50000 0 10210    11147 ADD +0 40000 0 10321    11150 SUB +0 40200 0 11151    11151 TXH +3 00000 0 10207   
 11152 STA +0 62100 0 11161    11153 CLA +0 50000 0 10210    11154 SUB +0 40200 0 11155    11155 TXH +3 00000 0 10207   
 11156 STA +0 62100 0 11160    11157 TSX +0 07400 4 00042    11160 TXH +3 00000 0 00000    11161 TXH +3 00000 0 00000   
 11162 TNZ -0 10000 0 11165    11163 TSX +0 07400 4 00030    11164 TXH +3 00000 0 10337                                 
      CM03A      CONTINUE                                                           069  LM00097
 11165 TRA +0 02000 0 11137                                                                                             
                 O'E                                                                070  LM00098
 11166 TRA +0 02000 0 11214                                                                                             
                 T'H CM03, FOR FILTBP=1,1,FILTBP.G.FILTAB                           071  LM00099
 11167 CLA +0 50000 0 10321    11170 STO +0 60100 0 10210    11171 TRA +0 02000 0 11175    11172 CLA +0 50000 0 10210   
 11173 ADD +0 40000 0 10321    11174 STO +0 60100 0 10210    11175 CLA +0 50000 0 10210    11176 SUB +0 40200 0 10207   
 11177 TZE +0 10000 0 11201    11200 TPL +0 12000 0 11214                                                               
                 W'R .NOT. CPFIL.(FILTAB(FILTBP),NM2),                              072  LM00100
                1   PRNTER.(61K)                                                    072  LM00101
 11201 CLA +0 50000 0 10210    11202 SUB +0 40200 0 11203    11203 TXH +3 00000 0 10207    11204 STA +0 62100 0 11206   
 11205 TSX +0 07400 4 00042    11206 TXH +3 00000 0 00000    11207 TXH +3 00000 0 00060    11210 TNZ -0 10000 0 11213   
 11211 TSX +0 07400 4 00030    11212 TXH +3 00000 0 10337                                                               
      CM03       CONTINUE                                                           073  LM00102
 11213 TRA +0 02000 0 11172                                                                                             
                 E'L                                                                074  LM00103
                 W'R TMOPSW, CLS.(NM1,NM2)                                          075  LM00104
 11214 NZT -0 52000 0 10301    11215 TRA +0 02000 0 11221    11216 TSX +0 07400 4 00036    11217 TXH +3 00000 0 00061   
 11220 TXH +3 00000 0 00060                                                                                             
                 T'O EXT                                                            076  LM00105
 11221 TRA +0 02000 0 00754                                                                                             
      FORGET     PRMESS.($NOTHING DONE.$)                                           077  LM00106
 11222 TSX +0 07400 4 00027    11223 TXH +3 00000 0 10412    11224 TXH +3 00000 0 10374    11225 TXH +3 00000 0 10400   
                 CHNCOM.(0)                                                         078  LM00107
 11226 TSX +0 07400 4 00010    11227 TXH +3 00000 0 10320                                                               
                 O'R KEY.E.$ TABLE$ .OR. KEY.E.$     T$                             079  LM00111
 11230 TRA +0 02000 0 12053    11231 CLA +0 50000 0 10224    11232 SUB +0 40200 0 10454    11233 TZE +0 10000 0 11237   
 11234 CLA +0 50000 0 10224    11235 SUB +0 40200 0 10463    11236 TNZ -0 10000 0 11330                                 
                 COPYSW=0B                                                          080  LM00112
 11237 CLA +0 50000 0 10320    11240 STO +0 60100 0 06743                                                               
                 PRSSW=0B                                                           081  LM00113
 11241 CLA +0 50000 0 10320    11242 STO +0 60100 0 10273                                                               
                 V'S BL = 605757575757K                                             082  LM00114
 01011     -2 05757 5 75757                                                                                             
                 V'S CR = 555757575757K                                             083  LM00115
 07626     -1 55757 5 75757                                                                                             
      TB01       W'R FILTAB.E.0                                                     084  LM00116
 11243 CLA +0 50000 0 10207    11244 SUB +0 40200 0 10320    11245 TNZ -0 10000 0 11303                                 
                           GNEXT.(TFNF)                                             085  LM00117
 11246 TSX +0 07400 4 00047    11247 TXH +3 00000 0 01000                                                               
                    W'R FIRST                                                       086  LM00118
 11250 NZT -0 52000 0 10212    11251 TRA +0 02000 0 11302                                                               
                       FIRST = 0B                                                   087  LM00119
 11252 CLA +0 50000 0 10320    11253 STO +0 60100 0 10212                                                               
                       W'R TOFF, OFF.($ARCHIV$,$OUTPUT$)                            088  LM00120
 11254 NZT -0 52000 0 10302    11255 TRA +0 02000 0 11261    11256 TSX +0 07400 4 00025    11257 TXH +3 00000 0 10357   
 11260 TXH +3 00000 0 10421                                                                                             
                       W'R TON, OFFON.($ARCHIV$,$OUTPUT$)                           089  LM00121
 11261 NZT -0 52000 0 10303    11262 TRA +0 02000 0 11266    11263 TSX +0 07400 4 00024    11264 TXH +3 00000 0 10357   
 11265 TXH +3 00000 0 10421                                                                                             
                           PRMESS.                                                  090  LM00122
 11266 TSX +0 07400 4 00027                                                                                             
                       PRMESS.($ ***$,NM1,BL,NM2,BL,BL,DATE,BL,TIME)                091  LM00123
 11267 TSX +0 07400 4 00027    11270 TXH +3 00000 0 10446    11271 TXH +3 00000 0 00061    11272 TXH +3 00000 0 01011   
 11273 TXH +3 00000 0 00060    11274 TXH +3 00000 0 01011    11275 TXH +3 00000 0 01011    11276 TXH +3 00000 0 07630   
 11277 TXH +3 00000 0 01011    11300 TXH +3 00000 0 10300                                                               
                      PRMESS.                                                       092  LM00124
 11301 TSX +0 07400 4 00027                                                                                             
                    E'L                                                             093  LM00125
                 BOOLEAN FIRST                                                      094  LM00126
                 V'S FIRST = 1B                                                     095  LM00127
 10212     +0 00000 0 00001                                                                                             
                 O'E                                                                096  LM00128
 11302 TRA +0 02000 0 11323                                                                                             
                      SEARCH.(TFNF)                                                 097  LM00129
 11303 TSX +0 07400 4 00054    11304 TXH +3 00000 0 01000                                                               
                       W'R FIRST                                                    098  LM00130
 11305 NZT -0 52000 0 10212    11306 TRA +0 02000 0 11323                                                               
                      FIRST = 0B                                                    099  LM00131
 11307 CLA +0 50000 0 10320    11310 STO +0 60100 0 10212                                                               
                           W'R TOFF, OFF.($ARCHIV$,$OUTPUT$)                        100  LM00132
 11311 NZT -0 52000 0 10302    11312 TRA +0 02000 0 11316    11313 TSX +0 07400 4 00025    11314 TXH +3 00000 0 10357   
 11315 TXH +3 00000 0 10421                                                                                             
                           W'R TON, OFFON.($ARCHIV$,$OUTPUT$)                       101  LM00133
 11316 NZT -0 52000 0 10303    11317 TRA +0 02000 0 11323    11320 TSX +0 07400 4 00024    11321 TXH +3 00000 0 10357   
 11322 TXH +3 00000 0 10421                                                                                             
                      E'L                                                           102  LM00134
                 E'L                                                                103  LM00135
                 PTLNMK.                                                            104  LM00136
 11323 TSX +0 07400 4 00052                                                                                             
                 T'O TB01                                                           105  LM00137
 11324 TRA +0 02000 0 00777                                                                                             
      TFNF       PRMESS.                                                            106  LM00139
 11325 TSX +0 07400 4 00027                                                                                             
                 T'O FNF                                                            107  LM00140
 11326 TRA +0 02000 0 00755                                                                                             
                 O'R KEY.E.$DELETE$ .OR. KEY.E.$     D$                             108  LM00144
 11327 TRA +0 02000 0 12053    11330 CLA +0 50000 0 10224    11331 SUB +0 40200 0 10452    11332 TZE +0 10000 0 11336   
 11333 CLA +0 50000 0 10224    11334 SUB +0 40200 0 10365    11335 TNZ -0 10000 0 11354                                 
      DL01       COPYSW=1B                                                          109  LM00145
 11336 CLA +0 50000 0 10321    11337 STO +0 60100 0 06743                                                               
                 PRSSW=1B                                                           110  LM00146
 11340 CLA +0 50000 0 10321    11341 STO +0 60100 0 10273                                                               
                 WMRKSW=1B                                                          111  LM00147
 11342 CLA +0 50000 0 10321    11343 STO +0 60100 0 10316                                                               
                 SEARCH.(REN)                                                       112  LM00148
 11344 TSX +0 07400 4 00054    11345 TXH +3 00000 0 00766                                                               
                 COPYSW=0B                                                          113  LM00149
 11346 CLA +0 50000 0 10320    11347 STO +0 60100 0 06743                                                               
                 GNEXT.(REN)                                                        114  LM00150
 11350 TSX +0 07400 4 00047    11351 TXH +3 00000 0 00766                                                               
                 T'O DL01                                                           115  LM00151
 11352 TRA +0 02000 0 00751                                                                                             
                 O'R KEY.E.$XTRACT$ .OR. KEY.E.$     X$ .OR. KEY.E.$    XT$         116  LM00155
 11353 TRA +0 02000 0 12053    11354 CLA +0 50000 0 10224    11355 SUB +0 40200 0 10457    11356 TZE +0 10000 0 11365   
 11357 CLA +0 50000 0 10224    11360 SUB +0 40200 0 10456    11361 TZE +0 10000 0 11365    11362 CLA +0 50000 0 10224   
 11363 SUB +0 40200 0 10502    11364 TNZ -0 10000 0 11452                                                               
      XT01       COPYSW=0B                                                          117  LM00156
 11365 CLA +0 50000 0 10320    11366 STO +0 60100 0 06743                                                               
                 PRSSW=1B                                                           118  LM00157
 11367 CLA +0 50000 0 10321    11370 STO +0 60100 0 10273                                                               
                 W'R FILTAB.NE.0                                                    119  LM00158
 11371 CLA +0 50000 0 10207    11372 SUB +0 40200 0 10320    11373 TZE +0 10000 0 11377                                 
                      SEARCH.(FNF)                                                  120  LM00159
 11374 TSX +0 07400 4 00054    11375 TXH +3 00000 0 00755                                                               
                 O'E                                                                121  LM00160
 11376 TRA +0 02000 0 11403                                                                                             
                      W'R .NOT. GOTNXT, GNEXT.(FNF)                                 122  LM00161
 11377 ZET +0 52000 0 10217    11400 TRA +0 02000 0 11403    11401 TSX +0 07400 4 00047    11402 TXH +3 00000 0 00755   
                 E'L                                                                123  LM00162
                 NW1=FLN1.(PRLNMK)                                                  124  LM00163
 11403 TSX +0 07400 4 00045    11404 TXH +3 00000 0 10272    11405 STO +0 60100 0 10231                                 
                 NW2=FLN2.(PRLNMK)                                                  125  LM00164
 11406 TSX +0 07400 4 00046    11407 TXH +3 00000 0 10272    11410 STO +0 60100 0 10232                                 
                 COPYSW=1B                                                          126  LM00165
 11411 CLA +0 50000 0 10321    11412 STO +0 60100 0 06743                                                               
                 WMRKSW=0B                                                          127  LM00166
 11413 CLA +0 50000 0 10320    11414 STO +0 60100 0 10316                                                               
                 GNEXT.(XT02)                                                       128  LM00167
 11415 TSX +0 07400 4 00047    11416 TXH +3 00000 0 01004                                                               
                 GOTNXT=1B                                                          129  LM00168
 11417 CLA +0 50000 0 10321    11420 STO +0 60100 0 10217                                                               
                 T'O XT03                                                           130  LM00169
 11421 TRA +0 02000 0 01005                                                                                             
      XT02       NAMO=1B                                                            131  LM00170
 11422 CLA +0 50000 0 10321    11423 STO +0 60100 0 10227                                                               
      XT03       W'R CLS.(NW1,NW2)                                                  132  LM00171
 11424 TSX +0 07400 4 00036    11425 TXH +3 00000 0 10231    11426 TXH +3 00000 0 10232    11427 TZE +0 10000 0 11445   
                      W'R KEY.E.$    XT$, CHFILE.(NW1,NW2,001K,-0,-0)               133  LM00172
 11430 CLA +0 50000 0 10224    11431 SUB +0 40200 0 10457    11432 TNZ -0 10000 0 11445    11433 CLS +0 50200 0 10320   
 11434 STO +0 60100 0 15352    11435 CLS +0 50200 0 10320    11436 STO +0 60100 0 15353    11437 TSX +0 07400 4 00007   
 11440 TXH +3 00000 0 10231    11441 TXH +3 00000 0 10232    11442 TXH +3 00000 0 10321    11443 TXH +3 00000 0 15353   
 11444 TXH +3 00000 0 15352                                                                                             
                 E'L                                                                134  LM00173
                 W'R NAMO,T'O FNF                                                   135  LM00174
 11445 NZT -0 52000 0 10227    11446 TRA +0 02000 0 11450    11447 TRA +0 02000 0 00755                                 
                 T'O XT01                                                           136  LM00175
 11450 TRA +0 02000 0 01003                                                                                             
                 O'R KEY.E.$REPLAC$ .OR. KEY.E.$     R$ .OR. KEY.E.$    RD$         137  LM00179
 11451 TRA +0 02000 0 12053    11452 CLA +0 50000 0 10224    11453 SUB +0 40200 0 10450    11454 TZE +0 10000 0 11463   
 11455 CLA +0 50000 0 10224    11456 SUB +0 40200 0 10453    11457 TZE +0 10000 0 11463    11460 CLA +0 50000 0 10224   
 11461 SUB +0 40200 0 10424    11462 TNZ -0 10000 0 11734                                                               
      RP01       COPYSW=1B                                                          138  LM00180
 11463 CLA +0 50000 0 10321    11464 STO +0 60100 0 06743                                                               
                 PRSSW=1B                                                           139  LM00181
 11465 CLA +0 50000 0 10321    11466 STO +0 60100 0 10273                                                               
                 WMRKSW=1B                                                          140  LM00182
 11467 CLA +0 50000 0 10321    11470 STO +0 60100 0 10316                                                               
                 W'R FILTAB.NE.0                                                    141  LM00183
 11471 CLA +0 50000 0 10207    11472 SUB +0 40200 0 10320    11473 TZE +0 10000 0 11477                                 
                      SEARCH.(RP02)                                                 142  LM00184
 11474 TSX +0 07400 4 00054    11475 TXH +3 00000 0 00770                                                               
                 O'E                                                                143  LM00185
 11476 TRA +0 02000 0 11503                                                                                             
                      W'R .NOT. GOTNXT, GNEXT.(RP02)                                144  LM00186
 11477 ZET +0 52000 0 10217    11500 TRA +0 02000 0 11503    11501 TSX +0 07400 4 00047    11502 TXH +3 00000 0 00770   
                 E'L                                                                145  LM00187
                 GOTNXT=0B                                                          146  LM00188
 11503 CLA +0 50000 0 10320    11504 STO +0 60100 0 10217                                                               
                 W'R .NOT. CPFIL.(FLN1.(PRLNMK),FLN2.(PRLNMK))                      147  LM00189
 11505 TSX +0 07400 4 00046    11506 TXH +3 00000 0 10272    11507 STO +0 60100 0 15353    11510 TSX +0 07400 4 00045   
 11511 TXH +3 00000 0 10272    11512 STO +0 60100 0 15352    11513 TSX +0 07400 4 00042    11514 TXH +3 00000 0 15352   
 11515 TXH +3 00000 0 15353    11516 TNZ -0 10000 0 11524                                                               
                      PRNTER.(61K)                                                  148  LM00190
 11517 TSX +0 07400 4 00030    11520 TXH +3 00000 0 10337                                                               
                      COPYSW=1B                                                     149  LM00191
 11521 CLA +0 50000 0 10321    11522 STO +0 60100 0 06743                                                               
                 O'E                                                                150  LM00192
 11523 TRA +0 02000 0 11545                                                                                             
                 W'R DELST.L.DELSTZ                                                 151  LM00193
 11524 CLA +0 50000 0 10143    11525 SUB +0 40200 0 10144    11526 TZE +0 10000 0 11543    11527 TPL +0 12000 0 11543   
                      DELST=DELST+1                                                 152  LM00194
 11530 CLA +0 50000 0 10143    11531 ADD +0 40000 0 10321    11532 STO +0 60100 0 10143                                 
                      DELST1(DELST)=FLN1.(PRLNMK)                                   153  LM00195
 11533 TSX +0 07400 4 00045    11534 TXH +3 00000 0 10272    11535 LXA +0 53400 1 10143    11536 STO +0 60100 1 07775   
                      DELST2(DELST)=FLN2.(PRLNMK)                                   154  LM00196
 11537 TSX +0 07400 4 00046    11540 TXH +3 00000 0 10272    11541 LXA +0 53400 1 10143    11542 STO +0 60100 1 10142   
                 E'L                                                                155  LM00197
                      COPYSW=0B                                                     156  LM00198
 11543 CLA +0 50000 0 10320    11544 STO +0 60100 0 06743                                                               
                 E'L                                                                157  LM00199
                 GNEXT.(RP02)                                                       158  LM00200
 11545 TSX +0 07400 4 00047    11546 TXH +3 00000 0 00770                                                               
                 GOTNXT=1B                                                          159  LM00201
 11547 CLA +0 50000 0 10321    11550 STO +0 60100 0 10217                                                               
                 T'O RP01                                                           160  LM00202
 11551 TRA +0 02000 0 00767                                                                                             
      RP02       W'R NAMTYP                                                         161  LM00203
 11552 NZT -0 52000 0 10230    11553 TRA +0 02000 0 11557                                                               
                    TYP=1                                                           162  LM00204
 11554 CLA +0 50000 0 10321    11555 STO +0 60100 0 10304                                                               
                 O'E                                                                163  LM00205
 11556 TRA +0 02000 0 11561                                                                                             
                    TYP=0                                                           164  LM00206
 11557 CLA +0 50000 0 10320    11560 STO +0 60100 0 10304                                                               
                 E'L                                                                165  LM00207
                 T'H RP03, FOR JI=1,1,JI+TYP*(JI-1).G.FILTAB                        166  LM00208
 11561 CLA +0 50000 0 10321    11562 STO +0 60100 0 10222    11563 TRA +0 02000 0 11567    11564 CLA +0 50000 0 10222   
 11565 ADD +0 40000 0 10321    11566 STO +0 60100 0 10222    11567 CLA +0 50000 0 10222    11570 SUB +0 40200 0 10321   
 11571 XCA +0 13100 0 00000    11572 MPY +0 20000 0 10304    11573 XCA +0 13100 0 00000    11574 ADD +0 40000 0 10222   
 11575 SUB +0 40200 0 10207    11576 TZE +0 10000 0 11600    11577 TPL +0 12000 0 11675                                 
                 W'R NAMTYP                                                         167  LM00209
 11600 NZT -0 52000 0 10230    11601 TRA +0 02000 0 11615                                                               
                    JJ=2*JI-1                                                       168  LM00210
 11602 LDQ +0 56000 0 10322    11603 MPY +0 20000 0 10222    11604 XCA +0 13100 0 00000    11605 SUB +0 40200 0 10321   
 11606 STO +0 60100 0 10223                                                                                             
                    CNM2=FILTAB(JJ+1)                                               169  LM00211
 11607 CLA +0 50000 0 10223    11610 ADD +0 40000 0 10321    11611 PAX +0 73400 2 00000    11612 CLA +0 50000 2 10207   
 11613 STO +0 60100 0 06742                                                                                             
                 O'E                                                                170  LM00212
 11614 TRA +0 02000 0 11621                                                                                             
                    JJ=JI                                                           171  LM00213
 11615 CLA +0 50000 0 10222    11616 STO +0 60100 0 10223                                                               
                    CNM2=NM2                                                        172  LM00214
 11617 CLA +0 50000 0 00060    11620 STO +0 60100 0 06742                                                               
                 E'L                                                                173  LM00215
                 W'R .NOT. FILFND(JI)                                               174  LM00216
 11621 LXA +0 53400 1 10222    11622 ZET +0 52000 1 10166    11623 TRA +0 02000 0 11674                                 
                 PRMESS.(FILTAB(JJ),BL,CNM2,$ ADDED$,606346605757K,NM1,BL,NM2)      175  LM00217
 11624 CLA +0 50000 0 10223    11625 SUB +0 40200 0 11626    11626 TXH +3 00000 0 10207    11627 STA +0 62100 0 11631   
 11630 TSX +0 07400 4 00027    11631 TXH +3 00000 0 00000    11632 TXH +3 00000 0 01011    11633 TXH +3 00000 0 06742   
 11634 TXH +3 00000 0 10432    11635 TXH +3 00000 0 10464    11636 TXH +3 00000 0 00061    11637 TXH +3 00000 0 01011   
 11640 TXH +3 00000 0 00060                                                                                             
                      W'R .NOT. CPFIL.(FILTAB(JJ),CNM2)                             176  LM00218
 11641 CLA +0 50000 0 10223    11642 SUB +0 40200 0 11643    11643 TXH +3 00000 0 10207    11644 STA +0 62100 0 11646   
 11645 TSX +0 07400 4 00042    11646 TXH +3 00000 0 00000    11647 TXH +3 00000 0 06742    11650 TNZ -0 10000 0 11654   
                           PRNTER.(61K)                                             177  LM00219
 11651 TSX +0 07400 4 00030    11652 TXH +3 00000 0 10337                                                               
                      O'E                                                           178  LM00220
 11653 TRA +0 02000 0 11674                                                                                             
                           FILFND(JI)=1B                                            179  LM00221
 11654 LXA +0 53400 1 10222    11655 CLA +0 50000 0 10321    11656 STO +0 60100 1 10166                                 
                      W'R DELST.L.DELSTZ                                            180  LM00222
 11657 CLA +0 50000 0 10143    11660 SUB +0 40200 0 10144    11661 TZE +0 10000 0 11674    11662 TPL +0 12000 0 11674   
                           DELST=DELST+1                                            181  LM00223
 11663 CLA +0 50000 0 10143    11664 ADD +0 40000 0 10321    11665 STO +0 60100 0 10143                                 
                           DELST1(DELST)=FILTAB(JJ)                                 182  LM00224
 11666 LXA +0 53400 1 10143    11667 LXA +0 53400 2 10223    11670 CLA +0 50000 2 10207    11671 STO +0 60100 1 07775   
                           DELST2(DELST)=CNM2                                       183  LM00225
 11672 CLA +0 50000 0 06742    11673 STO +0 60100 1 10142                                                               
                      E'L                                                           184  LM00226
                      E'L                                                           185  LM00227
      RP03       E'L                                                                186  LM00228
 11674 TRA +0 02000 0 11564                                                                                             
                 W'R CLS.(NM1,NM2)                                                  187  LM00229
 11675 TSX +0 07400 4 00036    11676 TXH +3 00000 0 00061    11677 TXH +3 00000 0 00060    11700 TZE +0 10000 0 11732   
                 W'R KEY.E.$    RD$                                                 188  LM00230
 11701 CLA +0 50000 0 10224    11702 SUB +0 40200 0 10450    11703 TNZ -0 10000 0 11732                                 
                      T'H RPD01, FOR I=1,1,I.G.DELST                                189  LM00231
 11704 CLA +0 50000 0 10321    11705 STO +0 60100 0 10221    11706 TRA +0 02000 0 11712    11707 CLA +0 50000 0 10221   
 11710 ADD +0 40000 0 10321    11711 STO +0 60100 0 10221    11712 CLA +0 50000 0 10221    11713 SUB +0 40200 0 10143   
 11714 TZE +0 10000 0 11716    11715 TPL +0 12000 0 11732                                                               
      RPD01                DELT.(DELST1(I),DELST2(I))                               190  LM00232
 11716 CLA +0 50000 0 10221    11717 SUB +0 40200 0 11720    11720 TXH +3 00000 0 10142    11721 STA +0 62100 0 11730   
 11722 CLA +0 50000 0 10221    11723 SUB +0 40200 0 11724    11724 TXH +3 00000 0 07775    11725 STA +0 62100 0 11727   
 11726 TSX +0 07400 4 00044    11727 TXH +3 00000 0 00000    11730 TXH +3 00000 0 00000    11731 TRA +0 02000 0 11707   
                 E'L                                                                191  LM00233
                 E'L                                                                192  LM00234
                 T'O EXT                                                            193  LM00235
 11732 TRA +0 02000 0 00754                                                                                             
                 BOOLEAN GOTNXT                                                     194  LM00236
                 D'N DELST1(100), DELST2(100)                                       195  LM00237
                 V'S DELSTZ=100                                                     196  LM00238
 10144     +0 00000 0 00144                                                                                             
                 O'R KEY.E.$UPDATE$ .OR. KEY.E.$     U$                             197  LM00242
 11733 TRA +0 02000 0 12053    11734 CLA +0 50000 0 10224    11735 SUB +0 40200 0 10455    11736 TZE +0 10000 0 11742   
 11737 CLA +0 50000 0 10224    11740 SUB +0 40200 0 10477    11741 TNZ -0 10000 0 12042                                 
      UP01       COPYSW=1B                                                          198  LM00243
 11742 CLA +0 50000 0 10321    11743 STO +0 60100 0 06743                                                               
                 PRSSW=1B                                                           199  LM00244
 11744 CLA +0 50000 0 10321    11745 STO +0 60100 0 10273                                                               
                 WMRKSW=1B                                                          200  LM00245
 11746 CLA +0 50000 0 10321    11747 STO +0 60100 0 10316                                                               
                 W'R FILTAB.NE.0                                                    201  LM00246
 11750 CLA +0 50000 0 10207    11751 SUB +0 40200 0 10320    11752 TZE +0 10000 0 11756                                 
                      SEARCH.(REN)                                                  202  LM00247
 11753 TSX +0 07400 4 00054    11754 TXH +3 00000 0 00766                                                               
                 O'E                                                                203  LM00248
 11755 TRA +0 02000 0 11762                                                                                             
                      W'R .NOT. GOTNXT, GNEXT.(REN)                                 204  LM00249
 11756 ZET +0 52000 0 10217    11757 TRA +0 02000 0 11762    11760 TSX +0 07400 4 00047    11761 TXH +3 00000 0 00766   
                 E'L                                                                205  LM00250
                 FSTATE.(FLN1.(PRLNMK),FLN2.(PRLNMK),FSBUF(8)...8,UP02)             206  LM00251
 11762 TSX +0 07400 4 00046    11763 TXH +3 00000 0 10272    11764 STO +0 60100 0 15353    11765 TSX +0 07400 4 00045   
 11766 TXH +3 00000 0 10272    11767 STO +0 60100 0 15352    11770 TSX +0 07400 4 00016    11771 TXH +3 00000 0 15352   
 11772 TXH +3 00000 0 15353    11773 TIX +2 10327 0 00735    11774 TXH +3 00000 0 01002                                 
                 W'R FSBUF(2).A.377777777777K.G.DATTM.(PRLNMK).A.377777777777K      207  LM00252
 11775 TSX +0 07400 4 00043    11776 TXH +3 00000 0 10272    11777 STO +0 60100 0 15353    12000 CAL -0 50000 0 15353   
 12001 ANA -0 32000 0 10401    12002 SLW +0 60200 0 15353    12003 CAL -0 50000 0 00743    12004 ANA -0 32000 0 10401   
 12005 SLW +0 60200 0 15352    12006 CLA +0 50000 0 15352    12007 SUB +0 40200 0 15353    12010 TZE +0 10000 0 12032   
 12011 TMI -0 12000 0 12032                                                                                             
                      PTLNMK.                                                       208  LM00253
 12012 TSX +0 07400 4 00052                                                                                             
                      COPYSW=0B                                                     209  LM00254
 12013 CLA +0 50000 0 10320    12014 STO +0 60100 0 06743                                                               
                      W'R .NOT. CPFIL.(FLN1.(PRLNMK),FLN2.(PRLNMK)), COPYSW=1B      210  LM00255
 12015 TSX +0 07400 4 00046    12016 TXH +3 00000 0 10272    12017 STO +0 60100 0 15353    12020 TSX +0 07400 4 00045   
 12021 TXH +3 00000 0 10272    12022 STO +0 60100 0 15352    12023 TSX +0 07400 4 00042    12024 TXH +3 00000 0 15352   
 12025 TXH +3 00000 0 15353    12026 TNZ -0 10000 0 12031    12027 CLA +0 50000 0 10321    12030 STO +0 60100 0 06743   
                 O'E                                                                211  LM00256
 12031 TRA +0 02000 0 12034                                                                                             
      UP02            COPYSW=1B                                                     212  LM00257
 12032 CLA +0 50000 0 10321    12033 STO +0 60100 0 06743                                                               
                 E'L                                                                213  LM00258
                 GNEXT.(REN)                                                        214  LM00259
 12034 TSX +0 07400 4 00047    12035 TXH +3 00000 0 00766                                                               
                 GOTNXT=1B                                                          215  LM00260
 12036 CLA +0 50000 0 10321    12037 STO +0 60100 0 10217                                                               
                 T'O UP01                                                           216  LM00261
 12040 TRA +0 02000 0 01001                                                                                             
                 O'E                                                                217  LM00265
 12041 TRA +0 02000 0 12053                                                                                             
                 PRMESS.(KEY,$ -- NOT A VALID ARGUMENT.$)                           218  LM00266
 12042 TSX +0 07400 4 00027    12043 TXH +3 00000 0 10224    12044 TXH +3 00000 0 10441    12045 TXH +3 00000 0 10470   
 12046 TXH +3 00000 0 10406    12047 TXH +3 00000 0 10375    12050 TXH +3 00000 0 10400                                 
                 CHNCOM.(0)                                                         219  LM00267
 12051 TSX +0 07400 4 00010    12052 TXH +3 00000 0 10320                                                               
                 E'L                                                                220  LM00268
      SPC        PRMESS.                                                            221  LM00272
 12053 TSX +0 07400 4 00027                                                                                             
                 T'O FNF                                                            222  LM00273
 12054 TRA +0 02000 0 00755                                                                                             
      REN        CLS.(NM1,NM2)                                                      223  LM00274
 12055 TSX +0 07400 4 00036    12056 TXH +3 00000 0 00061    12057 TXH +3 00000 0 00060                                 
      FNF        W'R NAMTYP                                                         224  LM00275
 12060 NZT -0 52000 0 10230    12061 TRA +0 02000 0 12135                                                               
                    T'H FN01A, FOR I = 1,1,I.G.FILTAB/2                             225  LM00276
 12062 CLA +0 50000 0 10321    12063 STO +0 60100 0 10221    12064 TRA +0 02000 0 12070    12065 CLA +0 50000 0 10221   
 12066 ADD +0 40000 0 10321    12067 STO +0 60100 0 10221    12070 LDQ +0 56000 0 10207    12071 PXD -0 75400 0 00000   
 12072 LLS +0 76300 0 00000    12073 DVP +0 22100 0 10322    12074 XCA +0 13100 0 00000    12075 CHS +0 76000 0 00002   
 12076 ADD +0 40000 0 10221    12077 TZE +0 10000 0 12101    12100 TPL +0 12000 0 12134                                 
                    W'R .NOT.FILFND(I)                                              226  LM00277
 12101 LXA +0 53400 1 10221    12102 ZET +0 52000 1 10166    12103 TRA +0 02000 0 12133                                 
                 PRMESS.(FILTAB(2*I-1),BL,FILTAB(2*I),$ NOT FOUND I$,               227  LM00278
                1 456057575757K,NM1,BL,NM2)                                         227  LM00279
 12104 LDQ +0 56000 0 10322    12105 MPY +0 20000 0 10221    12106 XCA +0 13100 0 00000    12107 SUB +0 40200 0 12110   
 12110 TXH +3 00000 0 10207    12111 STA +0 62100 0 12124    12112 LDQ +0 56000 0 10322    12113 MPY +0 20000 0 10221   
 12114 XCA +0 13100 0 00000    12115 SUB +0 40200 0 10321    12116 SUB +0 40200 0 12117    12117 TXH +3 00000 0 10207   
 12120 STA +0 62100 0 12122    12121 TSX +0 07400 4 00027    12122 TXH +3 00000 0 00000    12123 TXH +3 00000 0 01011   
 12124 TXH +3 00000 0 00000    12125 TXH +3 00000 0 10445    12126 TXH +3 00000 0 10420    12127 TXH +3 00000 0 10415   
 12130 TXH +3 00000 0 00061    12131 TXH +3 00000 0 01011    12132 TXH +3 00000 0 00060                                 
      FN01A         E'L                                                             228  LM00280
 12133 TRA +0 02000 0 12065                                                                                             
                 O'E                                                                229  LM00281
 12134 TRA +0 02000 0 12171                                                                                             
                    T'H FNO1B, FOR I=1,1,I.G.FILTAB                                 230  LM00282
 12135 CLA +0 50000 0 10321    12136 STO +0 60100 0 10221    12137 TRA +0 02000 0 12143    12140 CLA +0 50000 0 10221   
 12141 ADD +0 40000 0 10321    12142 STO +0 60100 0 10221    12143 CLA +0 50000 0 10221    12144 SUB +0 40200 0 10207   
 12145 TZE +0 10000 0 12147    12146 TPL +0 12000 0 12171                                                               
                    W'R .NOT.FILFND(I)                                              231  LM00283
 12147 LXA +0 53400 1 10221    12150 ZET +0 52000 1 10166    12151 TRA +0 02000 0 12170                                 
                      PRMESS.(FILTAB(I),BL,NM2,$ NOT FOUND I$,456057575757K,        232  LM00284
                1  NM1,BL,NM2)                                                      232  LM00285
 12152 CLA +0 50000 0 10221    12153 SUB +0 40200 0 12154    12154 TXH +3 00000 0 10207    12155 STA +0 62100 0 12157   
 12156 TSX +0 07400 4 00027    12157 TXH +3 00000 0 00000    12160 TXH +3 00000 0 01011    12161 TXH +3 00000 0 00060   
 12162 TXH +3 00000 0 10445    12163 TXH +3 00000 0 10420    12164 TXH +3 00000 0 10415    12165 TXH +3 00000 0 00061   
 12166 TXH +3 00000 0 01011    12167 TXH +3 00000 0 00060                                                               
      FNO1B         E'L                                                             233  LM00286
 12170 TRA +0 02000 0 12140                                                                                             
                 E'L                                                                234  LM00287
      EXT        CHNCOM.(0)                                                         235  LM00288
 12171 TSX +0 07400 4 00010    12172 TXH +3 00000 0 10320                                                               
                 PRMESS.($FRAM$)                                                    236  LM00289
 12173 TSX +0 07400 4 00027    12174 TXH +3 00000 0 10373                                                               
                 PRMESS.($NOTIFY SYSTEMS STAFF$)                                    237  LM00290
 12175 TSX +0 07400 4 00027    12176 TXH +3 00000 0 10413    12177 TXH +3 00000 0 10462    12200 TXH +3 00000 0 10411   
 12201 TXH +3 00000 0 10372                                                                                             
                 DORMNT.                                                            238  LM00291
 12202 TSX +0 07400 4 00014                                                                                             
                 INSERT FILE ASUBS                                                  239  LM00299
                 INTERNAL FUNCTION (EOFXT)                                          240  LM00008
 12203 TRA +0 02000 0 12432                                                                                             
                 STATEMENT LABEL EOFXT                                              241  LM00009
                 E'O SEARCH.                                                        242  LM00010
 12204 TRA +0 02000 0 12207    00054 TTR +0 02100 0 12205    12205 SXA +0 63400 2 12414    12206 TSX +0 07400 2 12414   
                 W'R NAMTYP                                                         243  LM00011
 12207 NZT -0 52000 0 10230    12210 TRA +0 02000 0 12316                                                               
                    W'R .NOT. COPYSW                                                244  LM00012
 12211 ZET +0 52000 0 06743    12212 TRA +0 02000 0 12241                                                               
                    T'H SR00A, FOR I=1,1,I.G.FILTAB                                 245  LM00013
 12213 CLA +0 50000 0 10321    12214 STO +0 60100 0 10221    12215 TRA +0 02000 0 12221    12216 CLA +0 50000 0 10221   
 12217 ADD +0 40000 0 10321    12220 STO +0 60100 0 10221    12221 CLA +0 50000 0 10221    12222 SUB +0 40200 0 10207   
 12223 TZE +0 10000 0 12225    12224 TPL +0 12000 0 12232                                                               
      SR00A      W'R .NOT. FILFND(I), T'O SRP0A                                     246  LM00014
 12225 LXA +0 53400 1 10221    12226 ZET +0 52000 1 10166    12227 TRA +0 02000 0 12231    12230 TRA +0 02000 0 00775   
 12231 TRA +0 02000 0 12216                                                                                             
                    BFCLOS.(NM1,NM2,GERR)                                           247  LM00015
 12232 TSX +0 07400 4 00002    12233 TXH +3 00000 0 00061    12234 TXH +3 00000 0 00060    12235 TXH +3 00000 0 00760   
                    AROPSW=0B                                                       248  LM00016
 12236 CLA +0 50000 0 10320    12237 STO +0 60100 0 01010                                                               
                    T'O EOFXT                                                       249  LM00017
 12240 TRA +0 02000 0 00024                                                                                             
                 E'L                                                                250  LM00018
      SRP0A      CONTINUE                                                           251  LM00019
                 W'R PRSSW.AND.AROPSW, T'O SR02A                                    252  LM00020
 12241 NZT -0 52000 0 01010    12242 TRA +0 02000 0 12246    12243 NZT -0 52000 0 10273    12244 TRA +0 02000 0 12246   
 12245 TRA +0 02000 0 00773                                                                                             
      SR01A      GNEXT.(EOFXT)                                                      253  LM00021
 12246 TSX +0 07400 4 00047    12247 TXH +3 00000 0 00024                                                               
      SR02A      T'H SR03A, FOR FILTBP=1,2,FILTBP.G.FILTAB                          254  LM00022
 12250 CLA +0 50000 0 10321    12251 STO +0 60100 0 10210    12252 TRA +0 02000 0 12256    12253 CLA +0 50000 0 10210   
 12254 ADD +0 40000 0 10322    12255 STO +0 60100 0 10210    12256 CLA +0 50000 0 10210    12257 SUB +0 40200 0 10207   
 12260 TZE +0 10000 0 12262    12261 TPL +0 12000 0 12314                                                               
                 PNTR=(FILTBP+1)/2                                                  255  LM00023
 12262 CLA +0 50000 0 10210    12263 ADD +0 40000 0 10321    12264 LRS +0 76500 0 00043    12265 DVP +0 22100 0 10322   
 12266 STQ -0 60000 0 10253                                                                                             
                 W'R FLN1.(PRLNMK).E.FILTAB(FILTBP)                                 256  LM00024
                1   .AND.FLN2.(PRLNMK).E.FILTAB(FILTBP+1)                           256  LM00025
                2   .AND..NOT.FILFND(PNTR)                                          256  LM00026
 12267 LXA +0 53400 1 10253    12270 ZET +0 52000 1 10166    12271 TRA +0 02000 0 12313    12272 CLA +0 50000 0 10210   
 12273 ADD +0 40000 0 10321    12274 STO +0 60100 0 12431    12275 TSX +0 07400 4 00046    12276 TXH +3 00000 0 10272   
 12277 LXA +0 53400 2 12431    12300 SUB +0 40200 2 10207    12301 TNZ -0 10000 0 12313    12302 TSX +0 07400 4 00045   
 12303 TXH +3 00000 0 10272    12304 LXA +0 53400 2 10210    12305 SUB +0 40200 2 10207    12306 TNZ -0 10000 0 12313   
                 FILFND(PNTR)=1B                                                    257  LM00027
 12307 LXA +0 53400 1 10253    12310 CLA +0 50000 0 10321    12311 STO +0 60100 1 10166                                 
                 F'N                                                                258  LM00028
 12312 TRA +0 02000 0 12425                                                                                             
      SR03A      E'L                                                                259  LM00029
 12313 TRA +0 02000 0 12253                                                                                             
                 T'O SR01A                                                          260  LM00030
 12314 TRA +0 02000 0 00771                                                                                             
                 O'E                                                                261  LM00031
 12315 TRA +0 02000 0 12413                                                                                             
                 W'R .NOT.COPYSW                                                    262  LM00032
 12316 ZET +0 52000 0 06743    12317 TRA +0 02000 0 12346                                                               
                    T'H SR00, FOR I=1,1,I.G.FILTAB                                  263  LM00033
 12320 CLA +0 50000 0 10321    12321 STO +0 60100 0 10221    12322 TRA +0 02000 0 12326    12323 CLA +0 50000 0 10221   
 12324 ADD +0 40000 0 10321    12325 STO +0 60100 0 10221    12326 CLA +0 50000 0 10221    12327 SUB +0 40200 0 10207   
 12330 TZE +0 10000 0 12332    12331 TPL +0 12000 0 12337                                                               
      SR00          W'R .NOT.FILFND(I), T'O SRP0                                    264  LM00034
 12332 LXA +0 53400 1 10221    12333 ZET +0 52000 1 10166    12334 TRA +0 02000 0 12336    12335 TRA +0 02000 0 00776   
 12336 TRA +0 02000 0 12323                                                                                             
                    BFCLOS.(NM1,NM2,GERR)                                           265  LM00035
 12337 TSX +0 07400 4 00002    12340 TXH +3 00000 0 00061    12341 TXH +3 00000 0 00060    12342 TXH +3 00000 0 00760   
                    AROPSW=0B                                                       266  LM00036
 12343 CLA +0 50000 0 10320    12344 STO +0 60100 0 01010                                                               
                    T'O EOFXT                                                       267  LM00037
 12345 TRA +0 02000 0 00024                                                                                             
                 E'L                                                                268  LM00038
      SRP0       CONTINUE                                                           269  LM00039
                 W'R PRSSW.AND.AROPSW, T'O SR02                                     270  LM00040
 12346 NZT -0 52000 0 01010    12347 TRA +0 02000 0 12353    12350 NZT -0 52000 0 10273    12351 TRA +0 02000 0 12353   
 12352 TRA +0 02000 0 00774                                                                                             
      SR01       GNEXT.(EOFXT)                                                      271  LM00041
 12353 TSX +0 07400 4 00047    12354 TXH +3 00000 0 00024                                                               
      SR02       W'R FLN2.(PRLNMK).NE.NM2                                           272  LM00042
 12355 TSX +0 07400 4 00046    12356 TXH +3 00000 0 10272    12357 SUB +0 40200 0 00060    12360 TZE +0 10000 0 12363   
                    T'O SR01                                                        273  LM00043
 12361 TRA +0 02000 0 00772                                                                                             
                 O'E                                                                274  LM00044
 12362 TRA +0 02000 0 12413                                                                                             
                    T'H SR03, FOR FILTBP=1,1,FILTBP.G.FILTAB                        275  LM00045
 12363 CLA +0 50000 0 10321    12364 STO +0 60100 0 10210    12365 TRA +0 02000 0 12371    12366 CLA +0 50000 0 10210   
 12367 ADD +0 40000 0 10321    12370 STO +0 60100 0 10210    12371 CLA +0 50000 0 10210    12372 SUB +0 40200 0 10207   
 12373 TZE +0 10000 0 12375    12374 TPL +0 12000 0 12412                                                               
                 W'R FLN1.(PRLNMK).E.FILTAB(FILTBP)                                 276  LM00046
                1   .AND..NOT.FILFND(FILTBP)                                        276  LM00047
 12375 LXA +0 53400 1 10210    12376 ZET +0 52000 1 10166    12377 TRA +0 02000 0 12411    12400 TSX +0 07400 4 00045   
 12401 TXH +3 00000 0 10272    12402 LXA +0 53400 2 10210    12403 SUB +0 40200 2 10207    12404 TNZ -0 10000 0 12411   
                       FILFND(FILTBP)=1B                                            277  LM00048
 12405 LXA +0 53400 1 10210    12406 CLA +0 50000 0 10321    12407 STO +0 60100 1 10166                                 
                       FUNCTION RETURN                                              278  LM00049
 12410 TRA +0 02000 0 12425                                                                                             
      SR03          E'L                                                             279  LM00050
 12411 TRA +0 02000 0 12366                                                                                             
                 T'O SR01                                                           280  LM00051
 12412 TRA +0 02000 0 00772                                                                                             
                 E'L                                                                281  LM00052
                 E'L                                                                282  LM00053
                 END OF FUNCTION                                                    283  LM00054
 12413 TSX +0 07400 4 00015    12414 TXH +3 00000 0 00000    12415 SXD -0 63400 1 12414    12416 SXA +0 63400 4 12425   
 12417 CLA +0 50000 4 00001    12420 STA +0 62100 0 12240    12421 STO +0 60100 0 12247    12422 STA +0 62100 0 12345   
 12423 STO +0 60100 0 12354    12424 TRA +0 02000 2 00001    12425 AXT +0 77400 4 00000    12426 LXA +0 53400 2 12414   
 12427 LXD -0 53400 1 12414    12430 TRA +0 02000 4 00001                                                               
                 INTERNAL FUNCTION (EOFXT)                                          284  LM00061
 12432 TRA +0 02000 0 13007                                                                                             
                 STATEMENT LABEL EOFXT                                              285  LM00062
                 E'O GNEXT.                                                         286  LM00063
 12433 TRA +0 02000 0 12436    00047 TTR +0 02100 0 12434    12434 SXA +0 63400 2 12774    12435 TSX +0 07400 2 12774   
                 W'R .NOT. AROPSW                                                   287  LM00064
 12436 ZET +0 52000 0 01010    12437 TRA +0 02000 0 12504                                                               
                      BFOPEN.($R$,NM1,NM2,BUF1(BUFZ),BUF2(BUFZ),-0,GERR)            288  LM00065
 12440 CLS +0 50200 0 10320    12441 STO +0 60100 0 13006    12442 CLA +0 50000 0 06741    12443 SUB +0 40200 0 12444   
 12444 TXH +3 00000 0 02553    12445 STA +0 62100 0 12457    12446 CLA +0 50000 0 06741    12447 SUB +0 40200 0 12450   
 12450 TXH +3 00000 0 01672    12451 STA +0 62100 0 12456    12452 TSX +0 07400 4 00003    12453 TXH +3 00000 0 10430   
 12454 TXH +3 00000 0 00061    12455 TXH +3 00000 0 00060    12456 TXH +3 00000 0 00000    12457 TXH +3 00000 0 00000   
 12460 TXH +3 00000 0 13006    12461 TXH +3 00000 0 00760                                                               
                      BFREAD.(NM1,NM2,PRLNMK(LMKZ)...LMKZ,FRMER,EOFCT,GERR)         289  LM00066
 12462 CLA +0 50000 0 10225    12463 SUB +0 40200 0 12464    12464 TXH +3 00000 0 10272    12465 STA +0 62100 0 12471   
 12466 TSX +0 07400 4 00004    12467 TXH +3 00000 0 00061    12470 TXH +3 00000 0 00060    12471 TIX +2 10225 0 00000   
 12472 TXH +3 00000 0 00757    12473 TXH +3 00000 0 10145    12474 TXH +3 00000 0 00760                                 
                      W'R BDLNMK.(PRLNMK)                                           290  LM00067
 12475 TSX +0 07400 4 00035    12476 TXH +3 00000 0 10272    12477 TZE +0 10000 0 12501                                 
                      T'O FRMER                                                     291  LM00068
 12500 TRA +0 02000 0 00757                                                                                             
                      E'L                                                           292  LM00069
                 AROPSW=1B                                                          293  LM00070
 12501 CLA +0 50000 0 10321    12502 STO +0 60100 0 01010                                                               
                 FUNCTION RETURN                                                    294  LM00071
 12503 TRA +0 02000 0 13002                                                                                             
                 E'L                                                                295  LM00072
                 W'R COPYSW .AND. .NOT. TMOPSW                                      296  LM00073
 12504 ZET +0 52000 0 10301    12505 TRA +0 02000 0 12543    12506 NZT -0 52000 0 06743    12507 TRA +0 02000 0 12543   
                      DELETE.(TM1,TM2,0,OUT)                                        297  LM00074
 12510 TSX +0 07400 4 00013    12511 TXH +3 00000 0 00064    12512 TXH +3 00000 0 00063    12513 TXH +3 00000 0 10320   
 12514 TXH +3 00000 0 00765                                                                                             
                      BFOPEN.($W$,TM1,TM2,BUF3(BUFZ),BUF4(BUFZ),BUF5(BUFZ),         298  LM00075
                1       GERR)                                                       298  LM00076
 12515 CLA +0 50000 0 06741    12516 SUB +0 40200 0 12517    12517 TXH +3 00000 0 05176    12520 STA +0 62100 0 12537   
 12521 CLA +0 50000 0 06741    12522 SUB +0 40200 0 12523    12523 TXH +3 00000 0 04315    12524 STA +0 62100 0 12536   
 12525 CLA +0 50000 0 06741    12526 SUB +0 40200 0 12527    12527 TXH +3 00000 0 03434    12530 STA +0 62100 0 12535   
 12531 TSX +0 07400 4 00003    12532 TXH +3 00000 0 10501    12533 TXH +3 00000 0 00064    12534 TXH +3 00000 0 00063   
 12535 TXH +3 00000 0 00000    12536 TXH +3 00000 0 00000    12537 TXH +3 00000 0 00000    12540 TXH +3 00000 0 00760   
                      TMOPSW=1B                                                     299  LM00077
 12541 CLA +0 50000 0 10321    12542 STO +0 60100 0 10301                                                               
                 E'L                                                                300  LM00078
                 W'R COPYSW .AND. WMRKSW                                            301  LM00079
 12543 NZT -0 52000 0 10316    12544 TRA +0 02000 0 12560    12545 NZT -0 52000 0 06743    12546 TRA +0 02000 0 12560   
                      BFWRIT.(TM1,TM2,PRLNMK(LMKZ)...LMKZ,GERR)                     302  LM00080
 12547 CLA +0 50000 0 10225    12550 SUB +0 40200 0 12551    12551 TXH +3 00000 0 10272    12552 STA +0 62100 0 12556   
 12553 TSX +0 07400 4 00005    12554 TXH +3 00000 0 00064    12555 TXH +3 00000 0 00063    12556 TIX +2 10225 0 00000   
 12557 TXH +3 00000 0 00760                                                                                             
                 E'L                                                                303  LM00081
                 W'R .NOT. ADJSW                                                    304  LM00082
 12560 ZET +0 52000 0 01006    12561 TRA +0 02000 0 12716                                                               
                      AFZ=CNT.(PRLNMK)                                              305  LM00083
 12562 TSX +0 07400 4 00037    12563 TXH +3 00000 0 10272    12564 STO +0 60100 0 01007                                 
                      T'H COPY, FOR I=CPBUFZ,CPBUFZ,I.GE.AFZ                        306  LM00084
 12565 CLA +0 50000 0 07625    12566 STO +0 60100 0 10221    12567 TRA +0 02000 0 12573    12570 CLA +0 50000 0 10221   
 12571 ADD +0 40000 0 07625    12572 STO +0 60100 0 10221    12573 CLA +0 50000 0 10221    12574 SUB +0 40200 0 01007   
 12575 TZE +0 10000 0 12626    12576 TPL +0 12000 0 12626                                                               
                           BFREAD.(NM1,NM2,CPBUF(CPBUFZ)...CPBUFZ,                  307  LM00085
                1            FRMER,EOFCT,GERR)                                      307  LM00086
 12577 CLA +0 50000 0 07625    12600 SUB +0 40200 0 12601    12601 TXH +3 00000 0 07624    12602 STA +0 62100 0 12606   
 12603 TSX +0 07400 4 00004    12604 TXH +3 00000 0 00061    12605 TXH +3 00000 0 00060    12606 TIX +2 07625 0 00000   
 12607 TXH +3 00000 0 00757    12610 TXH +3 00000 0 10145    12611 TXH +3 00000 0 00760                                 
                           W'R COPYSW                                               308  LM00087
 12612 NZT -0 52000 0 06743    12613 TRA +0 02000 0 12625                                                               
                                BFWRIT.(TM1,TM2,CPBUF(CPBUFZ)...CPBUFZ,GERR)        309  LM00088
 12614 CLA +0 50000 0 07625    12615 SUB +0 40200 0 12616    12616 TXH +3 00000 0 07624    12617 STA +0 62100 0 12623   
 12620 TSX +0 07400 4 00005    12621 TXH +3 00000 0 00064    12622 TXH +3 00000 0 00063    12623 TIX +2 07625 0 00000   
 12624 TXH +3 00000 0 00760                                                                                             
                           E'L                                                      310  LM00089
      COPY            CONTINUE                                                      311  LM00090
 12625 TRA +0 02000 0 12570                                                                                             
                      REMN=CPBUFZ-(I-AFZ)                                           312  LM00091
 12626 CLA +0 50000 0 10221    12627 SUB +0 40200 0 01007    12630 CHS +0 76000 0 00002    12631 ADD +0 40000 0 07625   
 12632 STO +0 60100 0 10275                                                                                             
                      BFREAD.(NM1,NM2,CPBUF(REMN)...REMN,                           313  LM00092
                1       FRMER,EOFCT,GERR)                                           313  LM00093
 12633 CLA +0 50000 0 10275    12634 SUB +0 40200 0 12635    12635 TXH +3 00000 0 07624    12636 STA +0 62100 0 12642   
 12637 TSX +0 07400 4 00004    12640 TXH +3 00000 0 00061    12641 TXH +3 00000 0 00060    12642 TIX +2 10275 0 00000   
 12643 TXH +3 00000 0 00757    12644 TXH +3 00000 0 10145    12645 TXH +3 00000 0 00760                                 
                      W'R COPYSW                                                    314  LM00094
 12646 NZT -0 52000 0 06743    12647 TRA +0 02000 0 12716                                                               
                           W'R .NOT. WMRKSW                                         315  LM00095
 12650 ZET +0 52000 0 10316    12651 TRA +0 02000 0 12705                                                               
                                T'H FXT, FOR I = 27, -9, I.L.0                      316  LM00096
 12652 CLA +0 50000 0 10335    12653 STO +0 60100 0 10221    12654 TRA +0 02000 0 12660    12655 CLS +0 50200 0 10330   
 12656 ADD +0 40000 0 10221    12657 STO +0 60100 0 10221    12660 CLA +0 50000 0 10221    12661 SUB +0 40200 0 10320   
 12662 TZE +0 10000 0 12664    12663 TMI -0 12000 0 12705                                                               
                                W'R ((CPBUF (1) .RS. I) .A. 777K) .E. 000K          317  LM00097
 12664 CAL -0 50000 0 10221    12665 STA +0 62100 0 12667    12666 CAL -0 50000 0 07623    12667 LGR -0 76500 0 00000   
 12670 ANA -0 32000 0 10343    12671 SLW +0 60200 0 13006    12672 CLA +0 50000 0 13006    12673 SUB +0 40200 0 10320   
 12674 TNZ -0 10000 0 12704                                                                                             
                                CPBUF (1) = CPBUF (1) .V. 003K .LS. I               318  LM00098
 12675 CAL -0 50000 0 10221    12676 STA +0 62100 0 12700    12677 CAL -0 50000 0 10323    12700 ALS +0 76700 0 00000   
 12701 ORA -0 50100 0 07623    12702 SLW +0 60200 0 07623                                                               
                                T'O EFXT                                            319  LM00099
 12703 TRA +0 02000 0 00752                                                                                             
      FXT                       E'L                                                 320  LM00100
 12704 TRA +0 02000 0 12655                                                                                             
      EFXT                 E'L                                                      321  LM00101
                           BFWRIT.(TM1,TM2,CPBUF(REMN)...REMN,GERR)                 322  LM00102
 12705 CLA +0 50000 0 10275    12706 SUB +0 40200 0 12707    12707 TXH +3 00000 0 07624    12710 STA +0 62100 0 12714   
 12711 TSX +0 07400 4 00005    12712 TXH +3 00000 0 00064    12713 TXH +3 00000 0 00063    12714 TIX +2 10275 0 00000   
 12715 TXH +3 00000 0 00760                                                                                             
                      E'L                                                           323  LM00103
                 E'L                                                                324  LM00104
                 BFREAD.(NM1,NM2,PRLNMK(LMKZ)...LMKZ,EOF,EOFCT,GERR)                325  LM00105
 12716 CLA +0 50000 0 10225    12717 SUB +0 40200 0 12720    12720 TXH +3 00000 0 10272    12721 STA +0 62100 0 12725   
 12722 TSX +0 07400 4 00004    12723 TXH +3 00000 0 00061    12724 TXH +3 00000 0 00060    12725 TIX +2 10225 0 00000   
 12726 TXH +3 00000 0 00753    12727 TXH +3 00000 0 10145    12730 TXH +3 00000 0 00760                                 
                 W'R BDLNMK.(PRLNMK),T'O FRMER                                      326  LM00106
 12731 TSX +0 07400 4 00035    12732 TXH +3 00000 0 10272    12733 TZE +0 10000 0 12735    12734 TRA +0 02000 0 00757   
                 ADJSW=0B                                                           327  LM00107
 12735 CLA +0 50000 0 10320    12736 STO +0 60100 0 01006                                                               
                 F'N                                                                328  LM00108
 12737 TRA +0 02000 0 13002                                                                                             
      EOF        BFCLOS.(NM1,NM2,GERR)                                              329  LM00109
 12740 TSX +0 07400 4 00002    12741 TXH +3 00000 0 00061    12742 TXH +3 00000 0 00060    12743 TXH +3 00000 0 00760   
                 AROPSW=0B                                                          330  LM00110
 12744 CLA +0 50000 0 10320    12745 STO +0 60100 0 01010                                                               
                 T'O EOFXT                                                          331  LM00111
 12746 TRA +0 02000 0 00024                                                                                             
      FRMER      PRMESS.($ARCHIV FORMAT ERROR IN$,NM1,BL,NM2)                       332  LM00112
 12747 TSX +0 07400 4 00027    12750 TXH +3 00000 0 10357    12751 TXH +3 00000 0 10437    12752 TXH +3 00000 0 10471   
 12753 TXH +3 00000 0 10427    12754 TXH +3 00000 0 00061    12755 TXH +3 00000 0 01011    12756 TXH +3 00000 0 00060   
                 BFCLOS.($   ALL$,-0,GERR)                                          333  LM00113
 12757 CLS +0 50200 0 10320    12760 STO +0 60100 0 13006    12761 TSX +0 07400 4 00002    12762 TXH +3 00000 0 10447   
 12763 TXH +3 00000 0 13006    12764 TXH +3 00000 0 00760                                                               
                 CHNCOM.(1)                                                         334  LM00114
 12765 TSX +0 07400 4 00010    12766 TXH +3 00000 0 10321                                                               
      GERR       PRNTER.(61K)                                                       335  LM00115
 12767 TSX +0 07400 4 00030    12770 TXH +3 00000 0 10337                                                               
                 CHNCOM.(1)                                                         336  LM00116
 12771 TSX +0 07400 4 00010    12772 TXH +3 00000 0 10321                                                               
                 END OF FUNCTION                                                    337  LM00117
 12773 TSX +0 07400 4 00015    12774 TXH +3 00000 0 00000    12775 SXD -0 63400 1 12774    12776 SXA +0 63400 4 13002   
 12777 CLA +0 50000 4 00001    13000 STA +0 62100 0 12746    13001 TRA +0 02000 2 00001    13002 AXT +0 77400 4 00000   
 13003 LXA +0 53400 2 12774    13004 LXD -0 53400 1 12774    13005 TRA +0 02000 4 00001                                 
                 BOOLEAN CPFIL.                                                     338  LM00126
                 INTERNAL FUNCTION(A,B)                                             339  LM00127
 13007 TRA +0 02000 0 13351                                                                                             
                 E'O CPFIL.                                                         340  LM00128
 13010 TRA +0 02000 0 13013    00042 TTR +0 02100 0 13011    13011 SXA +0 63400 2 13324    13012 TSX +0 07400 2 13324   
                 W'R .NOT. MKLNMK.(A,B,CT)                                          341  LM00129
 13013 TSX +0 07400 4 00051    13014 TXH +3 00000 0 00024    13015 TXH +3 00000 0 00024    13016 TXH +3 00000 0 07627   
 13017 TNZ -0 10000 0 13023                                                                                             
                      F'N 0B                                                        342  LM00130
 13020 CLA +0 50000 0 10320    13021 TRA +0 02000 0 13344                                                               
                 O'E                                                                343  LM00131
 13022 TRA +0 02000 0 13304                                                                                             
                      W'R .NOT. TMOPSW                                              344  LM00132
 13023 ZET +0 52000 0 10301    13024 TRA +0 02000 0 13060                                                               
                           DELETE.(TM1,TM2,0,OUT)                                   345  LM00133
 13025 TSX +0 07400 4 00013    13026 TXH +3 00000 0 00064    13027 TXH +3 00000 0 00063    13030 TXH +3 00000 0 10320   
 13031 TXH +3 00000 0 00765                                                                                             
                           BFOPEN.($W$,TM1,TM2,BUF3(BUFZ),BUF4(BUFZ),               346  LM00134
                1            BUF5(BUFZ),GERR)                                       346  LM00135
 13032 CLA +0 50000 0 06741    13033 SUB +0 40200 0 13034    13034 TXH +3 00000 0 05176    13035 STA +0 62100 0 13054   
 13036 CLA +0 50000 0 06741    13037 SUB +0 40200 0 13040    13040 TXH +3 00000 0 04315    13041 STA +0 62100 0 13053   
 13042 CLA +0 50000 0 06741    13043 SUB +0 40200 0 13044    13044 TXH +3 00000 0 03434    13045 STA +0 62100 0 13052   
 13046 TSX +0 07400 4 00003    13047 TXH +3 00000 0 10501    13050 TXH +3 00000 0 00064    13051 TXH +3 00000 0 00063   
 13052 TXH +3 00000 0 00000    13053 TXH +3 00000 0 00000    13054 TXH +3 00000 0 00000    13055 TXH +3 00000 0 00760   
                           TMOPSW=1B                                                347  LM00136
 13056 CLA +0 50000 0 10321    13057 STO +0 60100 0 10301                                                               
                      E'L                                                           348  LM00137
                      BFOPEN.($R$,A,B,BUF6(BUFZ),BUF7(BUFZ),-0,GERR)                349  LM00138
 13060 CLS +0 50200 0 10320    13061 STO +0 60100 0 13350    13062 CLA +0 50000 0 06741    13063 SUB +0 40200 0 13064   
 13064 TXH +3 00000 0 06740    13065 STA +0 62100 0 13077    13066 CLA +0 50000 0 06741    13067 SUB +0 40200 0 13070   
 13070 TXH +3 00000 0 06057    13071 STA +0 62100 0 13076    13072 TSX +0 07400 4 00003    13073 TXH +3 00000 0 10430   
 13074 TXH +3 00000 0 00024    13075 TXH +3 00000 0 00024    13076 TXH +3 00000 0 00000    13077 TXH +3 00000 0 00000   
 13100 TXH +3 00000 0 13350    13101 TXH +3 00000 0 00760                                                               
                      FRSTSW=1B                                                     350  LM00139
 13102 CLA +0 50000 0 10321    13103 STO +0 60100 0 10216                                                               
                      T'H CPF01, FOR I=CPBUFZ,CPBUFZ,I.G.CT                         351  LM00140
 13104 CLA +0 50000 0 07625    13105 STO +0 60100 0 10221    13106 TRA +0 02000 0 13112    13107 CLA +0 50000 0 10221   
 13110 ADD +0 40000 0 07625    13111 STO +0 60100 0 10221    13112 CLA +0 50000 0 10221    13113 SUB +0 40200 0 07627   
 13114 TZE +0 10000 0 13116    13115 TPL +0 12000 0 13170                                                               
                           BFREAD.(A,B,CPBUF(CPBUFZ)...CPBUFZ,                      352  LM00141
                1            CPFEF,EOFCT,GERR)                                      352  LM00142
 13116 CLA +0 50000 0 07625    13117 SUB +0 40200 0 13120    13120 TXH +3 00000 0 07624    13121 STA +0 62100 0 13125   
 13122 TSX +0 07400 4 00004    13123 TXH +3 00000 0 00024    13124 TXH +3 00000 0 00024    13125 TIX +2 07625 0 00000   
 13126 TXH +3 00000 0 00750    13127 TXH +3 00000 0 10145    13130 TXH +3 00000 0 00760                                 
                           W'R BDLNMK.(CPBUF(CPBUFZ-LMKZ)) .AND. FRSTSW             353  LM00143
 13131 NZT -0 52000 0 10216    13132 TRA +0 02000 0 13154    13133 CLA +0 50000 0 07625    13134 SUB +0 40200 0 10225   
 13135 SUB +0 40200 0 13136    13136 TXH +3 00000 0 07624    13137 STA +0 62100 0 13141    13140 TSX +0 07400 4 00035   
 13141 TXH +3 00000 0 00000    13142 TZE +0 10000 0 13154                                                               
                                BFWRIT.(TM1,TM2,NWLNMK(LMKZ)...LMKZ,GERR)           354  LM00144
 13143 CLA +0 50000 0 10225    13144 SUB +0 40200 0 13145    13145 TXH +3 00000 0 10251    13146 STA +0 62100 0 13152   
 13147 TSX +0 07400 4 00005    13150 TXH +3 00000 0 00064    13151 TXH +3 00000 0 00063    13152 TIX +2 10225 0 00000   
 13153 TXH +3 00000 0 00760                                                                                             
                           E'L                                                      355  LM00145
                      FRSTSW=0B                                                     356  LM00146
 13154 CLA +0 50000 0 10320    13155 STO +0 60100 0 10216                                                               
      CPF01                BFWRIT.(TM1,TM2,CPBUF(CPBUFZ)...CPBUFZ,GERR)             357  LM00147
 13156 CLA +0 50000 0 07625    13157 SUB +0 40200 0 13160    13160 TXH +3 00000 0 07624    13161 STA +0 62100 0 13165   
 13162 TSX +0 07400 4 00005    13163 TXH +3 00000 0 00064    13164 TXH +3 00000 0 00063    13165 TIX +2 07625 0 00000   
 13166 TXH +3 00000 0 00760    13167 TRA +0 02000 0 13107                                                               
                      REMN=CPBUFZ-(I-CT)                                            358  LM00148
 13170 CLA +0 50000 0 10221    13171 SUB +0 40200 0 07627    13172 CHS +0 76000 0 00002    13173 ADD +0 40000 0 07625   
 13174 STO +0 60100 0 10275                                                                                             
                      BFREAD.(A,B,CPBUF(REMN)...REMN,CPFEF,EOFCT,GERR)              359  LM00149
 13175 CLA +0 50000 0 10275    13176 SUB +0 40200 0 13177    13177 TXH +3 00000 0 07624    13200 STA +0 62100 0 13204   
 13201 TSX +0 07400 4 00004    13202 TXH +3 00000 0 00024    13203 TXH +3 00000 0 00024    13204 TIX +2 10275 0 00000   
 13205 TXH +3 00000 0 00750    13206 TXH +3 00000 0 10145    13207 TXH +3 00000 0 00760                                 
                      W'R  BDLNMK.(CPBUF(REMN-LMKZ)) .AND. FRSTSW                   360  LM00150
 13210 NZT -0 52000 0 10216    13211 TRA +0 02000 0 13233    13212 CLA +0 50000 0 10275    13213 SUB +0 40200 0 10225   
 13214 SUB +0 40200 0 13215    13215 TXH +3 00000 0 07624    13216 STA +0 62100 0 13220    13217 TSX +0 07400 4 00035   
 13220 TXH +3 00000 0 00000    13221 TZE +0 10000 0 13233                                                               
                           BFWRIT.(TM1,TM2,NWLNMK(LMKZ)...LMKZ,GERR)                361  LM00151
 13222 CLA +0 50000 0 10225    13223 SUB +0 40200 0 13224    13224 TXH +3 00000 0 10251    13225 STA +0 62100 0 13231   
 13226 TSX +0 07400 4 00005    13227 TXH +3 00000 0 00064    13230 TXH +3 00000 0 00063    13231 TIX +2 10225 0 00000   
 13232 TXH +3 00000 0 00760                                                                                             
                      E'L                                                           362  LM00152
                 T'H FDLOOP, FOR I = 27,-9,(I.L.0)                                  363  LM00156
 13233 CLA +0 50000 0 10335    13234 STO +0 60100 0 10221    13235 TRA +0 02000 0 13241    13236 CLS +0 50200 0 10330   
 13237 ADD +0 40000 0 10221    13240 STO +0 60100 0 10221    13241 CLA +0 50000 0 10221    13242 SUB +0 40200 0 10320   
 13243 TZE +0 10000 0 13245    13244 TMI -0 12000 0 13265                                                               
                      W'R ((CPBUF(1).RS.I).A.777K).E.003K,                          364  LM00157
                1          CPBUF(1) = CPBUF(1) .EX. (3K.LS.I)                       364  LM00158
 13245 CAL -0 50000 0 10221    13246 STA +0 62100 0 13250    13247 CAL -0 50000 0 07623    13250 LGR -0 76500 0 00000   
 13251 ANA -0 32000 0 10343    13252 SLW +0 60200 0 13350    13253 CLA +0 50000 0 13350    13254 SUB +0 40200 0 10323   
 13255 TNZ -0 10000 0 13264    13256 CAL -0 50000 0 10221    13257 STA +0 62100 0 13261    13260 CAL -0 50000 0 10323   
 13261 ALS +0 76700 0 00000    13262 ERA +0 32200 0 07623    13263 SLW +0 60200 0 07623                                 
      FDLOOP     C'E                                                                365  LM00159
 13264 TRA +0 02000 0 13236                                                                                             
                      BFWRIT.(TM1,TM2,CPBUF(REMN)...REMN,GERR)                      366  LM00160
 13265 CLA +0 50000 0 10275    13266 SUB +0 40200 0 13267    13267 TXH +3 00000 0 07624    13270 STA +0 62100 0 13274   
 13271 TSX +0 07400 4 00005    13272 TXH +3 00000 0 00064    13273 TXH +3 00000 0 00063    13274 TIX +2 10275 0 00000   
 13275 TXH +3 00000 0 00760                                                                                             
                      BFCLOS.(A,B,GERR)                                             367  LM00161
 13276 TSX +0 07400 4 00002    13277 TXH +3 00000 0 00024    13300 TXH +3 00000 0 00024    13301 TXH +3 00000 0 00760   
                      F'N 1B                                                        368  LM00162
 13302 CLA +0 50000 0 10321    13303 TRA +0 02000 0 13344                                                               
                 E'L                                                                369  LM00163
      CPFEF      PRINT COMMENT $ERROR IN FSTATE.--NOTIFY SYSTEMS STAFF.$            370  LM00164
 13304 TSX +0 07400 4 00021    13305     +0 00000 0 00007    13306     +2 55151 4 65160    13307     +3 14560 2 66263   
 13310     +2 16325 3 34040    13311     -0 54663 3 12670    13312     -2 06270 6 26325    13313     -0 46260 6 26321   
 13314     +2 62633 6 06060                                                                                             
                 PRINT COMMENT $DORMNT CALLED$                                      371  LM00165
 13315 TSX +0 07400 4 00021    13316     +0 00000 0 00003    13317     +2 44651 4 44563    13320     -2 02321 4 34325   
 13321     +2 46060 6 06060                                                                                             
                 DORMNT.                                                            372  LM00166
 13322 TSX +0 07400 4 00014                                                                                             
                 END OF FUNCTION                                                    373  LM00167
 13323 TSX +0 07400 4 00015    13324 TXH +3 00000 0 00000    13325 SXD -0 63400 1 13324    13326 SXA +0 63400 4 13344   
 13327 CLA +0 50000 4 00001    13330 STO +0 60100 0 13014    13331 STO +0 60100 0 13074    13332 STO +0 60100 0 13123   
 13333 STO +0 60100 0 13202    13334 STO +0 60100 0 13277    13335 CLA +0 50000 4 00002    13336 STO +0 60100 0 13015   
 13337 STO +0 60100 0 13075    13340 STO +0 60100 0 13124    13341 STO +0 60100 0 13203    13342 STO +0 60100 0 13300   
 13343 TRA +0 02000 2 00001    13344 AXT +0 77400 4 00000    13345 LXA +0 53400 2 13324    13346 LXD -0 53400 1 13324   
 13347 TRA +0 02000 4 00001                                                                                             
                 NORMAL MODE IS INTEGER                                             374  LM00168
                 BOOLEAN COPYSW, PRSSW, WMRKSW, AROPSW, TMOPSW, FRSTSW              375  LM00169
                 BOOLEAN NAMO, ADJSW, NAMTYP                                        376  LM00170
                 V'S BUFZ=432                                                       377  LM00171
 06741     +0 00000 0 00660                                                                                             
                 D'N BUF1(432), BUF2(432), BUF3(432), BUF4(432), BUF5(432),         378  LM00172
                1  BUF6(432), BUF7(432)                                             378  LM00173
                 D'N CPBUF(432)                                                     379  LM00174
                   V'S CPBUFZ=432                                                   380  LM00175
 07625     +0 00000 0 00660                                                                                             
                 V'S FILTBZ=16                                                      381  LM00176
 10211     +0 00000 0 00020                                                                                             
                 D'N FILTAB(16)                                                     382  LM00177
                 BOOLEAN FILFND                                                     383  LM00178
                 D'N FILFND(16)                                                     384  LM00179
                 BOOLEAN CLS.                                                       385  LM00183
                 INTERNAL FUNCTION (A,B)                                            386  LM00184
 13351 TRA +0 02000 0 13522                                                                                             
                 E'O CLS.                                                           387  LM00185
 13352 TRA +0 02000 0 13355    00036 TTR +0 02100 0 13353    13353 SXA +0 63400 2 13472    13354 TSX +0 07400 2 13472   
                 W'R TMOPSW                                                         388  LM00186
 13355 NZT -0 52000 0 10301    13356 TRA +0 02000 0 13464                                                               
                      BFCLOS.(TM1,TM2,GERR)                                         389  LM00187
 13357 TSX +0 07400 4 00002    13360 TXH +3 00000 0 00064    13361 TXH +3 00000 0 00063    13362 TXH +3 00000 0 00760   
                      TMOPSW=0B                                                     390  LM00188
 13363 CLA +0 50000 0 10320    13364 STO +0 60100 0 10301                                                               
                      D'N FNM(2)                                                    391  LM00189
                      FNM(0)=A                                                      392  LM00190
 13365 CLA +0 50000 0 00024    13366 STO +0 60100 0 10215                                                               
                      FNM(1)=B                                                      393  LM00191
 13367 CLA +0 50000 0 00024    13370 STO +0 60100 0 10214                                                               
                      FSTATE.(A,B,FSBUF(8)...8,NFND)                                394  LM00192
 13371 TSX +0 07400 4 00016    13372 TXH +3 00000 0 00024    13373 TXH +3 00000 0 00024    13374 TIX +2 10327 0 00735   
 13375 TXH +3 00000 0 00762                                                                                             
                        EQUIVALENCE (MODE,FSBUF(7))                                 395  LM00193
                      MODE=MODE.A.134K                                              396  LM00194
 13376 CAL -0 50000 0 00736    13377 ANA -0 32000 0 10342    13400 SLW +0 60200 0 00736                                 
      CL01       DELETE.(A,B,0,NDEL1)                                               397  LM00195
 13401 TSX +0 07400 4 00013    13402 TXH +3 00000 0 00024    13403 TXH +3 00000 0 00024    13404 TXH +3 00000 0 10320   
 13405 TXH +3 00000 0 00761                                                                                             
                 CHFILE.(TM1,TM2,-0,A,B)                                            398  LM00196
 13406 CLS +0 50200 0 10320    13407 STO +0 60100 0 13520    13410 TSX +0 07400 4 00007    13411 TXH +3 00000 0 00064   
 13412 TXH +3 00000 0 00063    13413 TXH +3 00000 0 13520    13414 TXH +3 00000 0 00024    13415 TXH +3 00000 0 00024   
                      W'R MODE.NE.000K .AND. KEY.NE.$    XT$                        399  LM00197
 13416 CLA +0 50000 0 10224    13417 SUB +0 40200 0 10457    13420 TZE +0 10000 0 13457    13421 CLA +0 50000 0 00736   
 13422 SUB +0 40200 0 10320    13423 TZE +0 10000 0 13457                                                               
                           CHFILE.(A,B,MODE,-0,-0)                                  400  LM00198
 13424 CLS +0 50200 0 10320    13425 STO +0 60100 0 13520    13426 CLS +0 50200 0 10320    13427 STO +0 60100 0 13521   
 13430 TSX +0 07400 4 00007    13431 TXH +3 00000 0 00024    13432 TXH +3 00000 0 00024    13433 TXH +3 00000 0 00736   
 13434 TXH +3 00000 0 13521    13435 TXH +3 00000 0 13520                                                               
                      MODEP = (OCRBC.(MODE).A.777777K).V.575757K6                   401  LM00199
 13436 TSX +0 07400 4 00023    13437 TXH +3 00000 0 00736    13440 STO +0 60100 0 13521    13441 CAL -0 50000 0 13521   
 13442 ANA -0 32000 0 10350    13443 ORA -0 50100 0 10431    13444 SLW +0 60200 0 10226                                 
                      PRMESS.(A,BL,B,BL,$CREATED IN '$,MODEP,$' MODE.$)             402  LM00200
 13445 TSX +0 07400 4 00027    13446 TXH +3 00000 0 00024    13447 TXH +3 00000 0 01011    13450 TXH +3 00000 0 00024   
 13451 TXH +3 00000 0 01011    13452 TXH +3 00000 0 10364    13453 TXH +3 00000 0 10366    13454 TXH +3 00000 0 10226   
 13455 TXH +3 00000 0 10355    13456 TXH +3 00000 0 10400                                                               
                      E'L                                                           403  LM00201
                      F'N 1B                                                        404  LM00202
 13457 CLA +0 50000 0 10321    13460 TRA +0 02000 0 13514                                                               
      NDEL1           F'N 0B                                                        405  LM00203
 13461 CLA +0 50000 0 10320    13462 TRA +0 02000 0 13514                                                               
                 O'E                                                                406  LM00204
 13463 TRA +0 02000 0 13466                                                                                             
                      F'N 0B                                                        407  LM00205
 13464 CLA +0 50000 0 10320    13465 TRA +0 02000 0 13514                                                               
                 E'L                                                                408  LM00206
      NFND       MODE=000K                                                          409  LM00207
 13466 CLA +0 50000 0 10320    13467 STO +0 60100 0 00736                                                               
                 T'O CL01                                                           410  LM00208
 13470 TRA +0 02000 0 00746                                                                                             
                 END OF FUNCTION                                                    411  LM00209
 13471 TSX +0 07400 4 00015    13472 TXH +3 00000 0 00000    13473 SXD -0 63400 1 13472    13474 SXA +0 63400 4 13514   
 13475 CLA +0 50000 4 00001    13476 STA +0 62100 0 13365    13477 STO +0 60100 0 13372    13500 STO +0 60100 0 13402   
 13501 STO +0 60100 0 13414    13502 STO +0 60100 0 13431    13503 STO +0 60100 0 13446    13504 CLA +0 50000 4 00002   
 13505 STA +0 62100 0 13367    13506 STO +0 60100 0 13373    13507 STO +0 60100 0 13403    13510 STO +0 60100 0 13415   
 13511 STO +0 60100 0 13432    13512 STO +0 60100 0 13450    13513 TRA +0 02000 2 00001    13514 AXT +0 77400 4 00000   
 13515 LXA +0 53400 2 13472    13516 LXD -0 53400 1 13472    13517 TRA +0 02000 4 00001                                 
                 BOOLEAN YES.                                                       412  LM00214
                 INTERNAL FUNCTION                                                  413  LM00215
 13522 TRA +0 02000 0 13552                                                                                             
                 E'O YES.                                                           414  LM00216
 13523 TRA +0 02000 0 13526    00055 TTR +0 02100 0 13524    13524 SXA +0 63400 2 13542    13525 TSX +0 07400 2 13542   
                 RDFLXC.(YESNO,6)                                                   415  LM00217
 13526 TSX +0 07400 4 00031    13527 TXH +3 00000 0 10317    13530 TXH +3 00000 0 10326                                 
                 W'R YESNO.E.$YES   $                                               416  LM00218
 13531 CLA +0 50000 0 10317    13532 SUB +0 40200 0 10503    13533 TNZ -0 10000 0 13537                                 
                      F'N 1B                                                        417  LM00219
 13534 CLA +0 50000 0 10321    13535 TRA +0 02000 0 13546                                                               
                 O'E                                                                418  LM00220
 13536 TRA +0 02000 0 13541                                                                                             
                      F'N 0B                                                        419  LM00221
 13537 CLA +0 50000 0 10320    13540 TRA +0 02000 0 13546                                                               
                 E'L                                                                420  LM00222
                 END OF FUNCTION                                                    421  LM00223
 13541 TSX +0 07400 4 00015    13542 TXH +3 00000 0 00000    13543 SXD -0 63400 1 13542    13544 SXA +0 63400 4 13546   
 13545 TRA +0 02000 2 00001    13546 AXT +0 77400 4 00000    13547 LXA +0 53400 2 13542    13550 LXD -0 53400 1 13542   
 13551 TRA +0 02000 4 00001                                                                                             
                 BOOLEAN DELT.                                                      422  LM00228
                 INTERNAL FUNCTION (A,B)                                            423  LM00229
 13552 TRA +0 02000 0 13633                                                                                             
                 E'O DELT.                                                          424  LM00230
 13553 TRA +0 02000 0 13556    00044 TTR +0 02100 0 13554    13554 SXA +0 63400 2 13611    13555 TSX +0 07400 2 13611   
                 FNM(0)=A                                                           425  LM00231
 13556 CLA +0 50000 0 00024    13557 STO +0 60100 0 10215                                                               
                 FNM(1)=B                                                           426  LM00232
 13560 CLA +0 50000 0 00024    13561 STO +0 60100 0 10214                                                               
                 DELETE.(A,B,0,NOTDEL)                                              427  LM00233
 13562 TSX +0 07400 4 00013    13563 TXH +3 00000 0 00024    13564 TXH +3 00000 0 00024    13565 TXH +3 00000 0 10320   
 13566 TXH +3 00000 0 00763                                                                                             
                      PRMESS.(A,BL,B,$ DELETED.$)                                   428  LM00234
 13567 TSX +0 07400 4 00027    13570 TXH +3 00000 0 00024    13571 TXH +3 00000 0 01011    13572 TXH +3 00000 0 00024   
 13573 TXH +3 00000 0 10434    13574 TXH +3 00000 0 10367                                                               
                      F'N 1B                                                        429  LM00235
 13575 CLA +0 50000 0 10321    13576 TRA +0 02000 0 13627                                                               
      NOTDEL     PRMESS.(A,BL,B,$ NOT DELETED.$)                                    430  LM00236
 13577 TSX +0 07400 4 00027    13600 TXH +3 00000 0 00024    13601 TXH +3 00000 0 01011    13602 TXH +3 00000 0 00024   
 13603 TXH +3 00000 0 10444    13604 TXH +3 00000 0 10370    13605 TXH +3 00000 0 10400                                 
                 F'N 0B                                                             431  LM00237
 13606 CLA +0 50000 0 10320    13607 TRA +0 02000 0 13627                                                               
                 E'N                                                                432  LM00238
 13610 TSX +0 07400 4 00015    13611 TXH +3 00000 0 00000    13612 SXD -0 63400 1 13611    13613 SXA +0 63400 4 13627   
 13614 CLA +0 50000 4 00001    13615 STA +0 62100 0 13556    13616 STO +0 60100 0 13563    13617 STO +0 60100 0 13570   
 13620 STO +0 60100 0 13600    13621 CLA +0 50000 4 00002    13622 STA +0 62100 0 13560    13623 STO +0 60100 0 13564   
 13624 STO +0 60100 0 13572    13625 STO +0 60100 0 13602    13626 TRA +0 02000 2 00001    13627 AXT +0 77400 4 00000   
 13630 LXA +0 53400 2 13611    13631 LXD -0 53400 1 13611    13632 TRA +0 02000 4 00001                                 
                 INSERT FILE AFORM                                                  433  LM00300
                 INTERNAL FUNCTION (A,B,CT)                                         434  LM00017
 13633 TRA +0 02000 0 14001                                                                                             
                 E'O MKLNMK.                                                        435  LM00018
 13634 TRA +0 02000 0 13637    00051 TTR +0 02100 0 13635    13635 SXA +0 63400 2 13756    13636 TSX +0 07400 2 13756   
                 B'N MKLNMK.                                                        436  LM00019
                 FSTATE.(A,B,CT...1,NTFND)                                          437  LM00020
 13637 TSX +0 07400 4 00016    13640 TXH +3 00000 0 00024    13641 TXH +3 00000 0 00024    13642 TIX +2 10321 0 00024   
 13643 TXH +3 00000 0 00764                                                                                             
                 RCONV.(BZEL.(DEFBC.(CT)),NWLNMK(4),NWLNMK(3))                      438  LM00021
 13644 TSX +0 07400 4 00012    13645 TXH +3 00000 0 00024    13646 STO +0 60100 0 13777    13647 TSX +0 07400 4 00006   
 13650 TXH +3 00000 0 13777    13651 STO +0 60100 0 13777    13652 TSX +0 07400 4 00053    13653 TXH +3 00000 0 13777   
 13654 TXH +3 00000 0 10245    13655 TXH +3 00000 0 10246                                                               
                 V'S NWLNMK(13) = 177 177 011 011K, 014 012 012 012K                439  LM00025
 10233     +0 14012 0 12012    10234     +1 77177 0 11011                                                               
                 V'S NWLNMK(1) = 012 012 012 012K, 177 177 177 177K                 440  LM00026
 10247     +1 77177 1 77177    10250     +0 12012 0 12012                                                               
                 LCONV.(A,NWLNMK(12),NWLNMK(11))                                    441  LM00027
 13656 TSX +0 07400 4 00050    13657 TXH +3 00000 0 00024    13660 TXH +3 00000 0 10235    13661 TXH +3 00000 0 10236   
                 LCONV.(B,NWLNMK(10),NWLNMK(9))                                     442  LM00028
 13662 TSX +0 07400 4 00050    13663 TXH +3 00000 0 00024    13664 TXH +3 00000 0 10237    13665 TXH +3 00000 0 10240   
                 V'S GOTTM = 0B                                                     443  LM00032
 10220     +0 00000 0 00000                                                                                             
                 W'R .NOT. GOTTM                                                    444  LM00033
 13666 ZET +0 52000 0 10220    13667 TRA +0 02000 0 13751                                                               
                      GOTTM = 1B                                                    445  LM00034
 13670 CLA +0 50000 0 10321    13671 STO +0 60100 0 10220                                                               
                      GETTIM.(PDATE,PTIME)                                          446  LM00035
 13672 TSX +0 07400 4 00017    13673 TXH +3 00000 0 10252    13674 TXH +3 00000 0 10274                                 
                      RCONV.(PTIME,NWLNMK(6),NWLNMK(5))                             447  LM00036
 13675 TSX +0 07400 4 00053    13676 TXH +3 00000 0 10274    13677 TXH +3 00000 0 10243    13700 TXH +3 00000 0 10244   
                      TEMP1 = (PDATE.A.7777K8) .V. $00/00/$ .V.                     448  LM00037
                1          ((PDATE.RS.6).A.7777K2)                                  448  LM00038
 13701 CAL -0 50000 0 10326    13702 STA +0 62100 0 13704    13703 CAL -0 50000 0 10252    13704 LGR -0 76500 0 00000   
 13705 ANA -0 32000 0 10347    13706 SLW +0 60200 0 13777    13707 CAL -0 50000 0 10252    13710 ANA -0 32000 0 10510   
 13711 ORA -0 50100 0 10352    13712 ORA -0 50100 0 13777    13713 SLW +0 60200 0 10276                                 
                      LCONV.(TEMP1,NWLNMK(8),NWLNMK(7))                             449  LM00039
 13714 TSX +0 07400 4 00050    13715 TXH +3 00000 0 10276    13716 TXH +3 00000 0 10241    13717 TXH +3 00000 0 10242   
                      NWLNMK(7) = (NWLNMK(7).A.777777K6) .V.                        450  LM00040
                1          TSSASC.((PDATE.RS.6).A.77K).LS.9 .V.                     450  LM00041
                2          TSSASC.(PDATE.A.77K)                                     450  LM00042
 13720 CAL -0 50000 0 10252    13721 ANA -0 32000 0 10341    13722 SLW +0 60200 0 13777    13723 TSX +0 07400 4 00033   
 13724 TXH +3 00000 0 13777    13725 STO +0 60100 0 13777    13726 CAL -0 50000 0 10326    13727 STA +0 62100 0 13731   
 13730 CAL -0 50000 0 10252    13731 LGR -0 76500 0 00000    13732 ANA -0 32000 0 10341    13733 SLW +0 60200 0 14000   
 13734 TSX +0 07400 4 00033    13735 TXH +3 00000 0 14000    13736 STO +0 60100 0 14000    13737 CAL -0 50000 0 10330   
 13740 STA +0 62100 0 13742    13741 CAL -0 50000 0 14000    13742 ALS +0 76700 0 00000    13743 SLW +0 60200 0 14000   
 13744 CAL -0 50000 0 10242    13745 ANA -0 32000 0 10511    13746 ORA -0 50100 0 14000    13747 ORA -0 50100 0 13777   
 13750 SLW +0 60200 0 10242                                                                                             
                 E'L                                                                451  LM00043
                 F'N 1B                                                             452  LM00044
 13751 CLA +0 50000 0 10321    13752 TRA +0 02000 0 13773                                                               
      NTFND      F'N 0B                                                             453  LM00046
 13753 CLA +0 50000 0 10320    13754 TRA +0 02000 0 13773                                                               
                 E'N                                                                454  LM00047
 13755 TSX +0 07400 4 00015    13756 TXH +3 00000 0 00000    13757 SXD -0 63400 1 13756    13760 SXA +0 63400 4 13773   
 13761 CLA +0 50000 4 00001    13762 STO +0 60100 0 13640    13763 STO +0 60100 0 13657    13764 CLA +0 50000 4 00002   
 13765 STO +0 60100 0 13641    13766 STO +0 60100 0 13663    13767 CLA +0 50000 4 00003    13770 STA +0 62100 0 13642   
 13771 STO +0 60100 0 13645    13772 TRA +0 02000 2 00001    13773 AXT +0 77400 4 00000    13774 LXA +0 53400 2 13756   
 13775 LXD -0 53400 1 13756    13776 TRA +0 02000 4 00001                                                               
                 B'N BDLNMK.                                                        455  LM00052
                 INTERNAL FUNCTION BDLNMK.(LMK)=(LMK(14) .NE. NWLNMK(14)) .OR.      456  LM00053
                1     (LMK(13) .NE. NWLNMK(13)) .OR. (LMK(2) .NE. NWLNMK(2))        456  LM00054
                2     .OR. (LMK(1) .NE. NWLNMK(1))                                  456  LM00055
 14001 TRA +0 02000 0 14047    00035 TTR +0 02100 0 14002    14002 SXA +0 63400 2 14026    14003 TSX +0 07400 2 14026   
 14004 CLA +0 50000 0 00023    14005 SUB +0 40200 0 10250    14006 TNZ -0 10000 0 14022    14007 CLA +0 50000 0 00022   
 14010 SUB +0 40200 0 10247    14011 TNZ -0 10000 0 14022    14012 CLA +0 50000 0 00007    14013 SUB +0 40200 0 10234   
 14014 TNZ -0 10000 0 14022    14015 CLA +0 50000 0 00006    14016 SUB +0 40200 0 10233    14017 TNZ -0 10000 0 14022   
 14020 PXD -0 75400 0 00000    14021 TRA +0 02000 0 14023    14022 CLA +0 50000 0 10321    14023 TRA +0 02000 0 14043   
 14024 PZE +0 00000 0 00001    14025 PZE +0 00000 0 00013    14026 TXH +3 00000 0 00000    14027 SXD -0 63400 1 14026   
 14030 SXA +0 63400 4 14043    14031 CLA +0 50000 4 00001    14032 SUB +0 40200 0 14024    14033 STA +0 62100 0 14004   
 14034 SUB +0 40200 0 14024    14035 STA +0 62100 0 14007    14036 SUB +0 40200 0 14025    14037 STA +0 62100 0 14012   
 14040 SUB +0 40200 0 14024    14041 STA +0 62100 0 14015    14042 TRA +0 02000 2 00001    14043 AXT +0 77400 4 00000   
 14044 LXA +0 53400 2 14026    14045 LXD -0 53400 1 14026    14046 TRA +0 02000 4 00001                                 
                 INTERNAL FUNCTION (LMK)                                            457  LM00061
 14047 TRA +0 02000 0 14253                                                                                             
                 E'O DATTM.                                                         458  LM00062
 14050 TRA +0 02000 0 14053    00043 TTR +0 02100 0 14051    14051 SXA +0 63400 2 14224    14052 TSX +0 07400 2 14224   
                 TEMP1 = CONVL.(LMK(8),LMK(7))                                      459  LM00063
 14053 TSX +0 07400 4 00040    14054 TXH +3 00000 0 00014    14055 TXH +3 00000 0 00015    14056 STO +0 60100 0 10276   
                 TEMP1 = (TEMP1.A.7777K8) .V. ((TEMP1.LS.6).A.7777K4)               460  LM00064
 14057 CAL -0 50000 0 10326    14060 STA +0 62100 0 14062    14061 CAL -0 50000 0 10276    14062 ALS +0 76700 0 00000   
 14063 ANA -0 32000 0 10353    14064 SLW +0 60200 0 14247    14065 CAL -0 50000 0 10276    14066 ANA -0 32000 0 10510   
 14067 ORA -0 50100 0 14247    14070 SLW +0 60200 0 10276                                                               
                 TEMP1 = TEMP1 .V. (CONVR.(LMK(8),LMK(7)).A.7777K)                  461  LM00065
 14071 TSX +0 07400 4 00041    14072 TXH +3 00000 0 00014    14073 TXH +3 00000 0 00015    14074 STO +0 60100 0 14247   
 14075 CAL -0 50000 0 14247    14076 ANA -0 32000 0 10345    14077 ORA -0 50100 0 10276    14100 SLW +0 60200 0 10276   
                 TEMP2 = CONVR.(LMK(6),LMK(5))                                      462  LM00066
 14101 TSX +0 07400 4 00041    14102 TXH +3 00000 0 00016    14103 TXH +3 00000 0 00017    14104 STO +0 60100 0 10277   
                 F'N (BCDEC.(TEMP1.A.7777K).LS. 27) .V.                             463  LM00070
                1     (BCDEC.((TEMP1.RS.12).A.7777K).LS.18) .V.                     463  LM00071
                2     (BCDEC.(TEMP1.RS.24).LS.23) .V.                               463  LM00072
                3     (BCDEC.(TEMP2.RS.24)*3600 +                                   463  LM00073
                4     BCDEC.((TEMP2.RS.12).A.7777K)*60 +                            463  LM00074
                5     BCDEC.(TEMP2.A.77K)*6)                                        463  LM00075
 14105 CAL -0 50000 0 10277    14106 ANA -0 32000 0 10341    14107 SLW +0 60200 0 14247    14110 TSX +0 07400 4 00001   
 14111 TXH +3 00000 0 14247    14112 XCA +0 13100 0 00000    14113 MPY +0 20000 0 10326    14114 STQ -0 60000 0 14247   
 14115 CAL -0 50000 0 10331    14116 STA +0 62100 0 14120    14117 CAL -0 50000 0 10277    14120 LGR -0 76500 0 00000   
 14121 ANA -0 32000 0 10345    14122 SLW +0 60200 0 14250    14123 TSX +0 07400 4 00001    14124 TXH +3 00000 0 14250   
 14125 XCA +0 13100 0 00000    14126 MPY +0 20000 0 10340    14127 STQ -0 60000 0 14250    14130 CAL -0 50000 0 10334   
 14131 STA +0 62100 0 14133    14132 CAL -0 50000 0 10277    14133 LGR -0 76500 0 00000    14134 SLW +0 60200 0 14251   
 14135 TSX +0 07400 4 00001    14136 TXH +3 00000 0 14251    14137 XCA +0 13100 0 00000    14140 MPY +0 20000 0 10344   
 14141 XCA +0 13100 0 00000    14142 ADD +0 40000 0 14250    14143 ADD +0 40000 0 14247    14144 STO +0 60100 0 14251   
 14145 CAL -0 50000 0 10334    14146 STA +0 62100 0 14150    14147 CAL -0 50000 0 10276    14150 LGR -0 76500 0 00000   
 14151 SLW +0 60200 0 14250    14152 TSX +0 07400 4 00001    14153 TXH +3 00000 0 14250    14154 STO +0 60100 0 14250   
 14155 CAL -0 50000 0 10333    14156 STA +0 62100 0 14160    14157 CAL -0 50000 0 14250    14160 ALS +0 76700 0 00000   
 14161 SLW +0 60200 0 14250    14162 CAL -0 50000 0 10331    14163 STA +0 62100 0 14165    14164 CAL -0 50000 0 10276   
 14165 LGR -0 76500 0 00000    14166 ANA -0 32000 0 10345    14167 SLW +0 60200 0 14247    14170 TSX +0 07400 4 00001   
 14171 TXH +3 00000 0 14247    14172 STO +0 60100 0 14247    14173 CAL -0 50000 0 10332    14174 STA +0 62100 0 14176   
 14175 CAL -0 50000 0 14247    14176 ALS +0 76700 0 00000    14177 SLW +0 60200 0 14247    14200 CAL -0 50000 0 10276   
 14201 ANA -0 32000 0 10345    14202 SLW +0 60200 0 14252    14203 TSX +0 07400 4 00001    14204 TXH +3 00000 0 14252   
 14205 STO +0 60100 0 14252    14206 CAL -0 50000 0 10335    14207 STA +0 62100 0 14211    14210 CAL -0 50000 0 14252   
 14211 ALS +0 76700 0 00000    14212 ORA -0 50100 0 14247    14213 ORA -0 50100 0 14250    14214 ORA -0 50100 0 14251   
 14215 SLW +0 60200 0 14252    14216 CLA +0 50000 0 14252    14217 TRA +0 02000 0 14243                                 
                 E'N                                                                464  LM00076
 14220 TSX +0 07400 4 00015    14221 PZE +0 00000 0 00001    14222 PZE +0 00000 0 00013    14223 PZE +0 00000 0 00005   
 14224 TXH +3 00000 0 00000    14225 SXD -0 63400 1 14224    14226 SXA +0 63400 4 14243    14227 CLA +0 50000 4 00001   
 14230 SUB +0 40200 0 14223    14231 STO +0 60100 0 14103    14232 SUB +0 40200 0 14221    14233 STO +0 60100 0 14102   
 14234 SUB +0 40200 0 14221    14235 STO +0 60100 0 14055    14236 STO +0 60100 0 14073    14237 SUB +0 40200 0 14221   
 14240 STO +0 60100 0 14054    14241 STO +0 60100 0 14072    14242 TRA +0 02000 2 00001    14243 AXT +0 77400 4 00000   
 14244 LXA +0 53400 2 14224    14245 LXD -0 53400 1 14224    14246 TRA +0 02000 4 00001                                 
                 INTERNAL FUNCTION CNT.(LMK) = BCDEC.(CONVR.(LMK(4),LMK(3)))        465  LM00080
 14253 TRA +0 02000 0 14307    00037 TTR +0 02100 0 14254    14254 SXA +0 63400 2 14271    14255 TSX +0 07400 2 14271   
 14256 TSX +0 07400 4 00041    14257 TXH +3 00000 0 00020    14260 TXH +3 00000 0 00021    14261 STO +0 60100 0 14306   
 14262 TSX +0 07400 4 00001    14263 TXH +3 00000 0 14306    14264 TRA +0 02000 0 14302    14265 PZE +0 00000 0 00001   
 14266 PZE +0 00000 0 00013    14267 PZE +0 00000 0 00005    14270 PZE +0 00000 0 00003    14271 TXH +3 00000 0 00000   
 14272 SXD -0 63400 1 14271    14273 SXA +0 63400 4 14302    14274 CLA +0 50000 4 00001    14275 SUB +0 40200 0 14270   
 14276 STO +0 60100 0 14260    14277 SUB +0 40200 0 14265    14300 STO +0 60100 0 14257    14301 TRA +0 02000 2 00001   
 14302 AXT +0 77400 4 00000    14303 LXA +0 53400 2 14271    14304 LXD -0 53400 1 14271    14305 TRA +0 02000 4 00001   
                 INTERNAL FUNCTION FLN1.(LMK) = CONVL.(LMK(12),LMK(11))             466  LM00081
 14307 TRA +0 02000 0 14337    00045 TTR +0 02100 0 14310    14310 SXA +0 63400 2 14322    14311 TSX +0 07400 2 14322   
 14312 TSX +0 07400 4 00040    14313 TXH +3 00000 0 00010    14314 TXH +3 00000 0 00011    14315 TRA +0 02000 0 14333   
 14316 PZE +0 00000 0 00001    14317 PZE +0 00000 0 00013    14320 PZE +0 00000 0 00005    14321 PZE +0 00000 0 00003   
 14322 TXH +3 00000 0 00000    14323 SXD -0 63400 1 14322    14324 SXA +0 63400 4 14333    14325 CLA +0 50000 4 00001   
 14326 SUB +0 40200 0 14317    14327 STO +0 60100 0 14314    14330 SUB +0 40200 0 14316    14331 STO +0 60100 0 14313   
 14332 TRA +0 02000 2 00001    14333 AXT +0 77400 4 00000    14334 LXA +0 53400 2 14322    14335 LXD -0 53400 1 14322   
 14336 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION FLN2.(LMK) = CONVL.(LMK(10),LMK(9))              467  LM00082
 14337 TRA +0 02000 0 14370    00046 TTR +0 02100 0 14340    14340 SXA +0 63400 2 14353    14341 TSX +0 07400 2 14353   
 14342 TSX +0 07400 4 00040    14343 TXH +3 00000 0 00012    14344 TXH +3 00000 0 00013    14345 TRA +0 02000 0 14364   
 14346 PZE +0 00000 0 00001    14347 PZE +0 00000 0 00013    14350 PZE +0 00000 0 00005    14351 PZE +0 00000 0 00003   
 14352 PZE +0 00000 0 00011    14353 TXH +3 00000 0 00000    14354 SXD -0 63400 1 14353    14355 SXA +0 63400 4 14364   
 14356 CLA +0 50000 4 00001    14357 SUB +0 40200 0 14352    14360 STO +0 60100 0 14344    14361 SUB +0 40200 0 14346   
 14362 STO +0 60100 0 14343    14363 TRA +0 02000 2 00001    14364 AXT +0 77400 4 00000    14365 LXA +0 53400 2 14353   
 14366 LXD -0 53400 1 14353    14367 TRA +0 02000 4 00001                                                               
                 INTERNAL FUNCTION                                                  468  LM00086
 14370 TRA +0 02000 0 14471                                                                                             
                 E'O PTLNMK.                                                        469  LM00087
 14371 TRA +0 02000 0 14374    00052 TTR +0 02100 0 14372    14372 SXA +0 63400 2 14453    14373 TSX +0 07400 2 14453   
                 PRMESS. (CONVL.(PRLNMK(12),PRLNMK(11)), BL,                        470  LM00088
                1     CONVL.(PRLNMK(10),PRLNMK(9)), BL,                             470  LM00089
                2     CONVL.(PRLNMK(8),PRLNMK(7)),                                  470  LM00090
                3     CONVR.(PRLNMK(8),PRLNMK(7)) .LS. 24 .V. 60575757K,            470  LM00091
                4     CONVR.(PRLNMK(6),PRLNMK(5)), BL,                              470  LM00092
                5     CONVR.(PRLNMK(4),PRLNMK(3)) )                                 470  LM00093
 14374 TSX +0 07400 4 00041    14375 TXH +3 00000 0 10266    14376 TXH +3 00000 0 10267    14377 STO +0 60100 0 14463   
 14400 TSX +0 07400 4 00041    14401 TXH +3 00000 0 10264    14402 TXH +3 00000 0 10265    14403 STO +0 60100 0 14464   
 14404 TSX +0 07400 4 00041    14405 TXH +3 00000 0 10262    14406 TXH +3 00000 0 10263    14407 STO +0 60100 0 14465   
 14410 CAL -0 50000 0 10334    14411 STA +0 62100 0 14413    14412 CAL -0 50000 0 14465    14413 ALS +0 76700 0 00000   
 14414 ORA -0 50100 0 10351    14415 SLW +0 60200 0 14465    14416 TSX +0 07400 4 00040    14417 TXH +3 00000 0 10262   
 14420 TXH +3 00000 0 10263    14421 STO +0 60100 0 14466    14422 TSX +0 07400 4 00040    14423 TXH +3 00000 0 10260   
 14424 TXH +3 00000 0 10261    14425 STO +0 60100 0 14467    14426 TSX +0 07400 4 00040    14427 TXH +3 00000 0 10256   
 14430 TXH +3 00000 0 10257    14431 STO +0 60100 0 14470    14432 TSX +0 07400 4 00027    14433 TXH +3 00000 0 14470   
 14434 TXH +3 00000 0 01011    14435 TXH +3 00000 0 14467    14436 TXH +3 00000 0 01011    14437 TXH +3 00000 0 14466   
 14440 TXH +3 00000 0 14465    14441 TXH +3 00000 0 14464    14442 TXH +3 00000 0 01011    14443 TXH +3 00000 0 14463   
                 F'N                                                                471  LM00094
 14444 TRA +0 02000 0 14457                                                                                             
                 E'N                                                                472  LM00095
 14445 TSX +0 07400 4 00015    14446 PZE +0 00000 0 00001    14447 PZE +0 00000 0 00013    14450 PZE +0 00000 0 00005   
 14451 PZE +0 00000 0 00003    14452 PZE +0 00000 0 00011    14453 TXH +3 00000 0 00000    14454 SXD -0 63400 1 14453   
 14455 SXA +0 63400 4 14457    14456 TRA +0 02000 2 00001    14457 AXT +0 77400 4 00000    14460 LXA +0 53400 2 14453   
 14461 LXD -0 53400 1 14453    14462 TRA +0 02000 4 00001                                                               
                 D'N PRLNMK(14),NWLNMK(14)                                          473  LM00097
                 V'S LMKZ = 14                                                      474  LM00098
 10225     +0 00000 0 00016                                                                                             
                 D'N FSBUF (432)                                                    475  LM00099
                 INTERNAL FUNCTION (ARG1,ARG2,ARG3)                                 476  LM00108
 14471 TRA +0 02000 0 14646                                                                                             
                 E'O RCONV.                                                         477  LM00109
 14472 TRA +0 02000 0 14475    00053 TTR +0 02100 0 14473    14473 SXA +0 63400 2 14617    14474 TSX +0 07400 2 14617   
                 ARG2 = 040 040K6 .V. (TSSASC.(ARG1.RS.30).LS.9) .V.                478  LM00110
                1     TSSASC.((ARG1.RS.24).A.77K)                                   478  LM00111
 14475 CAL -0 50000 0 10334    14476 STA +0 62100 0 14500    14477 CAL -0 50000 0 00024    14500 LGR -0 76500 0 00000   
 14501 ANA -0 32000 0 10341    14502 SLW +0 60200 0 14642    14503 TSX +0 07400 4 00033    14504 TXH +3 00000 0 14642   
 14505 STO +0 60100 0 14642    14506 CAL -0 50000 0 10336    14507 STA +0 62100 0 14511    14510 CAL -0 50000 0 00024   
 14511 LGR -0 76500 0 00000    14512 SLW +0 60200 0 14643    14513 TSX +0 07400 4 00033    14514 TXH +3 00000 0 14643   
 14515 STO +0 60100 0 14643    14516 CAL -0 50000 0 10330    14517 STA +0 62100 0 14521    14520 CAL -0 50000 0 14643   
 14521 ALS +0 76700 0 00000    14522 ORA -0 50100 0 10354    14523 ORA -0 50100 0 14642    14524 SLW +0 60200 0 00024   
                 ARG3 = (TSSASC.((ARG1.RS.18).A.77K).LS.27)                         479  LM00112
                1     .V. (TSSASC.((ARG1.RS.12).A.77K).LS.18)                       479  LM00113
                2     .V. (TSSASC.((ARG1.RS.6).A.77K) .LS. 9)                       479  LM00114
                3     .V. TSSASC.(ARG1.A.77K)                                       479  LM00115
 14525 CAL -0 50000 0 00024    14526 ANA -0 32000 0 10341    14527 SLW +0 60200 0 14643    14530 TSX +0 07400 4 00033   
 14531 TXH +3 00000 0 14643    14532 STO +0 60100 0 14643    14533 CAL -0 50000 0 10326    14534 STA +0 62100 0 14536   
 14535 CAL -0 50000 0 00024    14536 LGR -0 76500 0 00000    14537 ANA -0 32000 0 10341    14540 SLW +0 60200 0 14642   
 14541 TSX +0 07400 4 00033    14542 TXH +3 00000 0 14642    14543 STO +0 60100 0 14642    14544 CAL -0 50000 0 10330   
 14545 STA +0 62100 0 14547    14546 CAL -0 50000 0 14642    14547 ALS +0 76700 0 00000    14550 SLW +0 60200 0 14642   
 14551 CAL -0 50000 0 10331    14552 STA +0 62100 0 14554    14553 CAL -0 50000 0 00024    14554 LGR -0 76500 0 00000   
 14555 ANA -0 32000 0 10341    14556 SLW +0 60200 0 14644    14557 TSX +0 07400 4 00033    14560 TXH +3 00000 0 14644   
 14561 STO +0 60100 0 14644    14562 CAL -0 50000 0 10332    14563 STA +0 62100 0 14565    14564 CAL -0 50000 0 14644   
 14565 ALS +0 76700 0 00000    14566 SLW +0 60200 0 14644    14567 CAL -0 50000 0 10332    14570 STA +0 62100 0 14572   
 14571 CAL -0 50000 0 00024    14572 LGR -0 76500 0 00000    14573 ANA -0 32000 0 10341    14574 SLW +0 60200 0 14645   
 14575 TSX +0 07400 4 00033    14576 TXH +3 00000 0 14645    14577 STO +0 60100 0 14645    14600 CAL -0 50000 0 10335   
 14601 STA +0 62100 0 14603    14602 CAL -0 50000 0 14645    14603 ALS +0 76700 0 00000    14604 ORA -0 50100 0 14644   
 14605 ORA -0 50100 0 14642    14606 ORA -0 50100 0 14643    14607 SLW +0 60200 0 00024                                 
                 F'N                                                                480  LM00116
 14610 TRA +0 02000 0 14636                                                                                             
                 E'N                                                                481  LM00117
 14611 TSX +0 07400 4 00015    14612 PZE +0 00000 0 00001    14613 PZE +0 00000 0 00013    14614 PZE +0 00000 0 00005   
 14615 PZE +0 00000 0 00003    14616 PZE +0 00000 0 00011    14617 TXH +3 00000 0 00000    14620 SXD -0 63400 1 14617   
 14621 SXA +0 63400 4 14636    14622 CLA +0 50000 4 00001    14623 STA +0 62100 0 14477    14624 STA +0 62100 0 14510   
 14625 STA +0 62100 0 14525    14626 STA +0 62100 0 14535    14627 STA +0 62100 0 14553    14630 STA +0 62100 0 14571   
 14631 CLA +0 50000 4 00002    14632 STA +0 62100 0 14524    14633 CLA +0 50000 4 00003    14634 STA +0 62100 0 14607   
 14635 TRA +0 02000 2 00001    14636 AXT +0 77400 4 00000    14637 LXA +0 53400 2 14617    14640 LXD -0 53400 1 14617   
 14641 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION (ARG1,ARG2,ARG3)                                 482  LM00122
 14646 TRA +0 02000 0 15030                                                                                             
                 E'O LCONV.                                                         483  LM00123
 14647 TRA +0 02000 0 14652    00050 TTR +0 02100 0 14650    14650 SXA +0 63400 2 15001    14651 TSX +0 07400 2 15001   
                 ARG2 = (TSSASC.((ARG1.RS.30)).LS.27)                               484  LM00124
                1     .V. (TSSASC.((ARG1.RS.24).A.77K).LS.18)                       484  LM00125
                2     .V. (TSSASC.((ARG1.RS.18).A.77K).LS.9)                        484  LM00126
                3     .V. TSSASC.((ARG1.RS.12).A.77K)                               484  LM00127
 14652 CAL -0 50000 0 10331    14653 STA +0 62100 0 14655    14654 CAL -0 50000 0 00024    14655 LGR -0 76500 0 00000   
 14656 ANA -0 32000 0 10341    14657 SLW +0 60200 0 15024    14660 TSX +0 07400 4 00033    14661 TXH +3 00000 0 15024   
 14662 STO +0 60100 0 15024    14663 CAL -0 50000 0 10332    14664 STA +0 62100 0 14666    14665 CAL -0 50000 0 00024   
 14666 LGR -0 76500 0 00000    14667 ANA -0 32000 0 10341    14670 SLW +0 60200 0 15025    14671 TSX +0 07400 4 00033   
 14672 TXH +3 00000 0 15025    14673 STO +0 60100 0 15025    14674 CAL -0 50000 0 10330    14675 STA +0 62100 0 14677   
 14676 CAL -0 50000 0 15025    14677 ALS +0 76700 0 00000    14700 SLW +0 60200 0 15025    14701 CAL -0 50000 0 10334   
 14702 STA +0 62100 0 14704    14703 CAL -0 50000 0 00024    14704 LGR -0 76500 0 00000    14705 ANA -0 32000 0 10341   
 14706 SLW +0 60200 0 15026    14707 TSX +0 07400 4 00033    14710 TXH +3 00000 0 15026    14711 STO +0 60100 0 15026   
 14712 CAL -0 50000 0 10332    14713 STA +0 62100 0 14715    14714 CAL -0 50000 0 15026    14715 ALS +0 76700 0 00000   
 14716 SLW +0 60200 0 15026    14717 CAL -0 50000 0 10336    14720 STA +0 62100 0 14722    14721 CAL -0 50000 0 00024   
 14722 LGR -0 76500 0 00000    14723 SLW +0 60200 0 15027    14724 TSX +0 07400 4 00033    14725 TXH +3 00000 0 15027   
 14726 STO +0 60100 0 15027    14727 CAL -0 50000 0 10335    14730 STA +0 62100 0 14732    14731 CAL -0 50000 0 15027   
 14732 ALS +0 76700 0 00000    14733 ORA -0 50100 0 15026    14734 ORA -0 50100 0 15025    14735 ORA -0 50100 0 15024   
 14736 SLW +0 60200 0 00024                                                                                             
                 ARG3 = 040 040K .V. (TSSASC.((ARG1.RS.6).A.77K).LS.27) .V.         485  LM00128
                1     (TSSASC.(ARG1.A.77K).LS.18)                                   485  LM00129
 14737 CAL -0 50000 0 00024    14740 ANA -0 32000 0 10341    14741 SLW +0 60200 0 15027    14742 TSX +0 07400 4 00033   
 14743 TXH +3 00000 0 15027    14744 STO +0 60100 0 15027    14745 CAL -0 50000 0 10332    14746 STA +0 62100 0 14750   
 14747 CAL -0 50000 0 15027    14750 ALS +0 76700 0 00000    14751 SLW +0 60200 0 15027    14752 CAL -0 50000 0 10326   
 14753 STA +0 62100 0 14755    14754 CAL -0 50000 0 00024    14755 LGR -0 76500 0 00000    14756 ANA -0 32000 0 10341   
 14757 SLW +0 60200 0 15026    14760 TSX +0 07400 4 00033    14761 TXH +3 00000 0 15026    14762 STO +0 60100 0 15026   
 14763 CAL -0 50000 0 10335    14764 STA +0 62100 0 14766    14765 CAL -0 50000 0 15026    14766 ALS +0 76700 0 00000   
 14767 ORA -0 50100 0 10346    14770 ORA -0 50100 0 15027    14771 SLW +0 60200 0 00024                                 
                 F'N                                                                486  LM00130
 14772 TRA +0 02000 0 15020                                                                                             
                 E'N                                                                487  LM00131
 14773 TSX +0 07400 4 00015    14774 PZE +0 00000 0 00001    14775 PZE +0 00000 0 00013    14776 PZE +0 00000 0 00005   
 14777 PZE +0 00000 0 00003    15000 PZE +0 00000 0 00011    15001 TXH +3 00000 0 00000    15002 SXD -0 63400 1 15001   
 15003 SXA +0 63400 4 15020    15004 CLA +0 50000 4 00001    15005 STA +0 62100 0 14654    15006 STA +0 62100 0 14665   
 15007 STA +0 62100 0 14703    15010 STA +0 62100 0 14721    15011 STA +0 62100 0 14737    15012 STA +0 62100 0 14754   
 15013 CLA +0 50000 4 00002    15014 STA +0 62100 0 14736    15015 CLA +0 50000 4 00003    15016 STA +0 62100 0 14771   
 15017 TRA +0 02000 2 00001    15020 AXT +0 77400 4 00000    15021 LXA +0 53400 2 15001    15022 LXD -0 53400 1 15001   
 15023 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION (ARG2,ARG3)                                      488  LM00136
 15030 TRA +0 02000 0 15176                                                                                             
                 E'O CONVR.                                                         489  LM00137
 15031 TRA +0 02000 0 15034    00041 TTR +0 02100 0 15032    15032 SXA +0 63400 2 15150    15033 TSX +0 07400 2 15150   
                 F'N (ASCTSS.(ARG2.RS.9).LS.30) .V. (ASCTSS.(ARG2).LS.24) .V.       490  LM00138
                1     (ASCTSS.(ARG3.RS.27).LS.18) .V.                               490  LM00139
                2     (ASCTSS.(ARG3.RS.18).LS.12) .V.                               490  LM00140
                3     (ASCTSS.(ARG3.RS.9).LS.6) .V. ASCTSS.(ARG3)                   490  LM00141
 15034 TSX +0 07400 4 00000    15035 TXH +3 00000 0 00024    15036 STO +0 60100 0 15170    15037 CAL -0 50000 0 10330   
 15040 STA +0 62100 0 15042    15041 CAL -0 50000 0 00024    15042 LGR -0 76500 0 00000    15043 SLW +0 60200 0 15171   
 15044 TSX +0 07400 4 00000    15045 TXH +3 00000 0 15171    15046 STO +0 60100 0 15171    15047 CAL -0 50000 0 10326   
 15050 STA +0 62100 0 15052    15051 CAL -0 50000 0 15171    15052 ALS +0 76700 0 00000    15053 SLW +0 60200 0 15171   
 15054 CAL -0 50000 0 10332    15055 STA +0 62100 0 15057    15056 CAL -0 50000 0 00024    15057 LGR -0 76500 0 00000   
 15060 SLW +0 60200 0 15172    15061 TSX +0 07400 4 00000    15062 TXH +3 00000 0 15172    15063 STO +0 60100 0 15172   
 15064 CAL -0 50000 0 10331    15065 STA +0 62100 0 15067    15066 CAL -0 50000 0 15172    15067 ALS +0 76700 0 00000   
 15070 SLW +0 60200 0 15172    15071 CAL -0 50000 0 10335    15072 STA +0 62100 0 15074    15073 CAL -0 50000 0 00024   
 15074 LGR -0 76500 0 00000    15075 SLW +0 60200 0 15173    15076 TSX +0 07400 4 00000    15077 TXH +3 00000 0 15173   
 15100 STO +0 60100 0 15173    15101 CAL -0 50000 0 10332    15102 STA +0 62100 0 15104    15103 CAL -0 50000 0 15173   
 15104 ALS +0 76700 0 00000    15105 SLW +0 60200 0 15173    15106 TSX +0 07400 4 00000    15107 TXH +3 00000 0 00024   
 15110 STO +0 60100 0 15174    15111 CAL -0 50000 0 10334    15112 STA +0 62100 0 15114    15113 CAL -0 50000 0 15174   
 15114 ALS +0 76700 0 00000    15115 SLW +0 60200 0 15174    15116 CAL -0 50000 0 10330    15117 STA +0 62100 0 15121   
 15120 CAL -0 50000 0 00024    15121 LGR -0 76500 0 00000    15122 SLW +0 60200 0 15175    15123 TSX +0 07400 4 00000   
 15124 TXH +3 00000 0 15175    15125 STO +0 60100 0 15175    15126 CAL -0 50000 0 10336    15127 STA +0 62100 0 15131   
 15130 CAL -0 50000 0 15175    15131 ALS +0 76700 0 00000    15132 ORA -0 50100 0 15174    15133 ORA -0 50100 0 15173   
 15134 ORA -0 50100 0 15172    15135 ORA -0 50100 0 15171    15136 ORA -0 50100 0 15170    15137 SLW +0 60200 0 15175   
 15140 CLA +0 50000 0 15175    15141 TRA +0 02000 0 15164                                                               
                 E'N                                                                491  LM00142
 15142 TSX +0 07400 4 00015    15143 PZE +0 00000 0 00001    15144 PZE +0 00000 0 00013    15145 PZE +0 00000 0 00005   
 15146 PZE +0 00000 0 00003    15147 PZE +0 00000 0 00011    15150 TXH +3 00000 0 00000    15151 SXD -0 63400 1 15150   
 15152 SXA +0 63400 4 15164    15153 CLA +0 50000 4 00001    15154 STO +0 60100 0 15107    15155 STA +0 62100 0 15120   
 15156 CLA +0 50000 4 00002    15157 STO +0 60100 0 15035    15160 STA +0 62100 0 15041    15161 STA +0 62100 0 15056   
 15162 STA +0 62100 0 15073    15163 TRA +0 02000 2 00001    15164 AXT +0 77400 4 00000    15165 LXA +0 53400 2 15150   
 15166 LXD -0 53400 1 15150    15167 TRA +0 02000 4 00001                                                               
                 INTERNAL FUNCTION (ARG2,ARG3)                                      492  LM00147
 15176 TRA +0 02000 0 15351                                                                                             
                 E'O CONVL.                                                         493  LM00148
 15177 TRA +0 02000 0 15202    00040 TTR +0 02100 0 15200    15200 SXA +0 63400 2 15323    15201 TSX +0 07400 2 15323   
                 F'N (ASCTSS.(ARG2.RS.27).LS.30).V.(ASCTSS.(ARG2.RS.18).LS.24)      494  LM00149
                1     .V. (ASCTSS.(ARG2.RS.9).LS.18)                                494  LM00150
                2     .V. (ASCTSS.(ARG2) .LS. 12)                                   494  LM00151
                3     .V. (ASCTSS.(ARG3.RS.27).LS.6)                                494  LM00152
                4     .V. (ASCTSS.(ARG3.RS.18))                                     494  LM00153
 15202 CAL -0 50000 0 10332    15203 STA +0 62100 0 15205    15204 CAL -0 50000 0 00024    15205 LGR -0 76500 0 00000   
 15206 SLW +0 60200 0 15343    15207 TSX +0 07400 4 00000    15210 TXH +3 00000 0 15343    15211 STO +0 60100 0 15343   
 15212 CAL -0 50000 0 10335    15213 STA +0 62100 0 15215    15214 CAL -0 50000 0 00024    15215 LGR -0 76500 0 00000   
 15216 SLW +0 60200 0 15344    15217 TSX +0 07400 4 00000    15220 TXH +3 00000 0 15344    15221 STO +0 60100 0 15344   
 15222 CAL -0 50000 0 10326    15223 STA +0 62100 0 15225    15224 CAL -0 50000 0 15344    15225 ALS +0 76700 0 00000   
 15226 SLW +0 60200 0 15344    15227 TSX +0 07400 4 00000    15230 TXH +3 00000 0 00024    15231 STO +0 60100 0 15345   
 15232 CAL -0 50000 0 10331    15233 STA +0 62100 0 15235    15234 CAL -0 50000 0 15345    15235 ALS +0 76700 0 00000   
 15236 SLW +0 60200 0 15345    15237 CAL -0 50000 0 10330    15240 STA +0 62100 0 15242    15241 CAL -0 50000 0 00024   
 15242 LGR -0 76500 0 00000    15243 SLW +0 60200 0 15346    15244 TSX +0 07400 4 00000    15245 TXH +3 00000 0 15346   
 15246 STO +0 60100 0 15346    15247 CAL -0 50000 0 10332    15250 STA +0 62100 0 15252    15251 CAL -0 50000 0 15346   
 15252 ALS +0 76700 0 00000    15253 SLW +0 60200 0 15346    15254 CAL -0 50000 0 10332    15255 STA +0 62100 0 15257   
 15256 CAL -0 50000 0 00024    15257 LGR -0 76500 0 00000    15260 SLW +0 60200 0 15347    15261 TSX +0 07400 4 00000   
 15262 TXH +3 00000 0 15347    15263 STO +0 60100 0 15347    15264 CAL -0 50000 0 10334    15265 STA +0 62100 0 15267   
 15266 CAL -0 50000 0 15347    15267 ALS +0 76700 0 00000    15270 SLW +0 60200 0 15347    15271 CAL -0 50000 0 10335   
 15272 STA +0 62100 0 15274    15273 CAL -0 50000 0 00024    15274 LGR -0 76500 0 00000    15275 SLW +0 60200 0 15350   
 15276 TSX +0 07400 4 00000    15277 TXH +3 00000 0 15350    15300 STO +0 60100 0 15350    15301 CAL -0 50000 0 10336   
 15302 STA +0 62100 0 15304    15303 CAL -0 50000 0 15350    15304 ALS +0 76700 0 00000    15305 ORA -0 50100 0 15347   
 15306 ORA -0 50100 0 15346    15307 ORA -0 50100 0 15345    15310 ORA -0 50100 0 15344    15311 ORA -0 50100 0 15343   
 15312 SLW +0 60200 0 15350    15313 CLA +0 50000 0 15350    15314 TRA +0 02000 0 15337                                 
                 E'N                                                                495  LM00154
 15315 TSX +0 07400 4 00015    15316 PZE +0 00000 0 00001    15317 PZE +0 00000 0 00013    15320 PZE +0 00000 0 00005   
 15321 PZE +0 00000 0 00003    15322 PZE +0 00000 0 00011    15323 TXH +3 00000 0 00000    15324 SXD -0 63400 1 15323   
 15325 SXA +0 63400 4 15337    15326 CLA +0 50000 4 00001    15327 STO +0 60100 0 15230    15330 STA +0 62100 0 15241   
 15331 STA +0 62100 0 15256    15332 STA +0 62100 0 15273    15333 CLA +0 50000 4 00002    15334 STA +0 62100 0 15204   
 15335 STA +0 62100 0 15214    15336 TRA +0 02000 2 00001    15337 AXT +0 77400 4 00000    15340 LXA +0 53400 2 15323   
 15341 LXD -0 53400 1 15323    15342 TRA +0 02000 4 00001                                                               
                 END OF PROGRAM                                                     496  LM00301
 15351 TSX +0 07400 4 00015                                                                                             
1      ARCHV         MAP
                        
1PAGE 1            NUMERIC STORAGE MAP OF  ARCHV
      
       NAME ORIGIN ENTRY       NAME ORIGIN ENTRY       NAME ORIGIN ENTRY       NAME ORIGIN ENTRY      
      
      (MAIN) 00030 10542      TSSASC 15406 15410      ASCTSS 15406 15412      PRMESA 15627 15635      
      PRMESS 15627 15633      .SETUP 15751 15773      ENDJOB 15751 15757      EXITM  15751 15757      
      EXIT   15751 15754      DELETE 16006 16007      OFFON  16162 16421      OFF    16162 16423      
      ON     16162 16406      SLEEP  16162 16342      DEAD   16162 16337      DORMNT 16162 16334      
      NEXCOM 16162 16326      CHNCOM 16162 16323      WRFLXA 16162 16173      WRFLX  16162 16167      
      SSPRNT 16162 16456      FSTATE 17446 17446      UPDATE 17450 17455      CLOSE  17450 17454      
      BUFFER 17450 17453      FWAIT  17450 17452      FCHECK 17450 17451      OPEN   17450 17450      
      WHOAMI 17464 17464      WRWAIT 17466 17467      WRFILE 17466 17466      .PCOMT 17472 17476      
      BFCLOS 17526 20150      BFCODE 17526 20144      BFWRIT 17526 17707      BFREAD 17526 17704      
      BFOPEN 17526 17540      COMARG 20412 20416      RDFLXC 20446 20453      RDFLXB 20446 20452      
      GETTM  20631 20634      GETTIM 20631 20632      PRNTER 20717 20722      GNAM   22231 22233      
      DERBC  22351 22356      DELBC  22351 22353      DEFBC  22351 22361      OCLBC  22401 22413      
      OCRBC  22401 22416      OCDBC  22401 22403      OCABC  22401 22406      BCDEC  22437 22441      
      BZEL   22463 22465      COLT   22505 22507      RDWAIT 22607 22610      RDFILE 22607 22607      
      DELFIL 22613 22614      CHFILE 22613 22613      IODIAG 22617 22617      SAVBRK 22621 22623      
      SETBRK 22621 22622      GETBRK 22621 22621      GETCOM 22627 22627      GETIME 22631 22631      
      RDFLXA 22633 22633      
1PAGE 2         ALPHABETIC STORAGE MAP OF  ARCHV
      
       NAME ORIGIN ENTRY       NAME ORIGIN ENTRY       NAME ORIGIN ENTRY       NAME ORIGIN ENTRY      
      
      ON     16162 16406      OFF    16162 16423      BZEL   22463 22465      COLT   22505 22507      
      DEAD   16162 16337      EXIT   15751 15754      GNAM   22231 22233      OPEN   17450 17450      
      BCDEC  22437 22441      CLOSE  17450 17454      DEFBC  22351 22361      DELBC  22351 22353      
      DERBC  22351 22356      EXITM  15751 15757      FWAIT  17450 17452      GETTM  20631 20634      
      OCABC  22401 22406      OCDBC  22401 22403      OCLBC  22401 22413      OCRBC  22401 22416      
      OFFON  16162 16421      SLEEP  16162 16342      WRFLX  16162 16167      ASCTSS 15406 15412      
      BFCLOS 17526 20150      BFCODE 17526 20144      BFOPEN 17526 17540      BFREAD 17526 17704      
      BFWRIT 17526 17707      BUFFER 17450 17453      CHFILE 22613 22613      CHNCOM 16162 16323      
      COMARG 20412 20416      DELETE 16006 16007      DELFIL 22613 22614      DORMNT 16162 16334      
      ENDJOB 15751 15757      FCHECK 17450 17451      FSTATE 17446 17446      GETBRK 22621 22621      
      GETCOM 22627 22627      GETIME 22631 22631      GETTIM 20631 20632      IODIAG 22617 22617      
      .PCOMT 17472 17476      .SETUP 15751 15773      NEXCOM 16162 16326      PRMESA 15627 15635      
      PRMESS 15627 15633      PRNTER 20717 20722      RDFILE 22607 22607      RDFLXA 22633 22633      
      RDFLXB 20446 20452      RDFLXC 20446 20453      RDWAIT 22607 22610      SAVBRK 22621 22623      
      SETBRK 22621 22622      SSPRNT 16162 16456      TSSASC 15406 15410      UPDATE 17450 17455      
      WHOAMI 17464 17464      WRFILE 17466 17466      WRFLXA 16162 16173      WRWAIT 17466 17467      
       22401 00030 10542      
            
      MEMORY BOUND IS    22635




 ADMIN   BCD 05/12/69 2008.5   83791         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   ADMIN   MAD            04/27/69    0852.4
-                 
      ADMIN       *  ADMINISTRATIVE PRIVLEGED COMMANDS                                                 LM00001    
                  *                                                                                    LM00002    
                  * WRITTEN BY R. A. ROACH    MARCH 1969                                               LM00003    
                  *                                                                                    LM00004    
                  * ONLY M1416 USERS WITH EITHER PATCH PRIVILEGES OR                                   LM00005    
                  * 16 PRIVILEGES MAY HAVE ACCESS TO ADMIN'S FUNCTIONS.                                LM00006    
                  * (EXCEPT THE OPERATOR (C33 960) MAY USE HELLO.)                                     LM00007    
                  *                                                                                    LM00008    
                  * FOR A LIST OF THE AVAILABLE FUNCTIONS:                                             LM00009    
                  *          ADMIN (HELP)                                                              LM00010    
                  *                                                                                    LM00011    
                  * FOR THE CORRECT USAGE OF A FUNCTION:                                               LM00012    
                  *          ADMIN FUNCT (HELP)                                                        LM00013    
                  *                                                                                    LM00014    
                  *  WHEN 'USER' IS A POSSIBLE ARGUMENT, IT MAY                                        LM00015    
                  *  BE SPECIFIED IN ANY OF THREE DIFFERENT WAYS:                                      LM00016    
                  *   1.  NONE - ASSUMES CURRENT USER                                                  LM00017    
                  *   2.  PROB PROG                                                                    LM00018    
                  *   3.  LINE NO.                                                                     LM00019    
                  *                                                                                    LM00020    
                  *                                                                                    LM00021    
                  * LOADING INSTRUCTIONS:                                                              LM00022    
                  *   LAED NCLOAD ADMIN ADUTIL DELTEM (SRCH) XLIBE                                     LM00023    
                  *                                                                                    LM00024    
                  *                                                                                    LM00025    
                  *  CONSTANTS AND STORAGE DECLARATIONS                                                LM00026    
                  *                                                                                    LM00027    
                  DIMENSION B1(0), B2(0), B3(0), B4(0), B5(0)                                     *001 LM00028    
                  DIMENSION WHO(3), ME(1), PROB(1), COMBUF(20)                                    *002 LM00029    
                  DIMENSION PROBN(0), PROGN(0), TUCARD(27)                                        *003 LM00030    
                  DIMENSION TEMP(7)                                                               *004 LM00031    
                  *                                                                                    LM00032    
                  EQUIVALENCE (PROG,PROB(1)), (SLPCMD,FENCE)                                      *005 LM00033    
                  EQUIVALENCE (T0,TEMP(0)), (T1,TEMP(1)), (T2,TEMP(2)), (T3,TEMP(3))              *006 LM00034    
                  EQUIVALENCE (T4,TEMP(4)), (T5,TEMP(5)), (T6,TEMP(6)), (T7,TEMP(7))              *007 LM00035    
                  *                                                                                    LM00036    
                  VECTOR VALUES STAR  = $     *$                                                  *008 LM00037    
                  VECTOR VALUES M0 = -0                                                           *009 LM00038    
                  VECTOR VALUES M1 = -1                                                           *010 LM00039    
                  VECTOR VALUES M2 = -2                                                           *011 LM00040    
                  VECTOR VALUES M = 0                                                             *012 LM00041    
                  VECTOR VALUES TEMP(0)...TEMP(7) = 0                                             *013 LM00042    
                  *                                                                                    LM00043    
                  VECTOR VALUES MFD    = $M.F.D.$                                                 *014 LM00044    
                  VECTOR VALUES FILE   = $(FILE)$                                                 *015 LM00045    
                  VECTOR VALUES M1416  = $ M1416$                                                 *016 LM00046    
                  VECTOR VALUES CMFL02 = $CMFL02$                                                 *017 LM00047    
                  VECTOR VALUES TU = $TIMUSD$                                                     *018 LM00048    
                  VECTOR VALUES TA = $TIMACC$                                                     *019 LM00049    
                  VECTOR VALUES R = $R$                                                           *020 LM00050    
                  VECTOR VALUES W = $W$                                                           *021 LM00051    
                  VECTOR VALUES N = $N$                                                           *022 LM00052    
                  VECTOR VALUES ALL    = $ALL   $                                                 *023 LM00053    
                  VECTOR VALUES USER   = $USER  $                                                 *024 LM00054    
                  VECTOR VALUES COMMND = $COMMND$                                                 *025 LM00055    
                  VECTOR VALUES PROBN  = $PROBN $                                                 *026 LM00056    
                  VECTOR VALUES PROGN  = $PROGN $                                                 *027 LM00057    
                  VECTOR VALUES UNAME  = $UNAME $                                                 *028 LM00058    
                  VECTOR VALUES USROPT = $USROPT$                                                 *029 LM00059    
                  VECTOR VALUES URCODE = $URCODE$                                                 *030 LM00060    
                  VECTOR VALUES RCODE  = $RCODE $                                                 *031 LM00061    
                  VECTOR VALUES NINTBT = $NINTBT$                                                 *032 LM00062    
                  VECTOR VALUES RCALBT = $RCALBT$                                                 *033 LM00063    
                  VECTOR VALUES RPROBT = $RPROBT$                                                 *034 LM00064    
                  VECTOR VALUES RPRVBT = $RPRVBT$                                                 *035 LM00065    
                  VECTOR VALUES RPATBT = $RPATBT$                                                 *036 LM00066    
                  VECTOR VALUES STRTIM = $STRTIM$                                                 *037 LM00067    
                  VECTOR VALUES WRKTIM = $WRKTIM$                                                 *038 LM00068    
                  VECTOR VALUES TIMNOW = $TIMNOW$                                                 *039 LM00069    
                  VECTOR VALUES UNITID = $UNITID$                                                 *040 LM00070    
                  VECTOR VALUES TAU1   = $TAU1  $                                                 *041 LM00071    
                  VECTOR VALUES TAU5   = $TAU5  $                                                 *042 LM00072    
                  VECTOR VALUES ADOPT  = $ADOPT $                                                 *043 LM00073    
                  VECTOR VALUES MESGPT = $MESGPT$                                                 *044 LM00074    
                  VECTOR VALUES SYSMSG = $SYSMSG$                                                 *045 LM00075    
                  VECTOR VALUES FSTST  = $FS.TST$                                                 *046 LM00076    
                  VECTOR VALUES SAVING = $SAVING$                                                 *047 LM00077    
                  *                                                                                    LM00078    
                  *                                                                                    LM00079    
                  VECTOR VALUES HELP = $(HELP)$                                                   *048 LM00080    
                  VECTOR VALUES X = $'X$                                                          *049 LM00081    
                  VECTOR VALUES ADMIN = $ 'UADMIN '8$                                             *050 LM00082    
                  VECTOR VALUES RED = $'R'8$                                                      *051 LM00083    
                  VECTOR VALUES BLACK = $'B'8$                                                    *052 LM00084    
                  VECTOR VALUES ON = $ ON 'X$                                                     *053 LM00085    
                  VECTOR VALUES BL = $ '8$                                                        *054 LM00086    
                  VECTOR VALUES KEY22 = 000000K                                                   *055 LM00087    
                  *  ... CHANGE TO 20000K TO MAKE EFFECTIVE ...                                        LM00088    
                  VECTOR VALUES NULLS = 575757575757K                                             *056 LM00089    
                  *                                                                                    LM00090    
                  VECTOR VALUES SLPCMD = 777777777777K, $YES$, $.$                                *057 LM00091    
                  *                                                                                    LM00092    
                  *                                                                                    LM00093    
                  *                                                                                    LM00094    
                  *  INITIALIZATION                                                                    LM00095    
                  *                                                                                    LM00096    
                  NORMAL MODE IS INTEGER                                                          *058 LM00097    
                  WHOAMI.(WHO(3)...4)                                                             *059 LM00098    
                  ATTNAM.(ME(1)...2)                                                              *060 LM00099    
                  GETTM.(DATE,TIME)                                                               *061 LM00100    
                  FERRTN.(IOERR)                                                                  *062 LM00101    
                  SETBRK.(OUT)                                                                    *063 LM00102    
                  PCTL.(1)                                                                        *064 LM00103    
                  *                                                                                    LM00104    
                  USER = GLOC.(COMMON.(USER))                                                     *065 LM00105    
                  *                                                                                    LM00106    
                  *  SET COMMAND NAME TO ZERO TO HIDE IT -                                             LM00107    
                  SLOC.(0,COMMON.(COMMND)+USER)                                                   *066 LM00108    
                  *                                                                                    LM00109    
                  RCODE = GLOC.(COMMON.(RCODE)+USER)                                              *067 LM00110    
                  RPATBT = COMMON.(RPATBT)                                                        *068 LM00111    
                  RCALBT = COMMON.(RCALBT)                                                        *069 LM00112    
                  RPROBT = COMMON.(RPROBT)                                                        *070 LM00113    
                  RPRVBT = COMMON.(RPRVBT)                                                        *071 LM00114    
                  *                                                                                    LM00115    
                  NINTBT = COMMON.(NINTBT).LS.18                                                  *072 LM00116    
                  USROPT = COMMON.(USROPT)+USER                                                   *073 LM00117    
                  N = COMMON.(N)                                                                  *074 LM00118    
                  *                                                                                    LM00119    
                  GCLS.(COMBUF,0)                                                                 *075 LM00120    
                  WHENEVER COMBUF.E.$ ADMIN$, M = 1                                               *076 LM00121    
                  *                                                                                    LM00122    
                  *  TEST FOR OK USER                                                                  LM00123    
                  *                                                                                    LM00124    
                  WHENEVER COMBUF(M).E.$ HELLO$ .AND. WHO(3).E.$ C0033$ .AND.                     *077 LM00125    
                1  WHO(2) .E. $   960$, TRANSFER TO USEROK                                        *077 LM00126    
                  BITS = RCALBT.V.RPROBT.V.RPRVBT                                                 *078 LM00127    
                  WHENEVER WHO(3).E.M1416 .AND. (RCODE.A.BITS.E.BITS .OR. RCODE.A.                *079 LM00128    
                1   RPATBT.E.RPATBT), TRANSFER TO USEROK                                          *079 LM00129    
                  *                                                                                    LM00130    
                  *  OTHERWISE, PRETEND THAT ADMIN DOESN'T EXIST                                       LM00131    
                  TSK.                                                                            *080 LM00132    
                  *                                                                                    LM00133    
      USEROK      WHENEVER COMBUF(M).E.HELP .OR. COMBUF(M).E.FENCE                                *081 LM00134    
                    PRFULL.($'* 'R'1CORRECT USAGE IS:'B'*'*'8$,                                   *082 LM00135    
                1   $  '5ADMIN FUNCTION ARGS'*'*'8$,                                              *082 LM00136    
                2   $WHERE THE FUNCTION MAY BE ANY OF THE FOLLOWING:'*'8$)                        *082 LM00137    
                  *                                                                                    LM00138    
                    PRFULL.(FMT1...100,FMT2...100)                                                *083 LM00139    
                  *                                                                                    LM00140    
                    VECTOR VALUES FMT1 =                                                          *084 LM00141    
                1   $'6CNDRLA - CLEARS ALL PRESENT USERS TAU VECTORS (36)'*'8$,                   *084 LM00142    
                2   $'4COPY   - COPY ACCOUNTING FILES FROM '4CMFL02 (10)'*'8$,                    *084 LM00143    
                3   $'6DELALL - DELETES ALL FILES FROM A DIRECTORY'*'8$,                          *084 LM00144    
                4   $'6DELTEM - DELETES TEMPORARY FILES FROM A DIRECTORY'*'8$,                    *084 LM00145    
                5   $'5ERASE  - ELIMINATES A FILE DIRECTORY'*'8$,                                 *084 LM00146    
                6   $'5HELLO  - MODIFIES DIALUP MESSAGE'*'8$,                                     *084 LM00147    
                7   $'5INPUT  - ENTER A LINE INTO A USER''S INPUT BUFFER'*'8$,                    *084 LM00148    
                8   $'4KILL   - LOGS A USER OUT'*'8$,                                             *084 LM00149    
                9   $'5MONTH  - UPDATE AND RESET TIMUSD (36)'*'8$,777777777777K                   *084 LM00150    
                  *                                                                                    LM00151    
                    VECTOR VALUES FMT2 =                                                          *085 LM00152    
                1   $'5PATCH  - PATCHES CORE '1A (20)'*'8$,                                       *085 LM00153    
                2   $'2PB     - ASSIGNS A PERCENTAGE TO A USER'*'8$,                              *085 LM00154    
                3   $'6PRNTON - PRINT MESSAGE ONLINE'*'8$,                                        *085 LM00155    
                4   $'6RDTIMU - PRINT TIME USED BY A USER'*'8$,                                   *085 LM00156    
                5   $'6SETTAU - RESET A '3TAU VECTOR OF A USER'*'8$,                              *085 LM00157    
                6   $'3SPY    - SPY ON A USER'*'8$,                                               *085 LM00158    
                7   $'6SQZUFD - COMPACT A 'UU.F.D.'L'*'8$,                                        *085 LM00159    
                8   $'6UPATCH - PATCH ARRAY ENTRY OF PRESENT USER (20)'*'8$,                      *085 LM00160    
                9   $'6UPDATE - UPDATE '4CMFL02 WITH ACCOUNTING FILES(10)'*'8$,                   *085 LM00161    
                0   $'5WRITE  - WRITE A MESSAGE AT A USER'*'8$,777777777777K                      *085 LM00162    
                  *                                                                                    LM00163    
                    PRFULL.($'1FOR THE CORRECT USAGE OF A FUNCTION:'*'*'8$,                       *086 LM00164    
                1   $     '5ADMIN FUNCT 'U(HELP)$)                                                *086 LM00165    
                  *                                                                                    LM00166    
                  *                                                                                    LM00167    
                  *                                                                                    LM00168    
                  *                                                                                    LM00169    
                  * **********************************************************                         LM00170    
                  * **********************************************************                         LM00171    
                  * **********************************************************                         LM00172    
                  *                                                                                    LM00173    
                  *                            CNDRLA                                                  LM00174    
                  *                                                                                    LM00175    
                  * **********************************************************                         LM00176    
                  * **********************************************************                         LM00177    
                  * **********************************************************                         LM00178    
                  *                                                                                    LM00179    
      CNDRLA      *  RESET THE TAU VECTORS(USED) OF ALL USERS LOGGED IN.                               LM00180    
                  *                                                                                    LM00181    
                  *  USAGE:  ADMIN CNDRLA                                                              LM00182    
                  *                                                                                    LM00183    
                  EQUIVALENCE (T0,MAXI), (T6,TAULOC)                                              *087 LM00184    
                  *                                                                                    LM00185    
                  OR WHENEVER COMBUF(M) .E. $CNDRLA$                                              *088 LM00186    
                    M = M+1                                                                       *089 LM00187    
                    WHENEVER COMBUF(M) .E. HELP                                                   *090 LM00188    
                      PRFULL.(ADMIN...2,CURCOM.(0))                                               *091 LM00189    
                    OTHERWISE                                                                     *092 LM00190    
                      WHENEVER COMBUF(M).NE.FENCE, TRANSFER TO ERR1                               *093 LM00191    
                      CHKPRV.(BITS.V.RPATBT)                                                      *094 LM00192    
                      MAXI = 5 * (N+1)                                                            *095 LM00193    
                      TAULOC = COMMON.(TAU5)                                                      *096 LM00194    
                  *                                                                                    LM00195    
                      PCTL.(3)                                                                    *097 LM00196    
                      PRFULL.(X,WHO(3)...M2,$ RESETTING TIMUSD.$)                                 *098 LM00197    
                      PCTL.(1)                                                                    *099 LM00198    
                  *                                                                                    LM00199    
                  *      M1416 4301 RESETTING TIMUSD.                                                  LM00200    
                  *                                                                                    LM00201    
                      NONINT.                                                                     *100 LM00202    
                      THROUGH CND1, FOR I = 0,1,I.G.MAXI                                          *101 LM00203    
      CND1            SLOC.(GLOC.(TAULOC+I).A.77776K7,TAULOC+I)                                   *102 LM00204    
                      INT.                                                                        *103 LM00205    
                    END OF CONDITIONAL                                                            *104 LM00206    
                  *                                                                                    LM00207    
                  *                                                                                    LM00208    
                  *                                                                                    LM00209    
                  * **********************************************************                         LM00210    
                  * **********************************************************                         LM00211    
                  * **********************************************************                         LM00212    
                  *                                                                                    LM00213    
                  *                            COPY                                                    LM00214    
                  *                                                                                    LM00215    
                  * **********************************************************                         LM00216    
                  * **********************************************************                         LM00217    
                  * **********************************************************                         LM00218    
                  *                                                                                    LM00219    
      COPY        * COPY AN ACCOUNTING FILE FROM M1416 CMFL02                                          LM00220    
                  *                                                                                    LM00221    
                  * USAGE:  ADMIN COPY N1 -N2- -N3- -N4-                                               LM00222    
                  *                                                                                    LM00223    
                  EQUIVALENCE (T0,N1), (T1,N2), (T2,N3), (T3,N4), (T7,MODE)                       *105 LM00224    
                  *                                                                                    LM00225    
                  OR WHENEVER COMBUF(M) .E. $  COPY$                                              *106 LM00226    
                    M = M+1                                                                       *107 LM00227    
                    WHENEVER COMBUF(M) .E. HELP                                                   *108 LM00228    
                      PRFULL.(ADMIN...2,CURCOM.(0),$ N1 -N2- -N3- -N4-$)                          *109 LM00229    
                    OTHERWISE                                                                     *110 LM00230    
                      N1 = COMBUF(M)                                                              *111 LM00231    
                      N2 = COMBUF(M+1)                                                            *112 LM00232    
                      N3 = COMBUF(M+2)                                                            *113 LM00233    
                      N4 = COMBUF(M+3)                                                            *114 LM00234    
                      WHENEVER N2 .E. FENCE                                                       *115 LM00235    
                        N2 = TA                                                                   *116 LM00236    
                        N3 = N1                                                                   *117 LM00237    
                        N4 = N2                                                                   *118 LM00238    
                      OR WHENEVER N3 .E. FENCE                                                    *119 LM00239    
                        N3 = N1                                                                   *120 LM00240    
                        N4 = N2                                                                   *121 LM00241    
                      OR WHENEVER N4 .E. FENCE                                                    *122 LM00242    
                        N4 = N2                                                                   *123 LM00243    
                      OR WHENEVER N1 .E. FENCE                                                    *124 LM00244    
                        TRANSFER TO ERR2                                                          *125 LM00245    
                      OR WHENEVER COMBUF(M+4).NE. FENCE                                           *126 LM00246    
                        M = M+4                                                                   *127 LM00247    
                        TRANSFER TO ERR1                                                          *128 LM00248    
                      END OF CONDITIONAL                                                          *129 LM00249    
                      M = M+4                                                                     *130 LM00250    
                      WHENEVER ME(1).E.M1416 .AND. ME.E.CMFL02 .AND.                              *131 LM00251    
                1          N3.E.N1 .AND. N4.E.N2, TRANSFER TO ERR0                                *131 LM00252    
                      CHKPRV.(RPRVBT)                                                             *132 LM00253    
                  *                                                                                    LM00254    
                        ... GET RID OF PREVIOUS DATE TIME                                              LM00255    
                      UNLINK.(DATE,TIME,NULL.)                                                    *133 LM00256    
                      CHFILE.(DATE,TIME,1,M0,M0,NULL.)                                            *134 LM00257    
                      DELFIL.(DATE,TIME,NULL.)                                                    *135 LM00258    
                      OPEN.(W,DATE,TIME,120K)                                                     *136 LM00259    
                      GETBUF.(B1,432)                                                             *137 LM00260    
                      GETBUF.(B2,432)                                                             *138 LM00261    
                      GETBUF.(B3,432)                                                             *139 LM00262    
                      GETBUF.(B4,432)                                                             *140 LM00263    
                      BUFFER.(DATE,TIME,B4(B4+432)...432)                                         *141 LM00264    
                      ATTACH.(M1416,CMFL02)                                                       *142 LM00265    
                      NONINT.                                                                     *143 LM00266    
                      OPEN.(R,N1,N2)                                                              *144 LM00267    
                      COPY.(N1,N2,DATE,TIME,B1(B1+432),B2(B2+432),B3(B3+432),                     *145 LM00268    
                1           432,IOERR)                                                            *145 LM00269    
                      CLOSE.(N1,N2)                                                               *146 LM00270    
                      INT.                                                                        *147 LM00271    
                      CLOSE.(DATE,TIME)                                                           *148 LM00272    
                      ATTACH.(ME(1),ME)                                                           *149 LM00273    
                      MODE = 124K                                                                 *150 LM00274    
                      FSTATE.(N3,N4,TUCARD(1)...2,CPY1)                                           *151 LM00275    
                      MODE = TUCARD.A.777K                                                        *152 LM00276    
      CPY1            UNLINK.(N3,N4,NULL.)                                                        *153 LM00277    
                      CHFILE.(N3,N4,1,M0,M0,NULL.)                                                *154 LM00278    
                      DELFIL.(N3,N4,NULL.)                                                        *155 LM00279    
                      CHFILE.(DATE,TIME,MODE,N3,N4)                                               *156 LM00280    
                    END OF CONDITIONAL                                                            *157 LM00281    
                  *                                                                                    LM00282    
                  *                                                                                    LM00283    
                  * **********************************************************                         LM00284    
                  * **********************************************************                         LM00285    
                  * **********************************************************                         LM00286    
                  *                                                                                    LM00287    
                  *                            DELALL                                                  LM00288    
                  *                                                                                    LM00289    
                  * **********************************************************                         LM00290    
                  * **********************************************************                         LM00291    
                  * **********************************************************                         LM00292    
                  *                                                                                    LM00293    
      DELALL      * DELETE ALL OF A USER'S FILES AND HIS UFD.                                          LM00294    
                  *                                                                                    LM00295    
                  *  USAGE:   ADMIN DELALL USER                                                        LM00296    
                  *                                                                                    LM00297    
                  OR WHENEVER COMBUF(M) .E. $DELALL$                                              *158 LM00298    
                    M = M+1                                                                       *159 LM00299    
                    WHENEVER COMBUF(M) .E. HELP                                                   *160 LM00300    
                      PRFULL.(ADMIN...2,CURCOM.(0),$ 'LUSER$)                                     *161 LM00301    
                    OTHERWISE                                                                     *162 LM00302    
                      GETUSR.(ERR3,DEL0,ERR5)                                                     *163 LM00303    
      DEL0            ATTACH.(PROB,PROG)                                                          *164 LM00304    
                      DELALL.                                                                     *165 LM00305    
                      TRANSFER TO ERASE0                                                          *166 LM00306    
                    END OF CONDITIONAL                                                            *167 LM00307    
                  *                                                                                    LM00308    
                  *                                                                                    LM00309    
                  *                                                                                    LM00310    
                  * **********************************************************                         LM00311    
                  * **********************************************************                         LM00312    
                  * **********************************************************                         LM00313    
                  *                                                                                    LM00314    
                  *                            DELTEM                                                  LM00315    
                  *                                                                                    LM00316    
                  * **********************************************************                         LM00317    
                  * **********************************************************                         LM00318    
                  * **********************************************************                         LM00319    
                  *                                                                                    LM00320    
      DELTEM      * DELETE TEMPORARY FILES OF A USER                                                   LM00321    
                  *                                                                                    LM00322    
                  *  USAGE:  ADMIN DELTEM USER                                                         LM00323    
                  *                                                                                    LM00324    
                  OR WHENEVER COMBUF(M) .E. $DELTEM$                                              *168 LM00325    
                    M = M+1                                                                       *169 LM00326    
                    WHENEVER COMBUF(M) .E. HELP                                                   *170 LM00327    
                      PRFULL.(ADMIN...2,CURCOM.(0),$ 'LUSER$)                                     *171 LM00328    
                    OTHERWISE                                                                     *172 LM00329    
                      GETUSR.(ERR3,DEL1,ERR5)                                                     *173 LM00330    
      DEL1            ATTACH.(PROB,PROG)                                                          *174 LM00331    
                      DELTEM.                                                                     *175 LM00332    
                    END OF CONDITIONAL                                                            *176 LM00333    
                  *                                                                                    LM00334    
                  *                                                                                    LM00335    
                  *                                                                                    LM00336    
                  * **********************************************************                         LM00337    
                  * **********************************************************                         LM00338    
                  * **********************************************************                         LM00339    
                  *                                                                                    LM00340    
                  *                            ERASE                                                   LM00341    
                  *                                                                                    LM00342    
                  * **********************************************************                         LM00343    
                  * **********************************************************                         LM00344    
                  * **********************************************************                         LM00345    
                  *                                                                                    LM00346    
      ERASE       * ERASE A UFD FROM THE SYSTEM                                                        LM00347    
                  *                                                                                    LM00348    
                  *    USAGE:  ADMIN ERASE USER                                                        LM00349    
                  *                                                                                    LM00350    
                  OR WHENEVER COMBUF(M) .E. $ ERASE$                                              *177 LM00351    
                    M = M+1                                                                       *178 LM00352    
                    WHENEVER COMBUF(M) .E. HELP                                                   *179 LM00353    
                      PRFULL.(ADMIN...2,CURCOM.(0),$ 'LUSER$)                                     *180 LM00354    
                    OTHERWISE                                                                     *181 LM00355    
                      GETUSR.(ERR3,ERASE0,ERR5)                                                   *182 LM00356    
      ERASE0          ATTACH.(PROB,PROG)                                                          *183 LM00357    
                      ALLOT.(1,0,0)                                                               *184 LM00358    
                      ALLOT.(2,0,0)                                                               *185 LM00359    
                      ALLOT.(3,0,0)                                                               *186 LM00360    
                      DELMFD.(PROB,PROG)                                                          *187 LM00361    
                    END OF CONDITIONAL                                                            *188 LM00362    
                  *                                                                                    LM00363    
                  *                                                                                    LM00364    
                  *                                                                                    LM00365    
                  * **********************************************************                         LM00366    
                  * **********************************************************                         LM00367    
                  * **********************************************************                         LM00368    
                  *                                                                                    LM00369    
                  *                            HELLO                                                   LM00370    
                  *                                                                                    LM00371    
                  * **********************************************************                         LM00372    
                  * **********************************************************                         LM00373    
                  * **********************************************************                         LM00374    
                  *                                                                                    LM00375    
      HELLO       * UPDATE/RESET THE DIALUP MESSAGE                                                    LM00376    
                  *                                                                                    LM00377    
                  * USAGE: ADMIN HELLO ARG                                                             LM00378    
                  *                                                                                    LM00379    
                  * WHERE ARG MAY BE:                                                                  LM00380    
                  *   1. NOTHING - SETS NEXT COMEDOWN MESSAGE                                          LM00381    
                  *   2. 'NEWMES' - ALLOWS NEW MESSAGE TO BE TYPED IN                                  LM00382    
                  *   3. 'RESET' - RESETS MESSAGE SWITCH TO KEEP IT FROM BEING                         LM00383    
                  *                 PRINTED UPON A DIALUP.                                             LM00384    
                  *                                                                                    LM00385    
                  EQUIVALENCE (HELMES(13),TUCARD(13))                                             *189 LM00386    
                  VECTOR VALUES HELMES = $NEXT COMEDOW$                                           *190 LM00387    
                  VECTOR VALUES HELMES(2) = 453560575757K                                         *191 LM00388    
                  *                                                                                    LM00389    
                  OR WHENEVER COMBUF(M) .E. $ HELLO$                                              *192 LM00390    
                    M = M+1                                                                       *193 LM00391    
                    WHENEVER COMBUF(M) .E. HELP                                                   *194 LM00392    
                      PRFULL.(FMT4...100)                                                         *195 LM00393    
                      VECTOR VALUES FMT4 = $ 'UADMIN HELLO 'LARG'*'8$,                            *196 LM00394    
                1     $WHERE '=ARG'= MAY BE:'*'8$,                                                *196 LM00395    
                2     $  1.   NONE   - SETS 'U'=NEXT COMDOWN:'='L MESSAGE'*'8$,                   *196 LM00396    
                3     $  2. '='6NEWMES'= - ALLOWS COMPLETELY NEW MESSAGE'*'8$,                    *196 LM00397    
                4     $  3. '='5RESET'=  - RESETS MESSAGE SWITCH$,777777777777K                   *196 LM00398    
                  *                                                                                    LM00399    
                    OTHERWISE                                                                     *197 LM00400    
                      MESGPT = COMMON.(MESGPT)                                                    *198 LM00401    
                      SYSMSG = COMMON.(SYSMSG)                                                    *199 LM00402    
                      WHENEVER COMBUF(M) .E. $NEWMES$                                             *200 LM00403    
                        PRFULA.($'R'1TYPE: 'B'8$)                                                 *201 LM00404    
                        RDFLXC.(HELMES,84)                                                        *202 LM00405    
                      OR WHENEVER COMBUF(M) .E. $ RESET$                                          *203 LM00406    
                        SLOC.(0,MESGPT)                                                           *204 LM00407    
                        TRANSFER TO OUT                                                           *205 LM00408    
                      OR WHENEVER COMBUF(M) .E. FENCE                                             *206 LM00409    
                        PRFULA.($'R'X$,HELMES...3,$'B'8$)                                         *207 LM00410    
                        RDFLXC.(HELMES(3),66)                                                     *208 LM00411    
                      OTHERWISE                                                                   *209 LM00412    
                        TRANSFER TO ERR1                                                          *210 LM00413    
                      END OF CONDITIONAL                                                          *211 LM00414    
                      THROUGH HEL1, FOR I = 0,1,I.G.13                                            *212 LM00415    
      HEL1            SLOC.(HELMES(I),SYSMSG+I)                                                   *213 LM00416    
                      SLOC.(16K6.V.SYSMSG,MESGPT)                                                 *214 LM00417    
                    END OF CONDITIONAL                                                            *215 LM00418    
                  *                                                                                    LM00419    
                  *                                                                                    LM00420    
                  *                                                                                    LM00421    
                  * **********************************************************                         LM00422    
                  * **********************************************************                         LM00423    
                  * **********************************************************                         LM00424    
                  *                                                                                    LM00425    
                  *                            INPUT                                                   LM00426    
                  *                                                                                    LM00427    
                  * **********************************************************                         LM00428    
                  * **********************************************************                         LM00429    
                  * **********************************************************                         LM00430    
                  *                                                                                    LM00431    
      INPUT       * INPUT A LINE TO A USER'S INPUT BUFFER                                              LM00432    
                  *                                                                                    LM00433    
                  * USAGE: ADMIN INPUT USER -(DRMT)-                                                   LM00434    
                  *                                                                                    LM00435    
                  DIMENSION INPMES(14)                                                            *216 LM00436    
                  EQUIVALENCE (INPMES,TACARD), (DRMTSW,T0)                                        *217 LM00437    
                  BOOLEAN DRMTSW                                                                  *218 LM00438    
                  *                                                                                    LM00439    
                  OR WHENEVER COMBUF(M) .E. $ INPUT$                                              *219 LM00440    
                    M = M+1                                                                       *220 LM00441    
                    WHENEVER COMBUF(M) .E. HELP                                                   *221 LM00442    
                      PRFULL.(ADMIN...2,CURCOM.(0),$ '4USER -(DRMT)-$)                            *222 LM00443    
                    OTHERWISE                                                                     *223 LM00444    
                      GETUSR.(ERR3,ERR4,INP1)                                                     *224 LM00445    
      INP1            WHENEVER COMBUF(M) .E. $(DRMT)$                                             *225 LM00446    
                        DRMTSW = 1B                                                               *226 LM00447    
                      OR WHENEVER COMBUF(M) .E. FENCE                                             *227 LM00448    
                        DRMTSW = 0B                                                               *228 LM00449    
                      OTHERWISE                                                                   *229 LM00450    
                        TRANSFER TO ERR1                                                          *230 LM00451    
                      END OF CONDITIONAL                                                          *231 LM00452    
                      PRFULA.($'R'1TYPE: 'B'8$)                                                   *232 LM00453    
                      RDFLXA.(INPMES(14)...14)                                                    *233 LM00454    
                      NONINT.                                                                     *234 LM00455    
                      WHENEVER DRMTSW                                                             *235 LM00456    
                        RSSWB.(USR)                                                               *236 LM00457    
                        SCHEDL.(2,USR,1)                                                          *237 LM00458    
                      END OF CONDITIONAL                                                          *238 LM00459    
                      ENTLIN.(INPMES(14)...14,USR,ERR7)                                           *239 LM00460    
                      INT.                                                                        *240 LM00461    
                    END OF CONDITIONAL                                                            *241 LM00462    
                  *                                                                                    LM00463    
                  *                                                                                    LM00464    
                  *                                                                                    LM00465    
                  * **********************************************************                         LM00466    
                  * **********************************************************                         LM00467    
                  * **********************************************************                         LM00468    
                  *                                                                                    LM00469    
                  *                            KILL                                                    LM00470    
                  *                                                                                    LM00471    
                  * **********************************************************                         LM00472    
                  * **********************************************************                         LM00473    
                  * **********************************************************                         LM00474    
                  *                                                                                    LM00475    
      KILL        * LOG A USER OUT                                                                     LM00476    
                  *                                                                                    LM00477    
                  * USAGE: ADMIN KILL USER                                                             LM00478    
                  *                                                                                    LM00479    
                  OR WHENEVER COMBUF(M) .E. $  KILL$                                              *242 LM00480    
                    M = M+1                                                                       *243 LM00481    
                    WHENEVER COMBUF(M) .E. HELP                                                   *244 LM00482    
                      PRFULL.(ADMIN...2,CURCOM.(0),$ 'LUSER$)                                     *245 LM00483    
                    OTHERWISE                                                                     *246 LM00484    
                      GETUSR.(ERR3,ERR4,ERR5)                                                     *247 LM00485    
                      WHENEVER COMBUF(M).NE.FENCE, TRANSFER TO ERR1                               *248 LM00486    
                      PCTL.(3)                                                                    *249 LM00487    
                      PRFULL.(X,WHO(3)...M2,ON,WHO,$ KILLING'X$,                                  *250 LM00488    
                1           PROB...2,$.$)                                                         *250 LM00489    
                      PCTL.(1)                                                                    *251 LM00490    
                  *                                                                                    LM00491    
                  *   M1416 4301 0N 800251 KILLING M1416 9324.                                         LM00492    
                  *                                                                                    LM00493    
                      KILL.(USR)                                                                  *252 LM00494    
                    END OF CONDITIONAL                                                            *253 LM00495    
                  *                                                                                    LM00496    
                  *                                                                                    LM00497    
                  *                                                                                    LM00498    
                  * **********************************************************                         LM00499    
                  * **********************************************************                         LM00500    
                  * **********************************************************                         LM00501    
                  *                                                                                    LM00502    
                  *                            MONTH                                                   LM00503    
                  *                                                                                    LM00504    
                  * **********************************************************                         LM00505    
                  * **********************************************************                         LM00506    
                  * **********************************************************                         LM00507    
                  *                                                                                    LM00508    
      MONTH       * UPDATE TIMUSD AND RESET TAU VECTORS                                                LM00509    
                  *                                                                                    LM00510    
                  * USAGE:   ADMIN MONTH -NAME1- -NAME2-                                               LM00511    
                  *                                                                                    LM00512    
                  * E'E (T0,N1), (T1,N2), (TUCARD(8),LENGTH), (T6,TAULOC)                              LM00513    
                  EQUIVALENCE (T7,LEN)                                                            *254 LM00514    
                  EQUIVALENCE (TUCARD(2),DAYTIM), (TUCARD(1),DATELU)                              *255 LM00515    
                  *                                                                                    LM00516    
                  OR WHENEVER COMBUF(M) .E. $ MONTH$                                              *256 LM00517    
                    M = M+1                                                                       *257 LM00518    
                    WHENEVER COMBUF(M) .E. HELP                                                   *258 LM00519    
                      PRFULL.($ 'UADMIN MONTH 'L-NAME1- -NAME2-$)                                 *259 LM00520    
                    OTHERWISE                                                                     *260 LM00521    
                      CHKPRV.(BITS.V.RPATBT)                                                      *261 LM00522    
                      N1 = COMBUF(M)                                                              *262 LM00523    
                      N2 = COMBUF(M+1)                                                            *263 LM00524    
                      WHENEVER N1 .E. FENCE                                                       *264 LM00525    
                        N1 = TU                                                                   *265 LM00526    
                        N2 = TA                                                                   *266 LM00527    
                      OR WHENEVER N2 .E. FENCE                                                    *267 LM00528    
                        N2 = TA                                                                   *268 LM00529    
                      OR WHENEVER COMBUF(M+2) .NE. FENCE                                          *269 LM00530    
                        TRANSFER TO ERR1                                                          *270 LM00531    
                      END OF CONDITIONAL                                                          *271 LM00532    
                      LEN = 5*(N+1)                                                               *272 LM00533    
                      TAULOC = COMMON.(TAU5)                                                      *273 LM00534    
                      GETBUF.(B5,LEN)                                                             *274 LM00535    
                      ATTACH.(M1416,CMFL02)                                                       *275 LM00536    
                      FSTATE.(TU,TA,LENGTH...8)                                                   *276 LM00537    
                  *                                                                                    LM00538    
                      PCTL.(3)                                                                    *277 LM00539    
                      PRFULL.(X,WHO(3)...M2,ON,WHO,$ RESETTING TIMUSD AT 'X$,                     *278 LM00540    
                1       DATE,X,TIME,$.$)                                                          *278 LM00541    
                      PCTL.(1)                                                                    *279 LM00542    
                  *                                                                                    LM00543    
                  *    M1416 4301 ON 800251 RESETTING TIMUSD AT 12/31 2359.1.                          LM00544    
                  *                                                                                    LM00545    
                  *                                                                                    LM00546    
                  * GO NON-INTERRUPTABLE, RENAME PRESENT TIMUSD TIMACC TO                              LM00547    
                  * DATE-TIME, SETFIL A NEW ONE, MOVFIL THE OLD ONE TO MY                              LM00548    
                  * DIRECTORY, GET ALL TAU VECTORS AND PROBNO-PROGNO'S.                                LM00549    
                  *                                                                                    LM00550    
                      NONINT.                                                                     *280 LM00551    
                      DATE = RJUST.(DATE)                                                         *281 LM00552    
                      CHFILE.(TU,TA,20K,DATE,TIME)                                                *282 LM00553    
                      SETFIL.(TU,TA,DAYTIM,DATELU,120K,2)                                         *283 LM00554    
                      MOVFIL.(DATE,TIME,ME(1),ME)                                                 *284 LM00555    
                      GETARY.(TAULOC,B5(B5+LEN)...LEN)                                            *285 LM00556    
                      GETPRB.                                                                     *286 LM00557    
                  *                                                                                    LM00558    
                  *  RESET ALL TIME USED IN CORE A TO ZERO                                             LM00559    
                  *                                                                                    LM00560    
                      THROUGH MON1, FOR I = 0,1,I.G.LEN                                           *287 LM00561    
      MON1            SLOC.(GLOC.(TAULOC+I).A.77776K7,TAULOC+I)                                   *288 LM00562    
                      INT.                                                                        *289 LM00563    
                  *                                                                                    LM00564    
                  *                                                                                    LM00565    
                      ATTACH.(ME(1),ME)                                                           *290 LM00566    
                      LEN = N+1                                                                   *291 LM00567    
                      TU = DATE                                                                   *292 LM00568    
                      TA = TIME                                                                   *293 LM00569    
                      STATUS = $RW$                                                               *294 LM00570    
      MON2            READTU.(PROBN(PROBN),PROGN(PROGN),N,MONEOF)                                 *295 LM00571    
                      UPSHFT.                                                                     *296 LM00572    
                      WRWAIT.(TU,TA,RELLOC,TUCARD(27)...28)                                       *297 LM00573    
                      TRANSFER TO MON2                                                            *298 LM00574    
                  *                                                                                    LM00575    
                  *  ALL USERS WHICH WERE FOUND IN TIMUSD HAVE BEEN UPDATED,                           LM00576    
                  *  NOW CREATE ADDITIONAL CARDS FOR THOSE NOT FOUND.                                  LM00577    
                  *                                                                                    LM00578    
      MONEOF          THROUGH MON3, FOR J = 0,1,J.G.27                                            *299 LM00579    
      MON3            TUCARD(J) = $$                                                              *300 LM00580    
                      BFOPEN.(W,TU,TA,B1(B1+432),B2(B2+432),B3(B3+432),IOERR)                     *301 LM00581    
                      THROUGH MON4, FOR I = 0,1,I.G.N                                             *302 LM00582    
                      WHENEVER PROBN(PROBN+I) .NE. 0                                              *303 LM00583    
                        TUCARD(27) = PROBN(PROBN+I)                                               *304 LM00584    
                        TUCARD(26) = PROGN(PROGN+I)                                               *305 LM00585    
                        TUCARD(13) = DATE                                                         *306 LM00586    
                        TUCARD(12) = TIME                                                         *307 LM00587    
                        UPSHFT.                                                                   *308 LM00588    
                        BFWRIT.(TU,TA,TUCARD(27)...28,IOERR)                                      *309 LM00589    
                      END OF CONDITIONAL                                                          *310 LM00590    
      MON4            CONTINUE                                                                    *311 LM00591    
                      BFCLOS.(TU,TA,IOERR)                                                        *312 LM00592    
                      UNLINK.(N1,N2,NULL.)                                                        *313 LM00593    
                      CHFILE.(N1,N2,1,M0,M0,NULL.)                                                *314 LM00594    
                      DELFIL.(N1,N2,NULL.)                                                        *315 LM00595    
                      CHFILE.(TU,TA,124K,N1,N2)                                                   *316 LM00596    
                    END OF CONDITIONAL                                                            *317 LM00597    
                  *                                                                                    LM00598    
                  *                                                                                    LM00599    
                  *                                                                                    LM00600    
                  * **********************************************************                         LM00601    
                  * **********************************************************                         LM00602    
                  * **********************************************************                         LM00603    
                  *                                                                                    LM00604    
                  *                            PATCH                                                   LM00605    
                  *                                                                                    LM00606    
                  * **********************************************************                         LM00607    
                  * **********************************************************                         LM00608    
                  * **********************************************************                         LM00609    
                  *                                                                                    LM00610    
      PATCH       * PATCH CORE A                                                                       LM00611    
                  *                                                                                    LM00612    
                  * USAGE:  ADMIN PATCH LOC -DELTA- LHALF RHALF                                        LM00613    
                  * WHERE 'LOC' IS EITHER AN OCTAL LOCATION, COMMON VARIABLE,                          LM00614    
                  * OR ENTRY POINT.  DELTA MAY BE ' '+' OR '-' LENGTH'.                                LM00615    
                  * (IF LENGTH ENDS WITH A '.', IT IS ASSUMED TO BE                                    LM00616    
                  * DECIMAL, OTHERWISE, OCTAL.)                                                        LM00617    
                  *                                                                                    LM00618    
                  EQUIVALENCE (T0,UPATSW), (T1,NAMESW), (T2,DELTA), (T3,LOC)                      *318 LM00619    
                  EQUIVALENCE (T4,LHALF), (T5,RHALF), (T6,TEST), (T7,KEYS)                        *319 LM00620    
                  EQUIVALENCE (TUCARD,PATMES)                                                     *320 LM00621    
                  DIMENSION PATMES(2)                                                             *321 LM00622    
                  BOOLEAN UPATSW,NAMESW                                                           *322 LM00623    
                  *                                                                                    LM00624    
                  DEFINE UNARY OPERATOR .ENK., PRECEDENCE HIGHER THAN .LS.                        *323 LM00625    
                  MODE STRUCTURE .ENK. 1 TO 1                                                     *324 LM00626    
             XEC      =76000000004K                                                               *325 LM00627    
             STQ      B                                                                           *326 LM00628    
             OUT      MQ                                                                          *327 LM00629    
             END                                                                                  *328 LM00630    
                  *                                                                                    LM00631    
                  OR WHENEVER COMBUF(M) .E. $ PATCH$                                              *329 LM00632    
                    M = M+1                                                                       *330 LM00633    
                    WHENEVER COMBUF(M) .E. HELP                                                   *331 LM00634    
                      PRFULL.(FMT3...100)                                                         *332 LM00635    
                      VECTOR VALUES FMT3 =$ 'UADMIN PATCH 'LLOC -DELTA- LHALF RHALF$,             *333 LM00636    
                1     $'* WHERE '=LOC'= IS EITHER AN OCTAL LOCATION, COMMON V$,                   *333 LM00637    
                2     $ARIABLE, '* OR AN ENTRY POINT.  '1 DELTA MAY BE '=+'= $,                   *333 LM00638    
                3     $OR '=-'= LENGTH.'* ('1IF LENGTH ENDS WITH A '=.'=, IT $,                   *333 LM00639    
                4     $IS ASSUMED DECIMAL, OTHERWISE, OCTAL.)$,777777777777K                      *333 LM00640    
                    OTHERWISE                                                                     *334 LM00641    
      PAT1            WHENEVER COMBUF(M) .E. FENCE, TRANSFER TO ERR2                              *335 LM00642    
                      WHENEVER ZEL.(COMBUF(M)).A.$YYYYYY$ .E. 0                                   *336 LM00643    
                        NAMESW = 0B                                                               *337 LM00644    
                        LOC = BCOCT.(COMBUF(M))                                                   *338 LM00645    
                      OTHERWISE                                                                   *339 LM00646    
                        NAMESW = 1B                                                               *340 LM00647    
                        PATMES = BZ57.(COMBUF(M))                                                 *341 LM00648    
                        WHENEVER .NOT.UPATSW, PATMES(1) = NULLS                                   *342 LM00649    
                        PATMES(2) = NULLS                                                         *343 LM00650    
                        LOC = COMLOC.(LJUST.(COMBUF(M)),PAT2)                                     *344 LM00651    
                        TRANSFER TO PAT3                                                          *345 LM00652    
      PAT2              LOC = ENTRY.(COMBUF(M))                                                   *346 LM00653    
                      END OF CONDITIONAL                                                          *347 LM00654    
      PAT3            M = M+1                                                                     *348 LM00655    
                  *                                                                                    LM00656    
                  *  TEST FOR THE DELTA OPTION (ON PATCH ONLY)                                         LM00657    
                  *                                                                                    LM00658    
                      WHENEVER UPATSW, TRANSFER TO PAT4                                           *349 LM00659    
                      WHENEVER (COMBUF(M).E.$     +$ .OR. COMBUF(M).E.$     -$)                   *350 LM00660    
                1       .AND. ZEL.(COMBUF(M+1)).A.$     0$.E.0                                    *350 LM00661    
                        WHENEVER COMBUF(M+1).A.77K .E. $00000.$                                   *351 LM00662    
                          DELTA = BCDEC.(COMBUF(M+1).RS.6)                                        *352 LM00663    
                        OR WHENEVER ZEL.(COMBUF(M+1)).A.$YYYYYY$ .NE. 0                           *353 LM00664    
                          DELTA = BCDEC.(COMBUF(M+1))                                             *354 LM00665    
                        OTHERWISE                                                                 *355 LM00666    
                          DELTA = BCOCT.(COMBUF(M+1))                                             *356 LM00667    
                        END OF CONDITIONAL                                                        *357 LM00668    
                        WHENEVER COMBUF(M).E.$     -$, DELTA = -DELTA                             *358 LM00669    
                        LOC = LOC + DELTA                                                         *359 LM00670    
                        PATMES(1) = (COMBUF(M).LS.24).V.60575757K                                 *360 LM00671    
                        PATMES(2) = BZ57.(COMBUF(M+1))                                            *361 LM00672    
                        M = M+2                                                                   *362 LM00673    
                      END OF CONDITIONAL                                                          *363 LM00674    
      PAT4            WHENEVER UPATSW, LOC = LOC + USER                                           *364 LM00675    
                      WHENEVER .NOT. NAMESW                                                       *365 LM00676    
                        PATMES = BZ57.(OCABC.(LOC))                                               *366 LM00677    
                        PATMES(1) = NULLS                                                         *367 LM00678    
                        PATMES(2) = NULLS                                                         *368 LM00679    
                      END OF CONDITIONAL                                                          *369 LM00680    
                      LHALF = COMBUF(M)                                                           *370 LM00681    
                      RHALF = COMBUF(M+1)                                                         *371 LM00682    
                      M = M+2                                                                     *372 LM00683    
                      WHENEVER LHALF.V.RHALF .E. FENCE, TRANSFER TO ERR2                          *373 LM00684    
                      WHENEVER COMBUF(M).NE.FENCE, TRANSFER TO ERR1                               *374 LM00685    
                      TEST = GLOC.(LOC)                                                           *375 LM00686    
                      WHENEVER LHALF.E.STAR, LHALF = OCLBC.(TEST)                                 *376 LM00687    
                      WHENEVER RHALF.E.STAR, RHALF = OCRBC.(TEST)                                 *377 LM00688    
                      LHALF = ZEL.(LHALF)                                                         *378 LM00689    
                      RHALF = ZEL.(RHALF)                                                         *379 LM00690    
                      WHENEVER (LHALF.V.RHALF).A.$YYYYYY$.NE.0, TRANSFER TO ERR6                  *380 LM00691    
      PATTST          WHENEVER .ENK.KEYS.A.KEY22 .NE. KEY22 .AND. WHO.NE.$(FIB)$                  *381 LM00692    
                        GETTM.(DATE,TIME)                                                         *382 LM00693    
                        PRFULL.($'R'1KEY 22 NOT SET AT 'X$,TIME,BLACK)                            *383 LM00694    
                        SNOOZE.(10,SLPCMD(2))                                                     *384 LM00695    
                        TRANSFER TO PATTST                                                        *385 LM00696    
                      END OF CONDITIONAL                                                          *386 LM00697    
                      PCTL.(3)                                                                    *387 LM00698    
                      PRFULL.(X,WHO(3)...M2,ON,WHO,$ PATCHING 'X$,PATMES...3,                     *388 LM00699    
                1    $'L FROM '8$,OCLBC.(TEST),OCRBC.(TEST),$ TO '8$,                             *388 LM00700    
                2    LHALF,RHALF,$.$)                                                             *388 LM00701    
                      PCTL.(1)                                                                    *389 LM00702    
                  *                                                                                    LM00703    
                  *  M1416 4301 ON 800280 PATCHING RCODE(USER) FROM X TO Y                             LM00704    
                  *  M1416 4301 ON 800280 PATCHING QUANTM FROM X TO Y                                  LM00705    
                  *  M1416 4301 ON 800280 PATCHING SLPTIM + 15. FROM X TO Y                            LM00706    
                  *  M1416 4301 ON 800280 PATCHING 76125 FROM X TO Y                                   LM00707    
                  *                                                                                    LM00708    
                      SLOC.((BCOCT.(LHALF).LS.18).V.BCOCT.(RHALF),LOC)                            *390 LM00709    
                    END OF CONDITIONAL                                                            *391 LM00710    
                  *                                                                                    LM00711    
                  *                                                                                    LM00712    
                  *                                                                                    LM00713    
                  * **********************************************************                         LM00714    
                  * **********************************************************                         LM00715    
                  * **********************************************************                         LM00716    
                  *                                                                                    LM00717    
                  *                            PB                                                      LM00718    
                  *                                                                                    LM00719    
                  * **********************************************************                         LM00720    
                  * **********************************************************                         LM00721    
                  * **********************************************************                         LM00722    
                  *                                                                                    LM00723    
      PB          * ASSIGN A PERCENTAGE OF THE CPU TIME TO A USER                                      LM00724    
                  *                                                                                    LM00725    
                  * USAGE:  ADMIN PB N USER (N = THE PERCENTAGE)                                       LM00726    
                  *                                                                                    LM00727    
                  EQUIVALENCE (T0,PB)                                                             *392 LM00728    
                  *                                                                                    LM00729    
                  OR WHENEVER COMBUF(M) .E. $    PB$                                              *393 LM00730    
                    M = M+1                                                                       *394 LM00731    
                    PB = BCDEC.(COMBUF(M))                                                        *395 LM00732    
                    WHENEVER COMBUF(M) .E. HELP                                                   *396 LM00733    
                      PRFULL.(ADMIN...2,CURCOM.(0),$ 'LN USER$)                                   *397 LM00734    
                    OR WHENEVER ZEL.(COMBUF(M)).A.$$ .NE. 0 .OR. PB.G.100                         *398 LM00735    
                      TRANSFER TO ERR0                                                            *399 LM00736    
                    OTHERWISE                                                                     *400 LM00737    
                      M = M+1                                                                     *401 LM00738    
                      GETUSR.(PB0,ERR4,ERR5)                                                      *402 LM00739    
      PB0             PCTL.(3)                                                                    *403 LM00740    
                      PRFULL.(X,WHO(3)...M2,ON,WHO,$ SETTING PERCENTAGE OF 'X$,                   *404 LM00741    
                1     PROB...2,$ TO 'X$,BZ57.(DEFBC.(PB)),$.$)                                    *404 LM00742    
                      PCTL.(1)                                                                    *405 LM00743    
                  *                                                                                    LM00744    
                  *      M1416 4301 ON 800251 SETTING PERCENTAGE OF                                    LM00745    
                  *      M1416 9324 TO 15.                                                             LM00746    
                  *                                                                                    LM00747    
                      SLOC.(PB,COMMON.($PB$)+USR)                                                 *406 LM00748    
                      SLOC.(GLOC.(COMMON.(TIMNOW)),COMMON.(STRTIM)+USR)                           *407 LM00749    
                      SLOC.(0,COMMON.(WRKTIM)+USR)                                                *408 LM00750    
                    END OF CONDITIONAL                                                            *409 LM00751    
                  *                                                                                    LM00752    
                  *                                                                                    LM00753    
                  *                                                                                    LM00754    
                  * **********************************************************                         LM00755    
                  * **********************************************************                         LM00756    
                  * **********************************************************                         LM00757    
                  *                                                                                    LM00758    
                  *                            PRNTON                                                  LM00759    
                  *                                                                                    LM00760    
                  * **********************************************************                         LM00761    
                  * **********************************************************                         LM00762    
                  * **********************************************************                         LM00763    
                  *                                                                                    LM00764    
      PRNTON      * PRINT A MESSAGE (OR FILE) ONLINE                                                   LM00765    
                  *                                                                                    LM00766    
                  * USAGE:  ADMIN PRNTON -NAME1 NAME2-                                                 LM00767    
                  *                                                                                    LM00768    
                  OR WHENEVER COMBUF(M) .E. $PRNTON$                                              *410 LM00769    
                    M = M+1                                                                       *411 LM00770    
                    WHENEVER COMBUF(M) .E. HELP                                                   *412 LM00771    
                      PRFULL.(ADMIN...2,CURCOM.(0),$ 'L-NAME1 NAME2-$)                            *413 LM00772    
                    OTHERWISE                                                                     *414 LM00773    
                      PRNTON.(COMBUF(M),COMBUF(M+1))                                              *415 LM00774    
                    END OF CONDITIONAL                                                            *416 LM00775    
                  *                                                                                    LM00776    
                  *                                                                                    LM00777    
                  *                                                                                    LM00778    
                  * **********************************************************                         LM00779    
                  * **********************************************************                         LM00780    
                  * **********************************************************                         LM00781    
                  *                                                                                    LM00782    
                  *                            RDTIMU                                                  LM00783    
                  *                                                                                    LM00784    
                  * **********************************************************                         LM00785    
                  * **********************************************************                         LM00786    
                  * **********************************************************                         LM00787    
                  *                                                                                    LM00788    
      RDTIMU      * FIND THE TIME USED BY A USER                                                       LM00789    
                  *                                                                                    LM00790    
                  * USAGE:  ADMIN RDTIMU USER -NAME1- -NAME2-                                          LM00791    
                  *                                                                                    LM00792    
                  * E'E (T0,N1), (T1,N2) (T6,TAULOC)                                                   LM00793    
                  EQUIVALENCE (T2,NOTLIN), (T3,FOUND), (T4,SHFT), (T5,TAU)                        *417 LM00794    
                  EQUIVALENCE (TUCARD(27),USED(5)), (TUCARD(21),ALTD(5))                          *418 LM00795    
                  DIMENSION ALTD(0),USED(0)                                                       *419 LM00796    
                  BOOLEAN NOTLIN, FOUND                                                           *420 LM00797    
                  *                                                                                    LM00798    
                  OR WHENEVER COMBUF(M) .E. $RDTIMU$                                              *421 LM00799    
                    M = M+1                                                                       *422 LM00800    
                    WHENEVER COMBUF(M) .E. HELP                                                   *423 LM00801    
                      PRFULL.(ADMIN...2,CURCOM.(0),$ '4USER -NAME1- -NAME2-$)                     *424 LM00802    
                    OTHERWISE                                                                     *425 LM00803    
                      NOTLIN = 1B                                                                 *426 LM00804    
                      GETUSR.(RTU0,RTU1,ERR5)                                                     *427 LM00805    
      RTU0            NOTLIN = 0B                                                                 *428 LM00806    
      RTU1            WHENEVER COMBUF(M) .E. FENCE                                                *429 LM00807    
                        NONINT.                                                                   *430 LM00808    
                        ATTACH.(M1416,CMFL02)                                                     *431 LM00809    
                        TRANSFER TO RTU2                                                          *432 LM00810    
                      END OF CONDITIONAL                                                          *433 LM00811    
                      TU = COMBUF(M)                                                              *434 LM00812    
                      M = M+1                                                                     *435 LM00813    
                      WHENEVER COMBUF(M) .NE. FENCE                                               *436 LM00814    
                        TA = COMBUF(M)                                                            *437 LM00815    
                        M = M+1                                                                   *438 LM00816    
                      END OF CONDITIONAL                                                          *439 LM00817    
                      WHENEVER COMBUF(M) .NE. FENCE, TRANSFER TO ERR1                             *440 LM00818    
                  *                                                                                    LM00819    
      RTU2            STATUS = R                                                                  *441 LM00820    
                      READTU.(PROB,PROG,1,RTU3)                                                   *442 LM00821    
                      NAME = TUCARD(25)                                                           *443 LM00822    
                      FOUND = 1B                                                                  *444 LM00823    
                      BFCLOS.(TU,TA,RTU3)                                                         *445 LM00824    
                  *                                                                                    LM00825    
      RTU3            INT.                                                                        *446 LM00826    
                      WHENEVER NOTLIN .AND. .NOT.FOUND                                            *447 LM00827    
                        PRFULL.($'1NEVER HEARD OF 'X$,PROB...2)                                   *448 LM00828    
                        TRANSFER TO OUT                                                           *449 LM00829    
                      OR WHENEVER NOTLIN                                                          *450 LM00830    
                        THROUGH RTU4, FOR I = 1,1,I.G.5                                           *451 LM00831    
                          ALTD(I) = 0                                                             *452 LM00832    
                          USED(I) = BCDEC.(TUCARD(10-I))*60                                       *453 LM00833    
      RTU4              CONTINUE                                                                  *454 LM00834    
                      OTHERWISE                                                                   *455 LM00835    
                        TAULOC = COMMON.(TAU5)                                                    *456 LM00836    
                        THROUGH RTU5, FOR I = 4,-1,I.L.0                                          *457 LM00837    
                          TAU = GLOC.(TAULOC+I*(N+1)+USR)                                         *458 LM00838    
                          USED(5-I) = TAU.A.17777777K                                             *459 LM00839    
                          ALTD(5-I) = TAU.RS.14                                                   *460 LM00840    
                          WHENEVER ALTD(5-I).NE.0, ALTD(5-I)=ALTD(5-I).V.377K                     *461 LM00841    
      RTU5                CONTINUE                                                                *462 LM00842    
                      END OF CONDITIONAL                                                          *463 LM00843    
                      PRFULL.(X,NAME,X,PROB...2)                                                  *464 LM00844    
                      THROUGH RTU6, FOR I = 1,1,I.G.5                                             *465 LM00845    
                      WHENEVER ALTD(I).V.USED(I) .NE. 0                                           *466 LM00846    
                        SHFT = DEFBC.(I).LS.12.V.$0000  $                                         *467 LM00847    
                        PRFULL.(BZEL.(SHFT),BZEL.(MINS.(ALTD(I))),                                *468 LM00848    
                1         BZEL.(MINS.(USED(I))))                                                  *468 LM00849    
                      END OF CONDITIONAL                                                          *469 LM00850    
      RTU6            CONTINUE                                                                    *470 LM00851    
                      WHENEVER FOUND, PRFULL.($'1LAST LOGOUT 'X$,                                 *471 LM00852    
                1   TUCARD(13).A.7777K8.V.$00/00$.V.(TUCARD(13).RS.6.A.7777K2),                   *471 LM00853    
                2     TUCARD(12),$ FROM $,X,TUCARD(11),$.$)                                       *471 LM00854    
                  *                                                                                    LM00855    
                  *     LAST LOGOUT 12/31 1832.1 FROM 800251.                                          LM00856    
                  *                                                                                    LM00857    
                      WHENEVER .NOT.NOTLIN, PRFULL.($'1NOW ON UNIT 'X$,                           *472 LM00858    
                1     GLOC.(COMMON.(UNITID)+USR),$ LINE $,BZ57.(DEFBC.(USR)))                     *472 LM00859    
                  *                                                                                    LM00860    
                  *      NOW ON UNIT 800251 LINE 31                                                    LM00861    
                  *                                                                                    LM00862    
                    END OF CONDITIONAL                                                            *473 LM00863    
                  *                                                                                    LM00864    
                  *                                                                                    LM00865    
                  *                                                                                    LM00866    
                  * **********************************************************                         LM00867    
                  * **********************************************************                         LM00868    
                  * **********************************************************                         LM00869    
                  *                                                                                    LM00870    
                  *                            SETTAU                                                  LM00871    
                  *                                                                                    LM00872    
                  * **********************************************************                         LM00873    
                  * **********************************************************                         LM00874    
                  * **********************************************************                         LM00875    
                  *                                                                                    LM00876    
      SETTAU      * SET/RESET TAU VECTORS IN CORE A FOR A USER                                         LM00877    
                  *                                                                                    LM00878    
                  * USAGE:  ADMIN SETTAU SHFT ALTD USED USER                                           LM00879    
                  *                                                                                    LM00880    
                  * E'E (T4,SHFT), (T5,TAU), (T6,TAULOC)                                               LM00881    
                  * E'E (TUCARD(27),USED(5)), (TUCARD(21),ALTD(5))                                     LM00882    
                  EQUIVALENCE (OUSED,USED(1)), (OALTD,ALTD(1))                                    *474 LM00883    
                  EQUIVALENCE (NUSED,USED(2)), (NALTD,ALTD(2))                                    *475 LM00884    
                  *                                                                                    LM00885    
                  OR WHENEVER COMBUF(M) .E. $SETTAU$                                              *476 LM00886    
                    M = M+1                                                                       *477 LM00887    
                    WHENEVER COMBUF(M) .E. HELP                                                   *478 LM00888    
                      PRFULL.(ADMIN...2,CURCOM.(0),$ 'LSHIFT ALTD USED USER$)                     *479 LM00889    
                    OTHERWISE                                                                     *480 LM00890    
                      SHFT = COMBUF(M)                                                            *481 LM00891    
                      ALTD = COMBUF(M+1)                                                          *482 LM00892    
                      USED = COMBUF(M+2)                                                          *483 LM00893    
                      M = M+3                                                                     *484 LM00894    
                      WHENEVER SHFT.V.ALTD.V.USED .E. FENCE, TRANSFER TO ERR2                     *485 LM00895    
                      SHFT = BCDEC.(SHFT)                                                         *486 LM00896    
                      WHENEVER SHFT.E.0 .OR. SHFT.G.5, TRANSFER TO ERR0                           *487 LM00897    
                      GETUSR.(SET0,ERR4,ERR5)                                                     *488 LM00898    
      SET0            TAULOC = COMMON.(TAU1) - (SHFT-1)*(N+1) + USR                               *489 LM00899    
                      TAU = GLOC.(TAULOC)                                                         *490 LM00900    
                      OUSED = TAU.A.17777777K                                                     *491 LM00901    
                      OALTD = TAU.RS.14.V.377K                                                    *492 LM00902    
                  *                                                                                    LM00903    
                      WHENEVER USED .E. STAR                                                      *493 LM00904    
                        NUSED = OUSED                                                             *494 LM00905    
                      OTHERWISE                                                                   *495 LM00906    
                        WHENEVER ZEL.(USED).A.$$.NE.0, TRANSFER TO ERR0                           *496 LM00907    
                        NUSED = BCDEC.(USED) * 3600                                               *497 LM00908    
                      END OF CONDITIONAL                                                          *498 LM00909    
                  *                                                                                    LM00910    
                      WHENEVER ALTD .E. STAR                                                      *499 LM00911    
                        NALTD = OALTD                                                             *500 LM00912    
                      OTHERWISE                                                                   *501 LM00913    
                        WHENEVER ZEL.(ALTD).A.$$ .NE. 0, TRANSFER TO ERR0                         *502 LM00914    
                        NALTD = BCDEC.(ALTD) * 3600                                               *503 LM00915    
                      END OF CONDITIONAL                                                          *504 LM00916    
                  *                                                                                    LM00917    
                      PCTL.(3)                                                                    *505 LM00918    
                      PRFULL.(X,WHO(3)...M2,ON,WHO,$ SETTING '3TAU'X$,                            *506 LM00919    
                1     BZ57.(DEFBC.(SHFT)),$ OF'X$,PROB...2,$ FROM $,                              *506 LM00920    
                2     BZ57.(DEFBC.(OALTD/3600)),BL,BZ57.(DEFBC.(OUSED/3600)),                     *506 LM00921    
                3     $ TO '8$,BZ57.(DEFBC.(NALTD/3600)),BL,                                      *506 LM00922    
                4     BZ57.(DEFBC.(NUSED/3600)),$.$)                                              *506 LM00923    
                        PCTL.(1)                                                                  *507 LM00924    
                  *                                                                                    LM00925    
                  *     M1416 3579 ON 800251 SETTING TAU1 OF M1416 4301                                LM00926    
                  *          FROM 600 10 TO 300 30.                                                    LM00927    
                  *                                                                                    LM00928    
                      SLOC.(NALTD.LS.14.A.77776K7.V.NUSED.A.17777777K,TAULOC)                     *508 LM00929    
                  *                                                                                    LM00930    
                    END OF CONDITIONAL                                                            *509 LM00931    
                  *                                                                                    LM00932    
                  *                                                                                    LM00933    
                  *                                                                                    LM00934    
                  * **********************************************************                         LM00935    
                  * **********************************************************                         LM00936    
                  * **********************************************************                         LM00937    
                  *                                                                                    LM00938    
                  *                            SPY                                                     LM00939    
                  *                                                                                    LM00940    
                  * **********************************************************                         LM00941    
                  * **********************************************************                         LM00942    
                  * **********************************************************                         LM00943    
                  *                                                                                    LM00944    
      SPY         * SPY ON ANOTHER USER                                                                LM00945    
                  *                                                                                    LM00946    
                  * USAGE:  ADMIN SPY USER                                                             LM00947    
                  *                                                                                    LM00948    
                  EQUIVALENCE (OLDM,T0)                                                           *510 LM00949    
                  *                                                                                    LM00950    
                  OR WHENEVER COMBUF(M) .E. $   SPY$                                              *511 LM00951    
                    M = M+1                                                                       *512 LM00952    
                    WHENEVER COMBUF(M) .E. HELP                                                   *513 LM00953    
                      PRFULL.($'UADMIN SPY 'LUSER$)                                               *514 LM00954    
                    OTHERWISE                                                                     *515 LM00955    
                      OLDM = M                                                                    *516 LM00956    
      SPY1            GETUSR.(ERR3,SPY3,ERR5)                                                     *517 LM00957    
                      PRFULL.($'1USER FOUND:'X$,PROB...2,$ LINE $,                                *518 LM00958    
                1     BZ57.(DEFBC.(USR)))                                                         *518 LM00959    
                      ADOPT = COMMON.(ADOPT)                                                      *519 LM00960    
                      SLOC.(3K5.V.USR,ADOPT+USER)                                                 *520 LM00961    
                      SLOC.(GLOC.(ADOPT+USR).V.7000003K5,ADOPT+USR)                               *521 LM00962    
      SPY2            SNOOZE.(1800,SLPCMD(2))                                                     *522 LM00963    
                  *  ... SLEEP FOR 30 MINUTES, THEN CALL SLEEP AGAIN.                                  LM00964    
                      TRANSFER TO SPY2                                                            *523 LM00965    
                  *                                                                                    LM00966    
      SPY3            GETTM.(DATE,TIME)                                                           *524 LM00967    
                      PRFULL.(X,PROB...2,$ IS NOT LOGGED IN - 'X$,TIME)                           *525 LM00968    
                      SNOOZE.(15,SLPCMD(2))                                                       *526 LM00969    
                      M = OLDM                                                                    *527 LM00970    
                      TRANSFER TO SPY1                                                            *528 LM00971    
                    END OF CONDITIONAL                                                            *529 LM00972    
                  *                                                                                    LM00973    
                  *                                                                                    LM00974    
                  *                                                                                    LM00975    
                  * **********************************************************                         LM00976    
                  * **********************************************************                         LM00977    
                  * **********************************************************                         LM00978    
                  *                                                                                    LM00979    
                  *                             SQZUFD                                                 LM00980    
                  *                                                                                    LM00981    
                  * **********************************************************                         LM00982    
                  * **********************************************************                         LM00983    
                  * **********************************************************                         LM00984    
                  *                                                                                    LM00985    
      SQZUFD      * COMPACT A USER U.F.D ELIMINATING HOLES                                             LM00986    
                  *                                                                                    LM00987    
                  * USAGE:  ADMIN SQZUFD USER1 USER2 ...                                               LM00988    
                  *    ANY USER MAY BE FOLLOWED BY '(DRUM)' OR '(DISK)' TO                             LM00989    
                  *    INDICATE WHERE THE FINAL UFD IS TO RESIDE.                                      LM00990    
                  *                                                                                    LM00991    
                  EQUIVALENCE (T0,N1), (T1,N2), (T2,NSTICK), (T3,STICKY)                          *530 LM00992    
                  EQUIVALENCE (TUCARD(8),LENGTH), (TUCARD(5),DEV), (TUCARD(27),BUFF)              *531 LM00993    
                  DIMENSION BUFF(0)                                                               *532 LM00994    
                  *                                                                                    LM00995    
                  OR WHENEVER COMBUF(M) .E. $SQZUFD$                                              *533 LM00996    
                    M = M+1                                                                       *534 LM00997    
                    WHENEVER COMBUF(M) .E. HELP                                                   *535 LM00998    
                      PRFULL.(FMT5...100)                                                         *536 LM00999    
                      VECTOR VALUES FMT5 = $ 'UADMIN SQZUFD 'LUSER1 USER2 ... $,                  *537 LM01000    
                1   $'*  USER MAY BE FOLLOWED BY '='4(DISK)'= OR '='4(DRUM)'=$,                   *537 LM01001    
                2   $'*  TO INDICATE WHERE THE FINAL UFD IS TO RESIDE.$,                          *537 LM01002    
                3   777777777777K                                                                 *537 LM01003    
                    OTHERWISE                                                                     *538 LM01004    
                      GETBUF.(B1,432)                                                             *539 LM01005    
                      GETBUF.(B2,432)                                                             *540 LM01006    
                      GETBUF.(B3,432)                                                             *541 LM01007    
                      GETBUF.(B4,432)                                                             *542 LM01008    
                      GETBUF.(B5,432)                                                             *543 LM01009    
                      FSTST = ENTRY.(FSTST)                                                       *544 LM01010    
                      NSTICK = ENTRY.(SAVING) + 1                                                 *545 LM01011    
                      STICKY = NSTICK + 6                                                         *546 LM01012    
                      NSTICK = GLOC.(NSTICK)*13                                                   *547 LM01013    
                      ATTACH.(MFD,FILE)                                                           *548 LM01014    
                      FERRTN.(SQZERR)                                                             *549 LM01015    
                  *                                                                                    LM01016    
      SQZ1            GETUSR.(ERR3,SQZ2,ERR5)                                                     *550 LM01017    
      SQZ2            NONINT.                                                                     *551 LM01018    
                      FSTATE.(PROB,PROG,LENGTH...8,NOUFD)                                         *552 LM01019    
                      TRANSFER TO SQZUFD                                                          *553 LM01020    
      NOUFD           PRFULL.($'R'X$,PROB...2,$ NOT FOUND.'B$)                                    *554 LM01021    
                      TRANSFER TO SQZOUT                                                          *555 LM01022    
                  *                                                                                    LM01023    
      SQZUFD          WHENEVER COMBUF(M) .E. $(DRUM)$                                             *556 LM01024    
                        DEV = 1                                                                   *557 LM01025    
                        M = M+1                                                                   *558 LM01026    
                      OR WHENEVER COMBUF(M) .E. $(DISK)$                                          *559 LM01027    
                        DEV = 2                                                                   *560 LM01028    
                        M = M+1                                                                   *561 LM01029    
                      END OF CONDITIONAL                                                          *562 LM01030    
                      THROUGH SQZ3, FOR I = 0,13,I.G.NSTICK                                       *563 LM01031    
                        N1 = GLOC.(STICKY+I)                                                      *564 LM01032    
                        N2 = GLOC.(STICKY+I+1)                                                    *565 LM01033    
                        WHENEVER N1 .E. PROB .AND. N2 .E. PROG                                    *566 LM01034    
                          INT.                                                                    *567 LM01035    
                          PRFULL.(RED,X,PROB...2,                                                 *568 LM01036    
                1         $ HAS INFORMATION IN THE STICKIES.'B$)                                  *568 LM01037    
                          TRANSFER TO SQZOUT                                                      *569 LM01038    
                        END OF CONDITIONAL                                                        *570 LM01039    
      SQZ3            CONTINUE                                                                    *571 LM01040    
                      SLOC.(FENCE,FSTST)                                                          *572 LM01041    
                  *                                                                                    LM01042    
                  *  OPEN PROB PROG, DELETE PREVIOUS PROG PROB IF ANY,                                 LM01043    
                  *  COPY PROB PROG INTO PROG PROB GETTING RID OF 0 ENTRIES.                           LM01044    
                  *                                                                                    LM01045    
                      ALLOT.(2,32767)                                                             *573 LM01046    
                      ALLOT.(1,32767)                                                             *574 LM01047    
                      BFOPEN.(R,PROB,PROG,B1(B1+432),B2(B2+432),M0,SQZERR)                        *575 LM01048    
                      CHFILE.(PROG,PROB,1,M0,M0,NULL.)                                            *576 LM01049    
                      DELFIL.(PROG,PROB,NULL.)                                                    *577 LM01050    
                      BFOPEN.(W,PROG,PROB,B3(B3+432),B4(B4+432),B5(B5+432),                       *578 LM01051    
                1     SQZERR)                                                                     *578 LM01052    
                      BFREAD.(PROB,PROG,BUFF...3,SQZEOF,M0,SQZERR)                                *579 LM01053    
                      BFWRIT.(PROG,PROB,BUFF...3,SQZERR)                                          *580 LM01054    
      SQZ5            BFREAD.(PROB,PROG,BUFF...7,SQZEOF,M0,SQZERR)                                *581 LM01055    
                      WHENEVER BUFF.V.BUFF(M1).NE.0,                                              *582 LM01056    
                1       BFWRIT.(PROG,PROB,BUFF...7,SQZERR)                                        *582 LM01057    
                      TRANSFER TO SQZ5                                                            *583 LM01058    
                  *                                                                                    LM01059    
      SQZEOF          BFCLOS.(PROB,PROG,SQZERR)                                                   *584 LM01060    
                      BFCLOS.(PROG,PROB,SQZERR)                                                   *585 LM01061    
      SQZ6            CHFILE.(PROB,PROG,1)                                                        *586 LM01062    
                      DELFIL.(PROB,PROG)                                                          *587 LM01063    
                      CHFILE.(PROG,PROB,104K,PROB,PROG)                                           *588 LM01064    
                  *                                                                                    LM01065    
                  *  IF UFD IS TO BE ON THE DRUM, USE THE COPY ROUTINE                                 LM01066    
                  *  TO TRANSFER IT.                                                                   LM01067    
                  *                                                                                    LM01068    
                      WHENEVER DEV .E. 1                                                          *589 LM01069    
                      DEV = 2                                                                     *590 LM01070    
                      OPEN.(R,PROB,PROG)                                                          *591 LM01071    
                      OPEN.(W,PROG,PROB,0,1)                                                      *592 LM01072    
                      BUFFER.(PROG,PROB,B4(B4+432)...432)                                         *593 LM01073    
                      COPY.(PROB,PROG,PROG,PROB,B1(B1+432),B2(B2+432),                            *594 LM01074    
                1     B3(B3+432),432,SQZERR)                                                      *594 LM01075    
                      CLOSE.(PROB,PROG)                                                           *595 LM01076    
                      CLOSE.(PROG,PROB)                                                           *596 LM01077    
                      TRANSFER TO SQZ6                                                            *597 LM01078    
                      END OF CONDITIONAL                                                          *598 LM01079    
                  *                                                                                    LM01080    
      SQZOUT          RESETF.                                                                     *599 LM01081    
                      SLOC.(0,FSTST)                                                              *600 LM01082    
                      INT.                                                                        *601 LM01083    
                      WHENEVER COMBUF(M).NE. FENCE, TRANSFER TO SQZ1                              *602 LM01084    
                      TRANSFER TO OUT                                                             *603 LM01085    
                  *                                                                                    LM01086    
      SQZERR          PRDIAG.                                                                     *604 LM01087    
                      TRANSFER TO SQZOUT                                                          *605 LM01088    
                    END OF CONDITIONAL                                                            *606 LM01089    
                  *                                                                                    LM01090    
                  *                                                                                    LM01091    
                  *                                                                                    LM01092    
                  * **********************************************************                         LM01093    
                  * **********************************************************                         LM01094    
                  * **********************************************************                         LM01095    
                  *                                                                                    LM01096    
                  *                            UPATCH                                                  LM01097    
                  *                                                                                    LM01098    
                  * **********************************************************                         LM01099    
                  * **********************************************************                         LM01100    
                  * **********************************************************                         LM01101    
                  *                                                                                    LM01102    
      UPATCH      * PATCH PRESENT USERS ARRAY ENTRY IN CORE A                                          LM01103    
                  *                                                                                    LM01104    
                  * USAGE:  ADMIN UPATCH LOC LHALF RHALF                                               LM01105    
                  *                                                                                    LM01106    
                  * E'E (T0,UPATSW), (TUCARD,PATMES)                                                   LM01107    
                  *                                                                                    LM01108    
                  OR WHENEVER COMBUF(M) .E. $UPATCH$                                              *607 LM01109    
                    M = M+1                                                                       *608 LM01110    
                    WHENEVER COMBUF(M) .E. HELP                                                   *609 LM01111    
                      PRFULL.(ADMIN...2,CURCOM.(0),$ 'LLOC LHALF RHALF$)                          *610 LM01112    
                    OTHERWISE                                                                     *611 LM01113    
                      UPATSW = 1B                                                                 *612 LM01114    
                      PATMES(1) = $(USER)$                                                        *613 LM01115    
                      TRANSFER TO PAT1                                                            *614 LM01116    
                    END OF CONDITIONAL                                                            *615 LM01117    
                  *                                                                                    LM01118    
                  *                                                                                    LM01119    
                  *                                                                                    LM01120    
                  *                                                                                    LM01121    
                  *                                                                                    LM01122    
                  *                                                                                    LM01123    
                  * **********************************************************                         LM01124    
                  * **********************************************************                         LM01125    
                  * **********************************************************                         LM01126    
                  *                                                                                    LM01127    
                  *                          UPDATE                                                    LM01128    
                  *                                                                                    LM01129    
                  *                                                                                    LM01130    
                  *                                                                                    LM01131    
                  * **********************************************************                         LM01132    
                  * **********************************************************                         LM01133    
                  * **********************************************************                         LM01134    
                  *                                                                                    LM01135    
                  *                                                                                    LM01136    
      UPDATE      * UPDATE CMFL02 WITH ACCOUNTING FILES                                                LM01137    
                  *                                                                                    LM01138    
                  * USAGE:   ADMIN UPDATE N1 -N2- -N3- -N4-                                            LM01139    
                  *                                                                                    LM01140    
                  E'E (T0,N1), (T1,N2), (T2,N3), (T3,N4), (T7,MODE)                                    LM01141    
                                                                                                       LM01142    
                  OR WHENEVER COMBUF(M) .E. $UPDATE$                                              *616 LM01143    
                    M = M+1                                                                       *617 LM01144    
                    WHENEVER COMBUF(M) .E. HELP                                                   *618 LM01145    
                      PRFULL.(ADMIN...2,CURCOM.(0),$ N1 -N2- -N3- -N4-$)                          *619 LM01146    
                    OTHERWISE                                                                     *620 LM01147    
                      N1 = COMBUF(M)                                                              *621 LM01148    
                      N2 = COMBUF(M+1)                                                            *622 LM01149    
                      N3 = COMBUF(M+2)                                                            *623 LM01150    
                      N4 = COMBUF(M+3)                                                            *624 LM01151    
                      WHENEVER N2 .E. FENCE                                                       *625 LM01152    
                        N2 = TA                                                                   *626 LM01153    
                        N3 = N1                                                                   *627 LM01154    
                        N4 = N2                                                                   *628 LM01155    
                      OR WHENEVER N3 .E. FENCE                                                    *629 LM01156    
                        N3 = N1                                                                   *630 LM01157    
                        N4 = N2                                                                   *631 LM01158    
                      OR WHENEVER N4 .E. FENCE                                                    *632 LM01159    
                        N4 = N2                                                                   *633 LM01160    
                      OR WHENEVER N1 .E. FENCE                                                    *634 LM01161    
                        TRANSFER TO ERR2                                                          *635 LM01162    
                      OR WHENEVER COMBUF(M+4).NE.FENCE                                            *636 LM01163    
                        M = M+4                                                                   *637 LM01164    
                        TRANSFER TO ERR1                                                          *638 LM01165    
                      END OF CONDITIONAL                                                          *639 LM01166    
                  *                                                                                    LM01167    
                      WHENEVER ME(1).E.M1416 .AND. ME.E.CMFL02 .AND.                              *640 LM01168    
                1       N3.E.N1 .AND. N4.E.N2, TRANSFER TO ERR0                                   *640 LM01169    
                      CHKPRV.(RPRVBT)                                                             *641 LM01170    
                  *                                                                                    LM01171    
                      GETBUF.(B1,432)                                                             *642 LM01172    
                      GETBUF.(B2,432)                                                             *643 LM01173    
                      GETBUF.(B3,432)                                                             *644 LM01174    
                      GETBUF.(B4,432)                                                             *645 LM01175    
                      OPEN.(R,N1,N2)                                                              *646 LM01176    
                      ATTACH.(M1416,CMFL02)                                                       *647 LM01177    
                      NONINT.                                                                     *648 LM01178    
                      CHFILE.(DATE,TIME,1,M0,M0,NULL.)                                            *649 LM01179    
                      DELFIL.(DATE,TIME,NULL.)                                                    *650 LM01180    
                      OPEN.(W,DATE,TIME,120K)                                                     *651 LM01181    
                      BUFFER.(DATE,TIME,B4(B4+432)...432)                                         *652 LM01182    
                      COPY.(N1,N2,DATE,TIME,B1(B1+432),B2(B2+432),B3(B3+432),                     *653 LM01183    
                1           432,IOERR)                                                            *653 LM01184    
                      CLOSE.(DATE,TIME)                                                           *654 LM01185    
                      CLOSE.(N1,N2)                                                               *655 LM01186    
                      MODE = 120K                                                                 *656 LM01187    
                      FSTATE.(N3,N4,TUCARD(1)...2,UPD1)                                           *657 LM01188    
                      MODE = TUCARD.A.777K                                                        *658 LM01189    
      UPD1            CHFILE.(N3,N4,1,M0,M0,NULL.)                                                *659 LM01190    
                      DELFIL.(N3,N4,NULL.)                                                        *660 LM01191    
                      CHFILE.(DATE,TIME,MODE,N3,N4)                                               *661 LM01192    
                      INT.                                                                        *662 LM01193    
                    END OF CONDITIONAL                                                            *663 LM01194    
                  *                                                                                    LM01195    
                  *                                                                                    LM01196    
                  *                                                                                    LM01197    
                  * **********************************************************                         LM01198    
                  * **********************************************************                         LM01199    
                  * **********************************************************                         LM01200    
                  *                                                                                    LM01201    
                  *                            WRITE                                                   LM01202    
                  *                                                                                    LM01203    
                  * **********************************************************                         LM01204    
                  * **********************************************************                         LM01205    
                  * **********************************************************                         LM01206    
                  *                                                                                    LM01207    
      WRITE       * WRITE A MESSAGE AT A USER                                                          LM01208    
                  *                                                                                    LM01209    
                  * USAGE: ADMIN WRITE USER                                                            LM01210    
                  *                                                                                    LM01211    
                  OR WHENEVER COMBUF(M) .E. $ WRITE$                                              *664 LM01212    
                    M = M+1                                                                       *665 LM01213    
                    WHENEVER COMBUF(M) .E. HELP                                                   *666 LM01214    
                      PRFULL.(ADMIN...2,CURCOM.(0),$ 'LUSER$)                                     *667 LM01215    
                    OTHERWISE                                                                     *668 LM01216    
                      GETUSR.(ERR3,ERR4,ERR5)                                                     *669 LM01217    
                      SETFUL.                                                                     *670 LM01218    
                      WRITE.(USR)                                                                 *671 LM01219    
                      SETBCD.                                                                     *672 LM01220    
                    END OF CONDITIONAL                                                            *673 LM01221    
                  *                                                                                    LM01222    
                  *                                                                                    LM01223    
                  *                                                                                    LM01224    
                  OTHERWISE                                                                       *674 LM01225    
                    WHENEVER M.E.0                                                                *675 LM01226    
                      M = 1                                                                       *676 LM01227    
                      TRANSFER TO USEROK                                                          *677 LM01228    
                    OTHERWISE                                                                     *678 LM01229    
                      PRFULL.($'R'X$,COMBUF(M),$ IS NOT A VALID FUNCTION.'B$)                     *679 LM01230    
                    END OF CONDITIONAL                                                            *680 LM01231    
                  END OF CONDITIONAL                                                              *681 LM01232    
      OUT         RESETF.                                                                         *682 LM01233    
                  ATTACH.(ME(1),ME,EXITM.)                                                        *683 LM01234    
                  EXITM.                                                                          *684 LM01235    
                  *                                                                                    LM01236    
                  * **********************************************************                         LM01237    
                  * **********************************************************                         LM01238    
                  * **********************************************************                         LM01239    
                  *                                                                                    LM01240    
                  *                    ERROR PROCESSOR                                                 LM01241    
                  *                                                                                    LM01242    
                  * **********************************************************                         LM01243    
                  * **********************************************************                         LM01244    
                  * **********************************************************                         LM01245    
                  *                                                                                    LM01246    
                  *                                                                                    LM01247    
                  *                                                                                    LM01248    
      IOERR       PRFULA.(RED)                                                                    *685 LM01249    
                  PRDIAG.                                                                         *686 LM01250    
                  PRFULA.(BLACK)                                                                  *687 LM01251    
                  TRANSFER TO OUT                                                                 *688 LM01252    
                  *                                                                                    LM01253    
      ERR0        PRFULL.($'R'1ILLEGAL USAGE.'B$)                                                 *689 LM01254    
                  TRANSFER TO OUT                                                                 *690 LM01255    
                  *                                                                                    LM01256    
      ERR1        PRFULL.($'R'1ILLEGAL ARGUMENT: 'X$,COMBUF(M),BLACK)                             *691 LM01257    
                  TRANSFER TO OUT                                                                 *692 LM01258    
                  *                                                                                    LM01259    
      ERR2        PRFULL.($'R'1MISSING ARGUMENT(S)'B$)                                            *693 LM01260    
                  TRANSFER TO OUT                                                                 *694 LM01261    
                  *                                                                                    LM01262    
      ERR3        PRFULL.($'R'1MISSING OR ILLEGAL USER SPECIFICATION.'B$)                         *695 LM01263    
                  TRANSFER TO OUT                                                                 *696 LM01264    
                  *                                                                                    LM01265    
      ERR5        PRFULL.($'R'1LINE '8$,BZ57.(DEFBC.(USR)),$ IS EMPTY.'B$)                        *697 LM01266    
                  TRANSFER TO OUT                                                                 *698 LM01267    
                  *                                                                                    LM01268    
      ERR4        PRFULL.(RED,X,PROB...2,$ IS NOT LOGGED IN.'B$)                                  *699 LM01269    
                  TRANSFER TO OUT                                                                 *700 LM01270    
                  *                                                                                    LM01271    
      ERR6        PRFULL.(RED,LHALF,RHALF,$ NOT OCTAL.'B$)                                        *701 LM01272    
                  TRANSFER TO OUT                                                                 *702 LM01273    
                  *                                                                                    LM01274    
      ERR7        PRFULL.($'R'1SYSTEM ERROR: FULL RETURN FROM '6ENTLIN.'B$)                       *703 LM01275    
                  TRANSFER TO OUT                                                                 *704 LM01276    
                  *                                                                                    LM01277    
                  *                                                                                    LM01278    
                  *                                                                                    LM01279    
                  * **********************************************************                         LM01280    
                  * **********************************************************                         LM01281    
                  * **********************************************************                         LM01282    
                  *                                                                                    LM01283    
                  *                    INTERNAL FUNCTIONS                                              LM01284    
                  *                                                                                    LM01285    
                  * **********************************************************                         LM01286    
                  * **********************************************************                         LM01287    
                  * **********************************************************                         LM01288    
                  *                                                                                    LM01289    
                  *                                                                                    LM01290    
                  *                                                                                    LM01291    
      CHKPRV      * CHECK FOR NECESSARY PRIVILEGES.                                                    LM01292    
                  *                                                                                    LM01293    
                  * USAGE:  CHKPRV.(CODE)                                                              LM01294    
                  *                                                                                    LM01295    
                  INTERNAL FUNCTION (CODE)                                                        *705 LM01296    
                  ENTRY TO CHKPRV.                                                                *706 LM01297    
                  WHENEVER RCODE.A.CODE.E.CODE, FUNCTION RETURN                                   *707 LM01298    
                  PRFULL.($'R'1INSUFFICIENT PRIVILEGES.  '1NEED AT LEAST '8$,                     *708 LM01299    
                1   BZ57.(OCRBC.(CODE)),BLACK)                                                    *708 LM01300    
                  TRANSFER TO OUT                                                                 *709 LM01301    
                  END OF FUNCTION                                                                 *710 LM01302    
                  *                                                                                    LM01303    
                  *                                                                                    LM01304    
                  *                                                                                    LM01305    
      COMMON      * RETURN THE VALUE (OR LOCATION) OF A COMMON VARIABLE                                LM01306    
                  *                                                                                    LM01307    
                  * USAGE:   COMMON.(SYMBOL)                                                           LM01308    
                  *                                                                                    LM01309    
                  INTERNAL FUNCTION (SYMBOL)                                                      *711 LM01310    
                  ENTRY TO COMMON.                                                                *712 LM01311    
                  FUNCTION RETURN COMLOC.(LJUST.(SYMBOL),COMERR)                                  *713 LM01312    
                  *                                                                                    LM01313    
      COMERR      PRFULL.($'R'X$,BZ57.(RJUST.(SYMBOL)),$ WAS NOT FOUND.'B$)                       *714 LM01314    
                  TRANSFER TO OUT                                                                 *715 LM01315    
                  *                                                                                    LM01316    
                  *                                                                                    LM01317    
                  *                                                                                    LM01318    
      ENTRY       * RETURN THE LOCATION OF A CORE A ENTRY                                              LM01319    
                  *                                                                                    LM01320    
                  * USAGE:   ENTRY.(SYMBOL)                                                            LM01321    
                  *                                                                                    LM01322    
                  ENTRY TO ENTRY.                                                                 *716 LM01323    
                  FUNCTION RETURN ACORE.(LJUST.(SYMBOL),COMERR).RS.18                             *717 LM01324    
                  END OF FUNCTION                                                                 *718 LM01325    
                  *                                                                                    LM01326    
                  *                                                                                    LM01327    
                  *                                                                                    LM01328    
      CURCOM      * GET THE NAME OF THE CURRENT FUNCTION                                               LM01329    
                  * WITH LEADING BLANKS STIRPPED OFF.                                                  LM01330    
                  *                                                                                    LM01331    
                  INTERNAL FUNCTION CURCOM.(X) = BZ57.(COMBUF(M-1))                               *719 LM01332    
                  *                                                                                    LM01333    
                  *                                                                                    LM01334    
                  *                                                                                    LM01335    
      INT         *  RESET THE NON INTERUPT BIT                                                        LM01336    
                  *                                                                                    LM01337    
                  INTERNAL FUNCTION                                                               *720 LM01338    
                  ENTRY TO INT.                                                                   *721 LM01339    
                  SLOC.(GLOC.(USROPT).A..N.NINTBT,USROPT)                                         *722 LM01340    
                  FUNCTION RETURN                                                                 *723 LM01341    
                  *                                                                                    LM01342    
                  *                                                                                    LM01343    
                  *                                                                                    LM01344    
      NONINT      *  SET THE NON-INTERUPT BIT                                                          LM01345    
                  *                                                                                    LM01346    
                  ENTRY TO NONINT.                                                                *724 LM01347    
                  SLOC.(GLOC.(USROPT).V.NINTBT,USROPT)                                            *725 LM01348    
                  FUNCTION RETURN                                                                 *726 LM01349    
                  END OF FUNCTION                                                                 *727 LM01350    
                  *                                                                                    LM01351    
                  *                                                                                    LM01352    
                  *                                                                                    LM01353    
      GETUSR      * GET A USER NUMBER, PROBNO, PROGNO AND NAME FROM                                    LM01354    
                  * THE 'USER' SPECIFICATION.                                                          LM01355    
                  * WRITTEN BY D.A. ANDERSON                                                           LM01356    
                  *                                                                                    LM01357    
                  * USAGE:  GETUSR.(NONE,NOTIN,LNMTY)                                                  LM01358    
                  * WHERE NONE = LOC TO TRANSFER IF NO USER SPECIFIED                                  LM01359    
                  *      NOTIN = LOC TO TRANSFER IF PROB-PROG GIVEN BUT NOT IN                         LM01360    
                  *      LNMTY = LOC TO TRANSFER IF USER NO. GIVEN BUT NOT IN                          LM01361    
                  *                                                                                    LM01362    
                  INTERNAL FUNCTION (NONE,NOTIN,LNMTY)                                            *728 LM01363    
                  STATEMENT LABEL NONE,NOTIN,LNMTY                                                *729 LM01364    
                  ENTRY TO GETUSR.                                                                *730 LM01365    
                  *                                                                                    LM01366    
                  WHENEVER COMBUF(M).E.FENCE                                                      *731 LM01367    
                     USR = USER                                                                   *732 LM01368    
                     GTUSR.(LNMTY)                                                                *733 LM01369    
                     TRANSFER TO NONE                                                             *734 LM01370    
                  OR WHENEVER ZEL.(COMBUF(M)).A.$$.E.0                                            *735 LM01371    
                     USR = BCDEC.(COMBUF(M))                                                      *736 LM01372    
                     WHENEVER USR.G.N, TRANSFER TO ERR3                                           *737 LM01373    
                     WHENEVER USR.E.0                                                             *738 LM01374    
                        PROB = $ BACKG$                                                           *739 LM01375    
                        PROG = $ROUND$                                                            *740 LM01376    
                        NAME = $$                                                                 *741 LM01377    
                     OTHERWISE                                                                    *742 LM01378    
                        GTUSR.(LNMTY)                                                             *743 LM01379    
                     END OF CONDITIONAL                                                           *744 LM01380    
                     M = M+1                                                                      *745 LM01381    
                  OR WHENEVER COMBUF(M) .E. STAR                                                  *746 LM01382    
                     USR = USER                                                                   *747 LM01383    
                     GTUSR.(LNMTY)                                                                *748 LM01384    
                     M = M+1                                                                      *749 LM01385    
                  OTHERWISE                                                                       *750 LM01386    
                     PROB = REPROB.(COMBUF(M))                                                    *751 LM01387    
                     M = M+1                                                                      *752 LM01388    
                     WHENEVER COMBUF(M).E.FENCE, TRANSFER TO ERR3                                 *753 LM01389    
                     PROG = COMBUF(M)                                                             *754 LM01390    
                     M = M+1                                                                      *755 LM01391    
                     GETPRB.                                                                      *756 LM01392    
      GTUSR1         THROUGH GTUSR1, FOR USR = 1,1,USR.G.N .OR.                                   *757 LM01393    
                1       (PROB.E.PROBN(PROBN+N-USR+1).AND.                                         *757 LM01394    
                2        PROG.E.PROGN(PROGN+N-USR+1))                                             *757 LM01395    
                     WHENEVER USR.G.N                                                             *758 LM01396    
                        USR = 0                                                                   *759 LM01397    
                        NAME = $$                                                                 *760 LM01398    
                        TRANSFER TO NOTIN                                                         *761 LM01399    
                     END OF CONDITIONAL                                                           *762 LM01400    
                     NAME = GLOC.(COMMON.(UNAME)+USR)                                             *763 LM01401    
                  END OF CONDITIONAL                                                              *764 LM01402    
                  FUNCTION RETURN                                                                 *765 LM01403    
                  END OF FUNCTION                                                                 *766 LM01404    
                  *                                                                                    LM01405    
                  *                                                                                    LM01406    
                  *                                                                                    LM01407    
                  *                                                                                    LM01408    
      GTUSR       * GIVEN A LINE NO., SETUP PROB,PROG AND NAME                                         LM01409    
                  *                                                                                    LM01410    
                  * USAGE   GTUSR.                                                                     LM01411    
                  *                                                                                    LM01412    
                  INTERNAL FUNCTION (LNMTY)                                                       *767 LM01413    
                  ENTRY TO GTUSR.                                                                 *768 LM01414    
                  *                                                                                    LM01415    
                  PROB = GLOC.(COMMON.($PROBN$)+USR)                                              *769 LM01416    
                  WHENEVER PROB.E.0                                                               *770 LM01417    
                    M = M+1                                                                       *771 LM01418    
                    TRANSFER TO LNMTY                                                             *772 LM01419    
                    END OF CONDITIONAL                                                            *773 LM01420    
                  PROG = GLOC.(COMMON.($PROGN$)+USR)                                              *774 LM01421    
                  NAME = GLOC.(COMMON.(UNAME)+USR)                                                *775 LM01422    
                  FUNCTION RETURN                                                                 *776 LM01423    
                  END OF FUNCTION                                                                 *777 LM01424    
                  *                                                                                    LM01425    
                  *                                                                                    LM01426    
                  *                                                                                    LM01427    
                  *                                                                                    LM01428    
      GETPRB      * ROUTINE TO SNATCH THE PROBN AND PROGN ARRAYS                                       LM01429    
                  *                                                                                    LM01430    
                  * USAGE:  GETPRB.                                                                    LM01431    
                  *                                                                                    LM01432    
                  BOOLEAN PRBSW                                                                   *778 LM01433    
                  VECTOR VALUES PRBSW = 1B                                                        *779 LM01434    
                  INTERNAL FUNCTION                                                               *780 LM01435    
                  ENTRY TO GETPRB.                                                                *781 LM01436    
                  *                                                                                    LM01437    
                  WHENEVER PRBSW                                                                  *782 LM01438    
                    PRBSW = 0B                                                                    *783 LM01439    
                    GETBUF.(PROBN,N)                                                              *784 LM01440    
                    GETBUF.(PROGN,N)                                                              *785 LM01441    
                  END OF CONDITIONAL                                                              *786 LM01442    
                  GETARY.(COMMON.($PROBN$)+1,PROBN(PROBN+N)...N)                                  *787 LM01443    
                  GETARY.(COMMON.($PROGN$)+1,PROGN(PROGN+N)...N)                                  *788 LM01444    
                  FUNCTION RETURN                                                                 *789 LM01445    
                  END OF FUNCTION                                                                 *790 LM01446    
                  *                                                                                    LM01447    
                  *                                                                                    LM01448    
                  *                                                                                    LM01449    
      READTU      * ROUTINE TO READ TIMUSD TIMACC LOOKING FOR PROB(S)/PROG(S)                          LM01450    
                  *                                                                                    LM01451    
                  * USAGE:  READTU.(PROB(0),PROG(0),COUNT,EOF)                                         LM01452    
                  *                                                                                    LM01453    
                  BOOLEAN FRSTSW                                                                  *791 LM01454    
                  VECTOR VALUES FRSTSW = 1B                                                       *792 LM01455    
                  INTERNAL FUNCTION (PRB,PRG,COUNT,EOF)                                           *793 LM01456    
                  STATEMENT LABEL EOF                                                             *794 LM01457    
                  ENTRY TO READTU.                                                                *795 LM01458    
                  WHENEVER FRSTSW                                                                 *796 LM01459    
                     FRSTSW = 0B                                                                  *797 LM01460    
                     GETBUF.(B1,432)                                                              *798 LM01461    
                     GETBUF.(B2,432)                                                              *799 LM01462    
                     GETBUF.(B3,432)                                                              *800 LM01463    
                     BFOPEN.(STATUS,TU,TA,B1(B1+432),B2(B2+432),M0,IOERR)                         *801 LM01464    
                     BUFFER.(TU,TA,B3(B3+432)...432)                                              *802 LM01465    
                     RELLOC = 1                                                                   *803 LM01466    
                  OTHERWISE                                                                       *804 LM01467    
      RDTU1          RELLOC = RELLOC + 28                                                         *805 LM01468    
                  END OF CONDITIONAL                                                              *806 LM01469    
                  BFREAD.(TU,TA,TUCARD(27)...28,BEOF,M0,IOERR)                                    *807 LM01470    
                  THROUGH RDTU2, FOR I = 0,1,I.G.COUNT                                            *808 LM01471    
      RDTU2       WHENEVER PRB(I).E.TUCARD(27) .AND. PRG(I).E.TUCARD(26), FUNCTION RETURN         *809 LM01472    
                  TRANSFER TO RDTU1                                                               *810 LM01473    
                  *                                                                                    LM01474    
      BEOF        BFCLOS.(TU,TA,IOERR)                                                            *811 LM01475    
                  TRANSFER TO EOF                                                                 *812 LM01476    
                  *                                                                                    LM01477    
                  END OF FUNCTION                                                                 *813 LM01478    
                  *                                                                                    LM01479    
                  *                                                                                    LM01480    
                  *                                                                                    LM01481    
      UPSHFT      * UPDATE TUCARD WITH TIME USED FROM B5 TAU VECTORS                                   LM01482    
                  *                                                                                    LM01483    
                  * USAGE:  UPSHFT.                                                                    LM01484    
                  *                                                                                    LM01485    
                  INTERNAL FUNCTION                                                               *814 LM01486    
                  ENTRY TO UPSHFT.                                                                *815 LM01487    
                  THROUGH UPS1, FOR J = 0,1,J.G.4                                                 *816 LM01488    
                    WHENEVER TUCARD(27).NE.$ C0056$, TUCARD(9-J) = 0                              *817 LM01489    
                    TUCARD(9-J) = DEFBC.( B5(B5+J*LEN+I).A.17777777K/60 +                         *818 LM01490    
                1                      BCDEC.(TUCARD(9-J)))                                       *818 LM01491    
      UPS1        CONTINUE                                                                        *819 LM01492    
                  PROBN(PROBN+I) = 0                                                              *820 LM01493    
                  FUNCTION RETURN                                                                 *821 LM01494    
                  END OF FUNCTION                                                                 *822 LM01495    
                  *                                                                                    LM01496    
                  *                                                                                    LM01497    
                  *                                                                                    LM01498    
                  END OF PROGRAM                                                                  *823 LM01499    
                                         MODE STRUCTURE .ENK. 1 TO 1          324  LM00626
 (THE NUMERIC FORM OF THE OPERATOR-MODE ARGUMENT IS    11101 )    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   07741 TRANSFER VECTOR LENGTH  00102 PROGRAM BEGINS    01402
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ADMIN  00264 A 1        FENCE  00122   1        MON4   00115   4        RDTU1  00240   4        SYSMSG 00770 A 1  
      ADOPT  00265 A 1        FILE   00327 A 1        MONEOF 00227   4        RDTU2  00115   4        T0     00132   1  
      ALL    00266 A 1        FMT1   00444 A 1        M      00743 A 1        RED    00756 A 1        T1     00131   1  
      ALTD   00146 A 1        FMT2   00555 A 1        N1     00132   1        RELLOC 00757   1        T2     00130   1  
      B1     00267 A 1        FMT3   00627 A 1        N2     00131   1        RHALF  00125   1        T3     00127   1  
      B2     00270 A 1        FMT4   00672 A 1        N3     00130   1        RPATBT 00760 A 1        T4     00126   1  
      B3     00271 A 1        FMT5   00724 A 1        N4     00127   1        RPROBT 00761 A 1        T5     00125   1  
      B4     00272 A 1        FOUND  00127   2        NALTD  00144   1        RPRVBT 00762 A 1        T6     00124   1  
      B5     00273 A 1        FRSTSW 00725 A 2        NAME   00744   1        R      00763 A 1        T7     00123   1  
      BEOF   00206   4        FSTST  00726 A 1        NAMESW 00131   2        RTU0   00241   4        TACARD 00205   1  
      BITS   00274   1        GTUSR1 00115   4        NINTBT 00745 A 1        RTU1   00242   4        TA     00771 A 1  
      BLACK  00275 A 1        HEL1   00115   4        NOTLIN 00130   2        RTU2   00243   4        TAU1   00772 A 1  
      BL     00276 A 1        HELMES 00166 A 1        NOUFD  00230   4        RTU3   00244   4        TAU5   00773 A 1  
      BUFF   00133 A 1        HELP   00727 A 1        N      00746 A 1        RTU4   00115   4        TAULOC 00124   1  
      CMFL02 00277 A 1        INP1   00224   4        NSTICK 00130   1        RTU5   00115   4        TAU    00125   1  
      CND1   00115   4        INPMES 00205 A 1        NULLS  00747 A 1        RTU6   00115   4        TEMP   00132 A 1  
      COMBUF 00324 A 1        IOERR  00225   4        NUSED  00136   1        SAVING 00764 A 1        TEST   00124   1  
      COMERR 00207   4        I      00730   1        OALTD  00145   1        SET0   00245   4        TIME   00774   1  
      COMMND 00325 A 1        J      00731   1        OLDM   00132   1        SHFT   00126   1        TIMNOW 00775 A 1  
      CPY1   00210   4        KEY22  00732 A 1        ON     00750 A 1        SLPCMD 00122 A 1        TUCARD 00166 A 1  
      DATELU 00165   1        KEYS   00123   1        OUSED  00137   1        SPY1   00246   4        TU     00776 A 1  
      DATE   00326   1        LENGTH 00156   1        OUT    00231   4        SPY2   00247   4        UNAME  00777 A 1  
      DAYTIM 00164   1        LEN    00123   1        PAT1   00232   4        SPY3   00250   4        UNITID 01000 A 1  
      DEL0   00211   4        LHALF  00126   1        PAT2   00233   4        SQZ1   00251   4        UPATSW 00132   2  
      DEL1   00212   4        LOC    00127   1        PAT3   00234   4        SQZ2   00252   4        UPD1   00261   4  
      DELTA  00130   1        M0     00733 A 1        PAT4   00235   4        SQZ3   00115   4        UPS1   00115   4  
      DEV    00161   1        M1416  00734 A 1        PATMES 00166 A 1        SQZ5   00253   4        URCODE 01001 A 1  
      DRMTSW 00132   2        M1     00735 A 1        PATTST 00236   4        SQZ6   00254   4        USED   00140 A 1  
      ERASE0 00213   4        M2     00736 A 1        PB0    00237   4        SQZEOF 00255   4        USEROK 00262   4  
      ERR0   00214   4        MAXI   00132   1        PB     00132   1        SQZERR 00256   4        USER   01002 A 1  
      ERR1   00215   4        ME     00740 A 1        PRBSW  00751 A 2        SQZOUT 00257   4        USROPT 01003 A 1  
      ERR2   00216   4        MESGPT 00741 A 1        PROBN  00752 A 1        SQZUFD 00260   4        USR    01004   1  
      ERR3   00217   4        MFD    00742 A 1        PROB   00117 A 1        STAR   00765 A 1        WHO    01010 A 1  
      ERR4   00220   4        MODE   00123   1        PROGN  00753 A 1        STATUS 00766   1        WRKTIM 01011 A 1  
      ERR5   00221   4        MON1   00115   4        PROG   00116   1        STICKY 00127   1        W      01012 A 1  
      ERR6   00222   4        MON2   00226   4        RCALBT 00754 A 1        STRTIM 00767 A 1        X      01013 A 1  
      ERR7   00223   4        MON3   00115   4        RCODE  00755 A 1                                                  
0FUNCTION DICTIONARY    
      ACORE  00000   1        ALLOT  00001   1        ATTACH 00002   1        ATTNAM 00003   1        BCDEC  00004   1  
      BCOCT  00005   1        BFCLOS 00006   1        BFOPEN 00007   1        BFREAD 00010   1        BFWRIT 00011   1  
      BUFFER 00012   1        BZ57   00013   1        BZEL   00014   1        CHFILE 00015   1        CLOSE  00016   1  
      COMLOC 00017   1        COPY   00020   1        DEFBC  00021   1        DELALL 00022   1        DELFIL 00023   1  
      DELMFD 00024   1        DELTEM 00025   1        ENTLIN 00026   1        EXITM  00027   1        EXIT   00030   1  
      FERRTN 00031   1        FSTATE 00032   1        GCLS   00033   1        GETARY 00034   1        GETBUF 00035   1  
      GETTM  00036   1        GLOC   00037   1        .SETUP 00040   1        KILL   00041   1        LJUST  00042   1  
      MINS   00043   1        MOVFIL 00044   1        NULL   00045   1        OCABC  00046   1        OCLBC  00047   1  
      OCRBC  00050   1        OPEN   00051   1        PCTL   00052   1        PRDIAG 00053   1        PRFULA 00054   1  
      PRFULL 00055   1        PRNTON 00056   1        RDFLXA 00057   1        RDFLXC 00060   1        REPROB 00061   1  
      RESETF 00062   1        RJUST  00063   1        RSSWB  00064   1        SCHEDL 00065   1        SETBCD 00066   1  
      SETBRK 00067   1        SETFIL 00070   1        SETFUL 00071   1        SLOC   00072   1        SNOOZE 00073   1  
      TSK    00074   1        UNLINK 00075   1        WHOAMI 00076   1        WRITE  00077   1        WRWAIT 00100   1  
      ZEL    00101   1        CHKPRV 00102   1        COMMON 00103   1        CURCOM 00104   1        ENTRY  00105   1  
      GETPRB 00106   1        GETUSR 00107   1        GTUSR  00110   1        INT    00111   1        NONINT 00112   1  
      READTU 00113   1        UPSHFT 00114   1                                                                          
0ABSOLUTE CONSTANTS     
 01025 +000000000011     01266 -202300000506     01232 -075146274560     01231 -075146224560     01236 -114664452460    
 01264 -202221234227     01202 -052433142260     01223 -066360264664     01336 -206621626045     01122 +216263601410    
 01263 -202163604325     01074 +140145252524     01155 +272562336060     01235 -113165314325     01156 +312545636047    
 01347 -226426263123     01107 +145114013145     01211 -053314226060     01070 +062545634331     01151 +265146446014    
 01150 +256364514560     01153 +266443436051     01240 -115146513560     01345 -226325446025     01113 +145114016270    
 01132 +236321433314     01312 -204546636046     01142 +252460314533     01233 -076370331422     01277 -203162602544    
 01203 -052560141060     01111 +145114014331     01123 +216331464533     01141 +252331263123     01341 -222551606247    
 01144 +252721436064     01222 -065160314343     01216 -056374623414     01344 -226231452760     01112 +145114014431    
 01215 -056335601467     01121 +215127644425     01103 +142260606060     01363 -246221272533     01170 -032527214360    
 01106 +145114013143     01163 +331422606060     01171 -033124602664     01356 -236021606521     01337 -206651316325    
 01362 -244724216325     01377 -346462255134     01316 -205130214326     01303 -204330214326     01252 -201443434623    
 01361 -244721632330     01043 +000000000104     01023 +000000000007     01055 +000000077777     01147 +256233142260    
 01346 -226331234231     01214 -056063302560     01354 -233146456031     01205 -052646514421     01274 -203021626031    
 01373 -342431624234     01375 -342451644434     01126 +226060606060     01225 -066445243314     01311 -204546636026    
 01343 -225071642624     01032 +000000000017     01166 -006014676060     01143 +252460314560     01357 -236043462727    
 01300 -203162604546     01052 +000000003410     01370 -300000300000     01056 +000000300000     01165 +351467606060    
 01271 -202646644524     01077 +140164622551     01105 +144364622551     01213 -056062477060     01117 +146421244431    
 01331 -206060624770     01313 -204626146760     01125 +216414676060     01207 -052760140363     01054 +000000007020    
 01335 -206462255160     01137 +246064622524     01152 +266360214363     01254 -201443623031     01342 -222563632164    
 01304 -204331452560     01221 -064560644531     01076 +140145466660     01272 -202651464460     01355 -236014676060    
 01305 -204346274664     01073 +140143216263     01063 +000061000060     01400 -377700000000     01057 +000000777700    
 01053 +000000006060     01027 +000000000014     01047 +000000000377     01061 +000017777777     01040 +000000000074    
 01136 +246046266014     01241 -116030252151     01075 +140145256525     01120 +214425024060     01140 +250140604045    
 01242 -116040452144     01234 -112463314464     01174 -042502406060     01173 -042501604521     01251 -201443404521    
 01230 -075145634645     01226 -072260606060     01334 -206346601467     01367 -276060606060     01146 +256046266014    
 01127 +232545632127     01210 -052760472551     01332 -206225636331     01340 -222551606060     01253 -201443456064    
 01323 -206060604722     01333 -206346601410     01176 -046014106060     01104 +144360265146     01161 +314527601467    
 01026 +000000000012     01262 -202163601467     01224 -066360622563     01371 -306002026045     01110 +145114014225    
 01376 -342631223460     01062 +000060575757     01035 +000000000030     01022 +000000000006     01041 +000000000077    
 01326 -206060606020     01327 -206060606040     01324 -206060606000     01372 -307070707070     01314 -204721632330    
 01071 +076000000004     01330 -206060606060     01036 +000000000033     01037 +000000000034     01245 -116660606060    
 01033 +000000000020     01124 +216360146760     01160 +314464622460     01024 +000000000010     01066 +024060606060    
 01301 -204045214425     01200 -052144250140     01352 -233060144340     01162 +314560444645     01256 -201464212444    
 01307 -204446456330     01164 +336060606060     01206 -052714676060     01302 -204231434331     01321 -206042314343    
 01031 +000000000016     01374 -342451446334     01177 -046334406060     01243 -116040742451     01250 -201404646225    
 01276 -203145476463     01060 +000016000000     01030 +000000000015     01042 +000000000102     01101 +142214106060    
 01115 +145114676060     01227 -072535601422     01114 +145114016370     01204 -052566442562     01267 -202551216225    
 01135 +242543632544     01244 -116060606060     01255 -201443646225     01134 +242543214343     01051 +000000000777    
 01045 +000000000124     01050 +000000000660     01044 +000000000120     01167 -006040450440     01065 +024060404503    
 01310 -204501604045     01320 -206023464770     01401 -377760000000     01157 +314464622433     01353 -233145276063    
 01315 -205125622563     01017 +000000000003     01021 +000000000005     01131 +234524514321     01172 -034734606060    
 01257 -201464743025     01273 -202664452363     01067 +052124443145     01325 -206060606014     01212 -053514541454    
 01360 -244523633146     01217 -062660216026     01364 -246221272560     01237 -115125236360     01350 -233025602346    
 01072 +140126465160     01046 +000000000144     01246 -141410606060     01366 -263145273514     01270 -202646434346    
 01220 -062660633025     01145 +256021457060     01306 -204421706022     01351 -233025602664     01365 -263025512560    
 01247 -141454141060     01261 -202151276214     01201 -052363314645     01175 -043145602664     01317 -206014052124    
 01100 +141060606060     01102 +142214541454     01154 +272560316235     01133 +236360646221     01064 +012346515125    
 01116 +145460145114     01275 -203025434346     01265 -202300000303     01322 -206060110600     01260 -202124443145    
 01034 +000000000022     01014 +000000000000     01016 +000000000002     01020 +000000000004     01015 +000000000001    
 01130 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00206 TXL -307577007573       00207 TXL -306735006721       00210 TXL -302242002236       00211 TXL -302317002314      
 00212 TXL -302355002352       00213 TXL -302412002407       00214 TXL -306525006520       00215 TXL -306541006526      
 00216 TXL -306550006542       00217 TXL -306562006551       00220 TXL -306610006600       00221 TXL -306577006563      
 00222 TXL -306620006611       00223 TXL -306632006621       00224 TXL -302611002605       00225 TXL -306514006512      
 00226 TXL -303201003164       00227 TXL -303222003210       00230 TXL -305475005467       00231 TXL -306505006504      
 00232 TXL -303377003372       00233 TXL -303470003461       00234 TXL -303473003470       00235 TXL -303647003642      
 00236 TXL -303762003747       00237 TXL -304141004137       00240 TXL -307540007535       00241 TXL -304323004321      
 00242 TXL -304327004323       00243 TXL -304363004361       00244 TXL -304401004400       00245 TXL -305031005014      
 00246 TXL -305275005271       00247 TXL -305350005345       00250 TXL -305354005351       00251 TXL -305460005454      
 00252 TXL -305461005460       00253 TXL -305713005704       00254 TXL -305744005740       00255 TXL -305734005730      
 00256 TXL -306061006060       00257 TXL -306046006045       00260 TXL -305502005476       00261 TXL -306410006401      
 00262 TXL -301556001547                                                                                                
0PROGRAM    
                 D'N B1(0), B2(0), B3(0), B4(0), B5(0)                              001  LM00028
                 D'N WHO(3), ME(1), PROB(1), COMBUF(20)                             002  LM00029
                 D'N PROBN(0), PROGN(0), TUCARD(27)                                 003  LM00030
                 D'N TEMP(7)                                                        004  LM00031
                 E'E (PROG,PROB(1)), (SLPCMD,FENCE)                                 005  LM00033
                 E'E (T0,TEMP(0)), (T1,TEMP(1)), (T2,TEMP(2)), (T3,TEMP(3))         006  LM00034
                 E'E (T4,TEMP(4)), (T5,TEMP(5)), (T6,TEMP(6)), (T7,TEMP(7))         007  LM00035
                 V'S STAR  = $     *$                                               008  LM00037
 01402 TSX +0 07400 4 00040    00765     -2 06060 6 06054                                                               
                 V'S M0 = -0                                                        009  LM00038
 00733     -0 00000 0 00000                                                                                             
                 V'S M1 = -1                                                        010  LM00039
 00735     -0 00000 0 00001                                                                                             
                 V'S M2 = -2                                                        011  LM00040
 00736     -0 00000 0 00002                                                                                             
                 V'S M = 0                                                          012  LM00041
 00743     +0 00000 0 00000                                                                                             
                 V'S TEMP(0)...TEMP(7) = 0                                          013  LM00042
 00123     +0 00000 0 00000    00124     +0 00000 0 00000    00125     +0 00000 0 00000    00126     +0 00000 0 00000   
 00127     +0 00000 0 00000    00130     +0 00000 0 00000    00131     +0 00000 0 00000    00132     +0 00000 0 00000   
                 V'S MFD    = $M.F.D.$                                              014  LM00044
 00742     -0 43326 3 32433                                                                                             
                 V'S FILE   = $(FILE)$                                              015  LM00045
 00327     -3 42631 4 32534                                                                                             
                 V'S M1416  = $ M1416$                                              016  LM00046
 00734     -2 04401 0 40106                                                                                             
                 V'S CMFL02 = $CMFL02$                                              017  LM00047
 00277     +2 34426 4 30002                                                                                             
                 V'S TU = $TIMUSD$                                                  018  LM00048
 00776     -2 33144 6 46224                                                                                             
                 V'S TA = $TIMACC$                                                  019  LM00049
 00771     -2 33144 2 12323                                                                                             
                 V'S R = $R$                                                        020  LM00050
 00763     -1 16060 6 06060                                                                                             
                 V'S W = $W$                                                        021  LM00051
 01012     -2 66060 6 06060                                                                                             
                 V'S N = $N$                                                        022  LM00052
 00746     -0 56060 6 06060                                                                                             
                 V'S ALL    = $ALL   $                                              023  LM00053
 00266     +2 14343 6 06060                                                                                             
                 V'S USER   = $USER  $                                              024  LM00054
 01002     -2 46225 5 16060                                                                                             
                 V'S COMMND = $COMMND$                                              025  LM00055
 00325     +2 34644 4 44524                                                                                             
                 V'S PROBN  = $PROBN $                                              026  LM00056
 00752     -0 75146 2 24560                                                                                             
                 V'S PROGN  = $PROGN $                                              027  LM00057
 00753     -0 75146 2 74560                                                                                             
                 V'S UNAME  = $UNAME $                                              028  LM00058
 00777     -2 44521 4 42560                                                                                             
                 V'S USROPT = $USROPT$                                              029  LM00059
 01003     -2 46251 4 64763                                                                                             
                 V'S URCODE = $URCODE$                                              030  LM00060
 01001     -2 45123 4 62425                                                                                             
                 V'S RCODE  = $RCODE $                                              031  LM00061
 00755     -1 12346 2 42560                                                                                             
                 V'S NINTBT = $NINTBT$                                              032  LM00062
 00745     -0 53145 6 32263                                                                                             
                 V'S RCALBT = $RCALBT$                                              033  LM00063
 00754     -1 12321 4 32263                                                                                             
                 V'S RPROBT = $RPROBT$                                              034  LM00064
 00761     -1 14751 4 62263                                                                                             
                 V'S RPRVBT = $RPRVBT$                                              035  LM00065
 00762     -1 14751 6 52263                                                                                             
                 V'S RPATBT = $RPATBT$                                              036  LM00066
 00760     -1 14721 6 32263                                                                                             
                 V'S STRTIM = $STRTIM$                                              037  LM00067
 00767     -2 26351 6 33144                                                                                             
                 V'S WRKTIM = $WRKTIM$                                              038  LM00068
 01011     -2 65142 6 33144                                                                                             
                 V'S TIMNOW = $TIMNOW$                                              039  LM00069
 00775     -2 33144 4 54666                                                                                             
                 V'S UNITID = $UNITID$                                              040  LM00070
 01000     -2 44531 6 33124                                                                                             
                 V'S TAU1   = $TAU1  $                                              041  LM00071
 00772     -2 32164 0 16060                                                                                             
                 V'S TAU5   = $TAU5  $                                              042  LM00072
 00773     -2 32164 0 56060                                                                                             
                 V'S ADOPT  = $ADOPT $                                              043  LM00073
 00265     +2 12446 4 76360                                                                                             
                 V'S MESGPT = $MESGPT$                                              044  LM00074
 00741     -0 42562 2 74763                                                                                             
                 V'S SYSMSG = $SYSMSG$                                              045  LM00075
 00770     -2 27062 4 46227                                                                                             
                 V'S FSTST  = $FS.TST$                                              046  LM00076
 00726     +2 66233 6 36263                                                                                             
                 V'S SAVING = $SAVING$                                              047  LM00077
 00764     -2 22165 3 14527                                                                                             
                 V'S HELP = $(HELP)$                                                048  LM00080
 00727     -3 43025 4 34734                                                                                             
                 V'S X = $'X$                                                       049  LM00081
 01013     +1 46760 6 06060                                                                                             
                 V'S ADMIN = $ 'UADMIN '8$                                          050  LM00082
 00263     +3 14560 1 41060    00264     -2 01464 2 12444                                                               
                 V'S RED = $'R'8$                                                   051  LM00083
 00756     +1 45114 1 06060                                                                                             
                 V'S BLACK = $'B'8$                                                 052  LM00084
 00275     +1 42214 1 06060                                                                                             
                 V'S ON = $ ON 'X$                                                  053  LM00085
 00750     -2 04645 6 01467                                                                                             
                 V'S BL = $ '8$                                                     054  LM00086
 00276     -2 01410 6 06060                                                                                             
                 V'S KEY22 = 000000K                                                055  LM00087
 00732     +0 00000 0 00000                                                                                             
                 V'S NULLS = 575757575757K                                          056  LM00089
 00747     -1 75757 5 75757                                                                                             
                 V'S SLPCMD = 777777777777K, $YES$, $.$                             057  LM00091
 00120     +3 36060 6 06060    00121     -3 02562 6 06060    00122     -3 77777 7 77777                                 
                 N'R                                                                058  LM00097
                 WHOAMI.(WHO(3)...4)                                                059  LM00098
 01403 TSX +0 07400 4 00076    01404 TIX +2 01020 0 01005                                                               
                 ATTNAM.(ME(1)...2)                                                 060  LM00099
 01405 TSX +0 07400 4 00003    01406 TIX +2 01016 0 00737                                                               
                 GETTM.(DATE,TIME)                                                  061  LM00100
 01407 TSX +0 07400 4 00036    01410 TXH +3 00000 0 00326    01411 TXH +3 00000 0 00774                                 
                 FERRTN.(IOERR)                                                     062  LM00101
 01412 TSX +0 07400 4 00031    01413 TXH +3 00000 0 00225                                                               
                 SETBRK.(OUT)                                                       063  LM00102
 01414 TSX +0 07400 4 00067    01415 TXH +3 00000 0 00231                                                               
                 PCTL.(1)                                                           064  LM00103
 01416 TSX +0 07400 4 00052    01417 TXH +3 00000 0 01015                                                               
                 USER = GLOC.(COMMON.(USER))                                        065  LM00105
 01420 TSX +0 07400 4 00103    01421 TXH +3 00000 0 01002    01422 STO +0 60100 0 07732    01423 TSX +0 07400 4 00037   
 01424 TXH +3 00000 0 07732    01425 STO +0 60100 0 01002                                                               
                 SLOC.(0,COMMON.(COMMND)+USER)                                      066  LM00108
 01426 TSX +0 07400 4 00103    01427 TXH +3 00000 0 00325    01430 ADD +0 40000 0 01002    01431 STO +0 60100 0 07732   
 01432 TSX +0 07400 4 00072    01433 TXH +3 00000 0 01014    01434 TXH +3 00000 0 07732                                 
                 RCODE = GLOC.(COMMON.(RCODE)+USER)                                 067  LM00110
 01435 TSX +0 07400 4 00103    01436 TXH +3 00000 0 00755    01437 ADD +0 40000 0 01002    01440 STO +0 60100 0 07732   
 01441 TSX +0 07400 4 00037    01442 TXH +3 00000 0 07732    01443 STO +0 60100 0 00755                                 
                 RPATBT = COMMON.(RPATBT)                                           068  LM00111
 01444 TSX +0 07400 4 00103    01445 TXH +3 00000 0 00760    01446 STO +0 60100 0 00760                                 
                 RCALBT = COMMON.(RCALBT)                                           069  LM00112
 01447 TSX +0 07400 4 00103    01450 TXH +3 00000 0 00754    01451 STO +0 60100 0 00754                                 
                 RPROBT = COMMON.(RPROBT)                                           070  LM00113
 01452 TSX +0 07400 4 00103    01453 TXH +3 00000 0 00761    01454 STO +0 60100 0 00761                                 
                 RPRVBT = COMMON.(RPRVBT)                                           071  LM00114
 01455 TSX +0 07400 4 00103    01456 TXH +3 00000 0 00762    01457 STO +0 60100 0 00762                                 
                 NINTBT = COMMON.(NINTBT).LS.18                                     072  LM00116
 01460 TSX +0 07400 4 00103    01461 TXH +3 00000 0 00745    01462 STO +0 60100 0 07732    01463 CAL -0 50000 0 01034   
 01464 STA +0 62100 0 01466    01465 CAL -0 50000 0 07732    01466 ALS +0 76700 0 00000    01467 SLW +0 60200 0 00745   
                 USROPT = COMMON.(USROPT)+USER                                      073  LM00117
 01470 TSX +0 07400 4 00103    01471 TXH +3 00000 0 01003    01472 ADD +0 40000 0 01002    01473 STO +0 60100 0 01003   
                 N = COMMON.(N)                                                     074  LM00118
 01474 TSX +0 07400 4 00103    01475 TXH +3 00000 0 00746    01476 STO +0 60100 0 00746                                 
                 GCLS.(COMBUF,0)                                                    075  LM00120
 01477 TSX +0 07400 4 00033    01500 TXH +3 00000 0 00324    01501 TXH +3 00000 0 01014                                 
                 W'R COMBUF.E.$ ADMIN$, M = 1                                       076  LM00121
 01502 CLA +0 50000 0 00324    01503 SUB +0 40200 0 01260    01504 TNZ -0 10000 0 01507    01505 CLA +0 50000 0 01015   
 01506 STO +0 60100 0 00743                                                                                             
                 W'R COMBUF(M).E.$ HELLO$ .AND. WHO(3).E.$ C0033$ .AND.             077  LM00125
                1 WHO(2) .E. $   960$, T'O USEROK                                   077  LM00126
 01507 CLA +0 50000 0 01006    01510 SUB +0 40200 0 01322    01511 TNZ -0 10000 0 01522    01512 CLA +0 50000 0 01005   
 01513 SUB +0 40200 0 01265    01514 TNZ -0 10000 0 01522    01515 LXA +0 53400 1 00743    01516 CLA +0 50000 1 00324   
 01517 SUB +0 40200 0 01275    01520 TNZ -0 10000 0 01522    01521 TRA +0 02000 0 00262                                 
                 BITS = RCALBT.V.RPROBT.V.RPRVBT                                    078  LM00127
 01522 CAL -0 50000 0 00754    01523 ORA -0 50100 0 00761    01524 ORA -0 50100 0 00762    01525 SLW +0 60200 0 00274   
                 W'R WHO(3).E.M1416 .AND. (RCODE.A.BITS.E.BITS .OR. RCODE.A.        079  LM00128
                1  RPATBT.E.RPATBT), T'O USEROK                                     079  LM00129
 01526 CAL -0 50000 0 00755    01527 ANA -0 32000 0 00760    01530 SLW +0 60200 0 07732    01531 CLA +0 50000 0 07732   
 01532 SUB +0 40200 0 00760    01533 TZE +0 10000 0 01542    01534 CAL -0 50000 0 00755    01535 ANA -0 32000 0 00274   
 01536 SLW +0 60200 0 07732    01537 CLA +0 50000 0 07732    01540 SUB +0 40200 0 00274    01541 TNZ -0 10000 0 01546   
 01542 CLA +0 50000 0 01005    01543 SUB +0 40200 0 00734    01544 TNZ -0 10000 0 01546    01545 TRA +0 02000 0 00262   
                 TSK.                                                               080  LM00132
 01546 TSX +0 07400 4 00074                                                                                             
      USEROK     W'R COMBUF(M).E.HELP .OR. COMBUF(M).E.FENCE                        081  LM00134
 01547 LXA +0 53400 1 00743    01550 CLA +0 50000 1 00324    01551 SUB +0 40200 0 00122    01552 TZE +0 10000 0 01556   
 01553 CLA +0 50000 1 00324    01554 SUB +0 40200 0 00727    01555 TNZ -0 10000 0 01625                                 
                   PRFULL.($'* 'R'1CORRECT USAGE IS:'B'*'*'8$,                      082  LM00135
                1  $  '5ADMIN FUNCTION ARGS'*'*'8$,                                 082  LM00136
                2  $WHERE THE FUNCTION MAY BE ANY OF THE FOLLOWING:'*'8$)           082  LM00137
 01556 TSX +0 07400 4 00055    01557 TXH +3 00000 0 01116    01560 TXH +3 00000 0 01064    01561 TXH +3 00000 0 01133   
 01562 TXH +3 00000 0 01154    01563 TXH +3 00000 0 01102    01564 TXH +3 00000 0 01100    01565 TXH +3 00000 0 01317   
 01566 TXH +3 00000 0 01175    01567 TXH +3 00000 0 01201    01570 TXH +3 00000 0 01261    01571 TXH +3 00000 0 01247   
 01572 TXH +3 00000 0 01365    01573 TXH +3 00000 0 01351    01574 TXH +3 00000 0 01201    01575 TXH +3 00000 0 01306   
 01576 TXH +3 00000 0 01145    01577 TXH +3 00000 0 01220    01600 TXH +3 00000 0 01270    01601 TXH +3 00000 0 01366   
 01602 TXH +3 00000 0 01246                                                                                             
                   PRFULL.(FMT1...100,FMT2...100)                                   083  LM00139
 01603 TSX +0 07400 4 00055    01604 TIX +2 01046 0 00444    01605 TIX +2 01046 0 00555                                 
                   V'S FMT1 =                                                       084  LM00141
                1  $'6CNDRLA - CLEARS ALL PRESENT USERS TAU VECTORS (36)'*'8$,      084  LM00142
                2  $'4COPY   - COPY ACCOUNTING FILES FROM '4CMFL02 (10)'*'8$,       084  LM00143
                3  $'6DELALL - DELETES ALL FILES FROM A DIRECTORY'*'8$,             084  LM00144
                4  $'6DELTEM - DELETES TEMPORARY FILES FROM A DIRECTORY'*'8$,       084  LM00145
                5  $'5ERASE  - ELIMINATES A FILE DIRECTORY'*'8$,                    084  LM00146
                6  $'5HELLO  - MODIFIES DIALUP MESSAGE'*'8$,                        084  LM00147
                7  $'5INPUT  - ENTER A LINE INTO A USER''S INPUT BUFFER'*'8$,       084  LM00148
                8  $'4KILL   - LOGS A USER OUT'*'8$,                                084  LM00149
                9  $'5MONTH  - UPDATE AND RESET TIMUSD (36)'*'8$,777777777777K      084  LM00150
 00330     -3 77777 7 77777    00331     +1 06060 6 06060    00332     +0 30634 1 45414    00333     -0 46462 2 46074   
 00334     -2 22563 6 06331    00335     +2 14524 6 05125    00336     -0 72421 6 32560    00337     +3 06060 4 06064   
 00340     +1 40544 4 64563    00341     -2 46314 5 41410    00342     -2 46225 5 16046    00343     -0 62762 6 02160   
 00344     -2 06060 4 06043    00345     +1 40442 3 14343    00346     +1 06060 6 06060    00347     +2 62551 1 45414   
 00350     -2 46360 2 26426    00351     +1 46260 3 14547    00352     -2 06462 2 55114    00353     +3 14563 4 66021   
 00354     -2 04331 4 52560    00355     -0 56325 5 16021    00356     -2 36060 4 06025    00357     +1 40531 4 54764   
 00360     +1 41060 6 06060    00361     -2 22127 2 51454    00362     -2 44760 4 42562    00363     -2 26024 3 12143   
 00364     -0 62431 2 63125    00365     -0 66060 4 06044    00366     +1 40530 2 54343    00367     -1 17014 5 41410   
 00370     +3 15125 2 36346    00371     +2 63143 2 56024    00372     -2 32562 6 02160    00373     -0 33144 3 14521   
 00374     +2 56060 4 06025    00375     +1 40525 5 12162    00376     +1 06060 6 06060    00377     -0 65170 1 45414   
 00400     +2 43151 2 52363    00401     -1 14644 6 02160    00402     +3 14325 6 26026    00403     -1 12151 7 06026   
 00404     -2 06325 4 44746    00405     +2 54325 6 32562    00406     +2 54460 4 06024    00407     +1 40624 2 54363   
 00410     +1 06060 6 06060    00411     -0 65170 1 45414    00412     +2 43151 2 52363    00413     -1 14644 6 02160   
 00414     +3 14325 6 26026    00415     -2 02143 4 36026    00416     +2 54325 6 32562    00417     -0 34360 4 06024   
 00420     +1 40624 2 54321    00421     +1 06060 6 06060    00422     +0 10034 1 45414    00423     +2 64300 0 26074   
 00424     -0 46014 0 42344    00425     +2 56260 2 65146    00426     -0 52760 2 63143    00427     +2 34664 4 56331   
 00430     -0 64770 6 02123    00431     -2 06060 4 06023    00432     +1 40423 4 64770    00433     +1 41060 6 06060   
 00434     -3 40306 3 41454    00435     +2 36346 5 16260    00436     -2 32164 6 06525    00437     -2 46225 5 16260   
 00440     +2 56225 4 56360    00441     +2 14343 6 04751    00442     -0 32521 5 16260    00443     -0 32160 4 06023   
 00444     +1 40623 4 52451                                                                                             
                   V'S FMT2 =                                                       085  LM00152
                1  $'5PATCH  - PATCHES CORE '1A (20)'*'8$,                          085  LM00153
                2  $'2PB     - ASSIGNS A PERCENTAGE TO A USER'*'8$,                 085  LM00154
                3  $'6PRNTON - PRINT MESSAGE ONLINE'*'8$,                           085  LM00155
                4  $'6RDTIMU - PRINT TIME USED BY A USER'*'8$,                      085  LM00156
                5  $'6SETTAU - RESET A '3TAU VECTOR OF A USER'*'8$,                 085  LM00157
                6  $'3SPY    - SPY ON A USER'*'8$,                                  085  LM00158
                7  $'6SQZUFD - COMPACT A 'UU.F.D.'L'*'8$,                           085  LM00159
                8  $'6UPATCH - PATCH ARRAY ENTRY OF PRESENT USER (20)'*'8$,         085  LM00160
                9  $'6UPDATE - UPDATE '4CMFL02 WITH ACCOUNTING FILES(10)'*'8$,      085  LM00161
                0  $'5WRITE  - WRITE A MESSAGE AT A USER'*'8$,777777777777K         085  LM00162
 00445     -3 77777 7 77777    00446     +1 45414 1 06060    00447     +2 16064 6 22551    00450     +2 72560 2 16360   
 00451     -2 04425 6 26221    00452     -1 13163 2 56021    00453     +2 56060 4 06066    00454     +1 40566 5 13163   
 00455     +1 41060 6 06060    00456     -3 40100 3 41454    00457     -2 02631 4 32562    00460     -2 44563 3 14527   
 00461     +3 06021 2 32346    00462     +0 00260 6 63163    00463     +1 40423 4 42643    00464     -0 72421 6 32560   
 00465     -2 32560 4 06064    00466     +1 40664 4 72421    00467     +3 41454 1 41060    00470     +2 55160 7 40200   
 00471     +2 54563 6 06462    00472     +2 66047 5 12562    00473     -0 56351 7 06046    00474     -1 15121 7 06025   
 00475     +2 16323 3 06021    00476     +2 33060 4 06047    00477     +1 40664 4 72163    00500     -0 31454 1 41060   
 00501     +3 32633 2 43314    00502     -2 02160 1 46464    00503     -0 64447 2 12363    00504     +2 62460 4 06023   
 00505     +1 40662 5 07164    00506     +1 45414 1 06060    00507     +2 16064 6 22551    00510     -0 77060 4 64560   
 00511     -2 06060 4 06062    00512     +1 40362 4 77060    00513     -1 41410 6 06060    00514     -2 06462 2 55114   
 00515     -1 16046 2 66021    00516     -2 06525 2 36346    00517     -2 01403 6 32164    00520     +2 56225 6 36021   
 00521     +2 16460 4 06051    00522     +1 40662 2 56363    00523     +1 45414 1 06060    00524     +2 16064 6 22551   
 00525     +2 52460 2 27060    00526     +3 14425 6 06462    00527     -1 13145 6 36063    00530     -0 46460 4 06047   
 00531     +1 40651 2 46331    00532     +2 51454 1 41060    00533     -2 04645 4 33145    00534     +2 56262 2 12725   
 00535     -1 13145 6 36044    00536     -0 64560 4 06047    00537     +1 40647 5 14563    00540     -1 41410 6 06060   
 00541     -2 06462 2 55114    00542     +2 56063 4 66021    00543     +2 32545 6 32127    00544     -2 02160 4 72551   
 00545     -2 26231 2 74562    00546     -2 06060 4 06021    00547     +1 40247 2 26060    00550     +0 03414 5 41410   
 00551     +1 40121 6 07402    00552     -2 02346 5 12560    00553     +2 16323 3 02562    00554     +3 06060 4 06047   
 00555     +1 40547 2 16323                                                                                             
                   PRFULL.($'1FOR THE CORRECT USAGE OF A FUNCTION:'*'*'8$,          086  LM00164
                1  $     '5ADMIN FUNCT 'U(HELP)$)                                   086  LM00165
 01606 TSX +0 07400 4 00055    01607 TXH +3 00000 0 01072    01610 TXH +3 00000 0 01350    01611 TXH +3 00000 0 01237   
 01612 TXH +3 00000 0 01364    01613 TXH +3 00000 0 01217    01614 TXH +3 00000 0 01360    01615 TXH +3 00000 0 01212   
 01616 TXH +3 00000 0 01100    01617 TXH +3 00000 0 01325    01620 TXH +3 00000 0 01067    01621 TXH +3 00000 0 01273   
 01622 TXH +3 00000 0 01257    01623 TXH +3 00000 0 01172                                                               
                 E'E (T0,MAXI), (T6,TAULOC)                                         087  LM00184
                 O'R COMBUF(M) .E. $CNDRLA$                                         088  LM00186
 01624 TRA +0 02000 0 06504    01625 LXA +0 53400 1 00743    01626 CLA +0 50000 1 00324    01627 SUB +0 40200 0 01131   
 01630 TNZ -0 10000 0 01740                                                                                             
                   M = M+1                                                          089  LM00187
 01631 CLA +0 50000 0 00743    01632 ADD +0 40000 0 01015    01633 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           090  LM00188
 01634 LXA +0 53400 1 00743    01635 CLA +0 50000 1 00324    01636 SUB +0 40200 0 00727    01637 TNZ -0 10000 0 01647   
                     PRFULL.(ADMIN...2,CURCOM.(0))                                  091  LM00189
 01640 TSX +0 07400 4 00104    01641 TXH +3 00000 0 01014    01642 STO +0 60100 0 07732    01643 TSX +0 07400 4 00055   
 01644 TIX +2 01016 0 00264    01645 TXH +3 00000 0 07732                                                               
                   O'E                                                              092  LM00190
 01646 TRA +0 02000 0 01737                                                                                             
                     W'R COMBUF(M).NE.FENCE, T'O ERR1                               093  LM00191
 01647 LXA +0 53400 1 00743    01650 CLA +0 50000 1 00324    01651 SUB +0 40200 0 00122    01652 TZE +0 10000 0 01654   
 01653 TRA +0 02000 0 00215                                                                                             
                     CHKPRV.(BITS.V.RPATBT)                                         094  LM00192
 01654 CAL -0 50000 0 00274    01655 ORA -0 50100 0 00760    01656 SLW +0 60200 0 07732    01657 TSX +0 07400 4 00102   
 01660 TXH +3 00000 0 07732                                                                                             
                     MAXI = 5 * (N+1)                                               095  LM00193
 01661 CLA +0 50000 0 00746    01662 ADD +0 40000 0 01015    01663 XCA +0 13100 0 00000    01664 MPY +0 20000 0 01021   
 01665 STQ -0 60000 0 00132                                                                                             
                     TAULOC = COMMON.(TAU5)                                         096  LM00194
 01666 TSX +0 07400 4 00103    01667 TXH +3 00000 0 00773    01670 STO +0 60100 0 00124                                 
                     PCTL.(3)                                                       097  LM00196
 01671 TSX +0 07400 4 00052    01672 TXH +3 00000 0 01017                                                               
                     PRFULL.(X,WHO(3)...M2,$ RESETTING TIMUSD.$)                    098  LM00197
 01673 TSX +0 07400 4 00055    01674 TXH +3 00000 0 01013    01675 TIX +2 00736 0 01005    01676 TXH +3 00000 0 01315   
 01677 TXH +3 00000 0 01353    01700 TXH +3 00000 0 01157                                                               
                     PCTL.(1)                                                       099  LM00198
 01701 TSX +0 07400 4 00052    01702 TXH +3 00000 0 01015                                                               
                     NONINT.                                                        100  LM00202
 01703 TSX +0 07400 4 00112                                                                                             
                     T'H CND1, FOR I = 0,1,I.G.MAXI                                 101  LM00203
 01704 CLA +0 50000 0 01014    01705 STO +0 60100 0 00730    01706 TRA +0 02000 0 01712    01707 CLA +0 50000 0 00730   
 01710 ADD +0 40000 0 01015    01711 STO +0 60100 0 00730    01712 CLA +0 50000 0 00730    01713 SUB +0 40200 0 00132   
 01714 TZE +0 10000 0 01716    01715 TPL +0 12000 0 01736                                                               
      CND1           SLOC.(GLOC.(TAULOC+I).A.77776K7,TAULOC+I)                      102  LM00204
 01716 CLA +0 50000 0 00124    01717 ADD +0 40000 0 00730    01720 STO +0 60100 0 07732    01721 CLA +0 50000 0 00124   
 01722 ADD +0 40000 0 00730    01723 STO +0 60100 0 07733    01724 TSX +0 07400 4 00037    01725 TXH +3 00000 0 07733   
 01726 STO +0 60100 0 07733    01727 CAL -0 50000 0 07733    01730 ANA -0 32000 0 01401    01731 SLW +0 60200 0 07733   
 01732 TSX +0 07400 4 00072    01733 TXH +3 00000 0 07733    01734 TXH +3 00000 0 07732    01735 TRA +0 02000 0 01707   
                     INT.                                                           103  LM00205
 01736 TSX +0 07400 4 00111                                                                                             
                   E'L                                                              104  LM00206
                 E'E (T0,N1), (T1,N2), (T2,N3), (T3,N4), (T7,MODE)                  105  LM00224
                 O'R COMBUF(M) .E. $  COPY$                                         106  LM00226
 01737 TRA +0 02000 0 06504    01740 LXA +0 53400 1 00743    01741 CLA +0 50000 1 00324    01742 SUB +0 40200 0 01320   
 01743 TNZ -0 10000 0 02264                                                                                             
                   M = M+1                                                          107  LM00227
 01744 CLA +0 50000 0 00743    01745 ADD +0 40000 0 01015    01746 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           108  LM00228
 01747 LXA +0 53400 1 00743    01750 CLA +0 50000 1 00324    01751 SUB +0 40200 0 00727    01752 TNZ -0 10000 0 01765   
                     PRFULL.(ADMIN...2,CURCOM.(0),$ N1 -N2- -N3- -N4-$)             109  LM00229
 01753 TSX +0 07400 4 00104    01754 TXH +3 00000 0 01014    01755 STO +0 60100 0 07733    01756 TSX +0 07400 4 00055   
 01757 TIX +2 01016 0 00264    01760 TXH +3 00000 0 07733    01761 TXH +3 00000 0 01310    01762 TXH +3 00000 0 01065   
 01763 TXH +3 00000 0 01167                                                                                             
                   O'E                                                              110  LM00230
 01764 TRA +0 02000 0 02263                                                                                             
                     N1 = COMBUF(M)                                                 111  LM00231
 01765 LXA +0 53400 2 00743    01766 CLA +0 50000 2 00324    01767 STO +0 60100 0 00132                                 
                     N2 = COMBUF(M+1)                                               112  LM00232
 01770 CLA +0 50000 0 00743    01771 ADD +0 40000 0 01015    01772 PAX +0 73400 2 00000    01773 CLA +0 50000 2 00324   
 01774 STO +0 60100 0 00131                                                                                             
                     N3 = COMBUF(M+2)                                               113  LM00233
 01775 CLA +0 50000 0 00743    01776 ADD +0 40000 0 01016    01777 PAX +0 73400 2 00000    02000 CLA +0 50000 2 00324   
 02001 STO +0 60100 0 00130                                                                                             
                     N4 = COMBUF(M+3)                                               114  LM00234
 02002 CLA +0 50000 0 00743    02003 ADD +0 40000 0 01017    02004 PAX +0 73400 2 00000    02005 CLA +0 50000 2 00324   
 02006 STO +0 60100 0 00127                                                                                             
                     W'R N2 .E. FENCE                                               115  LM00235
 02007 CLA +0 50000 0 00131    02010 SUB +0 40200 0 00122    02011 TNZ -0 10000 0 02021                                 
                       N2 = TA                                                      116  LM00236
 02012 CLA +0 50000 0 00771    02013 STO +0 60100 0 00131                                                               
                       N3 = N1                                                      117  LM00237
 02014 CLA +0 50000 0 00132    02015 STO +0 60100 0 00130                                                               
                       N4 = N2                                                      118  LM00238
 02016 CLA +0 50000 0 00131    02017 STO +0 60100 0 00127                                                               
                     O'R N3 .E. FENCE                                               119  LM00239
 02020 TRA +0 02000 0 02056    02021 CLA +0 50000 0 00130    02022 SUB +0 40200 0 00122    02023 TNZ -0 10000 0 02031   
                       N3 = N1                                                      120  LM00240
 02024 CLA +0 50000 0 00132    02025 STO +0 60100 0 00130                                                               
                       N4 = N2                                                      121  LM00241
 02026 CLA +0 50000 0 00131    02027 STO +0 60100 0 00127                                                               
                     O'R N4 .E. FENCE                                               122  LM00242
 02030 TRA +0 02000 0 02056    02031 CLA +0 50000 0 00127    02032 SUB +0 40200 0 00122    02033 TNZ -0 10000 0 02037   
                       N4 = N2                                                      123  LM00243
 02034 CLA +0 50000 0 00131    02035 STO +0 60100 0 00127                                                               
                     O'R N1 .E. FENCE                                               124  LM00244
 02036 TRA +0 02000 0 02056    02037 CLA +0 50000 0 00132    02040 SUB +0 40200 0 00122    02041 TNZ -0 10000 0 02044   
                       T'O ERR2                                                     125  LM00245
 02042 TRA +0 02000 0 00216                                                                                             
                     O'R COMBUF(M+4).NE. FENCE                                      126  LM00246
 02043 TRA +0 02000 0 02056    02044 CLA +0 50000 0 00743    02045 ADD +0 40000 0 01020    02046 PAX +0 73400 1 00000   
 02047 CLA +0 50000 1 00324    02050 SUB +0 40200 0 00122    02051 TZE +0 10000 0 02056                                 
                       M = M+4                                                      127  LM00247
 02052 CLA +0 50000 0 00743    02053 ADD +0 40000 0 01020    02054 STO +0 60100 0 00743                                 
                       T'O ERR1                                                     128  LM00248
 02055 TRA +0 02000 0 00215                                                                                             
                     E'L                                                            129  LM00249
                     M = M+4                                                        130  LM00250
 02056 CLA +0 50000 0 00743    02057 ADD +0 40000 0 01020    02060 STO +0 60100 0 00743                                 
                     W'R ME(1).E.M1416 .AND. ME.E.CMFL02 .AND.                      131  LM00251
                1         N3.E.N1 .AND. N4.E.N2, T'O ERR0                           131  LM00252
 02061 CLA +0 50000 0 00127    02062 SUB +0 40200 0 00131    02063 TNZ -0 10000 0 02076    02064 CLA +0 50000 0 00130   
 02065 SUB +0 40200 0 00132    02066 TNZ -0 10000 0 02076    02067 CLA +0 50000 0 00740    02070 SUB +0 40200 0 00277   
 02071 TNZ -0 10000 0 02076    02072 CLA +0 50000 0 00737    02073 SUB +0 40200 0 00734    02074 TNZ -0 10000 0 02076   
 02075 TRA +0 02000 0 00214                                                                                             
                     CHKPRV.(RPRVBT)                                                132  LM00253
 02076 TSX +0 07400 4 00102    02077 TXH +3 00000 0 00762                                                               
                     UNLINK.(DATE,TIME,NULL.)                                       133  LM00256
 02100 TSX +0 07400 4 00075    02101 TXH +3 00000 0 00326    02102 TXH +3 00000 0 00774    02103 TXH +3 00000 0 00045   
                     CHFILE.(DATE,TIME,1,M0,M0,NULL.)                               134  LM00257
 02104 TSX +0 07400 4 00015    02105 TXH +3 00000 0 00326    02106 TXH +3 00000 0 00774    02107 TXH +3 00000 0 01015   
 02110 TXH +3 00000 0 00733    02111 TXH +3 00000 0 00733    02112 TXH +3 00000 0 00045                                 
                     DELFIL.(DATE,TIME,NULL.)                                       135  LM00258
 02113 TSX +0 07400 4 00023    02114 TXH +3 00000 0 00326    02115 TXH +3 00000 0 00774    02116 TXH +3 00000 0 00045   
                     OPEN.(W,DATE,TIME,120K)                                        136  LM00259
 02117 TSX +0 07400 4 00051    02120 TXH +3 00000 0 01012    02121 TXH +3 00000 0 00326    02122 TXH +3 00000 0 00774   
 02123 TXH +3 00000 0 01044                                                                                             
                     GETBUF.(B1,432)                                                137  LM00260
 02124 TSX +0 07400 4 00035    02125 TXH +3 00000 0 00267    02126 TXH +3 00000 0 01050                                 
                     GETBUF.(B2,432)                                                138  LM00261
 02127 TSX +0 07400 4 00035    02130 TXH +3 00000 0 00270    02131 TXH +3 00000 0 01050                                 
                     GETBUF.(B3,432)                                                139  LM00262
 02132 TSX +0 07400 4 00035    02133 TXH +3 00000 0 00271    02134 TXH +3 00000 0 01050                                 
                     GETBUF.(B4,432)                                                140  LM00263
 02135 TSX +0 07400 4 00035    02136 TXH +3 00000 0 00272    02137 TXH +3 00000 0 01050                                 
                     BUFFER.(DATE,TIME,B4(B4+432)...432)                            141  LM00264
 02140 CLA +0 50000 0 00272    02141 ADD +0 40000 0 01050    02142 SUB +0 40200 0 02143    02143 TXH +3 00000 0 00272   
 02144 STA +0 62100 0 02150    02145 TSX +0 07400 4 00012    02146 TXH +3 00000 0 00326    02147 TXH +3 00000 0 00774   
 02150 TIX +2 01050 0 00000                                                                                             
                     ATTACH.(M1416,CMFL02)                                          142  LM00265
 02151 TSX +0 07400 4 00002    02152 TXH +3 00000 0 00734    02153 TXH +3 00000 0 00277                                 
                     NONINT.                                                        143  LM00266
 02154 TSX +0 07400 4 00112                                                                                             
                     OPEN.(R,N1,N2)                                                 144  LM00267
 02155 TSX +0 07400 4 00051    02156 TXH +3 00000 0 00763    02157 TXH +3 00000 0 00132    02160 TXH +3 00000 0 00131   
                     COPY.(N1,N2,DATE,TIME,B1(B1+432),B2(B2+432),B3(B3+432),        145  LM00268
                1          432,IOERR)                                               145  LM00269
 02161 CLA +0 50000 0 00271    02162 ADD +0 40000 0 01050    02163 SUB +0 40200 0 02164    02164 TXH +3 00000 0 00271   
 02165 STA +0 62100 0 02207    02166 CLA +0 50000 0 00270    02167 ADD +0 40000 0 01050    02170 SUB +0 40200 0 02171   
 02171 TXH +3 00000 0 00270    02172 STA +0 62100 0 02206    02173 CLA +0 50000 0 00267    02174 ADD +0 40000 0 01050   
 02175 SUB +0 40200 0 02176    02176 TXH +3 00000 0 00267    02177 STA +0 62100 0 02205    02200 TSX +0 07400 4 00020   
 02201 TXH +3 00000 0 00132    02202 TXH +3 00000 0 00131    02203 TXH +3 00000 0 00326    02204 TXH +3 00000 0 00774   
 02205 TXH +3 00000 0 00000    02206 TXH +3 00000 0 00000    02207 TXH +3 00000 0 00000    02210 TXH +3 00000 0 01050   
 02211 TXH +3 00000 0 00225                                                                                             
                     CLOSE.(N1,N2)                                                  146  LM00270
 02212 TSX +0 07400 4 00016    02213 TXH +3 00000 0 00132    02214 TXH +3 00000 0 00131                                 
                     INT.                                                           147  LM00271
 02215 TSX +0 07400 4 00111                                                                                             
                     CLOSE.(DATE,TIME)                                              148  LM00272
 02216 TSX +0 07400 4 00016    02217 TXH +3 00000 0 00326    02220 TXH +3 00000 0 00774                                 
                     ATTACH.(ME(1),ME)                                              149  LM00273
 02221 TSX +0 07400 4 00002    02222 TXH +3 00000 0 00737    02223 TXH +3 00000 0 00740                                 
                     MODE = 124K                                                    150  LM00274
 02224 CLA +0 50000 0 01045    02225 STO +0 60100 0 00123                                                               
                     FSTATE.(N3,N4,TUCARD(1)...2,CPY1)                              151  LM00275
 02226 TSX +0 07400 4 00032    02227 TXH +3 00000 0 00130    02230 TXH +3 00000 0 00127    02231 TIX +2 01016 0 00165   
 02232 TXH +3 00000 0 00210                                                                                             
                     MODE = TUCARD.A.777K                                           152  LM00276
 02233 CAL -0 50000 0 00166    02234 ANA -0 32000 0 01051    02235 SLW +0 60200 0 00123                                 
      CPY1           UNLINK.(N3,N4,NULL.)                                           153  LM00277
 02236 TSX +0 07400 4 00075    02237 TXH +3 00000 0 00130    02240 TXH +3 00000 0 00127    02241 TXH +3 00000 0 00045   
                     CHFILE.(N3,N4,1,M0,M0,NULL.)                                   154  LM00278
 02242 TSX +0 07400 4 00015    02243 TXH +3 00000 0 00130    02244 TXH +3 00000 0 00127    02245 TXH +3 00000 0 01015   
 02246 TXH +3 00000 0 00733    02247 TXH +3 00000 0 00733    02250 TXH +3 00000 0 00045                                 
                     DELFIL.(N3,N4,NULL.)                                           155  LM00279
 02251 TSX +0 07400 4 00023    02252 TXH +3 00000 0 00130    02253 TXH +3 00000 0 00127    02254 TXH +3 00000 0 00045   
                     CHFILE.(DATE,TIME,MODE,N3,N4)                                  156  LM00280
 02255 TSX +0 07400 4 00015    02256 TXH +3 00000 0 00326    02257 TXH +3 00000 0 00774    02260 TXH +3 00000 0 00123   
 02261 TXH +3 00000 0 00130    02262 TXH +3 00000 0 00127                                                               
                   E'L                                                              157  LM00281
                 O'R COMBUF(M) .E. $DELALL$                                         158  LM00298
 02263 TRA +0 02000 0 06504    02264 LXA +0 53400 1 00743    02265 CLA +0 50000 1 00324    02266 SUB +0 40200 0 01134   
 02267 TNZ -0 10000 0 02322                                                                                             
                   M = M+1                                                          159  LM00299
 02270 CLA +0 50000 0 00743    02271 ADD +0 40000 0 01015    02272 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           160  LM00300
 02273 LXA +0 53400 1 00743    02274 CLA +0 50000 1 00324    02275 SUB +0 40200 0 00727    02276 TNZ -0 10000 0 02310   
                     PRFULL.(ADMIN...2,CURCOM.(0),$ 'LUSER$)                        161  LM00301
 02277 TSX +0 07400 4 00104    02300 TXH +3 00000 0 01014    02301 STO +0 60100 0 07733    02302 TSX +0 07400 4 00055   
 02303 TIX +2 01016 0 00264    02304 TXH +3 00000 0 07733    02305 TXH +3 00000 0 01255    02306 TXH +3 00000 0 01244   
                   O'E                                                              162  LM00302
 02307 TRA +0 02000 0 02321                                                                                             
                     GETUSR.(ERR3,DEL0,ERR5)                                        163  LM00303
 02310 TSX +0 07400 4 00107    02311 TXH +3 00000 0 00217    02312 TXH +3 00000 0 00211    02313 TXH +3 00000 0 00221   
      DEL0           ATTACH.(PROB,PROG)                                             164  LM00304
 02314 TSX +0 07400 4 00002    02315 TXH +3 00000 0 00117    02316 TXH +3 00000 0 00116                                 
                     DELALL.                                                        165  LM00305
 02317 TSX +0 07400 4 00022                                                                                             
                     T'O ERASE0                                                     166  LM00306
 02320 TRA +0 02000 0 00213                                                                                             
                   E'L                                                              167  LM00307
                 O'R COMBUF(M) .E. $DELTEM$                                         168  LM00325
 02321 TRA +0 02000 0 06504    02322 LXA +0 53400 1 00743    02323 CLA +0 50000 1 00324    02324 SUB +0 40200 0 01135   
 02325 TNZ -0 10000 0 02357                                                                                             
                   M = M+1                                                          169  LM00326
 02326 CLA +0 50000 0 00743    02327 ADD +0 40000 0 01015    02330 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           170  LM00327
 02331 LXA +0 53400 1 00743    02332 CLA +0 50000 1 00324    02333 SUB +0 40200 0 00727    02334 TNZ -0 10000 0 02346   
                     PRFULL.(ADMIN...2,CURCOM.(0),$ 'LUSER$)                        171  LM00328
 02335 TSX +0 07400 4 00104    02336 TXH +3 00000 0 01014    02337 STO +0 60100 0 07733    02340 TSX +0 07400 4 00055   
 02341 TIX +2 01016 0 00264    02342 TXH +3 00000 0 07733    02343 TXH +3 00000 0 01255    02344 TXH +3 00000 0 01244   
                   O'E                                                              172  LM00329
 02345 TRA +0 02000 0 02356                                                                                             
                     GETUSR.(ERR3,DEL1,ERR5)                                        173  LM00330
 02346 TSX +0 07400 4 00107    02347 TXH +3 00000 0 00217    02350 TXH +3 00000 0 00212    02351 TXH +3 00000 0 00221   
      DEL1           ATTACH.(PROB,PROG)                                             174  LM00331
 02352 TSX +0 07400 4 00002    02353 TXH +3 00000 0 00117    02354 TXH +3 00000 0 00116                                 
                     DELTEM.                                                        175  LM00332
 02355 TSX +0 07400 4 00025                                                                                             
                   E'L                                                              176  LM00333
                 O'R COMBUF(M) .E. $ ERASE$                                         177  LM00351
 02356 TRA +0 02000 0 06504    02357 LXA +0 53400 1 00743    02360 CLA +0 50000 1 00324    02361 SUB +0 40200 0 01267   
 02362 TNZ -0 10000 0 02432                                                                                             
                   M = M+1                                                          178  LM00352
 02363 CLA +0 50000 0 00743    02364 ADD +0 40000 0 01015    02365 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           179  LM00353
 02366 LXA +0 53400 1 00743    02367 CLA +0 50000 1 00324    02370 SUB +0 40200 0 00727    02371 TNZ -0 10000 0 02403   
                     PRFULL.(ADMIN...2,CURCOM.(0),$ 'LUSER$)                        180  LM00354
 02372 TSX +0 07400 4 00104    02373 TXH +3 00000 0 01014    02374 STO +0 60100 0 07733    02375 TSX +0 07400 4 00055   
 02376 TIX +2 01016 0 00264    02377 TXH +3 00000 0 07733    02400 TXH +3 00000 0 01255    02401 TXH +3 00000 0 01244   
                   O'E                                                              181  LM00355
 02402 TRA +0 02000 0 02431                                                                                             
                     GETUSR.(ERR3,ERASE0,ERR5)                                      182  LM00356
 02403 TSX +0 07400 4 00107    02404 TXH +3 00000 0 00217    02405 TXH +3 00000 0 00213    02406 TXH +3 00000 0 00221   
      ERASE0         ATTACH.(PROB,PROG)                                             183  LM00357
 02407 TSX +0 07400 4 00002    02410 TXH +3 00000 0 00117    02411 TXH +3 00000 0 00116                                 
                     ALLOT.(1,0,0)                                                  184  LM00358
 02412 TSX +0 07400 4 00001    02413 TXH +3 00000 0 01015    02414 TXH +3 00000 0 01014    02415 TXH +3 00000 0 01014   
                     ALLOT.(2,0,0)                                                  185  LM00359
 02416 TSX +0 07400 4 00001    02417 TXH +3 00000 0 01016    02420 TXH +3 00000 0 01014    02421 TXH +3 00000 0 01014   
                     ALLOT.(3,0,0)                                                  186  LM00360
 02422 TSX +0 07400 4 00001    02423 TXH +3 00000 0 01017    02424 TXH +3 00000 0 01014    02425 TXH +3 00000 0 01014   
                     DELMFD.(PROB,PROG)                                             187  LM00361
 02426 TSX +0 07400 4 00024    02427 TXH +3 00000 0 00117    02430 TXH +3 00000 0 00116                                 
                   E'L                                                              188  LM00362
                 E'E (HELMES(13),TUCARD(13))                                        189  LM00386
                 V'S HELMES = $NEXT COMEDOW$                                        190  LM00387
 00165     -0 64425 2 44666    00166     -0 52567 6 36023                                                               
                 V'S HELMES(2) = 453560575757K                                      191  LM00388
 00164     -0 53560 5 75757                                                                                             
                 O'R COMBUF(M) .E. $ HELLO$                                         192  LM00390
 02431 TRA +0 02000 0 06504    02432 LXA +0 53400 1 00743    02433 CLA +0 50000 1 00324    02434 SUB +0 40200 0 01275   
 02435 TNZ -0 10000 0 02554                                                                                             
                   M = M+1                                                          193  LM00391
 02436 CLA +0 50000 0 00743    02437 ADD +0 40000 0 01015    02440 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           194  LM00392
 02441 LXA +0 53400 1 00743    02442 CLA +0 50000 1 00324    02443 SUB +0 40200 0 00727    02444 TNZ -0 10000 0 02450   
                     PRFULL.(FMT4...100)                                            195  LM00393
 02445 TSX +0 07400 4 00055    02446 TIX +2 01046 0 00672                                                               
                     V'S FMT4 = $ 'UADMIN HELLO 'LARG'*'8$,                         196  LM00394
                1    $WHERE '=ARG'= MAY BE:'*'8$,                                   196  LM00395
                2    $  1.   NONE   - SETS 'U'=NEXT COMDOWN:'='L MESSAGE'*'8$,      196  LM00396
                3    $  2. '='6NEWMES'= - ALLOWS COMPLETELY NEW MESSAGE'*'8$,       196  LM00397
                4    $  3. '='5RESET'=  - RESETS MESSAGE SWITCH$,777777777777K      196  LM00398
 00630     -3 77777 7 77777    00631     -2 63163 2 33060    00632     -2 22127 2 56062    00633     -2 36260 4 42562   
 00634     -0 06051 2 56225    00635     +2 56314 1 36060    00636     +1 31405 5 12562    00637     -2 06003 3 36014   
 00640     +2 51454 1 41060    00641     -0 42562 6 22127    00642     -3 06045 2 56660    00643     -0 74325 6 32543   
 00644     -2 66260 2 34644    00645     -0 06021 4 34346    00646     -0 42562 1 41360    00647     +1 31406 4 52566   
 00650     -2 06002 3 36014    00651     +2 72514 5 41410    00652     -2 04425 6 26221    00653     -0 53514 1 31443   
 00654     +2 34644 2 44666    00655     +1 34525 6 76360    00656     -2 36260 1 46414    00657     -2 06040 6 06225   
 00660     -2 04546 4 52560    00661     -2 06001 3 36060    00662     +1 06060 6 06060    00663     +2 22535 1 45414   
 00664     +1 36044 2 17060    00665     +1 41321 5 12714    00666     -2 63025 5 12560    00667     -1 12714 5 41410   
 00670     -0 34660 1 44321    00671     +3 14560 3 02543    00672     -2 01464 2 12444                                 
                   O'E                                                              197  LM00400
 02447 TRA +0 02000 0 02553                                                                                             
                     MESGPT = COMMON.(MESGPT)                                       198  LM00401
 02450 TSX +0 07400 4 00103    02451 TXH +3 00000 0 00741    02452 STO +0 60100 0 00741                                 
                     SYSMSG = COMMON.(SYSMSG)                                       199  LM00402
 02453 TSX +0 07400 4 00103    02454 TXH +3 00000 0 00770    02455 STO +0 60100 0 00770                                 
                     W'R COMBUF(M) .E. $NEWMES$                                     200  LM00403
 02456 LXA +0 53400 1 00743    02457 CLA +0 50000 1 00324    02460 SUB +0 40200 0 01204    02461 TNZ -0 10000 0 02472   
                       PRFULA.($'R'1TYPE: 'B'8$)                                    201  LM00404
 02462 TSX +0 07400 4 00054    02463 TXH +3 00000 0 01114    02464 TXH +3 00000 0 01227    02465 TXH +3 00000 0 01100   
                       RDFLXC.(HELMES,84)                                           202  LM00405
 02466 TSX +0 07400 4 00060    02467 TXH +3 00000 0 00166    02470 TXH +3 00000 0 01045                                 
                     O'R COMBUF(M) .E. $ RESET$                                     203  LM00406
 02471 TRA +0 02000 0 02520    02472 LXA +0 53400 1 00743    02473 CLA +0 50000 1 00324    02474 SUB +0 40200 0 01315   
 02475 TNZ -0 10000 0 02503                                                                                             
                       SLOC.(0,MESGPT)                                              204  LM00407
 02476 TSX +0 07400 4 00072    02477 TXH +3 00000 0 01014    02500 TXH +3 00000 0 00741                                 
                       T'O OUT                                                      205  LM00408
 02501 TRA +0 02000 0 00231                                                                                             
                     O'R COMBUF(M) .E. FENCE                                        206  LM00409
 02502 TRA +0 02000 0 02520    02503 LXA +0 53400 1 00743    02504 CLA +0 50000 1 00324    02505 SUB +0 40200 0 00122   
 02506 TNZ -0 10000 0 02517                                                                                             
                       PRFULA.($'R'X$,HELMES...3,$'B'8$)                            207  LM00410
 02507 TSX +0 07400 4 00054    02510 TXH +3 00000 0 01115    02511 TIX +2 01017 0 00166    02512 TXH +3 00000 0 01101   
                       RDFLXC.(HELMES(3),66)                                        208  LM00411
 02513 TSX +0 07400 4 00060    02514 TXH +3 00000 0 00163    02515 TXH +3 00000 0 01042                                 
                     O'E                                                            209  LM00412
 02516 TRA +0 02000 0 02520                                                                                             
                       T'O ERR1                                                     210  LM00413
 02517 TRA +0 02000 0 00215                                                                                             
                     E'L                                                            211  LM00414
                     T'H HEL1, FOR I = 0,1,I.G.13                                   212  LM00415
 02520 CLA +0 50000 0 01014    02521 STO +0 60100 0 00730    02522 TRA +0 02000 0 02526    02523 CLA +0 50000 0 00730   
 02524 ADD +0 40000 0 01015    02525 STO +0 60100 0 00730    02526 CLA +0 50000 0 00730    02527 SUB +0 40200 0 01030   
 02530 TZE +0 10000 0 02532    02531 TPL +0 12000 0 02545                                                               
      HEL1           SLOC.(HELMES(I),SYSMSG+I)                                      213  LM00416
 02532 CLA +0 50000 0 00770    02533 ADD +0 40000 0 00730    02534 STO +0 60100 0 07733    02535 CLA +0 50000 0 00730   
 02536 SUB +0 40200 0 02537    02537 TXH +3 00000 0 00166    02540 STA +0 62100 0 02542    02541 TSX +0 07400 4 00072   
 02542 TXH +3 00000 0 00000    02543 TXH +3 00000 0 07733    02544 TRA +0 02000 0 02523                                 
                     SLOC.(16K6.V.SYSMSG,MESGPT)                                    214  LM00417
 02545 CAL -0 50000 0 01060    02546 ORA -0 50100 0 00770    02547 SLW +0 60200 0 07733    02550 TSX +0 07400 4 00072   
 02551 TXH +3 00000 0 07733    02552 TXH +3 00000 0 00741                                                               
                   E'L                                                              215  LM00418
                 D'N INPMES(14)                                                     216  LM00436
                 E'E (INPMES,TACARD), (DRMTSW,T0)                                   217  LM00437
                 BOOLEAN DRMTSW                                                     218  LM00438
                 O'R COMBUF(M) .E. $ INPUT$                                         219  LM00440
 02553 TRA +0 02000 0 06504    02554 LXA +0 53400 1 00743    02555 CLA +0 50000 1 00324    02556 SUB +0 40200 0 01276   
 02557 TNZ -0 10000 0 02651                                                                                             
                   M = M+1                                                          220  LM00441
 02560 CLA +0 50000 0 00743    02561 ADD +0 40000 0 01015    02562 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           221  LM00442
 02563 LXA +0 53400 1 00743    02564 CLA +0 50000 1 00324    02565 SUB +0 40200 0 00727    02566 TNZ -0 10000 0 02601   
                     PRFULL.(ADMIN...2,CURCOM.(0),$ '4USER -(DRMT)-$)               222  LM00443
 02567 TSX +0 07400 4 00104    02570 TXH +3 00000 0 01014    02571 STO +0 60100 0 07733    02572 TSX +0 07400 4 00055   
 02573 TIX +2 01016 0 00264    02574 TXH +3 00000 0 07733    02575 TXH +3 00000 0 01250    02576 TXH +3 00000 0 01243   
 02577 TXH +3 00000 0 01177                                                                                             
                   O'E                                                              223  LM00444
 02600 TRA +0 02000 0 02650                                                                                             
                     GETUSR.(ERR3,ERR4,INP1)                                        224  LM00445
 02601 TSX +0 07400 4 00107    02602 TXH +3 00000 0 00217    02603 TXH +3 00000 0 00220    02604 TXH +3 00000 0 00224   
      INP1           W'R COMBUF(M) .E. $(DRMT)$                                     225  LM00446
 02605 LXA +0 53400 1 00743    02606 CLA +0 50000 1 00324    02607 SUB +0 40200 0 01374    02610 TNZ -0 10000 0 02614   
                       DRMTSW = 1B                                                  226  LM00447
 02611 CLA +0 50000 0 01015    02612 STO +0 60100 0 00132                                                               
                     O'R COMBUF(M) .E. FENCE                                        227  LM00448
 02613 TRA +0 02000 0 02624    02614 LXA +0 53400 1 00743    02615 CLA +0 50000 1 00324    02616 SUB +0 40200 0 00122   
 02617 TNZ -0 10000 0 02623                                                                                             
                       DRMTSW = 0B                                                  228  LM00449
 02620 CLA +0 50000 0 01014    02621 STO +0 60100 0 00132                                                               
                     O'E                                                            229  LM00450
 02622 TRA +0 02000 0 02624                                                                                             
                       T'O ERR1                                                     230  LM00451
 02623 TRA +0 02000 0 00215                                                                                             
                     E'L                                                            231  LM00452
                     PRFULA.($'R'1TYPE: 'B'8$)                                      232  LM00453
 02624 TSX +0 07400 4 00054    02625 TXH +3 00000 0 01114    02626 TXH +3 00000 0 01227    02627 TXH +3 00000 0 01100   
                     RDFLXA.(INPMES(14)...14)                                       233  LM00454
 02630 TSX +0 07400 4 00057    02631 TIX +2 01031 0 00167                                                               
                     NONINT.                                                        234  LM00455
 02632 TSX +0 07400 4 00112                                                                                             
                     W'R DRMTSW                                                     235  LM00456
 02633 NZT -0 52000 0 00132    02634 TRA +0 02000 0 02643                                                               
                       RSSWB.(USR)                                                  236  LM00457
 02635 TSX +0 07400 4 00064    02636 TXH +3 00000 0 01004                                                               
                       SCHEDL.(2,USR,1)                                             237  LM00458
 02637 TSX +0 07400 4 00065    02640 TXH +3 00000 0 01016    02641 TXH +3 00000 0 01004    02642 TXH +3 00000 0 01015   
                     E'L                                                            238  LM00459
                     ENTLIN.(INPMES(14)...14,USR,ERR7)                              239  LM00460
 02643 TSX +0 07400 4 00026    02644 TIX +2 01031 0 00167    02645 TXH +3 00000 0 01004    02646 TXH +3 00000 0 00223   
                     INT.                                                           240  LM00461
 02647 TSX +0 07400 4 00111                                                                                             
                   E'L                                                              241  LM00462
                 O'R COMBUF(M) .E. $  KILL$                                         242  LM00480
 02650 TRA +0 02000 0 06504    02651 LXA +0 53400 1 00743    02652 CLA +0 50000 1 00324    02653 SUB +0 40200 0 01321   
 02654 TNZ -0 10000 0 02726                                                                                             
                   M = M+1                                                          243  LM00481
 02655 CLA +0 50000 0 00743    02656 ADD +0 40000 0 01015    02657 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           244  LM00482
 02660 LXA +0 53400 1 00743    02661 CLA +0 50000 1 00324    02662 SUB +0 40200 0 00727    02663 TNZ -0 10000 0 02675   
                     PRFULL.(ADMIN...2,CURCOM.(0),$ 'LUSER$)                        245  LM00483
 02664 TSX +0 07400 4 00104    02665 TXH +3 00000 0 01014    02666 STO +0 60100 0 07733    02667 TSX +0 07400 4 00055   
 02670 TIX +2 01016 0 00264    02671 TXH +3 00000 0 07733    02672 TXH +3 00000 0 01255    02673 TXH +3 00000 0 01244   
                   O'E                                                              246  LM00484
 02674 TRA +0 02000 0 02725                                                                                             
                     GETUSR.(ERR3,ERR4,ERR5)                                        247  LM00485
 02675 TSX +0 07400 4 00107    02676 TXH +3 00000 0 00217    02677 TXH +3 00000 0 00220    02700 TXH +3 00000 0 00221   
                     W'R COMBUF(M).NE.FENCE, T'O ERR1                               248  LM00486
 02701 LXA +0 53400 1 00743    02702 CLA +0 50000 1 00324    02703 SUB +0 40200 0 00122    02704 TZE +0 10000 0 02706   
 02705 TRA +0 02000 0 00215                                                                                             
                     PCTL.(3)                                                       249  LM00487
 02706 TSX +0 07400 4 00052    02707 TXH +3 00000 0 01017                                                               
                     PRFULL.(X,WHO(3)...M2,ON,WHO,$ KILLING'X$,                     250  LM00488
                1          PROB...2,$.$)                                            250  LM00489
 02710 TSX +0 07400 4 00055    02711 TXH +3 00000 0 01013    02712 TIX +2 00736 0 01005    02713 TXH +3 00000 0 00750   
 02714 TXH +3 00000 0 01010    02715 TXH +3 00000 0 01302    02716 TXH +3 00000 0 01206    02717 TIX +2 01016 0 00117   
 02720 TXH +3 00000 0 01164                                                                                             
                     PCTL.(1)                                                       251  LM00490
 02721 TSX +0 07400 4 00052    02722 TXH +3 00000 0 01015                                                               
                     KILL.(USR)                                                     252  LM00494
 02723 TSX +0 07400 4 00041    02724 TXH +3 00000 0 01004                                                               
                   E'L                                                              253  LM00495
                 E'E (T7,LEN)                                                       254  LM00514
                 E'E (TUCARD(2),DAYTIM), (TUCARD(1),DATELU)                         255  LM00515
                 O'R COMBUF(M) .E. $ MONTH$                                         256  LM00517
 02725 TRA +0 02000 0 06504    02726 LXA +0 53400 1 00743    02727 CLA +0 50000 1 00324    02730 SUB +0 40200 0 01307   
 02731 TNZ -0 10000 0 03354                                                                                             
                   M = M+1                                                          257  LM00518
 02732 CLA +0 50000 0 00743    02733 ADD +0 40000 0 01015    02734 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           258  LM00519
 02735 LXA +0 53400 1 00743    02736 CLA +0 50000 1 00324    02737 SUB +0 40200 0 00727    02740 TNZ -0 10000 0 02751   
                     PRFULL.($ 'UADMIN MONTH 'L-NAME1- -NAME2-$)                    259  LM00520
 02741 TSX +0 07400 4 00055    02742 TXH +3 00000 0 01256    02743 TXH +3 00000 0 01162    02744 TXH +3 00000 0 01352   
 02745 TXH +3 00000 0 01200    02746 TXH +3 00000 0 01301    02747 TXH +3 00000 0 01066                                 
                   O'E                                                              260  LM00521
 02750 TRA +0 02000 0 03353                                                                                             
                     CHKPRV.(BITS.V.RPATBT)                                         261  LM00522
 02751 CAL -0 50000 0 00274    02752 ORA -0 50100 0 00760    02753 SLW +0 60200 0 07733    02754 TSX +0 07400 4 00102   
 02755 TXH +3 00000 0 07733                                                                                             
                     N1 = COMBUF(M)                                                 262  LM00523
 02756 LXA +0 53400 2 00743    02757 CLA +0 50000 2 00324    02760 STO +0 60100 0 00132                                 
                     N2 = COMBUF(M+1)                                               263  LM00524
 02761 CLA +0 50000 0 00743    02762 ADD +0 40000 0 01015    02763 PAX +0 73400 2 00000    02764 CLA +0 50000 2 00324   
 02765 STO +0 60100 0 00131                                                                                             
                     W'R N1 .E. FENCE                                               264  LM00525
 02766 CLA +0 50000 0 00132    02767 SUB +0 40200 0 00122    02770 TNZ -0 10000 0 02776                                 
                       N1 = TU                                                      265  LM00526
 02771 CLA +0 50000 0 00776    02772 STO +0 60100 0 00132                                                               
                       N2 = TA                                                      266  LM00527
 02773 CLA +0 50000 0 00771    02774 STO +0 60100 0 00131                                                               
                     O'R N2 .E. FENCE                                               267  LM00528
 02775 TRA +0 02000 0 03013    02776 CLA +0 50000 0 00131    02777 SUB +0 40200 0 00122    03000 TNZ -0 10000 0 03004   
                       N2 = TA                                                      268  LM00529
 03001 CLA +0 50000 0 00771    03002 STO +0 60100 0 00131                                                               
                     O'R COMBUF(M+2) .NE. FENCE                                     269  LM00530
 03003 TRA +0 02000 0 03013    03004 CLA +0 50000 0 00743    03005 ADD +0 40000 0 01016    03006 PAX +0 73400 1 00000   
 03007 CLA +0 50000 1 00324    03010 SUB +0 40200 0 00122    03011 TZE +0 10000 0 03013                                 
                       T'O ERR1                                                     270  LM00531
 03012 TRA +0 02000 0 00215                                                                                             
                     E'L                                                            271  LM00532
                     LEN = 5*(N+1)                                                  272  LM00533
 03013 CLA +0 50000 0 00746    03014 ADD +0 40000 0 01015    03015 XCA +0 13100 0 00000    03016 MPY +0 20000 0 01021   
 03017 STQ -0 60000 0 00123                                                                                             
                     TAULOC = COMMON.(TAU5)                                         273  LM00534
 03020 TSX +0 07400 4 00103    03021 TXH +3 00000 0 00773    03022 STO +0 60100 0 00124                                 
                     GETBUF.(B5,LEN)                                                274  LM00535
 03023 TSX +0 07400 4 00035    03024 TXH +3 00000 0 00273    03025 TXH +3 00000 0 00123                                 
                     ATTACH.(M1416,CMFL02)                                          275  LM00536
 03026 TSX +0 07400 4 00002    03027 TXH +3 00000 0 00734    03030 TXH +3 00000 0 00277                                 
                     FSTATE.(TU,TA,LENGTH...8)                                      276  LM00537
 03031 TSX +0 07400 4 00032    03032 TXH +3 00000 0 00776    03033 TXH +3 00000 0 00771    03034 TIX +2 01024 0 00156   
                     PCTL.(3)                                                       277  LM00539
 03035 TSX +0 07400 4 00052    03036 TXH +3 00000 0 01017                                                               
                     PRFULL.(X,WHO(3)...M2,ON,WHO,$ RESETTING TIMUSD AT 'X$,        278  LM00540
                1      DATE,X,TIME,$.$)                                             278  LM00541
 03037 TSX +0 07400 4 00055    03040 TXH +3 00000 0 01013    03041 TIX +2 00736 0 01005    03042 TXH +3 00000 0 00750   
 03043 TXH +3 00000 0 01010    03044 TXH +3 00000 0 01315    03045 TXH +3 00000 0 01353    03046 TXH +3 00000 0 01160   
 03047 TXH +3 00000 0 01124    03050 TXH +3 00000 0 00326    03051 TXH +3 00000 0 01013    03052 TXH +3 00000 0 00774   
 03053 TXH +3 00000 0 01164                                                                                             
                     PCTL.(1)                                                       279  LM00542
 03054 TSX +0 07400 4 00052    03055 TXH +3 00000 0 01015                                                               
                     NONINT.                                                        280  LM00551
 03056 TSX +0 07400 4 00112                                                                                             
                     DATE = RJUST.(DATE)                                            281  LM00552
 03057 TSX +0 07400 4 00063    03060 TXH +3 00000 0 00326    03061 STO +0 60100 0 00326                                 
                     CHFILE.(TU,TA,20K,DATE,TIME)                                   282  LM00553
 03062 TSX +0 07400 4 00015    03063 TXH +3 00000 0 00776    03064 TXH +3 00000 0 00771    03065 TXH +3 00000 0 01033   
 03066 TXH +3 00000 0 00326    03067 TXH +3 00000 0 00774                                                               
                     SETFIL.(TU,TA,DAYTIM,DATELU,120K,2)                            283  LM00554
 03070 TSX +0 07400 4 00070    03071 TXH +3 00000 0 00776    03072 TXH +3 00000 0 00771    03073 TXH +3 00000 0 00164   
 03074 TXH +3 00000 0 00165    03075 TXH +3 00000 0 01044    03076 TXH +3 00000 0 01016                                 
                     MOVFIL.(DATE,TIME,ME(1),ME)                                    284  LM00555
 03077 TSX +0 07400 4 00044    03100 TXH +3 00000 0 00326    03101 TXH +3 00000 0 00774    03102 TXH +3 00000 0 00737   
 03103 TXH +3 00000 0 00740                                                                                             
                     GETARY.(TAULOC,B5(B5+LEN)...LEN)                               285  LM00556
 03104 CLA +0 50000 0 00273    03105 ADD +0 40000 0 00123    03106 SUB +0 40200 0 03107    03107 TXH +3 00000 0 00273   
 03110 STA +0 62100 0 03113    03111 TSX +0 07400 4 00034    03112 TXH +3 00000 0 00124    03113 TIX +2 00123 0 00000   
                     GETPRB.                                                        286  LM00557
 03114 TSX +0 07400 4 00106                                                                                             
                     T'H MON1, FOR I = 0,1,I.G.LEN                                  287  LM00561
 03115 CLA +0 50000 0 01014    03116 STO +0 60100 0 00730    03117 TRA +0 02000 0 03123    03120 CLA +0 50000 0 00730   
 03121 ADD +0 40000 0 01015    03122 STO +0 60100 0 00730    03123 CLA +0 50000 0 00730    03124 SUB +0 40200 0 00123   
 03125 TZE +0 10000 0 03127    03126 TPL +0 12000 0 03147                                                               
      MON1           SLOC.(GLOC.(TAULOC+I).A.77776K7,TAULOC+I)                      288  LM00562
 03127 CLA +0 50000 0 00124    03130 ADD +0 40000 0 00730    03131 STO +0 60100 0 07733    03132 CLA +0 50000 0 00124   
 03133 ADD +0 40000 0 00730    03134 STO +0 60100 0 07732    03135 TSX +0 07400 4 00037    03136 TXH +3 00000 0 07732   
 03137 STO +0 60100 0 07732    03140 CAL -0 50000 0 07732    03141 ANA -0 32000 0 01401    03142 SLW +0 60200 0 07732   
 03143 TSX +0 07400 4 00072    03144 TXH +3 00000 0 07732    03145 TXH +3 00000 0 07733    03146 TRA +0 02000 0 03120   
                     INT.                                                           289  LM00563
 03147 TSX +0 07400 4 00111                                                                                             
                     ATTACH.(ME(1),ME)                                              290  LM00566
 03150 TSX +0 07400 4 00002    03151 TXH +3 00000 0 00737    03152 TXH +3 00000 0 00740                                 
                     LEN = N+1                                                      291  LM00567
 03153 CLA +0 50000 0 00746    03154 ADD +0 40000 0 01015    03155 STO +0 60100 0 00123                                 
                     TU = DATE                                                      292  LM00568
 03156 CLA +0 50000 0 00326    03157 STO +0 60100 0 00776                                                               
                     TA = TIME                                                      293  LM00569
 03160 CLA +0 50000 0 00774    03161 STO +0 60100 0 00771                                                               
                     STATUS = $RW$                                                  294  LM00570
 03162 CLA +0 50000 0 01245    03163 STO +0 60100 0 00766                                                               
      MON2           READTU.(PROBN(PROBN),PROGN(PROGN),N,MONEOF)                    295  LM00571
 03164 CLA +0 50000 0 00753    03165 SUB +0 40200 0 03166    03166 TXH +3 00000 0 00753    03167 STA +0 62100 0 03176   
 03170 CLA +0 50000 0 00752    03171 SUB +0 40200 0 03172    03172 TXH +3 00000 0 00752    03173 STA +0 62100 0 03175   
 03174 TSX +0 07400 4 00113    03175 TXH +3 00000 0 00000    03176 TXH +3 00000 0 00000    03177 TXH +3 00000 0 00746   
 03200 TXH +3 00000 0 00227                                                                                             
                     UPSHFT.                                                        296  LM00572
 03201 TSX +0 07400 4 00114                                                                                             
                     WRWAIT.(TU,TA,RELLOC,TUCARD(27)...28)                          297  LM00573
 03202 TSX +0 07400 4 00100    03203 TXH +3 00000 0 00776    03204 TXH +3 00000 0 00771    03205 TXH +3 00000 0 00757   
 03206 TIX +2 01037 0 00133                                                                                             
                     T'O MON2                                                       298  LM00574
 03207 TRA +0 02000 0 00226                                                                                             
      MONEOF         T'H MON3, FOR J = 0,1,J.G.27                                   299  LM00579
 03210 CLA +0 50000 0 01014    03211 STO +0 60100 0 00731    03212 TRA +0 02000 0 03216    03213 CLA +0 50000 0 00731   
 03214 ADD +0 40000 0 01015    03215 STO +0 60100 0 00731    03216 CLA +0 50000 0 00731    03217 SUB +0 40200 0 01036   
 03220 TZE +0 10000 0 03222    03221 TPL +0 12000 0 03226                                                               
      MON3           TUCARD(J) = $$                                                 300  LM00580
 03222 LXA +0 53400 1 00731    03223 CLA +0 50000 0 01330    03224 STO +0 60100 1 00166    03225 TRA +0 02000 0 03213   
                     BFOPEN.(W,TU,TA,B1(B1+432),B2(B2+432),B3(B3+432),IOERR)        301  LM00581
 03226 CLA +0 50000 0 00271    03227 ADD +0 40000 0 01050    03230 SUB +0 40200 0 03231    03231 TXH +3 00000 0 00271   
 03232 STA +0 62100 0 03253    03233 CLA +0 50000 0 00270    03234 ADD +0 40000 0 01050    03235 SUB +0 40200 0 03236   
 03236 TXH +3 00000 0 00270    03237 STA +0 62100 0 03252    03240 CLA +0 50000 0 00267    03241 ADD +0 40000 0 01050   
 03242 SUB +0 40200 0 03243    03243 TXH +3 00000 0 00267    03244 STA +0 62100 0 03251    03245 TSX +0 07400 4 00007   
 03246 TXH +3 00000 0 01012    03247 TXH +3 00000 0 00776    03250 TXH +3 00000 0 00771    03251 TXH +3 00000 0 00000   
 03252 TXH +3 00000 0 00000    03253 TXH +3 00000 0 00000    03254 TXH +3 00000 0 00225                                 
                     T'H MON4, FOR I = 0,1,I.G.N                                    302  LM00582
 03255 CLA +0 50000 0 01014    03256 STO +0 60100 0 00730    03257 TRA +0 02000 0 03263    03260 CLA +0 50000 0 00730   
 03261 ADD +0 40000 0 01015    03262 STO +0 60100 0 00730    03263 CLA +0 50000 0 00730    03264 SUB +0 40200 0 00746   
 03265 TZE +0 10000 0 03267    03266 TPL +0 12000 0 03322                                                               
                     W'R PROBN(PROBN+I) .NE. 0                                      303  LM00583
 03267 CLA +0 50000 0 00752    03270 ADD +0 40000 0 00730    03271 PAX +0 73400 1 00000    03272 CLA +0 50000 1 00752   
 03273 SUB +0 40200 0 01014    03274 TZE +0 10000 0 03321                                                               
                       TUCARD(27) = PROBN(PROBN+I)                                  304  LM00584
 03275 CLA +0 50000 0 00752    03276 ADD +0 40000 0 00730    03277 PAX +0 73400 2 00000    03300 CLA +0 50000 2 00752   
 03301 STO +0 60100 0 00133                                                                                             
                       TUCARD(26) = PROGN(PROGN+I)                                  305  LM00585
 03302 CLA +0 50000 0 00753    03303 ADD +0 40000 0 00730    03304 PAX +0 73400 2 00000    03305 CLA +0 50000 2 00753   
 03306 STO +0 60100 0 00134                                                                                             
                       TUCARD(13) = DATE                                            306  LM00586
 03307 CLA +0 50000 0 00326    03310 STO +0 60100 0 00151                                                               
                       TUCARD(12) = TIME                                            307  LM00587
 03311 CLA +0 50000 0 00774    03312 STO +0 60100 0 00152                                                               
                       UPSHFT.                                                      308  LM00588
 03313 TSX +0 07400 4 00114                                                                                             
                       BFWRIT.(TU,TA,TUCARD(27)...28,IOERR)                         309  LM00589
 03314 TSX +0 07400 4 00011    03315 TXH +3 00000 0 00776    03316 TXH +3 00000 0 00771    03317 TIX +2 01037 0 00133   
 03320 TXH +3 00000 0 00225                                                                                             
                     E'L                                                            310  LM00590
      MON4           C'E                                                            311  LM00591
 03321 TRA +0 02000 0 03260                                                                                             
                     BFCLOS.(TU,TA,IOERR)                                           312  LM00592
 03322 TSX +0 07400 4 00006    03323 TXH +3 00000 0 00776    03324 TXH +3 00000 0 00771    03325 TXH +3 00000 0 00225   
                     UNLINK.(N1,N2,NULL.)                                           313  LM00593
 03326 TSX +0 07400 4 00075    03327 TXH +3 00000 0 00132    03330 TXH +3 00000 0 00131    03331 TXH +3 00000 0 00045   
                     CHFILE.(N1,N2,1,M0,M0,NULL.)                                   314  LM00594
 03332 TSX +0 07400 4 00015    03333 TXH +3 00000 0 00132    03334 TXH +3 00000 0 00131    03335 TXH +3 00000 0 01015   
 03336 TXH +3 00000 0 00733    03337 TXH +3 00000 0 00733    03340 TXH +3 00000 0 00045                                 
                     DELFIL.(N1,N2,NULL.)                                           315  LM00595
 03341 TSX +0 07400 4 00023    03342 TXH +3 00000 0 00132    03343 TXH +3 00000 0 00131    03344 TXH +3 00000 0 00045   
                     CHFILE.(TU,TA,124K,N1,N2)                                      316  LM00596
 03345 TSX +0 07400 4 00015    03346 TXH +3 00000 0 00776    03347 TXH +3 00000 0 00771    03350 TXH +3 00000 0 01045   
 03351 TXH +3 00000 0 00132    03352 TXH +3 00000 0 00131                                                               
                   E'L                                                              317  LM00597
                 E'E (T0,UPATSW), (T1,NAMESW), (T2,DELTA), (T3,LOC)                 318  LM00619
                 E'E (T4,LHALF), (T5,RHALF), (T6,TEST), (T7,KEYS)                   319  LM00620
                 E'E (TUCARD,PATMES)                                                320  LM00621
                 D'N PATMES(2)                                                      321  LM00622
                 BOOLEAN UPATSW,NAMESW                                              322  LM00623
                 DEFINE UNARY OPERATOR .ENK., PRECEDENCE HIGHER THAN .LS.           323  LM00625
                 MODE STRUCTURE .ENK. 1 TO 1                                        324  LM00626
                 O'R COMBUF(M) .E. $ PATCH$                                         329  LM00632
 03353 TRA +0 02000 0 06504    03354 LXA +0 53400 1 00743    03355 CLA +0 50000 1 00324    03356 SUB +0 40200 0 01314   
 03357 TNZ -0 10000 0 04052                                                                                             
                   M = M+1                                                          330  LM00633
 03360 CLA +0 50000 0 00743    03361 ADD +0 40000 0 01015    03362 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           331  LM00634
 03363 LXA +0 53400 1 00743    03364 CLA +0 50000 1 00324    03365 SUB +0 40200 0 00727    03366 TNZ -0 10000 0 03372   
                     PRFULL.(FMT3...100)                                            332  LM00635
 03367 TSX +0 07400 4 00055    03370 TIX +2 01046 0 00627                                                               
                     V'S FMT3 =$ 'UADMIN PATCH 'LLOC -DELTA- LHALF RHALF$,          333  LM00636
                1    $'* WHERE '=LOC'= IS EITHER AN OCTAL LOCATION, COMMON V$,      333  LM00637
                2    $ARIABLE, '* OR AN ENTRY POINT.  '1 DELTA MAY BE '=+'= $,      333  LM00638
                3    $OR '=-'= LENGTH.'* ('1IF LENGTH ENDS WITH A '=.'=, IT $,      333  LM00639
                4    $IS ASSUMED DECIMAL, OTHERWISE, OCTAL.)$,777777777777K         333  LM00640
 00556     -3 77777 7 77777    00557     +3 33460 6 06060    00560     -2 04623 6 32143    00561     -1 16631 6 22573   
 00562     -3 36046 6 33025    00563     +2 52331 4 42143    00564     -2 44425 2 46024    00565     +3 16260 2 16262   
 00566     +1 37360 3 16360    00567     +2 16014 1 33314    00570     -2 06631 6 33060    00571     +3 06025 4 52462   
 00572     -2 04325 4 52763    00573     -2 07414 0 13126    00574     +2 76330 3 31454    00575     +1 41360 4 32545   
 00576     -0 65160 1 41340    00577     +1 41320 1 41360    00600     +2 17060 2 22560    00601     +2 54363 2 16044   
 00602     -2 06014 0 16024    00603     -0 74631 4 56333    00604     +2 54563 5 17060    00605     -0 65160 2 14560   
 00606     +2 57360 1 45460    00607     +2 15131 2 12243    00610     -0 44446 4 56065    00611     -0 64573 6 02346   
 00612     -0 34623 2 16331    00613     -0 62363 2 14360    00614     +2 55160 2 14560    00615     -2 26025 3 16330   
 00616     -0 62314 1 36031    00617     -1 12560 1 41343    00620     +1 45460 6 63025    00621     +3 02143 2 66060   
 00622     +3 02143 2 66051    00623     -0 36321 4 06043    00624     -0 62360 4 02425    00625     +2 33060 1 44343   
 00626     +3 14560 4 72163    00627     -2 01464 2 12444                                                               
                   O'E                                                              334  LM00641
 03371 TRA +0 02000 0 04051                                                                                             
      PAT1           W'R COMBUF(M) .E. FENCE, T'O ERR2                              335  LM00642
 03372 LXA +0 53400 1 00743    03373 CLA +0 50000 1 00324    03374 SUB +0 40200 0 00122    03375 TNZ -0 10000 0 03377   
 03376 TRA +0 02000 0 00216                                                                                             
                     W'R ZEL.(COMBUF(M)).A.$YYYYYY$ .E. 0                           336  LM00643
 03377 CLA +0 50000 0 00743    03400 SUB +0 40200 0 03401    03401 TXH +3 00000 0 00324    03402 STA +0 62100 0 03404   
 03403 TSX +0 07400 4 00101    03404 TXH +3 00000 0 00000    03405 STO +0 60100 0 07733    03406 CAL -0 50000 0 07733   
 03407 ANA -0 32000 0 01372    03410 SLW +0 60200 0 07733    03411 CLA +0 50000 0 07733    03412 SUB +0 40200 0 01014   
 03413 TNZ -0 10000 0 03426                                                                                             
                       NAMESW = 0B                                                  337  LM00644
 03414 CLA +0 50000 0 01014    03415 STO +0 60100 0 00131                                                               
                       LOC = BCOCT.(COMBUF(M))                                      338  LM00645
 03416 CLA +0 50000 0 00743    03417 SUB +0 40200 0 03420    03420 TXH +3 00000 0 00324    03421 STA +0 62100 0 03423   
 03422 TSX +0 07400 4 00005    03423 TXH +3 00000 0 00000    03424 STO +0 60100 0 00127                                 
                     O'E                                                            339  LM00646
 03425 TRA +0 02000 0 03470                                                                                             
                       NAMESW = 1B                                                  340  LM00647
 03426 CLA +0 50000 0 01015    03427 STO +0 60100 0 00131                                                               
                       PATMES = BZ57.(COMBUF(M))                                    341  LM00648
 03430 CLA +0 50000 0 00743    03431 SUB +0 40200 0 03432    03432 TXH +3 00000 0 00324    03433 STA +0 62100 0 03435   
 03434 TSX +0 07400 4 00013    03435 TXH +3 00000 0 00000    03436 STO +0 60100 0 00166                                 
                       W'R .NOT.UPATSW, PATMES(1) = NULLS                           342  LM00649
 03437 ZET +0 52000 0 00132    03440 TRA +0 02000 0 03443    03441 CLA +0 50000 0 00747    03442 STO +0 60100 0 00165   
                       PATMES(2) = NULLS                                            343  LM00650
 03443 CLA +0 50000 0 00747    03444 STO +0 60100 0 00164                                                               
                       LOC = COMLOC.(LJUST.(COMBUF(M)),PAT2)                        344  LM00651
 03445 CLA +0 50000 0 00743    03446 SUB +0 40200 0 03447    03447 TXH +3 00000 0 00324    03450 STA +0 62100 0 03452   
 03451 TSX +0 07400 4 00042    03452 TXH +3 00000 0 00000    03453 STO +0 60100 0 07733    03454 TSX +0 07400 4 00017   
 03455 TXH +3 00000 0 07733    03456 TXH +3 00000 0 00233    03457 STO +0 60100 0 00127                                 
                       T'O PAT3                                                     345  LM00652
 03460 TRA +0 02000 0 00234                                                                                             
      PAT2             LOC = ENTRY.(COMBUF(M))                                      346  LM00653
 03461 CLA +0 50000 0 00743    03462 SUB +0 40200 0 03463    03463 TXH +3 00000 0 00324    03464 STA +0 62100 0 03466   
 03465 TSX +0 07400 4 00105    03466 TXH +3 00000 0 00000    03467 STO +0 60100 0 00127                                 
                     E'L                                                            347  LM00654
      PAT3           M = M+1                                                        348  LM00655
 03470 CLA +0 50000 0 00743    03471 ADD +0 40000 0 01015    03472 STO +0 60100 0 00743                                 
                     W'R UPATSW, T'O PAT4                                           349  LM00659
 03473 NZT -0 52000 0 00132    03474 TRA +0 02000 0 03476    03475 TRA +0 02000 0 00235                                 
                     W'R (COMBUF(M).E.$     +$ .OR. COMBUF(M).E.$     -$)           350  LM00660
                1      .AND. ZEL.(COMBUF(M+1)).A.$     0$.E.0                       350  LM00661
 03476 CLA +0 50000 0 00743    03477 ADD +0 40000 0 01015    03500 SUB +0 40200 0 03501    03501 TXH +3 00000 0 00324   
 03502 STA +0 62100 0 03504    03503 TSX +0 07400 4 00101    03504 TXH +3 00000 0 00000    03505 STO +0 60100 0 07733   
 03506 CAL -0 50000 0 07733    03507 ANA -0 32000 0 01324    03510 SLW +0 60200 0 07733    03511 CLA +0 50000 0 07733   
 03512 SUB +0 40200 0 01014    03513 TNZ -0 10000 0 03642    03514 LXA +0 53400 1 00743    03515 CLA +0 50000 1 00324   
 03516 SUB +0 40200 0 01327    03517 TZE +0 10000 0 03523    03520 CLA +0 50000 1 00324    03521 SUB +0 40200 0 01326   
 03522 TNZ -0 10000 0 03642                                                                                             
                       W'R COMBUF(M+1).A.77K .E. $00000.$                           351  LM00662
 03523 CLA +0 50000 0 00743    03524 ADD +0 40000 0 01015    03525 PAX +0 73400 1 00000    03526 CAL -0 50000 1 00324   
 03527 ANA -0 32000 0 01041    03530 SLW +0 60200 0 07733    03531 CLA +0 50000 0 07733    03532 SUB +0 40200 0 01036   
 03533 TNZ -0 10000 0 03550                                                                                             
                         DELTA = BCDEC.(COMBUF(M+1).RS.6)                           352  LM00663
 03534 CLA +0 50000 0 00743    03535 ADD +0 40000 0 01015    03536 PAX +0 73400 1 00000    03537 CAL -0 50000 0 01022   
 03540 STA +0 62100 0 03542    03541 CAL -0 50000 1 00324    03542 LGR -0 76500 0 00000    03543 SLW +0 60200 0 07733   
 03544 TSX +0 07400 4 00004    03545 TXH +3 00000 0 07733    03546 STO +0 60100 0 00130                                 
                       O'R ZEL.(COMBUF(M+1)).A.$YYYYYY$ .NE. 0                      353  LM00664
 03547 TRA +0 02000 0 03607    03550 CLA +0 50000 0 00743    03551 ADD +0 40000 0 01015    03552 SUB +0 40200 0 03553   
 03553 TXH +3 00000 0 00324    03554 STA +0 62100 0 03556    03555 TSX +0 07400 4 00101    03556 TXH +3 00000 0 00000   
 03557 STO +0 60100 0 07733    03560 CAL -0 50000 0 07733    03561 ANA -0 32000 0 01372    03562 SLW +0 60200 0 07733   
 03563 CLA +0 50000 0 07733    03564 SUB +0 40200 0 01014    03565 TZE +0 10000 0 03577                                 
                         DELTA = BCDEC.(COMBUF(M+1))                                354  LM00665
 03566 CLA +0 50000 0 00743    03567 ADD +0 40000 0 01015    03570 SUB +0 40200 0 03571    03571 TXH +3 00000 0 00324   
 03572 STA +0 62100 0 03574    03573 TSX +0 07400 4 00004    03574 TXH +3 00000 0 00000    03575 STO +0 60100 0 00130   
                       O'E                                                          355  LM00666
 03576 TRA +0 02000 0 03607                                                                                             
                         DELTA = BCOCT.(COMBUF(M+1))                                356  LM00667
 03577 CLA +0 50000 0 00743    03600 ADD +0 40000 0 01015    03601 SUB +0 40200 0 03602    03602 TXH +3 00000 0 00324   
 03603 STA +0 62100 0 03605    03604 TSX +0 07400 4 00005    03605 TXH +3 00000 0 00000    03606 STO +0 60100 0 00130   
                       E'L                                                          357  LM00668
                       W'R COMBUF(M).E.$     -$, DELTA = -DELTA                     358  LM00669
 03607 LXA +0 53400 1 00743    03610 CLA +0 50000 1 00324    03611 SUB +0 40200 0 01327    03612 TNZ -0 10000 0 03615   
 03613 CLS +0 50200 0 00130    03614 STO +0 60100 0 00130                                                               
                       LOC = LOC + DELTA                                            359  LM00670
 03615 CLA +0 50000 0 00127    03616 ADD +0 40000 0 00130    03617 STO +0 60100 0 00127                                 
                       PATMES(1) = (COMBUF(M).LS.24).V.60575757K                    360  LM00671
 03620 LXA +0 53400 1 00743    03621 CAL -0 50000 0 01035    03622 STA +0 62100 0 03624    03623 CAL -0 50000 1 00324   
 03624 ALS +0 76700 0 00000    03625 ORA -0 50100 0 01062    03626 SLW +0 60200 0 00165                                 
                       PATMES(2) = BZ57.(COMBUF(M+1))                               361  LM00672
 03627 CLA +0 50000 0 00743    03630 ADD +0 40000 0 01015    03631 SUB +0 40200 0 03632    03632 TXH +3 00000 0 00324   
 03633 STA +0 62100 0 03635    03634 TSX +0 07400 4 00013    03635 TXH +3 00000 0 00000    03636 STO +0 60100 0 00164   
                       M = M+2                                                      362  LM00673
 03637 CLA +0 50000 0 00743    03640 ADD +0 40000 0 01016    03641 STO +0 60100 0 00743                                 
                     E'L                                                            363  LM00674
      PAT4           W'R UPATSW, LOC = LOC + USER                                   364  LM00675
 03642 NZT -0 52000 0 00132    03643 TRA +0 02000 0 03647    03644 CLA +0 50000 0 00127    03645 ADD +0 40000 0 01002   
 03646 STO +0 60100 0 00127                                                                                             
                     W'R .NOT. NAMESW                                               365  LM00676
 03647 ZET +0 52000 0 00131    03650 TRA +0 02000 0 03663                                                               
                       PATMES = BZ57.(OCABC.(LOC))                                  366  LM00677
 03651 TSX +0 07400 4 00046    03652 TXH +3 00000 0 00127    03653 STO +0 60100 0 07733    03654 TSX +0 07400 4 00013   
 03655 TXH +3 00000 0 07733    03656 STO +0 60100 0 00166                                                               
                       PATMES(1) = NULLS                                            367  LM00678
 03657 CLA +0 50000 0 00747    03660 STO +0 60100 0 00165                                                               
                       PATMES(2) = NULLS                                            368  LM00679
 03661 CLA +0 50000 0 00747    03662 STO +0 60100 0 00164                                                               
                     E'L                                                            369  LM00680
                     LHALF = COMBUF(M)                                              370  LM00681
 03663 LXA +0 53400 2 00743    03664 CLA +0 50000 2 00324    03665 STO +0 60100 0 00126                                 
                     RHALF = COMBUF(M+1)                                            371  LM00682
 03666 CLA +0 50000 0 00743    03667 ADD +0 40000 0 01015    03670 PAX +0 73400 2 00000    03671 CLA +0 50000 2 00324   
 03672 STO +0 60100 0 00125                                                                                             
                     M = M+2                                                        372  LM00683
 03673 CLA +0 50000 0 00743    03674 ADD +0 40000 0 01016    03675 STO +0 60100 0 00743                                 
                     W'R LHALF.V.RHALF .E. FENCE, T'O ERR2                          373  LM00684
 03676 CAL -0 50000 0 00126    03677 ORA -0 50100 0 00125    03700 SLW +0 60200 0 07733    03701 CLA +0 50000 0 07733   
 03702 SUB +0 40200 0 00122    03703 TNZ -0 10000 0 03705    03704 TRA +0 02000 0 00216                                 
                     W'R COMBUF(M).NE.FENCE, T'O ERR1                               374  LM00685
 03705 LXA +0 53400 1 00743    03706 CLA +0 50000 1 00324    03707 SUB +0 40200 0 00122    03710 TZE +0 10000 0 03712   
 03711 TRA +0 02000 0 00215                                                                                             
                     TEST = GLOC.(LOC)                                              375  LM00686
 03712 TSX +0 07400 4 00037    03713 TXH +3 00000 0 00127    03714 STO +0 60100 0 00124                                 
                     W'R LHALF.E.STAR, LHALF = OCLBC.(TEST)                         376  LM00687
 03715 CLA +0 50000 0 00126    03716 SUB +0 40200 0 00765    03717 TNZ -0 10000 0 03723    03720 TSX +0 07400 4 00047   
 03721 TXH +3 00000 0 00124    03722 STO +0 60100 0 00126                                                               
                     W'R RHALF.E.STAR, RHALF = OCRBC.(TEST)                         377  LM00688
 03723 CLA +0 50000 0 00125    03724 SUB +0 40200 0 00765    03725 TNZ -0 10000 0 03731    03726 TSX +0 07400 4 00050   
 03727 TXH +3 00000 0 00124    03730 STO +0 60100 0 00125                                                               
                     LHALF = ZEL.(LHALF)                                            378  LM00689
 03731 TSX +0 07400 4 00101    03732 TXH +3 00000 0 00126    03733 STO +0 60100 0 00126                                 
                     RHALF = ZEL.(RHALF)                                            379  LM00690
 03734 TSX +0 07400 4 00101    03735 TXH +3 00000 0 00125    03736 STO +0 60100 0 00125                                 
                     W'R (LHALF.V.RHALF).A.$YYYYYY$.NE.0, T'O ERR6                  380  LM00691
 03737 CAL -0 50000 0 00126    03740 ORA -0 50100 0 00125    03741 ANA -0 32000 0 01372    03742 SLW +0 60200 0 07733   
 03743 CLA +0 50000 0 07733    03744 SUB +0 40200 0 01014    03745 TZE +0 10000 0 03747    03746 TRA +0 02000 0 00222   
      PATTST         W'R .ENK.KEYS.A.KEY22 .NE. KEY22 .AND. WHO.NE.$(FIB)$          381  LM00692
 03747 CLA +0 50000 0 01010    03750 SUB +0 40200 0 01376    03751 TZE +0 10000 0 04000    03752 XEC +0 52200 0 01071   
 03753 STQ -0 60000 0 00123    03754 XCL -0 13000 0 00000    03755 ANA -0 32000 0 00732    03756 SLW +0 60200 0 07733   
 03757 CLA +0 50000 0 07733    03760 SUB +0 40200 0 00732    03761 TZE +0 10000 0 04000                                 
                       GETTM.(DATE,TIME)                                            382  LM00693
 03762 TSX +0 07400 4 00036    03763 TXH +3 00000 0 00326    03764 TXH +3 00000 0 00774                                 
                       PRFULL.($'R'1KEY 22 NOT SET AT 'X$,TIME,BLACK)               383  LM00694
 03765 TSX +0 07400 4 00055    03766 TXH +3 00000 0 01110    03767 TXH +3 00000 0 01371    03770 TXH +3 00000 0 01224   
 03771 TXH +3 00000 0 01262    03772 TXH +3 00000 0 00774    03773 TXH +3 00000 0 00275                                 
                       SNOOZE.(10,SLPCMD(2))                                        384  LM00695
 03774 TSX +0 07400 4 00073    03775 TXH +3 00000 0 01026    03776 TXH +3 00000 0 00120                                 
                       T'O PATTST                                                   385  LM00696
 03777 TRA +0 02000 0 00236                                                                                             
                     E'L                                                            386  LM00697
                     PCTL.(3)                                                       387  LM00698
 04000 TSX +0 07400 4 00052    04001 TXH +3 00000 0 01017                                                               
                     PRFULL.(X,WHO(3)...M2,ON,WHO,$ PATCHING 'X$,PATMES...3,        388  LM00699
                1   $'L FROM '8$,OCLBC.(TEST),OCRBC.(TEST),$ TO '8$,                388  LM00700
                2   LHALF,RHALF,$.$)                                                388  LM00701
 04002 TSX +0 07400 4 00050    04003 TXH +3 00000 0 00124    04004 STO +0 60100 0 07733    04005 TSX +0 07400 4 00047   
 04006 TXH +3 00000 0 00124    04007 STO +0 60100 0 07732    04010 TSX +0 07400 4 00055    04011 TXH +3 00000 0 01013   
 04012 TIX +2 00736 0 01005    04013 TXH +3 00000 0 00750    04014 TXH +3 00000 0 01010    04015 TXH +3 00000 0 01314   
 04016 TXH +3 00000 0 01161    04017 TIX +2 01017 0 00166    04020 TXH +3 00000 0 01104    04021 TXH +3 00000 0 01176   
 04022 TXH +3 00000 0 07732    04023 TXH +3 00000 0 07733    04024 TXH +3 00000 0 01333    04025 TXH +3 00000 0 00126   
 04026 TXH +3 00000 0 00125    04027 TXH +3 00000 0 01164                                                               
                     PCTL.(1)                                                       389  LM00702
 04030 TSX +0 07400 4 00052    04031 TXH +3 00000 0 01015                                                               
                     SLOC.((BCOCT.(LHALF).LS.18).V.BCOCT.(RHALF),LOC)               390  LM00709
 04032 TSX +0 07400 4 00005    04033 TXH +3 00000 0 00125    04034 STO +0 60100 0 07733    04035 TSX +0 07400 4 00005   
 04036 TXH +3 00000 0 00126    04037 STO +0 60100 0 07732    04040 CAL -0 50000 0 01034    04041 STA +0 62100 0 04043   
 04042 CAL -0 50000 0 07732    04043 ALS +0 76700 0 00000    04044 ORA -0 50100 0 07733    04045 SLW +0 60200 0 07733   
 04046 TSX +0 07400 4 00072    04047 TXH +3 00000 0 07733    04050 TXH +3 00000 0 00127                                 
                   E'L                                                              391  LM00710
                 E'E (T0,PB)                                                        392  LM00728
                 O'R COMBUF(M) .E. $    PB$                                         393  LM00730
 04051 TRA +0 02000 0 06504    04052 LXA +0 53400 1 00743    04053 CLA +0 50000 1 00324    04054 SUB +0 40200 0 01323   
 04055 TNZ -0 10000 0 04223                                                                                             
                   M = M+1                                                          394  LM00731
 04056 CLA +0 50000 0 00743    04057 ADD +0 40000 0 01015    04060 STO +0 60100 0 00743                                 
                   PB = BCDEC.(COMBUF(M))                                           395  LM00732
 04061 CLA +0 50000 0 00743    04062 SUB +0 40200 0 04063    04063 TXH +3 00000 0 00324    04064 STA +0 62100 0 04066   
 04065 TSX +0 07400 4 00004    04066 TXH +3 00000 0 00000    04067 STO +0 60100 0 00132                                 
                   W'R COMBUF(M) .E. HELP                                           396  LM00733
 04070 LXA +0 53400 1 00743    04071 CLA +0 50000 1 00324    04072 SUB +0 40200 0 00727    04073 TNZ -0 10000 0 04105   
                     PRFULL.(ADMIN...2,CURCOM.(0),$ 'LN USER$)                      397  LM00734
 04074 TSX +0 07400 4 00104    04075 TXH +3 00000 0 01014    04076 STO +0 60100 0 07733    04077 TSX +0 07400 4 00055   
 04100 TIX +2 01016 0 00264    04101 TXH +3 00000 0 07733    04102 TXH +3 00000 0 01253    04103 TXH +3 00000 0 01340   
                   O'R ZEL.(COMBUF(M)).A.$$ .NE. 0 .OR. PB.G.100                    398  LM00735
 04104 TRA +0 02000 0 04222    04105 CLA +0 50000 0 00132    04106 SUB +0 40200 0 01046    04107 TZE +0 10000 0 04111   
 04110 TPL +0 12000 0 04126    04111 CLA +0 50000 0 00743    04112 SUB +0 40200 0 04113    04113 TXH +3 00000 0 00324   
 04114 STA +0 62100 0 04116    04115 TSX +0 07400 4 00101    04116 TXH +3 00000 0 00000    04117 STO +0 60100 0 07733   
 04120 CAL -0 50000 0 07733    04121 ANA -0 32000 0 01330    04122 SLW +0 60200 0 07733    04123 CLA +0 50000 0 07733   
 04124 SUB +0 40200 0 01014    04125 TZE +0 10000 0 04130                                                               
                     T'O ERR0                                                       399  LM00736
 04126 TRA +0 02000 0 00214                                                                                             
                   O'E                                                              400  LM00737
 04127 TRA +0 02000 0 04222                                                                                             
                     M = M+1                                                        401  LM00738
 04130 CLA +0 50000 0 00743    04131 ADD +0 40000 0 01015    04132 STO +0 60100 0 00743                                 
                     GETUSR.(PB0,ERR4,ERR5)                                         402  LM00739
 04133 TSX +0 07400 4 00107    04134 TXH +3 00000 0 00237    04135 TXH +3 00000 0 00220    04136 TXH +3 00000 0 00221   
      PB0            PCTL.(3)                                                       403  LM00740
 04137 TSX +0 07400 4 00052    04140 TXH +3 00000 0 01017                                                               
                     PRFULL.(X,WHO(3)...M2,ON,WHO,$ SETTING PERCENTAGE OF 'X$,      404  LM00741
                1    PROB...2,$ TO 'X$,BZ57.(DEFBC.(PB)),$.$)                       404  LM00742
 04141 TSX +0 07400 4 00021    04142 TXH +3 00000 0 00132    04143 STO +0 60100 0 07733    04144 TSX +0 07400 4 00013   
 04145 TXH +3 00000 0 07733    04146 STO +0 60100 0 07733    04147 TSX +0 07400 4 00055    04150 TXH +3 00000 0 01013   
 04151 TIX +2 00736 0 01005    04152 TXH +3 00000 0 00750    04153 TXH +3 00000 0 01010    04154 TXH +3 00000 0 01332   
 04155 TXH +3 00000 0 01210    04156 TXH +3 00000 0 01127    04157 TXH +3 00000 0 01146    04160 TXH +3 00000 0 01367   
 04161 TIX +2 01016 0 00117    04162 TXH +3 00000 0 01334    04163 TXH +3 00000 0 07733    04164 TXH +3 00000 0 01164   
                     PCTL.(1)                                                       405  LM00743
 04165 TSX +0 07400 4 00052    04166 TXH +3 00000 0 01015                                                               
                     SLOC.(PB,COMMON.($PB$)+USR)                                    406  LM00748
 04167 TSX +0 07400 4 00103    04170 TXH +3 00000 0 01226    04171 ADD +0 40000 0 01004    04172 STO +0 60100 0 07733   
 04173 TSX +0 07400 4 00072    04174 TXH +3 00000 0 00132    04175 TXH +3 00000 0 07733                                 
                     SLOC.(GLOC.(COMMON.(TIMNOW)),COMMON.(STRTIM)+USR)              407  LM00749
 04176 TSX +0 07400 4 00103    04177 TXH +3 00000 0 00767    04200 ADD +0 40000 0 01004    04201 STO +0 60100 0 07733   
 04202 TSX +0 07400 4 00103    04203 TXH +3 00000 0 00775    04204 STO +0 60100 0 07732    04205 TSX +0 07400 4 00037   
 04206 TXH +3 00000 0 07732    04207 STO +0 60100 0 07732    04210 TSX +0 07400 4 00072    04211 TXH +3 00000 0 07732   
 04212 TXH +3 00000 0 07733                                                                                             
                     SLOC.(0,COMMON.(WRKTIM)+USR)                                   408  LM00750
 04213 TSX +0 07400 4 00103    04214 TXH +3 00000 0 01011    04215 ADD +0 40000 0 01004    04216 STO +0 60100 0 07733   
 04217 TSX +0 07400 4 00072    04220 TXH +3 00000 0 01014    04221 TXH +3 00000 0 07733                                 
                   E'L                                                              409  LM00751
                 O'R COMBUF(M) .E. $PRNTON$                                         410  LM00769
 04222 TRA +0 02000 0 06504    04223 LXA +0 53400 1 00743    04224 CLA +0 50000 1 00324    04225 SUB +0 40200 0 01230   
 04226 TNZ -0 10000 0 04265                                                                                             
                   M = M+1                                                          411  LM00770
 04227 CLA +0 50000 0 00743    04230 ADD +0 40000 0 01015    04231 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           412  LM00771
 04232 LXA +0 53400 1 00743    04233 CLA +0 50000 1 00324    04234 SUB +0 40200 0 00727    04235 TNZ -0 10000 0 04250   
                     PRFULL.(ADMIN...2,CURCOM.(0),$ 'L-NAME1 NAME2-$)               413  LM00772
 04236 TSX +0 07400 4 00104    04237 TXH +3 00000 0 01014    04240 STO +0 60100 0 07733    04241 TSX +0 07400 4 00055   
 04242 TIX +2 01016 0 00264    04243 TXH +3 00000 0 07733    04244 TXH +3 00000 0 01251    04245 TXH +3 00000 0 01173   
 04246 TXH +3 00000 0 01174                                                                                             
                   O'E                                                              414  LM00773
 04247 TRA +0 02000 0 04264                                                                                             
                     PRNTON.(COMBUF(M),COMBUF(M+1))                                 415  LM00774
 04250 CLA +0 50000 0 00743    04251 ADD +0 40000 0 01015    04252 SUB +0 40200 0 04253    04253 TXH +3 00000 0 00324   
 04254 STA +0 62100 0 04263    04255 CLA +0 50000 0 00743    04256 SUB +0 40200 0 04257    04257 TXH +3 00000 0 00324   
 04260 STA +0 62100 0 04262    04261 TSX +0 07400 4 00056    04262 TXH +3 00000 0 00000    04263 TXH +3 00000 0 00000   
                   E'L                                                              416  LM00775
                 E'E (T2,NOTLIN), (T3,FOUND), (T4,SHFT), (T5,TAU)                   417  LM00794
                 E'E (TUCARD(27),USED(5)), (TUCARD(21),ALTD(5))                     418  LM00795
                 D'N ALTD(0),USED(0)                                                419  LM00796
                 BOOLEAN NOTLIN, FOUND                                              420  LM00797
                 O'R COMBUF(M) .E. $RDTIMU$                                         421  LM00799
 04264 TRA +0 02000 0 06504    04265 LXA +0 53400 1 00743    04266 CLA +0 50000 1 00324    04267 SUB +0 40200 0 01234   
 04270 TNZ -0 10000 0 04717                                                                                             
                   M = M+1                                                          422  LM00800
 04271 CLA +0 50000 0 00743    04272 ADD +0 40000 0 01015    04273 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           423  LM00801
 04274 LXA +0 53400 1 00743    04275 CLA +0 50000 1 00324    04276 SUB +0 40200 0 00727    04277 TNZ -0 10000 0 04313   
                     PRFULL.(ADMIN...2,CURCOM.(0),$ '4USER -NAME1- -NAME2-$)        424  LM00802
 04300 TSX +0 07400 4 00104    04301 TXH +3 00000 0 01014    04302 STO +0 60100 0 07733    04303 TSX +0 07400 4 00055   
 04304 TIX +2 01016 0 00264    04305 TXH +3 00000 0 07733    04306 TXH +3 00000 0 01250    04307 TXH +3 00000 0 01242   
 04310 TXH +3 00000 0 01140    04311 TXH +3 00000 0 01120                                                               
                   O'E                                                              425  LM00803
 04312 TRA +0 02000 0 04716                                                                                             
                     NOTLIN = 1B                                                    426  LM00804
 04313 CLA +0 50000 0 01015    04314 STO +0 60100 0 00130                                                               
                     GETUSR.(RTU0,RTU1,ERR5)                                        427  LM00805
 04315 TSX +0 07400 4 00107    04316 TXH +3 00000 0 00241    04317 TXH +3 00000 0 00242    04320 TXH +3 00000 0 00221   
      RTU0           NOTLIN = 0B                                                    428  LM00806
 04321 CLA +0 50000 0 01014    04322 STO +0 60100 0 00130                                                               
      RTU1           W'R COMBUF(M) .E. FENCE                                        429  LM00807
 04323 LXA +0 53400 1 00743    04324 CLA +0 50000 1 00324    04325 SUB +0 40200 0 00122    04326 TNZ -0 10000 0 04334   
                       NONINT.                                                      430  LM00808
 04327 TSX +0 07400 4 00112                                                                                             
                       ATTACH.(M1416,CMFL02)                                        431  LM00809
 04330 TSX +0 07400 4 00002    04331 TXH +3 00000 0 00734    04332 TXH +3 00000 0 00277                                 
                       T'O RTU2                                                     432  LM00810
 04333 TRA +0 02000 0 00243                                                                                             
                     E'L                                                            433  LM00811
                     TU = COMBUF(M)                                                 434  LM00812
 04334 LXA +0 53400 2 00743    04335 CLA +0 50000 2 00324    04336 STO +0 60100 0 00776                                 
                     M = M+1                                                        435  LM00813
 04337 CLA +0 50000 0 00743    04340 ADD +0 40000 0 01015    04341 STO +0 60100 0 00743                                 
                     W'R COMBUF(M) .NE. FENCE                                       436  LM00814
 04342 LXA +0 53400 1 00743    04343 CLA +0 50000 1 00324    04344 SUB +0 40200 0 00122    04345 TZE +0 10000 0 04354   
                       TA = COMBUF(M)                                               437  LM00815
 04346 LXA +0 53400 2 00743    04347 CLA +0 50000 2 00324    04350 STO +0 60100 0 00771                                 
                       M = M+1                                                      438  LM00816
 04351 CLA +0 50000 0 00743    04352 ADD +0 40000 0 01015    04353 STO +0 60100 0 00743                                 
                     E'L                                                            439  LM00817
                     W'R COMBUF(M) .NE. FENCE, T'O ERR1                             440  LM00818
 04354 LXA +0 53400 1 00743    04355 CLA +0 50000 1 00324    04356 SUB +0 40200 0 00122    04357 TZE +0 10000 0 04361   
 04360 TRA +0 02000 0 00215                                                                                             
      RTU2           STATUS = R                                                     441  LM00820
 04361 CLA +0 50000 0 00763    04362 STO +0 60100 0 00766                                                               
                     READTU.(PROB,PROG,1,RTU3)                                      442  LM00821
 04363 TSX +0 07400 4 00113    04364 TXH +3 00000 0 00117    04365 TXH +3 00000 0 00116    04366 TXH +3 00000 0 01015   
 04367 TXH +3 00000 0 00244                                                                                             
                     NAME = TUCARD(25)                                              443  LM00822
 04370 CLA +0 50000 0 00135    04371 STO +0 60100 0 00744                                                               
                     FOUND = 1B                                                     444  LM00823
 04372 CLA +0 50000 0 01015    04373 STO +0 60100 0 00127                                                               
                     BFCLOS.(TU,TA,RTU3)                                            445  LM00824
 04374 TSX +0 07400 4 00006    04375 TXH +3 00000 0 00776    04376 TXH +3 00000 0 00771    04377 TXH +3 00000 0 00244   
      RTU3           INT.                                                           446  LM00826
 04400 TSX +0 07400 4 00111                                                                                             
                     W'R NOTLIN .AND. .NOT.FOUND                                    447  LM00827
 04401 ZET +0 52000 0 00127    04402 TRA +0 02000 0 04415    04403 NZT -0 52000 0 00130    04404 TRA +0 02000 0 04415   
                       PRFULL.($'1NEVER HEARD OF 'X$,PROB...2)                      448  LM00828
 04405 TSX +0 07400 4 00055    04406 TXH +3 00000 0 01075    04407 TXH +3 00000 0 01241    04410 TXH +3 00000 0 01136   
 04411 TXH +3 00000 0 01367    04412 TIX +2 01016 0 00117                                                               
                       T'O OUT                                                      449  LM00829
 04413 TRA +0 02000 0 00231                                                                                             
                     O'R NOTLIN                                                     450  LM00830
 04414 TRA +0 02000 0 04545    04415 NZT -0 52000 0 00130    04416 TRA +0 02000 0 04451                                 
                       T'H RTU4, FOR I = 1,1,I.G.5                                  451  LM00831
 04417 CLA +0 50000 0 01015    04420 STO +0 60100 0 00730    04421 TRA +0 02000 0 04425    04422 CLA +0 50000 0 00730   
 04423 ADD +0 40000 0 01015    04424 STO +0 60100 0 00730    04425 CLA +0 50000 0 00730    04426 SUB +0 40200 0 01021   
 04427 TZE +0 10000 0 04431    04430 TPL +0 12000 0 04450                                                               
                         ALTD(I) = 0                                                452  LM00832
 04431 LXA +0 53400 1 00730    04432 CLA +0 50000 0 01014    04433 STO +0 60100 1 00146                                 
                         USED(I) = BCDEC.(TUCARD(10-I))*60                          453  LM00833
 04434 CLA +0 50000 0 01026    04435 SUB +0 40200 0 00730    04436 SUB +0 40200 0 04437    04437 TXH +3 00000 0 00166   
 04440 STA +0 62100 0 04442    04441 TSX +0 07400 4 00004    04442 TXH +3 00000 0 00000    04443 XCA +0 13100 0 00000   
 04444 MPY +0 20000 0 01040    04445 LXA +0 53400 1 00730    04446 STQ -0 60000 1 00140                                 
      RTU4             C'E                                                          454  LM00834
 04447 TRA +0 02000 0 04422                                                                                             
                     O'E                                                            455  LM00835
 04450 TRA +0 02000 0 04545                                                                                             
                       TAULOC = COMMON.(TAU5)                                       456  LM00836
 04451 TSX +0 07400 4 00103    04452 TXH +3 00000 0 00773    04453 STO +0 60100 0 00124                                 
                       T'H RTU5, FOR I = 4,-1,I.L.0                                 457  LM00837
 04454 CLA +0 50000 0 01020    04455 STO +0 60100 0 00730    04456 TRA +0 02000 0 04462    04457 CLS +0 50200 0 01015   
 04460 ADD +0 40000 0 00730    04461 STO +0 60100 0 00730    04462 CLA +0 50000 0 00730    04463 SUB +0 40200 0 01014   
 04464 TZE +0 10000 0 04466    04465 TMI -0 12000 0 04545                                                               
                         TAU = GLOC.(TAULOC+I*(N+1)+USR)                            458  LM00838
 04466 CLA +0 50000 0 00746    04467 ADD +0 40000 0 01015    04470 XCA +0 13100 0 00000    04471 MPY +0 20000 0 00730   
 04472 XCA +0 13100 0 00000    04473 ADD +0 40000 0 00124    04474 ADD +0 40000 0 01004    04475 STO +0 60100 0 07733   
 04476 TSX +0 07400 4 00037    04477 TXH +3 00000 0 07733    04500 STO +0 60100 0 00125                                 
                         USED(5-I) = TAU.A.17777777K                                459  LM00839
 04501 CAL -0 50000 0 00125    04502 ANA -0 32000 0 01061    04503 SLW +0 60200 0 07733    04504 CLA +0 50000 0 01021   
 04505 SUB +0 40200 0 00730    04506 PAX +0 73400 1 00000    04507 CLA +0 50000 0 07733    04510 STO +0 60100 1 00140   
                         ALTD(5-I) = TAU.RS.14                                      460  LM00840
 04511 CAL -0 50000 0 01031    04512 STA +0 62100 0 04514    04513 CAL -0 50000 0 00125    04514 LGR -0 76500 0 00000   
 04515 SLW +0 60200 0 07733    04516 CLA +0 50000 0 01021    04517 SUB +0 40200 0 00730    04520 PAX +0 73400 1 00000   
 04521 CLA +0 50000 0 07733    04522 STO +0 60100 1 00146                                                               
                         W'R ALTD(5-I).NE.0, ALTD(5-I)=ALTD(5-I).V.377K             461  LM00841
 04523 CLA +0 50000 0 01021    04524 SUB +0 40200 0 00730    04525 PAX +0 73400 1 00000    04526 CLA +0 50000 1 00146   
 04527 SUB +0 40200 0 01014    04530 TZE +0 10000 0 04544    04531 CLA +0 50000 0 01021    04532 SUB +0 40200 0 00730   
 04533 PAX +0 73400 1 00000    04534 CAL -0 50000 1 00146    04535 ORA -0 50100 0 01047    04536 SLW +0 60200 0 07733   
 04537 CLA +0 50000 0 01021    04540 SUB +0 40200 0 00730    04541 PAX +0 73400 1 00000    04542 CLA +0 50000 0 07733   
 04543 STO +0 60100 1 00146                                                                                             
      RTU5               C'E                                                        462  LM00842
 04544 TRA +0 02000 0 04457                                                                                             
                     E'L                                                            463  LM00843
                     PRFULL.(X,NAME,X,PROB...2)                                     464  LM00844
 04545 TSX +0 07400 4 00055    04546 TXH +3 00000 0 01013    04547 TXH +3 00000 0 00744    04550 TXH +3 00000 0 01013   
 04551 TIX +2 01016 0 00117                                                                                             
                     T'H RTU6, FOR I = 1,1,I.G.5                                    465  LM00845
 04552 CLA +0 50000 0 01015    04553 STO +0 60100 0 00730    04554 TRA +0 02000 0 04560    04555 CLA +0 50000 0 00730   
 04556 ADD +0 40000 0 01015    04557 STO +0 60100 0 00730    04560 CLA +0 50000 0 00730    04561 SUB +0 40200 0 01021   
 04562 TZE +0 10000 0 04564    04563 TPL +0 12000 0 04641                                                               
                     W'R ALTD(I).V.USED(I) .NE. 0                                   466  LM00846
 04564 LXA +0 53400 1 00730    04565 LXA +0 53400 2 00730    04566 CAL -0 50000 1 00146    04567 ORA -0 50100 2 00140   
 04570 SLW +0 60200 0 07733    04571 CLA +0 50000 0 07733    04572 SUB +0 40200 0 01014    04573 TZE +0 10000 0 04640   
                       SHFT = DEFBC.(I).LS.12.V.$0000  $                            467  LM00847
 04574 TSX +0 07400 4 00021    04575 TXH +3 00000 0 00730    04576 STO +0 60100 0 07733    04577 CAL -0 50000 0 01027   
 04600 STA +0 62100 0 04602    04601 CAL -0 50000 0 07733    04602 ALS +0 76700 0 00000    04603 ORA -0 50100 0 01053   
 04604 SLW +0 60200 0 00126                                                                                             
                       PRFULL.(BZEL.(SHFT),BZEL.(MINS.(ALTD(I))),                   468  LM00848
                1        BZEL.(MINS.(USED(I))))                                     468  LM00849
 04605 CLA +0 50000 0 00730    04606 SUB +0 40200 0 04607    04607 TXH +3 00000 0 00140    04610 STA +0 62100 0 04612   
 04611 TSX +0 07400 4 00043    04612 TXH +3 00000 0 00000    04613 STO +0 60100 0 07733    04614 TSX +0 07400 4 00014   
 04615 TXH +3 00000 0 07733    04616 STO +0 60100 0 07733    04617 CLA +0 50000 0 00730    04620 SUB +0 40200 0 04621   
 04621 TXH +3 00000 0 00146    04622 STA +0 62100 0 04624    04623 TSX +0 07400 4 00043    04624 TXH +3 00000 0 00000   
 04625 STO +0 60100 0 07732    04626 TSX +0 07400 4 00014    04627 TXH +3 00000 0 07732    04630 STO +0 60100 0 07732   
 04631 TSX +0 07400 4 00014    04632 TXH +3 00000 0 00126    04633 STO +0 60100 0 07734    04634 TSX +0 07400 4 00055   
 04635 TXH +3 00000 0 07734    04636 TXH +3 00000 0 07732    04637 TXH +3 00000 0 07733                                 
                     E'L                                                            469  LM00850
      RTU6           C'E                                                            470  LM00851
 04640 TRA +0 02000 0 04555                                                                                             
                     W'R FOUND, PRFULL.($'1LAST LOGOUT 'X$,                         471  LM00852
                1  TUCARD(13).A.7777K8.V.$00/00$.V.(TUCARD(13).RS.6.A.7777K2),      471  LM00853
                2    TUCARD(12),$ FROM $,X,TUCARD(11),$.$)                          471  LM00854
 04641 NZT -0 52000 0 00127    04642 TRA +0 02000 0 04670    04643 CAL -0 50000 0 01022    04644 STA +0 62100 0 04646   
 04645 CAL -0 50000 0 00151    04646 LGR -0 76500 0 00000    04647 ANA -0 32000 0 01057    04650 SLW +0 60200 0 07734   
 04651 CAL -0 50000 0 00151    04652 ANA -0 32000 0 01400    04653 ORA -0 50100 0 01063    04654 ORA -0 50100 0 07734   
 04655 SLW +0 60200 0 07734    04656 TSX +0 07400 4 00055    04657 TXH +3 00000 0 01073    04660 TXH +3 00000 0 01305   
 04661 TXH +3 00000 0 01355    04662 TXH +3 00000 0 07734    04663 TXH +3 00000 0 00152    04664 TXH +3 00000 0 01272   
 04665 TXH +3 00000 0 01013    04666 TXH +3 00000 0 00153    04667 TXH +3 00000 0 01164                                 
                     W'R .NOT.NOTLIN, PRFULL.($'1NOW ON UNIT 'X$,                   472  LM00858
                1    GLOC.(COMMON.(UNITID)+USR),$ LINE $,BZ57.(DEFBC.(USR)))        472  LM00859
 04670 ZET +0 52000 0 00130    04671 TRA +0 02000 0 04716    04672 TSX +0 07400 4 00021    04673 TXH +3 00000 0 01004   
 04674 STO +0 60100 0 07734    04675 TSX +0 07400 4 00013    04676 TXH +3 00000 0 07734    04677 STO +0 60100 0 07734   
 04700 TSX +0 07400 4 00103    04701 TXH +3 00000 0 01000    04702 ADD +0 40000 0 01004    04703 STO +0 60100 0 07733   
 04704 TSX +0 07400 4 00037    04705 TXH +3 00000 0 07733    04706 STO +0 60100 0 07733    04707 TSX +0 07400 4 00055   
 04710 TXH +3 00000 0 01076    04711 TXH +3 00000 0 01221    04712 TXH +3 00000 0 01355    04713 TXH +3 00000 0 07733   
 04714 TXH +3 00000 0 01304    04715 TXH +3 00000 0 07734                                                               
                   E'L                                                              473  LM00863
                 E'E (OUSED,USED(1)), (OALTD,ALTD(1))                               474  LM00883
                 E'E (NUSED,USED(2)), (NALTD,ALTD(2))                               475  LM00884
                 O'R COMBUF(M) .E. $SETTAU$                                         476  LM00886
 04716 TRA +0 02000 0 06504    04717 LXA +0 53400 1 00743    04720 CLA +0 50000 1 00324    04721 SUB +0 40200 0 01342   
 04722 TNZ -0 10000 0 05247                                                                                             
                   M = M+1                                                          477  LM00887
 04723 CLA +0 50000 0 00743    04724 ADD +0 40000 0 01015    04725 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           478  LM00888
 04726 LXA +0 53400 1 00743    04727 CLA +0 50000 1 00324    04730 SUB +0 40200 0 00727    04731 TNZ -0 10000 0 04745   
                     PRFULL.(ADMIN...2,CURCOM.(0),$ 'LSHIFT ALTD USED USER$)        479  LM00889
 04732 TSX +0 07400 4 00104    04733 TXH +3 00000 0 01014    04734 STO +0 60100 0 07734    04735 TSX +0 07400 4 00055   
 04736 TIX +2 01016 0 00264    04737 TXH +3 00000 0 07734    04740 TXH +3 00000 0 01254    04741 TXH +3 00000 0 01152   
 04742 TXH +3 00000 0 01137    04743 TXH +3 00000 0 01335                                                               
                   O'E                                                              480  LM00890
 04744 TRA +0 02000 0 05246                                                                                             
                     SHFT = COMBUF(M)                                               481  LM00891
 04745 LXA +0 53400 2 00743    04746 CLA +0 50000 2 00324    04747 STO +0 60100 0 00126                                 
                     ALTD = COMBUF(M+1)                                             482  LM00892
 04750 CLA +0 50000 0 00743    04751 ADD +0 40000 0 01015    04752 PAX +0 73400 2 00000    04753 CLA +0 50000 2 00324   
 04754 STO +0 60100 0 00146                                                                                             
                     USED = COMBUF(M+2)                                             483  LM00893
 04755 CLA +0 50000 0 00743    04756 ADD +0 40000 0 01016    04757 PAX +0 73400 2 00000    04760 CLA +0 50000 2 00324   
 04761 STO +0 60100 0 00140                                                                                             
                     M = M+3                                                        484  LM00894
 04762 CLA +0 50000 0 00743    04763 ADD +0 40000 0 01017    04764 STO +0 60100 0 00743                                 
                     W'R SHFT.V.ALTD.V.USED .E. FENCE, T'O ERR2                     485  LM00895
 04765 CAL -0 50000 0 00126    04766 ORA -0 50100 0 00146    04767 ORA -0 50100 0 00140    04770 SLW +0 60200 0 07734   
 04771 CLA +0 50000 0 07734    04772 SUB +0 40200 0 00122    04773 TNZ -0 10000 0 04775    04774 TRA +0 02000 0 00216   
                     SHFT = BCDEC.(SHFT)                                            486  LM00896
 04775 TSX +0 07400 4 00004    04776 TXH +3 00000 0 00126    04777 STO +0 60100 0 00126                                 
                     W'R SHFT.E.0 .OR. SHFT.G.5, T'O ERR0                           487  LM00897
 05000 CLA +0 50000 0 00126    05001 SUB +0 40200 0 01021    05002 TZE +0 10000 0 05004    05003 TPL +0 12000 0 05007   
 05004 CLA +0 50000 0 00126    05005 SUB +0 40200 0 01014    05006 TNZ -0 10000 0 05010    05007 TRA +0 02000 0 00214   
                     GETUSR.(SET0,ERR4,ERR5)                                        488  LM00898
 05010 TSX +0 07400 4 00107    05011 TXH +3 00000 0 00245    05012 TXH +3 00000 0 00220    05013 TXH +3 00000 0 00221   
      SET0           TAULOC = COMMON.(TAU1) - (SHFT-1)*(N+1) + USR                  489  LM00899
 05014 CLA +0 50000 0 00746    05015 ADD +0 40000 0 01015    05016 STO +0 60100 0 07734    05017 CLA +0 50000 0 00126   
 05020 SUB +0 40200 0 01015    05021 XCA +0 13100 0 00000    05022 MPY +0 20000 0 07734    05023 STQ -0 60000 0 07734   
 05024 TSX +0 07400 4 00103    05025 TXH +3 00000 0 00772    05026 SUB +0 40200 0 07734    05027 ADD +0 40000 0 01004   
 05030 STO +0 60100 0 00124                                                                                             
                     TAU = GLOC.(TAULOC)                                            490  LM00900
 05031 TSX +0 07400 4 00037    05032 TXH +3 00000 0 00124    05033 STO +0 60100 0 00125                                 
                     OUSED = TAU.A.17777777K                                        491  LM00901
 05034 CAL -0 50000 0 00125    05035 ANA -0 32000 0 01061    05036 SLW +0 60200 0 00137                                 
                     OALTD = TAU.RS.14.V.377K                                       492  LM00902
 05037 CAL -0 50000 0 01031    05040 STA +0 62100 0 05042    05041 CAL -0 50000 0 00125    05042 LGR -0 76500 0 00000   
 05043 ORA -0 50100 0 01047    05044 SLW +0 60200 0 00145                                                               
                     W'R USED .E. STAR                                              493  LM00904
 05045 CLA +0 50000 0 00140    05046 SUB +0 40200 0 00765    05047 TNZ -0 10000 0 05053                                 
                       NUSED = OUSED                                                494  LM00905
 05050 CLA +0 50000 0 00137    05051 STO +0 60100 0 00136                                                               
                     O'E                                                            495  LM00906
 05052 TRA +0 02000 0 05072                                                                                             
                       W'R ZEL.(USED).A.$$.NE.0, T'O ERR0                           496  LM00907
 05053 TSX +0 07400 4 00101    05054 TXH +3 00000 0 00140    05055 STO +0 60100 0 07734    05056 CAL -0 50000 0 07734   
 05057 ANA -0 32000 0 01330    05060 SLW +0 60200 0 07734    05061 CLA +0 50000 0 07734    05062 SUB +0 40200 0 01014   
 05063 TZE +0 10000 0 05065    05064 TRA +0 02000 0 00214                                                               
                       NUSED = BCDEC.(USED) * 3600                                  497  LM00908
 05065 TSX +0 07400 4 00004    05066 TXH +3 00000 0 00140    05067 XCA +0 13100 0 00000    05070 MPY +0 20000 0 01054   
 05071 STQ -0 60000 0 00136                                                                                             
                     E'L                                                            498  LM00909
                     W'R ALTD .E. STAR                                              499  LM00911
 05072 CLA +0 50000 0 00146    05073 SUB +0 40200 0 00765    05074 TNZ -0 10000 0 05100                                 
                       NALTD = OALTD                                                500  LM00912
 05075 CLA +0 50000 0 00145    05076 STO +0 60100 0 00144                                                               
                     O'E                                                            501  LM00913
 05077 TRA +0 02000 0 05117                                                                                             
                       W'R ZEL.(ALTD).A.$$ .NE. 0, T'O ERR0                         502  LM00914
 05100 TSX +0 07400 4 00101    05101 TXH +3 00000 0 00146    05102 STO +0 60100 0 07734    05103 CAL -0 50000 0 07734   
 05104 ANA -0 32000 0 01330    05105 SLW +0 60200 0 07734    05106 CLA +0 50000 0 07734    05107 SUB +0 40200 0 01014   
 05110 TZE +0 10000 0 05112    05111 TRA +0 02000 0 00214                                                               
                       NALTD = BCDEC.(ALTD) * 3600                                  503  LM00915
 05112 TSX +0 07400 4 00004    05113 TXH +3 00000 0 00146    05114 XCA +0 13100 0 00000    05115 MPY +0 20000 0 01054   
 05116 STQ -0 60000 0 00144                                                                                             
                     E'L                                                            504  LM00916
                     PCTL.(3)                                                       505  LM00918
 05117 TSX +0 07400 4 00052    05120 TXH +3 00000 0 01017                                                               
                     PRFULL.(X,WHO(3)...M2,ON,WHO,$ SETTING '3TAU'X$,               506  LM00919
                1    BZ57.(DEFBC.(SHFT)),$ OF'X$,PROB...2,$ FROM $,                 506  LM00920
                2    BZ57.(DEFBC.(OALTD/3600)),BL,BZ57.(DEFBC.(OUSED/3600)),        506  LM00921
                3    $ TO '8$,BZ57.(DEFBC.(NALTD/3600)),BL,                         506  LM00922
                4    BZ57.(DEFBC.(NUSED/3600)),$.$)                                 506  LM00923
 05121 LDQ +0 56000 0 00136    05122 PXD -0 75400 0 00000    05123 LLS +0 76300 0 00000    05124 DVP +0 22100 0 01054   
 05125 STQ -0 60000 0 07734    05126 TSX +0 07400 4 00021    05127 TXH +3 00000 0 07734    05130 STO +0 60100 0 07734   
 05131 TSX +0 07400 4 00013    05132 TXH +3 00000 0 07734    05133 STO +0 60100 0 07734    05134 LDQ +0 56000 0 00144   
 05135 PXD -0 75400 0 00000    05136 LLS +0 76300 0 00000    05137 DVP +0 22100 0 01054    05140 STQ -0 60000 0 07733   
 05141 TSX +0 07400 4 00021    05142 TXH +3 00000 0 07733    05143 STO +0 60100 0 07733    05144 TSX +0 07400 4 00013   
 05145 TXH +3 00000 0 07733    05146 STO +0 60100 0 07733    05147 LDQ +0 56000 0 00137    05150 PXD -0 75400 0 00000   
 05151 LLS +0 76300 0 00000    05152 DVP +0 22100 0 01054    05153 STQ -0 60000 0 07732    05154 TSX +0 07400 4 00021   
 05155 TXH +3 00000 0 07732    05156 STO +0 60100 0 07732    05157 TSX +0 07400 4 00013    05160 TXH +3 00000 0 07732   
 05161 STO +0 60100 0 07732    05162 LDQ +0 56000 0 00145    05163 PXD -0 75400 0 00000    05164 LLS +0 76300 0 00000   
 05165 DVP +0 22100 0 01054    05166 STQ -0 60000 0 07735    05167 TSX +0 07400 4 00021    05170 TXH +3 00000 0 07735   
 05171 STO +0 60100 0 07735    05172 TSX +0 07400 4 00013    05173 TXH +3 00000 0 07735    05174 STO +0 60100 0 07735   
 05175 TSX +0 07400 4 00021    05176 TXH +3 00000 0 00126    05177 STO +0 60100 0 07736    05200 TSX +0 07400 4 00013   
 05201 TXH +3 00000 0 07736    05202 STO +0 60100 0 07736    05203 TSX +0 07400 4 00055    05204 TXH +3 00000 0 01013   
 05205 TIX +2 00736 0 01005    05206 TXH +3 00000 0 00750    05207 TXH +3 00000 0 01010    05210 TXH +3 00000 0 01332   
 05211 TXH +3 00000 0 01207    05212 TXH +3 00000 0 01125    05213 TXH +3 00000 0 07736    05214 TXH +3 00000 0 01313   
 05215 TIX +2 01016 0 00117    05216 TXH +3 00000 0 01272    05217 TXH +3 00000 0 07735    05220 TXH +3 00000 0 00276   
 05221 TXH +3 00000 0 07732    05222 TXH +3 00000 0 01333    05223 TXH +3 00000 0 07733    05224 TXH +3 00000 0 00276   
 05225 TXH +3 00000 0 07734    05226 TXH +3 00000 0 01164                                                               
                       PCTL.(1)                                                     507  LM00924
 05227 TSX +0 07400 4 00052    05230 TXH +3 00000 0 01015                                                               
                     SLOC.(NALTD.LS.14.A.77776K7.V.NUSED.A.17777777K,TAULOC)        508  LM00929
 05231 CAL -0 50000 0 00136    05232 ANA -0 32000 0 01061    05233 SLW +0 60200 0 07736    05234 CAL -0 50000 0 01031   
 05235 STA +0 62100 0 05237    05236 CAL -0 50000 0 00144    05237 ALS +0 76700 0 00000    05240 ANA -0 32000 0 01401   
 05241 ORA -0 50100 0 07736    05242 SLW +0 60200 0 07736    05243 TSX +0 07400 4 00072    05244 TXH +3 00000 0 07736   
 05245 TXH +3 00000 0 00124                                                                                             
                   E'L                                                              509  LM00931
                 E'E (OLDM,T0)                                                      510  LM00949
                 O'R COMBUF(M) .E. $   SPY$                                         511  LM00951
 05246 TRA +0 02000 0 06504    05247 LXA +0 53400 1 00743    05250 CLA +0 50000 1 00324    05251 SUB +0 40200 0 01331   
 05252 TNZ -0 10000 0 05373                                                                                             
                   M = M+1                                                          512  LM00952
 05253 CLA +0 50000 0 00743    05254 ADD +0 40000 0 01015    05255 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           513  LM00953
 05256 LXA +0 53400 1 00743    05257 CLA +0 50000 1 00324    05260 SUB +0 40200 0 00727    05261 TNZ -0 10000 0 05267   
                     PRFULL.($'UADMIN SPY 'LUSER$)                                  514  LM00954
 05262 TSX +0 07400 4 00055    05263 TXH +3 00000 0 01117    05264 TXH +3 00000 0 01213    05265 TXH +3 00000 0 01105   
                   O'E                                                              515  LM00955
 05266 TRA +0 02000 0 05372                                                                                             
                     OLDM = M                                                       516  LM00956
 05267 CLA +0 50000 0 00743    05270 STO +0 60100 0 00132                                                               
      SPY1           GETUSR.(ERR3,SPY3,ERR5)                                        517  LM00957
 05271 TSX +0 07400 4 00107    05272 TXH +3 00000 0 00217    05273 TXH +3 00000 0 00250    05274 TXH +3 00000 0 00221   
                     PRFULL.($'1USER FOUND:'X$,PROB...2,$ LINE $,                   518  LM00958
                1    BZ57.(DEFBC.(USR)))                                            518  LM00959
 05275 TSX +0 07400 4 00021    05276 TXH +3 00000 0 01004    05277 STO +0 60100 0 07736    05300 TSX +0 07400 4 00013   
 05301 TXH +3 00000 0 07736    05302 STO +0 60100 0 07736    05303 TSX +0 07400 4 00055    05304 TXH +3 00000 0 01077   
 05305 TXH +3 00000 0 01271    05306 TXH +3 00000 0 01165    05307 TIX +2 01016 0 00117    05310 TXH +3 00000 0 01304   
 05311 TXH +3 00000 0 07736                                                                                             
                     ADOPT = COMMON.(ADOPT)                                         519  LM00960
 05312 TSX +0 07400 4 00103    05313 TXH +3 00000 0 00265    05314 STO +0 60100 0 00265                                 
                     SLOC.(3K5.V.USR,ADOPT+USER)                                    520  LM00961
 05315 CLA +0 50000 0 00265    05316 ADD +0 40000 0 01002    05317 STO +0 60100 0 07736    05320 CAL -0 50000 0 01056   
 05321 ORA -0 50100 0 01004    05322 SLW +0 60200 0 07735    05323 TSX +0 07400 4 00072    05324 TXH +3 00000 0 07735   
 05325 TXH +3 00000 0 07736                                                                                             
                     SLOC.(GLOC.(ADOPT+USR).V.7000003K5,ADOPT+USR)                  521  LM00962
 05326 CLA +0 50000 0 00265    05327 ADD +0 40000 0 01004    05330 STO +0 60100 0 07736    05331 CLA +0 50000 0 00265   
 05332 ADD +0 40000 0 01004    05333 STO +0 60100 0 07735    05334 TSX +0 07400 4 00037    05335 TXH +3 00000 0 07735   
 05336 STO +0 60100 0 07735    05337 CAL -0 50000 0 07735    05340 ORA -0 50100 0 01370    05341 SLW +0 60200 0 07735   
 05342 TSX +0 07400 4 00072    05343 TXH +3 00000 0 07735    05344 TXH +3 00000 0 07736                                 
      SPY2           SNOOZE.(1800,SLPCMD(2))                                        522  LM00963
 05345 TSX +0 07400 4 00073    05346 TXH +3 00000 0 01052    05347 TXH +3 00000 0 00120                                 
                     T'O SPY2                                                       523  LM00965
 05350 TRA +0 02000 0 00247                                                                                             
      SPY3           GETTM.(DATE,TIME)                                              524  LM00967
 05351 TSX +0 07400 4 00036    05352 TXH +3 00000 0 00326    05353 TXH +3 00000 0 00774                                 
                     PRFULL.(X,PROB...2,$ IS NOT LOGGED IN - 'X$,TIME)              525  LM00968
 05354 TSX +0 07400 4 00055    05355 TXH +3 00000 0 01013    05356 TIX +2 01016 0 00117    05357 TXH +3 00000 0 01300   
 05360 TXH +3 00000 0 01357    05361 TXH +3 00000 0 01143    05362 TXH +3 00000 0 01166    05363 TXH +3 00000 0 00774   
                     SNOOZE.(15,SLPCMD(2))                                          526  LM00969
 05364 TSX +0 07400 4 00073    05365 TXH +3 00000 0 01032    05366 TXH +3 00000 0 00120                                 
                     M = OLDM                                                       527  LM00970
 05367 CLA +0 50000 0 00132    05370 STO +0 60100 0 00743                                                               
                     T'O SPY1                                                       528  LM00971
 05371 TRA +0 02000 0 00246                                                                                             
                   E'L                                                              529  LM00972
                 E'E (T0,N1), (T1,N2), (T2,NSTICK), (T3,STICKY)                     530  LM00992
                 E'E (TUCARD(8),LENGTH), (TUCARD(5),DEV), (TUCARD(27),BUFF)         531  LM00993
                 D'N BUFF(0)                                                        532  LM00994
                 O'R COMBUF(M) .E. $SQZUFD$                                         533  LM00996
 05372 TRA +0 02000 0 06504    05373 LXA +0 53400 1 00743    05374 CLA +0 50000 1 00324    05375 SUB +0 40200 0 01343   
 05376 TNZ -0 10000 0 06063                                                                                             
                   M = M+1                                                          534  LM00997
 05377 CLA +0 50000 0 00743    05400 ADD +0 40000 0 01015    05401 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           535  LM00998
 05402 LXA +0 53400 1 00743    05403 CLA +0 50000 1 00324    05404 SUB +0 40200 0 00727    05405 TNZ -0 10000 0 05411   
                     PRFULL.(FMT5...100)                                            536  LM00999
 05406 TSX +0 07400 4 00055    05407 TIX +2 01046 0 00724                                                               
                     V'S FMT5 = $ 'UADMIN SQZUFD 'LUSER1 USER2 ... $,               537  LM01000
                1  $'*  USER MAY BE FOLLOWED BY '='4(DISK)'= OR '='4(DRUM)'=$,      537  LM01001
                2  $'*  TO INDICATE WHERE THE FINAL UFD IS TO RESIDE.$,             537  LM01002
                3  777777777777K                                                    537  LM01003
 00673     -3 77777 7 77777    00674     +3 36060 6 06060    00675     -1 12562 3 12425    00676     +3 16260 6 34660   
 00677     -0 36064 2 62460    00700     +2 56026 3 14521    00701     +2 55125 6 06330    00702     +2 16325 6 06630   
 00703     -2 03145 2 43123    00704     +1 45460 6 06346    00705     +1 41360 6 06060    00706     -3 42451 6 44434   
 00707     -1 16014 1 31404    00710     -0 23414 1 36046    00711     +1 40474 2 43162    00712     -2 02270 6 01413   
 00713     -0 34346 6 62524    00714     -2 02225 6 02646    00715     +2 55160 4 42170    00716     +1 45460 6 06462   
 00717     +3 33333 6 06060    00720     -2 46225 5 10260    00721     -2 46225 5 10160    00722     -2 42624 6 01443   
 00723     +3 14560 6 25071    00724     -2 01464 2 12444                                                               
                   O'E                                                              538  LM01004
 05410 TRA +0 02000 0 06062                                                                                             
                     GETBUF.(B1,432)                                                539  LM01005
 05411 TSX +0 07400 4 00035    05412 TXH +3 00000 0 00267    05413 TXH +3 00000 0 01050                                 
                     GETBUF.(B2,432)                                                540  LM01006
 05414 TSX +0 07400 4 00035    05415 TXH +3 00000 0 00270    05416 TXH +3 00000 0 01050                                 
                     GETBUF.(B3,432)                                                541  LM01007
 05417 TSX +0 07400 4 00035    05420 TXH +3 00000 0 00271    05421 TXH +3 00000 0 01050                                 
                     GETBUF.(B4,432)                                                542  LM01008
 05422 TSX +0 07400 4 00035    05423 TXH +3 00000 0 00272    05424 TXH +3 00000 0 01050                                 
                     GETBUF.(B5,432)                                                543  LM01009
 05425 TSX +0 07400 4 00035    05426 TXH +3 00000 0 00273    05427 TXH +3 00000 0 01050                                 
                     FSTST = ENTRY.(FSTST)                                          544  LM01010
 05430 TSX +0 07400 4 00105    05431 TXH +3 00000 0 00726    05432 STO +0 60100 0 00726                                 
                     NSTICK = ENTRY.(SAVING) + 1                                    545  LM01011
 05433 TSX +0 07400 4 00105    05434 TXH +3 00000 0 00764    05435 ADD +0 40000 0 01015    05436 STO +0 60100 0 00130   
                     STICKY = NSTICK + 6                                            546  LM01012
 05437 CLA +0 50000 0 00130    05440 ADD +0 40000 0 01022    05441 STO +0 60100 0 00127                                 
                     NSTICK = GLOC.(NSTICK)*13                                      547  LM01013
 05442 TSX +0 07400 4 00037    05443 TXH +3 00000 0 00130    05444 XCA +0 13100 0 00000    05445 MPY +0 20000 0 01030   
 05446 STQ -0 60000 0 00130                                                                                             
                     ATTACH.(MFD,FILE)                                              548  LM01014
 05447 TSX +0 07400 4 00002    05450 TXH +3 00000 0 00742    05451 TXH +3 00000 0 00327                                 
                     FERRTN.(SQZERR)                                                549  LM01015
 05452 TSX +0 07400 4 00031    05453 TXH +3 00000 0 00256                                                               
      SQZ1           GETUSR.(ERR3,SQZ2,ERR5)                                        550  LM01017
 05454 TSX +0 07400 4 00107    05455 TXH +3 00000 0 00217    05456 TXH +3 00000 0 00252    05457 TXH +3 00000 0 00221   
      SQZ2           NONINT.                                                        551  LM01018
 05460 TSX +0 07400 4 00112                                                                                             
                     FSTATE.(PROB,PROG,LENGTH...8,NOUFD)                            552  LM01019
 05461 TSX +0 07400 4 00032    05462 TXH +3 00000 0 00117    05463 TXH +3 00000 0 00116    05464 TIX +2 01024 0 00156   
 05465 TXH +3 00000 0 00230                                                                                             
                     T'O SQZUFD                                                     553  LM01020
 05466 TRA +0 02000 0 00260                                                                                             
      NOUFD          PRFULL.($'R'X$,PROB...2,$ NOT FOUND.'B$)                       554  LM01021
 05467 TSX +0 07400 4 00055    05470 TXH +3 00000 0 01115    05471 TIX +2 01016 0 00117    05472 TXH +3 00000 0 01311   
 05473 TXH +3 00000 0 01225    05474 TXH +3 00000 0 01126                                                               
                     T'O SQZOUT                                                     555  LM01022
 05475 TRA +0 02000 0 00257                                                                                             
      SQZUFD         W'R COMBUF(M) .E. $(DRUM)$                                     556  LM01024
 05476 LXA +0 53400 1 00743    05477 CLA +0 50000 1 00324    05500 SUB +0 40200 0 01375    05501 TNZ -0 10000 0 05510   
                       DEV = 1                                                      557  LM01025
 05502 CLA +0 50000 0 01015    05503 STO +0 60100 0 00161                                                               
                       M = M+1                                                      558  LM01026
 05504 CLA +0 50000 0 00743    05505 ADD +0 40000 0 01015    05506 STO +0 60100 0 00743                                 
                     O'R COMBUF(M) .E. $(DISK)$                                     559  LM01027
 05507 TRA +0 02000 0 05521    05510 LXA +0 53400 1 00743    05511 CLA +0 50000 1 00324    05512 SUB +0 40200 0 01373   
 05513 TNZ -0 10000 0 05521                                                                                             
                       DEV = 2                                                      560  LM01028
 05514 CLA +0 50000 0 01016    05515 STO +0 60100 0 00161                                                               
                       M = M+1                                                      561  LM01029
 05516 CLA +0 50000 0 00743    05517 ADD +0 40000 0 01015    05520 STO +0 60100 0 00743                                 
                     E'L                                                            562  LM01030
                     T'H SQZ3, FOR I = 0,13,I.G.NSTICK                              563  LM01031
 05521 CLA +0 50000 0 01014    05522 STO +0 60100 0 00730    05523 TRA +0 02000 0 05527    05524 CLA +0 50000 0 00730   
 05525 ADD +0 40000 0 01030    05526 STO +0 60100 0 00730    05527 CLA +0 50000 0 00730    05530 SUB +0 40200 0 00130   
 05531 TZE +0 10000 0 05533    05532 TPL +0 12000 0 05573                                                               
                       N1 = GLOC.(STICKY+I)                                         564  LM01032
 05533 CLA +0 50000 0 00127    05534 ADD +0 40000 0 00730    05535 STO +0 60100 0 07736    05536 TSX +0 07400 4 00037   
 05537 TXH +3 00000 0 07736    05540 STO +0 60100 0 00132                                                               
                       N2 = GLOC.(STICKY+I+1)                                       565  LM01033
 05541 CLA +0 50000 0 00127    05542 ADD +0 40000 0 00730    05543 ADD +0 40000 0 01015    05544 STO +0 60100 0 07736   
 05545 TSX +0 07400 4 00037    05546 TXH +3 00000 0 07736    05547 STO +0 60100 0 00131                                 
                       W'R N1 .E. PROB .AND. N2 .E. PROG                            566  LM01034
 05550 CLA +0 50000 0 00131    05551 SUB +0 40200 0 00116    05552 TNZ -0 10000 0 05572    05553 CLA +0 50000 0 00132   
 05554 SUB +0 40200 0 00117    05555 TNZ -0 10000 0 05572                                                               
                         INT.                                                       567  LM01035
 05556 TSX +0 07400 4 00111                                                                                             
                         PRFULL.(RED,X,PROB...2,                                    568  LM01036
                1        $ HAS INFORMATION IN THE STICKIES.'B$)                     568  LM01037
 05557 TSX +0 07400 4 00055    05560 TXH +3 00000 0 00756    05561 TXH +3 00000 0 01013    05562 TIX +2 01016 0 00117   
 05563 TXH +3 00000 0 01274    05564 TXH +3 00000 0 01205    05565 TXH +3 00000 0 01354    05566 TXH +3 00000 0 01214   
 05567 TXH +3 00000 0 01346    05570 TXH +3 00000 0 01147                                                               
                         T'O SQZOUT                                                 569  LM01038
 05571 TRA +0 02000 0 00257                                                                                             
                       E'L                                                          570  LM01039
      SQZ3           C'E                                                            571  LM01040
 05572 TRA +0 02000 0 05524                                                                                             
                     SLOC.(FENCE,FSTST)                                             572  LM01041
 05573 TSX +0 07400 4 00072    05574 TXH +3 00000 0 00122    05575 TXH +3 00000 0 00726                                 
                     ALLOT.(2,32767)                                                573  LM01046
 05576 TSX +0 07400 4 00001    05577 TXH +3 00000 0 01016    05600 TXH +3 00000 0 01055                                 
                     ALLOT.(1,32767)                                                574  LM01047
 05601 TSX +0 07400 4 00001    05602 TXH +3 00000 0 01015    05603 TXH +3 00000 0 01055                                 
                     BFOPEN.(R,PROB,PROG,B1(B1+432),B2(B2+432),M0,SQZERR)           575  LM01048
 05604 CLA +0 50000 0 00270    05605 ADD +0 40000 0 01050    05606 SUB +0 40200 0 05607    05607 TXH +3 00000 0 00270   
 05610 STA +0 62100 0 05623    05611 CLA +0 50000 0 00267    05612 ADD +0 40000 0 01050    05613 SUB +0 40200 0 05614   
 05614 TXH +3 00000 0 00267    05615 STA +0 62100 0 05622    05616 TSX +0 07400 4 00007    05617 TXH +3 00000 0 00763   
 05620 TXH +3 00000 0 00117    05621 TXH +3 00000 0 00116    05622 TXH +3 00000 0 00000    05623 TXH +3 00000 0 00000   
 05624 TXH +3 00000 0 00733    05625 TXH +3 00000 0 00256                                                               
                     CHFILE.(PROG,PROB,1,M0,M0,NULL.)                               576  LM01049
 05626 TSX +0 07400 4 00015    05627 TXH +3 00000 0 00116    05630 TXH +3 00000 0 00117    05631 TXH +3 00000 0 01015   
 05632 TXH +3 00000 0 00733    05633 TXH +3 00000 0 00733    05634 TXH +3 00000 0 00045                                 
                     DELFIL.(PROG,PROB,NULL.)                                       577  LM01050
 05635 TSX +0 07400 4 00023    05636 TXH +3 00000 0 00116    05637 TXH +3 00000 0 00117    05640 TXH +3 00000 0 00045   
                     BFOPEN.(W,PROG,PROB,B3(B3+432),B4(B4+432),B5(B5+432),          578  LM01051
                1    SQZERR)                                                        578  LM01052
 05641 CLA +0 50000 0 00273    05642 ADD +0 40000 0 01050    05643 SUB +0 40200 0 05644    05644 TXH +3 00000 0 00273   
 05645 STA +0 62100 0 05666    05646 CLA +0 50000 0 00272    05647 ADD +0 40000 0 01050    05650 SUB +0 40200 0 05651   
 05651 TXH +3 00000 0 00272    05652 STA +0 62100 0 05665    05653 CLA +0 50000 0 00271    05654 ADD +0 40000 0 01050   
 05655 SUB +0 40200 0 05656    05656 TXH +3 00000 0 00271    05657 STA +0 62100 0 05664    05660 TSX +0 07400 4 00007   
 05661 TXH +3 00000 0 01012    05662 TXH +3 00000 0 00116    05663 TXH +3 00000 0 00117    05664 TXH +3 00000 0 00000   
 05665 TXH +3 00000 0 00000    05666 TXH +3 00000 0 00000    05667 TXH +3 00000 0 00256                                 
                     BFREAD.(PROB,PROG,BUFF...3,SQZEOF,M0,SQZERR)                   579  LM01053
 05670 TSX +0 07400 4 00010    05671 TXH +3 00000 0 00117    05672 TXH +3 00000 0 00116    05673 TIX +2 01017 0 00133   
 05674 TXH +3 00000 0 00255    05675 TXH +3 00000 0 00733    05676 TXH +3 00000 0 00256                                 
                     BFWRIT.(PROG,PROB,BUFF...3,SQZERR)                             580  LM01054
 05677 TSX +0 07400 4 00011    05700 TXH +3 00000 0 00116    05701 TXH +3 00000 0 00117    05702 TIX +2 01017 0 00133   
 05703 TXH +3 00000 0 00256                                                                                             
      SQZ5           BFREAD.(PROB,PROG,BUFF...7,SQZEOF,M0,SQZERR)                   581  LM01055
 05704 TSX +0 07400 4 00010    05705 TXH +3 00000 0 00117    05706 TXH +3 00000 0 00116    05707 TIX +2 01023 0 00133   
 05710 TXH +3 00000 0 00255    05711 TXH +3 00000 0 00733    05712 TXH +3 00000 0 00256                                 
                     W'R BUFF.V.BUFF(M1).NE.0,                                      582  LM01056
                1      BFWRIT.(PROG,PROB,BUFF...7,SQZERR)                           582  LM01057
 05713 LXA +0 53400 2 00735    05714 CAL -0 50000 0 00133    05715 ORA -0 50100 2 00133    05716 SLW +0 60200 0 07736   
 05717 CLA +0 50000 0 07736    05720 SUB +0 40200 0 01014    05721 TZE +0 10000 0 05727    05722 TSX +0 07400 4 00011   
 05723 TXH +3 00000 0 00116    05724 TXH +3 00000 0 00117    05725 TIX +2 01023 0 00133    05726 TXH +3 00000 0 00256   
                     T'O SQZ5                                                       583  LM01058
 05727 TRA +0 02000 0 00253                                                                                             
      SQZEOF         BFCLOS.(PROB,PROG,SQZERR)                                      584  LM01060
 05730 TSX +0 07400 4 00006    05731 TXH +3 00000 0 00117    05732 TXH +3 00000 0 00116    05733 TXH +3 00000 0 00256   
                     BFCLOS.(PROG,PROB,SQZERR)                                      585  LM01061
 05734 TSX +0 07400 4 00006    05735 TXH +3 00000 0 00116    05736 TXH +3 00000 0 00117    05737 TXH +3 00000 0 00256   
      SQZ6           CHFILE.(PROB,PROG,1)                                           586  LM01062
 05740 TSX +0 07400 4 00015    05741 TXH +3 00000 0 00117    05742 TXH +3 00000 0 00116    05743 TXH +3 00000 0 01015   
                     DELFIL.(PROB,PROG)                                             587  LM01063
 05744 TSX +0 07400 4 00023    05745 TXH +3 00000 0 00117    05746 TXH +3 00000 0 00116                                 
                     CHFILE.(PROG,PROB,104K,PROB,PROG)                              588  LM01064
 05747 TSX +0 07400 4 00015    05750 TXH +3 00000 0 00116    05751 TXH +3 00000 0 00117    05752 TXH +3 00000 0 01043   
 05753 TXH +3 00000 0 00117    05754 TXH +3 00000 0 00116                                                               
                     W'R DEV .E. 1                                                  589  LM01069
 05755 CLA +0 50000 0 00161    05756 SUB +0 40200 0 01015    05757 TNZ -0 10000 0 06045                                 
                     DEV = 2                                                        590  LM01070
 05760 CLA +0 50000 0 01016    05761 STO +0 60100 0 00161                                                               
                     OPEN.(R,PROB,PROG)                                             591  LM01071
 05762 TSX +0 07400 4 00051    05763 TXH +3 00000 0 00763    05764 TXH +3 00000 0 00117    05765 TXH +3 00000 0 00116   
                     OPEN.(W,PROG,PROB,0,1)                                         592  LM01072
 05766 TSX +0 07400 4 00051    05767 TXH +3 00000 0 01012    05770 TXH +3 00000 0 00116    05771 TXH +3 00000 0 00117   
 05772 TXH +3 00000 0 01014    05773 TXH +3 00000 0 01015                                                               
                     BUFFER.(PROG,PROB,B4(B4+432)...432)                            593  LM01073
 05774 CLA +0 50000 0 00272    05775 ADD +0 40000 0 01050    05776 SUB +0 40200 0 05777    05777 TXH +3 00000 0 00272   
 06000 STA +0 62100 0 06004    06001 TSX +0 07400 4 00012    06002 TXH +3 00000 0 00116    06003 TXH +3 00000 0 00117   
 06004 TIX +2 01050 0 00000                                                                                             
                     COPY.(PROB,PROG,PROG,PROB,B1(B1+432),B2(B2+432),               594  LM01074
                1    B3(B3+432),432,SQZERR)                                         594  LM01075
 06005 CLA +0 50000 0 00271    06006 ADD +0 40000 0 01050    06007 SUB +0 40200 0 06010    06010 TXH +3 00000 0 00271   
 06011 STA +0 62100 0 06033    06012 CLA +0 50000 0 00270    06013 ADD +0 40000 0 01050    06014 SUB +0 40200 0 06015   
 06015 TXH +3 00000 0 00270    06016 STA +0 62100 0 06032    06017 CLA +0 50000 0 00267    06020 ADD +0 40000 0 01050   
 06021 SUB +0 40200 0 06022    06022 TXH +3 00000 0 00267    06023 STA +0 62100 0 06031    06024 TSX +0 07400 4 00020   
 06025 TXH +3 00000 0 00117    06026 TXH +3 00000 0 00116    06027 TXH +3 00000 0 00116    06030 TXH +3 00000 0 00117   
 06031 TXH +3 00000 0 00000    06032 TXH +3 00000 0 00000    06033 TXH +3 00000 0 00000    06034 TXH +3 00000 0 01050   
 06035 TXH +3 00000 0 00256                                                                                             
                     CLOSE.(PROB,PROG)                                              595  LM01076
 06036 TSX +0 07400 4 00016    06037 TXH +3 00000 0 00117    06040 TXH +3 00000 0 00116                                 
                     CLOSE.(PROG,PROB)                                              596  LM01077
 06041 TSX +0 07400 4 00016    06042 TXH +3 00000 0 00116    06043 TXH +3 00000 0 00117                                 
                     T'O SQZ6                                                       597  LM01078
 06044 TRA +0 02000 0 00254                                                                                             
                     E'L                                                            598  LM01079
      SQZOUT         RESETF.                                                        599  LM01081
 06045 TSX +0 07400 4 00062                                                                                             
                     SLOC.(0,FSTST)                                                 600  LM01082
 06046 TSX +0 07400 4 00072    06047 TXH +3 00000 0 01014    06050 TXH +3 00000 0 00726                                 
                     INT.                                                           601  LM01083
 06051 TSX +0 07400 4 00111                                                                                             
                     W'R COMBUF(M).NE. FENCE, T'O SQZ1                              602  LM01084
 06052 LXA +0 53400 1 00743    06053 CLA +0 50000 1 00324    06054 SUB +0 40200 0 00122    06055 TZE +0 10000 0 06057   
 06056 TRA +0 02000 0 00251                                                                                             
                     T'O OUT                                                        603  LM01085
 06057 TRA +0 02000 0 00231                                                                                             
      SQZERR         PRDIAG.                                                        604  LM01087
 06060 TSX +0 07400 4 00053                                                                                             
                     T'O SQZOUT                                                     605  LM01088
 06061 TRA +0 02000 0 00257                                                                                             
                   E'L                                                              606  LM01089
                 O'R COMBUF(M) .E. $UPATCH$                                         607  LM01109
 06062 TRA +0 02000 0 06504    06063 LXA +0 53400 1 00743    06064 CLA +0 50000 1 00324    06065 SUB +0 40200 0 01361   
 06066 TNZ -0 10000 0 06116                                                                                             
                   M = M+1                                                          608  LM01110
 06067 CLA +0 50000 0 00743    06070 ADD +0 40000 0 01015    06071 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           609  LM01111
 06072 LXA +0 53400 1 00743    06073 CLA +0 50000 1 00324    06074 SUB +0 40200 0 00727    06075 TNZ -0 10000 0 06110   
                     PRFULL.(ADMIN...2,CURCOM.(0),$ 'LLOC LHALF RHALF$)             610  LM01112
 06076 TSX +0 07400 4 00104    06077 TXH +3 00000 0 01014    06100 STO +0 60100 0 07736    06101 TSX +0 07400 4 00055   
 06102 TIX +2 01016 0 00264    06103 TXH +3 00000 0 07736    06104 TXH +3 00000 0 01252    06105 TXH +3 00000 0 01303   
 06106 TXH +3 00000 0 01316                                                                                             
                   O'E                                                              611  LM01113
 06107 TRA +0 02000 0 06115                                                                                             
                     UPATSW = 1B                                                    612  LM01114
 06110 CLA +0 50000 0 01015    06111 STO +0 60100 0 00132                                                               
                     PATMES(1) = $(USER)$                                           613  LM01115
 06112 CLA +0 50000 0 01377    06113 STO +0 60100 0 00165                                                               
                     T'O PAT1                                                       614  LM01116
 06114 TRA +0 02000 0 00232                                                                                             
                   E'L                                                              615  LM01117
                 O'R COMBUF(M) .E. $UPDATE$                                         616  LM01143
 06115 TRA +0 02000 0 06504    06116 LXA +0 53400 1 00743    06117 CLA +0 50000 1 00324    06120 SUB +0 40200 0 01362   
 06121 TNZ -0 10000 0 06424                                                                                             
                   M = M+1                                                          617  LM01144
 06122 CLA +0 50000 0 00743    06123 ADD +0 40000 0 01015    06124 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           618  LM01145
 06125 LXA +0 53400 1 00743    06126 CLA +0 50000 1 00324    06127 SUB +0 40200 0 00727    06130 TNZ -0 10000 0 06143   
                     PRFULL.(ADMIN...2,CURCOM.(0),$ N1 -N2- -N3- -N4-$)             619  LM01146
 06131 TSX +0 07400 4 00104    06132 TXH +3 00000 0 01014    06133 STO +0 60100 0 07736    06134 TSX +0 07400 4 00055   
 06135 TIX +2 01016 0 00264    06136 TXH +3 00000 0 07736    06137 TXH +3 00000 0 01310    06140 TXH +3 00000 0 01065   
 06141 TXH +3 00000 0 01167                                                                                             
                   O'E                                                              620  LM01147
 06142 TRA +0 02000 0 06423                                                                                             
                     N1 = COMBUF(M)                                                 621  LM01148
 06143 LXA +0 53400 2 00743    06144 CLA +0 50000 2 00324    06145 STO +0 60100 0 00132                                 
                     N2 = COMBUF(M+1)                                               622  LM01149
 06146 CLA +0 50000 0 00743    06147 ADD +0 40000 0 01015    06150 PAX +0 73400 2 00000    06151 CLA +0 50000 2 00324   
 06152 STO +0 60100 0 00131                                                                                             
                     N3 = COMBUF(M+2)                                               623  LM01150
 06153 CLA +0 50000 0 00743    06154 ADD +0 40000 0 01016    06155 PAX +0 73400 2 00000    06156 CLA +0 50000 2 00324   
 06157 STO +0 60100 0 00130                                                                                             
                     N4 = COMBUF(M+3)                                               624  LM01151
 06160 CLA +0 50000 0 00743    06161 ADD +0 40000 0 01017    06162 PAX +0 73400 2 00000    06163 CLA +0 50000 2 00324   
 06164 STO +0 60100 0 00127                                                                                             
                     W'R N2 .E. FENCE                                               625  LM01152
 06165 CLA +0 50000 0 00131    06166 SUB +0 40200 0 00122    06167 TNZ -0 10000 0 06177                                 
                       N2 = TA                                                      626  LM01153
 06170 CLA +0 50000 0 00771    06171 STO +0 60100 0 00131                                                               
                       N3 = N1                                                      627  LM01154
 06172 CLA +0 50000 0 00132    06173 STO +0 60100 0 00130                                                               
                       N4 = N2                                                      628  LM01155
 06174 CLA +0 50000 0 00131    06175 STO +0 60100 0 00127                                                               
                     O'R N3 .E. FENCE                                               629  LM01156
 06176 TRA +0 02000 0 06234    06177 CLA +0 50000 0 00130    06200 SUB +0 40200 0 00122    06201 TNZ -0 10000 0 06207   
                       N3 = N1                                                      630  LM01157
 06202 CLA +0 50000 0 00132    06203 STO +0 60100 0 00130                                                               
                       N4 = N2                                                      631  LM01158
 06204 CLA +0 50000 0 00131    06205 STO +0 60100 0 00127                                                               
                     O'R N4 .E. FENCE                                               632  LM01159
 06206 TRA +0 02000 0 06234    06207 CLA +0 50000 0 00127    06210 SUB +0 40200 0 00122    06211 TNZ -0 10000 0 06215   
                       N4 = N2                                                      633  LM01160
 06212 CLA +0 50000 0 00131    06213 STO +0 60100 0 00127                                                               
                     O'R N1 .E. FENCE                                               634  LM01161
 06214 TRA +0 02000 0 06234    06215 CLA +0 50000 0 00132    06216 SUB +0 40200 0 00122    06217 TNZ -0 10000 0 06222   
                       T'O ERR2                                                     635  LM01162
 06220 TRA +0 02000 0 00216                                                                                             
                     O'R COMBUF(M+4).NE.FENCE                                       636  LM01163
 06221 TRA +0 02000 0 06234    06222 CLA +0 50000 0 00743    06223 ADD +0 40000 0 01020    06224 PAX +0 73400 1 00000   
 06225 CLA +0 50000 1 00324    06226 SUB +0 40200 0 00122    06227 TZE +0 10000 0 06234                                 
                       M = M+4                                                      637  LM01164
 06230 CLA +0 50000 0 00743    06231 ADD +0 40000 0 01020    06232 STO +0 60100 0 00743                                 
                       T'O ERR1                                                     638  LM01165
 06233 TRA +0 02000 0 00215                                                                                             
                     E'L                                                            639  LM01166
                     W'R ME(1).E.M1416 .AND. ME.E.CMFL02 .AND.                      640  LM01168
                1      N3.E.N1 .AND. N4.E.N2, T'O ERR0                              640  LM01169
 06234 CLA +0 50000 0 00127    06235 SUB +0 40200 0 00131    06236 TNZ -0 10000 0 06251    06237 CLA +0 50000 0 00130   
 06240 SUB +0 40200 0 00132    06241 TNZ -0 10000 0 06251    06242 CLA +0 50000 0 00740    06243 SUB +0 40200 0 00277   
 06244 TNZ -0 10000 0 06251    06245 CLA +0 50000 0 00737    06246 SUB +0 40200 0 00734    06247 TNZ -0 10000 0 06251   
 06250 TRA +0 02000 0 00214                                                                                             
                     CHKPRV.(RPRVBT)                                                641  LM01170
 06251 TSX +0 07400 4 00102    06252 TXH +3 00000 0 00762                                                               
                     GETBUF.(B1,432)                                                642  LM01172
 06253 TSX +0 07400 4 00035    06254 TXH +3 00000 0 00267    06255 TXH +3 00000 0 01050                                 
                     GETBUF.(B2,432)                                                643  LM01173
 06256 TSX +0 07400 4 00035    06257 TXH +3 00000 0 00270    06260 TXH +3 00000 0 01050                                 
                     GETBUF.(B3,432)                                                644  LM01174
 06261 TSX +0 07400 4 00035    06262 TXH +3 00000 0 00271    06263 TXH +3 00000 0 01050                                 
                     GETBUF.(B4,432)                                                645  LM01175
 06264 TSX +0 07400 4 00035    06265 TXH +3 00000 0 00272    06266 TXH +3 00000 0 01050                                 
                     OPEN.(R,N1,N2)                                                 646  LM01176
 06267 TSX +0 07400 4 00051    06270 TXH +3 00000 0 00763    06271 TXH +3 00000 0 00132    06272 TXH +3 00000 0 00131   
                     ATTACH.(M1416,CMFL02)                                          647  LM01177
 06273 TSX +0 07400 4 00002    06274 TXH +3 00000 0 00734    06275 TXH +3 00000 0 00277                                 
                     NONINT.                                                        648  LM01178
 06276 TSX +0 07400 4 00112                                                                                             
                     CHFILE.(DATE,TIME,1,M0,M0,NULL.)                               649  LM01179
 06277 TSX +0 07400 4 00015    06300 TXH +3 00000 0 00326    06301 TXH +3 00000 0 00774    06302 TXH +3 00000 0 01015   
 06303 TXH +3 00000 0 00733    06304 TXH +3 00000 0 00733    06305 TXH +3 00000 0 00045                                 
                     DELFIL.(DATE,TIME,NULL.)                                       650  LM01180
 06306 TSX +0 07400 4 00023    06307 TXH +3 00000 0 00326    06310 TXH +3 00000 0 00774    06311 TXH +3 00000 0 00045   
                     OPEN.(W,DATE,TIME,120K)                                        651  LM01181
 06312 TSX +0 07400 4 00051    06313 TXH +3 00000 0 01012    06314 TXH +3 00000 0 00326    06315 TXH +3 00000 0 00774   
 06316 TXH +3 00000 0 01044                                                                                             
                     BUFFER.(DATE,TIME,B4(B4+432)...432)                            652  LM01182
 06317 CLA +0 50000 0 00272    06320 ADD +0 40000 0 01050    06321 SUB +0 40200 0 06322    06322 TXH +3 00000 0 00272   
 06323 STA +0 62100 0 06327    06324 TSX +0 07400 4 00012    06325 TXH +3 00000 0 00326    06326 TXH +3 00000 0 00774   
 06327 TIX +2 01050 0 00000                                                                                             
                     COPY.(N1,N2,DATE,TIME,B1(B1+432),B2(B2+432),B3(B3+432),        653  LM01183
                1          432,IOERR)                                               653  LM01184
 06330 CLA +0 50000 0 00271    06331 ADD +0 40000 0 01050    06332 SUB +0 40200 0 06333    06333 TXH +3 00000 0 00271   
 06334 STA +0 62100 0 06356    06335 CLA +0 50000 0 00270    06336 ADD +0 40000 0 01050    06337 SUB +0 40200 0 06340   
 06340 TXH +3 00000 0 00270    06341 STA +0 62100 0 06355    06342 CLA +0 50000 0 00267    06343 ADD +0 40000 0 01050   
 06344 SUB +0 40200 0 06345    06345 TXH +3 00000 0 00267    06346 STA +0 62100 0 06354    06347 TSX +0 07400 4 00020   
 06350 TXH +3 00000 0 00132    06351 TXH +3 00000 0 00131    06352 TXH +3 00000 0 00326    06353 TXH +3 00000 0 00774   
 06354 TXH +3 00000 0 00000    06355 TXH +3 00000 0 00000    06356 TXH +3 00000 0 00000    06357 TXH +3 00000 0 01050   
 06360 TXH +3 00000 0 00225                                                                                             
                     CLOSE.(DATE,TIME)                                              654  LM01185
 06361 TSX +0 07400 4 00016    06362 TXH +3 00000 0 00326    06363 TXH +3 00000 0 00774                                 
                     CLOSE.(N1,N2)                                                  655  LM01186
 06364 TSX +0 07400 4 00016    06365 TXH +3 00000 0 00132    06366 TXH +3 00000 0 00131                                 
                     MODE = 120K                                                    656  LM01187
 06367 CLA +0 50000 0 01044    06370 STO +0 60100 0 00123                                                               
                     FSTATE.(N3,N4,TUCARD(1)...2,UPD1)                              657  LM01188
 06371 TSX +0 07400 4 00032    06372 TXH +3 00000 0 00130    06373 TXH +3 00000 0 00127    06374 TIX +2 01016 0 00165   
 06375 TXH +3 00000 0 00261                                                                                             
                     MODE = TUCARD.A.777K                                           658  LM01189
 06376 CAL -0 50000 0 00166    06377 ANA -0 32000 0 01051    06400 SLW +0 60200 0 00123                                 
      UPD1           CHFILE.(N3,N4,1,M0,M0,NULL.)                                   659  LM01190
 06401 TSX +0 07400 4 00015    06402 TXH +3 00000 0 00130    06403 TXH +3 00000 0 00127    06404 TXH +3 00000 0 01015   
 06405 TXH +3 00000 0 00733    06406 TXH +3 00000 0 00733    06407 TXH +3 00000 0 00045                                 
                     DELFIL.(N3,N4,NULL.)                                           660  LM01191
 06410 TSX +0 07400 4 00023    06411 TXH +3 00000 0 00130    06412 TXH +3 00000 0 00127    06413 TXH +3 00000 0 00045   
                     CHFILE.(DATE,TIME,MODE,N3,N4)                                  661  LM01192
 06414 TSX +0 07400 4 00015    06415 TXH +3 00000 0 00326    06416 TXH +3 00000 0 00774    06417 TXH +3 00000 0 00123   
 06420 TXH +3 00000 0 00130    06421 TXH +3 00000 0 00127                                                               
                     INT.                                                           662  LM01193
 06422 TSX +0 07400 4 00111                                                                                             
                   E'L                                                              663  LM01194
                 O'R COMBUF(M) .E. $ WRITE$                                         664  LM01212
 06423 TRA +0 02000 0 06504    06424 LXA +0 53400 1 00743    06425 CLA +0 50000 1 00324    06426 SUB +0 40200 0 01337   
 06427 TNZ -0 10000 0 06461                                                                                             
                   M = M+1                                                          665  LM01213
 06430 CLA +0 50000 0 00743    06431 ADD +0 40000 0 01015    06432 STO +0 60100 0 00743                                 
                   W'R COMBUF(M) .E. HELP                                           666  LM01214
 06433 LXA +0 53400 1 00743    06434 CLA +0 50000 1 00324    06435 SUB +0 40200 0 00727    06436 TNZ -0 10000 0 06450   
                     PRFULL.(ADMIN...2,CURCOM.(0),$ 'LUSER$)                        667  LM01215
 06437 TSX +0 07400 4 00104    06440 TXH +3 00000 0 01014    06441 STO +0 60100 0 07736    06442 TSX +0 07400 4 00055   
 06443 TIX +2 01016 0 00264    06444 TXH +3 00000 0 07736    06445 TXH +3 00000 0 01255    06446 TXH +3 00000 0 01244   
                   O'E                                                              668  LM01216
 06447 TRA +0 02000 0 06460                                                                                             
                     GETUSR.(ERR3,ERR4,ERR5)                                        669  LM01217
 06450 TSX +0 07400 4 00107    06451 TXH +3 00000 0 00217    06452 TXH +3 00000 0 00220    06453 TXH +3 00000 0 00221   
                     SETFUL.                                                        670  LM01218
 06454 TSX +0 07400 4 00071                                                                                             
                     WRITE.(USR)                                                    671  LM01219
 06455 TSX +0 07400 4 00077    06456 TXH +3 00000 0 01004                                                               
                     SETBCD.                                                        672  LM01220
 06457 TSX +0 07400 4 00066                                                                                             
                   E'L                                                              673  LM01221
                 O'E                                                                674  LM01225
 06460 TRA +0 02000 0 06504                                                                                             
                   W'R M.E.0                                                        675  LM01226
 06461 CLA +0 50000 0 00743    06462 SUB +0 40200 0 01014    06463 TNZ -0 10000 0 06470                                 
                     M = 1                                                          676  LM01227
 06464 CLA +0 50000 0 01015    06465 STO +0 60100 0 00743                                                               
                     T'O USEROK                                                     677  LM01228
 06466 TRA +0 02000 0 00262                                                                                             
                   O'E                                                              678  LM01229
 06467 TRA +0 02000 0 06504                                                                                             
                     PRFULL.($'R'X$,COMBUF(M),$ IS NOT A VALID FUNCTION.'B$)        679  LM01230
 06470 CLA +0 50000 0 00743    06471 SUB +0 40200 0 06472    06472 TXH +3 00000 0 00324    06473 STA +0 62100 0 06476   
 06474 TSX +0 07400 4 00055    06475 TXH +3 00000 0 01115    06476 TXH +3 00000 0 00000    06477 TXH +3 00000 0 01300   
 06500 TXH +3 00000 0 01356    06501 TXH +3 00000 0 01171    06502 TXH +3 00000 0 01201    06503 TXH +3 00000 0 01163   
                   E'L                                                              680  LM01231
                 E'L                                                                681  LM01232
      OUT        RESETF.                                                            682  LM01233
 06504 TSX +0 07400 4 00062                                                                                             
                 ATTACH.(ME(1),ME,EXITM.)                                           683  LM01234
 06505 TSX +0 07400 4 00002    06506 TXH +3 00000 0 00737    06507 TXH +3 00000 0 00740    06510 TXH +3 00000 0 00027   
                 EXITM.                                                             684  LM01235
 06511 TSX +0 07400 4 00027                                                                                             
      IOERR      PRFULA.(RED)                                                       685  LM01249
 06512 TSX +0 07400 4 00054    06513 TXH +3 00000 0 00756                                                               
                 PRDIAG.                                                            686  LM01250
 06514 TSX +0 07400 4 00053                                                                                             
                 PRFULA.(BLACK)                                                     687  LM01251
 06515 TSX +0 07400 4 00054    06516 TXH +3 00000 0 00275                                                               
                 T'O OUT                                                            688  LM01252
 06517 TRA +0 02000 0 00231                                                                                             
      ERR0       PRFULL.($'R'1ILLEGAL USAGE.'B$)                                    689  LM01254
 06520 TSX +0 07400 4 00055    06521 TXH +3 00000 0 01106    06522 TXH +3 00000 0 01170    06523 TXH +3 00000 0 01363   
 06524 TXH +3 00000 0 01103                                                                                             
                 T'O OUT                                                            690  LM01255
 06525 TRA +0 02000 0 00231                                                                                             
      ERR1       PRFULL.($'R'1ILLEGAL ARGUMENT: 'X$,COMBUF(M),BLACK)                691  LM01257
 06526 CLA +0 50000 0 00743    06527 SUB +0 40200 0 06530    06530 TXH +3 00000 0 00324    06531 STA +0 62100 0 06537   
 06532 TSX +0 07400 4 00055    06533 TXH +3 00000 0 01106    06534 TXH +3 00000 0 01170    06535 TXH +3 00000 0 01121   
 06536 TXH +3 00000 0 01215    06537 TXH +3 00000 0 00000    06540 TXH +3 00000 0 00275                                 
                 T'O OUT                                                            692  LM01258
 06541 TRA +0 02000 0 00231                                                                                             
      ERR2       PRFULL.($'R'1MISSING ARGUMENT(S)'B$)                               693  LM01260
 06542 TSX +0 07400 4 00055    06543 TXH +3 00000 0 01112    06544 TXH +3 00000 0 01344    06545 TXH +3 00000 0 01121   
 06546 TXH +3 00000 0 01216    06547 TXH +3 00000 0 01126                                                               
                 T'O OUT                                                            694  LM01261
 06550 TRA +0 02000 0 00231                                                                                             
      ERR3       PRFULL.($'R'1MISSING OR ILLEGAL USER SPECIFICATION.'B$)            695  LM01263
 06551 TSX +0 07400 4 00055    06552 TXH +3 00000 0 01112    06553 TXH +3 00000 0 01344    06554 TXH +3 00000 0 01222   
 06555 TXH +3 00000 0 01144    06556 TXH +3 00000 0 01341    06557 TXH +3 00000 0 01141    06560 TXH +3 00000 0 01123   
 06561 TXH +3 00000 0 01103                                                                                             
                 T'O OUT                                                            696  LM01264
 06562 TRA +0 02000 0 00231                                                                                             
      ERR5       PRFULL.($'R'1LINE '8$,BZ57.(DEFBC.(USR)),$ IS EMPTY.'B$)           697  LM01266
 06563 TSX +0 07400 4 00021    06564 TXH +3 00000 0 01004    06565 STO +0 60100 0 07736    06566 TSX +0 07400 4 00013   
 06567 TXH +3 00000 0 07736    06570 STO +0 60100 0 07736    06571 TSX +0 07400 4 00055    06572 TXH +3 00000 0 01111   
 06573 TXH +3 00000 0 01203    06574 TXH +3 00000 0 07736    06575 TXH +3 00000 0 01277    06576 TXH +3 00000 0 01233   
                 T'O OUT                                                            698  LM01267
 06577 TRA +0 02000 0 00231                                                                                             
      ERR4       PRFULL.(RED,X,PROB...2,$ IS NOT LOGGED IN.'B$)                     699  LM01269
 06600 TSX +0 07400 4 00055    06601 TXH +3 00000 0 00756    06602 TXH +3 00000 0 01013    06603 TIX +2 01016 0 00117   
 06604 TXH +3 00000 0 01300    06605 TXH +3 00000 0 01357    06606 TXH +3 00000 0 01142    06607 TXH +3 00000 0 01103   
                 T'O OUT                                                            700  LM01270
 06610 TRA +0 02000 0 00231                                                                                             
      ERR6       PRFULL.(RED,LHALF,RHALF,$ NOT OCTAL.'B$)                           701  LM01272
 06611 TSX +0 07400 4 00055    06612 TXH +3 00000 0 00756    06613 TXH +3 00000 0 00126    06614 TXH +3 00000 0 00125   
 06615 TXH +3 00000 0 01312    06616 TXH +3 00000 0 01132    06617 TXH +3 00000 0 01126                                 
                 T'O OUT                                                            702  LM01273
 06620 TRA +0 02000 0 00231                                                                                             
      ERR7       PRFULL.($'R'1SYSTEM ERROR: FULL RETURN FROM '6ENTLIN.'B$)          703  LM01275
 06621 TSX +0 07400 4 00055    06622 TXH +3 00000 0 01113    06623 TXH +3 00000 0 01345    06624 TXH +3 00000 0 01240   
 06625 TXH +3 00000 0 01153    06626 TXH +3 00000 0 01150    06627 TXH +3 00000 0 01151    06630 TXH +3 00000 0 01070   
 06631 TXH +3 00000 0 01211                                                                                             
                 T'O OUT                                                            704  LM01276
 06632 TRA +0 02000 0 00231                                                                                             
                 I'N (CODE)                                                         705  LM01296
 06633 TRA +0 02000 0 06706                                                                                             
                 E'O CHKPRV.                                                        706  LM01297
 06634 TRA +0 02000 0 06637    00102 TTR +0 02100 0 06635    06635 SXA +0 63400 2 06671    06636 TSX +0 07400 2 06671   
                 W'R RCODE.A.CODE.E.CODE, F'N                                       707  LM01298
 06637 CAL -0 50000 0 00755    06640 ANA -0 32000 0 00024    06641 SLW +0 60200 0 06705    06642 CLA +0 50000 0 06705   
 06643 SUB +0 40200 0 00024    06644 TNZ -0 10000 0 06646    06645 TRA +0 02000 0 06701                                 
                 PRFULL.($'R'1INSUFFICIENT PRIVILEGES.  '1NEED AT LEAST '8$,        708  LM01299
                1  BZ57.(OCRBC.(CODE)),BLACK)                                       708  LM01300
 06646 TSX +0 07400 4 00050    06647 TXH +3 00000 0 00024    06650 STO +0 60100 0 06705    06651 TSX +0 07400 4 00013   
 06652 TXH +3 00000 0 06705    06653 STO +0 60100 0 06705    06654 TSX +0 07400 4 00055    06655 TXH +3 00000 0 01107   
 06656 TXH +3 00000 0 01347    06657 TXH +3 00000 0 01156    06660 TXH +3 00000 0 01235    06661 TXH +3 00000 0 01155   
 06662 TXH +3 00000 0 01074    06663 TXH +3 00000 0 01263    06664 TXH +3 00000 0 01122    06665 TXH +3 00000 0 06705   
 06666 TXH +3 00000 0 00275                                                                                             
                 T'O OUT                                                            709  LM01301
 06667 TRA +0 02000 0 00231                                                                                             
                 E'N                                                                710  LM01302
 06670 TSX +0 07400 4 00030    06671 TXH +3 00000 0 00000    06672 SXD -0 63400 1 06671    06673 SXA +0 63400 4 06701   
 06674 CLA +0 50000 4 00001    06675 STA +0 62100 0 06640    06676 STA +0 62100 0 06643    06677 STO +0 60100 0 06647   
 06700 TRA +0 02000 2 00001    06701 AXT +0 77400 4 00000    06702 LXA +0 53400 2 06671    06703 LXD -0 53400 1 06671   
 06704 TRA +0 02000 4 00001                                                                                             
                 I'N (SYMBOL)                                                       711  LM01310
 06706 TRA +0 02000 0 06775                                                                                             
                 E'O COMMON.                                                        712  LM01311
 06707 TRA +0 02000 0 06712    00103 TTR +0 02100 0 06710    06710 SXA +0 63400 2 06760    06711 TSX +0 07400 2 06760   
                 F'N COMLOC.(LJUST.(SYMBOL),COMERR)                                 713  LM01312
 06712 TSX +0 07400 4 00042    06713 TXH +3 00000 0 00024    06714 STO +0 60100 0 06774    06715 TSX +0 07400 4 00017   
 06716 TXH +3 00000 0 06774    06717 TXH +3 00000 0 00207    06720 TRA +0 02000 0 06770                                 
      COMERR     PRFULL.($'R'X$,BZ57.(RJUST.(SYMBOL)),$ WAS NOT FOUND.'B$)          714  LM01314
 06721 TSX +0 07400 4 00063    06722 TXH +3 00000 0 00024    06723 STO +0 60100 0 06774    06724 TSX +0 07400 4 00013   
 06725 TXH +3 00000 0 06774    06726 STO +0 60100 0 06774    06727 TSX +0 07400 4 00055    06730 TXH +3 00000 0 01115   
 06731 TXH +3 00000 0 06774    06732 TXH +3 00000 0 01336    06733 TXH +3 00000 0 01223    06734 TXH +3 00000 0 01202   
                 T'O OUT                                                            715  LM01315
 06735 TRA +0 02000 0 00231                                                                                             
                 E'O ENTRY.                                                         716  LM01323
 06736 TRA +0 02000 0 06741    00105 TTR +0 02100 0 06737    06737 SXA +0 63400 2 06760    06740 TSX +0 07400 2 06760   
                 F'N ACORE.(LJUST.(SYMBOL),COMERR).RS.18                            717  LM01324
 06741 TSX +0 07400 4 00042    06742 TXH +3 00000 0 00024    06743 STO +0 60100 0 06774    06744 TSX +0 07400 4 00000   
 06745 TXH +3 00000 0 06774    06746 TXH +3 00000 0 00207    06747 STO +0 60100 0 06774    06750 CAL -0 50000 0 01034   
 06751 STA +0 62100 0 06753    06752 CAL -0 50000 0 06774    06753 LGR -0 76500 0 00000    06754 SLW +0 60200 0 06774   
 06755 CLA +0 50000 0 06774    06756 TRA +0 02000 0 06770                                                               
                 E'N                                                                718  LM01325
 06757 TSX +0 07400 4 00030    06760 TXH +3 00000 0 00000    06761 SXD -0 63400 1 06760    06762 SXA +0 63400 4 06770   
 06763 CLA +0 50000 4 00001    06764 STO +0 60100 0 06713    06765 STO +0 60100 0 06722    06766 STO +0 60100 0 06742   
 06767 TRA +0 02000 2 00001    06770 AXT +0 77400 4 00000    06771 LXA +0 53400 2 06760    06772 LXD -0 53400 1 06760   
 06773 TRA +0 02000 4 00001                                                                                             
                 I'N CURCOM.(X) = BZ57.(COMBUF(M-1))                                719  LM01332
 06775 TRA +0 02000 0 07020    00104 TTR +0 02100 0 06776    06776 SXA +0 63400 2 07010    06777 TSX +0 07400 2 07010   
 07000 CLA +0 50000 0 00743    07001 SUB +0 40200 0 01015    07002 SUB +0 40200 0 07003    07003 TXH +3 00000 0 00324   
 07004 STA +0 62100 0 07006    07005 TSX +0 07400 4 00013    07006 TXH +3 00000 0 00000    07007 TRA +0 02000 0 07014   
 07010 TXH +3 00000 0 00000    07011 SXD -0 63400 1 07010    07012 SXA +0 63400 4 07014    07013 TRA +0 02000 2 00001   
 07014 AXT +0 77400 4 00000    07015 LXA +0 53400 2 07010    07016 LXD -0 53400 1 07010    07017 TRA +0 02000 4 00001   
                 I'N                                                                720  LM01338
 07020 TRA +0 02000 0 07071                                                                                             
                 E'O INT.                                                           721  LM01339
 07021 TRA +0 02000 0 07024    00111 TTR +0 02100 0 07022    07022 SXA +0 63400 2 07057    07023 TSX +0 07400 2 07057   
                 SLOC.(GLOC.(USROPT).A..N.NINTBT,USROPT)                            722  LM01340
 07024 CAL -0 50000 0 00745    07025 COM +0 76000 0 00006    07026 SLW +0 60200 0 07067    07027 TSX +0 07400 4 00037   
 07030 TXH +3 00000 0 01003    07031 STO +0 60100 0 07070    07032 CAL -0 50000 0 07070    07033 ANA -0 32000 0 07067   
 07034 SLW +0 60200 0 07070    07035 TSX +0 07400 4 00072    07036 TXH +3 00000 0 07070    07037 TXH +3 00000 0 01003   
                 F'N                                                                723  LM01341
 07040 TRA +0 02000 0 07063                                                                                             
                 E'O NONINT.                                                        724  LM01347
 07041 TRA +0 02000 0 07044    00112 TTR +0 02100 0 07042    07042 SXA +0 63400 2 07057    07043 TSX +0 07400 2 07057   
                 SLOC.(GLOC.(USROPT).V.NINTBT,USROPT)                               725  LM01348
 07044 TSX +0 07400 4 00037    07045 TXH +3 00000 0 01003    07046 STO +0 60100 0 07070    07047 CAL -0 50000 0 07070   
 07050 ORA -0 50100 0 00745    07051 SLW +0 60200 0 07070    07052 TSX +0 07400 4 00072    07053 TXH +3 00000 0 07070   
 07054 TXH +3 00000 0 01003                                                                                             
                 F'N                                                                726  LM01349
 07055 TRA +0 02000 0 07063                                                                                             
                 E'N                                                                727  LM01350
 07056 TSX +0 07400 4 00030    07057 TXH +3 00000 0 00000    07060 SXD -0 63400 1 07057    07061 SXA +0 63400 4 07063   
 07062 TRA +0 02000 2 00001    07063 AXT +0 77400 4 00000    07064 LXA +0 53400 2 07057    07065 LXD -0 53400 1 07057   
 07066 TRA +0 02000 4 00001                                                                                             
                 I'N (NONE,NOTIN,LNMTY)                                             728  LM01363
 07071 TRA +0 02000 0 07320                                                                                             
                 S'L NONE,NOTIN,LNMTY                                               729  LM01364
                 E'O GETUSR.                                                        730  LM01365
 07072 TRA +0 02000 0 07075    00107 TTR +0 02100 0 07073    07073 SXA +0 63400 2 07277    07074 TSX +0 07400 2 07277   
                 W'R COMBUF(M).E.FENCE                                              731  LM01367
 07075 LXA +0 53400 1 00743    07076 CLA +0 50000 1 00324    07077 SUB +0 40200 0 00122    07100 TNZ -0 10000 0 07107   
                    USR = USER                                                      732  LM01368
 07101 CLA +0 50000 0 01002    07102 STO +0 60100 0 01004                                                               
                    GTUSR.(LNMTY)                                                   733  LM01369
 07103 TSX +0 07400 4 00110    07104 TXH +3 00000 0 00024                                                               
                    T'O NONE                                                        734  LM01370
 07105 TRA +0 02000 0 00024                                                                                             
                 O'R ZEL.(COMBUF(M)).A.$$.E.0                                       735  LM01371
 07106 TRA +0 02000 0 07275    07107 CLA +0 50000 0 00743    07110 SUB +0 40200 0 07111    07111 TXH +3 00000 0 00324   
 07112 STA +0 62100 0 07114    07113 TSX +0 07400 4 00101    07114 TXH +3 00000 0 00000    07115 STO +0 60100 0 07317   
 07116 CAL -0 50000 0 07317    07117 ANA -0 32000 0 01330    07120 SLW +0 60200 0 07317    07121 CLA +0 50000 0 07317   
 07122 SUB +0 40200 0 01014    07123 TNZ -0 10000 0 07160                                                               
                    USR = BCDEC.(COMBUF(M))                                         736  LM01372
 07124 CLA +0 50000 0 00743    07125 SUB +0 40200 0 07126    07126 TXH +3 00000 0 00324    07127 STA +0 62100 0 07131   
 07130 TSX +0 07400 4 00004    07131 TXH +3 00000 0 00000    07132 STO +0 60100 0 01004                                 
                    W'R USR.G.N, T'O ERR3                                           737  LM01373
 07133 CLA +0 50000 0 01004    07134 SUB +0 40200 0 00746    07135 TZE +0 10000 0 07140    07136 TMI -0 12000 0 07140   
 07137 TRA +0 02000 0 00217                                                                                             
                    W'R USR.E.0                                                     738  LM01374
 07140 CLA +0 50000 0 01004    07141 SUB +0 40200 0 01014    07142 TNZ -0 10000 0 07152                                 
                       PROB = $ BACKG$                                              739  LM01375
 07143 CLA +0 50000 0 01264    07144 STO +0 60100 0 00117                                                               
                       PROG = $ROUND$                                               740  LM01376
 07145 CLA +0 50000 0 01236    07146 STO +0 60100 0 00116                                                               
                       NAME = $$                                                    741  LM01377
 07147 CLA +0 50000 0 01330    07150 STO +0 60100 0 00744                                                               
                    O'E                                                             742  LM01378
 07151 TRA +0 02000 0 07154                                                                                             
                       GTUSR.(LNMTY)                                                743  LM01379
 07152 TSX +0 07400 4 00110    07153 TXH +3 00000 0 00024                                                               
                    E'L                                                             744  LM01380
                    M = M+1                                                         745  LM01381
 07154 CLA +0 50000 0 00743    07155 ADD +0 40000 0 01015    07156 STO +0 60100 0 00743                                 
                 O'R COMBUF(M) .E. STAR                                             746  LM01382
 07157 TRA +0 02000 0 07275    07160 LXA +0 53400 1 00743    07161 CLA +0 50000 1 00324    07162 SUB +0 40200 0 00765   
 07163 TNZ -0 10000 0 07174                                                                                             
                    USR = USER                                                      747  LM01383
 07164 CLA +0 50000 0 01002    07165 STO +0 60100 0 01004                                                               
                    GTUSR.(LNMTY)                                                   748  LM01384
 07166 TSX +0 07400 4 00110    07167 TXH +3 00000 0 00024                                                               
                    M = M+1                                                         749  LM01385
 07170 CLA +0 50000 0 00743    07171 ADD +0 40000 0 01015    07172 STO +0 60100 0 00743                                 
                 O'E                                                                750  LM01386
 07173 TRA +0 02000 0 07275                                                                                             
                    PROB = REPROB.(COMBUF(M))                                       751  LM01387
 07174 CLA +0 50000 0 00743    07175 SUB +0 40200 0 07176    07176 TXH +3 00000 0 00324    07177 STA +0 62100 0 07201   
 07200 TSX +0 07400 4 00061    07201 TXH +3 00000 0 00000    07202 STO +0 60100 0 00117                                 
                    M = M+1                                                         752  LM01388
 07203 CLA +0 50000 0 00743    07204 ADD +0 40000 0 01015    07205 STO +0 60100 0 00743                                 
                    W'R COMBUF(M).E.FENCE, T'O ERR3                                 753  LM01389
 07206 LXA +0 53400 1 00743    07207 CLA +0 50000 1 00324    07210 SUB +0 40200 0 00122    07211 TNZ -0 10000 0 07213   
 07212 TRA +0 02000 0 00217                                                                                             
                    PROG = COMBUF(M)                                                754  LM01390
 07213 LXA +0 53400 2 00743    07214 CLA +0 50000 2 00324    07215 STO +0 60100 0 00116                                 
                    M = M+1                                                         755  LM01391
 07216 CLA +0 50000 0 00743    07217 ADD +0 40000 0 01015    07220 STO +0 60100 0 00743                                 
                    GETPRB.                                                         756  LM01392
 07221 TSX +0 07400 4 00106                                                                                             
      GTUSR1        T'H GTUSR1, FOR USR = 1,1,USR.G.N .OR.                          757  LM01393
                1      (PROB.E.PROBN(PROBN+N-USR+1).AND.                            757  LM01394
                2       PROG.E.PROGN(PROGN+N-USR+1))                                757  LM01395
 07222 CLA +0 50000 0 01015    07223 STO +0 60100 0 01004    07224 TRA +0 02000 0 07230    07225 CLA +0 50000 0 01004   
 07226 ADD +0 40000 0 01015    07227 STO +0 60100 0 01004    07230 CLA +0 50000 0 00753    07231 ADD +0 40000 0 00746   
 07232 SUB +0 40200 0 01004    07233 ADD +0 40000 0 01015    07234 PAX +0 73400 2 00000    07235 CLA +0 50000 0 00116   
 07236 SUB +0 40200 2 00753    07237 TNZ -0 10000 0 07250    07240 CLA +0 50000 0 00752    07241 ADD +0 40000 0 00746   
 07242 SUB +0 40200 0 01004    07243 ADD +0 40000 0 01015    07244 PAX +0 73400 2 00000    07245 CLA +0 50000 0 00117   
 07246 SUB +0 40200 2 00752    07247 TZE +0 10000 0 07255    07250 CLA +0 50000 0 01004    07251 SUB +0 40200 0 00746   
 07252 TZE +0 10000 0 07254    07253 TPL +0 12000 0 07255    07254 TRA +0 02000 0 07225                                 
                    W'R USR.G.N                                                     758  LM01396
 07255 CLA +0 50000 0 01004    07256 SUB +0 40200 0 00746    07257 TZE +0 10000 0 07266    07260 TMI -0 12000 0 07266   
                       USR = 0                                                      759  LM01397
 07261 CLA +0 50000 0 01014    07262 STO +0 60100 0 01004                                                               
                       NAME = $$                                                    760  LM01398
 07263 CLA +0 50000 0 01330    07264 STO +0 60100 0 00744                                                               
                       T'O NOTIN                                                    761  LM01399
 07265 TRA +0 02000 0 00024                                                                                             
                    E'L                                                             762  LM01400
                    NAME = GLOC.(COMMON.(UNAME)+USR)                                763  LM01401
 07266 TSX +0 07400 4 00103    07267 TXH +3 00000 0 00777    07270 ADD +0 40000 0 01004    07271 STO +0 60100 0 07317   
 07272 TSX +0 07400 4 00037    07273 TXH +3 00000 0 07317    07274 STO +0 60100 0 00744                                 
                 E'L                                                                764  LM01402
                 F'N                                                                765  LM01403
 07275 TRA +0 02000 0 07313                                                                                             
                 E'N                                                                766  LM01404
 07276 TSX +0 07400 4 00030    07277 TXH +3 00000 0 00000    07300 SXD -0 63400 1 07277    07301 SXA +0 63400 4 07313   
 07302 CLA +0 50000 4 00001    07303 STA +0 62100 0 07105    07304 CLA +0 50000 4 00002    07305 STA +0 62100 0 07265   
 07306 CLA +0 50000 4 00003    07307 STO +0 60100 0 07104    07310 STO +0 60100 0 07153    07311 STO +0 60100 0 07167   
 07312 TRA +0 02000 2 00001    07313 AXT +0 77400 4 00000    07314 LXA +0 53400 2 07277    07315 LXD -0 53400 1 07277   
 07316 TRA +0 02000 4 00001                                                                                             
                 I'N (LNMTY)                                                        767  LM01413
 07320 TRA +0 02000 0 07375                                                                                             
                 E'O GTUSR.                                                         768  LM01414
 07321 TRA +0 02000 0 07324    00110 TTR +0 02100 0 07322    07322 SXA +0 63400 2 07362    07323 TSX +0 07400 2 07362   
                 PROB = GLOC.(COMMON.($PROBN$)+USR)                                 769  LM01416
 07324 TSX +0 07400 4 00103    07325 TXH +3 00000 0 01231    07326 ADD +0 40000 0 01004    07327 STO +0 60100 0 07374   
 07330 TSX +0 07400 4 00037    07331 TXH +3 00000 0 07374    07332 STO +0 60100 0 00117                                 
                 W'R PROB.E.0                                                       770  LM01417
 07333 CLA +0 50000 0 00117    07334 SUB +0 40200 0 01014    07335 TNZ -0 10000 0 07342                                 
                   M = M+1                                                          771  LM01418
 07336 CLA +0 50000 0 00743    07337 ADD +0 40000 0 01015    07340 STO +0 60100 0 00743                                 
                   T'O LNMTY                                                        772  LM01419
 07341 TRA +0 02000 0 00024                                                                                             
                   E'L                                                              773  LM01420
                 PROG = GLOC.(COMMON.($PROGN$)+USR)                                 774  LM01421
 07342 TSX +0 07400 4 00103    07343 TXH +3 00000 0 01232    07344 ADD +0 40000 0 01004    07345 STO +0 60100 0 07374   
 07346 TSX +0 07400 4 00037    07347 TXH +3 00000 0 07374    07350 STO +0 60100 0 00116                                 
                 NAME = GLOC.(COMMON.(UNAME)+USR)                                   775  LM01422
 07351 TSX +0 07400 4 00103    07352 TXH +3 00000 0 00777    07353 ADD +0 40000 0 01004    07354 STO +0 60100 0 07374   
 07355 TSX +0 07400 4 00037    07356 TXH +3 00000 0 07374    07357 STO +0 60100 0 00744                                 
                 F'N                                                                776  LM01423
 07360 TRA +0 02000 0 07370                                                                                             
                 E'N                                                                777  LM01424
 07361 TSX +0 07400 4 00030    07362 TXH +3 00000 0 00000    07363 SXD -0 63400 1 07362    07364 SXA +0 63400 4 07370   
 07365 CLA +0 50000 4 00001    07366 STA +0 62100 0 07341    07367 TRA +0 02000 2 00001    07370 AXT +0 77400 4 00000   
 07371 LXA +0 53400 2 07362    07372 LXD -0 53400 1 07362    07373 TRA +0 02000 4 00001                                 
                 BOOLEAN PRBSW                                                      778  LM01433
                 V'S PRBSW = 1B                                                     779  LM01434
 00751     +0 00000 0 00001                                                                                             
                 I'N                                                                780  LM01435
 07375 TRA +0 02000 0 07456                                                                                             
                 E'O GETPRB.                                                        781  LM01436
 07376 TRA +0 02000 0 07401    00106 TTR +0 02100 0 07377    07377 SXA +0 63400 2 07445    07400 TSX +0 07400 2 07445   
                 W'R PRBSW                                                          782  LM01438
 07401 NZT -0 52000 0 00751    07402 TRA +0 02000 0 07413                                                               
                   PRBSW = 0B                                                       783  LM01439
 07403 CLA +0 50000 0 01014    07404 STO +0 60100 0 00751                                                               
                   GETBUF.(PROBN,N)                                                 784  LM01440
 07405 TSX +0 07400 4 00035    07406 TXH +3 00000 0 00752    07407 TXH +3 00000 0 00746                                 
                   GETBUF.(PROGN,N)                                                 785  LM01441
 07410 TSX +0 07400 4 00035    07411 TXH +3 00000 0 00753    07412 TXH +3 00000 0 00746                                 
                 E'L                                                                786  LM01442
                 GETARY.(COMMON.($PROBN$)+1,PROBN(PROBN+N)...N)                     787  LM01443
 07413 CLA +0 50000 0 00752    07414 ADD +0 40000 0 00746    07415 SUB +0 40200 0 07416    07416 TXH +3 00000 0 00752   
 07417 STA +0 62100 0 07426    07420 TSX +0 07400 4 00103    07421 TXH +3 00000 0 01231    07422 ADD +0 40000 0 01015   
 07423 STO +0 60100 0 07455    07424 TSX +0 07400 4 00034    07425 TXH +3 00000 0 07455    07426 TIX +2 00746 0 00000   
                 GETARY.(COMMON.($PROGN$)+1,PROGN(PROGN+N)...N)                     788  LM01444
 07427 CLA +0 50000 0 00753    07430 ADD +0 40000 0 00746    07431 SUB +0 40200 0 07432    07432 TXH +3 00000 0 00753   
 07433 STA +0 62100 0 07442    07434 TSX +0 07400 4 00103    07435 TXH +3 00000 0 01232    07436 ADD +0 40000 0 01015   
 07437 STO +0 60100 0 07455    07440 TSX +0 07400 4 00034    07441 TXH +3 00000 0 07455    07442 TIX +2 00746 0 00000   
                 F'N                                                                789  LM01445
 07443 TRA +0 02000 0 07451                                                                                             
                 E'N                                                                790  LM01446
 07444 TSX +0 07400 4 00030    07445 TXH +3 00000 0 00000    07446 SXD -0 63400 1 07445    07447 SXA +0 63400 4 07451   
 07450 TRA +0 02000 2 00001    07451 AXT +0 77400 4 00000    07452 LXA +0 53400 2 07445    07453 LXD -0 53400 1 07445   
 07454 TRA +0 02000 4 00001                                                                                             
                 BOOLEAN FRSTSW                                                     791  LM01454
                 V'S FRSTSW = 1B                                                    792  LM01455
 00725     +0 00000 0 00001                                                                                             
                 I'N (PRB,PRG,COUNT,EOF)                                            793  LM01456
 07456 TRA +0 02000 0 07621                                                                                             
                 S'L EOF                                                            794  LM01457
                 E'O READTU.                                                        795  LM01458
 07457 TRA +0 02000 0 07462    00113 TTR +0 02100 0 07460    07460 SXA +0 63400 2 07601    07461 TSX +0 07400 2 07601   
                 W'R FRSTSW                                                         796  LM01459
 07462 NZT -0 52000 0 00725    07463 TRA +0 02000 0 07535                                                               
                    FRSTSW = 0B                                                     797  LM01460
 07464 CLA +0 50000 0 01014    07465 STO +0 60100 0 00725                                                               
                    GETBUF.(B1,432)                                                 798  LM01461
 07466 TSX +0 07400 4 00035    07467 TXH +3 00000 0 00267    07470 TXH +3 00000 0 01050                                 
                    GETBUF.(B2,432)                                                 799  LM01462
 07471 TSX +0 07400 4 00035    07472 TXH +3 00000 0 00270    07473 TXH +3 00000 0 01050                                 
                    GETBUF.(B3,432)                                                 800  LM01463
 07474 TSX +0 07400 4 00035    07475 TXH +3 00000 0 00271    07476 TXH +3 00000 0 01050                                 
                    BFOPEN.(STATUS,TU,TA,B1(B1+432),B2(B2+432),M0,IOERR)            801  LM01464
 07477 CLA +0 50000 0 00270    07500 ADD +0 40000 0 01050    07501 SUB +0 40200 0 07502    07502 TXH +3 00000 0 00270   
 07503 STA +0 62100 0 07516    07504 CLA +0 50000 0 00267    07505 ADD +0 40000 0 01050    07506 SUB +0 40200 0 07507   
 07507 TXH +3 00000 0 00267    07510 STA +0 62100 0 07515    07511 TSX +0 07400 4 00007    07512 TXH +3 00000 0 00766   
 07513 TXH +3 00000 0 00776    07514 TXH +3 00000 0 00771    07515 TXH +3 00000 0 00000    07516 TXH +3 00000 0 00000   
 07517 TXH +3 00000 0 00733    07520 TXH +3 00000 0 00225                                                               
                    BUFFER.(TU,TA,B3(B3+432)...432)                                 802  LM01465
 07521 CLA +0 50000 0 00271    07522 ADD +0 40000 0 01050    07523 SUB +0 40200 0 07524    07524 TXH +3 00000 0 00271   
 07525 STA +0 62100 0 07531    07526 TSX +0 07400 4 00012    07527 TXH +3 00000 0 00776    07530 TXH +3 00000 0 00771   
 07531 TIX +2 01050 0 00000                                                                                             
                    RELLOC = 1                                                      803  LM01466
 07532 CLA +0 50000 0 01015    07533 STO +0 60100 0 00757                                                               
                 O'E                                                                804  LM01467
 07534 TRA +0 02000 0 07540                                                                                             
      RDTU1         RELLOC = RELLOC + 28                                            805  LM01468
 07535 CLA +0 50000 0 00757    07536 ADD +0 40000 0 01037    07537 STO +0 60100 0 00757                                 
                 E'L                                                                806  LM01469
                 BFREAD.(TU,TA,TUCARD(27)...28,BEOF,M0,IOERR)                       807  LM01470
 07540 TSX +0 07400 4 00010    07541 TXH +3 00000 0 00776    07542 TXH +3 00000 0 00771    07543 TIX +2 01037 0 00133   
 07544 TXH +3 00000 0 00206    07545 TXH +3 00000 0 00733    07546 TXH +3 00000 0 00225                                 
                 T'H RDTU2, FOR I = 0,1,I.G.COUNT                                   808  LM01471
 07547 CLA +0 50000 0 01014    07550 STO +0 60100 0 00730    07551 TRA +0 02000 0 07555    07552 CLA +0 50000 0 00730   
 07553 ADD +0 40000 0 01015    07554 STO +0 60100 0 00730    07555 CLA +0 50000 0 00730    07556 SUB +0 40200 0 00024   
 07557 TZE +0 10000 0 07561    07560 TPL +0 12000 0 07572                                                               
      RDTU2      W'R PRB(I).E.TUCARD(27) .AND. PRG(I).E.TUCARD(26), F'N             809  LM01472
 07561 LXA +0 53400 1 00730    07562 CLA +0 50000 1 00024    07563 SUB +0 40200 0 00134    07564 TNZ -0 10000 0 07571   
 07565 CLA +0 50000 1 00024    07566 SUB +0 40200 0 00133    07567 TNZ -0 10000 0 07571    07570 TRA +0 02000 0 07615   
 07571 TRA +0 02000 0 07552                                                                                             
                 T'O RDTU1                                                          810  LM01473
 07572 TRA +0 02000 0 00240                                                                                             
      BEOF       BFCLOS.(TU,TA,IOERR)                                               811  LM01475
 07573 TSX +0 07400 4 00006    07574 TXH +3 00000 0 00776    07575 TXH +3 00000 0 00771    07576 TXH +3 00000 0 00225   
                 T'O EOF                                                            812  LM01476
 07577 TRA +0 02000 0 00024                                                                                             
                 E'N                                                                813  LM01478
 07600 TSX +0 07400 4 00030    07601 TXH +3 00000 0 00000    07602 SXD -0 63400 1 07601    07603 SXA +0 63400 4 07615   
 07604 CLA +0 50000 4 00001    07605 STA +0 62100 0 07565    07606 CLA +0 50000 4 00002    07607 STA +0 62100 0 07562   
 07610 CLA +0 50000 4 00003    07611 STA +0 62100 0 07556    07612 CLA +0 50000 4 00004    07613 STA +0 62100 0 07577   
 07614 TRA +0 02000 2 00001    07615 AXT +0 77400 4 00000    07616 LXA +0 53400 2 07601    07617 LXD -0 53400 1 07601   
 07620 TRA +0 02000 4 00001                                                                                             
                 I'N                                                                814  LM01486
 07621 TRA +0 02000 0 07731                                                                                             
                 E'O UPSHFT.                                                        815  LM01487
 07622 TRA +0 02000 0 07625    00114 TTR +0 02100 0 07623    07623 SXA +0 63400 2 07717    07624 TSX +0 07400 2 07717   
                 T'H UPS1, FOR J = 0,1,J.G.4                                        816  LM01488
 07625 CLA +0 50000 0 01014    07626 STO +0 60100 0 00731    07627 TRA +0 02000 0 07633    07630 CLA +0 50000 0 00731   
 07631 ADD +0 40000 0 01015    07632 STO +0 60100 0 00731    07633 CLA +0 50000 0 00731    07634 SUB +0 40200 0 01020   
 07635 TZE +0 10000 0 07637    07636 TPL +0 12000 0 07710                                                               
                   W'R TUCARD(27).NE.$ C0056$, TUCARD(9-J) = 0                      817  LM01489
 07637 CLA +0 50000 0 00133    07640 SUB +0 40200 0 01266    07641 TZE +0 10000 0 07647    07642 CLA +0 50000 0 01025   
 07643 SUB +0 40200 0 00731    07644 PAX +0 73400 1 00000    07645 CLA +0 50000 0 01014    07646 STO +0 60100 1 00166   
                   TUCARD(9-J) = DEFBC.( B5(B5+J*LEN+I).A.17777777K/60 +            818  LM01490
                1                     BCDEC.(TUCARD(9-J)))                          818  LM01491
 07647 CLA +0 50000 0 01025    07650 SUB +0 40200 0 00731    07651 SUB +0 40200 0 07652    07652 TXH +3 00000 0 00166   
 07653 STA +0 62100 0 07655    07654 TSX +0 07400 4 00004    07655 TXH +3 00000 0 00000    07656 STO +0 60100 0 07727   
 07657 LDQ +0 56000 0 00731    07660 MPY +0 20000 0 00123    07661 XCA +0 13100 0 00000    07662 ADD +0 40000 0 00273   
 07663 ADD +0 40000 0 00730    07664 PAX +0 73400 1 00000    07665 CAL -0 50000 1 00273    07666 ANA -0 32000 0 01061   
 07667 SLW +0 60200 0 07730    07670 LDQ +0 56000 0 07730    07671 PXD -0 75400 0 00000    07672 LLS +0 76300 0 00000   
 07673 DVP +0 22100 0 01040    07674 XCA +0 13100 0 00000    07675 ADD +0 40000 0 07727    07676 STO +0 60100 0 07730   
 07677 TSX +0 07400 4 00021    07700 TXH +3 00000 0 07730    07701 STO +0 60100 0 07730    07702 CLA +0 50000 0 01025   
 07703 SUB +0 40200 0 00731    07704 PAX +0 73400 1 00000    07705 CLA +0 50000 0 07730    07706 STO +0 60100 1 00166   
      UPS1       C'E                                                                819  LM01492
 07707 TRA +0 02000 0 07630                                                                                             
                 PROBN(PROBN+I) = 0                                                 820  LM01493
 07710 CLA +0 50000 0 00752    07711 ADD +0 40000 0 00730    07712 PAX +0 73400 1 00000    07713 CLA +0 50000 0 01014   
 07714 STO +0 60100 1 00752                                                                                             
                 F'N                                                                821  LM01494
 07715 TRA +0 02000 0 07723                                                                                             
                 E'N                                                                822  LM01495
 07716 TSX +0 07400 4 00030    07717 TXH +3 00000 0 00000    07720 SXD -0 63400 1 07717    07721 SXA +0 63400 4 07723   
 07722 TRA +0 02000 2 00001    07723 AXT +0 77400 4 00000    07724 LXA +0 53400 2 07717    07725 LXD -0 53400 1 07717   
 07726 TRA +0 02000 4 00001                                                                                             
                 E'M                                                                823  LM01499
 07731 TSX +0 07400 4 00030                                                                                             
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 1     
                  
                       00016         ENTRY   WRITE         TO WRITE AT A USER 
                       00063         ENTRY   PCTL          SET CONSOLE OUTPUT DESTINATION 
                       00107         ENTRY   SETBCD        KEEP TRACK OF CONSOLE MODE     
                       00111         ENTRY   SETFUL          DITTO
                       00113         ENTRY   WRFLX         DIVERT CONSOLE OUTPUT    
                       00121         ENTRY   WRFLXA          DITTO
                       00164         ENTRY   PRNTON        PRINT A MESSAGE ONLINE   
                  
                  
                  
                                     EXTERN  COMLOC,SETLOC,RSSWB,RDFLXA 
                                     EXTERN  FSTATE,GETMEM,SETMEM,OPEN,RDFILE,CLOSE,WHOAMI,PRINT
                  
                  
                  
 M                            CALL   MACRO   NAME,LIST                                                            
                                     TSX     NAME,4   
                                     IRP     LIST     
                                     PAR     LIST     
                                     IRP  
                              CALL   END  
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 2     
                         WRITE                                                      
                  
                  
        TRANSFER VECTOR 
      00000  234644434623     COMLOC
      00001  622563434623     SETLOC
      00002  516262662260     RSSWB 
      00003  512426436721     RDFLXA
      00004  266263216325     FSTATE
      00005  272563442544     GETMEM
      00006  622563442544     SETMEM
      00007  464725456060     OPEN  
      00010  512426314325     RDFILE
      00011  234346622560     CLOSE 
      00012  663046214431     WHOAMI
      00013  475131456360     PRINT 
                  
            LINKAGE DIRECTOR  
      00014  000000000000     
      00015  665131632560     
                  
      00016  0634 00 4 00053  WRITE  SXA     WX4,4         WRITE AT A USER    
      00017 -0500 60 4 00001         CAL*    1,4           WHO IS HE    
      00020  0602 00 0 01031         SLW     USER     
      00021  0074 00 4 00124         TSX     .WRFXA,4      ASK FOR A MESSAGE  
      00022 -1 00004 0 00055         MON     TYPE,,TYPEL     (FORCE 12-BIT MODE)    
      00023 -0500 00 0 00061         CAL     MZE           FORCE OUTPUT IN SIX-BIT MODE   
      00024  0520 00 0 01032         ZET     FULL            UNLESS WE READ IT IN FULL MODE     
      00025 -0500 00 0 00062         CAL     MON             ..   
      00026  0630 00 0 00040         STP     WRTIT           ..   
      00027  0074 00 4 00756         TSX     RDFLXX,4      WAIT AND READ MESSAGE    
      00030  0 00016 0 01033         PZE     BUFF,,14        ..   
      00031 -0320 00 0 01130         ANA     =O40000       BIT ON IF NOT DONE 
      00032  0602 00 0 01051         SLW     DONE          SAVE FOR END TEST  
      00033  0074 00 4 00002         TSX     RSSWB,4       FLUSH ANY BUFFERED OUTPUT
      00034  3 00000 0 01031         PAR     USER            FOR TARGET USER  
      00035 -0520 00 0 01051  WRLP   NZT     DONE          IS THIS THE LAST   
      00036  0020 00 0 00046         TRA     WRLST           YES. 
      00037  0074 00 4 00124         TSX     .WRFXA,4      WRITE AT HIM 
      00040  0 00016 0 01033  WRTIT  ***     BUFF,,14        ..   
      00041  0 00000 0 01031         PZE     USER            ..   
      00042  0074 00 4 00756         TSX     RDFLXX,4       READ NEXT INSTALLMENT   
      00043  0 00016 0 01033                 BUFF,,14        ..   
      00044 -0320 00 0 01130         ANA     =O40000         ..   
      00045 -0100 00 0 00035         TNZ     WRLP          LOOP UNTIL DONE    
                  
      00046 -0500 00 0 00040  WRLST  CAL     WRTIT         GET OUTPUT MODE    
      00047  0630 00 0 00051         STP     *+2             INTO THIS CALL   
      00050  0074 00 4 00116         TSX     .WRFX,4       WRITE LAST CHUNK   
      00051  0 00016 0 01033         ***     BUFF,,14        ..   
      00052  0 00000 0 01031         PZE     USER            ..   
      00053  0774 00 4 00000  WX4    AXT     **,4          RESTORE
      00054  0020 00 4 00002         TRA     2,4             AND RETURN 
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 3     
                         WRITE                                                      
                  
      00055 +013300570057     TYPE   OCT     013300570057  RED SHIFT    
      00056  006301700147            12BIT   /*TYPE: /
      00057  012500350060     
      00060 +013200570057            OCT     013200570057  BLACK SHIFT  
                       00004  TYPEL  EQU     *-TYPE   
      00061 -0 00000 0 00000  MZE    MZE  
      00062 -1 00000 0 00000  MON    MON  
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 4     
                          PCTL - PRINT CONTROL                                      
                  
      00063  0634 00 4 00105  PCTL   SXA     LX4,4         SET CONSOLE OUTPUT DESTINATION 
      00064 -0500 60 4 00001         CAL*    1,4           GET NEW FLAG 
      00065 -0625 00 0 01052         STL     CON           ASSUME ON FOR CONCOLE    
      00066 -0625 00 0 01053         STL     PRT             AND PRINTER
      00067  0760 00 0 00001         LBT                   CHECK ASSUMPTIONS  
      00070  0600 00 0 01052         STZ     CON             FLUSH CONSOLE    
      00071  0771 00 0 00001         ARS     1             GET ON-LINE BIT    
      00072  0760 00 0 00001         LBT                     ..   
      00073  0600 00 0 01053         STZ     PRT             THAT NEITHER     
      00074  0520 00 0 01053         ZET     PRT           IS THE PRINTER ON  
      00075  0020 00 0 00105         TRA     LX4             YES, EXIT  
      00076  0534 00 4 00712         LXA     OUTLEN,4        NO, CLOSE ANY PARTIAL LINE   
      00077 -3 00000 4 00105         TXL     LX4,4,0         WEREN'T NONE     
      00100  0074 00 4 00717         TSX     SAVE,4        SAVE REGISTERS     
      00101  0074 00 7 00710         TSX     RST,7         RESTORE POINTERS   
      00102  0074 00 7 00650         TSX     PR,7          PRINT LINE   
      00103  0074 00 7 00714         TSX     SAV,7         SAVE NEW POINTERS  
      00104  0074 00 4 00737         TSX     RESTOR,4      RESTORE REGISTERS  
      00105  0774 00 4 00000  LX4    AXT     **,4            ..   
      00106  0020 00 4 00002         TRA     2,4           RETURN 
                  
      00107  0600 00 0 01032  SETBCD STZ     FULL          KEEP TRACK   
      00110  0101 00 0 01140         TIA     =HSETBCD         ..  
                  
      00111 -0625 00 0 01032  SETFUL STL     FULL          DITTO  
      00112  0101 00 0 01141         TIA     =HSETFUL        ..   
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 5     
                          WRFLX AND WRFLXA WRITE AROUNDS                            
                  
      00113 -0520 00 0 01053  WRFLX  NZT     PRT           IF PRINTING ONLY   
      00114 -0520 00 0 01052         NZT     CON             ON THE USER'S CONSOLE, 
      00115  0020 00 0 00117         TRA     *+2             ..   
      00116  0101 00 0 01143  .WRFX  TIA     =HWRFLX         DO IT RIGHT AWAY 
      00117 -0625 00 0 01054         STL     EXTRA         REMEMBER THE CR    
      00120  0020 00 0 00126         TRA     JOIN            ..   
                  
      00121 -0520 00 0 01053  WRFLXA NZT     PRT           SAME HERE    
      00122 -0520 00 0 01052         NZT     CON             ..   
      00123  0020 00 0 00125         TRA     *+2             ..   
      00124  0101 00 0 01142  .WRFXA TIA     =HWRFLXA        ..   
      00125  0600 00 0 01054         STZ     EXTRA         NO CR  
                  
      00126 -0520 00 0 01053  JOIN   NZT     PRT           SHOULD WE PRINT ON-LINE  
      00127  0020 00 0 00146         TRA     CON.Q           NO, CHECK FOR CONSOLE  
      00130  0634 00 4 00145         SXA     JX4,4         SAVE RETURN  
      00131  0560 00 0 01032         LDQ     FULL          LINE IS 12-BIT IF FULL .NE. 0  
      00132  0500 00 4 00001         CLA     1,4           UNLESS 1,4 IS NEGATIVE   
      00133  0602 00 0 00144         SLW     JP              ..   
      00134  0120 00 0 00142         TPL     *+6             ..   
      00135  0771 00 0 00017         ARS     15            GET PREFIX   
      00136 -0734 00 4 00000         PDX     ,4              ..   
      00137  3 00001 4 00142         TXH     *+3,4,1       IS IT MEANINGFUL   
      00140  0754 00 4 00000         PXA     ,4            YES, USE IT FOR FLAG     
      00141  0131 00 0 00000         XCA                     ..   
      00142 -0600 00 0 01055         STQ     12BIT           ..   
                  
      00143  0074 00 4 00463         TSX     PRNT,4        PRINT THE LINE     
      00144  0 00000 0 00000  JP             **,,**          ..   
      00145  0774 00 4 00000  JX4    AXT     **,4          RESTORE RETURN     
                  
      00146 -0520 00 0 01052  CON.Q  NZT     CON           PRINT ON THE CONSOLE     
      00147  0020 00 0 00153         TRA     SKIPCS          NO, SKIP OVER CALLING SEQ.   
      00150 -0520 00 0 01054         NZT     EXTRA           YES, WHICH CALL WAS THIS     
      00151  0101 00 0 01142         TIA     =HWRFLXA        ..   
      00152  0101 00 0 01143         TIA     =HWRFLX         ..   
                  
      00153  0604 00 0 01056  SKIPCS STI     SI            SAVE TEMPS   
      00154  0441 00 4 00002         LDI     2,4           IS 'USER' SPECIFIED
      00155 -0625 00 0 01054         STL     EXTRA         ASSUME YES   
      00156  0444 00 0 01134         OFT     =O477777700000   ..  
      00157  0600 00 0 01054         STZ     EXTRA           NOPE 
      00160  0441 00 0 01056         LDI     SI            RESTORE
      00161 -0520 00 0 01054         NZT     EXTRA         RETURN AFTER CALLING SEQ.
      00162  0020 00 4 00002         TRA     2,4             ..   
      00163  0020 00 4 00003         TRA     3,4             ..   
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 6     
                          PRNTON - PRINT ONLINE                                     
                  
                              ************************************************************************
                              ******************    FROM  M1416  5886  ON  800280    *****************
                              ************************************************************************
                  
      00164  0634 00 4 00427  PRNTON SXA     PRT4,4        PRINT ON THE ON-LINE PRINTER   
      00165  0634 00 1 00426         SXA     PRT1,1          ..   
      00166 -0500 60 4 00001         CAL*    1,4           GET POSSIBLE NAME1 OF FILE     
      00167  0602 00 0 01061         SLW     N1              ..   
      00170  0322 00 0 01063         ERA     FENCE         CHECK FOR END OF ARGUMENT STRING     
      00171  0602 00 0 01064         SLW     CONFL           ..   
      00172  0100 00 0 00254         TZE     CONIN         INPUT FROM CONSOLE IF NO NAME  
      00173 -0500 60 4 00002         CAL*    2,4             ..   
      00174  0602 00 0 01062         SLW     N2            GRAB NAME2   
                  
      00175                          CALL    FSTATE(N1,N2(TEMP,,1)) GET FILE LENGTH 
      00201 -0520 00 0 01030         NZT     TEMP          IF LENGTH ZERO,    
      00202  0020 00 0 00431         TRA     NOMESS          NO INPUT.  
                  
      00203  0074 00 4 00005         TSX     GETMEM,4      GET BEGINNING OF BUFFER  
      00204  0621 00 0 00372         STA     INPUT         SAVE FOR LATER     
      00205  0621 00 0 00224         STA     R               AND FOR FILE READ
      00206  0400 00 0 01030         ADD     TEMP          EXTEND AS NECESSARY
      00207  0737 00 4 00000         PAC     ,4              ..   
      00210 -0634 00 4 00240         SXD     END.Q,4       INSERT IN END TESTS
      00211 -0634 00 4 00374         SXD     FINISQ,4        ..   
      00212  0400 00 0 01124         ADD     =14           JUST IN CASE 
      00213  0074 00 4 00006         TSX     SETMEM,4      SET NEW MEMORY BOUND     
      00214                          CALL    OPEN(=HR,N1,N2)
      00220                          CALL    RDFILE(N1,N2,=0) GULP
      00224  2 01030 0 00000  R      BLK     **,,TEMP        ..   
      00225                          CALL    CLOSE(N1,N2)   
                  
      00230  0535 00 1 00372         LAC     INPUT,1       CHECK FOR AND REFORMAT CARD IMAGE RECORDS  
                  
      00231  0441 00 1 00000  FL     LDI     0,1           CHECK FIRST WORD OF EACH RECORD
      00232 -0056 00  777777         LNT     /             IS IT A LINEMARK   
      00233  0020 00 0 00242         TRA     CARD            NO, MUST BE CARDIMAGE RECORD 
      00234  0756 00 1 00000         PCA     ,1              YES  
      00235  0401 00 1 00000         ADM     0,1           MOVE TO NEXT RECORD
      00236  0737 00 1 00000         PAC     ,1              ..   
      00237  1 77777 1 00240         TXI     *+1,1,-1      SKIP LINEMARK TOO  
      00240  3 00000 1 00231  END.Q  TXH     FL,1,**       LOOP UNTIL OUT OF INPUT  
      00241  0020 00 0 00323         TRA     PHEAD           THEN GO PRINT    
                  
      00242  0774 00 4 00014  CARD   AXT     12,4          CARD-IMAGE, PRINT 12 WORDS     
      00243 -0500 00 0 01123         CAL     =13           SET RECORD LENGTH TO 13  
      00244  0560 00 1 00000         LDQ     0,1           MOVE RECORD DOWN   
      00245  0601 00 1 00000         STO     0,1             TO MAKE ROOM FOR CONTROL WORD
      00246  0131 00 0 00000         XCA                     ..   
      00247  1 77777 1 00250         TXI     *+1,1,-1        ..   
      00250  2 00001 4 00244         TIX     *-4,4,1       LOOP FOR 12 WORDS  
      00251  0560 00 0 01137         LDQ     =H            BLANK OUT LAST WORD
      00252 -0603 00 1 00000         DST     0,1             ..   
      00253  1 77776 1 00240         TXI     END.Q,1,-2    LOOK AT NEXT 
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 7     
                          PRNTON - PRINT ONLINE                                     
                  
      00254  0074 00 4 00005  CONIN  TSX     GETMEM,4      GET BASE ADDRESS FOR INPUT     
      00255  0621 00 0 00372         STA     INPUT         SAVE FOR PRINTING  
      00256  0737 00 1 00000         PAC     ,1            REMEMBER FOR READING     
      00257  0400 00 0 01127         ADD     =100          MAKE SOME ROOM     
      00260  0737 00 4 00000         PAC     ,4              ..   
      00261 -0634 00 4 00270         SXD     XTND.Q,4      INSERT IN END TEST 
      00262  0074 00 4 00006         TSX     SETMEM,4      SET IT 
                  
      00263  0074 00 4 00124  INL    TSX     .WRFXA,4      ASK FOR INPUT
      00264 -1 00004 0 00055         MON     TYPE,,TYPEL     ..   
      00265  1 77777 1 00266         TXI     *+1,1,-1      BUMP POINTER 
      00266  0636 00 1 00272         SCA     CONPTR,1      AND INSERT IN CALL 
      00267  1 77727 1 00270         TXI     *+1,1,-41     TEST FOR POSSIBLE P.M.V. 
      00270 -3 00000 1 00312  XTND.Q TXL     XTND,1,**       YES, EXTEND MEMORY BOUND     
      00271  0074 00 4 00756  XTND.R TSX     RDFLXX,4      READ NEXT LINE     
      00272  0 00051 0 00000  CONPTR         **,,41          ..   
      00273  0734 00 4 00000         PAX     ,4            PLAY WITH COUNT    
      00274 -3 00000 4 00320         TXL     CONEND,4,0    DONE IF JUST CR    
      00275  3 37777 4 00277         TXH     *+2,4,16383   IGNORE PARTIAL FLAG
      00276  1 00005 4 00300         TXI     *+2,4,5         MAKE DIVIDE WORK 
      00277  0774 00 4 00366         AXT     6*41,4          ..   
      00300  0754 00 4 00000         PXA     ,4              ..   
      00301 -0130 00 0 00000         XCL                     ..   
      00302 -0754 00 0 00000         ZAC                   GET NUMBER OF FULL WORDS 
      00303  0221 00 0 01121         DVP     =6              ..   
      00304 -0130 00 0 00000         XCL                     ..   
      00305  0535 00 1 00272         LAC     CONPTR,1      GET CONTROL WORD LOC'N   
      00306  0602 00 1 77777         SLW     -1,1            ..   
      00307  0401 00 0 00272         ADM     CONPTR        GET NEW NEXT LOCATION    
      00310  0737 00 1 00000         PAC     ,1              ..   
      00311  0020 00 0 00263         TRA     INL           GO FOR NEXT LINE   
                  
      00312  0074 00 4 00005  XTND   TSX     GETMEM,4      EXTEND MEMORY BOUND
      00313  0400 00 0 01127         ADD     =100     
      00314  0737 00 4 00000         PAC     ,4 
      00315 -0634 00 4 00270         SXD     XTND.Q,4 
      00316  0074 00 4 00006         TSX     SETMEM,4 
      00317  0020 00 0 00271         TRA     XTND.R   
                  
      00320  0535 00 1 00272  CONEND LAC     CONPTR,1      GET LAST LOCATION USED   
      00321  1 00001 1 00322         TXI     *+1,1,1         ..   
      00322 -0634 00 1 00374         SXD     FINISQ,1        AND SAVE FOR END TEST  
                  
      00323 -0534 00 4 00374  PHEAD  LXD     FINISQ,4      HAVE WE ANY INPUT  
      00324  0756 00 4 00000         PCA     ,4              ..   
      00325  0322 00 0 00372         ERA     INPUT         NOT IF BEGINNING AND     
      00326 -0320 00 0 01131         ANA     =O77777         END ARE THE SAME 
      00327  0100 00 0 00431         TZE     NOMESS          ..   
                  
      00330                          CALL    WHOAMI((ME,,4)) SET UP HEADER    
      00332 -0500 00 0 01136         CAL     =H  ON   
      00333  0602 00 0 00455         SLW     ME+2     
      00334 -0500 00 0 00456         CAL     ME+3     
      00335  0560 00 0 00457         LDQ     ME+4     
      00336 -0765 00 0 00022         LGR     18 
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 8     
                          PRNTON - PRINT ONLINE                                     
                  
      00337 -0600 00 0 00457         STQ     ME+4     
      00340 -0500 00 0 00455         CAL     ME+2     
      00341  0560 00 0 00456         LDQ     ME+3     
      00342 -0765 00 0 00022         LGR     18 
      00343 -0600 00 0 00456         STQ     ME+3     
      00344 -0500 00 0 00454         CAL     ME+1     
      00345  0560 00 0 00455         LDQ     ME+2     
      00346 -0765 00 0 00022         LGR     18 
      00347 -0600 00 0 00455         STQ     ME+2     
      00350 -0500 00 0 00453         CAL     ME 
      00351  0560 00 0 00454         LDQ     ME+1     
      00352 -0765 00 0 00022         LGR     18 
      00353 -0600 00 0 00454         STQ     ME+1     
      00354 -0501 00 0 01133         ORA     =HOM 000 
      00355  0602 00 0 00453         SLW     ME 
                  
      00356  0074 00 4 00013         TSX     PRINT,4         AND PRINT IT     
      00357  2 00014 0 00436         PTW     STARS,,12
      00360  0074 00 4 00013         TSX     PRINT,4  
      00361  0 00014 0 00447                 ID,,12   
      00362  0074 00 4 00013         TSX     PRINT,4  
      00363  0 00014 0 00436                 STARS,,12
      00364  0074 00 4 00013         TSX     PRINT,4  
      00365  0 00001 0 01137                 =H      ,,1    
                  
      00366  0520 00 0 01064         ZET     CONFL         IS THIS FROM THE CONSOLE 
      00367  0020 00 0 00372         TRA     *+3             NO   
      00370 -0500 00 0 01032         CAL     FULL            YES, 12-BIT IF   
      00371  0602 00 0 01055         SLW     12BIT             FULL IS SET    
                  
      00372 -0774 00 1 00000  INPUT  AXC     **,1          SET STARTING LOCATION    
      00373 -0625 00 0 01054         STL     EXTRA         APPEND CR'S  
                  
      00374 -3 00000 1 00424  FINISQ TXL     OUT,1,**      ARE WE DONE YET    
      00375 -0500 00 1 00000         CAL     0,1           GET NEXT CONTROL WORD    
      00376  1 77777 1 00377         TXI     *+1,1,-1        AND SET START LOC'N OF LINE  
      00377  0636 00 1 00416         SCA     PRTL,1          ..   
      00400  0767 00 0 00022         ALS     18            SET LINE LENGTH FROM CONTROL WORD    
      00401  0622 00 0 00416         STD     PRTL            ..   
      00402 -0520 00 0 01064         NZT     CONFL         IS MODE KNOWN
      00403  0020 00 0 00415         TRA     PRNTIT          YES, SKIP  
      00404 -0734 00 4 00000         PDX     ,4              NO, DEFINE 
      00405 -0754 00 0 00000         ZAC                     ..   
      00406 -0501 00 1 00000         ORA     0,1           COMBINE ALL WORDS OF LINE
      00407  1 77777 1 00410         TXI     *+1,1,-1        ..   
      00410  2 00001 4 00406         TIX     *-2,4,1         ..   
      00411  0044 00 0 00000         PAI                     ..   
      00412 -0625 00 0 01055         STL     12BIT         ASSUME FULL-MODE   
      00413  0444 00 0 01144         OFT     =O720072007200 IF ALL OFF, 
      00414  0600 00 0 01055         STZ     12BIT           MUST HAVE BEEN SIXBIT  
                  
      00415  0074 00 4 00463  PRNTIT TSX     PRNT,4        CALL HAIRY PRINT ROUTINE 
      00416  0 00000 0 00000  PRTL           **,,**          ..   
      00417 -0500 00 0 00416         CAL     PRTL          COMPUTE LOCATION OF NEXT LINE  
      00420  0771 00 0 00022         ARS     18              ..   
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 9     
                          PRNTON - PRINT ONLINE                                     
                  
      00421  0401 00 0 00416         ADM     PRTL            ..   
      00422  0737 00 1 00000         PAC     ,1              ..   
      00423  0020 00 0 00374         TRA     FINISQ        CHECK FOR DONE     
                  
      00424  0074 00 4 00013  OUT    TSX     PRINT,4       ALL DONE, SIGN OFF.
      00425  2 00002 0 00434         PTW     THANKS,,2       ..   
                  
      00426  0774 00 1 00000  PRT1   AXT     **,1          RESTORE
      00427  0774 00 4 00000  PRT4   AXT     **,4            ..   
      00430  0020 00 4 00003         TRA     3,4             ..   
                  
      00431  0074 00 4 00116  NOMESS TSX     .WRFX,4       NO INPUT, GRIPE.   
      00432 -0 00003 0 01065         MZE     NOINP,,NOINPL   ..   
      00433  0020 00 0 00426         TRA     PRT1     
                  
      00434  606330214542     THANKS BCI     / THANK YOU./  
      00435  607046643357     
                  
                       00436  STARS  DUP     1,9
      00436  545454545454            BCI     /******/ 
      00437  545454545454     
      00440  545454545454     
      00441  545454545454     
      00442  545454545454     
      00443  545454545454     
      00444  545454545454     
      00445  545454545454     
      00446  545454545454     
                       00447  ID     DUP     1,3
      00447  545454545454            BCI     /******/ 
      00450  545454545454     
      00451  545454545454     
      00452  606060602651            BCI     1,    FROM     
      00453  606060604401     ME     BCI     4,    M1416  5886  ON  800280    
      00454  040106606005     
      00455  101006606046     
      00456  456060100000     
      00457  606060606060            BCI     4,       ***************** 
      00460  605454545454     
      00461  545454545454     
      00462  545454545454     
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 10    
                           PRNT - PRINT ONLINE INTERNAL SUBROUTINE                  
                  
      00463  0634 00 4 00706  PRNT   SXA     PX4,4         PRINT ONLINE 
      00464 -0500 00 4 00001         CAL     1,4           FIND LINE    
      00465  0771 00 0 00022         ARS     18              ..   
      00466  0621 00 0 00501         STA     INLEN         SAVE LENGTH  
      00467  0401 00 4 00001         ADM     1,4             ..   
      00470  0621 00 0 00566         STA     INPLOC        AND LOCATION 
      00471  0074 00 4 00717         TSX     SAVE,4        SAVE THE WORLD     
      00472 -0500 00 0 01070         CAL     SIXCON        GET CONSTANTS FOR 6-BIT MODE   
      00473  0520 00 0 01055         ZET     12BIT           UNLESS MODE IS FULL    
      00474 -0500 00 0 01071         CAL     FULCON          ..   
      00475  0621 00 0 00567         STA     INNO          SET NUMBER CHARS PER WORD
      00476  0771 00 0 00022         ARS     18              ..   
      00477  0621 00 0 00571         STA     SFT             AND NUMBER BITS PER CHAR     
      00500  0074 00 7 00710         TSX     RST,7         RESTORE OUTPUT POINTERS  
      00501  0774 00 1 00000  INLEN  AXT     **,1          RECALL LENGTH
      00502  0522 00 0 00567         XEC     INNO          SET UP 
      00503  1 00001 4 00504         TXI     *+1,4,1         ..   
      00504  0560 60 0 00566         LDQ*    INPLOC          ..   
                  
      00505  0074 00 7 00564  PL     TSX     GTC,7         GET NEXT CHARACTER 
      00506  0054 00  000200         RFT     200           SHOULD IT BE IGNORED     
      00507  0020 00 0 00505         TRA     PL              YES  
      00510  0054 00  000100         RFT     100           IS IT CONTROL
      00511  0020 00 0 00515         TRA     CONTRL          YES  
      00512 -0520 00 0 01072         NZT     FILLED        IS OUTPUT LINE FULL
      00513  0074 00 7 00550         TSX     STC,7           NO, STORE CHARACTER    
      00514  0020 00 0 00505         TRA     PL            LOOP   
                  
      00515 -0320 00 0 01126  CONTRL ANA     =O77          REMOVE CONTROL BIT 
      00516  0737 00 3 00000         PAC     ,3              ..   
      00517  0020 60 3 00520         TRA*    *+1,3         GO TO FUNCTION     
      00520  0 00000 0 00524                 CR 
      00521  0 00000 0 00530                 TAB
      00522  0 00000 0 00526                 BS 
      00523  0 00000 0 00540                 LF 
                  
      00524  0074 00 7 00650  CR     TSX     PR,7          CARRIAGE RETURN, PRINT LINE    
      00525  0020 00 0 00505         TRA     PL 
                  
      00526  0074 00 7 00564  BS     TSX     GTC,7         BACKSPACE, IGNORE NEXT CHAR    
      00527  0020 00 0 00505         TRA     PL              ..   
                  
      00530  0754 00 6 00000  TAB    PXA     ,6            TAB, GET LINE LENGTH     
      00531  0734 00 3 00000         PAX     ,3 
      00532  2 00012 3 00532         TIX     *,3,10   
      00533  3 00011 3 00544         TXH     SKIP,3,9 
      00534  1 77766 3 00535         TXI     *+1,3,-10
      00535  0756 00 3 00000         PCA     ,3 
      00536  0734 00 3 00000         PAX     ,3 
      00537  0020 00 0 00544         TRA     SKIP     
                  
      00540  0634 00 6 00542  LF     SXA     *+2,6         LINE FEED, SAVE CURRENT POSITION     
      00541  0074 00 7 00650         TSX     PR,7          PRINT LINE   
      00542  0774 00 3 00000         AXT     **,3          THEN SPACE OUT TO OLD POSITION 
      00543 -3 00000 3 00505         TXL     PL,3,0          ..   
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 11    
                           PRNT - PRINT ONLINE INTERNAL SUBROUTINE                  
                  
      00544 -0500 00 0 01125  SKIP   CAL     =O60          INSERT SPACES
      00545  0074 00 7 00550         TSX     STC,7           ..   
      00546  2 00001 3 00544         TIX     SKIP,3,1        ..   
      00547  0020 00 0 00505         TRA     PL              ..   
                  
      00550 -0765 00 0 00006  STC    LGR     6             STORE CHAR IN OUTPUT     
      00551 -0500 00 2 01117         CAL     OUTWRD+20,2     ..   
      00552 -0763 00 0 00006         LGL     6             APPEND TO WORD     
      00553  0602 00 2 01117         SLW     OUTWRD+20,2    
      00554  1 00001 6 00555         TXI     *+1,6,1       BUMP CHAR. COUNT   
      00555 -0140 00 7 00001         TNO     1,7           EXIT IF NOT FULL   
      00556  2 00001 2 00561         TIX     *+3,2,1       MOVE TO NEXT WORD OTHERWISE    
      00557 -0625 00 0 01072         STL     FILLED        LINE IS FULL 
      00560  0020 00 7 00001         TRA     1,7
      00561 -0500 00 0 01122         CAL     =7            SET OVERFLOW BITS  
      00562  0602 00 2 01117         SLW     OUTWRD+20,2     IN NEW WORD
      00563  0020 00 7 00001         TRA     1,7
                  
      00564  2 00001 4 00570  GTC    TIX     GTC1,4,1      GET NEXT INPUT CHARACTER 
      00565 -2 00001 1 00702         TNX     INPDON,1,1    EXIT IF NONE LEFT  
      00566  0560 00 1 00000  INPLOC LDQ     **,1          GRAB NEXT WORD     
      00567  0774 00 4 00000  INNO   AXT     **,4          SET NUMBER CHARS LEFT IN THIS WORD   
      00570 -0754 00 0 00000  GTC1   ZAC                   FLUSH GARBAGE
      00571 -0763 00 0 00000  SFT    LGL     **            GET HI-ORDER N-2 BITS OF CHAR  
      00572  0734 00 3 00000         PAX     ,3            CHECK FOR GOOD CHAR
      00573 -3 00077 3 00575         TXL     *+2,3,63      IF 'IGNORE IN SIXBIT' FLAG IS ON,    
      00574  1 77700 3 00575         TXI     *+1,3,-64       RESET IT.  
      00575  3 00037 3 00564         TXH     GTC,3,31      TRY NEXT IF TOO LARGE    
      00576 -0754 00 0 00000         ZAC                   COMPUTE POSITION IN TABLE WORD 
      00577 -0763 00 0 00002         LGL     2               OF TRANSLATION FOR THIS CHAR 
      00600  0602 00 0 01030         SLW     TEMP            ..   
      00601  0767 00 0 00003         ALS     3               ..   
      00602  0400 00 0 01030         ADD     TEMP            ..   
      00603  0737 00 5 00000         PAC     ,5              ..   
      00604 -0500 00 3 00647         CAL     CVTBL,3       GET TRANSLATION    
      00605  0771 00 5 00000         ARS     ,5              ..   
      00606  0044 00 0 00000         PAI                   IN SI AND LAC
      00607  0020 00 7 00001         TRA     1,7
                  
      00610 +200200200200            OCT     200200200200   
      00611 +200200071070            OCT     200200071070   
      00612 +067066065064            OCT     067066065064   
      00613 +063062200200            OCT     063062200200   
      00614 +200200200200            OCT     200200200200   
      00615 +200200051050            OCT     200200051050   
      00616 +047046045044            OCT     047046045044   
      00617 +043042041200            OCT     043042041200   
      00620 +200100102200            OCT     200100102200   
      00621 +200200031030            OCT     200200031030   
      00622 +027026025024            OCT     027026025024   
      00623 +023022021020            OCT     023022021020   
      00624 +200200200200            OCT     200200200200   
      00625 +200200200200            OCT     200200200200   
      00626 +103200200200            OCT     103200200200   
      00627 +073200200200            OCT     073200200200   
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 12    
                           PRNT - PRINT ONLINE INTERNAL SUBROUTINE                  
                  
      00630 +200200200074            OCT     200200200074   
      00631 +073101071070            OCT     073101071070   
      00632 +067066065064            OCT     067066065064   
      00633 +063062061060            OCT     063062061060   
      00634 +200200100054            OCT     200200100054   
      00635 +053200051050            OCT     053200051050   
      00636 +047046045044            OCT     047046045044   
      00637 +043042041040            OCT     043042041040   
      00640 +200200033034            OCT     200200033034   
      00641 +033200031030            OCT     033200031030   
      00642 +027026025024            OCT     027026025024   
      00643 +023022021020            OCT     023022021020   
      00644 +200200200014            OCT     200200200014   
      00645 +013200011010            OCT     013200011010   
      00646 +007006005004            OCT     007006005004   
      00647 +003002001000     CVTBL  OCT     003002001000   
                  
      00650  0634 00 7 00700  PR     SXA     PR7,7         PRINT THIS LINE    
      00651  0634 00 4 00677         SXA     PR4,4           ..   
      00652  0754 00 6 00000         PXA     ,6            GET LINE LENGTH    
      00653  0131 00 0 00000         XCA                     ..   
      00654 -0754 00 0 00000         ZAC                     ..   
      00655  0221 00 0 01121         DVP     =6            COMPUTE NUMBER HOLES IN CURRENT OUTPUT WORD
      00656  0100 00 0 00664         TZE     *+6           DON'T FILL IF ZERO 
      00657  0402 00 0 01121         SUB     =6              ..   
      00660  0734 00 3 00000         PAX     ,3              ..   
      00661 -0500 00 0 01125         CAL     =O60          PAD WITH SPACES    
      00662  0074 00 7 00550         TSX     STC,7           ..   
      00663  2 00001 3 00661         TIX     *-2,3,1         ..   
      00664 -0520 00 0 01072         NZT     FILLED        COMPUTE LENGTH OF OUTPUT LINE  
      00665  1 77754 2 00667         TXI     *+2,2,-20       ..   
      00666  1 77753 2 00667         TXI     *+1,2,-21       ..   
      00667 -0636 00 2 00671         SCD     *+2,2         SET IN CALL  
      00670  0074 00 4 00013         TSX     PRINT,4       PRINT THE LINE     
      00671  0 00000 0 01073                 OUTWRD,,**      ..   
      00672  0774 00 6 00000         AXT     0,6           RESET LINE LENGTH  
      00673  0774 00 2 00024         AXT     20,2            AND WORD POINTER 
      00674 -0500 00 0 01122         CAL     =7            SET OVERFLOW BITS  
      00675  0602 00 0 01073         SLW     OUTWRD          ..   
      00676  0600 00 0 01072         STZ     FILLED          ..   
      00677  0774 00 4 00000  PR4    AXT     **,4            ..   
      00700  0774 00 7 00000  PR7    AXT     **,7          RESTORE AND  
      00701  0020 00 7 00001         TRA     1,7             RETURN     
                  
      00702  0520 00 0 01054  INPDON ZET     EXTRA         INPUT DONE, IF EXTRA CR, 
      00703  0074 00 7 00650         TSX     PR,7            PRINT LAST LINE  
      00704  0074 00 7 00714         TSX     SAV,7         SAVE OUTPUT POINTERS     
      00705  0074 00 4 00737         TSX     RESTOR,4      RESTORE REGISTERS  
      00706  0774 00 4 00000  PX4    AXT     **,4            ..   
      00707  0020 00 4 00002         TRA     2,4           RETURN 
                  
      00710  0140 00 0 00711  RST    TOV     *+1           RESTORE OUTPUT POINTERS  
      00711  0774 00 2 00024  OUTSIZ AXT     20,2            ..   
      00712  0774 00 6 00000  OUTLEN AXT     0,6             ..   
      00713  0020 00 7 00001         TRA     1,7
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 13    
                           PRNT - PRINT ONLINE INTERNAL SUBROUTINE                  
                  
      00714  0634 00 2 00711  SAV    SXA     OUTSIZ,2      SAVE OUTPUT POINTERS     
      00715  0634 00 6 00712         SXA     OUTLEN,6        ..   
      00716  0020 00 7 00001         TRA     1,7             ..   
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 14    
                           SAVE AND RESTOR                                          
                  
      00717  0604 00 0 01056  SAVE   STI     SI            SAVE REGISTERS     
      00720 -0600 00 0 01057         STQ     MQ              ..   
      00721  0602 00 0 01060         SLW     LAC           (LIKE UNTO PMTI)   
      00722  0634 00 1 00754         SXA     SX1,1    
      00723  0634 00 2 00753         SXA     SX2,2    
      00724  0634 00 3 00750         SXA     SX3,3    
      00725  0774 00 1 00000         AXT     0,1
      00726  0774 00 3 77777         AXT     -1,3     
      00727  0634 00 1 01117         SXA     MTM,1    
      00730  0760 00 0 00016         LMTM 
      00731  0520 00 0 01117         ZET     MTM
      00732  0634 00 3 00750         SXA     SX3,3    
      00733  0634 00 5 00747         SXA     SX5,5    
      00734  0634 00 6 00746         SXA     SX6,6    
      00735  0634 00 7 00745         SXA     SX7,7    
      00736  0020 00 4 00001         TRA     1,4
                  
      00737  0441 00 0 01056  RESTOR LDI     SI            RESTORE REGISTERS  
      00740  0560 00 0 01057         LDQ     MQ 
      00741 -0500 00 0 01060         CAL     LAC
      00742 -0760 00 0 00003         SSM  
      00743 -0760 00 0 00001         PBT  
      00744  0760 00 0 00002         CHS  
      00745  0774 00 7 00000  SX7    AXT     **,7     
      00746  0774 00 6 00000  SX6    AXT     **,6     
      00747  0774 00 5 00000  SX5    AXT     **,5     
      00750  0774 00 3 00000  SX3    AXT     **,3     
      00751  0520 00 0 01117         ZET     MTM
      00752 -0760 00 0 00016         EMTM                  BLEUGH 
      00753  0774 00 2 00000  SX2    AXT     **,2     
      00754  0774 00 1 00000  SX1    AXT     **,1     
      00755  0020 00 4 00001         TRA     1,4
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 15    
                           RDFLXX                                                   
                  
      00756  0634 00 4 01026  RDFLXX SXA     RD4,4         READ A LINE, REMOVE CARRIAGE RETURN  
      00757  0634 00 1 01025         SXA     RD1,1           ..   
      00760 -0500 00 4 00001         CAL     1,4           FIND BUFFER AND COUNT    
      00761  0602 00 0 00765         SLW     RPTR            ..   
      00762  0737 00 4 00000         PAC     ,4            REMEMBER LOCATION  
      00763 -0634 00 4 01005         SXD     RADJ,4          ..   
      00764  0074 00 4 00003         TSX     RDFLXA,4      READ THE LINE
      00765  0 00000 0 00000  RPTR           **,,**          ..   
      00766  0602 00 0 01051         SLW     DONE          SAVE COUNT   
      00767  0734 00 4 00000         PAX     ,4            IS THERE     
      00770  3 37777 4 01025         TXH     RD1,4,16383     A CARRIAGE RETURN
      00771 -0520 00 0 01032         NZT     FULL          IS THIS 12-BIT     
      00772  1 77777 4 00774         TXI     *+2,4,-1          DECREMENT COUNT
      00773  1 77776 4 00774         TXI     *+1,4,-2      (FULL) 
      00774  0634 00 4 01051         SXA     DONE,4          ..   
      00775  0131 00 0 00000         XCA                   LOCATE CR TO REMOVE
      00776 -0754 00 0 00000         ZAC                     ..   
      00777  0221 00 0 01121         DVP     =6              ..   
      01000  0734 00 4 00000         PAX     ,4              ..   
      01001  0131 00 0 00000         XCA                     ..   
      01002  0737 00 1 00000         PAC     ,1            COMPUTE WORD LOCATION    
      01003 -3 00000 4 01005         TXL     *+2,4,0         ..   
      01004  1 77777 1 01005         TXI     *+1,1,-1        ..   
      01005  1 00000 1 01006  RADJ   TXI     *+1,1,**        ..   
      01006  0200 00 0 01121         MPY     =6              AND POSITION WITHIN WORD     
      01007  0131 00 0 00000         XCA                     ..   
      01010  0734 00 4 00000         PAX     ,4              ..   
      01011  3 00000 4 01013         TXH     *+2,4,0         ..   
      01012  0774 00 4 00044         AXT     36,4            ..   
      01013  0520 00 0 01032         ZET     FULL          IF FULL,     
      01014  1 77772 4 01015         TXI     *+1,4,-6        RE-POSITION
      01015 -0500 00 1 77777         CAL     -1,1          PICK UP WORD 
      01016  0771 00 4 00052         ARS     42,4          REMOVE CR    
      01017  0560 00 0 01137         LDQ     =H              ..   
      01020  0520 00 0 01032         ZET     FULL          IF FULL,     
      01021  0560 00 0 01132         LDQ     =H0 0 0         USE FULL-MODE BLANKS   
      01022 -0763 00 4 00052         LGL     42,4          AND REPLACE WITH BLANKS  
      01023  0602 00 1 77777         SLW     -1,1            ..   
      01024 -0500 00 0 01051         CAL     DONE          RECALL COUNT 
      01025  0774 00 1 00000  RD1    AXT     **,1            ..   
      01026  0774 00 4 00000  RD4    AXT     **,4            ..   
      01027  0020 00 4 00002         TRA     2,4             ..   
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 16    
                           STORAGE LOCATIONS                                        
                  
      01030  0 00000 0 00000  TEMP  
      01031  0 00000 0 00000  USER  
      01032  0 00000 0 00000  FULL  
      01033                   BUFF   BSS     14 
      01051  0 00000 0 00000  DONE  
      01052  0 00000 0 00000  CON   
      01053  0 00000 0 00000  PRT   
      01054  0 00000 0 00000  EXTRA 
      01055  0 00000 0 00000  12BIT 
      01056  0 00000 0 00000  SI    
      01057  0 00000 0 00000  MQ    
      01060  0 00000 0 00000  LAC   
      01061  0 00000 0 00000  N1    
      01062  0 00000 0 00000  N2    
      01063 -377777777777     FENCE  OCT     777777777777   
      01064  0 00000 0 00000  CONFL 
      01065  454660314547     NOINP  BCI     /NO INPUT GIVEN./    
      01066  646360273165     
      01067  254533575757     
                       00003  NOINPL EQU     *-NOINP  
      01070  000004000006     SIXCON VFD     18/4,18/6
      01071  000012000003     FULCON VFD     18/10,18/3     
      01072  0 00000 0 00000  FILLED
      01073 +000000000007     OUTWRD OCT     7  
      01074                          BSS     19 
      01117  0 00000 0 00000  MTM   
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 17    
                           STORAGE LOCATIONS                                        
                  
                                     END  
                  
        LITERALS  
      01120  000000000000     
      01121  000000000006     
      01122  000000000007     
      01123  000000000015     
      01124  000000000016     
      01125  000000000060     
      01126  000000000077     
      01127  000000000144     
      01130  000000040000     
      01131  000000077777     
      01132  006000600060     
      01133  464460000000     
      01134  477777700000     
      01135  516060606060     
      01136  606046456060     
      01137  606060606060     
      01140  622563222324     
      01141  622563266443     
      01142  665126436721     
      01143  665126436760     
      01144  720072007200     
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       1145 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        224      R   205
        526     BS   522
        524     CR   520
        231     FL   240
        447     ID   361
        144     JP   133
        540     LF   523
        453     ME   331,  333,  334,  335,  337,  340,  341,  343,  344,  345,  347,  350,  351,  353,  355
       1057     MQ   720,  740
       1061     N1   167,  176,  216,  221,  226
       1062     N2   174,  177,  217,  222,  227
        505     PL   507,  514,  525,  527,  543,  547
        650     PR   102,  524,  541,  703
       1056     SI   153,  160,  717,  737
       1052    CON    65,   70,  114,  122,  146
        564    GTC   505,  526,  575
        263    INL   311
        145    JX4   130
       1060    LAC   721,  741
        105    LX4    63,   75,   77
         62    MON    25
       1117    MTM   727,  731,  751
         61    MZE    23
        424    OUT   374
        677    PR4   651
        700    PR7   650
       1053    PRT    66,   73,   74,  113,  121,  126
        706    PX4   463
       1025    RD1   757,  770
       1026    RD4   756
        710    RST   101,  500
        714    SAV   103,  704
        571    SFT   477
        550    STC   513,  545,  662
        754    SX1   722
        753    SX2   723
        750    SX3   724,  732
        747    SX5   733
        746    SX6   734
        745    SX7   735
        530    TAB   521
         53    WX4    16
       1033   BUFF    30,   40,   43,   51
        242   CARD   233
       1051   DONE    32,   35,  766,  774, 1024
       1032   FULL    24,  107,  111,  131,  370,  771, 1013, 1020
        570   GTC1   564
        567   INNO   475,  502
        126   JOIN   120
          7   OPEN   214
         63   PCTL     0
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        463   PRNT   143,  415
        426   PRT1   165,  433
        427   PRT4   164
        416   PRTL   377,  401,  417,  421
       1005   RADJ   763
        765   RPTR   761
        717   SAVE   100,  471
        544   SKIP   533,  537,  546
       1030   TEMP   200,  201,  206,  224,  600,  602
         55   TYPE    22,   61,  264
       1031   USER    20,   34,   41,   52
         35   WRLP    45
        312   XTND   270
       1055  12BIT   142,  371,  412,  414,  473
         11  CLOSE   225
       1064  CONFL   171,  366,  402
        254  CONIN   172
        146  CON.Q   127
        647  CVTBL   604
        240  END.Q   210,  253
       1054  EXTRA   117,  125,  150,  155,  157,  161,  373,  702
       1063  FENCE   170
        501  INLEN   466
        372  INPUT   204,  230,  255,  325
        116  .WRFX    50,  431
       1065  NOINP   432, 1070
        323  PHEAD   241
         13  PRINT   356,  360,  362,  364,  424,  670
          2  RSSWB    33
        436  STARS   357,  363
          4  TYPEL    22,   61,  264
        113  WRFLX     0
         16  WRITE     0
         46  WRLST    36
         40  WRTIT    26,   46
          0 COMLOC      
        320 CONEND   274
        272 CONPTR   266,  305,  307,  320
        515 CONTRL   511
       1072 FILLED   512,  557,  664,  676
        374 FINISQ   211,  322,  323,  423
          4 FSTATE   175
       1071 FULCON   474
          5 GETMEM   203,  254,  312
        702 INPDON   565
        566 INPLOC   470,  504
        124 .WRFXA    21,   37,  263
          3 NOINPL   432, 1070
        431 NOMESS   202,  327
        712 OUTLEN    76,  715
        711 OUTSIZ   714
       1073 OUTWRD   551,  553,  562,  671,  675
        415 PRNTIT   403
        164 PRNTON     0
         10 RDFILE   220
1      ADMIN UTILITY PACKAGE     D.A. ANDERSON   04/26/69                        04/26/69 2215.2 PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          3 RDFLXA   764
        756 RDFLXX    27,   42,  271
        737 RESTOR   104,  705
        107 SETBCD     0
        111 SETFUL     0
          1 SETLOC      
          6 SETMEM   213,  262,  316
       1070 SIXCON   472
        153 SKIPCS   147
        434 THANKS   425
         12 WHOAMI   330
        121 WRFLXA     0
        270 XTND.Q   261,  315
        271 XTND.R   317
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            DELTEM, DTEMLG, DELALL - DELETE FILES FROM U.F.D.                   03/20/69 1946.0 PAGE 1     
                  
                                             2/3/66 - NOEL I. MORRIS    
                  
                  
                       00013         ENTRY   DELTEM        DELETE ALL TEMPS.  
                       00016         ENTRY   DTEMLG        DELETE TEMPS THIS AUTHOR 
                       00021         ENTRY   DELALL        DELETE ALL FILES   
                  
                                     UNLIST     
 M                            CALL   MACRON  NAME,LIST     SUBROUTINE CALL MACRO                                  
 M                            SAVE   MACRO   ID,LIST       SAVE BASIC MACHINE CONDITIONS                          
                  
                  
                                     EXTERN  ATTNAM,FERRTN,TILOCK,FSTATE,GETMEM,SETMEM,OPEN     
                                     EXTERN  RDFILE,CLOSE,CHFILE,DELFIL 
                  
                  
      00013  0600 00 0 00157  DELTEM STZ     AUTHSW        NO AUTH. RESTRICTION     
      00014 -0625 00 0 00160         STL     TEMSW         TEMPORARIES ONLY   
      00015  0020 00 0 00023         TRA     GO 
                  
      00016 -0625 00 0 00157  DTEMLG STL     AUTHSW        TEMPS OF CURRENT AUTHOR ONLY (LOGOUT)
      00017 -0625 00 0 00160         STL     TEMSW         ..     
      00020  0020 00 0 00023         TRA     GO 
                  
      00021  0600 00 0 00157  DELALL STZ     AUTHSW        EVERYBODY GOES ... 
      00022  0600 00 0 00160         STZ     TEMSW         ..     
                  
      00023  0634 00 4 00144  GO     SXA     X4,4          SAVE LINKAGE 
                  
      00024  0520 00 0 00157         ZET     AUTHSW        DO WE NEED AUTHOR NO. (MACRO BELOW)  
      00025                          CALL    ATTNAM((FNAME,,3)) YES, GET AUTHOR NO. (3RD WORD)  
                  
      00027  0074 00 4 00001         TSX     FERRTN,4      SET UP FILE SYSTEM ERROR RETURN
      00030  0 00000 0 00140         PZE     RSILK         ..     
      00031  0621 00 0 00143         STA     RSERR+1       SAVE OLD RETURN    
                  
      00032  0074 00 4 00002         TSX     TILOCK,4      SET INTERLOCK RETURN     
      00033  0 00000 0 00133         PZE     INC           ..     
      00034  0621 00 0 00141         STA     RSILK+1       SAVE OLD INTERLOCK RETURN
                  
      00035                          CALL    FSTATE(U,F(LTH,,1)) GET LENGTH OF U.F.D.     
      00041  0500 00 0 00151         CLA     LTH           DECREASE BY 3
      00042  0402 00 0 00162         SUB     =3            ..     
      00043  0601 00 0 00151         STO     LTH           ..     
                  
      00044  0074 00 4 00004         TSX     GETMEM,4      GET MEMBND   
      00045  0621 00 0 00150         STA     MB            SAVE IT
      00046  0621 00 0 00062         STA     RD+4          ..     
      00047  0361 00 0 00151         ACL     LTH           INCREASE BY LENGTH OF U.F.D.   
      00050  0621 00 0 00153         STA     TOP           ..     
      00051  0074 00 4 00005         TSX     SETMEM,4      RESET MEMORY BOUND 
                  
      00052                          CALL    OPEN(=HR,U,F) OPEN THE U.F.D.    
      00056                   RD     CALL    RDFILE(U,F,=4(**,...,LTH)) READ IT IN  
      00063                          CALL    CLOSE(U,F)    AND CLOSE IT 
1            DELTEM, DTEMLG, DELALL - DELETE FILES FROM U.F.D.                   03/20/69 1946.0 PAGE 2     
                  
      00066 -0500 00 0 00150         CAL     MB            GET BEGINNING LOC'N FOR U.F.D. 
      00067 -0340 00 0 00153  DLP    LAS     TOP           COMPARE TO TOP     
      00070  0020 00 0 00136         TRA     ENDEL         ..     
      00071  0020 00 0 00136         TRA     ENDEL         ..     
      00072  0621 00 0 00152         STA     POINTR        SAVE U.F.D. POINTER
      00073  0737 00 4 00000         PAC     ,4            POINTER IN XR4     
                  
      00074  0520 00 4 00000         ZET     0,4           IS PRIMARY NAME ZERO .Q. 
      00075  0020 00 0 00100         TRA     *+3           NO, CONTINUE 
      00076 -0520 00 4 00001         NZT     1,4           IS SECONDARY NAME ZERO .Q.     
      00077  0020 00 0 00133         TRA     INC           YES, SKIP THIS ENTRY     
                  
      00100  0441 00 4 00004         LDI     4,4           GET MODE, ILOCK, ETC.    
      00101  0054 00  700000         RFT     700000        IS FILE LINKED (DEVICE = 0) .Q.
      00102  0020 00 0 00104         TRA     *+2           NO, SKIP     
      00103  0020 00 0 00133         TRA     INC           YES, IGNORE LINKED FILE  
                  
      00104 -0056 00  002000         LNT     002000        IS FILE TEMPORARY .Q.    
      00105 -0520 00 0 00160         NZT     TEMSW         OR ARE WE AFTER ALL FILES .Q.  
      00106  0020 00 0 00110         TRA     *+2           YES, SKIP    
      00107  0020 00 0 00133         TRA     INC           NO, IGNORE FILE    
                  
      00110 -0500 00 4 00003         CAL     3,4           GET AUTHOR OF FILE 
      00111 -0320 00 0 00165         ANA     =O777777      ..     
      00112  0322 00 0 00156         ERA     AUTHNO        IS AUTHOR THIS USER .Q.  
      00113  0520 00 0 00157         ZET     AUTHSW        OR DON'T WE CARE .Q.     
      00114 -0100 00 0 00133         TNZ     INC           IF NOT, IGNORE FILE
                  
      00115  0500 00 4 00000         CLA     0,4           GET PRIMARY NAME   
      00116  0560 00 4 00001         LDQ     1,4           AND SECONDARY NAME 
      00117 -0603 00 0 00154         DST     FNAME         ..     
                  
      00120                          CALL    CHFILE(FNAME,FNAME+1,=1,=-0,=-0,*+1) MAKE IT '001' MODE  
      00127                          CALL    DELFIL(FNAME,FNAME+1,*+1) DELETE IT    
                  
      00133 -0500 00 0 00152  INC    CAL     POINTR        GET U.F.D. POINTER 
      00134  0361 00 0 00164         ACL     =7            STEP BY SEVEN
      00135  0020 00 0 00067         TRA     DLP           CONTINUE LOOP
                  
      00136 -0500 00 0 00150  ENDEL  CAL     MB            GET OLD MEMBND     
      00137  0074 00 4 00005         TSX     SETMEM,4      RESET MEMORY BOUND 
                  
      00140  0074 00 4 00002  RSILK  TSX     TILOCK,4      RESET INTERLOCK RETURN   
      00141  0 00000 0 00000         PZE     **            MUST BE A 'PZE' ******   
                  
      00142  0074 00 4 00001  RSERR  TSX     FERRTN,4      RESET OLD ERROR RETURN   
      00143  0 00000 0 00000         PZE     **            MUST BE A 'PZE' ******   
      00144  0774 00 4 00000  X4     AXT     **,4          RESTORE XR4  
      00145  0020 00 4 00001         TRA     1,4           RETURN 
                  
                  
      00146  643326332433     U      BCI     1,U.F.D. 
      00147  742631432534     F      BCI     1,(FILE) 
      00150  0 00000 0 00000  MB     PZE  
      00151  0 00000 0 00000  LTH    PZE  
      00152  0 00000 0 00000  POINTR PZE  
1            DELTEM, DTEMLG, DELALL - DELETE FILES FROM U.F.D.                   03/20/69 1946.0 PAGE 3     
                  
      00153  0 00000 0 00000  TOP    PZE  
      00154                   FNAME  BSS     2  
      00156  0 00000 0 00000  AUTHNO PZE                   AUTHOR NUMBER
      00157  0 00000 0 00000  AUTHSW PZE                   SWITCH TO DELETE AUTHOR'S FILES ONLY 
      00160  0 00000 0 00000  TEMSW  PZE                   SWITCH TO DELETE TEMP FILES ONLY     
                  
      00161                          RMT     *             REMOTE SEQUENCES.  
                  
                                     END  
                  
        LITERALS  
      00161  000000000001     
      00162  000000000003     
      00163  000000000004     
      00164  000000000007     
      00165  000000777777     
      00166  400000000000     
      00167  516060606060     
1            DELTEM, DTEMLG, DELALL - DELETE FILES FROM U.F.D.                   03/20/69 1946.0 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        170 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        147      F    37,   55,   60,   65
        146      U    36,   54,   57,   64
         23     GO    15,   20
        150     MB    45,   66,  136
         56     RD    46
        144     X4    23
         67    DLP   135
        133    INC    33,   77,  103,  107,  114
        151    LTH    40,   41,   43,   47,   62
        153    TOP    50,   67
          6   OPEN    52
         10  CLOSE    63
        136  ENDEL    70,   71
        154  FNAME    26,  117,  121,  122,  130,  131
        142  RSERR    31
        140  RSILK    30,   34
        160  TEMSW    14,   17,   22,  105
          0 ATTNAM    25
        156 AUTHNO   112
        157 AUTHSW    13,   16,   21,   24,  113
         11 CHFILE   120
         21 DELALL     0
         12 DELFIL   127
         13 DELTEM     0
         16 DTEMLG     0
          1 FERRTN    27,  142
          3 FSTATE    35
          4 GETMEM    44
        152 POINTR    72,  133
          7 RDFILE    56
          5 SETMEM    51,  137
          2 TILOCK    32,  140
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




APENDA   BCD 09/20/68 1803.6    8315         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  APENDA   MAD            09/20/68    1746.2
-                 
                  M1416-3845  PETER R. BOS  1/4/67 -- APEND/APENDA SAVED                               LM00001    
                                                                                                       LM00002    
                  USAGE ...                                                                            LM00003    
                     'APEND' OR 'APENDA' NAME1 NAME2 -'*'- ARGS ...                                    LM00004    
                                                                                                       LM00005    
                     IF '*' IS SPECIFIED, ARGS ARE ASSUMED AS SINGLE                                   LM00006    
                     FIRST NAMES OF FILES, NAME2 BEING USED AS GENERIC                                 LM00007    
                     SECONDARY NAME.                                                                   LM00008    
                     IF '*' IS NOT SPECIFIED, ARGS ARE ASSUMED AS                                      LM00009    
                     NAME1-NAME2 PAIRS.                                                                LM00010    
                                                                                                       LM00011    
                     FILE SYSTEM ERRORS ON SUB-FILES ARE NOT DETECTED                                  LM00012    
                     UNTIL PREVIOUS FILES HAVE BEEN PROCESSED. ERROR                                   LM00013    
                     RETURN IS TO PRNTER VIA NEXCOM.                                                   LM00014    
                                                                                                       LM00015    
                     'APENDA' WILL APPEND FILES TO NAME1 NAME2 WITH                                    LM00016    
                     ARCHIV FORMAT HEADERS INSERTED.                                                   LM00017    
                     'APEND' WILL APPEND FILES WITHOUT THE HEADERS.                                    LM00018    
                     EXECUTING THE PROGRAM UNDER A DIFFERENT NAME WILL                                 LM00019    
                     CAUSE AN ERROR COMMENT, AND NO EXECUTION.                                         LM00020    
                                                                                                       LM00021    
                  NORMAL MODE IS INTEGER                                                          *001 LM00022    
                  FUNCTION NAME EXTFN                                                             *002 LM00023    
                  DIMENSION CBUF(20), WBUF(432)                                                   *003 LM00024    
                  EQUIVALENCE (N1,CBUF(1)), (N2,CBUF(2))                                          *004 LM00025    
                  BOOLEAN TN2                                                                     *005 LM00026    
                                                                                                       LM00027    
                  FERRTN.(IOERR.)                                                                 *006 LM00028    
                  GCLS.(CBUF,0)                                                                   *007 LM00029    
                  WHENEVER CBUF(0).E.$ APEND$                                                     *008 LM00030    
                    EXTFN=APPEND.                                                                 *009 LM00031    
                  OTHERWISE                                                                       *010 LM00032    
                    EXTFN=ARCHA.                                                                  *011 LM00033    
                  END OF CONDITIONAL                                                              *012 LM00034    
                  WHENEVER CBUF(1).E.FNS.OR.CBUF(2).E.FNS                                         *013 LM00035    
                    PRINT COMMENT $ARGUMENTS NAME1 NAME2 -'*'- ARGS$                              *014 LM00036    
                    CHNCOM.(0)                                                                    *015 LM00037    
                  END OF CONDITIONAL                                                              *016 LM00038    
                  WHENEVER CBUF(3).E.$     *$                                                     *017 LM00039    
                    TN2=0B                                                                        *018 LM00040    
                    K=4                                                                           *019 LM00041    
                    Q=1                                                                           *020 LM00042    
                  OTHERWISE                                                                       *021 LM00043    
                    TN2=1B                                                                        *022 LM00044    
                    K=3                                                                           *023 LM00045    
                    Q=2                                                                           *024 LM00046    
                  END OF CONDITIONAL                                                              *025 LM00047    
                  OPEN.($W$,N1,N2)                                                                *026 LM00048    
                  BUFFER.(N1,N2,WBUF(432)...432)                                                  *027 LM00049    
                                                                                                       LM00050    
                  THROUGH WRLOOP, FOR I=K,Q,CBUF(I).E.FNS                                         *028 LM00051    
                    FIL1=CBUF(I)                                                                  *029 LM00052    
                    WHENEVER TN2                                                                  *030 LM00053    
                      FIL2=CBUF(I+1)                                                              *031 LM00054    
                      WHENEVER FIL2.E.FNS                                                         *032 LM00055    
                        FIL2=N2                                                                   *033 LM00056    
                        I=I-1                                                                     *034 LM00057    
                      END OF CONDITIONAL                                                          *035 LM00058    
                    OTHERWISE                                                                     *036 LM00059    
                      FIL2=N2                                                                     *037 LM00060    
                    END OF CONDITIONAL                                                            *038 LM00061    
                    EXTFN(0).(N1,N2,FIL1,FIL2)                                                    *039 LM00062    
      WRLOOP      CONTINUE                                                                        *040 LM00063    
                                                                                                       LM00064    
                  CLOSE.($ALL$,-0)                                                                *041 LM00065    
                  CHNCOM.(0)                                                                      *042 LM00066    
                                                                                                       LM00067    
                  VECTOR VALUES FNS=777777777777K                                                 *043 LM00068    
                                                                                                       LM00069    
                  END OF PROGRAM                                                                  *044 LM00070    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01114 TRANSFER VECTOR LENGTH  00014 PROGRAM BEGINS    00746
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      CBUF   00041 A 1        FIL2   00044   1        K      00047   1        Q      00050   1        WBUF   00732 A 1  
      EXTFN  00042   3        FNS    00045 A 1        N1     00040   1        TN2    00051   2        WRLOOP 00014   4  
      FIL1   00043   1        I      00046   1        N2     00037   1                                                  
0FUNCTION DICTIONARY    
      APPEND 00000   1        ARCHA  00001   1        BUFFER 00002   1        CHNCOM 00003   1        CLOSE  00004   1  
      EXIT   00005   1        FERRTN 00006   1        GCLS   00007   1        IOERR  00010   1        .PCOMT 00011   1  
      .SETUP 00012   1        OPEN   00013   1                                                                          
0ABSOLUTE CONSTANTS     
 00741 +214343606060     00740 +000000000660     00745 -266060606060     00735 +000000000002     00736 +000000000003    
 00737 +000000000004     00744 -206060606054     00743 -202147254524     00733 +000000000000     00734 +000000000001    
 00742 +233000000000                                                                                                    
0PROGRAM    
                 N'S INTEGER                                                        001  LM00022
                 FUNCTION NAME EXTFN                                                002  LM00023
                 D'N CBUF(20), WBUF(432)                                            003  LM00024
                 EQUIVALENCE (N1,CBUF(1)), (N2,CBUF(2))                             004  LM00025
                 BOOLEAN TN2                                                        005  LM00026
                 FERRTN.(IOERR.)                                                    006  LM00028
 00746 TSX +0 07400 4 00012    00747 TSX +0 07400 4 00006    00750 TXH +3 00000 0 00010                                 
                 GCLS.(CBUF,0)                                                      007  LM00029
 00751 TSX +0 07400 4 00007    00752 TXH +3 00000 0 00041    00753 TXH +3 00000 0 00733                                 
                 W'R CBUF(0).E.$ APEND$                                             008  LM00030
 00754 CLA +0 50000 0 00041    00755 SUB +0 40200 0 00743    00756 TNZ -0 10000 0 00762                                 
                   EXTFN=APPEND.                                                    009  LM00031
 00757 CLA +0 50000 0 00000    00760 STO +0 60100 0 00042                                                               
                 O'E                                                                010  LM00032
 00761 TRA +0 02000 0 00764                                                                                             
                   EXTFN=ARCHA.                                                     011  LM00033
 00762 CLA +0 50000 0 00001    00763 STO +0 60100 0 00042                                                               
                 E'L                                                                012  LM00034
                 W'R CBUF(1).E.FNS.OR.CBUF(2).E.FNS                                 013  LM00035
 00764 CLA +0 50000 0 00037    00765 SUB +0 40200 0 00045    00766 TZE +0 10000 0 00772    00767 CLA +0 50000 0 00040   
 00770 SUB +0 40200 0 00045    00771 TNZ -0 10000 0 01004                                                               
                   PRINT COMMENT $ARGUMENTS NAME1 NAME2 -'*'- ARGS$                 014  LM00036
 00772 TSX +0 07400 4 00011    00773     +0 00000 0 00006    00774     +2 15127 6 44425    00775     -0 56362 6 04521   
 00776     -0 42501 6 04521    00777     -0 42502 6 04014    01000     -1 41440 6 02151    01001     +2 76260 6 06060   
                   CHNCOM.(0)                                                       015  LM00037
 01002 TSX +0 07400 4 00003    01003 TXH +3 00000 0 00733                                                               
                 E'L                                                                016  LM00038
                 W'R CBUF(3).E.$     *$                                             017  LM00039
 01004 CLA +0 50000 0 00036    01005 SUB +0 40200 0 00744    01006 TNZ -0 10000 0 01016                                 
                   TN2=0B                                                           018  LM00040
 01007 CLA +0 50000 0 00733    01010 STO +0 60100 0 00051                                                               
                   K=4                                                              019  LM00041
 01011 CLA +0 50000 0 00737    01012 STO +0 60100 0 00047                                                               
                   Q=1                                                              020  LM00042
 01013 CLA +0 50000 0 00734    01014 STO +0 60100 0 00050                                                               
                 O'E                                                                021  LM00043
 01015 TRA +0 02000 0 01024                                                                                             
                   TN2=1B                                                           022  LM00044
 01016 CLA +0 50000 0 00734    01017 STO +0 60100 0 00051                                                               
                   K=3                                                              023  LM00045
 01020 CLA +0 50000 0 00736    01021 STO +0 60100 0 00047                                                               
                   Q=2                                                              024  LM00046
 01022 CLA +0 50000 0 00735    01023 STO +0 60100 0 00050                                                               
                 E'L                                                                025  LM00047
                 OPEN.($W$,N1,N2)                                                   026  LM00048
 01024 TSX +0 07400 4 00013    01025 TXH +3 00000 0 00745    01026 TXH +3 00000 0 00040    01027 TXH +3 00000 0 00037   
                 BUFFER.(N1,N2,WBUF(432)...432)                                     027  LM00049
 01030 TSX +0 07400 4 00002    01031 TXH +3 00000 0 00040    01032 TXH +3 00000 0 00037    01033 TIX +2 00740 0 00052   
                 T'H WRLOOP, FOR I=K,Q,CBUF(I).E.FNS                                028  LM00051
 01034 CLA +0 50000 0 00047    01035 STO +0 60100 0 00046    01036 TRA +0 02000 0 01042    01037 CLA +0 50000 0 00046   
 01040 ADD +0 40000 0 00050    01041 STO +0 60100 0 00046    01042 LXA +0 53400 1 00046    01043 CLA +0 50000 1 00041   
 01044 SUB +0 40200 0 00045    01045 TZE +0 10000 0 01101                                                               
                   FIL1=CBUF(I)                                                     029  LM00052
 01046 LXA +0 53400 2 00046    01047 CLA +0 50000 2 00041    01050 STO +0 60100 0 00043                                 
                   W'R TN2                                                          030  LM00053
 01051 NZT -0 52000 0 00051    01052 TRA +0 02000 0 01071                                                               
                     FIL2=CBUF(I+1)                                                 031  LM00054
 01053 CLA +0 50000 0 00046    01054 ADD +0 40000 0 00734    01055 PAX +0 73400 2 00000    01056 CLA +0 50000 2 00041   
 01057 STO +0 60100 0 00044                                                                                             
                     W'R FIL2.E.FNS                                                 032  LM00055
 01060 CLA +0 50000 0 00044    01061 SUB +0 40200 0 00045    01062 TNZ -0 10000 0 01070                                 
                       FIL2=N2                                                      033  LM00056
 01063 CLA +0 50000 0 00037    01064 STO +0 60100 0 00044                                                               
                       I=I-1                                                        034  LM00057
 01065 CLA +0 50000 0 00046    01066 SUB +0 40200 0 00734    01067 STO +0 60100 0 00046                                 
                     E'L                                                            035  LM00058
                   O'E                                                              036  LM00059
 01070 TRA +0 02000 0 01073                                                                                             
                     FIL2=N2                                                        037  LM00060
 01071 CLA +0 50000 0 00037    01072 STO +0 60100 0 00044                                                               
                   E'L                                                              038  LM00061
                   EXTFN(0).(N1,N2,FIL1,FIL2)                                       039  LM00062
 01073 TSX +0 07400 4 00042    01074 TXH +3 00000 0 00040    01075 TXH +3 00000 0 00037    01076 TXH +3 00000 0 00043   
 01077 TXH +3 00000 0 00044                                                                                             
      WRLOOP     CONTINUE                                                           040  LM00063
 01100 TRA +0 02000 0 01037                                                                                             
                 CLOSE.($ALL$,-0)                                                   041  LM00065
 01101 CLS +0 50200 0 00733    01102 STO +0 60100 0 01111    01103 TSX +0 07400 4 00004    01104 TXH +3 00000 0 00741   
 01105 TXH +3 00000 0 01111                                                                                             
                 CHNCOM.(0)                                                         042  LM00066
 01106 TSX +0 07400 4 00003    01107 TXH +3 00000 0 00733                                                               
                 V'S FNS=777777777777K                                              043  LM00068
 00045     -3 77777 7 77777                                                                                             
                 END OF PROGRAM                                                     044  LM00070
 01110 TSX +0 07400 4 00005                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE   ARCHA   MAD            09/20/68    1746.4
-                 
                  ARCHA. - ARCHIV APPEND FUNCTION.                                                     LM00001    
                                                                                                       LM00002    
                  CALLING SEQUENCE IS                                                                  LM00003    
                     ARCHA.(NAME1,NAME2,NAME3,NAME4)                                                   LM00004    
                                                                                                       LM00005    
                  ARCHA WILL APPEND NAME3 NAME4 TO FILE NAME1 NAME2,                                   LM00006    
                  WITH ARCHIV FORMAT HEADER INSERTED.                                                  LM00007    
                                                                                                       LM00008    
                  EXTERNAL FUNCTION (N1,N2,N3,N4)                                                 *001 LM00009    
                  NORMAL MODE IS INTEGER                                                          *002 LM00010    
                                                                                                       LM00011    
                  ENTRY TO ARCHA.                                                                 *003 LM00012    
                  FSTATE.(N3,N4,LTH...1)                                                          *004 LM00013    
                  DAYTIM.(DATE,TIME)                                                              *005 LM00014    
                  MM=DATE.A.777700000000K                                                         *006 LM00015    
                  DD=DATE.A.77770000K                                                             *007 LM00016    
                  YY=DATE.A.7777K                                                                 *008 LM00017    
                  HDR(8)=N4                                                                       *009 LM00018    
                  HDR(9)=N3                                                                       *010 LM00019    
                  HDR(7)=$ 00000$.V.(MM.RS.6).V.$000/00$.V.(DD.RS.12)                             *011 LM00020    
                  HDR(6)=$/00000$.V.(YY.LS.18).V.$000 00$.V.(TIME.RS.24)                          *012 LM00021    
                  HDR(5)=(TIME.LS.12).V.$0000  $                                                  *013 LM00022    
                  HDR(4)=BZEL.(DEFBC.(LTH))                                                       *014 LM00023    
                  WRWAIT.(N1,N2,0,HDR(14)...14,-0,-0)                                             *015 LM00024    
                  APPEND.(N1,N2,N3,N4)                                                            *016 LM00025    
                  FUNCTION RETURN                                                                 *017 LM00026    
                                                                                                       LM00027    
                  VECTOR VALUES HDR(14)=777777000000K                                             *018 LM00028    
                  VECTOR VALUES HDR(13)=777777000000K                                             *019 LM00029    
                  VECTOR VALUES HDR(12)=777777000000K                                             *020 LM00030    
                  VECTOR VALUES HDR(11)=777777000000K                                             *021 LM00031    
                  VECTOR VALUES HDR(10)=777777000011K                                             *022 LM00032    
                  VECTOR VALUES HDR(9)=$NAME1$                                                    *023 LM00033    
                  VECTOR VALUES HDR(8)=$NAME2$                                                    *024 LM00034    
                  VECTOR VALUES HDR(7)=$ MM/DD$                                                   *025 LM00035    
                  VECTOR VALUES HDR(6)=$/YY HH$                                                   *026 LM00036    
                  VECTOR VALUES HDR(5)=$MM.M  $                                                   *027 LM00037    
                  VECTOR VALUES HDR(4)=$NNNNNN$                                                   *028 LM00038    
                  VECTOR VALUES HDR(3)=$      $                                                   *029 LM00039    
                  VECTOR VALUES HDR(2)=$   000$                                                   *030 LM00040    
                  VECTOR VALUES HDR(1)=$00    $                                                   *031 LM00041    
                                                                                                       LM00042    
                  END OF FUNCTION                                                                 *032 LM00043    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00226 TRANSFER VECTOR LENGTH  00007 PROGRAM BEGINS    00055
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      ARCHA  00056   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      DATE   00010   1        HDR    00030 A 1        MM     00032   1        TIME   00033   1        YY     00034   1  
      DD     00011   1        LTH    00031   1                                                                          
0FUNCTION DICTIONARY    
      APPEND 00000   1        BZEL   00001   1        DAYTIM 00002   1        DEFBC  00003   1        EXIT   00004   1  
      FSTATE 00005   1        WRWAIT 00006   1                                                                          
0ABSOLUTE CONSTANTS     
 00041 +000000000016     00035 +000000000000     00044 +000000006060     00046 +000000600000     00053 -210000000000    
 00042 +000000000022     00043 +000000000030     00047 +000000610000     00052 -200000000000     00037 +000000000006    
 00040 +000000000014     00045 +000000007777     00050 +000077770000     00054 -377700000000     00036 +000000000001    
 00051 +233000000000                                                                                                    
0PROGRAM    
                 EXTERNAL FUNCTION (N1,N2,N3,N4)                                    001  LM00009
                 N'S INTEGER                                                        002  LM00010
                 ENTRY TO ARCHA.                                                    003  LM00012
 00055 TRA +0 02000 0 00060    00056 SXA +0 63400 2 00174    00057 TSX +0 07400 2 00174                                 
                 FSTATE.(N3,N4,LTH...1)                                             004  LM00013
 00060 TSX +0 07400 4 00005    00061 TXH +3 00000 0 00024    00062 TXH +3 00000 0 00024    00063 TIX +2 00036 0 00031   
                 DAYTIM.(DATE,TIME)                                                 005  LM00014
 00064 TSX +0 07400 4 00002    00065 TXH +3 00000 0 00010    00066 TXH +3 00000 0 00033                                 
                 MM=DATE.A.777700000000K                                            006  LM00015
 00067 CAL -0 50000 0 00010    00070 ANA -0 32000 0 00054    00071 SLW +0 60200 0 00032                                 
                 DD=DATE.A.77770000K                                                007  LM00016
 00072 CAL -0 50000 0 00010    00073 ANA -0 32000 0 00050    00074 SLW +0 60200 0 00011                                 
                 YY=DATE.A.7777K                                                    008  LM00017
 00075 CAL -0 50000 0 00010    00076 ANA -0 32000 0 00045    00077 SLW +0 60200 0 00034                                 
                 HDR(8)=N4                                                          009  LM00018
 00100 CLA +0 50000 0 00024    00101 STO +0 60100 0 00020                                                               
                 HDR(9)=N3                                                          010  LM00019
 00102 CLA +0 50000 0 00024    00103 STO +0 60100 0 00017                                                               
                 HDR(7)=$ 00000$.V.(MM.RS.6).V.$000/00$.V.(DD.RS.12)                011  LM00020
 00104 CAL -0 50000 0 00040    00105 STA +0 62100 0 00107    00106 CAL -0 50000 0 00011    00107 LGR -0 76500 0 00000   
 00110 SLW +0 60200 0 00222    00111 CAL -0 50000 0 00037    00112 STA +0 62100 0 00114    00113 CAL -0 50000 0 00032   
 00114 LGR -0 76500 0 00000    00115 ORA -0 50100 0 00052    00116 ORA -0 50100 0 00047    00117 ORA -0 50100 0 00222   
 00120 SLW +0 60200 0 00021                                                                                             
                 HDR(6)=$/00000$.V.(YY.LS.18).V.$000 00$.V.(TIME.RS.24)             012  LM00021
 00121 CAL -0 50000 0 00043    00122 STA +0 62100 0 00124    00123 CAL -0 50000 0 00033    00124 LGR -0 76500 0 00000   
 00125 SLW +0 60200 0 00222    00126 CAL -0 50000 0 00042    00127 STA +0 62100 0 00131    00130 CAL -0 50000 0 00034   
 00131 ALS +0 76700 0 00000    00132 ORA -0 50100 0 00053    00133 ORA -0 50100 0 00046    00134 ORA -0 50100 0 00222   
 00135 SLW +0 60200 0 00022                                                                                             
                 HDR(5)=(TIME.LS.12).V.$0000  $                                     013  LM00022
 00136 CAL -0 50000 0 00040    00137 STA +0 62100 0 00141    00140 CAL -0 50000 0 00033    00141 ALS +0 76700 0 00000   
 00142 ORA -0 50100 0 00044    00143 SLW +0 60200 0 00023                                                               
                 HDR(4)=BZEL.(DEFBC.(LTH))                                          014  LM00023
 00144 TSX +0 07400 4 00003    00145 TXH +3 00000 0 00031    00146 STO +0 60100 0 00222    00147 TSX +0 07400 4 00001   
 00150 TXH +3 00000 0 00222    00151 STO +0 60100 0 00024                                                               
                 WRWAIT.(N1,N2,0,HDR(14)...14,-0,-0)                                015  LM00024
 00152 CLS +0 50200 0 00035    00153 STO +0 60100 0 00222    00154 CLS +0 50200 0 00035    00155 STO +0 60100 0 00223   
 00156 TSX +0 07400 4 00006    00157 TXH +3 00000 0 00024    00160 TXH +3 00000 0 00024    00161 TXH +3 00000 0 00035   
 00162 TIX +2 00041 0 00012    00163 TXH +3 00000 0 00223    00164 TXH +3 00000 0 00222                                 
                 APPEND.(N1,N2,N3,N4)                                               016  LM00025
 00165 TSX +0 07400 4 00000    00166 TXH +3 00000 0 00024    00167 TXH +3 00000 0 00024    00170 TXH +3 00000 0 00024   
 00171 TXH +3 00000 0 00024                                                                                             
                 FUNCTION RETURN                                                    017  LM00026
 00172 TRA +0 02000 0 00216                                                                                             
                 V'S HDR(14)=777777000000K                                          018  LM00028
 00012     -3 77777 0 00000                                                                                             
                 V'S HDR(13)=777777000000K                                          019  LM00029
 00013     -3 77777 0 00000                                                                                             
                 V'S HDR(12)=777777000000K                                          020  LM00030
 00014     -3 77777 0 00000                                                                                             
                 V'S HDR(11)=777777000000K                                          021  LM00031
 00015     -3 77777 0 00000                                                                                             
                 V'S HDR(10)=777777000011K                                          022  LM00032
 00016     -3 77777 0 00011                                                                                             
                 V'S HDR(9)=$NAME1$                                                 023  LM00033
 00017     -0 52144 2 50160                                                                                             
                 V'S HDR(8)=$NAME2$                                                 024  LM00034
 00020     -0 52144 2 50260                                                                                             
                 V'S HDR(7)=$ MM/DD$                                                025  LM00035
 00021     -2 04444 6 12424                                                                                             
                 V'S HDR(6)=$/YY HH$                                                026  LM00036
 00022     -2 17070 6 03030                                                                                             
                 V'S HDR(5)=$MM.M  $                                                027  LM00037
 00023     -0 44433 4 46060                                                                                             
                 V'S HDR(4)=$NNNNNN$                                                028  LM00038
 00024     -0 54545 4 54545                                                                                             
                 V'S HDR(3)=$      $                                                029  LM00039
 00025     -2 06060 6 06060                                                                                             
                 V'S HDR(2)=$   000$                                                030  LM00040
 00026     -2 06060 0 00000                                                                                             
                 V'S HDR(1)=$00    $                                                031  LM00041
 00027     +0 00060 6 06060                                                                                             
                 END OF FUNCTION                                                    032  LM00043
 00173 TSX +0 07400 4 00004    00174 TXH +3 00000 0 00000    00175 SXD -0 63400 1 00174    00176 SXA +0 63400 4 00216   
 00177 CLA +0 50000 4 00001    00200 STO +0 60100 0 00157    00201 STO +0 60100 0 00166    00202 CLA +0 50000 4 00002   
 00203 STO +0 60100 0 00160    00204 STO +0 60100 0 00167    00205 CLA +0 50000 4 00003    00206 STO +0 60100 0 00061   
 00207 STA +0 62100 0 00102    00210 STO +0 60100 0 00170    00211 CLA +0 50000 4 00004    00212 STO +0 60100 0 00062   
 00213 STA +0 62100 0 00100    00214 STO +0 60100 0 00171    00215 TRA +0 02000 2 00001    00216 AXT +0 77400 4 00000   
 00217 LXA +0 53400 2 00174    00220 LXD -0 53400 1 00174    00221 TRA +0 02000 4 00001                                 
1     MAD PROGRAM LISTING ... ... ...                 FILE  APPEND   MAD            09/20/68    1746.7
-                 
                  APPEND. - APPEND FILE.                                                               LM00001    
                                                                                                       LM00002    
                  CALLING SEQUENCE IS                                                                  LM00003    
                     APPEND.(NAME1,NAME2,NAME3,NAME4)                                                  LM00004    
                                                                                                       LM00005    
                  APPENDS NAME3 NAME4 TO FILE NAME1 NAME2.                                             LM00006    
                  NAME1 NAME2 IS ASSUMED OPEN FOR WRITING                                              LM00007    
                  AND BUFFERED.                                                                        LM00008    
                                                                                                       LM00009    
                  EXTERNAL FUNCTION (N1,N2,N3,N4)                                                 *001 LM00010    
                  NORMAL MODE IS INTEGER                                                          *002 LM00011    
                  DIMENSION BUF(864)                                                              *003 LM00012    
                                                                                                       LM00013    
                  ENTRY TO APPEND.                                                                *004 LM00014    
                  OPEN.($R$,N3,N4,-0,-0)                                                          *005 LM00015    
      RD          RDWAIT.(N3,N4,0,BUF(864)...864,EOF,CT)                                          *006 LM00016    
                  WRWAIT.(N1,N2,0,BUF(864)...864,-0,-0)                                           *007 LM00017    
                  TRANSFER TO RD                                                                  *008 LM00018    
      EOF         WHENEVER CT.NE.0, WRWAIT.(N1,N2,0,BUF(864)...CT,-0,-0)                          *009 LM00019    
                  CLOSE.(N3,N4)                                                                   *010 LM00020    
                  FUNCTION RETURN                                                                 *011 LM00021    
                                                                                                       LM00022    
                  END OF FUNCTION                                                                 *012 LM00023    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01674 TRANSFER VECTOR LENGTH  00005 PROGRAM BEGINS    01557
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      APPEND 01560   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BUF    01550 A 1        CT     01551   1        EOF    00006   4        RD     00007   4                          
0FUNCTION DICTIONARY    
      CLOSE  00000   1        EXIT   00001   1        OPEN   00002   1        RDWAIT 00003   1        WRWAIT 00004   1  
0ABSOLUTE CONSTANTS     
 01554 +000000001540     01556 -116060606060     01552 +000000000000     01553 +000000000001     01555 +233000000000    
0STATEMENT DICTIONARY   
 00006 TXL -301635001617       00007 TXL -301603001574                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION (N1,N2,N3,N4)                                    001  LM00010
                 N'S INTEGER                                                        002  LM00011
                 D'N BUF(864)                                                       003  LM00012
                 ENTRY TO APPEND.                                                   004  LM00014
 01557 TRA +0 02000 0 01562    01560 SXA +0 63400 2 01642    01561 TSX +0 07400 2 01642                                 
                 OPEN.($R$,N3,N4,-0,-0)                                             005  LM00015
 01562 CLS +0 50200 0 01552    01563 STO +0 60100 0 01670    01564 CLS +0 50200 0 01552    01565 STO +0 60100 0 01671   
 01566 TSX +0 07400 4 00002    01567 TXH +3 00000 0 01556    01570 TXH +3 00000 0 00024    01571 TXH +3 00000 0 00024   
 01572 TXH +3 00000 0 01671    01573 TXH +3 00000 0 01670                                                               
      RD         RDWAIT.(N3,N4,0,BUF(864)...864,EOF,CT)                             006  LM00016
 01574 TSX +0 07400 4 00003    01575 TXH +3 00000 0 00024    01576 TXH +3 00000 0 00024    01577 TXH +3 00000 0 01552   
 01600 TIX +2 01554 0 00010    01601 TXH +3 00000 0 00006    01602 TXH +3 00000 0 01551                                 
                 WRWAIT.(N1,N2,0,BUF(864)...864,-0,-0)                              007  LM00017
 01603 CLS +0 50200 0 01552    01604 STO +0 60100 0 01671    01605 CLS +0 50200 0 01552    01606 STO +0 60100 0 01670   
 01607 TSX +0 07400 4 00004    01610 TXH +3 00000 0 00024    01611 TXH +3 00000 0 00024    01612 TXH +3 00000 0 01552   
 01613 TIX +2 01554 0 00010    01614 TXH +3 00000 0 01670    01615 TXH +3 00000 0 01671                                 
                 T'O RD                                                             008  LM00018
 01616 TRA +0 02000 0 00007                                                                                             
      EOF        W'R CT.NE.0, WRWAIT.(N1,N2,0,BUF(864)...CT,-0,-0)                  009  LM00019
 01617 CLA +0 50000 0 01551    01620 SUB +0 40200 0 01552    01621 TZE +0 10000 0 01635    01622 CLS +0 50200 0 01552   
 01623 STO +0 60100 0 01671    01624 CLS +0 50200 0 01552    01625 STO +0 60100 0 01670    01626 TSX +0 07400 4 00004   
 01627 TXH +3 00000 0 00024    01630 TXH +3 00000 0 00024    01631 TXH +3 00000 0 01552    01632 TIX +2 01551 0 00010   
 01633 TXH +3 00000 0 01670    01634 TXH +3 00000 0 01671                                                               
                 CLOSE.(N3,N4)                                                      010  LM00020
 01635 TSX +0 07400 4 00000    01636 TXH +3 00000 0 00024    01637 TXH +3 00000 0 00024                                 
                 FUNCTION RETURN                                                    011  LM00021
 01640 TRA +0 02000 0 01664                                                                                             
                 END OF FUNCTION                                                    012  LM00023
 01641 TSX +0 07400 4 00001    01642 TXH +3 00000 0 00000    01643 SXD -0 63400 1 01642    01644 SXA +0 63400 4 01664   
 01645 CLA +0 50000 4 00001    01646 STO +0 60100 0 01610    01647 STO +0 60100 0 01627    01650 CLA +0 50000 4 00002   
 01651 STO +0 60100 0 01611    01652 STO +0 60100 0 01630    01653 CLA +0 50000 4 00003    01654 STO +0 60100 0 01570   
 01655 STO +0 60100 0 01575    01656 STO +0 60100 0 01636    01657 CLA +0 50000 4 00004    01660 STO +0 60100 0 01571   
 01661 STO +0 60100 0 01576    01662 STO +0 60100 0 01637    01663 TRA +0 02000 2 00001    01664 AXT +0 77400 4 00000   
 01665 LXA +0 53400 2 01642    01666 LXD -0 53400 1 01642    01667 TRA +0 02000 4 00001                                 
1            DUMMY I/O ERROR RETURN - EXITS VIA PRNTER.                                          PAGE 1     
                  
                                     PCC     ON 
                                     NOLNK
                       00000         ENTRY   IOERR    
                                     LBL     IOCHN    
                                     PCC     OFF
                  
                  
                              *     
                              *  ERROR RETURN MAY BE SET BY 'FERRTN.(IOERR.)' 
                              *     
                  
      00000  0074 00 4 00006  IOERR  TSX     CLOSE,4       CLOSE ALL FILES.   
 TD   00001  3 00000 0 00007         TXH     =HALL    
 TD   00002  3 00000 0 00011         TXH     =-0
                  
      00003 -0500 00 0 00014         CAL     =HPRNTER 
      00004  0560 00 0 00012         LDQ     =O-71         DON'T WASTE WORDS. 
      00005  0101 00 0 00013         TIA     =HNEXCOM      GO AWAY QUIETLY.   
                  
      00006  0101 00 0 00010  CLOSE  TIA     =HCLOSE  
                                     END  
                  
        LITERALS  
      00007  214343606060     
      00010  234346622560     
      00011  400000000000     
      00012  400000000071     
      00013  452567234644     
      00014  475145632551     
1            DUMMY I/O ERROR RETURN - EXITS VIA PRNTER.                                          PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         15 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          6  CLOSE     0
          0  IOERR     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            DAYTIM. - GIVE DATE AND TIME MMDDYY HHMM.M                                          PAGE 1     
                  
                                     PCC     ON 
                                     NOLNK
                       00000         ENTRY   DAYTIM   
                                     LBL     TIME     
                                     PCC     OFF
                  
                  
                              *     
                              *  CALLING SEQUENCE IS  
                              *      TSX     DAYTIM,4 
                              *      TXH     DATE     
                              *      TXH     TIME     
                              *     
      00000  0636 00 4 00036  DAYTIM SCA     TX4,4         SAVE XR4.    
      00001  0074 00 4 00043         TSX     GETIME,4      GET DATE AND TIME. 
      00002  0602 00 0 00042         SLW     TIME          ..     
      00003  0535 00 4 00036         LAC     TX4,4         RESTORE XR4. 
      00004 -0600 60 4 00001         STQ*    1,4           RETURN DATE. 
      00005  0560 00 0 00042         LDQ     TIME          CONVERT TIME.
      00006 -0754 00 0 00000         ZAC                   ..     
      00007  0221 00 0 00047         DVP     =360          GET RID OF SMALL FRACTIONS.    
      00010 -0754 00 0 00000         ZAC                   ..     
      00011  0221 00 0 00045         DVP     =10           GET 1/10 MIN.
      00012 -0501 00 0 00050         ORA     =O3300        ..     
      00013  0602 00 0 00041         SLW     HHMM.M        ..     
      00014 -0754 00 0 00000         ZAC                   ..     
      00015  0221 00 0 00045         DVP     =10           GET SINGLE MIN.    
      00016  0767 00 0 00014         ALS     12            SHIFT TO POSITION. 
      00017 -0602 00 0 00041         ORS     HHMM.M        ..     
      00020 -0754 00 0 00000         ZAC                   ..     
      00021  0221 00 0 00044         DVP     =6            GET 10'S MIN.
      00022  0767 00 0 00022         ALS     18            SHIFT. 
      00023 -0602 00 0 00041         ORS     HHMM.M        ..     
      00024 -0754 00 0 00000         ZAC                   ..     
      00025  0221 00 0 00046         DVP     =24           ONLY 24 HRS. 
      00026  0131 00 0 00000         XCA                   ..     
      00027 -0754 00 0 00000         ZAC                   ..     
      00030  0221 00 0 00045         DVP     =10           GET SINGLE HRS.    
      00031  0767 00 0 00030         ALS     24            SHIFT. 
      00032 -0602 00 0 00041         ORS     HHMM.M        ..     
      00033  0131 00 0 00000         XCA                   10'S OF HRS ARE LEFT.    
      00034  0767 00 0 00036         ALS     30            SHIFT. 
      00035 -0501 00 0 00041         ORA     HHMM.M        OR IN REST OF TIME.
      00036 -0774 00 4 00000  TX4    AXC     -,4           ..     
      00037  0602 60 4 00002         SLW*    2,4           ..     
      00040  0020 00 4 00003         TRA     3,4           RETURN.
                  
                  
      00041  0 00000 0 00000  HHMM.M PZE  
      00042  0 00000 0 00000  TIME   PZE  
                  
      00043  0101 00 0 00051  GETIME TIA     =HGETIME 
                  
                                     END  
1            DAYTIM. - GIVE DATE AND TIME MMDDYY HHMM.M                                          PAGE 2     
                  
        LITERALS  
      00044  000000000006     
      00045  000000000012     
      00046  000000000030     
      00047  000000000550     
      00050  000000003300     
      00051  272563314425     
1            DAYTIM. - GIVE DATE AND TIME MMDDYY HHMM.M                                          PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         52 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         36    TX4     0,    3
         42   TIME     2,    5
          0 DAYTIM     0
         43 GETIME     1
         41 HHMM.M    13,   17,   23,   32,   35
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




ARCHIV   BCD 02/08/69 2405.0   40680         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   ARCHV   MAD            11/25/68    2032.6
-                 
                                                                                                       LM00001    
                  ARCHIV COMMAND--DON WAGNER 9 SEPT 1965                                               LM00002    
                    MODIFIED BY R. ROACH 9/27/68                                                       LM00003    
                                                                                                       LM00004    
                                                                                                       LM00005    
                  LOADING-- 'ARCHV MAD' HAS TWO INSERTS,                                               LM00006    
                  'ASUBS MAD' AND 'AFORM MAD'.                                                         LM00007    
                      MAD ARCHV                                                                        LM00008    
                      LAED NCLOAD ARCHV (SRCH) XLIBE                                                   LM00009    
                      SAVE ARCHIV                                                                      LM00010    
                      RENAME ARCHIV SAVED ARCHIV TSSDC.                                                LM00011    
                                                                                                       LM00012    
                  INITIALIZATION                                                                       LM00013    
                                                                                                       LM00014    
                  WHENEVER COMARG.(1).A.77K.E.77K                                                 *001 LM00015    
                       PRMESS.( $ARCHIV KEY NM1 NM2 FL1 FL2 ...$)                                 *002 LM00016    
                    PRMESS.($WHERE KEY = COMBIN, TABLE, PRINT, DELETE, REPLAC$)                   *003 LM00017    
                       PRMESS.($XTRACT, OR UPDATE$)                                               *004 LM00018    
                       PRMESS.($ALL KEYS MAY BE ABBREVIATED BY FIRST LETTER.$)                    *005 LM00019    
      OUT              CHNCOM.(0)                                                                 *006 LM00020    
                  END OF CONDITIONAL                                                              *007 LM00021    
                  KEY=COMARG.(1)                                                                  *008 LM00022    
                  WHENEVER KEY .E. $  TOFF$                                                       *009 LM00023    
                    TOFF = 1B                                                                     *010 LM00024    
                    BOOLEAN TOFF                                                                  *011 LM00025    
                    VECTOR VALUES TOFF = 0B                                                       *012 LM00026    
                    KEY = $     T$                                                                *013 LM00027    
                  END OF CONDITIONAL                                                              *014 LM00028    
                  WHENEVER KEY .E. $   TON$                                                       *015 LM00029    
                     TON = 1B                                                                     *016 LM00030    
                     KEY = $     T$                                                               *017 LM00031    
                     BOOLEAN TON                                                                  *018 LM00032    
                      VECTOR VALUES TON = 0B                                                      *019 LM00033    
                  END OF CONDITIONAL                                                              *020 LM00034    
                  NM1=COMARG.(2)                                                                  *021 LM00035    
                  NM2=COMARG.(3)                                                                  *022 LM00036    
                  SETBRK.(OUT)                                                                    *023 LM00037    
                                                                                                       LM00038    
                  GETTM.(DATE,TIME)                                                               *024 LM00039    
                    DIMENSION ANAM(2)                                                             *025 LM00040    
                    EQUIVALENCE (NM1,ANAM(0)), (NM2,ANAM(1))                                      *026 LM00041    
                  WHENEVER NM1.A.77K.E.77K .OR. NM2.A.77K.E.77K                                   *027 LM00042    
                       PRMESS.($NOT ENOUGH ARGUMENTS$)                                            *028 LM00043    
                       CHNCOM.(0)                                                                 *029 LM00044    
                  END OF CONDITIONAL                                                              *030 LM00045    
                                                                                                       LM00046    
                  FILTAB IS A TABLE OF SPECIFIED FILES.                                                LM00047    
                  FILTAB(0) CONTAINS COUNT.                                                            LM00048    
                                                                                                       LM00049    
                  WHENEVER NM2.E.$SOURCE$.OR.NM2.E.$ARCHIV$                                       *031 LM00050    
                     NAMTYP=1B                                                                    *032 LM00051    
                     THROUGH IN00, FOR FILTAB=0,2,COMARG.(FILTAB+4).A.77K.E.77K                   *033 LM00052    
                1       .OR.FILTAB.E.FILTBZ                                                       *033 LM00053    
                     FILTAB(FILTAB+1)=COMARG.(FILTAB+4)                                           *034 LM00054    
                     WHENEVER COMARG.(FILTAB+5).A.77K.E.77K                                       *035 LM00055    
                     PRMESS.( $LAST ARGUMENT INCOMPLETE, RETYPE REQUEST$)                         *036 LM00056    
                     CHNCOM.(0)                                                                   *037 LM00057    
                     OTHERWISE                                                                    *038 LM00058    
                        FILTAB(FILTAB+2)=COMARG.(FILTAB+5)                                        *039 LM00059    
                     END OF CONDITIONAL                                                           *040 LM00060    
      IN00           CONTINUE                                                                     *041 LM00061    
                  OTHERWISE                                                                       *042 LM00062    
                     NAMTYP=0B                                                                    *043 LM00063    
                     THROUGH IN01, FOR FILTAB=0,1,COMARG.(FILTAB+4).A.77K.E.77K                   *044 LM00064    
                1       .OR. FILTAB.E.FILTBZ                                                      *044 LM00065    
      IN01        FILTAB(FILTAB+1)=COMARG.(FILTAB+4)                                              *045 LM00066    
                  END OF CONDITIONAL                                                              *046 LM00067    
                                                                                                       LM00068    
                  TEMPORARY FILE NAME IS PROB PROG                                                     LM00069    
                                                                                                       LM00070    
                  WHOAMI.(WHBUF(8)...8)                                                           *047 LM00071    
                    DIMENSION WHBUF(8)                                                            *048 LM00072    
                    DIMENSION TFIL(2)                                                             *049 LM00073    
                  TM1=WHBUF(8)                                                                    *050 LM00074    
                  TM2=WHBUF(7)                                                                    *051 LM00075    
                    EQUIVALENCE (TM1,TFIL(0)), (TM2,TFIL(1))                                      *052 LM00076    
                                                                                                       LM00077    
                  COMBIN--MAKE ORIGINAL ARCHIV                                                         LM00078    
                                                                                                       LM00079    
                  WHENEVER KEY.E.$COMBIN$ .OR. KEY.E.$     C$                                     *053 LM00080    
                  FSTATE.(NM1,NM2,FSBUF(8)...8,CM01)                                              *054 LM00081    
                  WHENEVER NAMTYP                                                                 *055 LM00082    
                  THROUGH CMP1A, FOR I=1,2,I.G.FILTAB                                             *056 LM00083    
      CMP1A       WHENEVER FILTAB(I).E.NM1.AND.FILTAB(I+1).E.NM2, TRANSFER TO CM01                *057 LM00084    
                  OTHERWISE                                                                       *058 LM00085    
                  THROUGH CMP1B, FOR I = 1,1,I.G.FILTAB                                           *059 LM00086    
      CMP1B       WHENEVER FILTAB(I).E.NM1, TRANSFER TO CM01                                      *060 LM00087    
                  END OF CONDITIONAL                                                              *061 LM00088    
                  PRMESS.($ YOU HAVE NOT INCLUDED THE OLD$,NM1,NM2,$.$)                           *062 LM00089    
                  PRMESA.($ IS THIS OK,$)                                                         *063 LM00090    
                  WHENEVER .NOT. YES.(0), TRANSFER TO FORGET                                      *064 LM00091    
      CM01        CONTINUE                                                                        *065 LM00092    
                  WHENEVER NAMTYP                                                                 *066 LM00093    
                  THROUGH CM03A, FOR FILTBP=1,2,FILTBP.G.FILTAB                                   *067 LM00094    
                  WHENEVER .NOT.CPFIL.(FILTAB(FILTBP),FILTAB(FILTBP+1)),                          *068 LM00095    
                1    PRNTER.(61K)                                                                 *068 LM00096    
      CM03A       CONTINUE                                                                        *069 LM00097    
                  OTHERWISE                                                                       *070 LM00098    
                  THROUGH CM03, FOR FILTBP=1,1,FILTBP.G.FILTAB                                    *071 LM00099    
                  WHENEVER .NOT. CPFIL.(FILTAB(FILTBP),NM2),                                      *072 LM00100    
                1    PRNTER.(61K)                                                                 *072 LM00101    
      CM03        CONTINUE                                                                        *073 LM00102    
                  END OF CONDITIONAL                                                              *074 LM00103    
                  WHENEVER TMOPSW, CLS.(NM1,NM2)                                                  *075 LM00104    
                  TRANSFER TO EXT                                                                 *076 LM00105    
      FORGET      PRMESS.($NOTHING DONE.$)                                                        *077 LM00106    
                  CHNCOM.(0)                                                                      *078 LM00107    
                                                                                                       LM00108    
                  TABLE--PRINT TABLE OF CONTENTS.                                                      LM00109    
                                                                                                       LM00110    
                  OR WHENEVER KEY.E.$ TABLE$ .OR. KEY.E.$     T$                                  *079 LM00111    
                  COPYSW=0B                                                                       *080 LM00112    
                  PRSSW=0B                                                                        *081 LM00113    
                  VECTOR VALUES BL = 605757575757K                                                *082 LM00114    
                  VECTOR VALUES CR = 555757575757K                                                *083 LM00115    
      TB01        WHENEVER FILTAB.E.0                                                             *084 LM00116    
                            GNEXT.(TFNF)                                                          *085 LM00117    
                     WHENEVER FIRST                                                               *086 LM00118    
                        FIRST = 0B                                                                *087 LM00119    
                        WHENEVER TOFF, OFF.($ARCHIV$,$OUTPUT$)                                    *088 LM00120    
                        WHENEVER TON, OFFON.($ARCHIV$,$OUTPUT$)                                   *089 LM00121    
                            PRMESS.                                                               *090 LM00122    
                        PRMESS.($ ***$,NM1,BL,NM2,BL,BL,DATE,BL,TIME)                             *091 LM00123    
                       PRMESS.                                                                    *092 LM00124    
                     END OF CONDITIONAL                                                           *093 LM00125    
                  BOOLEAN FIRST                                                                   *094 LM00126    
                  VECTOR VALUES FIRST = 1B                                                        *095 LM00127    
                  OTHERWISE                                                                       *096 LM00128    
                       SEARCH.(TFNF)                                                              *097 LM00129    
                        WHENEVER FIRST                                                            *098 LM00130    
                       FIRST = 0B                                                                 *099 LM00131    
                            WHENEVER TOFF, OFF.($ARCHIV$,$OUTPUT$)                                *100 LM00132    
                            WHENEVER TON, OFFON.($ARCHIV$,$OUTPUT$)                               *101 LM00133    
                       END OF CONDITIONAL                                                         *102 LM00134    
                  END OF CONDITIONAL                                                              *103 LM00135    
                  TEMP = INF2-INF1                                                                *104 LM00136    
                  PRMESS.(BL,PRLNMK(INF1),BL,PRLNMK(INF1-1)...TEMP)                               *105 LM00137    
                  TRANSFER TO TB01                                                                *106 LM00138    
                                                                                                       LM00139    
      TFNF        PRMESS.                                                                         *107 LM00140    
                  TRANSFER TO FNF                                                                 *108 LM00141    
                                                                                                       LM00142    
                  DELETE--REMOVE ENTRIES                                                               LM00143    
                                                                                                       LM00144    
                  OR WHENEVER KEY.E.$DELETE$ .OR. KEY.E.$     D$                                  *109 LM00145    
      DL01        COPYSW=1B                                                                       *110 LM00146    
                  PRSSW=1B                                                                        *111 LM00147    
                  WMRKSW=1B                                                                       *112 LM00148    
                  SEARCH.(REN)                                                                    *113 LM00149    
                  COPYSW=0B                                                                       *114 LM00150    
                  GNEXT.(REN)                                                                     *115 LM00151    
                  TRANSFER TO DL01                                                                *116 LM00152    
                                                                                                       LM00153    
                  XTRACT-                                                                              LM00154    
                                                                                                       LM00155    
                  OR WHENEVER KEY.E.$XTRACT$ .OR. KEY.E.$     X$ .OR. KEY.E.$    XT$              *117 LM00156    
      XT01        COPYSW=0B                                                                       *118 LM00157    
                  PRSSW=1B                                                                        *119 LM00158    
                  WHENEVER FILTAB.NE.0                                                            *120 LM00159    
                       SEARCH.(FNF)                                                               *121 LM00160    
                  OTHERWISE                                                                       *122 LM00161    
                       WHENEVER .NOT. GOTNXT, GNEXT.(FNF)                                         *123 LM00162    
                  END OF CONDITIONAL                                                              *124 LM00163    
                  NW1=FLN1.(PRLNMK)                                                               *125 LM00164    
                  NW2=FLN2.(PRLNMK)                                                               *126 LM00165    
                  COPYSW=1B                                                                       *127 LM00166    
                  WMRKSW=0B                                                                       *128 LM00167    
                  GNEXT.(XT02)                                                                    *129 LM00168    
                  GOTNXT=1B                                                                       *130 LM00169    
                  TRANSFER TO XT03                                                                *131 LM00170    
      XT02        NAMO=1B                                                                         *132 LM00171    
      XT03        WHENEVER CLS.(NW1,NW2)                                                          *133 LM00172    
                       WHENEVER KEY.E.$    XT$, CHFILE.(NW1,NW2,001K,-0,-0)                       *134 LM00173    
                  END OF CONDITIONAL                                                              *135 LM00174    
                  WHENEVER NAMO,TRANSFER TO FNF                                                   *136 LM00175    
                  TRANSFER TO XT01                                                                *137 LM00176    
                                                                                                       LM00177    
                  REPLAC                                                                               LM00178    
                                                                                                       LM00179    
                  OR WHENEVER KEY.E.$REPLAC$ .OR. KEY.E.$     R$ .OR. KEY.E.$    RD$              *138 LM00180    
      RP01        COPYSW=1B                                                                       *139 LM00181    
                  PRSSW=1B                                                                        *140 LM00182    
                  WMRKSW=1B                                                                       *141 LM00183    
                  WHENEVER FILTAB.NE.0                                                            *142 LM00184    
                       SEARCH.(RP02)                                                              *143 LM00185    
                  OTHERWISE                                                                       *144 LM00186    
                       WHENEVER .NOT. GOTNXT, GNEXT.(RP02)                                        *145 LM00187    
                  END OF CONDITIONAL                                                              *146 LM00188    
                  GOTNXT=0B                                                                       *147 LM00189    
                  WHENEVER .NOT. CPFIL.(FLN1.(PRLNMK),FLN2.(PRLNMK))                              *148 LM00190    
                       PRNTER.(61K)                                                               *149 LM00191    
                       COPYSW=1B                                                                  *150 LM00192    
                  OTHERWISE                                                                       *151 LM00193    
                  WHENEVER DELST.L.DELSTZ                                                         *152 LM00194    
                       DELST=DELST+1                                                              *153 LM00195    
                       DELST1(DELST)=FLN1.(PRLNMK)                                                *154 LM00196    
                       DELST2(DELST)=FLN2.(PRLNMK)                                                *155 LM00197    
                  END OF CONDITIONAL                                                              *156 LM00198    
                       COPYSW=0B                                                                  *157 LM00199    
                  END OF CONDITIONAL                                                              *158 LM00200    
                  GNEXT.(RP02)                                                                    *159 LM00201    
                  GOTNXT=1B                                                                       *160 LM00202    
                  TRANSFER TO RP01                                                                *161 LM00203    
      RP02        WHENEVER NAMTYP                                                                 *162 LM00204    
                     TYP=1                                                                        *163 LM00205    
                  OTHERWISE                                                                       *164 LM00206    
                     TYP=0                                                                        *165 LM00207    
                  END OF CONDITIONAL                                                              *166 LM00208    
                  THROUGH RP03, FOR JI=1,1,JI+TYP*(JI-1).G.FILTAB                                 *167 LM00209    
                  WHENEVER NAMTYP                                                                 *168 LM00210    
                     JJ=2*JI-1                                                                    *169 LM00211    
                     CNM2=FILTAB(JJ+1)                                                            *170 LM00212    
                  OTHERWISE                                                                       *171 LM00213    
                     JJ=JI                                                                        *172 LM00214    
                     CNM2=NM2                                                                     *173 LM00215    
                  END OF CONDITIONAL                                                              *174 LM00216    
                  WHENEVER .NOT. FILFND(JI)                                                       *175 LM00217    
                  PRMESS.(FILTAB(JJ),BL,CNM2,$ ADDED$,606346605757K,NM1,BL,NM2)                   *176 LM00218    
                       WHENEVER .NOT. CPFIL.(FILTAB(JJ),CNM2)                                     *177 LM00219    
                            PRNTER.(61K)                                                          *178 LM00220    
                       OTHERWISE                                                                  *179 LM00221    
                            FILFND(JI)=1B                                                         *180 LM00222    
                       WHENEVER DELST.L.DELSTZ                                                    *181 LM00223    
                            DELST=DELST+1                                                         *182 LM00224    
                            DELST1(DELST)=FILTAB(JJ)                                              *183 LM00225    
                            DELST2(DELST)=CNM2                                                    *184 LM00226    
                       END OF CONDITIONAL                                                         *185 LM00227    
                       END OF CONDITIONAL                                                         *186 LM00228    
      RP03        END OF CONDITIONAL                                                              *187 LM00229    
                  WHENEVER CLS.(NM1,NM2)                                                          *188 LM00230    
                  WHENEVER KEY.E.$    RD$                                                         *189 LM00231    
                       THROUGH RPD01, FOR I=1,1,I.G.DELST                                         *190 LM00232    
      RPD01                 DELT.(DELST1(I),DELST2(I))                                            *191 LM00233    
                  END OF CONDITIONAL                                                              *192 LM00234    
                  END OF CONDITIONAL                                                              *193 LM00235    
                  TRANSFER TO EXT                                                                 *194 LM00236    
                  BOOLEAN GOTNXT                                                                  *195 LM00237    
                  DIMENSION DELST1(100), DELST2(100)                                              *196 LM00238    
                  VECTOR VALUES DELSTZ=100                                                        *197 LM00239    
                                                                                                       LM00240    
                  UPDATE--CONDITIONAL REPLAC                                                           LM00241    
                                                                                                       LM00242    
                  OR WHENEVER KEY.E.$UPDATE$ .OR. KEY.E.$     U$                                  *198 LM00243    
      UP01        COPYSW=1B                                                                       *199 LM00244    
                  PRSSW=1B                                                                        *200 LM00245    
                  WMRKSW=1B                                                                       *201 LM00246    
                  WHENEVER FILTAB.NE.0                                                            *202 LM00247    
                       SEARCH.(REN)                                                               *203 LM00248    
                  OTHERWISE                                                                       *204 LM00249    
                       WHENEVER .NOT. GOTNXT, GNEXT.(REN)                                         *205 LM00250    
                  END OF CONDITIONAL                                                              *206 LM00251    
                  FSTATE.(FLN1.(PRLNMK),FLN2.(PRLNMK),FSBUF(8)...8,UP02)                          *207 LM00252    
                  WHENEVER FSBUF(2).A.377777777777K.G.DATTM.(PRLNMK).A.377777777777K              *208 LM00253    
                       TEMP = INF2-INF1                                                           *209 LM00254    
                       PRMESS.(PRLNMK(INF1),BL,PRLNMK(INF1-1)...TEMP)                             *210 LM00255    
                       COPYSW=0B                                                                  *211 LM00256    
                       WHENEVER .NOT. CPFIL.(FLN1.(PRLNMK),FLN2.(PRLNMK)), COPYSW=1B              *212 LM00257    
                  OTHERWISE                                                                       *213 LM00258    
      UP02             COPYSW=1B                                                                  *214 LM00259    
                  END OF CONDITIONAL                                                              *215 LM00260    
                  GNEXT.(REN)                                                                     *216 LM00261    
                  GOTNXT=1B                                                                       *217 LM00262    
                  TRANSFER TO UP01                                                                *218 LM00263    
                                                                                                       LM00264    
                  PRINT                                                                                LM00265    
                                                                                                       LM00266    
                  OR WHENEVER KEY .E.$ PRINT$ .OR. KEY.E.$     P$                                 *219 LM00267    
                  SAVBRK.                                                                         *220 LM00268    
                  SETBRK.(EXT)                                                                    *221 LM00269    
      PRP1        COPYSW=0B                                                                       *222 LM00270    
                  PRSSW=0B                                                                        *223 LM00271    
                  WHENEVER FILTAB.NE.0                                                            *224 LM00272    
                       SEARCH.(SPC)                                                               *225 LM00273    
                  OTHERWISE                                                                       *226 LM00274    
                       GNEXT.(SPC)                                                                *227 LM00275    
                  END OF CONDITIONAL                                                              *228 LM00276    
                  PRMESS.                                                                         *229 LM00277    
                  TEMP = INF2-INF1 - 1                                                            *230 LM00278    
                  PRMESS.(PRLNMK(INF1)...TEMP)                                                    *231 LM00279    
                  PRMESS.                                                                         *232 LM00280    
                  CT=CNT.(PRLNMK)                                                                 *233 LM00281    
                  THROUGH PR02, FOR I=0,0,I.GE.CT                                                 *234 LM00282    
                       BFREAD.(NM1,NM2,PRTBUF(PRTZ)...1,                                          *235 LM00283    
                1        FRMER,EOFCT,GERR)                                                        *235 LM00284    
                       I=I+1                                                                      *236 LM00285    
                       WHENEVER PRTBUF(PRTZ).A.777777K6 .E. 777777K6                              *237 LM00286    
                            WCT=PRTBUF(PRTZ).A.777777K                                            *238 LM00287    
                            WHENEVER WCT.E.0,PRMESS.                                              *239 LM00288    
                            THROUGH PR01, FOR J=PRTZ,PRTZ,J.G.WCT                                 *240 LM00289    
                              BFREAD.(NM1,NM2,PRTBUF(PRTZ)...PRTZ,                                *241 LM00290    
                1               FRMER,EOFCT,GERR)                                                 *241 LM00291    
                  TEMP = -PRTZ                                                                    *242 LM00292    
      PR01                  PRMESS.(PRTBUF(PRTZ)...TEMP)                                          *243 LM00293    
                            RMNT=PRTZ-(J-WCT)                                                     *244 LM00294    
                            WHENEVER RMNT.NE.0                                                    *245 LM00295    
                              BFREAD.(NM1,NM2,PRTBUF(RMNT)...RMNT,                                *246 LM00296    
                1               FRMER,EOFCT,GERR)                                                 *246 LM00297    
                            TEMP = -RMNT                                                          *247 LM00298    
                            PRMESS.(PRTBUF(RMNT)...TEMP)                                          *248 LM00299    
                            END OF CONDITIONAL                                                    *249 LM00300    
                            I=I+WCT                                                               *250 LM00301    
                       OTHERWISE                                                                  *251 LM00302    
                            BFREAD.(NM1,NM2,PRTBUF(PRTZ-1)...13,                                  *252 LM00303    
                1             FRMER,EOFCT,GERR)                                                   *252 LM00304    
                       I=I+13                                                                     *253 LM00305    
                  TEMP1 = (PRTBUF(PRTZ-13).A.7777K8).V.60575757K                                  *254 LM00306    
                  TEMP = -11                                                                      *255 LM00307    
                  PRMESS.(PRTBUF(PRTZ-12),TEMP1,PRTBUF(PRTZ)...TEMP)                              *256 LM00308    
      PR02             END OF CONDITIONAL                                                         *257 LM00309    
                       ADJSW=1B                                                                   *258 LM00310    
                       TRANSFER TO PRP1                                                           *259 LM00311    
                  DIMENSION PRTBUF(22)                                                            *260 LM00312    
                    VECTOR VALUES PRTZ=22                                                         *261 LM00313    
                                                                                                       LM00314    
                  ERROR                                                                                LM00315    
                                                                                                       LM00316    
                  OTHERWISE                                                                       *262 LM00317    
                  PRMESS.(KEY,$ -- NOT A VALID ARGUMENT.$)                                        *263 LM00318    
                  CHNCOM.(0)                                                                      *264 LM00319    
                  END OF CONDITIONAL                                                              *265 LM00320    
                                                                                                       LM00321    
                  GRACEFUL EXIT                                                                        LM00322    
                                                                                                       LM00323    
      SPC         PRMESS.                                                                         *266 LM00324    
                  TRANSFER TO FNF                                                                 *267 LM00325    
      REN         CLS.(NM1,NM2)                                                                   *268 LM00326    
      FNF         WHENEVER NAMTYP                                                                 *269 LM00327    
                     THROUGH FN01A, FOR I = 1,1,I.G.FILTAB/2                                      *270 LM00328    
                     WHENEVER .NOT.FILFND(I)                                                      *271 LM00329    
                  PRMESS.(FILTAB(2*I-1),BL,FILTAB(2*I),$ NOT FOUND I$,                            *272 LM00330    
                1  456057575757K,NM1,BL,NM2)                                                      *272 LM00331    
      FN01A          END OF CONDITIONAL                                                           *273 LM00332    
                  OTHERWISE                                                                       *274 LM00333    
                     THROUGH FNO1B, FOR I=1,1,I.G.FILTAB                                          *275 LM00334    
                     WHENEVER .NOT.FILFND(I)                                                      *276 LM00335    
                       PRMESS.(FILTAB(I),BL,NM2,$ NOT FOUND I$,456057575757K,                     *277 LM00336    
                1   NM1,BL,NM2)                                                                   *277 LM00337    
      FNO1B          END OF CONDITIONAL                                                           *278 LM00338    
                  END OF CONDITIONAL                                                              *279 LM00339    
      EXT         CHNCOM.(0)                                                                      *280 LM00340    
                  PRMESS.($FRAM$)                                                                 *281 LM00341    
                  PRMESS.($NOTIFY SYSTEMS STAFF$)                                                 *282 LM00342    
                  DORMNT.                                                                         *283 LM00343    
                                                                                                       LM00344    
                  ASUBS CONTAINS INTERNAL FUNCTIONS SEARCH., GNEXT., CPFIL.,                           LM00345    
                  CLS., YES.                                                                           LM00346    
                  AFORM CONTAINS INTERNAL FUNCTIONS MKLNMK., BDLNMK., DATTM.,                          LM00347    
                  FLN1., FLN2., CNT.                                                                   LM00348    
                  AFORM CONTAINS ALL INFORMATION ON THE ACTUAL LINE MARK FORMA                         LM00349    
                                                                                                       LM00350    
                  INSERT FILE ASUBS                                                               *284 LM00351    
                  SEARCH. FINDS THE NEXT 'SUPER LINE MARK' WHOSE                                  *284 LM00001    
                  NAME IS IN THE TABLE FILTAB SET UP DURING                                       *284 LM00002    
                  INITIALIZATION.                                                                 *284 LM00003    
                                                                                                  *284 LM00004    
                  THE SEARCH WILL INCLUDE PRLNMK, THE PRESENT LINE MARK,                          *284 LM00005    
                  IFF PRSSW.E.1B                                                                  *284 LM00006    
                                                                                                  *284 LM00007    
                  INTERNAL FUNCTION (EOFXT)                                                       *285 LM00008    
                  STATEMENT LABEL EOFXT                                                           *286 LM00009    
                  ENTRY TO SEARCH.                                                                *287 LM00010    
                  WHENEVER NAMTYP                                                                 *288 LM00011    
                     WHENEVER .NOT. COPYSW                                                        *289 LM00012    
                     THROUGH SR00A, FOR I=1,1,I.G.FILTAB                                          *290 LM00013    
      SR00A       WHENEVER .NOT. FILFND(I), TRANSFER TO SRP0A                                     *291 LM00014    
                     BFCLOS.(NM1,NM2,GERR)                                                        *292 LM00015    
                     AROPSW=0B                                                                    *293 LM00016    
                     TRANSFER TO EOFXT                                                            *294 LM00017    
                  END OF CONDITIONAL                                                              *295 LM00018    
      SRP0A       CONTINUE                                                                        *296 LM00019    
                  WHENEVER PRSSW.AND.AROPSW, TRANSFER TO SR02A                                    *297 LM00020    
      SR01A       GNEXT.(EOFXT)                                                                   *298 LM00021    
      SR02A       THROUGH SR03A, FOR FILTBP=1,2,FILTBP.G.FILTAB                                   *299 LM00022    
                  PNTR=(FILTBP+1)/2                                                               *300 LM00023    
                  WHENEVER FLN1.(PRLNMK).E.FILTAB(FILTBP)                                         *301 LM00024    
                1    .AND.FLN2.(PRLNMK).E.FILTAB(FILTBP+1)                                        *301 LM00025    
                2    .AND..NOT.FILFND(PNTR)                                                       *301 LM00026    
                  FILFND(PNTR)=1B                                                                 *302 LM00027    
                  FUNCTION RETURN                                                                 *303 LM00028    
      SR03A       END OF CONDITIONAL                                                              *304 LM00029    
                  TRANSFER TO SR01A                                                               *305 LM00030    
                  OTHERWISE                                                                       *306 LM00031    
                  WHENEVER .NOT.COPYSW                                                            *307 LM00032    
                     THROUGH SR00, FOR I=1,1,I.G.FILTAB                                           *308 LM00033    
      SR00           WHENEVER .NOT.FILFND(I), TRANSFER TO SRP0                                    *309 LM00034    
                     BFCLOS.(NM1,NM2,GERR)                                                        *310 LM00035    
                     AROPSW=0B                                                                    *311 LM00036    
                     TRANSFER TO EOFXT                                                            *312 LM00037    
                  END OF CONDITIONAL                                                              *313 LM00038    
      SRP0        CONTINUE                                                                        *314 LM00039    
                  WHENEVER PRSSW.AND.AROPSW, TRANSFER TO SR02                                     *315 LM00040    
      SR01        GNEXT.(EOFXT)                                                                   *316 LM00041    
      SR02        WHENEVER FLN2.(PRLNMK).NE.NM2                                                   *317 LM00042    
                     TRANSFER TO SR01                                                             *318 LM00043    
                  OTHERWISE                                                                       *319 LM00044    
                     THROUGH SR03, FOR FILTBP=1,1,FILTBP.G.FILTAB                                 *320 LM00045    
                  WHENEVER FLN1.(PRLNMK).E.FILTAB(FILTBP)                                         *321 LM00046    
                1    .AND..NOT.FILFND(FILTBP)                                                     *321 LM00047    
                        FILFND(FILTBP)=1B                                                         *322 LM00048    
                        FUNCTION RETURN                                                           *323 LM00049    
      SR03           END OF CONDITIONAL                                                           *324 LM00050    
                  TRANSFER TO SR01                                                                *325 LM00051    
                  END OF CONDITIONAL                                                              *326 LM00052    
                  END OF CONDITIONAL                                                              *327 LM00053    
                  END OF FUNCTION                                                                 *328 LM00054    
                                                                                                       LM00055    
                  GNEXT. FINDS THE NEXT 'SUPER LINE MARK,' READING                                     LM00056    
                  SERIALLY THROUGH THE ARCHIV FILE AND COPYING IT                                      LM00057    
                  INTO THE TEMPORARY FILE IFF COPYSW.E.1B.                                             LM00058    
                  PRLNMK, THE PRESENT LINE MARK, IS COPIED IFF WMRKSW.E.1B                             LM00059    
                                                                                                       LM00060    
                  INTERNAL FUNCTION (EOFXT)                                                       *329 LM00061    
                  STATEMENT LABEL EOFXT                                                           *330 LM00062    
                  ENTRY TO GNEXT.                                                                 *331 LM00063    
                  WHENEVER .NOT. AROPSW                                                           *332 LM00064    
                       BFOPEN.($R$,NM1,NM2,BUF1(BUFZ),BUF2(BUFZ),-0,GERR)                         *333 LM00065    
                       BFREAD.(NM1,NM2,PRLNMK(LMKZ)...LMKZ,FRMER,EOFCT,GERR)                      *334 LM00066    
                       WHENEVER BDLNMK.(PRLNMK)                                                   *335 LM00067    
                       WHENEVER PRLNMK(LMKZ).E.555555555555K                                      *336 LM00068    
                            PRINT COMMENT $ARCHIV FILE HAS OLD FORMAT.$                           *337 LM00069    
                            PRINT COMMENT $USE NWARCH SAVED IN PUBLIC FILE TO R                   *338 LM00070    
                1 EFORMAT.$                                                                       *338 LM00071    
                            PRINT COMMENT $LINK NWARCH SAVED M1416 CMFL04$                        *339 LM00072    
                            PRINT COMMENT $RESUME NWARCH$                                         *340 LM00073    
                            PRINT COMMENT $FOR INSTRUCTIONS.$                                     *341 LM00074    
                            CHNCOM.(0)                                                            *342 LM00075    
                       OTHERWISE                                                                  *343 LM00076    
                            TRANSFER TO FRMER                                                     *344 LM00077    
                       END OF CONDITIONAL                                                         *345 LM00078    
                       END OF CONDITIONAL                                                         *346 LM00079    
                  AROPSW=1B                                                                       *347 LM00080    
                  FUNCTION RETURN                                                                 *348 LM00081    
                  END OF CONDITIONAL                                                              *349 LM00082    
                  WHENEVER COPYSW .AND. .NOT. TMOPSW                                              *350 LM00083    
                       DELETE.(TM1,TM2,0,OUT)                                                     *351 LM00084    
                       BFOPEN.($W$,TM1,TM2,BUF3(BUFZ),BUF4(BUFZ),BUF5(BUFZ),                      *352 LM00085    
                1        GERR)                                                                    *352 LM00086    
                       TMOPSW=1B                                                                  *353 LM00087    
                  END OF CONDITIONAL                                                              *354 LM00088    
                  WHENEVER COPYSW .AND. WMRKSW                                                    *355 LM00089    
                       BFWRIT.(TM1,TM2,PRLNMK(LMKZ)...LMKZ,GERR)                                  *356 LM00090    
                  END OF CONDITIONAL                                                              *357 LM00091    
                  WHENEVER .NOT. ADJSW                                                            *358 LM00092    
                       AFZ=CNT.(PRLNMK)                                                           *359 LM00093    
                       THROUGH COPY, FOR I=CPBUFZ,CPBUFZ,I.G.AFZ                                  *360 LM00094    
                            BFREAD.(NM1,NM2,CPBUF(CPBUFZ)...CPBUFZ,                               *361 LM00095    
                1             FRMER,EOFCT,GERR)                                                   *361 LM00096    
                            WHENEVER COPYSW                                                       *362 LM00097    
                                 BFWRIT.(TM1,TM2,CPBUF(CPBUFZ)...CPBUFZ,GERR)                     *363 LM00098    
                            END OF CONDITIONAL                                                    *364 LM00099    
      COPY             CONTINUE                                                                   *365 LM00100    
                       REMN=CPBUFZ-(I-AFZ)                                                        *366 LM00101    
                       WHENEVER REMN.NE.0                                                         *367 LM00102    
                            BFREAD.(NM1,NM2,CPBUF(REMN)...REMN,                                   *368 LM00103    
                1             FRMER,EOFCT,GERR)                                                   *368 LM00104    
                            WHENEVER COPYSW                                                       *369 LM00105    
                                 BFWRIT.(TM1,TM2,CPBUF(REMN)...REMN,GERR)                         *370 LM00106    
                            END OF CONDITIONAL                                                    *371 LM00107    
                       END OF CONDITIONAL                                                         *372 LM00108    
                  END OF CONDITIONAL                                                              *373 LM00109    
                  BFREAD.(NM1,NM2,PRLNMK(LMKZ)...LMKZ,EOF,EOFCT,GERR)                             *374 LM00110    
                  WHENEVER BDLNMK.(PRLNMK),TRANSFER TO FRMER                                      *375 LM00111    
                  ADJSW=0B                                                                        *376 LM00112    
                  FUNCTION RETURN                                                                 *377 LM00113    
      EOF         BFCLOS.(NM1,NM2,GERR)                                                           *378 LM00114    
                  AROPSW=0B                                                                       *379 LM00115    
                  TRANSFER TO EOFXT                                                               *380 LM00116    
      FRMER       PRMESS.($ARCHIV FORMAT ERROR IN$,NM1,BL,NM2)                                    *381 LM00117    
                  BFCLOS.($   ALL$,-0,GERR)                                                       *382 LM00118    
                  CHNCOM.(1)                                                                      *383 LM00119    
      GERR        PRNTER.(61K)                                                                    *384 LM00120    
                  CHNCOM.(1)                                                                      *385 LM00121    
                  END OF FUNCTION                                                                 *386 LM00122    
                                                                                                       LM00123    
                  CPFIL.(A,B) COPIES FILE A B INTO THE TEMPORARY FILE.                                 LM00124    
                  CPFIL. ALWAYS MAKES THE LINE MARK NWLNMK AND WRITES                                  LM00125    
                  IT AT THE BEGINNING OF THE ENTRY UNLESS THE FILE IS AN                               LM00126    
                  ARCHIV FILE ALREADY.                                                                 LM00127    
                                                                                                       LM00128    
                  RETURNS 1B IFF SUCCESSFUL                                                            LM00129    
                                                                                                       LM00130    
                  BOOLEAN CPFIL.                                                                  *387 LM00131    
                  INTERNAL FUNCTION(A,B)                                                          *388 LM00132    
                  ENTRY TO CPFIL.                                                                 *389 LM00133    
                  WHENEVER .NOT. MKLNMK.(A,B,CT)                                                  *390 LM00134    
                       FUNCTION RETURN 0B                                                         *391 LM00135    
                  OTHERWISE                                                                       *392 LM00136    
                       WHENEVER .NOT. TMOPSW                                                      *393 LM00137    
                            DELETE.(TM1,TM2,0,OUT)                                                *394 LM00138    
                            BFOPEN.($W$,TM1,TM2,BUF3(BUFZ),BUF4(BUFZ),                            *395 LM00139    
                1             BUF5(BUFZ),GERR)                                                    *395 LM00140    
                            TMOPSW=1B                                                             *396 LM00141    
                       END OF CONDITIONAL                                                         *397 LM00142    
                       BFOPEN.($R$,A,B,BUF6(BUFZ),BUF7(BUFZ),-0,GERR)                             *398 LM00143    
                       FRSTSW=1B                                                                  *399 LM00144    
                       THROUGH CPF01, FOR I=CPBUFZ,CPBUFZ,I.G.CT                                  *400 LM00145    
                            BFREAD.(A,B,CPBUF(CPBUFZ)...CPBUFZ,                                   *401 LM00146    
                1             CPFEF,EOFCT,GERR)                                                   *401 LM00147    
                            WHENEVER BDLNMK.(CPBUF(CPBUFZ-LMKZ)) .AND. FRSTSW                     *402 LM00148    
                                 BFWRIT.(TM1,TM2,NWLNMK(LMKZ)...LMKZ,GERR)                        *403 LM00149    
                            END OF CONDITIONAL                                                    *404 LM00150    
                       FRSTSW=0B                                                                  *405 LM00151    
      CPF01                 BFWRIT.(TM1,TM2,CPBUF(CPBUFZ)...CPBUFZ,GERR)                          *406 LM00152    
                       REMN=CPBUFZ-(I-CT)                                                         *407 LM00153    
                       BFREAD.(A,B,CPBUF(REMN)...REMN,CPFEF,EOFCT,GERR)                           *408 LM00154    
                       WHENEVER  BDLNMK.(CPBUF(REMN-LMKZ)) .AND. FRSTSW                           *409 LM00155    
                            BFWRIT.(TM1,TM2,NWLNMK(LMKZ)...LMKZ,GERR)                             *410 LM00156    
                       END OF CONDITIONAL                                                         *411 LM00157    
                       BFWRIT.(TM1,TM2,CPBUF(REMN)...REMN,GERR)                                   *412 LM00158    
                       BFCLOS.(A,B,GERR)                                                          *413 LM00159    
                       FUNCTION RETURN 1B                                                         *414 LM00160    
                  END OF CONDITIONAL                                                              *415 LM00161    
      CPFEF       PRINT COMMENT $ERROR IN FSTATE.--NOTIFY SYSTEMS STAFF.$                         *416 LM00162    
                  PRINT COMMENT $DORMNT CALLED$                                                   *417 LM00163    
                  DORMNT.                                                                         *418 LM00164    
                  END OF FUNCTION                                                                 *419 LM00165    
                  NORMAL MODE IS INTEGER                                                          *420 LM00166    
                  BOOLEAN COPYSW, PRSSW, WMRKSW, AROPSW, TMOPSW, FRSTSW                           *421 LM00167    
                  BOOLEAN NAMO, ADJSW, NAMTYP                                                     *422 LM00168    
                  VECTOR VALUES BUFZ=432                                                          *423 LM00169    
                  DIMENSION BUF1(432), BUF2(432), BUF3(432), BUF4(432), BUF5(432),                *424 LM00170    
                1   BUF6(432), BUF7(432)                                                          *424 LM00171    
                  DIMENSION CPBUF(432)                                                            *425 LM00172    
                    VECTOR VALUES CPBUFZ=432                                                      *426 LM00173    
                  VECTOR VALUES FILTBZ=16                                                         *427 LM00174    
                  DIMENSION FILTAB(16)                                                            *428 LM00175    
                  BOOLEAN FILFND                                                                  *429 LM00176    
                  DIMENSION FILFND(16)                                                            *430 LM00177    
                                                                                                       LM00178    
                  CLS.(A,B) CLOSES THE TEMPORARY FILE AND RENAMES IT A B                               LM00179    
                                                                                                       LM00180    
                  BOOLEAN CLS.                                                                    *431 LM00181    
                  INTERNAL FUNCTION (A,B)                                                         *432 LM00182    
                  ENTRY TO CLS.                                                                   *433 LM00183    
                  WHENEVER TMOPSW                                                                 *434 LM00184    
                       BFCLOS.(TM1,TM2,GERR)                                                      *435 LM00185    
                       TMOPSW=0B                                                                  *436 LM00186    
                       DIMENSION FNM(2)                                                           *437 LM00187    
                       FNM(0)=A                                                                   *438 LM00188    
                       FNM(1)=B                                                                   *439 LM00189    
                       FSTATE.(A,B,FSBUF(8)...8,NFND)                                             *440 LM00190    
                         EQUIVALENCE (MODE,FSBUF(7))                                              *441 LM00191    
                       MODE=MODE.A.134K                                                           *442 LM00192    
      CL01        DELETE.(A,B,0,NDEL1)                                                            *443 LM00193    
                  CHFILE.(TM1,TM2,-0,A,B)                                                         *444 LM00194    
                       WHENEVER MODE.NE.000K .AND. KEY.NE.$    XT$                                *445 LM00195    
                            CHFILE.(A,B,MODE,-0,-0)                                               *446 LM00196    
                       MODEP = (OCRBC.(MODE).A.777777K).V.575757K6                                *447 LM00197    
                       PRMESS.(A,BL,B,BL,$CREATED IN '$,MODEP,$' MODE.$)                          *448 LM00198    
                       END OF CONDITIONAL                                                         *449 LM00199    
                       FUNCTION RETURN 1B                                                         *450 LM00200    
      NDEL1            FUNCTION RETURN 0B                                                         *451 LM00201    
                  OTHERWISE                                                                       *452 LM00202    
                       FUNCTION RETURN 0B                                                         *453 LM00203    
                  END OF CONDITIONAL                                                              *454 LM00204    
      NFND        MODE=000K                                                                       *455 LM00205    
                  TRANSFER TO CL01                                                                *456 LM00206    
                  END OF FUNCTION                                                                 *457 LM00207    
                                                                                                       LM00208    
                                                                                                       LM00209    
                  YES. READS A LINE AND RETURNS 1B IFF IT IS 'YES'                                     LM00210    
                                                                                                       LM00211    
                  BOOLEAN YES.                                                                    *458 LM00212    
                  INTERNAL FUNCTION                                                               *459 LM00213    
                  ENTRY TO YES.                                                                   *460 LM00214    
                  RDFLXC.(YESNO,6)                                                                *461 LM00215    
                  WHENEVER YESNO.E.$YES   $                                                       *462 LM00216    
                       FUNCTION RETURN 1B                                                         *463 LM00217    
                  OTHERWISE                                                                       *464 LM00218    
                       FUNCTION RETURN 0B                                                         *465 LM00219    
                  END OF CONDITIONAL                                                              *466 LM00220    
                  END OF FUNCTION                                                                 *467 LM00221    
                                                                                                       LM00222    
                  DELT. DELETES A FILE AND TELLS YOU ABOUT IT.                                         LM00223    
                  RETURNS 1B IFF SUCCESSFUL.                                                           LM00224    
                                                                                                       LM00225    
                  BOOLEAN DELT.                                                                   *468 LM00226    
                  INTERNAL FUNCTION (A,B)                                                         *469 LM00227    
                  ENTRY TO DELT.                                                                  *470 LM00228    
                  FNM(0)=A                                                                        *471 LM00229    
                  FNM(1)=B                                                                        *472 LM00230    
                  DELETE.(A,B,0,NOTDEL)                                                           *473 LM00231    
                       PRMESS.(A,BL,B,$ DELETED.$)                                                *474 LM00232    
                       FUNCTION RETURN 1B                                                         *475 LM00233    
      NOTDEL      PRMESS.(A,BL,B,$ NOT DELETED.$)                                                 *476 LM00234    
                  FUNCTION RETURN 0B                                                              *477 LM00235    
                  END OF FUNCTION                                                                 *478 LM00236    
                  INSERT FILE AFORM                                                               *479 LM00352    
                  THE FORMAT OF THE 'SUPER LINE MARK' IN ARCHIV FILES                             *479 LM00001    
                  IS:                                                                             *479 LM00002    
                  777777000000K,..,..,..,777777000011K,FLN1,FLN2,                                 *479 LM00003    
                  $ MM/DD/YY HHMM.M  $,                                                           *479 LM00004    
                  $ZZZZZZ$,$$,$   000$,$00    $                                                   *479 LM00005    
                  TOTALLING 14 WORDS, WHERE ZZZZZZ IS FILE WORD COUNT.                            *479 LM00006    
                  THIS INFORMATION SHLD NOT BE KNOWN ANYWHERE IN THE PROGRAM                      *479 LM00007    
                  EXCEPT IN THE FLLWING INTERNAL FUNCTIONS AND V'S STATEMENTS.                    *479 LM00008    
                                                                                                  *479 LM00009    
                  MKLNMK.(A,B,CT) MAKS A LINE MARK FOR A B IN NWLNMK AND SETS                     *479 LM00010    
                  CT=FILE SIZE IN WORDS.  MKLNMK CALLS FSTATE.                                    *479 LM00011    
                                                                                                  *479 LM00012    
                  MKLNMK. RETURNS 1B IFF FILE EXISTS.                                             *479 LM00013    
                                                                                                  *479 LM00014    
                  BOOLEAN MKLNMK.                                                                 *480 LM00015    
                  INTERNAL FUNCTION (A,B,CT)                                                      *481 LM00016    
                  ENTRY TO MKLNMK.                                                                *482 LM00017    
                  OLDERR=FERRTN.(NTFND)                                                           *483 LM00018    
                  FSTATE.(A,B,FSBUF(8)...8)                                                       *484 LM00019    
                  FERRTN.(OLDERR)                                                                 *485 LM00020    
                  CT=FSBUF(8)                                                                     *486 LM00021    
                  VECTOR VALUES NWLNMK(11)...NWLNMK(14)=777777000000K                             *487 LM00022    
                  VECTOR VALUES NWLNMK(10)=777777000011K                                          *488 LM00023    
                  NWLNMK(9)=A                                                                     *489 LM00024    
                  NWLNMK(8)=B                                                                     *490 LM00025    
                  WHENEVER .NOT. GOTTM                                                            *491 LM00026    
                    BOOLEAN GOTTM                                                                 *492 LM00027    
                       GETTM.(PDATE,PTIME)                                                        *493 LM00028    
                       NWLNMK(7)=(PDATE.RS.6).V.$ 00000$                                          *494 LM00029    
                       NWLNMK(6) = (DEFBC.(GTDYTM.(0).RS.27).LS.18)                               *495 LM00030    
                1           .V.(PTIME.RS.24)                                                      *495 LM00031    
                2                .V.$/00 00$                                                      *495 LM00032    
                                                                                                       LM00033    
                       NWLNMK(5)=(PTIME.LS.12).V.$0000  $                                         *496 LM00034    
                       GOTTM=1B                                                                   *497 LM00035    
                  END OF CONDITIONAL                                                              *498 LM00036    
                  NWLNMK(4)=BZEL.(DEFBC.(FSBUF(8)))                                               *499 LM00037    
                  VECTOR VALUES NWLNMK(3)=$      $                                                *500 LM00038    
                  VECTOR VALUES NWLNMK(2)=$   000$                                                *501 LM00039    
                  VECTOR VALUES NWLNMK(1)=$00    $                                                *502 LM00040    
                  FUNCTION RETURN 1B                                                              *503 LM00041    
      NTFND       FERRTN.(OLDERR)                                                                 *504 LM00042    
                  FUNCTION RETURN 0B                                                              *505 LM00043    
                  END OF FUNCTION                                                                 *506 LM00044    
                                                                                                       LM00045    
                  BDLNMK.(LMK) RETURNS 1B IF LMK(LMKZ)...LMKZ IS 'BAD,'                                LM00046    
                  THAT IS, NOT A VALID LINE MARK.                                                      LM00047    
                                                                                                       LM00048    
                  BOOLEAN BDLNMK.                                                                 *507 LM00049    
                  INTERNAL FUNCTION(LMK)                                                          *508 LM00050    
                  ENTRY TO BDLNMK.                                                                *509 LM00051    
                  WHENEVER (LMK(14).NE.777777000000K .AND. LMK(14).NE.0)                          *510 LM00052    
                1 .OR.LMK(13).NE.777777000000K                                                    *510 LM00053    
                2 .OR.LMK(12).NE.777777000000K                                                    *510 LM00054    
                3 .OR.LMK(11).NE.777777000000K                                                    *510 LM00055    
                4 .OR.LMK(10).NE.777777000011K                                                    *510 LM00056    
                5 .OR.LMK(7).A.776060776060K .NE. $ 00/00$                                        *510 LM00057    
                6 .OR.LMK(6).A.776060776060K .NE. $/00 00$                                        *510 LM00058    
                7 .OR.LMK(5).A.606077607777K .NE. $00.0  $                                        *510 LM00059    
                8 .OR.LMK(4).A.60K.NE.0                                                           *510 LM00060    
                       FUNCTION RETURN 1B                                                         *511 LM00061    
                  OTHERWISE                                                                       *512 LM00062    
                       FUNCTION RETURN 0B                                                         *513 LM00063    
                  END OF CONDITIONAL                                                              *514 LM00064    
                  END OF FUNCTION                                                                 *515 LM00065    
                                                                                                       LM00066    
                  THE FOLLOWING DINK ROUTINES GET VARIOUS PIECES                                       LM00067    
                  OF INFORMATION OUT OF A LINE MARK.                                                   LM00068    
                                                                                                       LM00069    
                  DATTM.(LMK) GETS DATE AND TIME IN FSTATE. FORMAT.                                    LM00070    
                                                                                                       LM00071    
                  INTERNAL FUNCTION DATTM.(LMK)=                                                  *516 LM00072    
                1      (BCDEC.((LMK(6).RS.18).A.7777K).LS.27).A.777K9                             *516 LM00073    
                2   .V.(BCDEC.((LMK(7).RS.18).A.7777K).LS.23).A.74K7                              *516 LM00074    
                3   .V.(BCDEC.(LMK(7).A.7777K).LS.18).A.37K6                                      *516 LM00075    
                4   .V.(BCDEC.(LMK(6).A.7777K)*3600                                               *516 LM00076    
                6      +BCDEC.(LMK(5).RS.24)*60                                                   *516 LM00077    
                5      +BCDEC.((LMK(5).RS.12).A.77K)*6)                                           *516 LM00078    
                                                                                                       LM00079    
                  CNT.(LMK) GETS FILE WORD COUNT                                                       LM00080    
                  FLN1.(LMK) AND FLN2.(LMK) GET RESPECTIVE FILE NAMES                                  LM00081    
                                                                                                       LM00082    
                  INTERNAL FUNCTION CNT.(LMK)=BCDEC.(LMK(4))                                      *517 LM00083    
                  INTERNAL FUNCTION FLN1.(LMK)=LMK(9)                                             *518 LM00084    
                  INTERNAL FUNCTION FLN2.(LMK)=LMK(8)                                             *519 LM00085    
                                                                                                       LM00086    
                  INF1 AND INF2 ARE LIMITS OF INTEREST FOR PRINT AND TABLE.                            LM00087    
                  LMKZ IS LINE MARK SIZE                                                               LM00088    
                  PRLNMK IS 'PRESENT LINE MARK,' READ FROM ARCHIV FILE.                                LM00089    
                  NWLNMK IS 'NEW LINE MARK,' GENERATED BY MKLNMK.                                      LM00090    
                                                                                                       LM00091    
                  VECTOR VALUES INF1=9                                                            *520 LM00092    
                  VECTOR VALUES INF2=4                                                            *521 LM00093    
                  DIMENSION PRLNMK(14), NWLNMK(14)                                                *522 LM00094    
                  VECTOR VALUES LMKZ=14                                                           *523 LM00095    
                  DIMENSION FSBUF(432)                                                            *524 LM00096    
                  END OF PROGRAM                                                                  *525 LM00353    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   14745 TRANSFER VECTOR LENGTH  00035 PROGRAM BEGINS    10555
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ADJSW  01002   2        CR     07622 A 1        GOTTM  10214   2        OUT    00757   4        SR03A  00051   4  
      AFZ    01003   1        CT     07623   1        IN00   00051   4        PDATE  10252   1        SR03   00051   4  
      ANAM   00054 A 1        DATE   07624   1        IN01   00051   4        PNTR   10253   1        SRP0A  00771   4  
      AROPSW 01004   2        DELST1 07771 A 1        INF1   10215 A 1        PR01   00051   4        SRP0   00772   4  
      BL     01005 A 1        DELST2 10136 A 1        INF2   10216 A 1        PR02   00051   4        TB01   00773   4  
      BUF1   01666 A 1        DELST  10137   1        I      10217   1        PRLNMK 10272 A 1        TEMP1  10327   1  
      BUF2   02547 A 1        DELSTZ 10140 A 1        JI     10220   1        PRP1   00760   4        TEMP   10330   1  
      BUF3   03430 A 1        DL01   00744   4        JJ     10221   1        PRSSW  10273   2        TFIL   00057 A 1  
      BUF4   04311 A 1        EOFCT  10141   1        J      10222   1        PRTBUF 10322 A 1        TFNF   00774   4  
      BUF5   05172 A 1        EOF    00745   4        KEY    10223   1        PRTZ   10323 A 1        TIME   10331   1  
      BUF6   06053 A 1        EXT    00746   4        LMKZ   10224 A 1        PTIME  10324   1        TM1    00057   1  
      BUF7   06734 A 1        FILFND 10162 A 2        MODEP  10225   1        REMN   10325   1        TM2    00056   1  
      BUFZ   06735 A 1        FILTAB 10203 A 1        MODE   00731   1        REN    00761   4        TMOPSW 10332   2  
      CL01   00741   4        FILTBP 10204   1        NAMO   10226   2        RMNT   10326   1        TOFF   10333 A 2  
      CM01   00742   4        FILTBZ 10205 A 1        NAMTYP 10227   2        RP01   00762   4        TON    10334 A 2  
      CM03A  00051   4        FIRST  10206 A 2        NDEL1  00753   4        RP02   00763   4        TYP    10335   1  
      CM03   00051   4        FN01A  00051   4        NFND   00754   4        RP03   00051   4        UP01   00775   4  
      CMP1A  00051   4        FNF    00747   4        NM1    00054   1        RPD01  00051   4        UP02   00776   4  
      CMP1B  00051   4        FNM    10211 A 1        NM2    00053   1        SPC    00764   4        WCT    10336   1  
      CNM2   06736   1        FNO1B  00051   4        NOTDEL 00755   4        SR00A  00051   4        WHBUF  10347 A 1  
      COPY   00051   4        FORGET 00750   4        NTFND  00756   4        SR00   00051   4        WMRKSW 10350   2  
      COPYSW 06737   2        FRMER  00751   4        NW1    10230   1        SR01A  00765   4        XT01   00777   4  
      CPBUF  07620 A 1        FRSTSW 10212   2        NW2    10231   1        SR01   00766   4        XT02   01000   4  
      CPBUFZ 07621 A 1        FSBUF  00740 A 1        NWLNMK 10250 A 1        SR02A  00767   4        XT03   01001   4  
      CPF01  00051   4        GERR   00752   4        OLDERR 10251   1        SR02   00770   4        YESNO  10351   1  
      CPFEF  00743   4        GOTNXT 10213   2                                                                          
0FUNCTION DICTIONARY    
      BCDEC  00000   1        BFCLOS 00001   1        BFOPEN 00002   1        BFREAD 00003   1        BFWRIT 00004   1  
      BZEL   00005   1        CHFILE 00006   1        CHNCOM 00007   1        COMARG 00010   1        DEFBC  00011   1  
      DELETE 00012   1        DORMNT 00013   1        EXIT   00014   1        FERRTN 00015   1        FSTATE 00016   1  
      GETTM  00017   1        GTDYTM 00020   1        .PCOMT 00021   1        .SETUP 00022   1        OCRBC  00023   1  
      OFFON  00024   1        OFF    00025   1        PRMESA 00026   1        PRMESS 00027   1        PRNTER 00030   1  
      RDFLXC 00031   1        SAVBRK 00032   1        SETBRK 00033   1        WHOAMI 00034   1        BDLNMK 00035   2  
      CLS    00036   2        CNT    00037   1        CPFIL  00040   2        DATTM  00041   1        DELT   00042   2  
      FLN1   00043   1        FLN2   00044   1        GNEXT  00045   1        MKLNMK 00046   2        SEARCH 00047   1  
      YES    00050   2                                                                                                  
0ABSOLUTE CONSTANTS     
 10551 -377000000000     10405 +000740000000     10366 +000000000027     10403 +000037000000     10377 +000000007020    
 10400 +000000007777     10373 +000000000074     10554 -377777000011     10465 -200000610000     10550 -376060776060    
 10402 +000033006060     10520 -206077607777     10371 +000000000060     10376 +000000006060     10525 -210000600000    
 10365 +000000000022     10370 +000000000033     10367 +000000000030     10464 -200000000000     10421 +254325632524    
 10500 -204546636024     10420 +252433606060     10470 -202425432563     10543 -302562606060     10360 +000000000006    
 10406 +146044462425     10417 +246031456014     10415 +235125216325     10463 -175757000000     10375 +000000000134    
 10504 -206060214343     10460 -116031456060     10531 -236025515146     10473 -202646514421     10541 -266060606060    
 10462 -155555555555     10461 -116060606060     10423 +262660606060     10442 -046260626321     10521 -206270626325    
 10444 -054663312670     10424 +265121446060     10446 -056057575757     10451 -066445246031     10501 -204546636026    
 10426 +276444254563     10437 -033124602151     10530 -236021606521     10475 -204040604546     10363 +000000000014    
 10362 +000000000013     10404 +000060575757     10552 -377700000000     10364 +000000000015     10401 +000000777777    
 10553 -377777000000     10502 -204751314563     10510 -206060606047     10432 +377777777777     10537 -244724216325    
 10513 -206060606064     10523 -206346605757     10466 -202124242524     10511 -206060606051     10505 -206060605124    
 10514 -206060606067     10515 -206060606763     10416 +242543256325     10507 -206060606024     10503 -205454546060    
 10452 -066463476463     10522 -206321224325     10425 +276024464525     10443 -054663303145     10372 +000000000061    
 10430 +316260464273     10474 -203162606330     10431 +336060606060     10427 +302560464324     10535 -242425246063    
 10532 -236031452343     10411 +216525604546     10524 -207046646030     10506 -206060606023     10361 +000000000010    
 10536 -242562636060     10454 -072560512550     10546 -336051256370     10441 -044743256325     10533 -236031452346    
 10435 -032162636021     10357 +000000000005     10356 +000000000004     10526 -224664512325     10534 -236260606060    
 10456 -112764442545     10450 -066427306021     10445 -054663602545     10355 +000000000003     10354 +000000000002    
 10516 -206060634645     10512 -206060606063     10517 -206063462626     10352 +000000000000     10457 -113360606060    
 10477 -204325636325     10471 -202631516263     10527 -232524602270     10412 +225125653121     10467 -202225602122    
 10544 -306260442170     10407 +214343604225     10453 -072421632560     10545 -336046516064     10542 -276351212363    
 10455 -112547432123     10436 -032563257360     10447 -056373602425     10422 +257360475131     10547 -336063212243    
 10414 +234644223145     10433 -022570601360     10540 -263025512560     10434 -030260333333     10472 -202643016026    
 10440 -040160454402     10476 -204225706045     10410 +215123303165     10374 +000000000077     10353 +000000000001    
 10413 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00741 TXL -313756013751       00742 TXL -311175011175       00743 TXL -313665013654       00744 TXL -311423011421      
 00745 TXL -313346013342       00746 TXL -312556012554       00747 TXL -312445012443       00750 TXL -311271011265      
 00751 TXL -313361013351       00752 TXL -313373013371       00753 TXL -314033014031       00754 TXL -314040014036      
 00755 TXL -314156014147       00756 TXL -314312014310       00757 TXL -310625010623       00760 TXL -312157012155      
 00761 TXL -312443012440       00762 TXL -311550011546       00763 TXL -311637011635       00764 TXL -312437012436      
 00765 TXL -312633012631       00766 TXL -312740012736       00767 TXL -312645012633       00770 TXL -312744012740      
 00771 TXL -312624012624       00772 TXL -312731012731       00773 TXL -311311011306       00774 TXL -311411011410      
 00775 TXL -312027012025       00776 TXL -312136012134       00777 TXL -311452011450       01000 TXL -311507011505      
 01001 TXL -311513011507                                                                                                
0PROGRAM    
                 W'R COMARG.(1).A.77K.E.77K                                         001  LM00015
 10555 TSX +0 07400 4 00022    10556 TSX +0 07400 4 00010    10557 TXH +3 00000 0 10353    10560 STO +0 60100 0 14741   
 10561 CAL -0 50000 0 14741    10562 ANA -0 32000 0 10374    10563 SLW +0 60200 0 14741    10564 CLA +0 50000 0 14741   
 10565 SUB +0 40200 0 10374    10566 TNZ -0 10000 0 10625                                                               
                      PRMESS.( $ARCHIV KEY NM1 NM2 FL1 FL2 ...$)                    002  LM00016
 10567 TSX +0 07400 4 00027    10570 TXH +3 00000 0 10410    10571 TXH +3 00000 0 10476    10572 TXH +3 00000 0 10440   
 10573 TXH +3 00000 0 10472    10574 TXH +3 00000 0 10434                                                               
                   PRMESS.($WHERE KEY = COMBIN, TABLE, PRINT, DELETE, REPLAC$)      003  LM00017
 10575 TSX +0 07400 4 00027    10576 TXH +3 00000 0 10540    10577 TXH +3 00000 0 10433    10600 TXH +3 00000 0 10414   
 10601 TXH +3 00000 0 10547    10602 TXH +3 00000 0 10422    10603 TXH +3 00000 0 10447    10604 TXH +3 00000 0 10436   
 10605 TXH +3 00000 0 10455                                                                                             
                      PRMESS.($XTRACT, OR UPDATE$)                                  004  LM00018
 10606 TSX +0 07400 4 00027    10607 TXH +3 00000 0 10542    10610 TXH +3 00000 0 10545    10611 TXH +3 00000 0 10453   
                      PRMESS.($ALL KEYS MAY BE ABBREVIATED BY FIRST LETTER.$)       005  LM00019
 10612 TSX +0 07400 4 00027    10613 TXH +3 00000 0 10407    10614 TXH +3 00000 0 10544    10615 TXH +3 00000 0 10467   
 10616 TXH +3 00000 0 10412    10617 TXH +3 00000 0 10527    10620 TXH +3 00000 0 10471    10621 TXH +3 00000 0 10477   
 10622 TXH +3 00000 0 10457                                                                                             
      OUT             CHNCOM.(0)                                                    006  LM00020
 10623 TSX +0 07400 4 00007    10624 TXH +3 00000 0 10352                                                               
                 E'L                                                                007  LM00021
                 KEY=COMARG.(1)                                                     008  LM00022
 10625 TSX +0 07400 4 00010    10626 TXH +3 00000 0 10353    10627 STO +0 60100 0 10223                                 
                 W'R KEY .E. $  TOFF$                                               009  LM00023
 10630 CLA +0 50000 0 10223    10631 SUB +0 40200 0 10517    10632 TNZ -0 10000 0 10637                                 
                   TOFF = 1B                                                        010  LM00024
 10633 CLA +0 50000 0 10353    10634 STO +0 60100 0 10333                                                               
                   BOOLEAN TOFF                                                     011  LM00025
                   V'S TOFF = 0B                                                    012  LM00026
 10333     +0 00000 0 00000                                                                                             
                   KEY = $     T$                                                   013  LM00027
 10635 CLA +0 50000 0 10512    10636 STO +0 60100 0 10223                                                               
                 E'L                                                                014  LM00028
                 W'R KEY .E. $   TON$                                               015  LM00029
 10637 CLA +0 50000 0 10223    10640 SUB +0 40200 0 10516    10641 TNZ -0 10000 0 10646                                 
                    TON = 1B                                                        016  LM00030
 10642 CLA +0 50000 0 10353    10643 STO +0 60100 0 10334                                                               
                    KEY = $     T$                                                  017  LM00031
 10644 CLA +0 50000 0 10512    10645 STO +0 60100 0 10223                                                               
                    BOOLEAN TON                                                     018  LM00032
                     V'S TON = 0B                                                   019  LM00033
 10334     +0 00000 0 00000                                                                                             
                 E'L                                                                020  LM00034
                 NM1=COMARG.(2)                                                     021  LM00035
 10646 TSX +0 07400 4 00010    10647 TXH +3 00000 0 10354    10650 STO +0 60100 0 00054                                 
                 NM2=COMARG.(3)                                                     022  LM00036
 10651 TSX +0 07400 4 00010    10652 TXH +3 00000 0 10355    10653 STO +0 60100 0 00053                                 
                 SETBRK.(OUT)                                                       023  LM00037
 10654 TSX +0 07400 4 00033    10655 TXH +3 00000 0 00757                                                               
                 GETTM.(DATE,TIME)                                                  024  LM00039
 10656 TSX +0 07400 4 00017    10657 TXH +3 00000 0 07624    10660 TXH +3 00000 0 10331                                 
                   D'N ANAM(2)                                                      025  LM00040
                   EQUIVALENCE (NM1,ANAM(0)), (NM2,ANAM(1))                         026  LM00041
                 W'R NM1.A.77K.E.77K .OR. NM2.A.77K.E.77K                           027  LM00042
 10661 CAL -0 50000 0 00053    10662 ANA -0 32000 0 10374    10663 SLW +0 60200 0 14741    10664 CLA +0 50000 0 14741   
 10665 SUB +0 40200 0 10374    10666 TZE +0 10000 0 10675    10667 CAL -0 50000 0 00054    10670 ANA -0 32000 0 10374   
 10671 SLW +0 60200 0 14741    10672 CLA +0 50000 0 14741    10673 SUB +0 40200 0 10374    10674 TNZ -0 10000 0 10704   
                      PRMESS.($NOT ENOUGH ARGUMENTS$)                               028  LM00043
 10675 TSX +0 07400 4 00027    10676 TXH +3 00000 0 10445    10677 TXH +3 00000 0 10450    10700 TXH +3 00000 0 10456   
 10701 TXH +3 00000 0 10534                                                                                             
                      CHNCOM.(0)                                                    029  LM00044
 10702 TSX +0 07400 4 00007    10703 TXH +3 00000 0 10352                                                               
                 E'L                                                                030  LM00045
                 W'R NM2.E.$SOURCE$.OR.NM2.E.$ARCHIV$                               031  LM00050
 10704 CLA +0 50000 0 00053    10705 SUB +0 40200 0 10410    10706 TZE +0 10000 0 10712    10707 CLA +0 50000 0 00053   
 10710 SUB +0 40200 0 10526    10711 TNZ -0 10000 0 11020                                                               
                    NAMTYP=1B                                                       032  LM00051
 10712 CLA +0 50000 0 10353    10713 STO +0 60100 0 10227                                                               
                    T'H IN00, FOR FILTAB=0,2,COMARG.(FILTAB+4).A.77K.E.77K          033  LM00052
                1      .OR.FILTAB.E.FILTBZ                                          033  LM00053
 10714 CLA +0 50000 0 10352    10715 STO +0 60100 0 10203    10716 TRA +0 02000 0 10722    10717 CLA +0 50000 0 10203   
 10720 ADD +0 40000 0 10354    10721 STO +0 60100 0 10203    10722 CLA +0 50000 0 10203    10723 SUB +0 40200 0 10205   
 10724 TZE +0 10000 0 11017    10725 CLA +0 50000 0 10203    10726 ADD +0 40000 0 10356    10727 STO +0 60100 0 14741   
 10730 TSX +0 07400 4 00010    10731 TXH +3 00000 0 14741    10732 STO +0 60100 0 14741    10733 CAL -0 50000 0 14741   
 10734 ANA -0 32000 0 10374    10735 SLW +0 60200 0 14741    10736 CLA +0 50000 0 14741    10737 SUB +0 40200 0 10374   
 10740 TZE +0 10000 0 11017                                                                                             
                    FILTAB(FILTAB+1)=COMARG.(FILTAB+4)                              034  LM00054
 10741 CLA +0 50000 0 10203    10742 ADD +0 40000 0 10356    10743 STO +0 60100 0 14741    10744 TSX +0 07400 4 00010   
 10745 TXH +3 00000 0 14741    10746 STO +0 60100 0 14741    10747 CLA +0 50000 0 10203    10750 ADD +0 40000 0 10353   
 10751 PAX +0 73400 1 00000    10752 CLA +0 50000 0 14741    10753 STO +0 60100 1 10203                                 
                    W'R COMARG.(FILTAB+5).A.77K.E.77K                               035  LM00055
 10754 CLA +0 50000 0 10203    10755 ADD +0 40000 0 10357    10756 STO +0 60100 0 14741    10757 TSX +0 07400 4 00010   
 10760 TXH +3 00000 0 14741    10761 STO +0 60100 0 14741    10762 CAL -0 50000 0 14741    10763 ANA -0 32000 0 10374   
 10764 SLW +0 60200 0 14741    10765 CLA +0 50000 0 14741    10766 SUB +0 40200 0 10374    10767 TNZ -0 10000 0 11003   
                    PRMESS.( $LAST ARGUMENT INCOMPLETE, RETYPE REQUEST$)            036  LM00056
 10770 TSX +0 07400 4 00027    10771 TXH +3 00000 0 10435    10772 TXH +3 00000 0 10456    10773 TXH +3 00000 0 10533   
 10774 TXH +3 00000 0 10441    10775 TXH +3 00000 0 10546    10776 TXH +3 00000 0 10454    10777 TXH +3 00000 0 10536   
                    CHNCOM.(0)                                                      037  LM00057
 11000 TSX +0 07400 4 00007    11001 TXH +3 00000 0 10352                                                               
                    O'E                                                             038  LM00058
 11002 TRA +0 02000 0 11016                                                                                             
                       FILTAB(FILTAB+2)=COMARG.(FILTAB+5)                           039  LM00059
 11003 CLA +0 50000 0 10203    11004 ADD +0 40000 0 10357    11005 STO +0 60100 0 14741    11006 TSX +0 07400 4 00010   
 11007 TXH +3 00000 0 14741    11010 STO +0 60100 0 14741    11011 CLA +0 50000 0 10203    11012 ADD +0 40000 0 10354   
 11013 PAX +0 73400 1 00000    11014 CLA +0 50000 0 14741    11015 STO +0 60100 1 10203                                 
                    E'L                                                             040  LM00060
      IN00          CONTINUE                                                        041  LM00061
 11016 TRA +0 02000 0 10717                                                                                             
                 O'E                                                                042  LM00062
 11017 TRA +0 02000 0 11063                                                                                             
                    NAMTYP=0B                                                       043  LM00063
 11020 CLA +0 50000 0 10352    11021 STO +0 60100 0 10227                                                               
                    T'H IN01, FOR FILTAB=0,1,COMARG.(FILTAB+4).A.77K.E.77K          044  LM00064
                1      .OR. FILTAB.E.FILTBZ                                         044  LM00065
 11022 CLA +0 50000 0 10352    11023 STO +0 60100 0 10203    11024 TRA +0 02000 0 11030    11025 CLA +0 50000 0 10203   
 11026 ADD +0 40000 0 10353    11027 STO +0 60100 0 10203    11030 CLA +0 50000 0 10203    11031 SUB +0 40200 0 10205   
 11032 TZE +0 10000 0 11063    11033 CLA +0 50000 0 10203    11034 ADD +0 40000 0 10356    11035 STO +0 60100 0 14741   
 11036 TSX +0 07400 4 00010    11037 TXH +3 00000 0 14741    11040 STO +0 60100 0 14741    11041 CAL -0 50000 0 14741   
 11042 ANA -0 32000 0 10374    11043 SLW +0 60200 0 14741    11044 CLA +0 50000 0 14741    11045 SUB +0 40200 0 10374   
 11046 TZE +0 10000 0 11063                                                                                             
      IN01       FILTAB(FILTAB+1)=COMARG.(FILTAB+4)                                 045  LM00066
 11047 CLA +0 50000 0 10203    11050 ADD +0 40000 0 10356    11051 STO +0 60100 0 14741    11052 TSX +0 07400 4 00010   
 11053 TXH +3 00000 0 14741    11054 STO +0 60100 0 14741    11055 CLA +0 50000 0 10203    11056 ADD +0 40000 0 10353   
 11057 PAX +0 73400 1 00000    11060 CLA +0 50000 0 14741    11061 STO +0 60100 1 10203    11062 TRA +0 02000 0 11025   
                 E'L                                                                046  LM00067
                 WHOAMI.(WHBUF(8)...8)                                              047  LM00071
 11063 TSX +0 07400 4 00034    11064 TIX +2 10361 0 10337                                                               
                   D'N WHBUF(8)                                                     048  LM00072
                   D'N TFIL(2)                                                      049  LM00073
                 TM1=WHBUF(8)                                                       050  LM00074
 11065 CLA +0 50000 0 10337    11066 STO +0 60100 0 00057                                                               
                 TM2=WHBUF(7)                                                       051  LM00075
 11067 CLA +0 50000 0 10340    11070 STO +0 60100 0 00056                                                               
                   EQUIVALENCE (TM1,TFIL(0)), (TM2,TFIL(1))                         052  LM00076
                 W'R KEY.E.$COMBIN$ .OR. KEY.E.$     C$                             053  LM00080
 11071 CLA +0 50000 0 10223    11072 SUB +0 40200 0 10506    11073 TZE +0 10000 0 11077    11074 CLA +0 50000 0 10223   
 11075 SUB +0 40200 0 10414    11076 TNZ -0 10000 0 11274                                                               
                 FSTATE.(NM1,NM2,FSBUF(8)...8,CM01)                                 054  LM00081
 11077 TSX +0 07400 4 00016    11100 TXH +3 00000 0 00054    11101 TXH +3 00000 0 00053    11102 TIX +2 10361 0 00730   
 11103 TXH +3 00000 0 00742                                                                                             
                 W'R NAMTYP                                                         055  LM00082
 11104 NZT -0 52000 0 10227    11105 TRA +0 02000 0 11135                                                               
                 T'H CMP1A, FOR I=1,2,I.G.FILTAB                                    056  LM00083
 11106 CLA +0 50000 0 10353    11107 STO +0 60100 0 10217    11110 TRA +0 02000 0 11114    11111 CLA +0 50000 0 10217   
 11112 ADD +0 40000 0 10354    11113 STO +0 60100 0 10217    11114 CLA +0 50000 0 10217    11115 SUB +0 40200 0 10203   
 11116 TZE +0 10000 0 11120    11117 TPL +0 12000 0 11134                                                               
      CMP1A      W'R FILTAB(I).E.NM1.AND.FILTAB(I+1).E.NM2, T'O CM01                057  LM00084
 11120 CLA +0 50000 0 10217    11121 ADD +0 40000 0 10353    11122 PAX +0 73400 1 00000    11123 CLA +0 50000 1 10203   
 11124 SUB +0 40200 0 00053    11125 TNZ -0 10000 0 11133    11126 LXA +0 53400 1 10217    11127 CLA +0 50000 1 10203   
 11130 SUB +0 40200 0 00054    11131 TNZ -0 10000 0 11133    11132 TRA +0 02000 0 00742    11133 TRA +0 02000 0 11111   
                 O'E                                                                058  LM00085
 11134 TRA +0 02000 0 11155                                                                                             
                 T'H CMP1B, FOR I = 1,1,I.G.FILTAB                                  059  LM00086
 11135 CLA +0 50000 0 10353    11136 STO +0 60100 0 10217    11137 TRA +0 02000 0 11143    11140 CLA +0 50000 0 10217   
 11141 ADD +0 40000 0 10353    11142 STO +0 60100 0 10217    11143 CLA +0 50000 0 10217    11144 SUB +0 40200 0 10203   
 11145 TZE +0 10000 0 11147    11146 TPL +0 12000 0 11155                                                               
      CMP1B      W'R FILTAB(I).E.NM1, T'O CM01                                      060  LM00087
 11147 LXA +0 53400 1 10217    11150 CLA +0 50000 1 10203    11151 SUB +0 40200 0 00054    11152 TNZ -0 10000 0 11154   
 11153 TRA +0 02000 0 00742    11154 TRA +0 02000 0 11140                                                               
                 E'L                                                                061  LM00088
                 PRMESS.($ YOU HAVE NOT INCLUDED THE OLD$,NM1,NM2,$.$)              062  LM00089
 11155 TSX +0 07400 4 00027    11156 TXH +3 00000 0 10524    11157 TXH +3 00000 0 10411    11160 TXH +3 00000 0 10532   
 11161 TXH +3 00000 0 10535    11162 TXH +3 00000 0 10427    11163 TXH +3 00000 0 00054    11164 TXH +3 00000 0 00053   
 11165 TXH +3 00000 0 10431                                                                                             
                 PRMESA.($ IS THIS OK,$)                                            063  LM00090
 11166 TSX +0 07400 4 00026    11167 TXH +3 00000 0 10474    11170 TXH +3 00000 0 10430                                 
                 W'R .NOT. YES.(0), T'O FORGET                                      064  LM00091
 11171 TSX +0 07400 4 00050    11172 TXH +3 00000 0 10352    11173 TNZ -0 10000 0 11175    11174 TRA +0 02000 0 00750   
      CM01       CONTINUE                                                           065  LM00092
                 W'R NAMTYP                                                         066  LM00093
 11175 NZT -0 52000 0 10227    11176 TRA +0 02000 0 11232                                                               
                 T'H CM03A, FOR FILTBP=1,2,FILTBP.G.FILTAB                          067  LM00094
 11177 CLA +0 50000 0 10353    11200 STO +0 60100 0 10204    11201 TRA +0 02000 0 11205    11202 CLA +0 50000 0 10204   
 11203 ADD +0 40000 0 10354    11204 STO +0 60100 0 10204    11205 CLA +0 50000 0 10204    11206 SUB +0 40200 0 10203   
 11207 TZE +0 10000 0 11211    11210 TPL +0 12000 0 11231                                                               
                 W'R .NOT.CPFIL.(FILTAB(FILTBP),FILTAB(FILTBP+1)),                  068  LM00095
                1   PRNTER.(61K)                                                    068  LM00096
 11211 CLA +0 50000 0 10204    11212 ADD +0 40000 0 10353    11213 SUB +0 40200 0 11214    11214 TXH +3 00000 0 10203   
 11215 STA +0 62100 0 11224    11216 CLA +0 50000 0 10204    11217 SUB +0 40200 0 11220    11220 TXH +3 00000 0 10203   
 11221 STA +0 62100 0 11223    11222 TSX +0 07400 4 00040    11223 TXH +3 00000 0 00000    11224 TXH +3 00000 0 00000   
 11225 TNZ -0 10000 0 11230    11226 TSX +0 07400 4 00030    11227 TXH +3 00000 0 10372                                 
      CM03A      CONTINUE                                                           069  LM00097
 11230 TRA +0 02000 0 11202                                                                                             
                 O'E                                                                070  LM00098
 11231 TRA +0 02000 0 11257                                                                                             
                 T'H CM03, FOR FILTBP=1,1,FILTBP.G.FILTAB                           071  LM00099
 11232 CLA +0 50000 0 10353    11233 STO +0 60100 0 10204    11234 TRA +0 02000 0 11240    11235 CLA +0 50000 0 10204   
 11236 ADD +0 40000 0 10353    11237 STO +0 60100 0 10204    11240 CLA +0 50000 0 10204    11241 SUB +0 40200 0 10203   
 11242 TZE +0 10000 0 11244    11243 TPL +0 12000 0 11257                                                               
                 W'R .NOT. CPFIL.(FILTAB(FILTBP),NM2),                              072  LM00100
                1   PRNTER.(61K)                                                    072  LM00101
 11244 CLA +0 50000 0 10204    11245 SUB +0 40200 0 11246    11246 TXH +3 00000 0 10203    11247 STA +0 62100 0 11251   
 11250 TSX +0 07400 4 00040    11251 TXH +3 00000 0 00000    11252 TXH +3 00000 0 00053    11253 TNZ -0 10000 0 11256   
 11254 TSX +0 07400 4 00030    11255 TXH +3 00000 0 10372                                                               
      CM03       CONTINUE                                                           073  LM00102
 11256 TRA +0 02000 0 11235                                                                                             
                 E'L                                                                074  LM00103
                 W'R TMOPSW, CLS.(NM1,NM2)                                          075  LM00104
 11257 NZT -0 52000 0 10332    11260 TRA +0 02000 0 11264    11261 TSX +0 07400 4 00036    11262 TXH +3 00000 0 00054   
 11263 TXH +3 00000 0 00053                                                                                             
                 T'O EXT                                                            076  LM00105
 11264 TRA +0 02000 0 00746                                                                                             
      FORGET     PRMESS.($NOTHING DONE.$)                                           077  LM00106
 11265 TSX +0 07400 4 00027    11266 TXH +3 00000 0 10443    11267 TXH +3 00000 0 10425    11270 TXH +3 00000 0 10431   
                 CHNCOM.(0)                                                         078  LM00107
 11271 TSX +0 07400 4 00007    11272 TXH +3 00000 0 10352                                                               
                 O'R KEY.E.$ TABLE$ .OR. KEY.E.$     T$                             079  LM00111
 11273 TRA +0 02000 0 12436    11274 CLA +0 50000 0 10223    11275 SUB +0 40200 0 10512    11276 TZE +0 10000 0 11302   
 11277 CLA +0 50000 0 10223    11300 SUB +0 40200 0 10522    11301 TNZ -0 10000 0 11413                                 
                 COPYSW=0B                                                          080  LM00112
 11302 CLA +0 50000 0 10352    11303 STO +0 60100 0 06737                                                               
                 PRSSW=0B                                                           081  LM00113
 11304 CLA +0 50000 0 10352    11305 STO +0 60100 0 10273                                                               
                 V'S BL = 605757575757K                                             082  LM00114
 01005     -2 05757 5 75757                                                                                             
                 V'S CR = 555757575757K                                             083  LM00115
 07622     -1 55757 5 75757                                                                                             
      TB01       W'R FILTAB.E.0                                                     084  LM00116
 11306 CLA +0 50000 0 10203    11307 SUB +0 40200 0 10352    11310 TNZ -0 10000 0 11346                                 
                           GNEXT.(TFNF)                                             085  LM00117
 11311 TSX +0 07400 4 00045    11312 TXH +3 00000 0 00774                                                               
                    W'R FIRST                                                       086  LM00118
 11313 NZT -0 52000 0 10206    11314 TRA +0 02000 0 11345                                                               
                       FIRST = 0B                                                   087  LM00119
 11315 CLA +0 50000 0 10352    11316 STO +0 60100 0 10206                                                               
                       W'R TOFF, OFF.($ARCHIV$,$OUTPUT$)                            088  LM00120
 11317 NZT -0 52000 0 10333    11320 TRA +0 02000 0 11324    11321 TSX +0 07400 4 00025    11322 TXH +3 00000 0 10410   
 11323 TXH +3 00000 0 10452                                                                                             
                       W'R TON, OFFON.($ARCHIV$,$OUTPUT$)                           089  LM00121
 11324 NZT -0 52000 0 10334    11325 TRA +0 02000 0 11331    11326 TSX +0 07400 4 00024    11327 TXH +3 00000 0 10410   
 11330 TXH +3 00000 0 10452                                                                                             
                           PRMESS.                                                  090  LM00122
 11331 TSX +0 07400 4 00027                                                                                             
                       PRMESS.($ ***$,NM1,BL,NM2,BL,BL,DATE,BL,TIME)                091  LM00123
 11332 TSX +0 07400 4 00027    11333 TXH +3 00000 0 10503    11334 TXH +3 00000 0 00054    11335 TXH +3 00000 0 01005   
 11336 TXH +3 00000 0 00053    11337 TXH +3 00000 0 01005    11340 TXH +3 00000 0 01005    11341 TXH +3 00000 0 07624   
 11342 TXH +3 00000 0 01005    11343 TXH +3 00000 0 10331                                                               
                      PRMESS.                                                       092  LM00124
 11344 TSX +0 07400 4 00027                                                                                             
                    E'L                                                             093  LM00125
                 BOOLEAN FIRST                                                      094  LM00126
                 V'S FIRST = 1B                                                     095  LM00127
 10206     +0 00000 0 00001                                                                                             
                 O'E                                                                096  LM00128
 11345 TRA +0 02000 0 11366                                                                                             
                      SEARCH.(TFNF)                                                 097  LM00129
 11346 TSX +0 07400 4 00047    11347 TXH +3 00000 0 00774                                                               
                       W'R FIRST                                                    098  LM00130
 11350 NZT -0 52000 0 10206    11351 TRA +0 02000 0 11366                                                               
                      FIRST = 0B                                                    099  LM00131
 11352 CLA +0 50000 0 10352    11353 STO +0 60100 0 10206                                                               
                           W'R TOFF, OFF.($ARCHIV$,$OUTPUT$)                        100  LM00132
 11354 NZT -0 52000 0 10333    11355 TRA +0 02000 0 11361    11356 TSX +0 07400 4 00025    11357 TXH +3 00000 0 10410   
 11360 TXH +3 00000 0 10452                                                                                             
                           W'R TON, OFFON.($ARCHIV$,$OUTPUT$)                       101  LM00133
 11361 NZT -0 52000 0 10334    11362 TRA +0 02000 0 11366    11363 TSX +0 07400 4 00024    11364 TXH +3 00000 0 10410   
 11365 TXH +3 00000 0 10452                                                                                             
                      E'L                                                           102  LM00134
                 E'L                                                                103  LM00135
                 TEMP = INF2-INF1                                                   104  LM00136
 11366 CLA +0 50000 0 10216    11367 SUB +0 40200 0 10215    11370 STO +0 60100 0 10330                                 
                 PRMESS.(BL,PRLNMK(INF1),BL,PRLNMK(INF1-1)...TEMP)                  105  LM00137
 11371 CLA +0 50000 0 10215    11372 SUB +0 40200 0 10353    11373 SUB +0 40200 0 11374    11374 TXH +3 00000 0 10272   
 11375 STA +0 62100 0 11406    11376 CLA +0 50000 0 10215    11377 SUB +0 40200 0 11400    11400 TXH +3 00000 0 10272   
 11401 STA +0 62100 0 11404    11402 TSX +0 07400 4 00027    11403 TXH +3 00000 0 01005    11404 TXH +3 00000 0 00000   
 11405 TXH +3 00000 0 01005    11406 TIX +2 10330 0 00000                                                               
                 T'O TB01                                                           106  LM00138
 11407 TRA +0 02000 0 00773                                                                                             
      TFNF       PRMESS.                                                            107  LM00140
 11410 TSX +0 07400 4 00027                                                                                             
                 T'O FNF                                                            108  LM00141
 11411 TRA +0 02000 0 00747                                                                                             
                 O'R KEY.E.$DELETE$ .OR. KEY.E.$     D$                             109  LM00145
 11412 TRA +0 02000 0 12436    11413 CLA +0 50000 0 10223    11414 SUB +0 40200 0 10507    11415 TZE +0 10000 0 11421   
 11416 CLA +0 50000 0 10223    11417 SUB +0 40200 0 10416    11420 TNZ -0 10000 0 11437                                 
      DL01       COPYSW=1B                                                          110  LM00146
 11421 CLA +0 50000 0 10353    11422 STO +0 60100 0 06737                                                               
                 PRSSW=1B                                                           111  LM00147
 11423 CLA +0 50000 0 10353    11424 STO +0 60100 0 10273                                                               
                 WMRKSW=1B                                                          112  LM00148
 11425 CLA +0 50000 0 10353    11426 STO +0 60100 0 10350                                                               
                 SEARCH.(REN)                                                       113  LM00149
 11427 TSX +0 07400 4 00047    11430 TXH +3 00000 0 00761                                                               
                 COPYSW=0B                                                          114  LM00150
 11431 CLA +0 50000 0 10352    11432 STO +0 60100 0 06737                                                               
                 GNEXT.(REN)                                                        115  LM00151
 11433 TSX +0 07400 4 00045    11434 TXH +3 00000 0 00761                                                               
                 T'O DL01                                                           116  LM00152
 11435 TRA +0 02000 0 00744                                                                                             
                 O'R KEY.E.$XTRACT$ .OR. KEY.E.$     X$ .OR. KEY.E.$    XT$         117  LM00156
 11436 TRA +0 02000 0 12436    11437 CLA +0 50000 0 10223    11440 SUB +0 40200 0 10515    11441 TZE +0 10000 0 11450   
 11442 CLA +0 50000 0 10223    11443 SUB +0 40200 0 10514    11444 TZE +0 10000 0 11450    11445 CLA +0 50000 0 10223   
 11446 SUB +0 40200 0 10542    11447 TNZ -0 10000 0 11535                                                               
      XT01       COPYSW=0B                                                          118  LM00157
 11450 CLA +0 50000 0 10352    11451 STO +0 60100 0 06737                                                               
                 PRSSW=1B                                                           119  LM00158
 11452 CLA +0 50000 0 10353    11453 STO +0 60100 0 10273                                                               
                 W'R FILTAB.NE.0                                                    120  LM00159
 11454 CLA +0 50000 0 10203    11455 SUB +0 40200 0 10352    11456 TZE +0 10000 0 11462                                 
                      SEARCH.(FNF)                                                  121  LM00160
 11457 TSX +0 07400 4 00047    11460 TXH +3 00000 0 00747                                                               
                 O'E                                                                122  LM00161
 11461 TRA +0 02000 0 11466                                                                                             
                      W'R .NOT. GOTNXT, GNEXT.(FNF)                                 123  LM00162
 11462 ZET +0 52000 0 10213    11463 TRA +0 02000 0 11466    11464 TSX +0 07400 4 00045    11465 TXH +3 00000 0 00747   
                 E'L                                                                124  LM00163
                 NW1=FLN1.(PRLNMK)                                                  125  LM00164
 11466 TSX +0 07400 4 00043    11467 TXH +3 00000 0 10272    11470 STO +0 60100 0 10230                                 
                 NW2=FLN2.(PRLNMK)                                                  126  LM00165
 11471 TSX +0 07400 4 00044    11472 TXH +3 00000 0 10272    11473 STO +0 60100 0 10231                                 
                 COPYSW=1B                                                          127  LM00166
 11474 CLA +0 50000 0 10353    11475 STO +0 60100 0 06737                                                               
                 WMRKSW=0B                                                          128  LM00167
 11476 CLA +0 50000 0 10352    11477 STO +0 60100 0 10350                                                               
                 GNEXT.(XT02)                                                       129  LM00168
 11500 TSX +0 07400 4 00045    11501 TXH +3 00000 0 01000                                                               
                 GOTNXT=1B                                                          130  LM00169
 11502 CLA +0 50000 0 10353    11503 STO +0 60100 0 10213                                                               
                 T'O XT03                                                           131  LM00170
 11504 TRA +0 02000 0 01001                                                                                             
      XT02       NAMO=1B                                                            132  LM00171
 11505 CLA +0 50000 0 10353    11506 STO +0 60100 0 10226                                                               
      XT03       W'R CLS.(NW1,NW2)                                                  133  LM00172
 11507 TSX +0 07400 4 00036    11510 TXH +3 00000 0 10230    11511 TXH +3 00000 0 10231    11512 TZE +0 10000 0 11530   
                      W'R KEY.E.$    XT$, CHFILE.(NW1,NW2,001K,-0,-0)               134  LM00173
 11513 CLA +0 50000 0 10223    11514 SUB +0 40200 0 10515    11515 TNZ -0 10000 0 11530    11516 CLS +0 50200 0 10352   
 11517 STO +0 60100 0 14741    11520 CLS +0 50200 0 10352    11521 STO +0 60100 0 14742    11522 TSX +0 07400 4 00006   
 11523 TXH +3 00000 0 10230    11524 TXH +3 00000 0 10231    11525 TXH +3 00000 0 10353    11526 TXH +3 00000 0 14742   
 11527 TXH +3 00000 0 14741                                                                                             
                 E'L                                                                135  LM00174
                 W'R NAMO,T'O FNF                                                   136  LM00175
 11530 NZT -0 52000 0 10226    11531 TRA +0 02000 0 11533    11532 TRA +0 02000 0 00747                                 
                 T'O XT01                                                           137  LM00176
 11533 TRA +0 02000 0 00777                                                                                             
                 O'R KEY.E.$REPLAC$ .OR. KEY.E.$     R$ .OR. KEY.E.$    RD$         138  LM00180
 11534 TRA +0 02000 0 12436    11535 CLA +0 50000 0 10223    11536 SUB +0 40200 0 10505    11537 TZE +0 10000 0 11546   
 11540 CLA +0 50000 0 10223    11541 SUB +0 40200 0 10511    11542 TZE +0 10000 0 11546    11543 CLA +0 50000 0 10223   
 11544 SUB +0 40200 0 10455    11545 TNZ -0 10000 0 12017                                                               
      RP01       COPYSW=1B                                                          139  LM00181
 11546 CLA +0 50000 0 10353    11547 STO +0 60100 0 06737                                                               
                 PRSSW=1B                                                           140  LM00182
 11550 CLA +0 50000 0 10353    11551 STO +0 60100 0 10273                                                               
                 WMRKSW=1B                                                          141  LM00183
 11552 CLA +0 50000 0 10353    11553 STO +0 60100 0 10350                                                               
                 W'R FILTAB.NE.0                                                    142  LM00184
 11554 CLA +0 50000 0 10203    11555 SUB +0 40200 0 10352    11556 TZE +0 10000 0 11562                                 
                      SEARCH.(RP02)                                                 143  LM00185
 11557 TSX +0 07400 4 00047    11560 TXH +3 00000 0 00763                                                               
                 O'E                                                                144  LM00186
 11561 TRA +0 02000 0 11566                                                                                             
                      W'R .NOT. GOTNXT, GNEXT.(RP02)                                145  LM00187
 11562 ZET +0 52000 0 10213    11563 TRA +0 02000 0 11566    11564 TSX +0 07400 4 00045    11565 TXH +3 00000 0 00763   
                 E'L                                                                146  LM00188
                 GOTNXT=0B                                                          147  LM00189
 11566 CLA +0 50000 0 10352    11567 STO +0 60100 0 10213                                                               
                 W'R .NOT. CPFIL.(FLN1.(PRLNMK),FLN2.(PRLNMK))                      148  LM00190
 11570 TSX +0 07400 4 00044    11571 TXH +3 00000 0 10272    11572 STO +0 60100 0 14742    11573 TSX +0 07400 4 00043   
 11574 TXH +3 00000 0 10272    11575 STO +0 60100 0 14741    11576 TSX +0 07400 4 00040    11577 TXH +3 00000 0 14741   
 11600 TXH +3 00000 0 14742    11601 TNZ -0 10000 0 11607                                                               
                      PRNTER.(61K)                                                  149  LM00191
 11602 TSX +0 07400 4 00030    11603 TXH +3 00000 0 10372                                                               
                      COPYSW=1B                                                     150  LM00192
 11604 CLA +0 50000 0 10353    11605 STO +0 60100 0 06737                                                               
                 O'E                                                                151  LM00193
 11606 TRA +0 02000 0 11630                                                                                             
                 W'R DELST.L.DELSTZ                                                 152  LM00194
 11607 CLA +0 50000 0 10137    11610 SUB +0 40200 0 10140    11611 TZE +0 10000 0 11626    11612 TPL +0 12000 0 11626   
                      DELST=DELST+1                                                 153  LM00195
 11613 CLA +0 50000 0 10137    11614 ADD +0 40000 0 10353    11615 STO +0 60100 0 10137                                 
                      DELST1(DELST)=FLN1.(PRLNMK)                                   154  LM00196
 11616 TSX +0 07400 4 00043    11617 TXH +3 00000 0 10272    11620 LXA +0 53400 1 10137    11621 STO +0 60100 1 07771   
                      DELST2(DELST)=FLN2.(PRLNMK)                                   155  LM00197
 11622 TSX +0 07400 4 00044    11623 TXH +3 00000 0 10272    11624 LXA +0 53400 1 10137    11625 STO +0 60100 1 10136   
                 E'L                                                                156  LM00198
                      COPYSW=0B                                                     157  LM00199
 11626 CLA +0 50000 0 10352    11627 STO +0 60100 0 06737                                                               
                 E'L                                                                158  LM00200
                 GNEXT.(RP02)                                                       159  LM00201
 11630 TSX +0 07400 4 00045    11631 TXH +3 00000 0 00763                                                               
                 GOTNXT=1B                                                          160  LM00202
 11632 CLA +0 50000 0 10353    11633 STO +0 60100 0 10213                                                               
                 T'O RP01                                                           161  LM00203
 11634 TRA +0 02000 0 00762                                                                                             
      RP02       W'R NAMTYP                                                         162  LM00204
 11635 NZT -0 52000 0 10227    11636 TRA +0 02000 0 11642                                                               
                    TYP=1                                                           163  LM00205
 11637 CLA +0 50000 0 10353    11640 STO +0 60100 0 10335                                                               
                 O'E                                                                164  LM00206
 11641 TRA +0 02000 0 11644                                                                                             
                    TYP=0                                                           165  LM00207
 11642 CLA +0 50000 0 10352    11643 STO +0 60100 0 10335                                                               
                 E'L                                                                166  LM00208
                 T'H RP03, FOR JI=1,1,JI+TYP*(JI-1).G.FILTAB                        167  LM00209
 11644 CLA +0 50000 0 10353    11645 STO +0 60100 0 10220    11646 TRA +0 02000 0 11652    11647 CLA +0 50000 0 10220   
 11650 ADD +0 40000 0 10353    11651 STO +0 60100 0 10220    11652 CLA +0 50000 0 10220    11653 SUB +0 40200 0 10353   
 11654 XCA +0 13100 0 00000    11655 MPY +0 20000 0 10335    11656 XCA +0 13100 0 00000    11657 ADD +0 40000 0 10220   
 11660 SUB +0 40200 0 10203    11661 TZE +0 10000 0 11663    11662 TPL +0 12000 0 11760                                 
                 W'R NAMTYP                                                         168  LM00210
 11663 NZT -0 52000 0 10227    11664 TRA +0 02000 0 11700                                                               
                    JJ=2*JI-1                                                       169  LM00211
 11665 LDQ +0 56000 0 10354    11666 MPY +0 20000 0 10220    11667 XCA +0 13100 0 00000    11670 SUB +0 40200 0 10353   
 11671 STO +0 60100 0 10221                                                                                             
                    CNM2=FILTAB(JJ+1)                                               170  LM00212
 11672 CLA +0 50000 0 10221    11673 ADD +0 40000 0 10353    11674 PAX +0 73400 2 00000    11675 CLA +0 50000 2 10203   
 11676 STO +0 60100 0 06736                                                                                             
                 O'E                                                                171  LM00213
 11677 TRA +0 02000 0 11704                                                                                             
                    JJ=JI                                                           172  LM00214
 11700 CLA +0 50000 0 10220    11701 STO +0 60100 0 10221                                                               
                    CNM2=NM2                                                        173  LM00215
 11702 CLA +0 50000 0 00053    11703 STO +0 60100 0 06736                                                               
                 E'L                                                                174  LM00216
                 W'R .NOT. FILFND(JI)                                               175  LM00217
 11704 LXA +0 53400 1 10220    11705 ZET +0 52000 1 10162    11706 TRA +0 02000 0 11757                                 
                 PRMESS.(FILTAB(JJ),BL,CNM2,$ ADDED$,606346605757K,NM1,BL,NM2)      176  LM00218
 11707 CLA +0 50000 0 10221    11710 SUB +0 40200 0 11711    11711 TXH +3 00000 0 10203    11712 STA +0 62100 0 11714   
 11713 TSX +0 07400 4 00027    11714 TXH +3 00000 0 00000    11715 TXH +3 00000 0 01005    11716 TXH +3 00000 0 06736   
 11717 TXH +3 00000 0 10466    11720 TXH +3 00000 0 10523    11721 TXH +3 00000 0 00054    11722 TXH +3 00000 0 01005   
 11723 TXH +3 00000 0 00053                                                                                             
                      W'R .NOT. CPFIL.(FILTAB(JJ),CNM2)                             177  LM00219
 11724 CLA +0 50000 0 10221    11725 SUB +0 40200 0 11726    11726 TXH +3 00000 0 10203    11727 STA +0 62100 0 11731   
 11730 TSX +0 07400 4 00040    11731 TXH +3 00000 0 00000    11732 TXH +3 00000 0 06736    11733 TNZ -0 10000 0 11737   
                           PRNTER.(61K)                                             178  LM00220
 11734 TSX +0 07400 4 00030    11735 TXH +3 00000 0 10372                                                               
                      O'E                                                           179  LM00221
 11736 TRA +0 02000 0 11757                                                                                             
                           FILFND(JI)=1B                                            180  LM00222
 11737 LXA +0 53400 1 10220    11740 CLA +0 50000 0 10353    11741 STO +0 60100 1 10162                                 
                      W'R DELST.L.DELSTZ                                            181  LM00223
 11742 CLA +0 50000 0 10137    11743 SUB +0 40200 0 10140    11744 TZE +0 10000 0 11757    11745 TPL +0 12000 0 11757   
                           DELST=DELST+1                                            182  LM00224
 11746 CLA +0 50000 0 10137    11747 ADD +0 40000 0 10353    11750 STO +0 60100 0 10137                                 
                           DELST1(DELST)=FILTAB(JJ)                                 183  LM00225
 11751 LXA +0 53400 1 10137    11752 LXA +0 53400 2 10221    11753 CLA +0 50000 2 10203    11754 STO +0 60100 1 07771   
                           DELST2(DELST)=CNM2                                       184  LM00226
 11755 CLA +0 50000 0 06736    11756 STO +0 60100 1 10136                                                               
                      E'L                                                           185  LM00227
                      E'L                                                           186  LM00228
      RP03       E'L                                                                187  LM00229
 11757 TRA +0 02000 0 11647                                                                                             
                 W'R CLS.(NM1,NM2)                                                  188  LM00230
 11760 TSX +0 07400 4 00036    11761 TXH +3 00000 0 00054    11762 TXH +3 00000 0 00053    11763 TZE +0 10000 0 12015   
                 W'R KEY.E.$    RD$                                                 189  LM00231
 11764 CLA +0 50000 0 10223    11765 SUB +0 40200 0 10505    11766 TNZ -0 10000 0 12015                                 
                      T'H RPD01, FOR I=1,1,I.G.DELST                                190  LM00232
 11767 CLA +0 50000 0 10353    11770 STO +0 60100 0 10217    11771 TRA +0 02000 0 11775    11772 CLA +0 50000 0 10217   
 11773 ADD +0 40000 0 10353    11774 STO +0 60100 0 10217    11775 CLA +0 50000 0 10217    11776 SUB +0 40200 0 10137   
 11777 TZE +0 10000 0 12001    12000 TPL +0 12000 0 12015                                                               
      RPD01                DELT.(DELST1(I),DELST2(I))                               191  LM00233
 12001 CLA +0 50000 0 10217    12002 SUB +0 40200 0 12003    12003 TXH +3 00000 0 10136    12004 STA +0 62100 0 12013   
 12005 CLA +0 50000 0 10217    12006 SUB +0 40200 0 12007    12007 TXH +3 00000 0 07771    12010 STA +0 62100 0 12012   
 12011 TSX +0 07400 4 00042    12012 TXH +3 00000 0 00000    12013 TXH +3 00000 0 00000    12014 TRA +0 02000 0 11772   
                 E'L                                                                192  LM00234
                 E'L                                                                193  LM00235
                 T'O EXT                                                            194  LM00236
 12015 TRA +0 02000 0 00746                                                                                             
                 BOOLEAN GOTNXT                                                     195  LM00237
                 D'N DELST1(100), DELST2(100)                                       196  LM00238
                 V'S DELSTZ=100                                                     197  LM00239
 10140     +0 00000 0 00144                                                                                             
                 O'R KEY.E.$UPDATE$ .OR. KEY.E.$     U$                             198  LM00243
 12016 TRA +0 02000 0 12436    12017 CLA +0 50000 0 10223    12020 SUB +0 40200 0 10513    12021 TZE +0 10000 0 12025   
 12022 CLA +0 50000 0 10223    12023 SUB +0 40200 0 10537    12024 TNZ -0 10000 0 12144                                 
      UP01       COPYSW=1B                                                          199  LM00244
 12025 CLA +0 50000 0 10353    12026 STO +0 60100 0 06737                                                               
                 PRSSW=1B                                                           200  LM00245
 12027 CLA +0 50000 0 10353    12030 STO +0 60100 0 10273                                                               
                 WMRKSW=1B                                                          201  LM00246
 12031 CLA +0 50000 0 10353    12032 STO +0 60100 0 10350                                                               
                 W'R FILTAB.NE.0                                                    202  LM00247
 12033 CLA +0 50000 0 10203    12034 SUB +0 40200 0 10352    12035 TZE +0 10000 0 12041                                 
                      SEARCH.(REN)                                                  203  LM00248
 12036 TSX +0 07400 4 00047    12037 TXH +3 00000 0 00761                                                               
                 O'E                                                                204  LM00249
 12040 TRA +0 02000 0 12045                                                                                             
                      W'R .NOT. GOTNXT, GNEXT.(REN)                                 205  LM00250
 12041 ZET +0 52000 0 10213    12042 TRA +0 02000 0 12045    12043 TSX +0 07400 4 00045    12044 TXH +3 00000 0 00761   
                 E'L                                                                206  LM00251
                 FSTATE.(FLN1.(PRLNMK),FLN2.(PRLNMK),FSBUF(8)...8,UP02)             207  LM00252
 12045 TSX +0 07400 4 00044    12046 TXH +3 00000 0 10272    12047 STO +0 60100 0 14742    12050 TSX +0 07400 4 00043   
 12051 TXH +3 00000 0 10272    12052 STO +0 60100 0 14741    12053 TSX +0 07400 4 00016    12054 TXH +3 00000 0 14741   
 12055 TXH +3 00000 0 14742    12056 TIX +2 10361 0 00730    12057 TXH +3 00000 0 00776                                 
                 W'R FSBUF(2).A.377777777777K.G.DATTM.(PRLNMK).A.377777777777K      208  LM00253
 12060 TSX +0 07400 4 00041    12061 TXH +3 00000 0 10272    12062 STO +0 60100 0 14742    12063 CAL -0 50000 0 14742   
 12064 ANA -0 32000 0 10432    12065 SLW +0 60200 0 14742    12066 CAL -0 50000 0 00736    12067 ANA -0 32000 0 10432   
 12070 SLW +0 60200 0 14741    12071 CLA +0 50000 0 14741    12072 SUB +0 40200 0 14742    12073 TZE +0 10000 0 12134   
 12074 TMI -0 12000 0 12134                                                                                             
                      TEMP = INF2-INF1                                              209  LM00254
 12075 CLA +0 50000 0 10216    12076 SUB +0 40200 0 10215    12077 STO +0 60100 0 10330                                 
                      PRMESS.(PRLNMK(INF1),BL,PRLNMK(INF1-1)...TEMP)                210  LM00255
 12100 CLA +0 50000 0 10215    12101 SUB +0 40200 0 10353    12102 SUB +0 40200 0 12103    12103 TXH +3 00000 0 10272   
 12104 STA +0 62100 0 12114    12105 CLA +0 50000 0 10215    12106 SUB +0 40200 0 12107    12107 TXH +3 00000 0 10272   
 12110 STA +0 62100 0 12112    12111 TSX +0 07400 4 00027    12112 TXH +3 00000 0 00000    12113 TXH +3 00000 0 01005   
 12114 TIX +2 10330 0 00000                                                                                             
                      COPYSW=0B                                                     211  LM00256
 12115 CLA +0 50000 0 10352    12116 STO +0 60100 0 06737                                                               
                      W'R .NOT. CPFIL.(FLN1.(PRLNMK),FLN2.(PRLNMK)), COPYSW=1B      212  LM00257
 12117 TSX +0 07400 4 00044    12120 TXH +3 00000 0 10272    12121 STO +0 60100 0 14742    12122 TSX +0 07400 4 00043   
 12123 TXH +3 00000 0 10272    12124 STO +0 60100 0 14741    12125 TSX +0 07400 4 00040    12126 TXH +3 00000 0 14741   
 12127 TXH +3 00000 0 14742    12130 TNZ -0 10000 0 12133    12131 CLA +0 50000 0 10353    12132 STO +0 60100 0 06737   
                 O'E                                                                213  LM00258
 12133 TRA +0 02000 0 12136                                                                                             
      UP02            COPYSW=1B                                                     214  LM00259
 12134 CLA +0 50000 0 10353    12135 STO +0 60100 0 06737                                                               
                 E'L                                                                215  LM00260
                 GNEXT.(REN)                                                        216  LM00261
 12136 TSX +0 07400 4 00045    12137 TXH +3 00000 0 00761                                                               
                 GOTNXT=1B                                                          217  LM00262
 12140 CLA +0 50000 0 10353    12141 STO +0 60100 0 10213                                                               
                 T'O UP01                                                           218  LM00263
 12142 TRA +0 02000 0 00775                                                                                             
                 O'R KEY .E.$ PRINT$ .OR. KEY.E.$     P$                            219  LM00267
 12143 TRA +0 02000 0 12436    12144 CLA +0 50000 0 10223    12145 SUB +0 40200 0 10510    12146 TZE +0 10000 0 12152   
 12147 CLA +0 50000 0 10223    12150 SUB +0 40200 0 10502    12151 TNZ -0 10000 0 12425                                 
                 SAVBRK.                                                            220  LM00268
 12152 TSX +0 07400 4 00032                                                                                             
                 SETBRK.(EXT)                                                       221  LM00269
 12153 TSX +0 07400 4 00033    12154 TXH +3 00000 0 00746                                                               
      PRP1       COPYSW=0B                                                          222  LM00270
 12155 CLA +0 50000 0 10352    12156 STO +0 60100 0 06737                                                               
                 PRSSW=0B                                                           223  LM00271
 12157 CLA +0 50000 0 10352    12160 STO +0 60100 0 10273                                                               
                 W'R FILTAB.NE.0                                                    224  LM00272
 12161 CLA +0 50000 0 10203    12162 SUB +0 40200 0 10352    12163 TZE +0 10000 0 12167                                 
                      SEARCH.(SPC)                                                  225  LM00273
 12164 TSX +0 07400 4 00047    12165 TXH +3 00000 0 00764                                                               
                 O'E                                                                226  LM00274
 12166 TRA +0 02000 0 12171                                                                                             
                      GNEXT.(SPC)                                                   227  LM00275
 12167 TSX +0 07400 4 00045    12170 TXH +3 00000 0 00764                                                               
                 E'L                                                                228  LM00276
                 PRMESS.                                                            229  LM00277
 12171 TSX +0 07400 4 00027                                                                                             
                 TEMP = INF2-INF1 - 1                                               230  LM00278
 12172 CLA +0 50000 0 10216    12173 SUB +0 40200 0 10215    12174 SUB +0 40200 0 10353    12175 STO +0 60100 0 10330   
                 PRMESS.(PRLNMK(INF1)...TEMP)                                       231  LM00279
 12176 CLA +0 50000 0 10215    12177 SUB +0 40200 0 12200    12200 TXH +3 00000 0 10272    12201 STA +0 62100 0 12203   
 12202 TSX +0 07400 4 00027    12203 TIX +2 10330 0 00000                                                               
                 PRMESS.                                                            232  LM00280
 12204 TSX +0 07400 4 00027                                                                                             
                 CT=CNT.(PRLNMK)                                                    233  LM00281
 12205 TSX +0 07400 4 00037    12206 TXH +3 00000 0 10272    12207 STO +0 60100 0 07623                                 
                 T'H PR02, FOR I=0,0,I.GE.CT                                        234  LM00282
 12210 CLA +0 50000 0 10352    12211 STO +0 60100 0 10217    12212 TRA +0 02000 0 12216    12213 CLA +0 50000 0 10217   
 12214 ADD +0 40000 0 10352    12215 STO +0 60100 0 10217    12216 CLA +0 50000 0 10217    12217 SUB +0 40200 0 07623   
 12220 TZE +0 10000 0 12421    12221 TPL +0 12000 0 12421                                                               
                      BFREAD.(NM1,NM2,PRTBUF(PRTZ)...1,                             235  LM00283
                1       FRMER,EOFCT,GERR)                                           235  LM00284
 12222 CLA +0 50000 0 10323    12223 SUB +0 40200 0 12224    12224 TXH +3 00000 0 10322    12225 STA +0 62100 0 12231   
 12226 TSX +0 07400 4 00003    12227 TXH +3 00000 0 00054    12230 TXH +3 00000 0 00053    12231 TIX +2 10353 0 00000   
 12232 TXH +3 00000 0 00751    12233 TXH +3 00000 0 10141    12234 TXH +3 00000 0 00752                                 
                      I=I+1                                                         236  LM00285
 12235 CLA +0 50000 0 10217    12236 ADD +0 40000 0 10353    12237 STO +0 60100 0 10217                                 
                      W'R PRTBUF(PRTZ).A.777777K6 .E. 777777K6                      237  LM00286
 12240 LXA +0 53400 1 10323    12241 CAL -0 50000 1 10322    12242 ANA -0 32000 0 10553    12243 SLW +0 60200 0 14742   
 12244 CLA +0 50000 0 14742    12245 SUB +0 40200 0 10553    12246 TNZ -0 10000 0 12353                                 
                           WCT=PRTBUF(PRTZ).A.777777K                               238  LM00287
 12247 CAL -0 50000 1 10322    12250 ANA -0 32000 0 10401    12251 SLW +0 60200 0 10336                                 
                           W'R WCT.E.0,PRMESS.                                      239  LM00288
 12252 CLA +0 50000 0 10336    12253 SUB +0 40200 0 10352    12254 TNZ -0 10000 0 12256    12255 TSX +0 07400 4 00027   
                           T'H PR01, FOR J=PRTZ,PRTZ,J.G.WCT                        240  LM00289
 12256 CLA +0 50000 0 10323    12257 STO +0 60100 0 10222    12260 TRA +0 02000 0 12264    12261 CLA +0 50000 0 10222   
 12262 ADD +0 40000 0 10323    12263 STO +0 60100 0 10222    12264 CLA +0 50000 0 10222    12265 SUB +0 40200 0 10336   
 12266 TZE +0 10000 0 12270    12267 TPL +0 12000 0 12314                                                               
                             BFREAD.(NM1,NM2,PRTBUF(PRTZ)...PRTZ,                   241  LM00290
                1              FRMER,EOFCT,GERR)                                    241  LM00291
 12270 CLA +0 50000 0 10323    12271 SUB +0 40200 0 12272    12272 TXH +3 00000 0 10322    12273 STA +0 62100 0 12277   
 12274 TSX +0 07400 4 00003    12275 TXH +3 00000 0 00054    12276 TXH +3 00000 0 00053    12277 TIX +2 10323 0 00000   
 12300 TXH +3 00000 0 00751    12301 TXH +3 00000 0 10141    12302 TXH +3 00000 0 00752                                 
                 TEMP = -PRTZ                                                       242  LM00292
 12303 CLS +0 50200 0 10323    12304 STO +0 60100 0 10330                                                               
      PR01                 PRMESS.(PRTBUF(PRTZ)...TEMP)                             243  LM00293
 12305 CLA +0 50000 0 10323    12306 SUB +0 40200 0 12307    12307 TXH +3 00000 0 10322    12310 STA +0 62100 0 12312   
 12311 TSX +0 07400 4 00027    12312 TIX +2 10330 0 00000    12313 TRA +0 02000 0 12261                                 
                           RMNT=PRTZ-(J-WCT)                                        244  LM00294
 12314 CLA +0 50000 0 10222    12315 SUB +0 40200 0 10336    12316 CHS +0 76000 0 00002    12317 ADD +0 40000 0 10323   
 12320 STO +0 60100 0 10326                                                                                             
                           W'R RMNT.NE.0                                            245  LM00295
 12321 CLA +0 50000 0 10326    12322 SUB +0 40200 0 10352    12323 TZE +0 10000 0 12347                                 
                             BFREAD.(NM1,NM2,PRTBUF(RMNT)...RMNT,                   246  LM00296
                1              FRMER,EOFCT,GERR)                                    246  LM00297
 12324 CLA +0 50000 0 10326    12325 SUB +0 40200 0 12326    12326 TXH +3 00000 0 10322    12327 STA +0 62100 0 12333   
 12330 TSX +0 07400 4 00003    12331 TXH +3 00000 0 00054    12332 TXH +3 00000 0 00053    12333 TIX +2 10326 0 00000   
 12334 TXH +3 00000 0 00751    12335 TXH +3 00000 0 10141    12336 TXH +3 00000 0 00752                                 
                           TEMP = -RMNT                                             247  LM00298
 12337 CLS +0 50200 0 10326    12340 STO +0 60100 0 10330                                                               
                           PRMESS.(PRTBUF(RMNT)...TEMP)                             248  LM00299
 12341 CLA +0 50000 0 10326    12342 SUB +0 40200 0 12343    12343 TXH +3 00000 0 10322    12344 STA +0 62100 0 12346   
 12345 TSX +0 07400 4 00027    12346 TIX +2 10330 0 00000                                                               
                           E'L                                                      249  LM00300
                           I=I+WCT                                                  250  LM00301
 12347 CLA +0 50000 0 10217    12350 ADD +0 40000 0 10336    12351 STO +0 60100 0 10217                                 
                      O'E                                                           251  LM00302
 12352 TRA +0 02000 0 12420                                                                                             
                           BFREAD.(NM1,NM2,PRTBUF(PRTZ-1)...13,                     252  LM00303
                1            FRMER,EOFCT,GERR)                                      252  LM00304
 12353 CLA +0 50000 0 10323    12354 SUB +0 40200 0 10353    12355 SUB +0 40200 0 12356    12356 TXH +3 00000 0 10322   
 12357 STA +0 62100 0 12363    12360 TSX +0 07400 4 00003    12361 TXH +3 00000 0 00054    12362 TXH +3 00000 0 00053   
 12363 TIX +2 10364 0 00000    12364 TXH +3 00000 0 00751    12365 TXH +3 00000 0 10141    12366 TXH +3 00000 0 00752   
                      I=I+13                                                        253  LM00305
 12367 CLA +0 50000 0 10217    12370 ADD +0 40000 0 10364    12371 STO +0 60100 0 10217                                 
                 TEMP1 = (PRTBUF(PRTZ-13).A.7777K8).V.60575757K                     254  LM00306
 12372 CLA +0 50000 0 10323    12373 SUB +0 40200 0 10364    12374 PAX +0 73400 1 00000    12375 CAL -0 50000 1 10322   
 12376 ANA -0 32000 0 10552    12377 ORA -0 50100 0 10404    12400 SLW +0 60200 0 10327                                 
                 TEMP = -11                                                         255  LM00307
 12401 CLS +0 50200 0 10362    12402 STO +0 60100 0 10330                                                               
                 PRMESS.(PRTBUF(PRTZ-12),TEMP1,PRTBUF(PRTZ)...TEMP)                 256  LM00308
 12403 CLA +0 50000 0 10323    12404 SUB +0 40200 0 12405    12405 TXH +3 00000 0 10322    12406 STA +0 62100 0 12417   
 12407 CLA +0 50000 0 10323    12410 SUB +0 40200 0 10363    12411 SUB +0 40200 0 12412    12412 TXH +3 00000 0 10322   
 12413 STA +0 62100 0 12415    12414 TSX +0 07400 4 00027    12415 TXH +3 00000 0 00000    12416 TXH +3 00000 0 10327   
 12417 TIX +2 10330 0 00000                                                                                             
      PR02            E'L                                                           257  LM00309
 12420 TRA +0 02000 0 12213                                                                                             
                      ADJSW=1B                                                      258  LM00310
 12421 CLA +0 50000 0 10353    12422 STO +0 60100 0 01002                                                               
                      T'O PRP1                                                      259  LM00311
 12423 TRA +0 02000 0 00760                                                                                             
                 D'N PRTBUF(22)                                                     260  LM00312
                   V'S PRTZ=22                                                      261  LM00313
 10323     +0 00000 0 00026                                                                                             
                 O'E                                                                262  LM00317
 12424 TRA +0 02000 0 12436                                                                                             
                 PRMESS.(KEY,$ -- NOT A VALID ARGUMENT.$)                           263  LM00318
 12425 TSX +0 07400 4 00027    12426 TXH +3 00000 0 10223    12427 TXH +3 00000 0 10475    12430 TXH +3 00000 0 10530   
 12431 TXH +3 00000 0 10437    12432 TXH +3 00000 0 10426    12433 TXH +3 00000 0 10431                                 
                 CHNCOM.(0)                                                         264  LM00319
 12434 TSX +0 07400 4 00007    12435 TXH +3 00000 0 10352                                                               
                 E'L                                                                265  LM00320
      SPC        PRMESS.                                                            266  LM00324
 12436 TSX +0 07400 4 00027                                                                                             
                 T'O FNF                                                            267  LM00325
 12437 TRA +0 02000 0 00747                                                                                             
      REN        CLS.(NM1,NM2)                                                      268  LM00326
 12440 TSX +0 07400 4 00036    12441 TXH +3 00000 0 00054    12442 TXH +3 00000 0 00053                                 
      FNF        W'R NAMTYP                                                         269  LM00327
 12443 NZT -0 52000 0 10227    12444 TRA +0 02000 0 12520                                                               
                    T'H FN01A, FOR I = 1,1,I.G.FILTAB/2                             270  LM00328
 12445 CLA +0 50000 0 10353    12446 STO +0 60100 0 10217    12447 TRA +0 02000 0 12453    12450 CLA +0 50000 0 10217   
 12451 ADD +0 40000 0 10353    12452 STO +0 60100 0 10217    12453 LDQ +0 56000 0 10203    12454 PXD -0 75400 0 00000   
 12455 LLS +0 76300 0 00000    12456 DVP +0 22100 0 10354    12457 XCA +0 13100 0 00000    12460 CHS +0 76000 0 00002   
 12461 ADD +0 40000 0 10217    12462 TZE +0 10000 0 12464    12463 TPL +0 12000 0 12517                                 
                    W'R .NOT.FILFND(I)                                              271  LM00329
 12464 LXA +0 53400 1 10217    12465 ZET +0 52000 1 10162    12466 TRA +0 02000 0 12516                                 
                 PRMESS.(FILTAB(2*I-1),BL,FILTAB(2*I),$ NOT FOUND I$,               272  LM00330
                1 456057575757K,NM1,BL,NM2)                                         272  LM00331
 12467 LDQ +0 56000 0 10354    12470 MPY +0 20000 0 10217    12471 XCA +0 13100 0 00000    12472 SUB +0 40200 0 12473   
 12473 TXH +3 00000 0 10203    12474 STA +0 62100 0 12507    12475 LDQ +0 56000 0 10354    12476 MPY +0 20000 0 10217   
 12477 XCA +0 13100 0 00000    12500 SUB +0 40200 0 10353    12501 SUB +0 40200 0 12502    12502 TXH +3 00000 0 10203   
 12503 STA +0 62100 0 12505    12504 TSX +0 07400 4 00027    12505 TXH +3 00000 0 00000    12506 TXH +3 00000 0 01005   
 12507 TXH +3 00000 0 00000    12510 TXH +3 00000 0 10501    12511 TXH +3 00000 0 10451    12512 TXH +3 00000 0 10446   
 12513 TXH +3 00000 0 00054    12514 TXH +3 00000 0 01005    12515 TXH +3 00000 0 00053                                 
      FN01A         E'L                                                             273  LM00332
 12516 TRA +0 02000 0 12450                                                                                             
                 O'E                                                                274  LM00333
 12517 TRA +0 02000 0 12554                                                                                             
                    T'H FNO1B, FOR I=1,1,I.G.FILTAB                                 275  LM00334
 12520 CLA +0 50000 0 10353    12521 STO +0 60100 0 10217    12522 TRA +0 02000 0 12526    12523 CLA +0 50000 0 10217   
 12524 ADD +0 40000 0 10353    12525 STO +0 60100 0 10217    12526 CLA +0 50000 0 10217    12527 SUB +0 40200 0 10203   
 12530 TZE +0 10000 0 12532    12531 TPL +0 12000 0 12554                                                               
                    W'R .NOT.FILFND(I)                                              276  LM00335
 12532 LXA +0 53400 1 10217    12533 ZET +0 52000 1 10162    12534 TRA +0 02000 0 12553                                 
                      PRMESS.(FILTAB(I),BL,NM2,$ NOT FOUND I$,456057575757K,        277  LM00336
                1  NM1,BL,NM2)                                                      277  LM00337
 12535 CLA +0 50000 0 10217    12536 SUB +0 40200 0 12537    12537 TXH +3 00000 0 10203    12540 STA +0 62100 0 12542   
 12541 TSX +0 07400 4 00027    12542 TXH +3 00000 0 00000    12543 TXH +3 00000 0 01005    12544 TXH +3 00000 0 00053   
 12545 TXH +3 00000 0 10501    12546 TXH +3 00000 0 10451    12547 TXH +3 00000 0 10446    12550 TXH +3 00000 0 00054   
 12551 TXH +3 00000 0 01005    12552 TXH +3 00000 0 00053                                                               
      FNO1B         E'L                                                             278  LM00338
 12553 TRA +0 02000 0 12523                                                                                             
                 E'L                                                                279  LM00339
      EXT        CHNCOM.(0)                                                         280  LM00340
 12554 TSX +0 07400 4 00007    12555 TXH +3 00000 0 10352                                                               
                 PRMESS.($FRAM$)                                                    281  LM00341
 12556 TSX +0 07400 4 00027    12557 TXH +3 00000 0 10424                                                               
                 PRMESS.($NOTIFY SYSTEMS STAFF$)                                    282  LM00342
 12560 TSX +0 07400 4 00027    12561 TXH +3 00000 0 10444    12562 TXH +3 00000 0 10521    12563 TXH +3 00000 0 10442   
 12564 TXH +3 00000 0 10423                                                                                             
                 DORMNT.                                                            283  LM00343
 12565 TSX +0 07400 4 00013                                                                                             
                 INSERT FILE ASUBS                                                  284  LM00351
                 INTERNAL FUNCTION (EOFXT)                                          285  LM00008
 12566 TRA +0 02000 0 13015                                                                                             
                 STATEMENT LABEL EOFXT                                              286  LM00009
                 E'O SEARCH.                                                        287  LM00010
 12567 TRA +0 02000 0 12572    00047 TTR +0 02100 0 12570    12570 SXA +0 63400 2 12777    12571 TSX +0 07400 2 12777   
                 W'R NAMTYP                                                         288  LM00011
 12572 NZT -0 52000 0 10227    12573 TRA +0 02000 0 12701                                                               
                    W'R .NOT. COPYSW                                                289  LM00012
 12574 ZET +0 52000 0 06737    12575 TRA +0 02000 0 12624                                                               
                    T'H SR00A, FOR I=1,1,I.G.FILTAB                                 290  LM00013
 12576 CLA +0 50000 0 10353    12577 STO +0 60100 0 10217    12600 TRA +0 02000 0 12604    12601 CLA +0 50000 0 10217   
 12602 ADD +0 40000 0 10353    12603 STO +0 60100 0 10217    12604 CLA +0 50000 0 10217    12605 SUB +0 40200 0 10203   
 12606 TZE +0 10000 0 12610    12607 TPL +0 12000 0 12615                                                               
      SR00A      W'R .NOT. FILFND(I), T'O SRP0A                                     291  LM00014
 12610 LXA +0 53400 1 10217    12611 ZET +0 52000 1 10162    12612 TRA +0 02000 0 12614    12613 TRA +0 02000 0 00771   
 12614 TRA +0 02000 0 12601                                                                                             
                    BFCLOS.(NM1,NM2,GERR)                                           292  LM00015
 12615 TSX +0 07400 4 00001    12616 TXH +3 00000 0 00054    12617 TXH +3 00000 0 00053    12620 TXH +3 00000 0 00752   
                    AROPSW=0B                                                       293  LM00016
 12621 CLA +0 50000 0 10352    12622 STO +0 60100 0 01004                                                               
                    T'O EOFXT                                                       294  LM00017
 12623 TRA +0 02000 0 00024                                                                                             
                 E'L                                                                295  LM00018
      SRP0A      CONTINUE                                                           296  LM00019
                 W'R PRSSW.AND.AROPSW, T'O SR02A                                    297  LM00020
 12624 NZT -0 52000 0 01004    12625 TRA +0 02000 0 12631    12626 NZT -0 52000 0 10273    12627 TRA +0 02000 0 12631   
 12630 TRA +0 02000 0 00767                                                                                             
      SR01A      GNEXT.(EOFXT)                                                      298  LM00021
 12631 TSX +0 07400 4 00045    12632 TXH +3 00000 0 00024                                                               
      SR02A      T'H SR03A, FOR FILTBP=1,2,FILTBP.G.FILTAB                          299  LM00022
 12633 CLA +0 50000 0 10353    12634 STO +0 60100 0 10204    12635 TRA +0 02000 0 12641    12636 CLA +0 50000 0 10204   
 12637 ADD +0 40000 0 10354    12640 STO +0 60100 0 10204    12641 CLA +0 50000 0 10204    12642 SUB +0 40200 0 10203   
 12643 TZE +0 10000 0 12645    12644 TPL +0 12000 0 12677                                                               
                 PNTR=(FILTBP+1)/2                                                  300  LM00023
 12645 CLA +0 50000 0 10204    12646 ADD +0 40000 0 10353    12647 LRS +0 76500 0 00043    12650 DVP +0 22100 0 10354   
 12651 STQ -0 60000 0 10253                                                                                             
                 W'R FLN1.(PRLNMK).E.FILTAB(FILTBP)                                 301  LM00024
                1   .AND.FLN2.(PRLNMK).E.FILTAB(FILTBP+1)                           301  LM00025
                2   .AND..NOT.FILFND(PNTR)                                          301  LM00026
 12652 LXA +0 53400 1 10253    12653 ZET +0 52000 1 10162    12654 TRA +0 02000 0 12676    12655 CLA +0 50000 0 10204   
 12656 ADD +0 40000 0 10353    12657 STO +0 60100 0 13014    12660 TSX +0 07400 4 00044    12661 TXH +3 00000 0 10272   
 12662 LXA +0 53400 2 13014    12663 SUB +0 40200 2 10203    12664 TNZ -0 10000 0 12676    12665 TSX +0 07400 4 00043   
 12666 TXH +3 00000 0 10272    12667 LXA +0 53400 2 10204    12670 SUB +0 40200 2 10203    12671 TNZ -0 10000 0 12676   
                 FILFND(PNTR)=1B                                                    302  LM00027
 12672 LXA +0 53400 1 10253    12673 CLA +0 50000 0 10353    12674 STO +0 60100 1 10162                                 
                 F'N                                                                303  LM00028
 12675 TRA +0 02000 0 13010                                                                                             
      SR03A      E'L                                                                304  LM00029
 12676 TRA +0 02000 0 12636                                                                                             
                 T'O SR01A                                                          305  LM00030
 12677 TRA +0 02000 0 00765                                                                                             
                 O'E                                                                306  LM00031
 12700 TRA +0 02000 0 12776                                                                                             
                 W'R .NOT.COPYSW                                                    307  LM00032
 12701 ZET +0 52000 0 06737    12702 TRA +0 02000 0 12731                                                               
                    T'H SR00, FOR I=1,1,I.G.FILTAB                                  308  LM00033
 12703 CLA +0 50000 0 10353    12704 STO +0 60100 0 10217    12705 TRA +0 02000 0 12711    12706 CLA +0 50000 0 10217   
 12707 ADD +0 40000 0 10353    12710 STO +0 60100 0 10217    12711 CLA +0 50000 0 10217    12712 SUB +0 40200 0 10203   
 12713 TZE +0 10000 0 12715    12714 TPL +0 12000 0 12722                                                               
      SR00          W'R .NOT.FILFND(I), T'O SRP0                                    309  LM00034
 12715 LXA +0 53400 1 10217    12716 ZET +0 52000 1 10162    12717 TRA +0 02000 0 12721    12720 TRA +0 02000 0 00772   
 12721 TRA +0 02000 0 12706                                                                                             
                    BFCLOS.(NM1,NM2,GERR)                                           310  LM00035
 12722 TSX +0 07400 4 00001    12723 TXH +3 00000 0 00054    12724 TXH +3 00000 0 00053    12725 TXH +3 00000 0 00752   
                    AROPSW=0B                                                       311  LM00036
 12726 CLA +0 50000 0 10352    12727 STO +0 60100 0 01004                                                               
                    T'O EOFXT                                                       312  LM00037
 12730 TRA +0 02000 0 00024                                                                                             
                 E'L                                                                313  LM00038
      SRP0       CONTINUE                                                           314  LM00039
                 W'R PRSSW.AND.AROPSW, T'O SR02                                     315  LM00040
 12731 NZT -0 52000 0 01004    12732 TRA +0 02000 0 12736    12733 NZT -0 52000 0 10273    12734 TRA +0 02000 0 12736   
 12735 TRA +0 02000 0 00770                                                                                             
      SR01       GNEXT.(EOFXT)                                                      316  LM00041
 12736 TSX +0 07400 4 00045    12737 TXH +3 00000 0 00024                                                               
      SR02       W'R FLN2.(PRLNMK).NE.NM2                                           317  LM00042
 12740 TSX +0 07400 4 00044    12741 TXH +3 00000 0 10272    12742 SUB +0 40200 0 00053    12743 TZE +0 10000 0 12746   
                    T'O SR01                                                        318  LM00043
 12744 TRA +0 02000 0 00766                                                                                             
                 O'E                                                                319  LM00044
 12745 TRA +0 02000 0 12776                                                                                             
                    T'H SR03, FOR FILTBP=1,1,FILTBP.G.FILTAB                        320  LM00045
 12746 CLA +0 50000 0 10353    12747 STO +0 60100 0 10204    12750 TRA +0 02000 0 12754    12751 CLA +0 50000 0 10204   
 12752 ADD +0 40000 0 10353    12753 STO +0 60100 0 10204    12754 CLA +0 50000 0 10204    12755 SUB +0 40200 0 10203   
 12756 TZE +0 10000 0 12760    12757 TPL +0 12000 0 12775                                                               
                 W'R FLN1.(PRLNMK).E.FILTAB(FILTBP)                                 321  LM00046
                1   .AND..NOT.FILFND(FILTBP)                                        321  LM00047
 12760 LXA +0 53400 1 10204    12761 ZET +0 52000 1 10162    12762 TRA +0 02000 0 12774    12763 TSX +0 07400 4 00043   
 12764 TXH +3 00000 0 10272    12765 LXA +0 53400 2 10204    12766 SUB +0 40200 2 10203    12767 TNZ -0 10000 0 12774   
                       FILFND(FILTBP)=1B                                            322  LM00048
 12770 LXA +0 53400 1 10204    12771 CLA +0 50000 0 10353    12772 STO +0 60100 1 10162                                 
                       FUNCTION RETURN                                              323  LM00049
 12773 TRA +0 02000 0 13010                                                                                             
      SR03          E'L                                                             324  LM00050
 12774 TRA +0 02000 0 12751                                                                                             
                 T'O SR01                                                           325  LM00051
 12775 TRA +0 02000 0 00766                                                                                             
                 E'L                                                                326  LM00052
                 E'L                                                                327  LM00053
                 END OF FUNCTION                                                    328  LM00054
 12776 TSX +0 07400 4 00014    12777 TXH +3 00000 0 00000    13000 SXD -0 63400 1 12777    13001 SXA +0 63400 4 13010   
 13002 CLA +0 50000 4 00001    13003 STA +0 62100 0 12623    13004 STO +0 60100 0 12632    13005 STA +0 62100 0 12730   
 13006 STO +0 60100 0 12737    13007 TRA +0 02000 2 00001    13010 AXT +0 77400 4 00000    13011 LXA +0 53400 2 12777   
 13012 LXD -0 53400 1 12777    13013 TRA +0 02000 4 00001                                                               
                 INTERNAL FUNCTION (EOFXT)                                          329  LM00061
 13015 TRA +0 02000 0 13411                                                                                             
                 STATEMENT LABEL EOFXT                                              330  LM00062
                 E'O GNEXT.                                                         331  LM00063
 13016 TRA +0 02000 0 13021    00045 TTR +0 02100 0 13017    13017 SXA +0 63400 2 13376    13020 TSX +0 07400 2 13376   
                 W'R .NOT. AROPSW                                                   332  LM00064
 13021 ZET +0 52000 0 01004    13022 TRA +0 02000 0 13140                                                               
                      BFOPEN.($R$,NM1,NM2,BUF1(BUFZ),BUF2(BUFZ),-0,GERR)            333  LM00065
 13023 CLS +0 50200 0 10352    13024 STO +0 60100 0 13410    13025 CLA +0 50000 0 06735    13026 SUB +0 40200 0 13027   
 13027 TXH +3 00000 0 02547    13030 STA +0 62100 0 13042    13031 CLA +0 50000 0 06735    13032 SUB +0 40200 0 13033   
 13033 TXH +3 00000 0 01666    13034 STA +0 62100 0 13041    13035 TSX +0 07400 4 00002    13036 TXH +3 00000 0 10461   
 13037 TXH +3 00000 0 00054    13040 TXH +3 00000 0 00053    13041 TXH +3 00000 0 00000    13042 TXH +3 00000 0 00000   
 13043 TXH +3 00000 0 13410    13044 TXH +3 00000 0 00752                                                               
                      BFREAD.(NM1,NM2,PRLNMK(LMKZ)...LMKZ,FRMER,EOFCT,GERR)         334  LM00066
 13045 CLA +0 50000 0 10224    13046 SUB +0 40200 0 13047    13047 TXH +3 00000 0 10272    13050 STA +0 62100 0 13054   
 13051 TSX +0 07400 4 00003    13052 TXH +3 00000 0 00054    13053 TXH +3 00000 0 00053    13054 TIX +2 10224 0 00000   
 13055 TXH +3 00000 0 00751    13056 TXH +3 00000 0 10141    13057 TXH +3 00000 0 00752                                 
                      W'R BDLNMK.(PRLNMK)                                           335  LM00067
 13060 TSX +0 07400 4 00035    13061 TXH +3 00000 0 10272    13062 TZE +0 10000 0 13135                                 
                      W'R PRLNMK(LMKZ).E.555555555555K                              336  LM00068
 13063 LXA +0 53400 1 10224    13064 CLA +0 50000 1 10272    13065 SUB +0 40200 0 10462    13066 TNZ -0 10000 0 13134   
                           PRINT COMMENT $ARCHIV FILE HAS OLD FORMAT.$              337  LM00069
 13067 TSX +0 07400 4 00021    13070     +0 00000 0 00005    13071     +2 15123 3 03165    13072     -2 02631 4 32560   
 13073     +3 02162 6 04643    13074     +2 46026 4 65144    13075     +2 16333 6 06060                                 
                           PRINT COMMENT $USE NWARCH SAVED IN PUBLIC FILE TO R      338  LM00070
                1EFORMAT.$                                                          338  LM00071
 13076 TSX +0 07400 4 00021    13077     +0 00000 0 00010    13100     -2 46225 6 04566    13101     +2 15123 3 06062   
 13102     +2 16525 2 46031    13103     -0 56047 6 42243    13104     +3 12360 2 63143    13105     +2 56063 4 66051   
 13106     +2 52646 5 14421    13107     -2 33360 6 06060                                                               
                           PRINT COMMENT $LINK NWARCH SAVED M1416 CMFL04$           339  LM00072
 13110 TSX +0 07400 4 00021    13111     +0 00000 0 00005    13112     -0 33145 4 26045    13113     -2 62151 2 33060   
 13114     -2 22165 2 52460    13115     -0 40104 0 10660    13116     +2 34426 4 30004                                 
                           PRINT COMMENT $RESUME NWARCH$                            340  LM00073
 13117 TSX +0 07400 4 00021    13120     +0 00000 0 00003    13121     -1 12562 6 44425    13122     -2 04566 2 15123   
 13123     +3 06060 6 06060                                                                                             
                           PRINT COMMENT $FOR INSTRUCTIONS.$                        341  LM00074
 13124 TSX +0 07400 4 00021    13125     +0 00000 0 00003    13126     +2 64651 6 03145    13127     -2 26351 6 42363   
 13130     +3 14645 6 23360                                                                                             
                           CHNCOM.(0)                                               342  LM00075
 13131 TSX +0 07400 4 00007    13132 TXH +3 00000 0 10352                                                               
                      O'E                                                           343  LM00076
 13133 TRA +0 02000 0 13135                                                                                             
                           T'O FRMER                                                344  LM00077
 13134 TRA +0 02000 0 00751                                                                                             
                      E'L                                                           345  LM00078
                      E'L                                                           346  LM00079
                 AROPSW=1B                                                          347  LM00080
 13135 CLA +0 50000 0 10353    13136 STO +0 60100 0 01004                                                               
                 FUNCTION RETURN                                                    348  LM00081
 13137 TRA +0 02000 0 13404                                                                                             
                 E'L                                                                349  LM00082
                 W'R COPYSW .AND. .NOT. TMOPSW                                      350  LM00083
 13140 ZET +0 52000 0 10332    13141 TRA +0 02000 0 13177    13142 NZT -0 52000 0 06737    13143 TRA +0 02000 0 13177   
                      DELETE.(TM1,TM2,0,OUT)                                        351  LM00084
 13144 TSX +0 07400 4 00012    13145 TXH +3 00000 0 00057    13146 TXH +3 00000 0 00056    13147 TXH +3 00000 0 10352   
 13150 TXH +3 00000 0 00757                                                                                             
                      BFOPEN.($W$,TM1,TM2,BUF3(BUFZ),BUF4(BUFZ),BUF5(BUFZ),         352  LM00085
                1       GERR)                                                       352  LM00086
 13151 CLA +0 50000 0 06735    13152 SUB +0 40200 0 13153    13153 TXH +3 00000 0 05172    13154 STA +0 62100 0 13173   
 13155 CLA +0 50000 0 06735    13156 SUB +0 40200 0 13157    13157 TXH +3 00000 0 04311    13160 STA +0 62100 0 13172   
 13161 CLA +0 50000 0 06735    13162 SUB +0 40200 0 13163    13163 TXH +3 00000 0 03430    13164 STA +0 62100 0 13171   
 13165 TSX +0 07400 4 00002    13166 TXH +3 00000 0 10541    13167 TXH +3 00000 0 00057    13170 TXH +3 00000 0 00056   
 13171 TXH +3 00000 0 00000    13172 TXH +3 00000 0 00000    13173 TXH +3 00000 0 00000    13174 TXH +3 00000 0 00752   
                      TMOPSW=1B                                                     353  LM00087
 13175 CLA +0 50000 0 10353    13176 STO +0 60100 0 10332                                                               
                 E'L                                                                354  LM00088
                 W'R COPYSW .AND. WMRKSW                                            355  LM00089
 13177 NZT -0 52000 0 10350    13200 TRA +0 02000 0 13214    13201 NZT -0 52000 0 06737    13202 TRA +0 02000 0 13214   
                      BFWRIT.(TM1,TM2,PRLNMK(LMKZ)...LMKZ,GERR)                     356  LM00090
 13203 CLA +0 50000 0 10224    13204 SUB +0 40200 0 13205    13205 TXH +3 00000 0 10272    13206 STA +0 62100 0 13212   
 13207 TSX +0 07400 4 00004    13210 TXH +3 00000 0 00057    13211 TXH +3 00000 0 00056    13212 TIX +2 10224 0 00000   
 13213 TXH +3 00000 0 00752                                                                                             
                 E'L                                                                357  LM00091
                 W'R .NOT. ADJSW                                                    358  LM00092
 13214 ZET +0 52000 0 01002    13215 TRA +0 02000 0 13320                                                               
                      AFZ=CNT.(PRLNMK)                                              359  LM00093
 13216 TSX +0 07400 4 00037    13217 TXH +3 00000 0 10272    13220 STO +0 60100 0 01003                                 
                      T'H COPY, FOR I=CPBUFZ,CPBUFZ,I.G.AFZ                         360  LM00094
 13221 CLA +0 50000 0 07621    13222 STO +0 60100 0 10217    13223 TRA +0 02000 0 13227    13224 CLA +0 50000 0 10217   
 13225 ADD +0 40000 0 07621    13226 STO +0 60100 0 10217    13227 CLA +0 50000 0 10217    13230 SUB +0 40200 0 01003   
 13231 TZE +0 10000 0 13233    13232 TPL +0 12000 0 13262                                                               
                           BFREAD.(NM1,NM2,CPBUF(CPBUFZ)...CPBUFZ,                  361  LM00095
                1            FRMER,EOFCT,GERR)                                      361  LM00096
 13233 CLA +0 50000 0 07621    13234 SUB +0 40200 0 13235    13235 TXH +3 00000 0 07620    13236 STA +0 62100 0 13242   
 13237 TSX +0 07400 4 00003    13240 TXH +3 00000 0 00054    13241 TXH +3 00000 0 00053    13242 TIX +2 07621 0 00000   
 13243 TXH +3 00000 0 00751    13244 TXH +3 00000 0 10141    13245 TXH +3 00000 0 00752                                 
                           W'R COPYSW                                               362  LM00097
 13246 NZT -0 52000 0 06737    13247 TRA +0 02000 0 13261                                                               
                                BFWRIT.(TM1,TM2,CPBUF(CPBUFZ)...CPBUFZ,GERR)        363  LM00098
 13250 CLA +0 50000 0 07621    13251 SUB +0 40200 0 13252    13252 TXH +3 00000 0 07620    13253 STA +0 62100 0 13257   
 13254 TSX +0 07400 4 00004    13255 TXH +3 00000 0 00057    13256 TXH +3 00000 0 00056    13257 TIX +2 07621 0 00000   
 13260 TXH +3 00000 0 00752                                                                                             
                           E'L                                                      364  LM00099
      COPY            CONTINUE                                                      365  LM00100
 13261 TRA +0 02000 0 13224                                                                                             
                      REMN=CPBUFZ-(I-AFZ)                                           366  LM00101
 13262 CLA +0 50000 0 10217    13263 SUB +0 40200 0 01003    13264 CHS +0 76000 0 00002    13265 ADD +0 40000 0 07621   
 13266 STO +0 60100 0 10325                                                                                             
                      W'R REMN.NE.0                                                 367  LM00102
 13267 CLA +0 50000 0 10325    13270 SUB +0 40200 0 10352    13271 TZE +0 10000 0 13320                                 
                           BFREAD.(NM1,NM2,CPBUF(REMN)...REMN,                      368  LM00103
                1            FRMER,EOFCT,GERR)                                      368  LM00104
 13272 CLA +0 50000 0 10325    13273 SUB +0 40200 0 13274    13274 TXH +3 00000 0 07620    13275 STA +0 62100 0 13301   
 13276 TSX +0 07400 4 00003    13277 TXH +3 00000 0 00054    13300 TXH +3 00000 0 00053    13301 TIX +2 10325 0 00000   
 13302 TXH +3 00000 0 00751    13303 TXH +3 00000 0 10141    13304 TXH +3 00000 0 00752                                 
                           W'R COPYSW                                               369  LM00105
 13305 NZT -0 52000 0 06737    13306 TRA +0 02000 0 13320                                                               
                                BFWRIT.(TM1,TM2,CPBUF(REMN)...REMN,GERR)            370  LM00106
 13307 CLA +0 50000 0 10325    13310 SUB +0 40200 0 13311    13311 TXH +3 00000 0 07620    13312 STA +0 62100 0 13316   
 13313 TSX +0 07400 4 00004    13314 TXH +3 00000 0 00057    13315 TXH +3 00000 0 00056    13316 TIX +2 10325 0 00000   
 13317 TXH +3 00000 0 00752                                                                                             
                           E'L                                                      371  LM00107
                      E'L                                                           372  LM00108
                 E'L                                                                373  LM00109
                 BFREAD.(NM1,NM2,PRLNMK(LMKZ)...LMKZ,EOF,EOFCT,GERR)                374  LM00110
 13320 CLA +0 50000 0 10224    13321 SUB +0 40200 0 13322    13322 TXH +3 00000 0 10272    13323 STA +0 62100 0 13327   
 13324 TSX +0 07400 4 00003    13325 TXH +3 00000 0 00054    13326 TXH +3 00000 0 00053    13327 TIX +2 10224 0 00000   
 13330 TXH +3 00000 0 00745    13331 TXH +3 00000 0 10141    13332 TXH +3 00000 0 00752                                 
                 W'R BDLNMK.(PRLNMK),T'O FRMER                                      375  LM00111
 13333 TSX +0 07400 4 00035    13334 TXH +3 00000 0 10272    13335 TZE +0 10000 0 13337    13336 TRA +0 02000 0 00751   
                 ADJSW=0B                                                           376  LM00112
 13337 CLA +0 50000 0 10352    13340 STO +0 60100 0 01002                                                               
                 F'N                                                                377  LM00113
 13341 TRA +0 02000 0 13404                                                                                             
      EOF        BFCLOS.(NM1,NM2,GERR)                                              378  LM00114
 13342 TSX +0 07400 4 00001    13343 TXH +3 00000 0 00054    13344 TXH +3 00000 0 00053    13345 TXH +3 00000 0 00752   
                 AROPSW=0B                                                          379  LM00115
 13346 CLA +0 50000 0 10352    13347 STO +0 60100 0 01004                                                               
                 T'O EOFXT                                                          380  LM00116
 13350 TRA +0 02000 0 00024                                                                                             
      FRMER      PRMESS.($ARCHIV FORMAT ERROR IN$,NM1,BL,NM2)                       381  LM00117
 13351 TSX +0 07400 4 00027    13352 TXH +3 00000 0 10410    13353 TXH +3 00000 0 10473    13354 TXH +3 00000 0 10531   
 13355 TXH +3 00000 0 10460    13356 TXH +3 00000 0 00054    13357 TXH +3 00000 0 01005    13360 TXH +3 00000 0 00053   
                 BFCLOS.($   ALL$,-0,GERR)                                          382  LM00118
 13361 CLS +0 50200 0 10352    13362 STO +0 60100 0 13410    13363 TSX +0 07400 4 00001    13364 TXH +3 00000 0 10504   
 13365 TXH +3 00000 0 13410    13366 TXH +3 00000 0 00752                                                               
                 CHNCOM.(1)                                                         383  LM00119
 13367 TSX +0 07400 4 00007    13370 TXH +3 00000 0 10353                                                               
      GERR       PRNTER.(61K)                                                       384  LM00120
 13371 TSX +0 07400 4 00030    13372 TXH +3 00000 0 10372                                                               
                 CHNCOM.(1)                                                         385  LM00121
 13373 TSX +0 07400 4 00007    13374 TXH +3 00000 0 10353                                                               
                 END OF FUNCTION                                                    386  LM00122
 13375 TSX +0 07400 4 00014    13376 TXH +3 00000 0 00000    13377 SXD -0 63400 1 13376    13400 SXA +0 63400 4 13404   
 13401 CLA +0 50000 4 00001    13402 STA +0 62100 0 13350    13403 TRA +0 02000 2 00001    13404 AXT +0 77400 4 00000   
 13405 LXA +0 53400 2 13376    13406 LXD -0 53400 1 13376    13407 TRA +0 02000 4 00001                                 
                 BOOLEAN CPFIL.                                                     387  LM00131
                 INTERNAL FUNCTION(A,B)                                             388  LM00132
 13411 TRA +0 02000 0 13721                                                                                             
                 E'O CPFIL.                                                         389  LM00133
 13412 TRA +0 02000 0 13415    00040 TTR +0 02100 0 13413    13413 SXA +0 63400 2 13674    13414 TSX +0 07400 2 13674   
                 W'R .NOT. MKLNMK.(A,B,CT)                                          390  LM00134
 13415 TSX +0 07400 4 00046    13416 TXH +3 00000 0 00024    13417 TXH +3 00000 0 00024    13420 TXH +3 00000 0 07623   
 13421 TNZ -0 10000 0 13425                                                                                             
                      F'N 0B                                                        391  LM00135
 13422 CLA +0 50000 0 10352    13423 TRA +0 02000 0 13714                                                               
                 O'E                                                                392  LM00136
 13424 TRA +0 02000 0 13654                                                                                             
                      W'R .NOT. TMOPSW                                              393  LM00137
 13425 ZET +0 52000 0 10332    13426 TRA +0 02000 0 13462                                                               
                           DELETE.(TM1,TM2,0,OUT)                                   394  LM00138
 13427 TSX +0 07400 4 00012    13430 TXH +3 00000 0 00057    13431 TXH +3 00000 0 00056    13432 TXH +3 00000 0 10352   
 13433 TXH +3 00000 0 00757                                                                                             
                           BFOPEN.($W$,TM1,TM2,BUF3(BUFZ),BUF4(BUFZ),               395  LM00139
                1            BUF5(BUFZ),GERR)                                       395  LM00140
 13434 CLA +0 50000 0 06735    13435 SUB +0 40200 0 13436    13436 TXH +3 00000 0 05172    13437 STA +0 62100 0 13456   
 13440 CLA +0 50000 0 06735    13441 SUB +0 40200 0 13442    13442 TXH +3 00000 0 04311    13443 STA +0 62100 0 13455   
 13444 CLA +0 50000 0 06735    13445 SUB +0 40200 0 13446    13446 TXH +3 00000 0 03430    13447 STA +0 62100 0 13454   
 13450 TSX +0 07400 4 00002    13451 TXH +3 00000 0 10541    13452 TXH +3 00000 0 00057    13453 TXH +3 00000 0 00056   
 13454 TXH +3 00000 0 00000    13455 TXH +3 00000 0 00000    13456 TXH +3 00000 0 00000    13457 TXH +3 00000 0 00752   
                           TMOPSW=1B                                                396  LM00141
 13460 CLA +0 50000 0 10353    13461 STO +0 60100 0 10332                                                               
                      E'L                                                           397  LM00142
                      BFOPEN.($R$,A,B,BUF6(BUFZ),BUF7(BUFZ),-0,GERR)                398  LM00143
 13462 CLS +0 50200 0 10352    13463 STO +0 60100 0 13720    13464 CLA +0 50000 0 06735    13465 SUB +0 40200 0 13466   
 13466 TXH +3 00000 0 06734    13467 STA +0 62100 0 13501    13470 CLA +0 50000 0 06735    13471 SUB +0 40200 0 13472   
 13472 TXH +3 00000 0 06053    13473 STA +0 62100 0 13500    13474 TSX +0 07400 4 00002    13475 TXH +3 00000 0 10461   
 13476 TXH +3 00000 0 00024    13477 TXH +3 00000 0 00024    13500 TXH +3 00000 0 00000    13501 TXH +3 00000 0 00000   
 13502 TXH +3 00000 0 13720    13503 TXH +3 00000 0 00752                                                               
                      FRSTSW=1B                                                     399  LM00144
 13504 CLA +0 50000 0 10353    13505 STO +0 60100 0 10212                                                               
                      T'H CPF01, FOR I=CPBUFZ,CPBUFZ,I.G.CT                         400  LM00145
 13506 CLA +0 50000 0 07621    13507 STO +0 60100 0 10217    13510 TRA +0 02000 0 13514    13511 CLA +0 50000 0 10217   
 13512 ADD +0 40000 0 07621    13513 STO +0 60100 0 10217    13514 CLA +0 50000 0 10217    13515 SUB +0 40200 0 07623   
 13516 TZE +0 10000 0 13520    13517 TPL +0 12000 0 13572                                                               
                           BFREAD.(A,B,CPBUF(CPBUFZ)...CPBUFZ,                      401  LM00146
                1            CPFEF,EOFCT,GERR)                                      401  LM00147
 13520 CLA +0 50000 0 07621    13521 SUB +0 40200 0 13522    13522 TXH +3 00000 0 07620    13523 STA +0 62100 0 13527   
 13524 TSX +0 07400 4 00003    13525 TXH +3 00000 0 00024    13526 TXH +3 00000 0 00024    13527 TIX +2 07621 0 00000   
 13530 TXH +3 00000 0 00743    13531 TXH +3 00000 0 10141    13532 TXH +3 00000 0 00752                                 
                           W'R BDLNMK.(CPBUF(CPBUFZ-LMKZ)) .AND. FRSTSW             402  LM00148
 13533 NZT -0 52000 0 10212    13534 TRA +0 02000 0 13556    13535 CLA +0 50000 0 07621    13536 SUB +0 40200 0 10224   
 13537 SUB +0 40200 0 13540    13540 TXH +3 00000 0 07620    13541 STA +0 62100 0 13543    13542 TSX +0 07400 4 00035   
 13543 TXH +3 00000 0 00000    13544 TZE +0 10000 0 13556                                                               
                                BFWRIT.(TM1,TM2,NWLNMK(LMKZ)...LMKZ,GERR)           403  LM00149
 13545 CLA +0 50000 0 10224    13546 SUB +0 40200 0 13547    13547 TXH +3 00000 0 10250    13550 STA +0 62100 0 13554   
 13551 TSX +0 07400 4 00004    13552 TXH +3 00000 0 00057    13553 TXH +3 00000 0 00056    13554 TIX +2 10224 0 00000   
 13555 TXH +3 00000 0 00752                                                                                             
                           E'L                                                      404  LM00150
                      FRSTSW=0B                                                     405  LM00151
 13556 CLA +0 50000 0 10352    13557 STO +0 60100 0 10212                                                               
      CPF01                BFWRIT.(TM1,TM2,CPBUF(CPBUFZ)...CPBUFZ,GERR)             406  LM00152
 13560 CLA +0 50000 0 07621    13561 SUB +0 40200 0 13562    13562 TXH +3 00000 0 07620    13563 STA +0 62100 0 13567   
 13564 TSX +0 07400 4 00004    13565 TXH +3 00000 0 00057    13566 TXH +3 00000 0 00056    13567 TIX +2 07621 0 00000   
 13570 TXH +3 00000 0 00752    13571 TRA +0 02000 0 13511                                                               
                      REMN=CPBUFZ-(I-CT)                                            407  LM00153
 13572 CLA +0 50000 0 10217    13573 SUB +0 40200 0 07623    13574 CHS +0 76000 0 00002    13575 ADD +0 40000 0 07621   
 13576 STO +0 60100 0 10325                                                                                             
                      BFREAD.(A,B,CPBUF(REMN)...REMN,CPFEF,EOFCT,GERR)              408  LM00154
 13577 CLA +0 50000 0 10325    13600 SUB +0 40200 0 13601    13601 TXH +3 00000 0 07620    13602 STA +0 62100 0 13606   
 13603 TSX +0 07400 4 00003    13604 TXH +3 00000 0 00024    13605 TXH +3 00000 0 00024    13606 TIX +2 10325 0 00000   
 13607 TXH +3 00000 0 00743    13610 TXH +3 00000 0 10141    13611 TXH +3 00000 0 00752                                 
                      W'R  BDLNMK.(CPBUF(REMN-LMKZ)) .AND. FRSTSW                   409  LM00155
 13612 NZT -0 52000 0 10212    13613 TRA +0 02000 0 13635    13614 CLA +0 50000 0 10325    13615 SUB +0 40200 0 10224   
 13616 SUB +0 40200 0 13617    13617 TXH +3 00000 0 07620    13620 STA +0 62100 0 13622    13621 TSX +0 07400 4 00035   
 13622 TXH +3 00000 0 00000    13623 TZE +0 10000 0 13635                                                               
                           BFWRIT.(TM1,TM2,NWLNMK(LMKZ)...LMKZ,GERR)                410  LM00156
 13624 CLA +0 50000 0 10224    13625 SUB +0 40200 0 13626    13626 TXH +3 00000 0 10250    13627 STA +0 62100 0 13633   
 13630 TSX +0 07400 4 00004    13631 TXH +3 00000 0 00057    13632 TXH +3 00000 0 00056    13633 TIX +2 10224 0 00000   
 13634 TXH +3 00000 0 00752                                                                                             
                      E'L                                                           411  LM00157
                      BFWRIT.(TM1,TM2,CPBUF(REMN)...REMN,GERR)                      412  LM00158
 13635 CLA +0 50000 0 10325    13636 SUB +0 40200 0 13637    13637 TXH +3 00000 0 07620    13640 STA +0 62100 0 13644   
 13641 TSX +0 07400 4 00004    13642 TXH +3 00000 0 00057    13643 TXH +3 00000 0 00056    13644 TIX +2 10325 0 00000   
 13645 TXH +3 00000 0 00752                                                                                             
                      BFCLOS.(A,B,GERR)                                             413  LM00159
 13646 TSX +0 07400 4 00001    13647 TXH +3 00000 0 00024    13650 TXH +3 00000 0 00024    13651 TXH +3 00000 0 00752   
                      F'N 1B                                                        414  LM00160
 13652 CLA +0 50000 0 10353    13653 TRA +0 02000 0 13714                                                               
                 E'L                                                                415  LM00161
      CPFEF      PRINT COMMENT $ERROR IN FSTATE.--NOTIFY SYSTEMS STAFF.$            416  LM00162
 13654 TSX +0 07400 4 00021    13655     +0 00000 0 00007    13656     +2 55151 4 65160    13657     +3 14560 2 66263   
 13660     +2 16325 3 34040    13661     -0 54663 3 12670    13662     -2 06270 6 26325    13663     -0 46260 6 26321   
 13664     +2 62633 6 06060                                                                                             
                 PRINT COMMENT $DORMNT CALLED$                                      417  LM00163
 13665 TSX +0 07400 4 00021    13666     +0 00000 0 00003    13667     +2 44651 4 44563    13670     -2 02321 4 34325   
 13671     +2 46060 6 06060                                                                                             
                 DORMNT.                                                            418  LM00164
 13672 TSX +0 07400 4 00013                                                                                             
                 END OF FUNCTION                                                    419  LM00165
 13673 TSX +0 07400 4 00014    13674 TXH +3 00000 0 00000    13675 SXD -0 63400 1 13674    13676 SXA +0 63400 4 13714   
 13677 CLA +0 50000 4 00001    13700 STO +0 60100 0 13416    13701 STO +0 60100 0 13476    13702 STO +0 60100 0 13525   
 13703 STO +0 60100 0 13604    13704 STO +0 60100 0 13647    13705 CLA +0 50000 4 00002    13706 STO +0 60100 0 13417   
 13707 STO +0 60100 0 13477    13710 STO +0 60100 0 13526    13711 STO +0 60100 0 13605    13712 STO +0 60100 0 13650   
 13713 TRA +0 02000 2 00001    13714 AXT +0 77400 4 00000    13715 LXA +0 53400 2 13674    13716 LXD -0 53400 1 13674   
 13717 TRA +0 02000 4 00001                                                                                             
                 NORMAL MODE IS INTEGER                                             420  LM00166
                 BOOLEAN COPYSW, PRSSW, WMRKSW, AROPSW, TMOPSW, FRSTSW              421  LM00167
                 BOOLEAN NAMO, ADJSW, NAMTYP                                        422  LM00168
                 V'S BUFZ=432                                                       423  LM00169
 06735     +0 00000 0 00660                                                                                             
                 D'N BUF1(432), BUF2(432), BUF3(432), BUF4(432), BUF5(432),         424  LM00170
                1  BUF6(432), BUF7(432)                                             424  LM00171
                 D'N CPBUF(432)                                                     425  LM00172
                   V'S CPBUFZ=432                                                   426  LM00173
 07621     +0 00000 0 00660                                                                                             
                 V'S FILTBZ=16                                                      427  LM00174
 10205     +0 00000 0 00020                                                                                             
                 D'N FILTAB(16)                                                     428  LM00175
                 BOOLEAN FILFND                                                     429  LM00176
                 D'N FILFND(16)                                                     430  LM00177
                 BOOLEAN CLS.                                                       431  LM00181
                 INTERNAL FUNCTION (A,B)                                            432  LM00182
 13721 TRA +0 02000 0 14072                                                                                             
                 E'O CLS.                                                           433  LM00183
 13722 TRA +0 02000 0 13725    00036 TTR +0 02100 0 13723    13723 SXA +0 63400 2 14042    13724 TSX +0 07400 2 14042   
                 W'R TMOPSW                                                         434  LM00184
 13725 NZT -0 52000 0 10332    13726 TRA +0 02000 0 14034                                                               
                      BFCLOS.(TM1,TM2,GERR)                                         435  LM00185
 13727 TSX +0 07400 4 00001    13730 TXH +3 00000 0 00057    13731 TXH +3 00000 0 00056    13732 TXH +3 00000 0 00752   
                      TMOPSW=0B                                                     436  LM00186
 13733 CLA +0 50000 0 10352    13734 STO +0 60100 0 10332                                                               
                      D'N FNM(2)                                                    437  LM00187
                      FNM(0)=A                                                      438  LM00188
 13735 CLA +0 50000 0 00024    13736 STO +0 60100 0 10211                                                               
                      FNM(1)=B                                                      439  LM00189
 13737 CLA +0 50000 0 00024    13740 STO +0 60100 0 10210                                                               
                      FSTATE.(A,B,FSBUF(8)...8,NFND)                                440  LM00190
 13741 TSX +0 07400 4 00016    13742 TXH +3 00000 0 00024    13743 TXH +3 00000 0 00024    13744 TIX +2 10361 0 00730   
 13745 TXH +3 00000 0 00754                                                                                             
                        EQUIVALENCE (MODE,FSBUF(7))                                 441  LM00191
                      MODE=MODE.A.134K                                              442  LM00192
 13746 CAL -0 50000 0 00731    13747 ANA -0 32000 0 10375    13750 SLW +0 60200 0 00731                                 
      CL01       DELETE.(A,B,0,NDEL1)                                               443  LM00193
 13751 TSX +0 07400 4 00012    13752 TXH +3 00000 0 00024    13753 TXH +3 00000 0 00024    13754 TXH +3 00000 0 10352   
 13755 TXH +3 00000 0 00753                                                                                             
                 CHFILE.(TM1,TM2,-0,A,B)                                            444  LM00194
 13756 CLS +0 50200 0 10352    13757 STO +0 60100 0 14070    13760 TSX +0 07400 4 00006    13761 TXH +3 00000 0 00057   
 13762 TXH +3 00000 0 00056    13763 TXH +3 00000 0 14070    13764 TXH +3 00000 0 00024    13765 TXH +3 00000 0 00024   
                      W'R MODE.NE.000K .AND. KEY.NE.$    XT$                        445  LM00195
 13766 CLA +0 50000 0 10223    13767 SUB +0 40200 0 10515    13770 TZE +0 10000 0 14027    13771 CLA +0 50000 0 00731   
 13772 SUB +0 40200 0 10352    13773 TZE +0 10000 0 14027                                                               
                           CHFILE.(A,B,MODE,-0,-0)                                  446  LM00196
 13774 CLS +0 50200 0 10352    13775 STO +0 60100 0 14070    13776 CLS +0 50200 0 10352    13777 STO +0 60100 0 14071   
 14000 TSX +0 07400 4 00006    14001 TXH +3 00000 0 00024    14002 TXH +3 00000 0 00024    14003 TXH +3 00000 0 00731   
 14004 TXH +3 00000 0 14071    14005 TXH +3 00000 0 14070                                                               
                      MODEP = (OCRBC.(MODE).A.777777K).V.575757K6                   447  LM00197
 14006 TSX +0 07400 4 00023    14007 TXH +3 00000 0 00731    14010 STO +0 60100 0 14071    14011 CAL -0 50000 0 14071   
 14012 ANA -0 32000 0 10401    14013 ORA -0 50100 0 10463    14014 SLW +0 60200 0 10225                                 
                      PRMESS.(A,BL,B,BL,$CREATED IN '$,MODEP,$' MODE.$)             448  LM00198
 14015 TSX +0 07400 4 00027    14016 TXH +3 00000 0 00024    14017 TXH +3 00000 0 01005    14020 TXH +3 00000 0 00024   
 14021 TXH +3 00000 0 01005    14022 TXH +3 00000 0 10415    14023 TXH +3 00000 0 10417    14024 TXH +3 00000 0 10225   
 14025 TXH +3 00000 0 10406    14026 TXH +3 00000 0 10431                                                               
                      E'L                                                           449  LM00199
                      F'N 1B                                                        450  LM00200
 14027 CLA +0 50000 0 10353    14030 TRA +0 02000 0 14064                                                               
      NDEL1           F'N 0B                                                        451  LM00201
 14031 CLA +0 50000 0 10352    14032 TRA +0 02000 0 14064                                                               
                 O'E                                                                452  LM00202
 14033 TRA +0 02000 0 14036                                                                                             
                      F'N 0B                                                        453  LM00203
 14034 CLA +0 50000 0 10352    14035 TRA +0 02000 0 14064                                                               
                 E'L                                                                454  LM00204
      NFND       MODE=000K                                                          455  LM00205
 14036 CLA +0 50000 0 10352    14037 STO +0 60100 0 00731                                                               
                 T'O CL01                                                           456  LM00206
 14040 TRA +0 02000 0 00741                                                                                             
                 END OF FUNCTION                                                    457  LM00207
 14041 TSX +0 07400 4 00014    14042 TXH +3 00000 0 00000    14043 SXD -0 63400 1 14042    14044 SXA +0 63400 4 14064   
 14045 CLA +0 50000 4 00001    14046 STA +0 62100 0 13735    14047 STO +0 60100 0 13742    14050 STO +0 60100 0 13752   
 14051 STO +0 60100 0 13764    14052 STO +0 60100 0 14001    14053 STO +0 60100 0 14016    14054 CLA +0 50000 4 00002   
 14055 STA +0 62100 0 13737    14056 STO +0 60100 0 13743    14057 STO +0 60100 0 13753    14060 STO +0 60100 0 13765   
 14061 STO +0 60100 0 14002    14062 STO +0 60100 0 14020    14063 TRA +0 02000 2 00001    14064 AXT +0 77400 4 00000   
 14065 LXA +0 53400 2 14042    14066 LXD -0 53400 1 14042    14067 TRA +0 02000 4 00001                                 
                 BOOLEAN YES.                                                       458  LM00212
                 INTERNAL FUNCTION                                                  459  LM00213
 14072 TRA +0 02000 0 14122                                                                                             
                 E'O YES.                                                           460  LM00214
 14073 TRA +0 02000 0 14076    00050 TTR +0 02100 0 14074    14074 SXA +0 63400 2 14112    14075 TSX +0 07400 2 14112   
                 RDFLXC.(YESNO,6)                                                   461  LM00215
 14076 TSX +0 07400 4 00031    14077 TXH +3 00000 0 10351    14100 TXH +3 00000 0 10360                                 
                 W'R YESNO.E.$YES   $                                               462  LM00216
 14101 CLA +0 50000 0 10351    14102 SUB +0 40200 0 10543    14103 TNZ -0 10000 0 14107                                 
                      F'N 1B                                                        463  LM00217
 14104 CLA +0 50000 0 10353    14105 TRA +0 02000 0 14116                                                               
                 O'E                                                                464  LM00218
 14106 TRA +0 02000 0 14111                                                                                             
                      F'N 0B                                                        465  LM00219
 14107 CLA +0 50000 0 10352    14110 TRA +0 02000 0 14116                                                               
                 E'L                                                                466  LM00220
                 END OF FUNCTION                                                    467  LM00221
 14111 TSX +0 07400 4 00014    14112 TXH +3 00000 0 00000    14113 SXD -0 63400 1 14112    14114 SXA +0 63400 4 14116   
 14115 TRA +0 02000 2 00001    14116 AXT +0 77400 4 00000    14117 LXA +0 53400 2 14112    14120 LXD -0 53400 1 14112   
 14121 TRA +0 02000 4 00001                                                                                             
                 BOOLEAN DELT.                                                      468  LM00226
                 INTERNAL FUNCTION (A,B)                                            469  LM00227
 14122 TRA +0 02000 0 14203                                                                                             
                 E'O DELT.                                                          470  LM00228
 14123 TRA +0 02000 0 14126    00042 TTR +0 02100 0 14124    14124 SXA +0 63400 2 14161    14125 TSX +0 07400 2 14161   
                 FNM(0)=A                                                           471  LM00229
 14126 CLA +0 50000 0 00024    14127 STO +0 60100 0 10211                                                               
                 FNM(1)=B                                                           472  LM00230
 14130 CLA +0 50000 0 00024    14131 STO +0 60100 0 10210                                                               
                 DELETE.(A,B,0,NOTDEL)                                              473  LM00231
 14132 TSX +0 07400 4 00012    14133 TXH +3 00000 0 00024    14134 TXH +3 00000 0 00024    14135 TXH +3 00000 0 10352   
 14136 TXH +3 00000 0 00755                                                                                             
                      PRMESS.(A,BL,B,$ DELETED.$)                                   474  LM00232
 14137 TSX +0 07400 4 00027    14140 TXH +3 00000 0 00024    14141 TXH +3 00000 0 01005    14142 TXH +3 00000 0 00024   
 14143 TXH +3 00000 0 10470    14144 TXH +3 00000 0 10420                                                               
                      F'N 1B                                                        475  LM00233
 14145 CLA +0 50000 0 10353    14146 TRA +0 02000 0 14177                                                               
      NOTDEL     PRMESS.(A,BL,B,$ NOT DELETED.$)                                    476  LM00234
 14147 TSX +0 07400 4 00027    14150 TXH +3 00000 0 00024    14151 TXH +3 00000 0 01005    14152 TXH +3 00000 0 00024   
 14153 TXH +3 00000 0 10500    14154 TXH +3 00000 0 10421    14155 TXH +3 00000 0 10431                                 
                 F'N 0B                                                             477  LM00235
 14156 CLA +0 50000 0 10352    14157 TRA +0 02000 0 14177                                                               
                 E'N                                                                478  LM00236
 14160 TSX +0 07400 4 00014    14161 TXH +3 00000 0 00000    14162 SXD -0 63400 1 14161    14163 SXA +0 63400 4 14177   
 14164 CLA +0 50000 4 00001    14165 STA +0 62100 0 14126    14166 STO +0 60100 0 14133    14167 STO +0 60100 0 14140   
 14170 STO +0 60100 0 14150    14171 CLA +0 50000 4 00002    14172 STA +0 62100 0 14130    14173 STO +0 60100 0 14134   
 14174 STO +0 60100 0 14142    14175 STO +0 60100 0 14152    14176 TRA +0 02000 2 00001    14177 AXT +0 77400 4 00000   
 14200 LXA +0 53400 2 14161    14201 LXD -0 53400 1 14161    14202 TRA +0 02000 4 00001                                 
                 INSERT FILE AFORM                                                  479  LM00352
                 BOOLEAN MKLNMK.                                                    480  LM00015
                 INTERNAL FUNCTION (A,B,CT)                                         481  LM00016
 14203 TRA +0 02000 0 14337                                                                                             
                 E'O MKLNMK.                                                        482  LM00017
 14204 TRA +0 02000 0 14207    00046 TTR +0 02100 0 14205    14205 SXA +0 63400 2 14315    14206 TSX +0 07400 2 14315   
                 OLDERR=FERRTN.(NTFND)                                              483  LM00018
 14207 TSX +0 07400 4 00015    14210 TXH +3 00000 0 00756    14211 STO +0 60100 0 10251                                 
                 FSTATE.(A,B,FSBUF(8)...8)                                          484  LM00019
 14212 TSX +0 07400 4 00016    14213 TXH +3 00000 0 00024    14214 TXH +3 00000 0 00024    14215 TIX +2 10361 0 00730   
                 FERRTN.(OLDERR)                                                    485  LM00020
 14216 TSX +0 07400 4 00015    14217 TXH +3 00000 0 10251                                                               
                 CT=FSBUF(8)                                                        486  LM00021
 14220 CLA +0 50000 0 00730    14221 STO +0 60100 0 00024                                                               
                 V'S NWLNMK(11)...NWLNMK(14)=777777000000K                          487  LM00022
 10232     -3 77777 0 00000    10233     -3 77777 0 00000    10234     -3 77777 0 00000    10235     -3 77777 0 00000   
                 V'S NWLNMK(10)=777777000011K                                       488  LM00023
 10236     -3 77777 0 00011                                                                                             
                 NWLNMK(9)=A                                                        489  LM00024
 14222 CLA +0 50000 0 00024    14223 STO +0 60100 0 10237                                                               
                 NWLNMK(8)=B                                                        490  LM00025
 14224 CLA +0 50000 0 00024    14225 STO +0 60100 0 10240                                                               
                 W'R .NOT. GOTTM                                                    491  LM00026
 14226 ZET +0 52000 0 10214    14227 TRA +0 02000 0 14300                                                               
                   BOOLEAN GOTTM                                                    492  LM00027
                      GETTM.(PDATE,PTIME)                                           493  LM00028
 14230 TSX +0 07400 4 00017    14231 TXH +3 00000 0 10252    14232 TXH +3 00000 0 10324                                 
                      NWLNMK(7)=(PDATE.RS.6).V.$ 00000$                             494  LM00029
 14233 CAL -0 50000 0 10360    14234 STA +0 62100 0 14236    14235 CAL -0 50000 0 10252    14236 LGR -0 76500 0 00000   
 14237 ORA -0 50100 0 10464    14240 SLW +0 60200 0 10241                                                               
                      NWLNMK(6) = (DEFBC.(GTDYTM.(0).RS.27).LS.18)                  495  LM00030
                1          .V.(PTIME.RS.24)                                         495  LM00031
                2               .V.$/00 00$                                         495  LM00032
 14241 CAL -0 50000 0 10367    14242 STA +0 62100 0 14244    14243 CAL -0 50000 0 10324    14244 LGR -0 76500 0 00000   
 14245 SLW +0 60200 0 14335    14246 TSX +0 07400 4 00020    14247 TXH +3 00000 0 10352    14250 STO +0 60100 0 14336   
 14251 CAL -0 50000 0 10370    14252 STA +0 62100 0 14254    14253 CAL -0 50000 0 14336    14254 LGR -0 76500 0 00000   
 14255 SLW +0 60200 0 14336    14256 TSX +0 07400 4 00011    14257 TXH +3 00000 0 14336    14260 STO +0 60100 0 14336   
 14261 CAL -0 50000 0 10365    14262 STA +0 62100 0 14264    14263 CAL -0 50000 0 14336    14264 ALS +0 76700 0 00000   
 14265 ORA -0 50100 0 14335    14266 ORA -0 50100 0 10525    14267 SLW +0 60200 0 10242                                 
                      NWLNMK(5)=(PTIME.LS.12).V.$0000  $                            496  LM00034
 14270 CAL -0 50000 0 10363    14271 STA +0 62100 0 14273    14272 CAL -0 50000 0 10324    14273 ALS +0 76700 0 00000   
 14274 ORA -0 50100 0 10376    14275 SLW +0 60200 0 10243                                                               
                      GOTTM=1B                                                      497  LM00035
 14276 CLA +0 50000 0 10353    14277 STO +0 60100 0 10214                                                               
                 E'L                                                                498  LM00036
                 NWLNMK(4)=BZEL.(DEFBC.(FSBUF(8)))                                  499  LM00037
 14300 TSX +0 07400 4 00011    14301 TXH +3 00000 0 00730    14302 STO +0 60100 0 14336    14303 TSX +0 07400 4 00005   
 14304 TXH +3 00000 0 14336    14305 STO +0 60100 0 10244                                                               
                 V'S NWLNMK(3)=$      $                                             500  LM00038
 10245     -2 06060 6 06060                                                                                             
                 V'S NWLNMK(2)=$   000$                                             501  LM00039
 10246     -2 06060 0 00000                                                                                             
                 V'S NWLNMK(1)=$00    $                                             502  LM00040
 10247     +0 00060 6 06060                                                                                             
                 F'N 1B                                                             503  LM00041
 14306 CLA +0 50000 0 10353    14307 TRA +0 02000 0 14331                                                               
      NTFND      FERRTN.(OLDERR)                                                    504  LM00042
 14310 TSX +0 07400 4 00015    14311 TXH +3 00000 0 10251                                                               
                 F'N 0B                                                             505  LM00043
 14312 CLA +0 50000 0 10352    14313 TRA +0 02000 0 14331                                                               
                 END OF FUNCTION                                                    506  LM00044
 14314 TSX +0 07400 4 00014    14315 TXH +3 00000 0 00000    14316 SXD -0 63400 1 14315    14317 SXA +0 63400 4 14331   
 14320 CLA +0 50000 4 00001    14321 STO +0 60100 0 14213    14322 STA +0 62100 0 14222    14323 CLA +0 50000 4 00002   
 14324 STO +0 60100 0 14214    14325 STA +0 62100 0 14224    14326 CLA +0 50000 4 00003    14327 STA +0 62100 0 14221   
 14330 TRA +0 02000 2 00001    14331 AXT +0 77400 4 00000    14332 LXA +0 53400 2 14315    14333 LXD -0 53400 1 14315   
 14334 TRA +0 02000 4 00001                                                                                             
                 BOOLEAN BDLNMK.                                                    507  LM00049
                 INTERNAL FUNCTION(LMK)                                             508  LM00050
 14337 TRA +0 02000 0 14464                                                                                             
                 E'O BDLNMK.                                                        509  LM00051
 14340 TRA +0 02000 0 14343    00035 TTR +0 02100 0 14341    14341 SXA +0 63400 2 14427    14342 TSX +0 07400 2 14427   
                 W'R (LMK(14).NE.777777000000K .AND. LMK(14).NE.0)                  510  LM00052
                1.OR.LMK(13).NE.777777000000K                                       510  LM00053
                2.OR.LMK(12).NE.777777000000K                                       510  LM00054
                3.OR.LMK(11).NE.777777000000K                                       510  LM00055
                4.OR.LMK(10).NE.777777000011K                                       510  LM00056
                5.OR.LMK(7).A.776060776060K .NE. $ 00/00$                           510  LM00057
                6.OR.LMK(6).A.776060776060K .NE. $/00 00$                           510  LM00058
                7.OR.LMK(5).A.606077607777K .NE. $00.0  $                           510  LM00059
                8.OR.LMK(4).A.60K.NE.0                                              510  LM00060
 14343 CAL -0 50000 0 00020    14344 ANA -0 32000 0 10371    14345 SLW +0 60200 0 14463    14346 CLA +0 50000 0 14463   
 14347 SUB +0 40200 0 10352    14350 TNZ -0 10000 0 14416    14351 CAL -0 50000 0 00017    14352 ANA -0 32000 0 10520   
 14353 SLW +0 60200 0 14463    14354 CLA +0 50000 0 14463    14355 SUB +0 40200 0 10402    14356 TNZ -0 10000 0 14416   
 14357 CAL -0 50000 0 00016    14360 ANA -0 32000 0 10550    14361 SLW +0 60200 0 14463    14362 CLA +0 50000 0 14463   
 14363 SUB +0 40200 0 10525    14364 TNZ -0 10000 0 14416    14365 CAL -0 50000 0 00015    14366 ANA -0 32000 0 10550   
 14367 SLW +0 60200 0 14463    14370 CLA +0 50000 0 14463    14371 SUB +0 40200 0 10465    14372 TNZ -0 10000 0 14416   
 14373 CLA +0 50000 0 00012    14374 SUB +0 40200 0 10554    14375 TNZ -0 10000 0 14416    14376 CLA +0 50000 0 00011   
 14377 SUB +0 40200 0 10553    14400 TNZ -0 10000 0 14416    14401 CLA +0 50000 0 00010    14402 SUB +0 40200 0 10553   
 14403 TNZ -0 10000 0 14416    14404 CLA +0 50000 0 00007    14405 SUB +0 40200 0 10553    14406 TNZ -0 10000 0 14416   
 14407 CLA +0 50000 0 00006    14410 SUB +0 40200 0 10352    14411 TZE +0 10000 0 14415    14412 CLA +0 50000 0 00006   
 14413 SUB +0 40200 0 10553    14414 TNZ -0 10000 0 14416    14415 TRA +0 02000 0 14421                                 
                      F'N 1B                                                        511  LM00061
 14416 CLA +0 50000 0 10353    14417 TRA +0 02000 0 14457                                                               
                 O'E                                                                512  LM00062
 14420 TRA +0 02000 0 14423                                                                                             
                      F'N 0B                                                        513  LM00063
 14421 CLA +0 50000 0 10352    14422 TRA +0 02000 0 14457                                                               
                 E'L                                                                514  LM00064
                 END OF FUNCTION                                                    515  LM00065
 14423 TSX +0 07400 4 00014    14424 PZE +0 00000 0 00004    14425 PZE +0 00000 0 00001    14426 PZE +0 00000 0 00003   
 14427 TXH +3 00000 0 00000    14430 SXD -0 63400 1 14427    14431 SXA +0 63400 4 14457    14432 CLA +0 50000 4 00001   
 14433 SUB +0 40200 0 14424    14434 STA +0 62100 0 14343    14435 SUB +0 40200 0 14425    14436 STA +0 62100 0 14351   
 14437 SUB +0 40200 0 14425    14440 STA +0 62100 0 14357    14441 SUB +0 40200 0 14425    14442 STA +0 62100 0 14365   
 14443 SUB +0 40200 0 14426    14444 STA +0 62100 0 14373    14445 SUB +0 40200 0 14425    14446 STA +0 62100 0 14376   
 14447 SUB +0 40200 0 14425    14450 STA +0 62100 0 14401    14451 SUB +0 40200 0 14425    14452 STA +0 62100 0 14404   
 14453 SUB +0 40200 0 14425    14454 STA +0 62100 0 14407    14455 STA +0 62100 0 14412    14456 TRA +0 02000 2 00001   
 14457 AXT +0 77400 4 00000    14460 LXA +0 53400 2 14427    14461 LXD -0 53400 1 14427    14462 TRA +0 02000 4 00001   
                 INTERNAL FUNCTION DATTM.(LMK)=                                     516  LM00072
                1     (BCDEC.((LMK(6).RS.18).A.7777K).LS.27).A.777K9                516  LM00073
                2  .V.(BCDEC.((LMK(7).RS.18).A.7777K).LS.23).A.74K7                 516  LM00074
                3  .V.(BCDEC.(LMK(7).A.7777K).LS.18).A.37K6                         516  LM00075
                4  .V.(BCDEC.(LMK(6).A.7777K)*3600                                  516  LM00076
                6     +BCDEC.(LMK(5).RS.24)*60                                      516  LM00077
                5     +BCDEC.((LMK(5).RS.12).A.77K)*6)                              516  LM00078
 14464 TRA +0 02000 0 14640    00041 TTR +0 02100 0 14465    14465 SXA +0 63400 2 14612    14466 TSX +0 07400 2 14612   
 14467 CAL -0 50000 0 10363    14470 STA +0 62100 0 14472    14471 CAL -0 50000 0 00017    14472 LGR -0 76500 0 00000   
 14473 ANA -0 32000 0 10374    14474 SLW +0 60200 0 14634    14475 TSX +0 07400 4 00000    14476 TXH +3 00000 0 14634   
 14477 XCA +0 13100 0 00000    14500 MPY +0 20000 0 10360    14501 STQ -0 60000 0 14634    14502 CAL -0 50000 0 10367   
 14503 STA +0 62100 0 14505    14504 CAL -0 50000 0 00017    14505 LGR -0 76500 0 00000    14506 SLW +0 60200 0 14635   
 14507 TSX +0 07400 4 00000    14510 TXH +3 00000 0 14635    14511 XCA +0 13100 0 00000    14512 MPY +0 20000 0 10373   
 14513 STQ -0 60000 0 14635    14514 CAL -0 50000 0 00016    14515 ANA -0 32000 0 10400    14516 SLW +0 60200 0 14636   
 14517 TSX +0 07400 4 00000    14520 TXH +3 00000 0 14636    14521 XCA +0 13100 0 00000    14522 MPY +0 20000 0 10377   
 14523 XCA +0 13100 0 00000    14524 ADD +0 40000 0 14635    14525 ADD +0 40000 0 14634    14526 STO +0 60100 0 14636   
 14527 CAL -0 50000 0 00015    14530 ANA -0 32000 0 10400    14531 SLW +0 60200 0 14635    14532 TSX +0 07400 4 00000   
 14533 TXH +3 00000 0 14635    14534 STO +0 60100 0 14635    14535 CAL -0 50000 0 10365    14536 STA +0 62100 0 14540   
 14537 CAL -0 50000 0 14635    14540 ALS +0 76700 0 00000    14541 ANA -0 32000 0 10403    14542 SLW +0 60200 0 14635   
 14543 CAL -0 50000 0 10365    14544 STA +0 62100 0 14546    14545 CAL -0 50000 0 00015    14546 LGR -0 76500 0 00000   
 14547 ANA -0 32000 0 10400    14550 SLW +0 60200 0 14634    14551 TSX +0 07400 4 00000    14552 TXH +3 00000 0 14634   
 14553 STO +0 60100 0 14634    14554 CAL -0 50000 0 10366    14555 STA +0 62100 0 14557    14556 CAL -0 50000 0 14634   
 14557 ALS +0 76700 0 00000    14560 ANA -0 32000 0 10405    14561 SLW +0 60200 0 14634    14562 CAL -0 50000 0 10365   
 14563 STA +0 62100 0 14565    14564 CAL -0 50000 0 00016    14565 LGR -0 76500 0 00000    14566 ANA -0 32000 0 10400   
 14567 SLW +0 60200 0 14637    14570 TSX +0 07400 4 00000    14571 TXH +3 00000 0 14637    14572 STO +0 60100 0 14637   
 14573 CAL -0 50000 0 10370    14574 STA +0 62100 0 14576    14575 CAL -0 50000 0 14637    14576 ALS +0 76700 0 00000   
 14577 ANA -0 32000 0 10551    14600 ORA -0 50100 0 14634    14601 ORA -0 50100 0 14635    14602 ORA -0 50100 0 14636   
 14603 SLW +0 60200 0 14637    14604 CLA +0 50000 0 14637    14605 TRA +0 02000 0 14630    14606 PZE +0 00000 0 00004   
 14607 PZE +0 00000 0 00001    14610 PZE +0 00000 0 00003    14611 PZE +0 00000 0 00005    14612 TXH +3 00000 0 00000   
 14613 SXD -0 63400 1 14612    14614 SXA +0 63400 4 14630    14615 CLA +0 50000 4 00001    14616 SUB +0 40200 0 14611   
 14617 STA +0 62100 0 14471    14620 STA +0 62100 0 14504    14621 SUB +0 40200 0 14607    14622 STA +0 62100 0 14514   
 14623 STA +0 62100 0 14564    14624 SUB +0 40200 0 14607    14625 STA +0 62100 0 14527    14626 STA +0 62100 0 14545   
 14627 TRA +0 02000 2 00001    14630 AXT +0 77400 4 00000    14631 LXA +0 53400 2 14612    14632 LXD -0 53400 1 14612   
 14633 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION CNT.(LMK)=BCDEC.(LMK(4))                         517  LM00083
 14640 TRA +0 02000 0 14665    00037 TTR +0 02100 0 14641    14641 SXA +0 63400 2 14652    14642 TSX +0 07400 2 14652   
 14643 TSX +0 07400 4 00000    14644 TXH +3 00000 0 00020    14645 TRA +0 02000 0 14661    14646 PZE +0 00000 0 00004   
 14647 PZE +0 00000 0 00001    14650 PZE +0 00000 0 00003    14651 PZE +0 00000 0 00005    14652 TXH +3 00000 0 00000   
 14653 SXD -0 63400 1 14652    14654 SXA +0 63400 4 14661    14655 CLA +0 50000 4 00001    14656 SUB +0 40200 0 14646   
 14657 STO +0 60100 0 14644    14660 TRA +0 02000 2 00001    14661 AXT +0 77400 4 00000    14662 LXA +0 53400 2 14652   
 14663 LXD -0 53400 1 14652    14664 TRA +0 02000 4 00001                                                               
                 INTERNAL FUNCTION FLN1.(LMK)=LMK(9)                                518  LM00084
 14665 TRA +0 02000 0 14712    00043 TTR +0 02100 0 14666    14666 SXA +0 63400 2 14677    14667 TSX +0 07400 2 14677   
 14670 CLA +0 50000 0 00013    14671 TRA +0 02000 0 14706    14672 PZE +0 00000 0 00004    14673 PZE +0 00000 0 00001   
 14674 PZE +0 00000 0 00003    14675 PZE +0 00000 0 00005    14676 PZE +0 00000 0 00011    14677 TXH +3 00000 0 00000   
 14700 SXD -0 63400 1 14677    14701 SXA +0 63400 4 14706    14702 CLA +0 50000 4 00001    14703 SUB +0 40200 0 14676   
 14704 STA +0 62100 0 14670    14705 TRA +0 02000 2 00001    14706 AXT +0 77400 4 00000    14707 LXA +0 53400 2 14677   
 14710 LXD -0 53400 1 14677    14711 TRA +0 02000 4 00001                                                               
                 INTERNAL FUNCTION FLN2.(LMK)=LMK(8)                                519  LM00085
 14712 TRA +0 02000 0 14740    00044 TTR +0 02100 0 14713    14713 SXA +0 63400 2 14725    14714 TSX +0 07400 2 14725   
 14715 CLA +0 50000 0 00014    14716 TRA +0 02000 0 14734    14717 PZE +0 00000 0 00004    14720 PZE +0 00000 0 00001   
 14721 PZE +0 00000 0 00003    14722 PZE +0 00000 0 00005    14723 PZE +0 00000 0 00011    14724 PZE +0 00000 0 00010   
 14725 TXH +3 00000 0 00000    14726 SXD -0 63400 1 14725    14727 SXA +0 63400 4 14734    14730 CLA +0 50000 4 00001   
 14731 SUB +0 40200 0 14724    14732 STA +0 62100 0 14715    14733 TRA +0 02000 2 00001    14734 AXT +0 77400 4 00000   
 14735 LXA +0 53400 2 14725    14736 LXD -0 53400 1 14725    14737 TRA +0 02000 4 00001                                 
                 V'S INF1=9                                                         520  LM00092
 10215     +0 00000 0 00011                                                                                             
                 V'S INF2=4                                                         521  LM00093
 10216     +0 00000 0 00004                                                                                             
                 D'N PRLNMK(14), NWLNMK(14)                                         522  LM00094
                 V'S LMKZ=14                                                        523  LM00095
 10224     +0 00000 0 00016                                                                                             
                 D'N FSBUF(432)                                                     524  LM00096
                 END OF PROGRAM                                                     525  LM00353
 14740 TSX +0 07400 4 00014                                                                                             




  BLIP   BCD 10/04/70 1548.6     905         00000    
1       M1416 3845  PETER R. BOS ....... SET BLIP SEQUENCE OPTION .........      05/30/69 1958.3 PAGE 1     
                  
                                     PCC     ON 
                                     LBL     BLIP     
                                     PCC     OFF
                  
                                     EXTERN  SETBRK,GETCOM,BCDEC,SETFUL,WRFLXA,RDFLXA     
                                     EXTERN  SETBLP,SETBCD,WRFLX,CHNCOM 
                  
                  
                  
        TRANSFER VECTOR 
      00000  622563225142     SETBRK
      00001  272563234644     GETCOM
      00002  222324252360     BCDEC 
      00003  622563266443     SETFUL
      00004  665126436721     WRFLXA
      00005  512426436721     RDFLXA
      00006  622563224347     SETBLP
      00007  622563222324     SETBCD
      00010  665126436760     WRFLX 
      00011  233045234644     CHNCOM
                  
      00012  0074 00 4 00000         TSX     SETBRK,4      SET INTERRUPT
      00013  3 00000 0 00050         PAR     CHN           .. EXIT
      00014  0074 00 4 00001         TSX     GETCOM,4      GET ARG, NO. SECONDS INTERVAL  
      00015  0 00000 0 00001         PZE     1             ..     
      00016 -0340 00 0 00017         LAS     *+1           CHECK FOR FENCE    
      00017 -377777777777            OCT     777777777777  ..     
      00020 -0500 00 0 00063         CAL     =H     2      YES, USE DEFAULT VALUE   
      00021  0602 00 0 00062         SLW     T             ..     
      00022  0074 00 4 00002         TSX     BCDEC,4       CONVERT TO BINARY  
      00023  3 00000 0 00062         PAR     T             ..     
      00024  0602 00 0 00062         SLW     T             ..     
      00025  0100 00 0 00043         TZE     RESET         T=0 TURNS OFF BLIP 
      00026  0074 00 4 00003         TSX     SETFUL,4      SET 12-BIT MODE    
      00027  0074 00 4 00004         TSX     WRFLXA,4      ASK FOR INPUT
      00030  0 00003 0 00052         PZE     TYPE,,3       ..     
      00031  0074 00 4 00005         TSX     RDFLXA,4      READ IT
      00032  0 00001 0 00061         PZE     WD,,1         ..     
      00033  0044 00 0 00000         PAI                   RETURN CODE FROM RDLINE  
      00034  0054 00  040000         RFT     40000         WAS LINE INCOMPLETE
      00035  0020 00 0 00043         TRA     RESET         YES, SKIP (USE ALL 3 CHARS)    
      00036  0771 00 0 00001         ARS     1             12-BIT CHAR COUNT  
      00037  0734 00 1 00000         PAX     ,1            ..     
      00040 -0500 00 0 00061         CAL     WD            REMOVE C.R. FROM CHAR    
      00041  0322 00 1 00061         ERA     CVT,1         ..     
      00042  0602 00 0 00061         SLW     WD            ..     
      00043  0074 00 4 00006  RESET  TSX     SETBLP,4      SET BLIP OPTION    
      00044  3 00000 0 00061         PAR     WD            ..     
      00045  3 00000 0 00062         PAR     T             ..     
      00046  0074 00 4 00010         TSX     WRFLX,4       ..     
      00047  0 00001 0 00055         PZE     STAR,,1       ..     
      00050  0074 00 4 00011  CHN    TSX     CHNCOM,4      AND EXIT     
      00051  0 00000 0 00000         PZE     0             ..     
1       M1416 3845  PETER R. BOS ....... SET BLIP SEQUENCE OPTION .........      05/30/69 1958.3 PAGE 2     
                  
                  
      00052 +013300630170     TYPE   OCT     013300630170,014701250035,006001320057 
      00053 +014701250035     
      00054 +006001320057     
      00055  545757575757     STAR   BCI     /*/
      00056 +000000000002            OCT     000000000002,000000020037,000200370037 
      00057 +000000020037     
      00060 +000200370037     
                       00061  CVT    SYN     *             ..     
      00061  0 00000 0 00000  WD     PZE                   BLIP CHAR    
      00062  0 00000 0 00000  T      PZE                   TIME INTERVAL
                  
                                     END  
                  
        LITERALS  
      00063  606060606002     
1       M1416 3845  PETER R. BOS ....... SET BLIP SEQUENCE OPTION .........      05/30/69 1958.3 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         64 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         62      T    21,   23,   24,   45
         61     WD    32,   40,   42,   44
         50    CHN    13
         61    CVT    41,   61
         55   STAR    47
         52   TYPE    30
          2  BCDEC    22
         43  RESET    25,   35
         10  WRFLX    46
         11 CHNCOM    50
          1 GETCOM    14
          5 RDFLXA    31
          7 SETBCD      
          6 SETBLP    43
          0 SETBRK    12
          3 SETFUL    26
          4 WRFLXA    27
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




  CALL   BCD 10/04/70 1548.6   25034         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   CALL0   MAD            02/08/68    1708.9
-                 
                      CALL COMMAND FOR FILE SYSTEM EXERCISING                                          LM00001    
                                                                                                       LM00002    
                      LOADING INSTRUCTIONS ...                                                         LM00003    
                                                                                                       LM00004    
                           MAD CALL0 (LIST)                                                            LM00005    
                           MAD CALL1 (LIST)                                                            LM00006    
                           FAP CALL2 (LIST)                                                            LM00007    
                           FAP CALL3 (LIST)                                                            LM00008    
                           LAED NCLOAD CALL0 CALL1 CALL2                                               LM00009    
                                CALL3 (SQZ) (SRCH) (CFL5) XLIBE                                        LM00010    
                           SAVE CALL                                                                   LM00011    
                                                                                                       LM00012    
                      D.R. WIDRIG  DEC. 1965                                                           LM00013    
                                                                                                       LM00014    
                      MAJOR REVISION  MAY 1966  D.R. WIDRIG                                            LM00015    
                                                                                                       LM00016    
                  NORMAL MODE IS INTEGER                                                          *001 LM00017    
                  BOOLEAN STOP,FIRST                                                              *002 LM00018    
                                                                                                       LM00019    
                  DIMENSION A(9),ARRY(9),SN(9),BUFF(432),MESSAG(20),ARG(20)                       *003 LM00020    
                  VECTOR VALUES COMNDS=$UPDMFD$,1,$DELMFD$,2,$ATTACH$,3,$MOVFIL$,4,               *004 LM00021    
                1      $SETFIL$,5,$  LINK$,6,$ ALLOT$,7,$UPDATE$,8,$RSFILE$,40                    *004 LM00022    
                2      ,$  OPEN$,10,$BUFFER$,11,$RDFILE$,12,$RDWAIT$,13,                          *004 LM00023    
                3      $WRFILE$,14,$WRWAIT$,15,$TRFILE$,16,$FCHECK$,17,                           *004 LM00024    
                4      $ CLOSE$,18,$ FWAIT$,19,                                                   *004 LM00025    
                5      $SETPRI$,20,$RESETF$,21,$CHFILE$,22,$DELFIL$,23,                           *004 LM00026    
                6      $FSTATE$,24,$UNLINK$,25,$STORGE$,26,$ATTNAM$,27,                           *004 LM00027    
                7      $ MOUNT$,30,$UMOUNT$,31,$VERIFY$,32,$ LABEL$,33,                           *004 LM00028    
                8      $TAPFIL$,34,$BVERFY$,35,$BLABEL$,36,$IODIAG$,28,                           *004 LM00029    
                9      $PRNTER$,39,$  EXIT$,41,777777777777K,40                                   *004 LM00030    
                  VECTOR VALUES TABENT = 2                                                        *005 LM00031    
                                                                                                       LM00032    
                  VECTOR VALUES FSTAT = 0,$ INACT$,575757576051K,575757576066K,                   *006 LM00033    
                1      575757605166K                                                              *006 LM00034    
                  VECTOR VALUES FDEV = 0,$ DRUM $,$ DISK $,$ TAPE $                               *007 LM00035    
                  VECTOR VALUES FENCE = 777777777777K                                             *008 LM00036    
                  VECTOR VALUES NULLS = 575757575757K                                             *009 LM00037    
                  VECTOR VALUES SP = 575757575760K                                                *010 LM00038    
                  VECTOR VALUES B3 = 575760K6                                                     *011 LM00039    
                  VECTOR VALUES MZE = 4K11                                                        *012 LM00040    
                  VECTOR VALUES ALL = $   ALL$                                                    *013 LM00041    
                  VECTOR VALUES NOSTOP = $  (GO)$                                                 *014 LM00042    
                  VECTOR VALUES FNS = $ (FNS)$                                                    *015 LM00043    
                  VECTOR VALUES STAR = $(STAR)$                                                   *016 LM00044    
                                                                                                       LM00045    
                  VECTOR VALUES MXARG = 9                                                         *017 LM00046    
                  VECTOR VALUES CHNARG = 0                                                        *018 LM00047    
                  VECTOR VALUES LMAX = 20                                                         *019 LM00048    
                  VECTOR VALUES CMAX = 72                                                         *020 LM00049    
                                                                                                       LM00050    
                  VECTOR VALUES STOP = 1B                                                         *021 LM00051    
                  VECTOR VALUES FIRST = 1B                                                        *022 LM00052    
                                                                                                       LM00053    
                      SET STANDARD ERROR RETURN                                                        LM00054    
                                                                                                       LM00055    
                  FERRTN.(S(39))                                                                  *023 LM00056    
                                                                                                       LM00057    
                      CLEAR DATA AREAS AND                                                             LM00058    
                      FIGURE OUT HOW TO GET ARGUMENTS                                                  LM00059    
                                                                                                       LM00060    
      START       THROUGH PRIME1, FOR I = 0,1,(I.G.MXARG)                                         *024 LM00061    
                       ARRY(I) = MZE                                                              *025 LM00062    
                       SN(I) = - 1                                                                *026 LM00063    
      PRIME1      CONTINUE                                                                        *027 LM00064    
                                                                                                       LM00065    
                  WHENEVER FIRST                                                                  *028 LM00066    
                       GCLS.(ARG,0)                                                               *029 LM00067    
                  OTHERWISE                                                                       *030 LM00068    
                       PRMESA.($CALL  $)                                                          *031 LM00069    
                       GTWDBI.                                                                    *032 LM00070    
                                                                                                       LM00071    
                      SECOND GO-AROUND, READ INPUT LINE AND FORMAT IT                                  LM00072    
                                                                                                       LM00073    
                       THROUGH LOOP1, FOR I = 1,1,(I.G.LMAX)                                      *033 LM00074    
                            ARG(I) = FENCE                                                        *034 LM00075    
                            GTWDB.(ARG(I),EMPTY)                                                  *035 LM00076    
      LOOP1            CONTINUE                                                                   *036 LM00077    
                  END OF CONDITIONAL                                                              *037 LM00078    
      EMPTY       J = 1                                                                           *038 LM00079    
                                                                                                       LM00080    
                      GET ALL THE PERTINENT ARGUMENTS PROCESSED                                        LM00081    
                                                                                                       LM00082    
                  THROUGH IN, FOR I = 0,1,(I.G.MXARG)                                             *039 LM00083    
                       ARRY(I) = ARG(J)                                                           *040 LM00084    
                       SN(I) = 1                                                                  *041 LM00085    
                       WHENEVER (ARRY(I) .E. $     *$)                                            *042 LM00086    
                            ARRY(I) = MZE                                                         *043 LM00087    
                            SN(I) = - 1                                                           *044 LM00088    
                       OR WHENEVER (ARRY(I) .E. NOSTOP)                                           *045 LM00089    
                            STOP = 0B                                                             *046 LM00090    
                            I = I - 1                                                             *047 LM00091    
                       OR WHENEVER (ARRY(I) .E. FENCE)                                            *048 LM00092    
                            ARRY(I) = MZE                                                         *049 LM00093    
                            SN(I) = -1                                                            *050 LM00094    
                            TRANSFER TO SELECT                                                    *051 LM00095    
                       OR WHENEVER (ARRY(I) .E. FNS)                                              *052 LM00096    
                            ARRY(I) = FENCE                                                       *053 LM00097    
                       OR WHENEVER (ARRY(I) .E. STAR)                                             *054 LM00098    
                            ARRY(I) = $     *$                                                    *055 LM00099    
                       END OF CONDITIONAL                                                         *056 LM00100    
                       J = J + 1                                                                  *057 LM00101    
                                                                                                       LM00102    
      IN          CONTINUE                                                                        *058 LM00103    
                                                                                                       LM00104    
                      SELECT THE PROPER ROUTINE AND BRANCH                                             LM00105    
                                                                                                       LM00106    
      SELECT      THROUGH SELECT, FOR I = 0,TABENT,(COMNDS(I).E.ARRY).OR.                         *059 LM00107    
                1      (COMNDS(I).E.FENCE)                                                        *059 LM00108    
                  SUBNAM.(LJUST.(ARRY))                                                           *060 LM00109    
                  TRANSFER TO S(COMNDS(I+1))                                                      *061 LM00110    
                                                                                                       LM00111    
                      PRIVILEGED COMMANDS                                                              LM00112    
                                                                                                       LM00113    
      S(1)        CALL.(PROBN.(ARRY(1)),PROGN.(ARRY(2)))                                          *062 LM00114    
                  TRANSFER TO KAPUT                                                               *063 LM00115    
                                                                                                       LM00116    
      S(2)        CALL.(PROBN.(ARRY(1)),PROGN.(ARRY(2)))                                          *064 LM00117    
                  TRANSFER TO KAPUT                                                               *065 LM00118    
                                                                                                       LM00119    
      S(3)        CALL.(PROBN.(ARRY(1)),PROGN.(ARRY(2)))                                          *066 LM00120    
                  TRANSFER TO KAPUT                                                               *067 LM00121    
                                                                                                       LM00122    
      S(4)        CALL.(ARRY(1),ARRY(2),PROBN.(ARRY(3)),PROGN.(ARRY(4)))                          *068 LM00123    
                  TRANSFER TO KAPUT                                                               *069 LM00124    
                                                                                                       LM00125    
      S(5)        CALL.(ARRY(1),ARRY(2),DATECV.(ARRY(3),S(40)).V.                                 *070 LM00126    
                1      TIMECV.(ARRY(4),S(40)),                                                    *070 LM00127    
                2      DATECV.(ARRY(5),S(40)).V.BCDEC.(ARRY(6)),                                  *070 LM00128    
                3      SN(7)*BCOCT.(ARRY(7)),SN(8)*BCDEC.(ARRY(8)))                               *070 LM00129    
                  TRANSFER TO KAPUT                                                               *071 LM00130    
                                                                                                       LM00131    
      S(6)        CALL.(ARRY(1),ARRY(2),PROBN.(ARRY(3)),PROGN.(ARRY(4)),                          *072 LM00132    
                1      ARRY(5),ARRY(6),SN(7)*BCOCT.(ARRY(7)))                                     *072 LM00133    
                  TRANSFER TO KAPUT                                                               *073 LM00134    
                                                                                                       LM00135    
      S(7)        CALL.(BCDEC.(ARRY(1)),SN(2)*BCDEC.(ARRY(2)),                                    *074 LM00136    
                1      SN(3)*BCDEC.(ARRY(3)))                                                     *074 LM00137    
                  TRANSFER TO KAPUT                                                               *075 LM00138    
                                                                                                       LM00139    
      S(8)        CALL.                                                                           *076 LM00140    
                  TRANSFER TO KAPUT                                                               *077 LM00141    
                                                                                                       LM00142    
      S(9)       RSFILE.(ARRY(1),ARRY(2))                                                              LM00143    
                 T'O KAPUT                                                                             LM00144    
                                                                                                       LM00145    
                      FILE READING AND WRITING, ETC.                                                   LM00146    
                                                                                                       LM00147    
      S(10)       CALL.(ARRY(1),ARRY(2),ARRY(3),SN(4)*BCOCT.(ARRY(4)),                            *078 LM00148    
                1      SN(5)*BCDEC.(ARRY(5)))                                                     *078 LM00149    
                  CHNARG = 1                                                                      *079 LM00150    
                  TRANSFER TO KAPUT                                                               *080 LM00151    
                                                                                                       LM00152    
      S(11)       FLINE = BCDEC.(ARRY(3))                                                         *081 LM00153    
                  CALL.(ARRY(1),ARRY(2),BUFF(432)...FLINE)                                        *082 LM00154    
                  TRANSFER TO KAPUT                                                               *083 LM00155    
                                                                                                       LM00156    
      S(12)                                                                                       *084 LM00157    
                                                                                                       LM00158    
      S(13)       WHENEVER SN(4) .L. 0                                                            *085 LM00159    
                       COUNT = 1                                                                  *086 LM00160    
                  OTHERWISE                                                                       *087 LM00161    
                       COUNT = BCDEC.(ARRY(4))                                                    *088 LM00162    
                       WHENEVER COUNT .G. 20, COUNT = 20                                          *089 LM00163    
                  END OF CONDITIONAL                                                              *090 LM00164    
                  CALL.(ARRY(1),ARRY(2),BCDEC.(ARRY(3)),ARG(20)...COUNT,                          *091 LM00165    
                1      EOF1,COUNT)                                                                *091 LM00166    
                  TRANSFER TO PWORD                                                               *092 LM00167    
                                                                                                       LM00168    
      EOF1        PRMESS.($EOF$)                                                                  *093 LM00169    
                                                                                                       LM00170    
      PWORD       COUNT = 20 - COUNT                                                              *094 LM00171    
                  THROUGH LOOP13, FOR I = 20,-1,(I.LE.COUNT)                                      *095 LM00172    
                       PRMESS.(OCLBC.(ARG(I)),OCRBC.(ARG(I)))                                     *096 LM00173    
      LOOP13      CONTINUE                                                                        *097 LM00174    
                  TRANSFER TO KAPUT                                                               *098 LM00175    
                                                                                                       LM00176    
      S(14)                                                                                       *099 LM00177    
                                                                                                       LM00178    
      S(15)       FLINE = (BCOCT.(ARRY(4)).LS.18) .V. BCOCT.(ARRY(5))                             *100 LM00179    
                  CALL.(ARRY(1),ARRY(2),BCDEC.(ARRY(3)),FLINE...1,EOF2)                           *101 LM00180    
                  TRANSFER TO KAPUT                                                               *102 LM00181    
                                                                                                       LM00182    
      EOF2        PRMESS.($EOF$)                                                                  *103 LM00183    
                  TRANSFER TO KAPUT                                                               *104 LM00184    
                                                                                                       LM00185    
                      SINCE 'TRFILE' IS SUCH A HANDY WAY TO MAKE DUMMY                                 LM00186    
                      FILES, THIS ENTRY WORKS IN TWO WAYS, DEPENDING ON                                LM00187    
                      WHETHER OR NOT THIS IS THE FIRST FUNCTION REQUESTED                              LM00188    
                      OF 'CALL'.                                                                       LM00189    
                                                                                                       LM00190    
      S(16)       WHENEVER FIRST                                                                  *105 LM00191    
                       OPEN.($W$,ARRY(1),ARRY(2))                                                 *106 LM00192    
                       BUFFER.(ARRY(1),ARRY(2),BUFF(432)...432)                                   *107 LM00193    
                       TRFILE.(ARRY(1),ARRY(2),BCDEC.(ARRY(3)))                                   *108 LM00194    
                       CLOSE.(ARRY(1),ARRY(2))                                                    *109 LM00195    
                  OTHERWISE                                                                       *110 LM00196    
                       CALL.(ARRY(1),ARRY(2),BCDEC.(ARRY(3)))                                     *111 LM00197    
                  END OF CONDITIONAL                                                              *112 LM00198    
                  TRANSFER TO KAPUT                                                               *113 LM00199    
                                                                                                       LM00200    
      S(17)       CALL.(ARRY(1),ARRY(2),FINISH)                                                   *114 LM00201    
                  TRANSFER TO KAPUT                                                               *115 LM00202    
                                                                                                       LM00203    
      FINISH      PRMESS.($FINISH$)                                                               *116 LM00204    
                  TRANSFER TO KAPUT                                                               *117 LM00205    
                                                                                                       LM00206    
      S(18)       CALL.(ARRY(1),ARRY(2))                                                          *118 LM00207    
                  TRANSFER TO KAPUT                                                               *119 LM00208    
                                                                                                       LM00209    
      S(19)       CALL.(ARRY(1),ARRY(2))                                                          *120 LM00210    
                  TRANSFER TO KAPUT                                                               *121 LM00211    
                                                                                                       LM00212    
                      MISCELLANEOUS FILE MANIPULATIONS                                                 LM00213    
                                                                                                       LM00214    
      S(20)       CALL.(ARRY(1).A.7K)                                                             *122 LM00215    
                  TRANSFER TO KAPUT                                                               *123 LM00216    
                                                                                                       LM00217    
      S(21)       CALL.                                                                           *124 LM00218    
                  TRANSFER TO KAPUT                                                               *125 LM00219    
                                                                                                       LM00220    
      S(22)       CALL.(ARRY(1),ARRY(2),SN(3)*BCOCT.(ARRY(3)),                                    *126 LM00221    
                1      ARRY(4),ARRY(5))                                                           *126 LM00222    
                  TRANSFER TO KAPUT                                                               *127 LM00223    
                                                                                                       LM00224    
      S(23)       CALL.(ARRY(1),ARRY(2))                                                          *128 LM00225    
                  TRANSFER TO KAPUT                                                               *129 LM00226    
                                                                                                       LM00227    
      S(24)       CALL.(ARRY(1),ARRY(2),A(8)...8)                                                 *130 LM00228    
                  WHENEVER (A(7) .RS. 35) .E. 1                                                   *131 LM00229    
                       LBIT = 575757604360K                                                       *132 LM00230    
                  OTHERWISE                                                                       *133 LM00231    
                       LBIT = NULLS                                                               *134 LM00232    
                  END OF CONDITIONAL                                                              *135 LM00233    
                  PRMESS.(BZEL.(DEFBC.(A(8))),LBIT,OCRBC.(A(7)).V.B3,                             *136 LM00234    
                1      FSTAT(A(6)),FDEV(A(5)),BZEL.(DEFBC.(A(4))),SP,                             *136 LM00235    
                2      BZEL.(DEFBC.(A(3))),SP,CVDATE.(A(2)),CVTIME.(A(2)),                        *136 LM00236    
                3      SP,CVDATE.(A(1)),BZEL.(DERBC.(A(1))))                                      *136 LM00237    
                  TRANSFER TO KAPUT                                                               *137 LM00238    
                                                                                                       LM00239    
      S(25)       CALL.(ARRY(1),ARRY(2))                                                          *138 LM00240    
                  TRANSFER TO KAPUT                                                               *139 LM00241    
                                                                                                       LM00242    
      S(26)       CALL.(BCOCT.(ARRY(1)),ALLOTD,USED)                                              *140 LM00243    
                  PRMESS.(BZEL.(DEFBC.(ALLOTD)),BZEL.(DEFBC.(USED)))                              *141 LM00244    
                  TRANSFER TO KAPUT                                                               *142 LM00245    
                                                                                                       LM00246    
      S(27)       CALL.(A(4)...4)                                                                 *143 LM00247    
                  PRMESS.(A(4),SP,A(3),BZEL.(DERBC.(A(2))),                                       *144 LM00248    
                1      A(1) .V. 575757576000K)                                                    *144 LM00249    
                  TRANSFER TO KAPUT                                                               *145 LM00250    
                                                                                                       LM00251    
      S(28)       CALL.(A(7)...7)                                                                 *146 LM00252    
                  WHENEVER (A(7) .A. 1K6) .NE. 0                                                  *147 LM00253    
                       LBIT = 575740214060K                                                       *148 LM00254    
                  OTHERWISE                                                                       *149 LM00255    
                       LBIT = NULLS                                                               *150 LM00256    
                  END OF CONDITIONAL                                                              *151 LM00257    
                  PRMESS.(LBIT,(OCABC.(A(7)).LS.6).V.$00000 $,A(6),                               *152 LM00258    
                1      DEFBC.(A(5)).V.B3,(DEFBC.(A(4)).LS.6).V.                                   *152 LM00259    
                2      575757600060K,A(3),SP,A(2),OCABC.(A(1)))                                   *152 LM00260    
                  TRANSFER TO KAPUT                                                               *153 LM00261    
                                                                                                       LM00262    
                                                                                                       LM00263    
                      TAPE HANDLING COMMANDS                                                           LM00264    
                                                                                                       LM00265    
      S(30)       PRMESS.($ TYPE MESSAGE$)                                                        *154 LM00266    
                  RDFLXC.(MESSAG(1),CMAX)                                                         *155 LM00267    
                  CALL.(SN(1)*BCDEC.(ARRY(1)),BCDEC.(ARRY(2)),                                    *156 LM00268    
                1      MESSAG(20)...LMAX)                                                         *156 LM00269    
                  TRANSFER TO KAPUT                                                               *157 LM00270    
                                                                                                       LM00271    
      S(31)       PRMESS.($ TYPE MESSAGE$)                                                        *158 LM00272    
                  RDFLXC.(MESSAG(1),CMAX)                                                         *159 LM00273    
                  WHENEVER ARRY(1).E.ALL                                                          *160 LM00274    
                       ARRY(1) = $ALL$                                                            *161 LM00275    
                  OTHERWISE                                                                       *162 LM00276    
                       ARRY(1) = BCDEC.(ARRY(1))                                                  *163 LM00277    
                  END OF CONDITIONAL                                                              *164 LM00278    
                  CALL.(ARRY(1),MESSAG(20)...LMAX)                                                *165 LM00279    
                  TRANSFER TO KAPUT                                                               *166 LM00280    
                                                                                                       LM00281    
      S(32)       PRMESS.($ TYPE BCD LABEL$)                                                      *167 LM00282    
                  RDFLXC.(MESSAG(1),24)                                                           *168 LM00283    
                  CALL.(BCDEC.(ARRY(1)),MESSAG(4)...4)                                            *169 LM00284    
                  TRANSFER TO KAPUT                                                               *170 LM00285    
                                                                                                       LM00286    
      S(33)       PRMESS.($ TYPE BCD LABEL$)                                                      *171 LM00287    
                  RDFLXC.(MESSAG(1),24)                                                           *172 LM00288    
                  CALL.(BCDEC.(ARRY(1)),MESSAG(4)...4)                                            *173 LM00289    
                  TRANSFER TO KAPUT                                                               *174 LM00290    
                                                                                                       LM00291    
      S(34)       CALL.(ARRY(1),ARRY(2),BCDEC.(ARRY(3)),                                          *175 LM00292    
                1      SN(4)*BCDEC.(ARRY(4)))                                                     *175 LM00293    
                  TRANSFER TO KAPUT                                                               *176 LM00294    
                                                                                                       LM00295    
      S(35)       PRMESS.($ TYPE OCTAL LABEL$)                                                    *177 LM00296    
                  RDFLXC.(MESSAG(1),24)                                                           *178 LM00297    
                  THROUGH LOOP35, FOR I=1,1,I.G.4                                                 *179 LM00298    
                  MESSAG(21-I) = BCOCT.(MESSAG(I))                                                *180 LM00299    
      LOOP35      CONTINUE                                                                        *181 LM00300    
                  VERIFY.(BCDEC.(ARRY(1)),MESSAG(20)...4)                                         *182 LM00301    
                  TRANSFER TO KAPUT                                                               *183 LM00302    
                                                                                                       LM00303    
      S(36)       PRMESS.($ TYPE OCTAL LABEL$)                                                    *184 LM00304    
                  RDFLXC.(MESSAG(1),24)                                                           *185 LM00305    
                  THROUGH LOOP36, FOR I=1,1,I.G.4                                                 *186 LM00306    
                       MESSAG(21-I) = BCOCT.(MESSAG(I))                                           *187 LM00307    
      LOOP36      CONTINUE                                                                        *188 LM00308    
                  LABEL.(BCDEC.(ARRY(1)),MESSAG(20)...4)                                          *189 LM00309    
                  TRANSFER TO KAPUT                                                               *190 LM00310    
                                                                                                       LM00311    
                      ERROR COMMENT AND EXIT                                                           LM00312    
                                                                                                       LM00313    
      S(39)       PRNTER.                                                                         *191 LM00314    
                  TRANSFER TO KAPUT                                                               *192 LM00315    
                                                                                                       LM00316    
      S(40)       PRMESS.($ FILE CALL $,ARRY,$ NOT UNDERSTOOD$)                                   *193 LM00317    
      KAPUT       WHENEVER .NOT. STOP                                                             *194 LM00318    
                       FIRST = 0B                                                                 *195 LM00319    
                       TRANSFER TO START                                                          *196 LM00320    
                  OTHERWISE                                                                       *197 LM00321    
      S(41)            EXIT.(CHNARG)                                                              *198 LM00322    
                  END OF CONDITIONAL                                                              *199 LM00323    
                                                                                                       LM00324    
                  END OF PROGRAM                                                                  *200 LM00325    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   02775 TRANSFER VECTOR LENGTH  00041 PROGRAM BEGINS    01335
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ALLOTD 00124   1        COUNT  01177   1        FSTAT  01214 A 1        LOOP35 00041   4        SELECT 00050   4  
      ALL    00125 A 1        EMPTY  00042   4        IN     00041   4        LOOP36 00041   4        SN     01263 A 1  
      ARG    00152 A 1        EOF1   00043   4        I      01215   1        MESSAG 01245 A 1        SP     01264 A 1  
      ARRY   00164 A 1        EOF2   00044   4        J      01216   1        MXARG  01246 A 1        S      00122 A 4  
      A      00176 A 1        FDEV   01203 A 1        KAPUT  00046   4        MZE    01247 A 1        STAR   01265 A 1  
      B3     00177 A 1        FENCE  01204 A 1        LBIT   01217   1        NOSTOP 01250 A 1        START  00123   4  
      BUFF   01060 A 1        FINISH 00045   4        LMAX   01220 A 1        NULLS  01251 A 1        STOP   01266 A 2  
      CHNARG 01061 A 1        FIRST  01205 A 2        LOOP13 00041   4        PRIME1 00041   4        TABENT 01267 A 1  
      CMAX   01062 A 1        FLINE  01206   1        LOOP1  00041   4        PWORD  00047   4        USED   01270   1  
      COMNDS 01176 A 1        FNS    01207 A 1                                                                          
0FUNCTION DICTIONARY    
      BCDEC  00000   1        BCOCT  00001   1        BUFFER 00002   1        BZEL   00003   1        CALL   00004   1  
      CLOSE  00005   1        CVDATE 00006   1        CVTIME 00007   1        DATECV 00010   1        DEFBC  00011   1  
      DERBC  00012   1        EXIT   00013   1        FERRTN 00014   1        GCLS   00015   1        GTWDBI 00016   1  
      GTWDB  00017   1        .SETUP 00020   1        LABEL  00021   1        LJUST  00022   1        OCABC  00023   1  
      OCLBC  00024   1        OCRBC  00025   1        OPEN   00026   1        PRMESA 00027   1        PRMESS 00030   1  
      PRNTER 00031   1        PROBN  00032   1        PROGN  00033   1        RDFLXC 00034   1        SUBNAM 00035   1  
      TIMECV 00036   1        TRFILE 00037   1        VERIFY 00040   1                                                  
0ABSOLUTE CONSTANTS     
 01323 -064624606060     01321 -052425516263     01331 -204546636064     01330 -202631432560     01301 +000000000025    
 01317 -032122254360     01322 -062363214360     01302 +000000000030     01311 +222543606060     01310 +222324604321    
 01307 +214343606060     01315 +256060606060     01320 -042562622127     01333 -206370472560     01304 +000000000060    
 01326 -175757600060     01274 +000000000006     01324 -175740214060     01306 +000001000000     01325 -175757576000    
 01273 +000000000004     01327 -175757604360     01303 +000000000043     01276 +000000000010     01275 +000000000007    
 01316 +263145316230     01305 +000000000660     01334 -266060606060     01277 +000000000022     01314 +254626606060    
 01300 +000000000024     01332 -206060606054     01312 +232143436060     01271 +000000000000     01272 +000000000001    
 01313 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00042 TXL -301420001416       00043 TXL -302027002025       00044 TXL -302117002115       00045 TXL -302164002162      
 00046 TXL -302754002752       00047 TXL -302032002027       00050 TXL -301533001515       00051 TXL -302762002760      
 00052 TXL -302752002743       00053 TXL -302742002741       00056 TXL -302700002674       00057 TXL -302633002627      
 00060 TXL -302626002611       00061 TXL -302577002573       00062 TXL -302561002555       00063 TXL -302535002531      
 00064 TXL -302511002505       00066 TXL -302424002422       00067 TXL -302402002400       00070 TXL -302360002351      
 00071 TXL -302350002345       00072 TXL -302231002225       00073 TXL -302224002221       00074 TXL -302220002205      
 00075 TXL -302204002203       00076 TXL -302202002175       00077 TXL -302174002171       00100 TXL -302170002165      
 00101 TXL -302161002155       00102 TXL -302122002120       00103 TXL -302103002067       00104 TXL -302067002067      
 00105 TXL -301776001772       00106 TXL -301772001772       00107 TXL -301765001762       00110 TXL -301757001737      
 00112 TXL -301736001735       00113 TXL -301734001713       00114 TXL -301712001667       00115 TXL -301666001620      
 00116 TXL -301617001604       00117 TXL -301603001572       00120 TXL -301571001560       00121 TXL -301557001546      
 00123 TXL -301352001340                                                                                                
0PROGRAM    
                 N'R                                                                001  LM00017
                 B'N STOP,FIRST                                                     002  LM00018
                 D'N A(9),ARRY(9),SN(9),BUFF(432),MESSAG(20),ARG(20)                003  LM00020
                 V'S COMNDS=$UPDMFD$,1,$DELMFD$,2,$ATTACH$,3,$MOVFIL$,4,            004  LM00021
                1     $SETFIL$,5,$  LINK$,6,$ ALLOT$,7,$UPDATE$,8,$RSFILE$,40       004  LM00022
                2     ,$  OPEN$,10,$BUFFER$,11,$RDFILE$,12,$RDWAIT$,13,             004  LM00023
                3     $WRFILE$,14,$WRWAIT$,15,$TRFILE$,16,$FCHECK$,17,              004  LM00024
                4     $ CLOSE$,18,$ FWAIT$,19,                                      004  LM00025
                5     $SETPRI$,20,$RESETF$,21,$CHFILE$,22,$DELFIL$,23,              004  LM00026
                6     $FSTATE$,24,$UNLINK$,25,$STORGE$,26,$ATTNAM$,27,              004  LM00027
                7     $ MOUNT$,30,$UMOUNT$,31,$VERIFY$,32,$ LABEL$,33,              004  LM00028
                8     $TAPFIL$,34,$BVERFY$,35,$BLABEL$,36,$IODIAG$,28,              004  LM00029
                9     $PRNTER$,39,$  EXIT$,41,777777777777K,40                      004  LM00030
 01335 TSX +0 07400 4 00020    01063     +0 00000 0 00050    01064     -3 77777 7 77777    01065     +0 00000 0 00051   
 01066     -2 06025 6 73163    01067     +0 00000 0 00047    01070     -0 75145 6 32551    01071     +0 00000 0 00034   
 01072     +3 14624 3 12127    01073     +0 00000 0 00044    01074     +2 24321 2 22543    01075     +0 00000 0 00043   
 01076     +2 26525 5 12670    01077     +0 00000 0 00042    01100     -2 32147 2 63143    01101     +0 00000 0 00041   
 01102     -2 04321 2 22543    01103     +0 00000 0 00040    01104     -2 52551 3 12670    01105     +0 00000 0 00037   
 01106     -2 44446 6 44563    01107     +0 00000 0 00036    01110     -2 04446 6 44563    01111     +0 00000 0 00033   
 01112     +2 16363 4 52144    01113     +0 00000 0 00032    01114     -2 26346 5 12725    01115     +0 00000 0 00031   
 01116     -2 44543 3 14542    01117     +0 00000 0 00030    01120     +2 66263 2 16325    01121     +0 00000 0 00027   
 01122     +2 42543 2 63143    01123     +0 00000 0 00026    01124     +2 33026 3 14325    01125     +0 00000 0 00025   
 01126     -1 12562 2 56326    01127     +0 00000 0 00024    01130     -2 22563 4 75131    01131     +0 00000 0 00023   
 01132     -2 02666 2 13163    01133     +0 00000 0 00022    01134     -2 02343 4 66225    01135     +0 00000 0 00021   
 01136     +2 62330 2 52342    01137     +0 00000 0 00020    01140     -2 35126 3 14325    01141     +0 00000 0 00017   
 01142     -2 65166 2 13163    01143     +0 00000 0 00016    01144     -2 65126 3 14325    01145     +0 00000 0 00015   
 01146     -1 12466 2 13163    01147     +0 00000 0 00014    01150     -1 12426 3 14325    01151     +0 00000 0 00013   
 01152     +2 26426 2 62551    01153     +0 00000 0 00012    01154     -2 06046 4 72545    01155     +0 00000 0 00050   
 01156     -1 16226 3 14325    01157     +0 00000 0 00010    01160     -2 44724 2 16325    01161     +0 00000 0 00007   
 01162     -2 02143 4 34663    01163     +0 00000 0 00006    01164     -2 06043 3 14542    01165     +0 00000 0 00005   
 01166     -2 22563 2 63143    01167     +0 00000 0 00004    01170     -0 44665 2 63143    01171     +0 00000 0 00003   
 01172     +2 16363 2 12330    01173     +0 00000 0 00002    01174     +2 42543 4 42624    01175     +0 00000 0 00001   
 01176     -2 44724 4 42624                                                                                             
                 V'S TABENT = 2                                                     005  LM00031
 01267     +0 00000 0 00002                                                                                             
                 V'S FSTAT = 0,$ INACT$,575757576051K,575757576066K,                006  LM00033
                1     575757605166K                                                 006  LM00034
 01210     -1 75757 6 05166    01211     -1 75757 5 76066    01212     -1 75757 5 76051    01213     -2 03145 2 12363   
 01214     +0 00000 0 00000                                                                                             
                 V'S FDEV = 0,$ DRUM $,$ DISK $,$ TAPE $                            007  LM00035
 01200     -2 06321 4 72560    01201     -2 02431 6 24260    01202     -2 02451 6 44460    01203     +0 00000 0 00000   
                 V'S FENCE = 777777777777K                                          008  LM00036
 01204     -3 77777 7 77777                                                                                             
                 V'S NULLS = 575757575757K                                          009  LM00037
 01251     -1 75757 5 75757                                                                                             
                 V'S SP = 575757575760K                                             010  LM00038
 01264     -1 75757 5 75760                                                                                             
                 V'S B3 = 575760K6                                                  011  LM00039
 00177     -1 75760 0 00000                                                                                             
                 V'S MZE = 4K11                                                     012  LM00040
 01247     -0 00000 0 00000                                                                                             
                 V'S ALL = $   ALL$                                                 013  LM00041
 00125     -2 06060 2 14343                                                                                             
                 V'S NOSTOP = $  (GO)$                                              014  LM00042
 01250     -2 06074 2 74634                                                                                             
                 V'S FNS = $ (FNS)$                                                 015  LM00043
 01207     -2 07426 4 56234                                                                                             
                 V'S STAR = $(STAR)$                                                016  LM00044
 01265     -3 46263 2 15134                                                                                             
                 V'S MXARG = 9                                                      017  LM00046
 01246     +0 00000 0 00011                                                                                             
                 V'S CHNARG = 0                                                     018  LM00047
 01061     +0 00000 0 00000                                                                                             
                 V'S LMAX = 20                                                      019  LM00048
 01220     +0 00000 0 00024                                                                                             
                 V'S CMAX = 72                                                      020  LM00049
 01062     +0 00000 0 00110                                                                                             
                 V'S STOP = 1B                                                      021  LM00051
 01266     +0 00000 0 00001                                                                                             
                 V'S FIRST = 1B                                                     022  LM00052
 01205     +0 00000 0 00001                                                                                             
                 FERRTN.(S(39))                                                     023  LM00056
 01336 TSX +0 07400 4 00014    01337 TXH +3 00000 0 00053                                                               
      START      T'H PRIME1, FOR I = 0,1,(I.G.MXARG)                                024  LM00061
 01340 CLA +0 50000 0 01271    01341 STO +0 60100 0 01215    01342 TRA +0 02000 0 01346    01343 CLA +0 50000 0 01215   
 01344 ADD +0 40000 0 01272    01345 STO +0 60100 0 01215    01346 CLA +0 50000 0 01215    01347 SUB +0 40200 0 01246   
 01350 TZE +0 10000 0 01352    01351 TPL +0 12000 0 01360                                                               
                      ARRY(I) = MZE                                                 025  LM00062
 01352 LXA +0 53400 1 01215    01353 CLA +0 50000 0 01247    01354 STO +0 60100 1 00164                                 
                      SN(I) = - 1                                                   026  LM00063
 01355 CLS +0 50200 0 01272    01356 STO +0 60100 1 01263                                                               
      PRIME1     C'E                                                                027  LM00064
 01357 TRA +0 02000 0 01343                                                                                             
                 W'R FIRST                                                          028  LM00066
 01360 NZT -0 52000 0 01205    01361 TRA +0 02000 0 01366                                                               
                      GCLS.(ARG,0)                                                  029  LM00067
 01362 TSX +0 07400 4 00015    01363 TXH +3 00000 0 00152    01364 TXH +3 00000 0 01271                                 
                 O'E                                                                030  LM00068
 01365 TRA +0 02000 0 01416                                                                                             
                      PRMESA.($CALL  $)                                             031  LM00069
 01366 TSX +0 07400 4 00027    01367 TXH +3 00000 0 01312                                                               
                      GTWDBI.                                                       032  LM00070
 01370 TSX +0 07400 4 00016                                                                                             
                      T'H LOOP1, FOR I = 1,1,(I.G.LMAX)                             033  LM00074
 01371 CLA +0 50000 0 01272    01372 STO +0 60100 0 01215    01373 TRA +0 02000 0 01377    01374 CLA +0 50000 0 01215   
 01375 ADD +0 40000 0 01272    01376 STO +0 60100 0 01215    01377 CLA +0 50000 0 01215    01400 SUB +0 40200 0 01220   
 01401 TZE +0 10000 0 01403    01402 TPL +0 12000 0 01416                                                               
                           ARG(I) = FENCE                                           034  LM00075
 01403 LXA +0 53400 1 01215    01404 CLA +0 50000 0 01204    01405 STO +0 60100 1 00152                                 
                           GTWDB.(ARG(I),EMPTY)                                     035  LM00076
 01406 CLA +0 50000 0 01215    01407 SUB +0 40200 0 01410    01410 TXH +3 00000 0 00152    01411 STA +0 62100 0 01413   
 01412 TSX +0 07400 4 00017    01413 TXH +3 00000 0 00000    01414 TXH +3 00000 0 00042                                 
      LOOP1           C'E                                                           036  LM00077
 01415 TRA +0 02000 0 01374                                                                                             
                 E'L                                                                037  LM00078
      EMPTY      J = 1                                                              038  LM00079
 01416 CLA +0 50000 0 01272    01417 STO +0 60100 0 01216                                                               
                 T'H IN, FOR I = 0,1,(I.G.MXARG)                                    039  LM00083
 01420 CLA +0 50000 0 01271    01421 STO +0 60100 0 01215    01422 TRA +0 02000 0 01426    01423 CLA +0 50000 0 01215   
 01424 ADD +0 40000 0 01272    01425 STO +0 60100 0 01215    01426 CLA +0 50000 0 01215    01427 SUB +0 40200 0 01246   
 01430 TZE +0 10000 0 01432    01431 TPL +0 12000 0 01515                                                               
                      ARRY(I) = ARG(J)                                              040  LM00084
 01432 LXA +0 53400 1 01215    01433 LXA +0 53400 2 01216    01434 CLA +0 50000 2 00152    01435 STO +0 60100 1 00164   
                      SN(I) = 1                                                     041  LM00085
 01436 CLA +0 50000 0 01272    01437 STO +0 60100 1 01263                                                               
                      W'R (ARRY(I) .E. $     *$)                                    042  LM00086
 01440 CLA +0 50000 1 00164    01441 SUB +0 40200 0 01332    01442 TNZ -0 10000 0 01450                                 
                           ARRY(I) = MZE                                            043  LM00087
 01443 CLA +0 50000 0 01247    01444 STO +0 60100 1 00164                                                               
                           SN(I) = - 1                                              044  LM00088
 01445 CLS +0 50200 0 01272    01446 STO +0 60100 1 01263                                                               
                      O'R (ARRY(I) .E. NOSTOP)                                      045  LM00089
 01447 TRA +0 02000 0 01511    01450 LXA +0 53400 1 01215    01451 CLA +0 50000 1 00164    01452 SUB +0 40200 0 01250   
 01453 TNZ -0 10000 0 01462                                                                                             
                           STOP = 0B                                                046  LM00090
 01454 CLA +0 50000 0 01271    01455 STO +0 60100 0 01266                                                               
                           I = I - 1                                                047  LM00091
 01456 CLA +0 50000 0 01215    01457 SUB +0 40200 0 01272    01460 STO +0 60100 0 01215                                 
                      O'R (ARRY(I) .E. FENCE)                                       048  LM00092
 01461 TRA +0 02000 0 01511    01462 LXA +0 53400 1 01215    01463 CLA +0 50000 1 00164    01464 SUB +0 40200 0 01204   
 01465 TNZ -0 10000 0 01474                                                                                             
                           ARRY(I) = MZE                                            049  LM00093
 01466 CLA +0 50000 0 01247    01467 STO +0 60100 1 00164                                                               
                           SN(I) = -1                                               050  LM00094
 01470 CLS +0 50200 0 01272    01471 STO +0 60100 1 01263                                                               
                           T'O SELECT                                               051  LM00095
 01472 TRA +0 02000 0 00050                                                                                             
                      O'R (ARRY(I) .E. FNS)                                         052  LM00096
 01473 TRA +0 02000 0 01511    01474 LXA +0 53400 1 01215    01475 CLA +0 50000 1 00164    01476 SUB +0 40200 0 01207   
 01477 TNZ -0 10000 0 01503                                                                                             
                           ARRY(I) = FENCE                                          053  LM00097
 01500 CLA +0 50000 0 01204    01501 STO +0 60100 1 00164                                                               
                      O'R (ARRY(I) .E. STAR)                                        054  LM00098
 01502 TRA +0 02000 0 01511    01503 LXA +0 53400 1 01215    01504 CLA +0 50000 1 00164    01505 SUB +0 40200 0 01265   
 01506 TNZ -0 10000 0 01511                                                                                             
                           ARRY(I) = $     *$                                       055  LM00099
 01507 CLA +0 50000 0 01332    01510 STO +0 60100 1 00164                                                               
                      E'L                                                           056  LM00100
                      J = J + 1                                                     057  LM00101
 01511 CLA +0 50000 0 01216    01512 ADD +0 40000 0 01272    01513 STO +0 60100 0 01216                                 
      IN         C'E                                                                058  LM00103
 01514 TRA +0 02000 0 01423                                                                                             
      SELECT     T'H SELECT, FOR I = 0,TABENT,(COMNDS(I).E.ARRY).OR.                059  LM00107
                1     (COMNDS(I).E.FENCE)                                           059  LM00108
 01515 CLA +0 50000 0 01271    01516 STO +0 60100 0 01215    01517 TRA +0 02000 0 01523    01520 CLA +0 50000 0 01215   
 01521 ADD +0 40000 0 01267    01522 STO +0 60100 0 01215    01523 LXA +0 53400 1 01215    01524 CLA +0 50000 1 01176   
 01525 SUB +0 40200 0 01204    01526 TZE +0 10000 0 01533    01527 CLA +0 50000 1 01176    01530 SUB +0 40200 0 00164   
 01531 TZE +0 10000 0 01533    01532 TRA +0 02000 0 01520                                                               
                 SUBNAM.(LJUST.(ARRY))                                              060  LM00109
 01533 TSX +0 07400 4 00022    01534 TXH +3 00000 0 00164    01535 STO +0 60100 0 02763    01536 TSX +0 07400 4 00035   
 01537 TXH +3 00000 0 02763                                                                                             
                 T'O S(COMNDS(I+1))                                                 061  LM00110
 01540 CLA +0 50000 0 01215    01541 ADD +0 40000 0 01272    01542 PAX +0 73400 1 00000    01543 CLA +0 50000 1 01176   
 01544 PAX +0 73400 2 00000    01545 TRA +0 02000 2 00122                                                               
      S(1)       CALL.(PROBN.(ARRY(1)),PROGN.(ARRY(2)))                             062  LM00114
 01546 TSX +0 07400 4 00033    01547 TXH +3 00000 0 00162    01550 STO +0 60100 0 02763    01551 TSX +0 07400 4 00032   
 01552 TXH +3 00000 0 00163    01553 STO +0 60100 0 02764    01554 TSX +0 07400 4 00004    01555 TXH +3 00000 0 02764   
 01556 TXH +3 00000 0 02763                                                                                             
                 T'O KAPUT                                                          063  LM00115
 01557 TRA +0 02000 0 00046                                                                                             
      S(2)       CALL.(PROBN.(ARRY(1)),PROGN.(ARRY(2)))                             064  LM00117
 01560 TSX +0 07400 4 00033    01561 TXH +3 00000 0 00162    01562 STO +0 60100 0 02764    01563 TSX +0 07400 4 00032   
 01564 TXH +3 00000 0 00163    01565 STO +0 60100 0 02763    01566 TSX +0 07400 4 00004    01567 TXH +3 00000 0 02763   
 01570 TXH +3 00000 0 02764                                                                                             
                 T'O KAPUT                                                          065  LM00118
 01571 TRA +0 02000 0 00046                                                                                             
      S(3)       CALL.(PROBN.(ARRY(1)),PROGN.(ARRY(2)))                             066  LM00120
 01572 TSX +0 07400 4 00033    01573 TXH +3 00000 0 00162    01574 STO +0 60100 0 02764    01575 TSX +0 07400 4 00032   
 01576 TXH +3 00000 0 00163    01577 STO +0 60100 0 02763    01600 TSX +0 07400 4 00004    01601 TXH +3 00000 0 02763   
 01602 TXH +3 00000 0 02764                                                                                             
                 T'O KAPUT                                                          067  LM00121
 01603 TRA +0 02000 0 00046                                                                                             
      S(4)       CALL.(ARRY(1),ARRY(2),PROBN.(ARRY(3)),PROGN.(ARRY(4)))             068  LM00123
 01604 TSX +0 07400 4 00033    01605 TXH +3 00000 0 00160    01606 STO +0 60100 0 02764    01607 TSX +0 07400 4 00032   
 01610 TXH +3 00000 0 00161    01611 STO +0 60100 0 02763    01612 TSX +0 07400 4 00004    01613 TXH +3 00000 0 00163   
 01614 TXH +3 00000 0 00162    01615 TXH +3 00000 0 02763    01616 TXH +3 00000 0 02764                                 
                 T'O KAPUT                                                          069  LM00124
 01617 TRA +0 02000 0 00046                                                                                             
      S(5)       CALL.(ARRY(1),ARRY(2),DATECV.(ARRY(3),S(40)).V.                    070  LM00126
                1     TIMECV.(ARRY(4),S(40)),                                       070  LM00127
                2     DATECV.(ARRY(5),S(40)).V.BCDEC.(ARRY(6)),                     070  LM00128
                3     SN(7)*BCOCT.(ARRY(7)),SN(8)*BCDEC.(ARRY(8)))                  070  LM00129
 01620 TSX +0 07400 4 00000    01621 TXH +3 00000 0 00154    01622 XCA +0 13100 0 00000    01623 MPY +0 20000 0 01253   
 01624 STQ -0 60000 0 02764    01625 TSX +0 07400 4 00001    01626 TXH +3 00000 0 00155    01627 XCA +0 13100 0 00000   
 01630 MPY +0 20000 0 01254    01631 STQ -0 60000 0 02763    01632 TSX +0 07400 4 00000    01633 TXH +3 00000 0 00156   
 01634 STO +0 60100 0 02765    01635 TSX +0 07400 4 00010    01636 TXH +3 00000 0 00157    01637 TXH +3 00000 0 00052   
 01640 STO +0 60100 0 02766    01641 CAL -0 50000 0 02766    01642 ORA -0 50100 0 02765    01643 SLW +0 60200 0 02766   
 01644 TSX +0 07400 4 00036    01645 TXH +3 00000 0 00160    01646 TXH +3 00000 0 00052    01647 STO +0 60100 0 02765   
 01650 TSX +0 07400 4 00010    01651 TXH +3 00000 0 00161    01652 TXH +3 00000 0 00052    01653 STO +0 60100 0 02767   
 01654 CAL -0 50000 0 02767    01655 ORA -0 50100 0 02765    01656 SLW +0 60200 0 02767    01657 TSX +0 07400 4 00004   
 01660 TXH +3 00000 0 00163    01661 TXH +3 00000 0 00162    01662 TXH +3 00000 0 02767    01663 TXH +3 00000 0 02766   
 01664 TXH +3 00000 0 02763    01665 TXH +3 00000 0 02764                                                               
                 T'O KAPUT                                                          071  LM00130
 01666 TRA +0 02000 0 00046                                                                                             
      S(6)       CALL.(ARRY(1),ARRY(2),PROBN.(ARRY(3)),PROGN.(ARRY(4)),             072  LM00132
                1     ARRY(5),ARRY(6),SN(7)*BCOCT.(ARRY(7)))                        072  LM00133
 01667 TSX +0 07400 4 00001    01670 TXH +3 00000 0 00155    01671 XCA +0 13100 0 00000    01672 MPY +0 20000 0 01254   
 01673 STQ -0 60000 0 02767    01674 TSX +0 07400 4 00033    01675 TXH +3 00000 0 00160    01676 STO +0 60100 0 02766   
 01677 TSX +0 07400 4 00032    01700 TXH +3 00000 0 00161    01701 STO +0 60100 0 02765    01702 TSX +0 07400 4 00004   
 01703 TXH +3 00000 0 00163    01704 TXH +3 00000 0 00162    01705 TXH +3 00000 0 02765    01706 TXH +3 00000 0 02766   
 01707 TXH +3 00000 0 00157    01710 TXH +3 00000 0 00156    01711 TXH +3 00000 0 02767                                 
                 T'O KAPUT                                                          073  LM00134
 01712 TRA +0 02000 0 00046                                                                                             
      S(7)       CALL.(BCDEC.(ARRY(1)),SN(2)*BCDEC.(ARRY(2)),                       074  LM00136
                1     SN(3)*BCDEC.(ARRY(3)))                                        074  LM00137
 01713 TSX +0 07400 4 00000    01714 TXH +3 00000 0 00161    01715 XCA +0 13100 0 00000    01716 MPY +0 20000 0 01260   
 01717 STQ -0 60000 0 02767    01720 TSX +0 07400 4 00000    01721 TXH +3 00000 0 00162    01722 XCA +0 13100 0 00000   
 01723 MPY +0 20000 0 01261    01724 STQ -0 60000 0 02766    01725 TSX +0 07400 4 00000    01726 TXH +3 00000 0 00163   
 01727 STO +0 60100 0 02765    01730 TSX +0 07400 4 00004    01731 TXH +3 00000 0 02765    01732 TXH +3 00000 0 02766   
 01733 TXH +3 00000 0 02767                                                                                             
                 T'O KAPUT                                                          075  LM00138
 01734 TRA +0 02000 0 00046                                                                                             
      S(8)       CALL.                                                              076  LM00140
 01735 TSX +0 07400 4 00004                                                                                             
                 T'O KAPUT                                                          077  LM00141
 01736 TRA +0 02000 0 00046                                                                                             
      S(10)      CALL.(ARRY(1),ARRY(2),ARRY(3),SN(4)*BCOCT.(ARRY(4)),               078  LM00148
                1     SN(5)*BCDEC.(ARRY(5)))                                        078  LM00149
 01737 TSX +0 07400 4 00000    01740 TXH +3 00000 0 00157    01741 XCA +0 13100 0 00000    01742 MPY +0 20000 0 01256   
 01743 STQ -0 60000 0 02767    01744 TSX +0 07400 4 00001    01745 TXH +3 00000 0 00160    01746 XCA +0 13100 0 00000   
 01747 MPY +0 20000 0 01257    01750 STQ -0 60000 0 02766    01751 TSX +0 07400 4 00004    01752 TXH +3 00000 0 00163   
 01753 TXH +3 00000 0 00162    01754 TXH +3 00000 0 00161    01755 TXH +3 00000 0 02766    01756 TXH +3 00000 0 02767   
                 CHNARG = 1                                                         079  LM00150
 01757 CLA +0 50000 0 01272    01760 STO +0 60100 0 01061                                                               
                 T'O KAPUT                                                          080  LM00151
 01761 TRA +0 02000 0 00046                                                                                             
      S(11)      FLINE = BCDEC.(ARRY(3))                                            081  LM00153
 01762 TSX +0 07400 4 00000    01763 TXH +3 00000 0 00161    01764 STO +0 60100 0 01206                                 
                 CALL.(ARRY(1),ARRY(2),BUFF(432)...FLINE)                           082  LM00154
 01765 TSX +0 07400 4 00004    01766 TXH +3 00000 0 00163    01767 TXH +3 00000 0 00162    01770 TIX +2 01206 0 00200   
                 T'O KAPUT                                                          083  LM00155
 01771 TRA +0 02000 0 00046                                                                                             
      S(12)                                                                         084  LM00157
      S(13)      W'R SN(4) .L. 0                                                    085  LM00159
 01772 CLA +0 50000 0 01257    01773 SUB +0 40200 0 01271    01774 TZE +0 10000 0 02001    01775 TPL +0 12000 0 02001   
                      COUNT = 1                                                     086  LM00160
 01776 CLA +0 50000 0 01272    01777 STO +0 60100 0 01177                                                               
                 O'E                                                                087  LM00161
 02000 TRA +0 02000 0 02012                                                                                             
                      COUNT = BCDEC.(ARRY(4))                                       088  LM00162
 02001 TSX +0 07400 4 00000    02002 TXH +3 00000 0 00160    02003 STO +0 60100 0 01177                                 
                      W'R COUNT .G. 20, COUNT = 20                                  089  LM00163
 02004 CLA +0 50000 0 01177    02005 SUB +0 40200 0 01300    02006 TZE +0 10000 0 02012    02007 TMI -0 12000 0 02012   
 02010 CLA +0 50000 0 01300    02011 STO +0 60100 0 01177                                                               
                 E'L                                                                090  LM00164
                 CALL.(ARRY(1),ARRY(2),BCDEC.(ARRY(3)),ARG(20)...COUNT,             091  LM00165
                1     EOF1,COUNT)                                                   091  LM00166
 02012 TSX +0 07400 4 00000    02013 TXH +3 00000 0 00161    02014 STO +0 60100 0 02767    02015 TSX +0 07400 4 00004   
 02016 TXH +3 00000 0 00163    02017 TXH +3 00000 0 00162    02020 TXH +3 00000 0 02767    02021 TIX +2 01177 0 00126   
 02022 TXH +3 00000 0 00043    02023 TXH +3 00000 0 01177                                                               
                 T'O PWORD                                                          092  LM00167
 02024 TRA +0 02000 0 00047                                                                                             
      EOF1       PRMESS.($EOF$)                                                     093  LM00169
 02025 TSX +0 07400 4 00030    02026 TXH +3 00000 0 01314                                                               
      PWORD      COUNT = 20 - COUNT                                                 094  LM00171
 02027 CLA +0 50000 0 01300    02030 SUB +0 40200 0 01177    02031 STO +0 60100 0 01177                                 
                 T'H LOOP13, FOR I = 20,-1,(I.LE.COUNT)                             095  LM00172
 02032 CLA +0 50000 0 01300    02033 STO +0 60100 0 01215    02034 TRA +0 02000 0 02040    02035 CLS +0 50200 0 01272   
 02036 ADD +0 40000 0 01215    02037 STO +0 60100 0 01215    02040 CLA +0 50000 0 01215    02041 SUB +0 40200 0 01177   
 02042 TZE +0 10000 0 02066    02043 TMI -0 12000 0 02066                                                               
                      PRMESS.(OCLBC.(ARG(I)),OCRBC.(ARG(I)))                        096  LM00173
 02044 CLA +0 50000 0 01215    02045 SUB +0 40200 0 02046    02046 TXH +3 00000 0 00152    02047 STA +0 62100 0 02051   
 02050 TSX +0 07400 4 00025    02051 TXH +3 00000 0 00000    02052 STO +0 60100 0 02767    02053 CLA +0 50000 0 01215   
 02054 SUB +0 40200 0 02055    02055 TXH +3 00000 0 00152    02056 STA +0 62100 0 02060    02057 TSX +0 07400 4 00024   
 02060 TXH +3 00000 0 00000    02061 STO +0 60100 0 02766    02062 TSX +0 07400 4 00030    02063 TXH +3 00000 0 02766   
 02064 TXH +3 00000 0 02767                                                                                             
      LOOP13     C'E                                                                097  LM00174
 02065 TRA +0 02000 0 02035                                                                                             
                 T'O KAPUT                                                          098  LM00175
 02066 TRA +0 02000 0 00046                                                                                             
      S(14)                                                                         099  LM00177
      S(15)      FLINE = (BCOCT.(ARRY(4)).LS.18) .V. BCOCT.(ARRY(5))                100  LM00179
 02067 TSX +0 07400 4 00001    02070 TXH +3 00000 0 00157    02071 STO +0 60100 0 02767    02072 TSX +0 07400 4 00001   
 02073 TXH +3 00000 0 00160    02074 STO +0 60100 0 02766    02075 CAL -0 50000 0 01277    02076 STA +0 62100 0 02100   
 02077 CAL -0 50000 0 02766    02100 ALS +0 76700 0 00000    02101 ORA -0 50100 0 02767    02102 SLW +0 60200 0 01206   
                 CALL.(ARRY(1),ARRY(2),BCDEC.(ARRY(3)),FLINE...1,EOF2)              101  LM00180
 02103 TSX +0 07400 4 00000    02104 TXH +3 00000 0 00161    02105 STO +0 60100 0 02767    02106 TSX +0 07400 4 00004   
 02107 TXH +3 00000 0 00163    02110 TXH +3 00000 0 00162    02111 TXH +3 00000 0 02767    02112 TIX +2 01272 0 01206   
 02113 TXH +3 00000 0 00044                                                                                             
                 T'O KAPUT                                                          102  LM00181
 02114 TRA +0 02000 0 00046                                                                                             
      EOF2       PRMESS.($EOF$)                                                     103  LM00183
 02115 TSX +0 07400 4 00030    02116 TXH +3 00000 0 01314                                                               
                 T'O KAPUT                                                          104  LM00184
 02117 TRA +0 02000 0 00046                                                                                             
      S(16)      W'R FIRST                                                          105  LM00191
 02120 NZT -0 52000 0 01205    02121 TRA +0 02000 0 02145                                                               
                      OPEN.($W$,ARRY(1),ARRY(2))                                    106  LM00192
 02122 TSX +0 07400 4 00026    02123 TXH +3 00000 0 01334    02124 TXH +3 00000 0 00163    02125 TXH +3 00000 0 00162   
                      BUFFER.(ARRY(1),ARRY(2),BUFF(432)...432)                      107  LM00193
 02126 TSX +0 07400 4 00002    02127 TXH +3 00000 0 00163    02130 TXH +3 00000 0 00162    02131 TIX +2 01305 0 00200   
                      TRFILE.(ARRY(1),ARRY(2),BCDEC.(ARRY(3)))                      108  LM00194
 02132 TSX +0 07400 4 00000    02133 TXH +3 00000 0 00161    02134 STO +0 60100 0 02767    02135 TSX +0 07400 4 00037   
 02136 TXH +3 00000 0 00163    02137 TXH +3 00000 0 00162    02140 TXH +3 00000 0 02767                                 
                      CLOSE.(ARRY(1),ARRY(2))                                       109  LM00195
 02141 TSX +0 07400 4 00005    02142 TXH +3 00000 0 00163    02143 TXH +3 00000 0 00162                                 
                 O'E                                                                110  LM00196
 02144 TRA +0 02000 0 02154                                                                                             
                      CALL.(ARRY(1),ARRY(2),BCDEC.(ARRY(3)))                        111  LM00197
 02145 TSX +0 07400 4 00000    02146 TXH +3 00000 0 00161    02147 STO +0 60100 0 02767    02150 TSX +0 07400 4 00004   
 02151 TXH +3 00000 0 00163    02152 TXH +3 00000 0 00162    02153 TXH +3 00000 0 02767                                 
                 E'L                                                                112  LM00198
                 T'O KAPUT                                                          113  LM00199
 02154 TRA +0 02000 0 00046                                                                                             
      S(17)      CALL.(ARRY(1),ARRY(2),FINISH)                                      114  LM00201
 02155 TSX +0 07400 4 00004    02156 TXH +3 00000 0 00163    02157 TXH +3 00000 0 00162    02160 TXH +3 00000 0 00045   
                 T'O KAPUT                                                          115  LM00202
 02161 TRA +0 02000 0 00046                                                                                             
      FINISH     PRMESS.($FINISH$)                                                  116  LM00204
 02162 TSX +0 07400 4 00030    02163 TXH +3 00000 0 01316                                                               
                 T'O KAPUT                                                          117  LM00205
 02164 TRA +0 02000 0 00046                                                                                             
      S(18)      CALL.(ARRY(1),ARRY(2))                                             118  LM00207
 02165 TSX +0 07400 4 00004    02166 TXH +3 00000 0 00163    02167 TXH +3 00000 0 00162                                 
                 T'O KAPUT                                                          119  LM00208
 02170 TRA +0 02000 0 00046                                                                                             
      S(19)      CALL.(ARRY(1),ARRY(2))                                             120  LM00210
 02171 TSX +0 07400 4 00004    02172 TXH +3 00000 0 00163    02173 TXH +3 00000 0 00162                                 
                 T'O KAPUT                                                          121  LM00211
 02174 TRA +0 02000 0 00046                                                                                             
      S(20)      CALL.(ARRY(1).A.7K)                                                122  LM00215
 02175 CAL -0 50000 0 00163    02176 ANA -0 32000 0 01275    02177 SLW +0 60200 0 02767    02200 TSX +0 07400 4 00004   
 02201 TXH +3 00000 0 02767                                                                                             
                 T'O KAPUT                                                          123  LM00216
 02202 TRA +0 02000 0 00046                                                                                             
      S(21)      CALL.                                                              124  LM00218
 02203 TSX +0 07400 4 00004                                                                                             
                 T'O KAPUT                                                          125  LM00219
 02204 TRA +0 02000 0 00046                                                                                             
      S(22)      CALL.(ARRY(1),ARRY(2),SN(3)*BCOCT.(ARRY(3)),                       126  LM00221
                1     ARRY(4),ARRY(5))                                              126  LM00222
 02205 TSX +0 07400 4 00001    02206 TXH +3 00000 0 00161    02207 XCA +0 13100 0 00000    02210 MPY +0 20000 0 01260   
 02211 STQ -0 60000 0 02767    02212 TSX +0 07400 4 00004    02213 TXH +3 00000 0 00163    02214 TXH +3 00000 0 00162   
 02215 TXH +3 00000 0 02767    02216 TXH +3 00000 0 00160    02217 TXH +3 00000 0 00157                                 
                 T'O KAPUT                                                          127  LM00223
 02220 TRA +0 02000 0 00046                                                                                             
      S(23)      CALL.(ARRY(1),ARRY(2))                                             128  LM00225
 02221 TSX +0 07400 4 00004    02222 TXH +3 00000 0 00163    02223 TXH +3 00000 0 00162                                 
                 T'O KAPUT                                                          129  LM00226
 02224 TRA +0 02000 0 00046                                                                                             
      S(24)      CALL.(ARRY(1),ARRY(2),A(8)...8)                                    130  LM00228
 02225 TSX +0 07400 4 00004    02226 TXH +3 00000 0 00163    02227 TXH +3 00000 0 00162    02230 TIX +2 01276 0 00166   
                 W'R (A(7) .RS. 35) .E. 1                                           131  LM00229
 02231 CAL -0 50000 0 01303    02232 STA +0 62100 0 02234    02233 CAL -0 50000 0 00167    02234 LGR -0 76500 0 00000   
 02235 SLW +0 60200 0 02767    02236 CLA +0 50000 0 02767    02237 SUB +0 40200 0 01272    02240 TNZ -0 10000 0 02244   
                      LBIT = 575757604360K                                          132  LM00230
 02241 CLA +0 50000 0 01327    02242 STO +0 60100 0 01217                                                               
                 O'E                                                                133  LM00231
 02243 TRA +0 02000 0 02246                                                                                             
                      LBIT = NULLS                                                  134  LM00232
 02244 CLA +0 50000 0 01251    02245 STO +0 60100 0 01217                                                               
                 E'L                                                                135  LM00233
                 PRMESS.(BZEL.(DEFBC.(A(8))),LBIT,OCRBC.(A(7)).V.B3,                136  LM00234
                1     FSTAT(A(6)),FDEV(A(5)),BZEL.(DEFBC.(A(4))),SP,                136  LM00235
                2     BZEL.(DEFBC.(A(3))),SP,CVDATE.(A(2)),CVTIME.(A(2)),           136  LM00236
                3     SP,CVDATE.(A(1)),BZEL.(DERBC.(A(1))))                         136  LM00237
 02246 TSX +0 07400 4 00012    02247 TXH +3 00000 0 00175    02250 STO +0 60100 0 02767    02251 TSX +0 07400 4 00003   
 02252 TXH +3 00000 0 02767    02253 STO +0 60100 0 02767    02254 TSX +0 07400 4 00006    02255 TXH +3 00000 0 00175   
 02256 STO +0 60100 0 02766    02257 TSX +0 07400 4 00007    02260 TXH +3 00000 0 00174    02261 STO +0 60100 0 02765   
 02262 TSX +0 07400 4 00006    02263 TXH +3 00000 0 00174    02264 STO +0 60100 0 02764    02265 TSX +0 07400 4 00011   
 02266 TXH +3 00000 0 00173    02267 STO +0 60100 0 02763    02270 TSX +0 07400 4 00003    02271 TXH +3 00000 0 02763   
 02272 STO +0 60100 0 02763    02273 TSX +0 07400 4 00011    02274 TXH +3 00000 0 00172    02275 STO +0 60100 0 02770   
 02276 TSX +0 07400 4 00003    02277 TXH +3 00000 0 02770    02300 STO +0 60100 0 02770    02301 CLA +0 50000 0 00171   
 02302 SUB +0 40200 0 02303    02303 TXH +3 00000 0 01203    02304 STA +0 62100 0 02332    02305 CLA +0 50000 0 00170   
 02306 SUB +0 40200 0 02307    02307 TXH +3 00000 0 01214    02310 STA +0 62100 0 02331    02311 TSX +0 07400 4 00025   
 02312 TXH +3 00000 0 00167    02313 STO +0 60100 0 02771    02314 CAL -0 50000 0 02771    02315 ORA -0 50100 0 00177   
 02316 SLW +0 60200 0 02771    02317 TSX +0 07400 4 00011    02320 TXH +3 00000 0 00166    02321 STO +0 60100 0 02772   
 02322 TSX +0 07400 4 00003    02323 TXH +3 00000 0 02772    02324 STO +0 60100 0 02772    02325 TSX +0 07400 4 00030   
 02326 TXH +3 00000 0 02772    02327 TXH +3 00000 0 01217    02330 TXH +3 00000 0 02771    02331 TXH +3 00000 0 00000   
 02332 TXH +3 00000 0 00000    02333 TXH +3 00000 0 02770    02334 TXH +3 00000 0 01264    02335 TXH +3 00000 0 02763   
 02336 TXH +3 00000 0 01264    02337 TXH +3 00000 0 02764    02340 TXH +3 00000 0 02765    02341 TXH +3 00000 0 01264   
 02342 TXH +3 00000 0 02766    02343 TXH +3 00000 0 02767                                                               
                 T'O KAPUT                                                          137  LM00238
 02344 TRA +0 02000 0 00046                                                                                             
      S(25)      CALL.(ARRY(1),ARRY(2))                                             138  LM00240
 02345 TSX +0 07400 4 00004    02346 TXH +3 00000 0 00163    02347 TXH +3 00000 0 00162                                 
                 T'O KAPUT                                                          139  LM00241
 02350 TRA +0 02000 0 00046                                                                                             
      S(26)      CALL.(BCOCT.(ARRY(1)),ALLOTD,USED)                                 140  LM00243
 02351 TSX +0 07400 4 00001    02352 TXH +3 00000 0 00163    02353 STO +0 60100 0 02772    02354 TSX +0 07400 4 00004   
 02355 TXH +3 00000 0 02772    02356 TXH +3 00000 0 00124    02357 TXH +3 00000 0 01270                                 
                 PRMESS.(BZEL.(DEFBC.(ALLOTD)),BZEL.(DEFBC.(USED)))                 141  LM00244
 02360 TSX +0 07400 4 00011    02361 TXH +3 00000 0 01270    02362 STO +0 60100 0 02772    02363 TSX +0 07400 4 00003   
 02364 TXH +3 00000 0 02772    02365 STO +0 60100 0 02772    02366 TSX +0 07400 4 00011    02367 TXH +3 00000 0 00124   
 02370 STO +0 60100 0 02771    02371 TSX +0 07400 4 00003    02372 TXH +3 00000 0 02771    02373 STO +0 60100 0 02771   
 02374 TSX +0 07400 4 00030    02375 TXH +3 00000 0 02771    02376 TXH +3 00000 0 02772                                 
                 T'O KAPUT                                                          142  LM00245
 02377 TRA +0 02000 0 00046                                                                                             
      S(27)      CALL.(A(4)...4)                                                    143  LM00247
 02400 TSX +0 07400 4 00004    02401 TIX +2 01273 0 00172                                                               
                 PRMESS.(A(4),SP,A(3),BZEL.(DERBC.(A(2))),                          144  LM00248
                1     A(1) .V. 575757576000K)                                       144  LM00249
 02402 CAL -0 50000 0 00175    02403 ORA -0 50100 0 01325    02404 SLW +0 60200 0 02772    02405 TSX +0 07400 4 00012   
 02406 TXH +3 00000 0 00174    02407 STO +0 60100 0 02771    02410 TSX +0 07400 4 00003    02411 TXH +3 00000 0 02771   
 02412 STO +0 60100 0 02771    02413 TSX +0 07400 4 00030    02414 TXH +3 00000 0 00172    02415 TXH +3 00000 0 01264   
 02416 TXH +3 00000 0 00173    02417 TXH +3 00000 0 02771    02420 TXH +3 00000 0 02772                                 
                 T'O KAPUT                                                          145  LM00250
 02421 TRA +0 02000 0 00046                                                                                             
      S(28)      CALL.(A(7)...7)                                                    146  LM00252
 02422 TSX +0 07400 4 00004    02423 TIX +2 01275 0 00167                                                               
                 W'R (A(7) .A. 1K6) .NE. 0                                          147  LM00253
 02424 CAL -0 50000 0 00167    02425 ANA -0 32000 0 01306    02426 SLW +0 60200 0 02772    02427 CLA +0 50000 0 02772   
 02430 SUB +0 40200 0 01271    02431 TZE +0 10000 0 02435                                                               
                      LBIT = 575740214060K                                          148  LM00254
 02432 CLA +0 50000 0 01324    02433 STO +0 60100 0 01217                                                               
                 O'E                                                                149  LM00255
 02434 TRA +0 02000 0 02437                                                                                             
                      LBIT = NULLS                                                  150  LM00256
 02435 CLA +0 50000 0 01251    02436 STO +0 60100 0 01217                                                               
                 E'L                                                                151  LM00257
                 PRMESS.(LBIT,(OCABC.(A(7)).LS.6).V.$00000 $,A(6),                  152  LM00258
                1     DEFBC.(A(5)).V.B3,(DEFBC.(A(4)).LS.6).V.                      152  LM00259
                2     575757600060K,A(3),SP,A(2),OCABC.(A(1)))                      152  LM00260
 02437 TSX +0 07400 4 00023    02440 TXH +3 00000 0 00175    02441 STO +0 60100 0 02772    02442 TSX +0 07400 4 00011   
 02443 TXH +3 00000 0 00172    02444 STO +0 60100 0 02771    02445 CAL -0 50000 0 01274    02446 STA +0 62100 0 02450   
 02447 CAL -0 50000 0 02771    02450 ALS +0 76700 0 00000    02451 ORA -0 50100 0 01326    02452 SLW +0 60200 0 02771   
 02453 TSX +0 07400 4 00011    02454 TXH +3 00000 0 00171    02455 STO +0 60100 0 02770    02456 CAL -0 50000 0 02770   
 02457 ORA -0 50100 0 00177    02460 SLW +0 60200 0 02770    02461 TSX +0 07400 4 00023    02462 TXH +3 00000 0 00167   
 02463 STO +0 60100 0 02767    02464 CAL -0 50000 0 01274    02465 STA +0 62100 0 02467    02466 CAL -0 50000 0 02767   
 02467 ALS +0 76700 0 00000    02470 ORA -0 50100 0 01304    02471 SLW +0 60200 0 02767    02472 TSX +0 07400 4 00030   
 02473 TXH +3 00000 0 01217    02474 TXH +3 00000 0 02767    02475 TXH +3 00000 0 00170    02476 TXH +3 00000 0 02770   
 02477 TXH +3 00000 0 02771    02500 TXH +3 00000 0 00173    02501 TXH +3 00000 0 01264    02502 TXH +3 00000 0 00174   
 02503 TXH +3 00000 0 02772                                                                                             
                 T'O KAPUT                                                          153  LM00261
 02504 TRA +0 02000 0 00046                                                                                             
      S(30)      PRMESS.($ TYPE MESSAGE$)                                           154  LM00266
 02505 TSX +0 07400 4 00030    02506 TXH +3 00000 0 01333    02507 TXH +3 00000 0 01320    02510 TXH +3 00000 0 01315   
                 RDFLXC.(MESSAG(1),CMAX)                                            155  LM00267
 02511 TSX +0 07400 4 00034    02512 TXH +3 00000 0 01244    02513 TXH +3 00000 0 01062                                 
                 CALL.(SN(1)*BCDEC.(ARRY(1)),BCDEC.(ARRY(2)),                       156  LM00268
                1     MESSAG(20)...LMAX)                                            156  LM00269
 02514 TSX +0 07400 4 00000    02515 TXH +3 00000 0 00162    02516 STO +0 60100 0 02772    02517 TSX +0 07400 4 00000   
 02520 TXH +3 00000 0 00163    02521 XCA +0 13100 0 00000    02522 MPY +0 20000 0 01262    02523 STQ -0 60000 0 02771   
 02524 TSX +0 07400 4 00004    02525 TXH +3 00000 0 02771    02526 TXH +3 00000 0 02772    02527 TIX +2 01220 0 01221   
                 T'O KAPUT                                                          157  LM00270
 02530 TRA +0 02000 0 00046                                                                                             
      S(31)      PRMESS.($ TYPE MESSAGE$)                                           158  LM00272
 02531 TSX +0 07400 4 00030    02532 TXH +3 00000 0 01333    02533 TXH +3 00000 0 01320    02534 TXH +3 00000 0 01315   
                 RDFLXC.(MESSAG(1),CMAX)                                            159  LM00273
 02535 TSX +0 07400 4 00034    02536 TXH +3 00000 0 01244    02537 TXH +3 00000 0 01062                                 
                 W'R ARRY(1).E.ALL                                                  160  LM00274
 02540 CLA +0 50000 0 00163    02541 SUB +0 40200 0 00125    02542 TNZ -0 10000 0 02546                                 
                      ARRY(1) = $ALL$                                               161  LM00275
 02543 CLA +0 50000 0 01307    02544 STO +0 60100 0 00163                                                               
                 O'E                                                                162  LM00276
 02545 TRA +0 02000 0 02551                                                                                             
                      ARRY(1) = BCDEC.(ARRY(1))                                     163  LM00277
 02546 TSX +0 07400 4 00000    02547 TXH +3 00000 0 00163    02550 STO +0 60100 0 00163                                 
                 E'L                                                                164  LM00278
                 CALL.(ARRY(1),MESSAG(20)...LMAX)                                   165  LM00279
 02551 TSX +0 07400 4 00004    02552 TXH +3 00000 0 00163    02553 TIX +2 01220 0 01221                                 
                 T'O KAPUT                                                          166  LM00280
 02554 TRA +0 02000 0 00046                                                                                             
      S(32)      PRMESS.($ TYPE BCD LABEL$)                                         167  LM00282
 02555 TSX +0 07400 4 00030    02556 TXH +3 00000 0 01333    02557 TXH +3 00000 0 01310    02560 TXH +3 00000 0 01311   
                 RDFLXC.(MESSAG(1),24)                                              168  LM00283
 02561 TSX +0 07400 4 00034    02562 TXH +3 00000 0 01244    02563 TXH +3 00000 0 01302                                 
                 CALL.(BCDEC.(ARRY(1)),MESSAG(4)...4)                               169  LM00284
 02564 TSX +0 07400 4 00000    02565 TXH +3 00000 0 00163    02566 STO +0 60100 0 02772    02567 TSX +0 07400 4 00004   
 02570 TXH +3 00000 0 02772    02571 TIX +2 01273 0 01241                                                               
                 T'O KAPUT                                                          170  LM00285
 02572 TRA +0 02000 0 00046                                                                                             
      S(33)      PRMESS.($ TYPE BCD LABEL$)                                         171  LM00287
 02573 TSX +0 07400 4 00030    02574 TXH +3 00000 0 01333    02575 TXH +3 00000 0 01310    02576 TXH +3 00000 0 01311   
                 RDFLXC.(MESSAG(1),24)                                              172  LM00288
 02577 TSX +0 07400 4 00034    02600 TXH +3 00000 0 01244    02601 TXH +3 00000 0 01302                                 
                 CALL.(BCDEC.(ARRY(1)),MESSAG(4)...4)                               173  LM00289
 02602 TSX +0 07400 4 00000    02603 TXH +3 00000 0 00163    02604 STO +0 60100 0 02772    02605 TSX +0 07400 4 00004   
 02606 TXH +3 00000 0 02772    02607 TIX +2 01273 0 01241                                                               
                 T'O KAPUT                                                          174  LM00290
 02610 TRA +0 02000 0 00046                                                                                             
      S(34)      CALL.(ARRY(1),ARRY(2),BCDEC.(ARRY(3)),                             175  LM00292
                1     SN(4)*BCDEC.(ARRY(4)))                                        175  LM00293
 02611 TSX +0 07400 4 00000    02612 TXH +3 00000 0 00160    02613 XCA +0 13100 0 00000    02614 MPY +0 20000 0 01257   
 02615 STQ -0 60000 0 02772    02616 TSX +0 07400 4 00000    02617 TXH +3 00000 0 00161    02620 STO +0 60100 0 02771   
 02621 TSX +0 07400 4 00004    02622 TXH +3 00000 0 00163    02623 TXH +3 00000 0 00162    02624 TXH +3 00000 0 02771   
 02625 TXH +3 00000 0 02772                                                                                             
                 T'O KAPUT                                                          176  LM00294
 02626 TRA +0 02000 0 00046                                                                                             
      S(35)      PRMESS.($ TYPE OCTAL LABEL$)                                       177  LM00296
 02627 TSX +0 07400 4 00030    02630 TXH +3 00000 0 01333    02631 TXH +3 00000 0 01322    02632 TXH +3 00000 0 01317   
                 RDFLXC.(MESSAG(1),24)                                              178  LM00297
 02633 TSX +0 07400 4 00034    02634 TXH +3 00000 0 01244    02635 TXH +3 00000 0 01302                                 
                 T'H LOOP35, FOR I=1,1,I.G.4                                        179  LM00298
 02636 CLA +0 50000 0 01272    02637 STO +0 60100 0 01215    02640 TRA +0 02000 0 02644    02641 CLA +0 50000 0 01215   
 02642 ADD +0 40000 0 01272    02643 STO +0 60100 0 01215    02644 CLA +0 50000 0 01215    02645 SUB +0 40200 0 01273   
 02646 TZE +0 10000 0 02650    02647 TPL +0 12000 0 02665                                                               
                 MESSAG(21-I) = BCOCT.(MESSAG(I))                                   180  LM00299
 02650 CLA +0 50000 0 01215    02651 SUB +0 40200 0 02652    02652 TXH +3 00000 0 01245    02653 STA +0 62100 0 02655   
 02654 TSX +0 07400 4 00001    02655 TXH +3 00000 0 00000    02656 STO +0 60100 0 02772    02657 CLA +0 50000 0 01301   
 02660 SUB +0 40200 0 01215    02661 PAX +0 73400 1 00000    02662 CLA +0 50000 0 02772    02663 STO +0 60100 1 01245   
      LOOP35     C'E                                                                181  LM00300
 02664 TRA +0 02000 0 02641                                                                                             
                 VERIFY.(BCDEC.(ARRY(1)),MESSAG(20)...4)                            182  LM00301
 02665 TSX +0 07400 4 00000    02666 TXH +3 00000 0 00163    02667 STO +0 60100 0 02772    02670 TSX +0 07400 4 00040   
 02671 TXH +3 00000 0 02772    02672 TIX +2 01273 0 01221                                                               
                 T'O KAPUT                                                          183  LM00302
 02673 TRA +0 02000 0 00046                                                                                             
      S(36)      PRMESS.($ TYPE OCTAL LABEL$)                                       184  LM00304
 02674 TSX +0 07400 4 00030    02675 TXH +3 00000 0 01333    02676 TXH +3 00000 0 01322    02677 TXH +3 00000 0 01317   
                 RDFLXC.(MESSAG(1),24)                                              185  LM00305
 02700 TSX +0 07400 4 00034    02701 TXH +3 00000 0 01244    02702 TXH +3 00000 0 01302                                 
                 T'H LOOP36, FOR I=1,1,I.G.4                                        186  LM00306
 02703 CLA +0 50000 0 01272    02704 STO +0 60100 0 01215    02705 TRA +0 02000 0 02711    02706 CLA +0 50000 0 01215   
 02707 ADD +0 40000 0 01272    02710 STO +0 60100 0 01215    02711 CLA +0 50000 0 01215    02712 SUB +0 40200 0 01273   
 02713 TZE +0 10000 0 02715    02714 TPL +0 12000 0 02732                                                               
                      MESSAG(21-I) = BCOCT.(MESSAG(I))                              187  LM00307
 02715 CLA +0 50000 0 01215    02716 SUB +0 40200 0 02717    02717 TXH +3 00000 0 01245    02720 STA +0 62100 0 02722   
 02721 TSX +0 07400 4 00001    02722 TXH +3 00000 0 00000    02723 STO +0 60100 0 02772    02724 CLA +0 50000 0 01301   
 02725 SUB +0 40200 0 01215    02726 PAX +0 73400 1 00000    02727 CLA +0 50000 0 02772    02730 STO +0 60100 1 01245   
      LOOP36     C'E                                                                188  LM00308
 02731 TRA +0 02000 0 02706                                                                                             
                 LABEL.(BCDEC.(ARRY(1)),MESSAG(20)...4)                             189  LM00309
 02732 TSX +0 07400 4 00000    02733 TXH +3 00000 0 00163    02734 STO +0 60100 0 02772    02735 TSX +0 07400 4 00021   
 02736 TXH +3 00000 0 02772    02737 TIX +2 01273 0 01221                                                               
                 T'O KAPUT                                                          190  LM00310
 02740 TRA +0 02000 0 00046                                                                                             
      S(39)      PRNTER.                                                            191  LM00314
 02741 TSX +0 07400 4 00031                                                                                             
                 T'O KAPUT                                                          192  LM00315
 02742 TRA +0 02000 0 00046                                                                                             
      S(40)      PRMESS.($ FILE CALL $,ARRY,$ NOT UNDERSTOOD$)                      193  LM00317
 02743 TSX +0 07400 4 00030    02744 TXH +3 00000 0 01330    02745 TXH +3 00000 0 01312    02746 TXH +3 00000 0 00164   
 02747 TXH +3 00000 0 01331    02750 TXH +3 00000 0 01321    02751 TXH +3 00000 0 01323                                 
      KAPUT      W'R .NOT. STOP                                                     194  LM00318
 02752 ZET +0 52000 0 01266    02753 TRA +0 02000 0 02760                                                               
                      FIRST = 0B                                                    195  LM00319
 02754 CLA +0 50000 0 01271    02755 STO +0 60100 0 01205                                                               
                      T'O START                                                     196  LM00320
 02756 TRA +0 02000 0 00123                                                                                             
                 O'E                                                                197  LM00321
 02757 TRA +0 02000 0 02762                                                                                             
      S(41)           EXIT.(CHNARG)                                                 198  LM00322
 02760 TSX +0 07400 4 00013    02761 TXH +3 00000 0 01061                                                               
                 E'L                                                                199  LM00323
                 E'M                                                                200  LM00325
 02762 TSX +0 07400 4 00013                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE   CALL1   MAD            02/08/68    1708.5
-                 
                      TIME/DATE CONVERTERS, ALSO PROBNO/PROGNO CONVERTERS                              LM00001    
                      THIS PROGRAM MUST BE EDITED AND RE-COMPILED WHEN                                 LM00002    
                      THE NEW 'LOGIN' (PSN 50) TAKES EFFECT                                            LM00003    
                           D.R. WIDRIG  DEC. 1965                                                      LM00004    
                                                                                                       LM00005    
                      REVISED TO RELAX ERROR CHECKING MAY 1966                                         LM00006    
                           D.R. WIDRIG  MAY 1966                                                       LM00007    
                                                                                                       LM00008    
                  EXTERNAL FUNCTION (X1,Y)                                                        *001 LM00009    
                  NORMAL MODE IS INTEGER                                                          *002 LM00010    
                  STATEMENT LABEL Y                                                               *003 LM00011    
                                                                                                       LM00012    
                  VECTOR VALUES MESS1 = $ILLEGA******.....$,0,777777777777K                       *004 LM00013    
                                                                                                       LM00014    
                  VECTOR VALUES DMASK = 766074607160K                                             *005 LM00015    
                  VECTOR VALUES TMASK = 777774607060K                                             *006 LM00016    
                  VECTOR VALUES PMASK = 776060606060K                                             *007 LM00017    
                                                                                                       LM00018    
                      CONVERT BCD DATE TO I/O FORMAT                                                   LM00019    
                                                                                                       LM00020    
                  ENTRY TO DATECV.                                                                *008 LM00021    
                  MESS1(1) = $L DATE$                                                             *009 LM00022    
                  X = ZEL.(X1)                                                                    *010 LM00023    
                  WHENEVER (X.A.DMASK) .NE. 0, TRANSFER TO BAD                                    *011 LM00024    
                  MM = BCDEC.(X.RS.24)                                                            *012 LM00025    
                  DD = BCDEC.((X.RS.12).A.7777K)                                                  *013 LM00026    
                  YY = BCDEC.(X.A.7777K)                                                          *014 LM00027    
                  FUNCTION RETURN (YY.LS.27).V.(MM.LS.23).V.(DD.LS.18)                            *015 LM00028    
                                                                                                       LM00029    
      BAD         MESS1(3) = X                                                                    *016 LM00030    
                  PRNTP.(MESS1)                                                                   *017 LM00031    
                  TRANSFER TO Y                                                                   *018 LM00032    
                                                                                                       LM00033    
                      CONVERT I/O DATE TO BCD                                                          LM00034    
                                                                                                       LM00035    
                  ENTRY TO CVDATE.                                                                *019 LM00036    
                  D = X1.RS.18                                                                    *020 LM00037    
                  FUNCTION RETURN (DERBC.(D.A.37K).LS.12).V.(DERBC.((D.RS.5).A.17K)               *021 LM00038    
                1      .LS.24).V.(DERBC.((D.RS.9).A.377K))                                        *021 LM00039    
                                                                                                       LM00040    
                      CONVERT TIME TO I/O FORMAT                                                       LM00041    
                                                                                                       LM00042    
                  ENTRY TO TIMECV.                                                                *022 LM00043    
                  MESS1(1) = $L TIME$                                                             *023 LM00044    
                  X = ZEL.(X1)                                                                    *024 LM00045    
                  WHENEVER (X.A.TMASK) .NE. 0, TRANSFER TO BAD                                    *025 LM00046    
                  HH = BCDEC.((X.RS.12).A.7777K)                                                  *026 LM00047    
                  MM = BCDEC.(X.A.7777K)                                                          *027 LM00048    
                  WHENEVER (HH.G.23).OR.(MM.G.59), TRANSFER TO BAD                                *028 LM00049    
                  FUNCTION RETURN HH*3600+MM*60                                                   *029 LM00050    
                                                                                                       LM00051    
                      CONVERT I/O TIME TO BCD                                                          LM00052    
                                                                                                       LM00053    
                  ENTRY TO CVTIME.                                                                *030 LM00054    
                  D = X1.A.777777K                                                                *031 LM00055    
                  HH = D/3600                                                                     *032 LM00056    
                  FUNCTION RETURN ((DERBC.(HH).LS.12).V.                                          *033 LM00057    
                1      (DERBC.((D-HH*3600)/60)).V.$  0000$)                                       *033 LM00058    
                                                                                                       LM00059    
                      CHECK VALIDITY OF PROGNO                                                         LM00060    
                                                                                                       LM00061    
                  ENTRY TO PROGN.                                                                 *034 LM00062    
                  MESS1(1) = $L PRGN$                                                             *035 LM00063    
                  X = X1                                                                          *036 LM00064    
                  WHENEVER (X.E.$(FILE)$).OR.(X.E.$.FILE.$), FUNCTION RETURN X                    *037 LM00065    
                  WHENEVER (ZEL.(X).A.PMASK) .E. 0, FUNCTION RETURN X                             *038 LM00066    
                  WHENEVER (X.A.777777776060K).E. $CMFL00$, FUNCTION RETURN X                     *039 LM00067    
                                                                                                       LM00068    
      BAD1        MESS1(3) = X                                                                    *040 LM00069    
                  PRNTP.(MESS1)                                                                   *041 LM00070    
                  FUNCTION RETURN X                                                               *042 LM00071    
                                                                                                       LM00072    
                      REDUCE PROBNO TO STANDARD FORM                                                   LM00073    
                                                                                                       LM00074    
                  ENTRY TO PROBN.                                                                 *043 LM00075    
                  MESS1(1) = $L PRBN$                                                             *044 LM00076    
                  X = X1                                                                          *045 LM00077    
                  WHENEVER (X.A.60K).NE.0, FUNCTION RETURN X                                      *046 LM00078    
                  THROUGH LOOP1, FOR I=6,6,I.E.30                                                 *047 LM00079    
                  WHENEVER (((X.RS.I).A.60K).NE.0),                                               *048 LM00080    
                1      FUNCTION RETURN BZEL.((((X.RS.I).A.77K).LS.24).V.                          *048 LM00081    
                2      ((77777777K.RS.(24-I)).A.X))                                               *048 LM00082    
      LOOP1       CONTINUE                                                                        *049 LM00083    
                  TRANSFER TO BAD1                                                                *050 LM00084    
                                                                                                       LM00085    
                  END OF FUNCTION                                                                 *051 LM00086    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00555 TRANSFER VECTOR LENGTH  00006 PROGRAM BEGINS    00070
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      PROBN  00436   0        PROGN  00366   0        CVTIME 00324   0        TIMECV 00245   0        CVDATE 00167   0  
      DATECV 00071   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BAD1   00007   4        DMASK  00012 A 1        I      00015   1        MM     00023   1        X      00026   1  
      BAD    00010   4        D      00013   1        LOOP1  00006   4        PMASK  00024 A 1        YY     00027   1  
      DD     00011   1        HH     00014   1        MESS1  00022 A 1        TMASK  00025 A 1                          
0FUNCTION DICTIONARY    
      BCDEC  00000   1        BZEL   00001   1        DERBC  00002   1        EXIT   00003   1        PRNTP  00004   1  
      ZEL    00005   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00050 +000000000077     00055 +000077777777     00043 +000000000036     00033 +000000000006     00045 +000000000060    
 00062 -036047512245     00057 +234426430000     00067 -377777776060     00066 -342631432534     00060 +332631432533    
 00063 -036047512745     00065 -206000000000     00054 +000000777777     00052 +000000007020     00047 +000000000074    
 00046 +000000000073     00064 -036063314425     00044 +000000000037     00036 +000000000017     00032 +000000000005    
 00051 +000000000377     00034 +000000000011     00042 +000000000033     00040 +000000000027     00037 +000000000022    
 00053 +000000007777     00035 +000000000014     00041 +000000000030     00030 +000000000000     00061 -036024216325    
 00031 +000000000001     00056 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00007 TXL -300431000427       00010 TXL -300163000161                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION (X1,Y)                                           001  LM00009
                 N'R                                                                002  LM00010
                 S'L Y                                                              003  LM00011
                 V'S MESS1 = $ILLEGA******.....$,0,777777777777K                    004  LM00013
 00016     -3 77777 7 77777    00017     +0 00000 0 00000    00020     +3 33333 3 33360    00021     -1 45454 5 45454   
 00022     +3 14343 2 52721                                                                                             
                 V'S DMASK = 766074607160K                                          005  LM00015
 00012     -3 66074 6 07160                                                                                             
                 V'S TMASK = 777774607060K                                          006  LM00016
 00025     -3 77774 6 07060                                                                                             
                 V'S PMASK = 776060606060K                                          007  LM00017
 00024     -3 76060 6 06060                                                                                             
                 E'O DATECV.                                                        008  LM00021
 00070 TRA +0 02000 0 00073    00071 SXA +0 63400 2 00527    00072 TSX +0 07400 2 00527                                 
                 MESS1(1) = $L DATE$                                                009  LM00022
 00073 CLA +0 50000 0 00061    00074 STO +0 60100 0 00021                                                               
                 X = ZEL.(X1)                                                       010  LM00023
 00075 TSX +0 07400 4 00005    00076 TXH +3 00000 0 00024    00077 STO +0 60100 0 00026                                 
                 W'R (X.A.DMASK) .NE. 0, T'O BAD                                    011  LM00024
 00100 CAL -0 50000 0 00026    00101 ANA -0 32000 0 00012    00102 SLW +0 60200 0 00550    00103 CLA +0 50000 0 00550   
 00104 SUB +0 40200 0 00030    00105 TZE +0 10000 0 00107    00106 TRA +0 02000 0 00010                                 
                 MM = BCDEC.(X.RS.24)                                               012  LM00025
 00107 CAL -0 50000 0 00041    00110 STA +0 62100 0 00112    00111 CAL -0 50000 0 00026    00112 LGR -0 76500 0 00000   
 00113 SLW +0 60200 0 00550    00114 TSX +0 07400 4 00000    00115 TXH +3 00000 0 00550    00116 STO +0 60100 0 00023   
                 DD = BCDEC.((X.RS.12).A.7777K)                                     013  LM00026
 00117 CAL -0 50000 0 00035    00120 STA +0 62100 0 00122    00121 CAL -0 50000 0 00026    00122 LGR -0 76500 0 00000   
 00123 ANA -0 32000 0 00053    00124 SLW +0 60200 0 00550    00125 TSX +0 07400 4 00000    00126 TXH +3 00000 0 00550   
 00127 STO +0 60100 0 00011                                                                                             
                 YY = BCDEC.(X.A.7777K)                                             014  LM00027
 00130 CAL -0 50000 0 00026    00131 ANA -0 32000 0 00053    00132 SLW +0 60200 0 00550    00133 TSX +0 07400 4 00000   
 00134 TXH +3 00000 0 00550    00135 STO +0 60100 0 00027                                                               
                 F'N (YY.LS.27).V.(MM.LS.23).V.(DD.LS.18)                           015  LM00028
 00136 CAL -0 50000 0 00037    00137 STA +0 62100 0 00141    00140 CAL -0 50000 0 00011    00141 ALS +0 76700 0 00000   
 00142 SLW +0 60200 0 00550    00143 CAL -0 50000 0 00040    00144 STA +0 62100 0 00146    00145 CAL -0 50000 0 00023   
 00146 ALS +0 76700 0 00000    00147 SLW +0 60200 0 00551    00150 CAL -0 50000 0 00042    00151 STA +0 62100 0 00153   
 00152 CAL -0 50000 0 00027    00153 ALS +0 76700 0 00000    00154 ORA -0 50100 0 00551    00155 ORA -0 50100 0 00550   
 00156 SLW +0 60200 0 00551    00157 CLA +0 50000 0 00551    00160 TRA +0 02000 0 00544                                 
      BAD        MESS1(3) = X                                                       016  LM00030
 00161 CLA +0 50000 0 00026    00162 STO +0 60100 0 00017                                                               
                 PRNTP.(MESS1)                                                      017  LM00031
 00163 TSX +0 07400 4 00004    00164 TXH +3 00000 0 00022                                                               
                 T'O Y                                                              018  LM00032
 00165 TRA +0 02000 0 00024                                                                                             
                 E'O CVDATE.                                                        019  LM00036
 00166 TRA +0 02000 0 00171    00167 SXA +0 63400 2 00527    00170 TSX +0 07400 2 00527                                 
                 D = X1.RS.18                                                       020  LM00037
 00171 CAL -0 50000 0 00037    00172 STA +0 62100 0 00174    00173 CAL -0 50000 0 00024    00174 LGR -0 76500 0 00000   
 00175 SLW +0 60200 0 00013                                                                                             
                 F'N (DERBC.(D.A.37K).LS.12).V.(DERBC.((D.RS.5).A.17K)              021  LM00038
                1     .LS.24).V.(DERBC.((D.RS.9).A.377K))                           021  LM00039
 00176 CAL -0 50000 0 00034    00177 STA +0 62100 0 00201    00200 CAL -0 50000 0 00013    00201 LGR -0 76500 0 00000   
 00202 ANA -0 32000 0 00051    00203 SLW +0 60200 0 00551    00204 TSX +0 07400 4 00002    00205 TXH +3 00000 0 00551   
 00206 STO +0 60100 0 00551    00207 CAL -0 50000 0 00032    00210 STA +0 62100 0 00212    00211 CAL -0 50000 0 00013   
 00212 LGR -0 76500 0 00000    00213 ANA -0 32000 0 00036    00214 SLW +0 60200 0 00550    00215 TSX +0 07400 4 00002   
 00216 TXH +3 00000 0 00550    00217 STO +0 60100 0 00550    00220 CAL -0 50000 0 00041    00221 STA +0 62100 0 00223   
 00222 CAL -0 50000 0 00550    00223 ALS +0 76700 0 00000    00224 SLW +0 60200 0 00550    00225 CAL -0 50000 0 00013   
 00226 ANA -0 32000 0 00044    00227 SLW +0 60200 0 00552    00230 TSX +0 07400 4 00002    00231 TXH +3 00000 0 00552   
 00232 STO +0 60100 0 00552    00233 CAL -0 50000 0 00035    00234 STA +0 62100 0 00236    00235 CAL -0 50000 0 00552   
 00236 ALS +0 76700 0 00000    00237 ORA -0 50100 0 00550    00240 ORA -0 50100 0 00551    00241 SLW +0 60200 0 00552   
 00242 CLA +0 50000 0 00552    00243 TRA +0 02000 0 00544                                                               
                 E'O TIMECV.                                                        022  LM00043
 00244 TRA +0 02000 0 00247    00245 SXA +0 63400 2 00527    00246 TSX +0 07400 2 00527                                 
                 MESS1(1) = $L TIME$                                                023  LM00044
 00247 CLA +0 50000 0 00064    00250 STO +0 60100 0 00021                                                               
                 X = ZEL.(X1)                                                       024  LM00045
 00251 TSX +0 07400 4 00005    00252 TXH +3 00000 0 00024    00253 STO +0 60100 0 00026                                 
                 W'R (X.A.TMASK) .NE. 0, T'O BAD                                    025  LM00046
 00254 CAL -0 50000 0 00026    00255 ANA -0 32000 0 00025    00256 SLW +0 60200 0 00552    00257 CLA +0 50000 0 00552   
 00260 SUB +0 40200 0 00030    00261 TZE +0 10000 0 00263    00262 TRA +0 02000 0 00010                                 
                 HH = BCDEC.((X.RS.12).A.7777K)                                     026  LM00047
 00263 CAL -0 50000 0 00035    00264 STA +0 62100 0 00266    00265 CAL -0 50000 0 00026    00266 LGR -0 76500 0 00000   
 00267 ANA -0 32000 0 00053    00270 SLW +0 60200 0 00552    00271 TSX +0 07400 4 00000    00272 TXH +3 00000 0 00552   
 00273 STO +0 60100 0 00014                                                                                             
                 MM = BCDEC.(X.A.7777K)                                             027  LM00048
 00274 CAL -0 50000 0 00026    00275 ANA -0 32000 0 00053    00276 SLW +0 60200 0 00552    00277 TSX +0 07400 4 00000   
 00300 TXH +3 00000 0 00552    00301 STO +0 60100 0 00023                                                               
                 W'R (HH.G.23).OR.(MM.G.59), T'O BAD                                028  LM00049
 00302 CLA +0 50000 0 00023    00303 SUB +0 40200 0 00046    00304 TZE +0 10000 0 00306    00305 TPL +0 12000 0 00312   
 00306 CLA +0 50000 0 00014    00307 SUB +0 40200 0 00040    00310 TZE +0 10000 0 00313    00311 TMI -0 12000 0 00313   
 00312 TRA +0 02000 0 00010                                                                                             
                 F'N HH*3600+MM*60                                                  029  LM00050
 00313 LDQ +0 56000 0 00023    00314 MPY +0 20000 0 00047    00315 STQ -0 60000 0 00552    00316 LDQ +0 56000 0 00014   
 00317 MPY +0 20000 0 00052    00320 XCA +0 13100 0 00000    00321 ADD +0 40000 0 00552    00322 TRA +0 02000 0 00544   
                 E'O CVTIME.                                                        030  LM00054
 00323 TRA +0 02000 0 00326    00324 SXA +0 63400 2 00527    00325 TSX +0 07400 2 00527                                 
                 D = X1.A.777777K                                                   031  LM00055
 00326 CAL -0 50000 0 00024    00327 ANA -0 32000 0 00054    00330 SLW +0 60200 0 00013                                 
                 HH = D/3600                                                        032  LM00056
 00331 LDQ +0 56000 0 00013    00332 PXD -0 75400 0 00000    00333 LLS +0 76300 0 00000    00334 DVP +0 22100 0 00052   
 00335 STQ -0 60000 0 00014                                                                                             
                 F'N ((DERBC.(HH).LS.12).V.                                         033  LM00057
                1     (DERBC.((D-HH*3600)/60)).V.$  0000$)                          033  LM00058
 00336 LDQ +0 56000 0 00014    00337 MPY +0 20000 0 00052    00340 XCA +0 13100 0 00000    00341 CHS +0 76000 0 00002   
 00342 ADD +0 40000 0 00013    00343 LRS +0 76500 0 00043    00344 DVP +0 22100 0 00047    00345 STQ -0 60000 0 00552   
 00346 TSX +0 07400 4 00002    00347 TXH +3 00000 0 00552    00350 STO +0 60100 0 00552    00351 TSX +0 07400 4 00002   
 00352 TXH +3 00000 0 00014    00353 STO +0 60100 0 00551    00354 CAL -0 50000 0 00035    00355 STA +0 62100 0 00357   
 00356 CAL -0 50000 0 00551    00357 ALS +0 76700 0 00000    00360 ORA -0 50100 0 00552    00361 ORA -0 50100 0 00065   
 00362 SLW +0 60200 0 00552    00363 CLA +0 50000 0 00552    00364 TRA +0 02000 0 00544                                 
                 E'O PROGN.                                                         034  LM00062
 00365 TRA +0 02000 0 00370    00366 SXA +0 63400 2 00527    00367 TSX +0 07400 2 00527                                 
                 MESS1(1) = $L PRGN$                                                035  LM00063
 00370 CLA +0 50000 0 00063    00371 STO +0 60100 0 00021                                                               
                 X = X1                                                             036  LM00064
 00372 CLA +0 50000 0 00024    00373 STO +0 60100 0 00026                                                               
                 W'R (X.E.$(FILE)$).OR.(X.E.$.FILE.$), F'N X                        037  LM00065
 00374 CLA +0 50000 0 00026    00375 SUB +0 40200 0 00060    00376 TZE +0 10000 0 00402    00377 CLA +0 50000 0 00026   
 00400 SUB +0 40200 0 00066    00401 TNZ -0 10000 0 00404    00402 CLA +0 50000 0 00026    00403 TRA +0 02000 0 00544   
                 W'R (ZEL.(X).A.PMASK) .E. 0, F'N X                                 038  LM00066
 00404 TSX +0 07400 4 00005    00405 TXH +3 00000 0 00026    00406 STO +0 60100 0 00552    00407 CAL -0 50000 0 00552   
 00410 ANA -0 32000 0 00024    00411 SLW +0 60200 0 00552    00412 CLA +0 50000 0 00552    00413 SUB +0 40200 0 00030   
 00414 TNZ -0 10000 0 00417    00415 CLA +0 50000 0 00026    00416 TRA +0 02000 0 00544                                 
                 W'R (X.A.777777776060K).E. $CMFL00$, F'N X                         039  LM00067
 00417 CAL -0 50000 0 00026    00420 ANA -0 32000 0 00067    00421 SLW +0 60200 0 00552    00422 CLA +0 50000 0 00552   
 00423 SUB +0 40200 0 00057    00424 TNZ -0 10000 0 00427    00425 CLA +0 50000 0 00026    00426 TRA +0 02000 0 00544   
      BAD1       MESS1(3) = X                                                       040  LM00069
 00427 CLA +0 50000 0 00026    00430 STO +0 60100 0 00017                                                               
                 PRNTP.(MESS1)                                                      041  LM00070
 00431 TSX +0 07400 4 00004    00432 TXH +3 00000 0 00022                                                               
                 F'N X                                                              042  LM00071
 00433 CLA +0 50000 0 00026    00434 TRA +0 02000 0 00544                                                               
                 E'O PROBN.                                                         043  LM00075
 00435 TRA +0 02000 0 00440    00436 SXA +0 63400 2 00527    00437 TSX +0 07400 2 00527                                 
                 MESS1(1) = $L PRBN$                                                044  LM00076
 00440 CLA +0 50000 0 00062    00441 STO +0 60100 0 00021                                                               
                 X = X1                                                             045  LM00077
 00442 CLA +0 50000 0 00024    00443 STO +0 60100 0 00026                                                               
                 W'R (X.A.60K).NE.0, F'N X                                          046  LM00078
 00444 CAL -0 50000 0 00026    00445 ANA -0 32000 0 00045    00446 SLW +0 60200 0 00552    00447 CLA +0 50000 0 00552   
 00450 SUB +0 40200 0 00030    00451 TZE +0 10000 0 00454    00452 CLA +0 50000 0 00026    00453 TRA +0 02000 0 00544   
                 T'H LOOP1, FOR I=6,6,I.E.30                                        047  LM00079
 00454 CLA +0 50000 0 00033    00455 STO +0 60100 0 00015    00456 TRA +0 02000 0 00462    00457 CLA +0 50000 0 00015   
 00460 ADD +0 40000 0 00033    00461 STO +0 60100 0 00015    00462 CLA +0 50000 0 00015    00463 SUB +0 40200 0 00043   
 00464 TZE +0 10000 0 00525                                                                                             
                 W'R (((X.RS.I).A.60K).NE.0),                                       048  LM00080
                1     F'N BZEL.((((X.RS.I).A.77K).LS.24).V.                         048  LM00081
                2     ((77777777K.RS.(24-I)).A.X))                                  048  LM00082
 00465 CAL -0 50000 0 00015    00466 STA +0 62100 0 00470    00467 CAL -0 50000 0 00026    00470 LGR -0 76500 0 00000   
 00471 ANA -0 32000 0 00045    00472 SLW +0 60200 0 00552    00473 CLA +0 50000 0 00552    00474 SUB +0 40200 0 00030   
 00475 TZE +0 10000 0 00524    00476 CLA +0 50000 0 00041    00477 SUB +0 40200 0 00015    00500 STA +0 62100 0 00502   
 00501 CAL -0 50000 0 00055    00502 LGR -0 76500 0 00000    00503 ANA -0 32000 0 00026    00504 SLW +0 60200 0 00552   
 00505 CAL -0 50000 0 00015    00506 STA +0 62100 0 00510    00507 CAL -0 50000 0 00026    00510 LGR -0 76500 0 00000   
 00511 ANA -0 32000 0 00050    00512 SLW +0 60200 0 00551    00513 CAL -0 50000 0 00041    00514 STA +0 62100 0 00516   
 00515 CAL -0 50000 0 00551    00516 ALS +0 76700 0 00000    00517 ORA -0 50100 0 00552    00520 SLW +0 60200 0 00552   
 00521 TSX +0 07400 4 00001    00522 TXH +3 00000 0 00552    00523 TRA +0 02000 0 00544                                 
      LOOP1      C'E                                                                049  LM00083
 00524 TRA +0 02000 0 00457                                                                                             
                 T'O BAD1                                                           050  LM00084
 00525 TRA +0 02000 0 00007                                                                                             
                 E'N                                                                051  LM00086
 00526 TSX +0 07400 4 00003    00527 TXH +3 00000 0 00000    00530 SXD -0 63400 1 00527    00531 SXA +0 63400 4 00544   
 00532 CLA +0 50000 4 00001    00533 STO +0 60100 0 00076    00534 STA +0 62100 0 00173    00535 STO +0 60100 0 00252   
 00536 STA +0 62100 0 00326    00537 STA +0 62100 0 00372    00540 STA +0 62100 0 00442    00541 CLA +0 50000 4 00002   
 00542 STA +0 62100 0 00165    00543 TRA +0 02000 2 00001    00544 AXT +0 77400 4 00000    00545 LXA +0 53400 2 00527   
 00546 LXD -0 53400 1 00527    00547 TRA +0 02000 4 00001                                                               
1            FUNCTION DISPATCHER FOR 'CALL' COMMAND                                              PAGE 1     
                           D.R. WIDRIG  MAY 1966                                    
                  
                  
                       00042         ENTRY   SUBNAM        TO SET NAME AND CALL     
                       00057         ENTRY   CALL          TO CALL SUBROUTINE 
                       00161         ENTRY   GCLS          SHORT FORM TO REPLACE LIBRARY KLUDGE 
                  
                              SUBS   MACRO   NAME          MACRO TO GENERATE TABLE OF CALLS     
                                     BCI     1,'NAME  
                                     TTR     $'NAME   
                              SUBS   END  
                  
                  
        TRANSFER VECTOR 
      00000  644724442624     UPDMFD
      00001  242543442624     DELMFD
      00002  216363212330     ATTACH
      00003  444665263143     MOVFIL
      00004  622563263143     SETFIL
      00005  433145426060     LINK  
      00006  214343466360     ALLOT 
      00007  644724216325     UPDATE
      00010  464725456060     OPEN  
      00011  226426262551     BUFFER
      00012  512426314325     RDFILE
      00013  512466213163     RDWAIT
      00014  665126314325     WRFILE
      00015  665166213163     WRWAIT
      00016  635126314325     TRFILE
      00017  262330252342     FCHECK
      00020  234346622560     CLOSE 
      00021  266621316360     FWAIT 
      00022  622563475131     SETPRI
      00023  512562256326     RESETF
      00024  233026314325     CHFILE
      00025  242543263143     DELFIL
      00026  266263216325     FSTATE
      00027  644543314542     UNLINK
      00030  626346512725     STORGE
      00031  216363452144     ATTNAM
      00032  314624312127     IODIAG
      00033  444664456360     MOUNT 
      00034  644446644563     UMOUNT
      00035  652551312670     VERIFY
      00036  432122254360     LABEL 
      00037  632147263143     TAPFIL
                  
            LINKAGE DIRECTOR  
      00040  000000000000     
      00041  626422452144     
                  
      00042  0636 00 4 00055  SUBNAM SCA     SUBX4,4       SAVE LINKAGE 
      00043 -0500 60 4 00001         CAL*    1,4           GET LEFT-JUSTIFIED TEST WORD   
      00044  0774 00 4 00100         AXT     NCALLS,4      INITIALIZE LOOP COUNTER  
1            FUNCTION DISPATCHER FOR 'CALL' COMMAND                                              PAGE 2     
                           D.R. WIDRIG  MAY 1966                                    
                  
      00045 -0340 00 4 00161         LAS     CALLS+NCALLS,4 TEST WORD AGAINST TABLE 
      00046  0020 00 0 00050         TRA     *+2           NOPE, TRY SOME MORE
      00047  0020 00 0 00053         TRA     NAMFND        AHH.. SET UP TRANSFER    
      00050  2 00002 4 00045         TIX     *-3,4,2       LOOP   
                  
      00051  0500 00 0 00060         CLA     RET           NOT FOUND, SET 1,4 RETURN
      00052  0020 00 0 00054         TRA     NAMFND+1      ..     
                  
      00053  0500 60 4 00162  NAMFND CLA*    CALLS+NCALLS+1,4 PICK UP TRANSFER VECTOR     
      00054  0601 00 0 00057         STO     CALL          AND PLANT TRANFER LOCATION     
                  
      00055 -0774 00 4 00000  SUBX4  AXC     **,4          RESTORE LINKAGE    
      00056  0020 00 4 00002         TRA     2,4           AND RETURN TO MAIN PROGRAM     
                  
      00057  0 00000 0 00000  CALL   ***     **            LINKAGE TO FUNCTION SELECTED   
      00060  0020 00 4 00001  RET    TRA     1,4           DUMMY RETURN 
1            FUNCTION DISPATCHER FOR 'CALL' COMMAND                                              PAGE 3     
                           D.R. WIDRIG  MAY 1966                                    
                  
                                             TABLE OF ALLOWABLE CALLS   
                  
      00061                   CALLS  SUBS    UPDMFD   
      00063                          SUBS    DELMFD   
      00065                          SUBS    ATTACH   
      00067                          SUBS    MOVFIL   
      00071                          SUBS    SETFIL   
      00073                          SUBS    LINK     
      00075                          SUBS    ALLOT    
                  
      00077                          SUBS    UPDATE   
      00101                          SUBS    OPEN     
      00103                          SUBS    BUFFER   
      00105                          SUBS    RDFILE   
      00107                          SUBS    RDWAIT   
      00111                          SUBS    WRFILE   
      00113                          SUBS    WRWAIT   
      00115                          SUBS    TRFILE   
      00117                          SUBS    FCHECK   
      00121                          SUBS    CLOSE    
      00123                          SUBS    FWAIT    
                  
      00125                          SUBS    SETPRI   
      00127                          SUBS    RESETF   
      00131                          SUBS    CHFILE   
      00133                          SUBS    DELFIL   
      00135                          SUBS    FSTATE   
      00137                          SUBS    UNLINK   
      00141                          SUBS    STORGE   
      00143                          SUBS    ATTNAM   
      00145                          SUBS    IODIAG   
      00147                          SUBS    MOUNT    
      00151                          SUBS    UMOUNT   
      00153                          SUBS    VERIFY   
      00155                          SUBS    LABEL    
      00157                          SUBS    TAPFIL   
                  
                       00100  NCALLS EQU     *-CALLS  
1            FUNCTION DISPATCHER FOR 'CALL' COMMAND                                              PAGE 4     
                           D.R. WIDRIG  MAY 1966                                    
                  
                                             SHORT 'GCLS' TO REPLACE ABOMINATION IN LIBRARY     
                  
      00161  0636 00 4 00177  GCLS   SCA     GCLX4,4       SAVE LINKAGE 
      00162  0636 00 2 00176         SCA     GCLX2,2       AND IR2
      00163  0500 00 4 00001         CLA     1,4           GET POINTER TO BUFFER    
      00164  0621 00 0 00172         STA     INTO          SET UP RETURN OPERATION  
                  
      00165  0074 00 4 00201         TSX     GETCLS,4      CALL UP SUPERVISOR 
      00166  0 00000 0 00202         PZE     BUFF,,0       CURRENT COMMAND BUFFER   
                  
      00167  0774 00 4 00000         AXT     0,4           NOW MOVE WORDS TO 'CALL' 
      00170  0774 00 2 00000         AXT     0,2           IR2 IS THE 'FROM' POINTER
                  
      00171 -0500 00 2 00202  STORE  CAL     BUFF,2        GET SUPERVISOR WORD
      00172  0602 00 4 00000  INTO   SLW     **,4          GIVE TO 'CALL' MAIN PROGRAM    
      00173  1 77777 2 00174         TXI     *+1,2,-1      MOVE 'FROM' POINTER UP ONE     
      00174  1 00001 4 00175         TXI     *+1,4,1       MOVE 'TO' POINTER DOWN ONE     
      00175 -3 00023 4 00171         TXL     STORE,4,19    LOOP   
                  
      00176 -0774 00 2 00000  GCLX2  AXC     **,2          DONE, RESTORE THE SCENE  
      00177 -0774 00 4 00000  GCLX4  AXC     **,4          AND THE LINKAGE    
      00200  0020 00 4 00003         TRA     3,4           AND GO HOME  
                  
      00201  0101 00 0 00226  GETCLS TIA     =HGETCLS      SUPERVISOR CALL    
      00202                   BUFF   BSS     20            TEMPORARY STORAGE FOR RETURN GOODIES 
                  
                                     END  
                  
        LITERALS  
      00226  272563234362     
1            FUNCTION DISPATCHER FOR 'CALL' COMMAND                                              PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        227 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         60    RET    51
        202   BUFF   166,  171
         57   CALL     0,   54
        161   GCLS     0
        172   INTO   164
          5   LINK    74
         10   OPEN   102
          6  ALLOT    76
         61  CALLS    45,   53,  161
         20  CLOSE   122
         21  FWAIT   124
        176  GCLX2   162
        177  GCLX4   161
         36  LABEL   156
         33  MOUNT   150
        171  STORE   175
         55  SUBX4    42
          2 ATTACH    66
         31 ATTNAM   144
         11 BUFFER   104
         24 CHFILE   132
         25 DELFIL   134
          1 DELMFD    64
         17 FCHECK   120
         26 FSTATE   136
        201 GETCLS   165
         32 IODIAG   146
          3 MOVFIL    70
         53 NAMFND    47,   52
        100 NCALLS    44,   45,   53,  161
         12 RDFILE   106
         13 RDWAIT   110
         23 RESETF   130
          4 SETFIL    72
         22 SETPRI   126
         30 STORGE   142
         42 SUBNAM     0
         37 TAPFIL   160
         16 TRFILE   116
         34 UMOUNT   152
         27 UNLINK   140
          7 UPDATE   100
          0 UPDMFD    62
         35 VERIFY   154
         14 WRFILE   112
         15 WRWAIT   114
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            SUBROUTINES TO REPLACE CRUD IN LIBRARY                                              PAGE 1     
                           D.R. WIDRIG  AUGUST 1966                                 
                  
                       00002         ENTRY   .SETUP        CALLED BY MAD MAIN PROGS 
                       00003         ENTRY   EXIT          CALLED BY MAD PROGS
                  
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  336225636447     
                  
      00002  0020 00 4 00001  .SETUP TRA     1,4           RETURN 
                  
      00003  0101 00 0 00004  EXIT   TIA     =HCHNCOM      THAT'S ALL   
                  
                                     END  
                  
        LITERALS  
      00004  233045234644     
1            SUBROUTINES TO REPLACE CRUD IN LIBRARY                                              PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          5 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          3   EXIT     0
          2 .SETUP     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




CHBALL   BCD 09/18/68 2206.0    2588         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  CHBALL   MAD            02/08/68    1717.7
-                 
                  CHBALL COMMAND - REVISED 11/08/67  PETER R. BOS                                      LM00001    
                                                                                                       LM00002    
                  'CHBALL' -BALL-                                                                      LM00003    
                     WHERE BALL MAY BE '938', '963', OR NOT                                            LM00004    
                     GIVEN, IN WHICH CASE THE OPPOSITE TYPE                                            LM00005    
                     FROM THAT CURRENTLY IN USE WILL BE ASSUMED.                                       LM00006    
                                                                                                       LM00007    
                  NORMAL MODE IS INTEGER                                                          *001 LM00008    
                  UIDLOC=COMLOC.($UNITID$)+GLOC.(COMLOC.($USER$))                                 *002 LM00009    
                  OLDID=GLOC.(UIDLOC)                                                             *003 LM00010    
                  OLDTYP=OLDID.RS.24                                                              *004 LM00011    
                  OLDID=OLDID.A.77777777K                                                         *005 LM00012    
                                                                                                       LM00013    
                  BALL=COMARG.(1)                                                                 *006 LM00014    
                                                                                                       LM00015    
                  WHENEVER BALL.E.$   963$                                                        *007 LM00016    
                    WHENEVER OLDTYP.RS.6.E.$000008$, CHNCOM.(0)                                   *008 LM00017    
                    TRANSFER TO CHBALL                                                            *009 LM00018    
                  OR WHENEVER BALL.E.$   938$                                                     *010 LM00019    
                    WHENEVER OLDTYP.RS.6.E.$000002$, CHNCOM.(0)                                   *011 LM00020    
                    TRANSFER TO CHBALL                                                            *012 LM00021    
                  OR WHENEVER BALL.E.777777777777K                                                *013 LM00022    
      CHBALL        WHENEVER OLDTYP.E.$000020$                                                    *014 LM00023    
                      NEWID=OLDID.V.$820000$                                                      *015 LM00024    
                      TRANSFER TO SET                                                             *016 LM00025    
                    OR WHENEVER OLDTYP.E.$000082$                                                 *017 LM00026    
                      NEWID=OLDID.V.$200000$                                                      *018 LM00027    
                      TRANSFER TO SET                                                             *019 LM00028    
                    OR WHENEVER OLDTYP.E.$000080$                                                 *020 LM00029    
                      NEWID=OLDID.V.$280000$                                                      *021 LM00030    
                      TRANSFER TO SET                                                             *022 LM00031    
                    OR WHENEVER OLDTYP.E.$000028$                                                 *023 LM00032    
                      NEWID=OLDID.V.$800000$                                                      *024 LM00033    
      SET             SLOC.(NEWID,UIDLOC)                                                         *025 LM00034    
                    OTHERWISE                                                                     *026 LM00035    
                      PRMESS.($THIS COMMAND FOR 1050'S AND 2741'S ONLY$)                          *027 LM00036    
                    END OF CONDITIONAL                                                            *028 LM00037    
                  OTHERWISE                                                                       *029 LM00038    
                    PRMESS.($'CHBALL 963' OR 'CHBALL 938'$)                                       *030 LM00039    
                  END OF CONDITIONAL                                                              *031 LM00040    
                                                                                                       LM00041    
                  CHNCOM.(0)                                                                      *032 LM00042    
                                                                                                       LM00043    
                  END OF PROGRAM                                                                  *033 LM00044    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00242 TRANSFER VECTOR LENGTH  00010 PROGRAM BEGINS    00061
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BALL   00013   1        NEWID  00014   1        OLDTYP 00016   1        SET    00012   4        UIDLOC 00017   1  
      CHBALL 00011   4        OLDID  00015   1                                                                          
0FUNCTION DICTIONARY    
      CHNCOM 00000   1        COMARG 00001   1        COMLOC 00002   1        EXIT   00003   1        GLOC   00004   1  
      .SETUP 00005   1        PRMESS 00006   1        SLOC   00007   1                                                  
0ABSOLUTE CONSTANTS     
 00041 +110310146060     00045 +302221434360     00052 -204651601423     00046 -036011060314     00042 +142330222143    
 00047 -054370606060     00036 +040114626046     00043 +214524600207     00033 +000500146260     00051 -202646516001    
 00050 -064444214524     00055 -233031626023     00037 +100000000000     00027 +000000000210     00035 +021000000000    
 00030 +000000001000     00034 +020000000000     00031 +000000001002     00040 +100200000000     00026 +000000000200    
 00060 -377777777777     00022 +000000000002     00053 -206060110310     00020 +000000000000     00024 +000000000010    
 00023 +000000000006     00054 -206060110603     00032 +000077777777     00025 +000000000030     00056 -244531633124    
 00057 -246225516060     00021 +000000000001     00044 +233000000000                                                    
0STATEMENT DICTIONARY   
 00011 TXL -300156000153       00012 TXL -300214000211                                                                  
0PROGRAM    
                 N'S INTEGER                                                        001  LM00008
                 UIDLOC=COMLOC.($UNITID$)+GLOC.(COMLOC.($USER$))                    002  LM00009
 00061 TSX +0 07400 4 00005    00062 TSX +0 07400 4 00002    00063 TXH +3 00000 0 00057    00064 STO +0 60100 0 00237   
 00065 TSX +0 07400 4 00004    00066 TXH +3 00000 0 00237    00067 STO +0 60100 0 00237    00070 TSX +0 07400 4 00002   
 00071 TXH +3 00000 0 00056    00072 ADD +0 40000 0 00237    00073 STO +0 60100 0 00017                                 
                 OLDID=GLOC.(UIDLOC)                                                003  LM00010
 00074 TSX +0 07400 4 00004    00075 TXH +3 00000 0 00017    00076 STO +0 60100 0 00015                                 
                 OLDTYP=OLDID.RS.24                                                 004  LM00011
 00077 CAL -0 50000 0 00025    00100 STA +0 62100 0 00102    00101 CAL -0 50000 0 00015    00102 LGR -0 76500 0 00000   
 00103 SLW +0 60200 0 00016                                                                                             
                 OLDID=OLDID.A.77777777K                                            005  LM00012
 00104 CAL -0 50000 0 00015    00105 ANA -0 32000 0 00032    00106 SLW +0 60200 0 00015                                 
                 BALL=COMARG.(1)                                                    006  LM00014
 00107 TSX +0 07400 4 00001    00110 TXH +3 00000 0 00021    00111 STO +0 60100 0 00013                                 
                 W'R BALL.E.$   963$                                                007  LM00016
 00112 CLA +0 50000 0 00013    00113 SUB +0 40200 0 00054    00114 TNZ -0 10000 0 00131                                 
                   W'R OLDTYP.RS.6.E.$000008$, CHNCOM.(0)                           008  LM00017
 00115 CAL -0 50000 0 00023    00116 STA +0 62100 0 00120    00117 CAL -0 50000 0 00016    00120 LGR -0 76500 0 00000   
 00121 SLW +0 60200 0 00237    00122 CLA +0 50000 0 00237    00123 SUB +0 40200 0 00024    00124 TNZ -0 10000 0 00127   
 00125 TSX +0 07400 4 00000    00126 TXH +3 00000 0 00020                                                               
                   T'O CHBALL                                                       009  LM00018
 00127 TRA +0 02000 0 00011                                                                                             
                 O'R BALL.E.$   938$                                                010  LM00019
 00130 TRA +0 02000 0 00234    00131 CLA +0 50000 0 00013    00132 SUB +0 40200 0 00053    00133 TNZ -0 10000 0 00150   
                   W'R OLDTYP.RS.6.E.$000002$, CHNCOM.(0)                           011  LM00020
 00134 CAL -0 50000 0 00023    00135 STA +0 62100 0 00137    00136 CAL -0 50000 0 00016    00137 LGR -0 76500 0 00000   
 00140 SLW +0 60200 0 00237    00141 CLA +0 50000 0 00237    00142 SUB +0 40200 0 00022    00143 TNZ -0 10000 0 00146   
 00144 TSX +0 07400 4 00000    00145 TXH +3 00000 0 00020                                                               
                   T'O CHBALL                                                       012  LM00021
 00146 TRA +0 02000 0 00011                                                                                             
                 O'R BALL.E.777777777777K                                           013  LM00022
 00147 TRA +0 02000 0 00234    00150 CLA +0 50000 0 00013    00151 SUB +0 40200 0 00060    00152 TNZ -0 10000 0 00226   
      CHBALL       W'R OLDTYP.E.$000020$                                            014  LM00023
 00153 CLA +0 50000 0 00016    00154 SUB +0 40200 0 00026    00155 TNZ -0 10000 0 00163                                 
                     NEWID=OLDID.V.$820000$                                         015  LM00024
 00156 CAL -0 50000 0 00015    00157 ORA -0 50100 0 00040    00160 SLW +0 60200 0 00014                                 
                     T'O SET                                                        016  LM00025
 00161 TRA +0 02000 0 00012                                                                                             
                   O'R OLDTYP.E.$000082$                                            017  LM00026
 00162 TRA +0 02000 0 00225    00163 CLA +0 50000 0 00016    00164 SUB +0 40200 0 00031    00165 TNZ -0 10000 0 00173   
                     NEWID=OLDID.V.$200000$                                         018  LM00027
 00166 CAL -0 50000 0 00015    00167 ORA -0 50100 0 00034    00170 SLW +0 60200 0 00014                                 
                     T'O SET                                                        019  LM00028
 00171 TRA +0 02000 0 00012                                                                                             
                   O'R OLDTYP.E.$000080$                                            020  LM00029
 00172 TRA +0 02000 0 00225    00173 CLA +0 50000 0 00016    00174 SUB +0 40200 0 00030    00175 TNZ -0 10000 0 00203   
                     NEWID=OLDID.V.$280000$                                         021  LM00030
 00176 CAL -0 50000 0 00015    00177 ORA -0 50100 0 00035    00200 SLW +0 60200 0 00014                                 
                     T'O SET                                                        022  LM00031
 00201 TRA +0 02000 0 00012                                                                                             
                   O'R OLDTYP.E.$000028$                                            023  LM00032
 00202 TRA +0 02000 0 00225    00203 CLA +0 50000 0 00016    00204 SUB +0 40200 0 00027    00205 TNZ -0 10000 0 00215   
                     NEWID=OLDID.V.$800000$                                         024  LM00033
 00206 CAL -0 50000 0 00015    00207 ORA -0 50100 0 00037    00210 SLW +0 60200 0 00014                                 
      SET            SLOC.(NEWID,UIDLOC)                                            025  LM00034
 00211 TSX +0 07400 4 00007    00212 TXH +3 00000 0 00014    00213 TXH +3 00000 0 00017                                 
                   O'E                                                              026  LM00035
 00214 TRA +0 02000 0 00225                                                                                             
                     PRMESS.($THIS COMMAND FOR 1050'S AND 2741'S ONLY$)             027  LM00036
 00215 TSX +0 07400 4 00006    00216 TXH +3 00000 0 00055    00217 TXH +3 00000 0 00050    00220 TXH +3 00000 0 00051   
 00221 TXH +3 00000 0 00033    00222 TXH +3 00000 0 00043    00223 TXH +3 00000 0 00036    00224 TXH +3 00000 0 00047   
                   E'L                                                              028  LM00037
                 O'E                                                                029  LM00038
 00225 TRA +0 02000 0 00234                                                                                             
                   PRMESS.($'CHBALL 963' OR 'CHBALL 938'$)                          030  LM00039
 00226 TSX +0 07400 4 00006    00227 TXH +3 00000 0 00042    00230 TXH +3 00000 0 00046    00231 TXH +3 00000 0 00052   
 00232 TXH +3 00000 0 00045    00233 TXH +3 00000 0 00041                                                               
                 E'L                                                                031  LM00040
                 CHNCOM.(0)                                                         032  LM00042
 00234 TSX +0 07400 4 00000    00235 TXH +3 00000 0 00020                                                               
                 END OF PROGRAM                                                     033  LM00044
 00236 TSX +0 07400 4 00003                                                                                             




CHMODE   BCD 09/18/68 2206.0   11391         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE   CHMDE   MAD            02/08/68    1720.8
-                 
      DELET      ..DELETE, CHMODE, AND RENAME COMMANDS.                                                LM00001    
                                                                                                       LM00002    
                 ..DELETE A(1) B(1) A(2) B(2) ... A(N) B(N)                                            LM00003    
                 ..DELETES ALL VERSIONS OF FILES A(I) B(I), IF POSSIBLE                                LM00004    
                 ..IF NOT, PRINTS COMMENT.                                                             LM00005    
                 ..IF B(I) = '*', ANY FILE WITH PRIMARY NAME A(I)                                      LM00006    
                 ..WILL BE DELETED                                                                     LM00007    
                 ..IF A(I) = '*', ANY FILE WITH SECONDARY NAME B(I) WILL                               LM00008    
                 ..BE DELETED                                                                          LM00009    
                                                                                                       LM00010    
                 ..CHMODE A(1) B(1) M(1) A(2) B(2) M(2) ... A(N) B(N) M(N)                             LM00011    
                 ..WHERE M(I) IS 0, 1, 2, 3, T, P, R1, OR R2                                           LM00012    
                                                                                                       LM00013    
                 ..IF NOT, PRINTS COMMENT                                                              LM00014    
                 ..A(I) OR B(I) MAY BE '*', SAME CONVENTIONS AS ABOVE                                  LM00015    
                                                                                                       LM00016    
                 ..RENAME A(1) B(1) C(1) D(1) ... A(N) B(N) C(N) D(N)                                  LM00017    
                 ..FILES A(I) B(I) ARE RENAMED TO C(I) D(I) ONLY IF MODE                               LM00018    
                 ..ALLOWS IT, AND IF ALL PREVIOUS COPIES OF C(I) D(I) ARE                              LM00019    
                 ..DELETED. IF NOT, PRINTS COMMENT                                                     LM00020    
                 ..IF C(I) = '*', THEN A(I) MUST BE '*', AND ONLY SECONDARY                            LM00021    
                 ..NAME IS CHANGED                                                                     LM00022    
                 ..IF D(I) = '*', THEN B(I) MUST BE '*', OR MISSING, AND                               LM00023    
                 ..ONLY PRIMARY NAME IS CHANGED, FOR ALL A(I)                                          LM00024    
                 ..THE LAST D(N) MISSING IS ASSUMED B(N)                                               LM00025    
                                                                                                       LM00026    
      DELT        FDR=0                                                                           *001 LM00027    
                                                                                                       LM00028    
                  WHENEVER COMARG.(0,COM).E.$DELETE$                                              *002 LM00029    
                  CM=1                                                                            *003 LM00030    
                  OR WHENEVER COM.E.$CHMODE$                                                      *004 LM00031    
                  CM=2                                                                            *005 LM00032    
                  OR WHENEVER COM.E.$RENAME$                                                      *006 LM00033    
                  CM=3                                                                            *007 LM00034    
                  END OF CONDITIONAL                                                              *008 LM00035    
                                                                                                       LM00036    
      ARG         THROUGH ARG, FOR A=1,1,A.E.19.OR.COMARG.(A,A(A)).E.FENCE                        *009 LM00037    
                  A(A)=$$                                                                         *010 LM00038    
                  THROUGH ARGCK, FOR I=1,2,I.G.A-1                                                *011 LM00039    
                  MODF=0                                                                          *012 LM00040    
                  MODG=0                                                                          *013 LM00041    
                                                                                                       LM00042    
                  WHENEVER I+CM.G.A-1                                                             *014 LM00043    
                  TRANSFER TO ER(CM)                                                              *015 LM00044    
      ER(1)       MES5=$$                                                                         *016 LM00045    
                  MES5(1)=A(I)                                                                    *017 LM00046    
      ERA         EXECUTE PRNTP.(MES5)                                                            *018 LM00047    
                  EXECUTE CHNCOM.(0)                                                              *019 LM00048    
      ER(2)       MES5=A(I)                                                                       *020 LM00049    
                  MES5(1)=A(I+1)                                                                  *021 LM00050    
                  TRANSFER TO ERA                                                                 *022 LM00051    
      ER(3)       WHENEVER I+CM-1.G.A-1, TRANSFER TO ER(2)                                        *023 LM00052    
                  A(I+3)=A(I+1)                                                                   *024 LM00053    
                  END OF CONDITIONAL                                                              *025 LM00054    
                                                                                                       LM00055    
                  WHENEVER A(I).E.0.AND.A(I+1).E.0                                                *026 LM00056    
                  EXECUTE PRNTP.(MES6)                                                            *027 LM00057    
                  TRANSFER TO ARGCK                                                               *028 LM00058    
                  OR WHENEVER A(I).E.ASTRSK                                                       *029 LM00059    
                  WHENEVER CM.E.3.AND.A(I+2).NE.ASTRSK, TRANSFER TO ARGC                          *030 LM00060    
                  E1=4                                                                            *031 LM00061    
                  TRANSFER TO STAR                                                                *032 LM00062    
                  OR WHENEVER A(I+1).E.ASTRSK                                                     *033 LM00063    
                  WHENEVER CM.E.3.AND.A(I+3).NE.ASTRSK, TRANSFER TO ARGC                          *034 LM00064    
                  E1=3                                                                            *035 LM00065    
                  TRANSFER TO STAR                                                                *036 LM00066    
                  OR WHENEVER CM.E.3.AND.A(I+2).E.ASTRSK                                          *037 LM00067    
                  TRANSFER TO ASTER                                                               *038 LM00068    
                  OR WHENEVER CM.E.3.AND.A(I+3).E.ASTRSK                                          *039 LM00069    
                  TRANSFER TO ASTER                                                               *040 LM00070    
                  END OF CONDITIONAL                                                              *041 LM00071    
                                                                                                       LM00072    
      ARGC        EXECUTE FSTATE.(A(I),A(I+1),FV(1)...1,NOFIL)                                    *042 LM00073    
                                                                                                       LM00074    
                  EXECUTE EXEC.                                                                   *043 LM00075    
      ARGCK       I=I+CM-1                                                                        *044 LM00076    
                  EXECUTE CHNCOM.(0)                                                              *045 LM00077    
                                                                                                       LM00078    
      NOFIL       MES2(1)=A(I)                                                                    *046 LM00079    
                  MES2(2)=A(I+1)                                                                  *047 LM00080    
                  EXECUTE PRNTP.(MES2)                                                            *048 LM00081    
                  TRANSFER TO ARGCK                                                               *049 LM00082    
                                                                                                       LM00083    
      ASTER       EXECUTE PRNTP.(MES10)                                                           *050 LM00084    
                  TRANSFER TO ARGCK                                                               *051 LM00085    
                                                                                                       LM00086    
      STAR        WHENEVER FDR.E.1, TRANSFER TO SCA                                               *052 LM00087    
                  WHENEVER FDR.E.2, TRANSFER TO STR                                               *053 LM00088    
                  EXECUTE UPDATE.                                                                 *054 LM00089    
                  EXECUTE LDFIL.($U.F.D.$,$(FILE)$,SCAN.)                                         *055 LM00090    
                  EXECUTE PRNTP.(MES4)                                                            *056 LM00091    
      STR         MES11=A(I)                                                                      *057 LM00092    
                  MES11(1)=A(I+1)                                                                 *058 LM00093    
                  EXECUTE PRNTP.(MES11)                                                           *059 LM00094    
                  FDR=2                                                                           *060 LM00095    
                  TRANSFER TO ARGCK                                                               *061 LM00096    
                                                                                                       LM00097    
                                                                                                       LM00098    
                  INTERNAL FUNCTION(LODAD)                                                        *062 LM00099    
                  ENTRY TO SCAN.                                                                  *063 LM00100    
                  FDR=1                                                                           *064 LM00101    
      SCA         AVJ=I+E1-3                                                                      *065 LM00102    
                  THROUGH SC, FOR J=E1+1,7,J.GE.(LODAD)                                           *066 LM00103    
                  WHENEVER LODAD(1K5-J).E.A(AVJ), TRANSFER TO GRARG                               *067 LM00104    
      SC1         P=(LODAD(1K5-J-8+E1).LS.18).RS.33                                               *068 LM00105    
                  F=(LODAD(1K5-J-7+E1).LS.18).RS.33                                               *069 LM00106    
                  WHENEVER F.NE.0, J=J+P-1                                                        *070 LM00107    
      SC          CONTINUE                                                                        *071 LM00108    
                  WHENEVER A(I+4-E1).E.ASTRSK.AND.MODG.E.0,TRANSFERTOERK(5-E1)                    *072 LM00109    
                  TRANSFER TO ARGCK                                                               *073 LM00110    
                                                                                                       LM00111    
      ERK(1)      MES12(3)=$SECOND$                                                               *074 LM00112    
                  TRANSFER TO ERKA                                                                *075 LM00113    
      ERK(2)      MES12(3)=$ FIRST$                                                               *076 LM00114    
      ERKA        MES12(5)=A(I+E1-3)                                                              *077 LM00115    
                  EXECUTE PRNTP.(MES12)                                                           *078 LM00116    
                  TRANSFER TO ARGCK                                                               *079 LM00117    
                                                                                                       LM00118    
      GRARG       A(I+4-E1)=LODAD(1K5-J-7+2*E1)                                                   *080 LM00119    
                  WHENEVER CM.E.3,A(I+6-E1)=A(I+4-E1)                                             *081 LM00120    
                  WHENEVER A(I+4-E1).E.ASTRSK, MODG=1                                             *082 LM00121    
                  EXECUTE EXEC.                                                                   *083 LM00122    
                  TRANSFER TO SC1                                                                 *084 LM00123    
                  END OF FUNCTION                                                                 *085 LM00124    
                                                                                                       LM00125    
                                                                                                       LM00126    
                  INTERNAL FUNCTION                                                               *086 LM00127    
                  ENTRY TO EXEC.                                                                  *087 LM00128    
                  TRANSFER TO FUN(CM)                                                             *088 LM00129    
                                                                                                       LM00130    
      FUN(1)      WHENEVER DELETE.(A(I)).E.0, TRANSFER TO FUNA                                    *089 LM00131    
                  MES3(1)=A(I)                                                                    *090 LM00132    
                  MES3(2)=A(I+1)                                                                  *091 LM00133    
                  EXECUTE PRNTP.(MES3)                                                            *092 LM00134    
      FUNA        FUNCTION RETURN                                                                 *093 LM00135    
                                                                                                       LM00136    
      FUN(2)      WHENEVER MODF .E. 1, TRANSFER TO FUNB                                           *094 LM00137    
                  GETMOD.(A(I+2),FUNB1)                                                           *095 LM00138    
                  EXECUTE PRNTP.(MES7)                                                            *096 LM00139    
                  TRANSFER TO ARGCK                                                               *097 LM00140    
      FUNB1       MODF = 1                                                                        *098 LM00141    
      FUNB        CHFILE. (A(I),A(I+1),A(I+2),-0,-0,FUNB2)                                        *099 LM00142    
                  TRANSFER TO FUNA                                                                *100 LM00143    
      FUNB2       MES8(1)=A(I)                                                                    *101 LM00144    
                  MES8(2)=A(I+1)                                                                  *102 LM00145    
                  EXECUTE PRNTP.(MES8)                                                            *103 LM00146    
                  FUNCTION RETURN                                                                 *104 LM00147    
                                                                                                       LM00148    
      FUN(3)      WHENEVER RENAME.(A(I),A(I+2)).E.0, TRANSFER TO FUNA                             *105 LM00149    
                  MES9(1)=A(I)                                                                    *106 LM00150    
                  MES9(2)=A(I+1)                                                                  *107 LM00151    
                  EXECUTE PRNTP.(MES9)                                                            *108 LM00152    
                  FUNCTION RETURN                                                                 *109 LM00153    
                  END OF FUNCTION                                                                 *110 LM00154    
                                                                                                       LM00155    
                                                                                                       LM00156    
                  VECTOR VALUES MES2=$ FILE$,0,0,$ NOT FOUND$,777777777777K                       *111 LM00157    
                  VECTOR VALUES MES3=$ FILE$,0,0,$ NOT DELETED$,777777777777K                     *112 LM00158    
                  VECTOR VALUES MES4=$ ERROR IN READING FILE DIRECTORY$,                          *113 LM00159    
                1 777777777777K                                                                   *113 LM00160    
                  VECTOR VALUES MES5(2)=$ INCOMPLETE SET OF ARGUMENTS$,                           *114 LM00161    
                1 777777777777K                                                                   *114 LM00162    
                  VECTOR VALUES MES6=$ FILE NAME ILLEGAL$,777777777777K                           *115 LM00163    
                  VECTOR VALUES MES7=$ ILLEGAL MODE DEFINITION$,777777777777K                     *116 LM00164    
                  VECTOR VALUES MES8=$ FILE$,0,0,$ MODE NOT CHANGED$,                             *117 LM00165    
                1 777777777777K                                                                   *117 LM00166    
                  VECTOR VALUES MES9=$ FILE$,0,0,$ NOT RENAMED$,777777777777K                     *118 LM00167    
                  VECTOR VALUES MES10=$ ILLEGAL USE OF ASTERISK$,777777777777K                    *119 LM00168    
                  VECTOR VALUES MES11(2)=$ IGNORED$,777777777777K                                 *120 LM00169    
                  VECTOR VALUES MES12=$ NO FILE WITH $,0,$ NAME $,0,$ FOUND$,                     *121 LM00170    
                1 777777777777K                                                                   *121 LM00171    
                                                                                                       LM00172    
                  VECTOR VALUES ASTRSK=$     *$                                                   *122 LM00173    
                  VECTOR VALUES FENCE=777777777777K                                               *123 LM00174    
                  NORMAL MODE IS INTEGER                                                          *124 LM00175    
                  DIMENSION A(19),FV(1)                                                           *125 LM00176    
                  END OF PROGRAM                                                                  *126 LM00177    
       THE FOLLOWING NAMES HAVE OCCURRED ONLY ONCE IN THIS PROGRAM.     
       THEY WILL ALL BE ASSIGNED TO THE SAME LOCATION, AND  
       COMPILATION WILL CONTINUE.   
      DELT  
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01252 TRANSFER VECTOR LENGTH  00014 PROGRAM BEGINS    00245
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      ARGCK  00017   4        E1     00101   1        FUNB2  00035   4        MES12  00132 A 1        MODF   00214   1  
      ARGC   00020   4        ERA    00022   4        FUNB   00036   4        MES2   00140 A 1        MODG   00215   1  
      ARG    00016   4        ERKA   00023   4        FUN    00042 A 4        MES3   00146 A 1        NOFIL  00044   4  
      A      00074 A 1        ERK    00026 A 4        FV     00106 A 1        MES4   00155 A 1        P      00216   1  
      ASTER  00021   4        ER     00032 A 4        GRARG  00043   4        MES5   00165 A 1        SC1    00045   4  
      ASTRSK 00075 A 1        FDR    00102   1        I      00107   1        MES6   00171 A 1        SCA    00046   4  
      AVJ    00076   1        FENCE  00103 A 1        J      00110   1        MES7   00176 A 1        SC     00016   4  
      CM     00077   1        F      00104   1        MES10  00115 A 1        MES8   00205 A 1        STAR   00047   4  
      COM    00100   1        FUNA   00033   4        MES11  00122 A 1        MES9   00213 A 1        STR    00050   4  
      DELT   00016   4        FUNB1  00034   4                                                                          
0FUNCTION DICTIONARY    
      CHFILE 00000   1        CHNCOM 00001   1        COMARG 00002   1        DELETE 00003   1        EXIT   00004   1  
      FSTATE 00005   1        GETMOD 00006   1        .SETUP 00007   1        LDFIL  00010   1        PRNTP  00011   1  
      RENAME 00012   1        UPDATE 00013   1        EXEC   00014   1        SCAN   00015   1                          
0ABSOLUTE CONSTANTS     
 00225 +000000000006     00240 -202631516263     00242 -222523464524     00224 +000000000005     00232 +000000000041    
 00230 +000000000022     00227 +000000000010     00233 +000000100000     00226 +000000000007     00244 -342631432534    
 00243 -243326332433     00223 +000000000004     00241 -206060606060     00231 +000000000023     00222 +000000000003    
 00237 -112545214425     00221 +000000000002     00235 +233044462425     00236 +242543256325     00217 +000000000000    
 00220 +000000000001     00234 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00017 TXL -300555000550       00020 TXL -300547000531       00021 TXL -300574000572       00022 TXL -300362000360      
 00023 TXL -300766000760       00024 TXL -300760000756       00025 TXL -300755000753       00027 TXL -300407000375      
 00030 TXL -300367000364       00031 TXL -300355000353       00033 TXL -301113001112       00034 TXL -301134001132      
 00035 TXL -301171001166       00036 TXL -301165001134       00037 TXL -301220001201       00040 TXL -301117001113      
 00041 TXL -301100001067       00043 TXL -301010000771       00044 TXL -300562000557       00045 TXL -300705000666      
 00046 TXL -300643000637       00047 TXL -300601000575       00050 TXL -300617000614                                    
0PROGRAM    
      DELT       FDR=0                                                              001  LM00027
 00245 TSX +0 07400 4 00007    00246 CLA +0 50000 0 00217    00247 STO +0 60100 0 00102                                 
                 WHENEVER COMARG.(0,COM).E.$DELETE$                                 002  LM00029
 00250 TSX +0 07400 4 00002    00251 TXH +3 00000 0 00217    00252 TXH +3 00000 0 00100    00253 SUB +0 40200 0 00236   
 00254 TNZ -0 10000 0 00260                                                                                             
                 CM=1                                                               003  LM00030
 00255 CLA +0 50000 0 00220    00256 STO +0 60100 0 00077                                                               
                 OR WHENEVER COM.E.$CHMODE$                                         004  LM00031
 00257 TRA +0 02000 0 00273    00260 CLA +0 50000 0 00100    00261 SUB +0 40200 0 00235    00262 TNZ -0 10000 0 00266   
                 CM=2                                                               005  LM00032
 00263 CLA +0 50000 0 00221    00264 STO +0 60100 0 00077                                                               
                 OR WHENEVER COM.E.$RENAME$                                         006  LM00033
 00265 TRA +0 02000 0 00273    00266 CLA +0 50000 0 00100    00267 SUB +0 40200 0 00237    00270 TNZ -0 10000 0 00273   
                 CM=3                                                               007  LM00034
 00271 CLA +0 50000 0 00222    00272 STO +0 60100 0 00077                                                               
                 END OF CONDITIONAL                                                 008  LM00035
      ARG        THROUGH ARG, FOR A=1,1,A.E.19.OR.COMARG.(A,A(A)).E.FENCE           009  LM00037
 00273 CLA +0 50000 0 00220    00274 STO +0 60100 0 00074    00275 TRA +0 02000 0 00301    00276 CLA +0 50000 0 00074   
 00277 ADD +0 40000 0 00220    00300 STO +0 60100 0 00074    00301 CLA +0 50000 0 00074    00302 SUB +0 40200 0 00303   
 00303 TXH +3 00000 0 00074    00304 STA +0 62100 0 00307    00305 TSX +0 07400 4 00002    00306 TXH +3 00000 0 00074   
 00307 TXH +3 00000 0 00000    00310 SUB +0 40200 0 00103    00311 TZE +0 10000 0 00316    00312 CLA +0 50000 0 00074   
 00313 SUB +0 40200 0 00231    00314 TZE +0 10000 0 00316    00315 TRA +0 02000 0 00276                                 
                 A(A)=$$                                                            010  LM00038
 00316 LXA +0 53400 1 00074    00317 CLA +0 50000 0 00241    00320 STO +0 60100 1 00074                                 
                 THROUGH ARGCK, FOR I=1,2,I.G.A-1                                   011  LM00039
 00321 CLA +0 50000 0 00220    00322 STO +0 60100 0 00107    00323 TRA +0 02000 0 00327    00324 CLA +0 50000 0 00107   
 00325 ADD +0 40000 0 00221    00326 STO +0 60100 0 00107    00327 CLA +0 50000 0 00074    00330 SUB +0 40200 0 00220   
 00331 CHS +0 76000 0 00002    00332 ADD +0 40000 0 00107    00333 TZE +0 10000 0 00335    00334 TPL +0 12000 0 00555   
                 MODF=0                                                             012  LM00040
 00335 CLA +0 50000 0 00217    00336 STO +0 60100 0 00214                                                               
                 MODG=0                                                             013  LM00041
 00337 CLA +0 50000 0 00217    00340 STO +0 60100 0 00215                                                               
                 WHENEVER I+CM.G.A-1                                                014  LM00043
 00341 CLA +0 50000 0 00074    00342 SUB +0 40200 0 00220    00343 STO +0 60100 0 01247    00344 CLA +0 50000 0 00107   
 00345 ADD +0 40000 0 00077    00346 SUB +0 40200 0 01247    00347 TZE +0 10000 0 00420    00350 TMI -0 12000 0 00420   
                 TRANSFER TO ER(CM)                                                 015  LM00044
 00351 LXA +0 53400 2 00077    00352 TRA +0 02000 2 00032                                                               
      ER(1)      MES5=$$                                                            016  LM00045
 00353 CLA +0 50000 0 00241    00354 STO +0 60100 0 00165                                                               
                 MES5(1)=A(I)                                                       017  LM00046
 00355 LXA +0 53400 2 00107    00356 CLA +0 50000 2 00074    00357 STO +0 60100 0 00164                                 
      ERA        EXECUTE PRNTP.(MES5)                                               018  LM00047
 00360 TSX +0 07400 4 00011    00361 TXH +3 00000 0 00165                                                               
                 EXECUTE CHNCOM.(0)                                                 019  LM00048
 00362 TSX +0 07400 4 00001    00363 TXH +3 00000 0 00217                                                               
      ER(2)      MES5=A(I)                                                          020  LM00049
 00364 LXA +0 53400 2 00107    00365 CLA +0 50000 2 00074    00366 STO +0 60100 0 00165                                 
                 MES5(1)=A(I+1)                                                     021  LM00050
 00367 CLA +0 50000 0 00107    00370 ADD +0 40000 0 00220    00371 PAX +0 73400 2 00000    00372 CLA +0 50000 2 00074   
 00373 STO +0 60100 0 00164                                                                                             
                 TRANSFER TO ERA                                                    022  LM00051
 00374 TRA +0 02000 0 00022                                                                                             
      ER(3)      WHENEVER I+CM-1.G.A-1, TRANSFER TO ER(2)                           023  LM00052
 00375 CLA +0 50000 0 00074    00376 SUB +0 40200 0 00220    00377 STO +0 60100 0 01247    00400 CLA +0 50000 0 00107   
 00401 ADD +0 40000 0 00077    00402 SUB +0 40200 0 00220    00403 SUB +0 40200 0 01247    00404 TZE +0 10000 0 00407   
 00405 TMI -0 12000 0 00407    00406 TRA +0 02000 0 00030                                                               
                 A(I+3)=A(I+1)                                                      024  LM00053
 00407 CLA +0 50000 0 00107    00410 ADD +0 40000 0 00220    00411 STO +0 60100 0 01247    00412 CLA +0 50000 0 00107   
 00413 ADD +0 40000 0 00222    00414 PAX +0 73400 1 00000    00415 LXA +0 53400 2 01247    00416 CLA +0 50000 2 00074   
 00417 STO +0 60100 1 00074                                                                                             
                 END OF CONDITIONAL                                                 025  LM00054
                 WHENEVER A(I).E.0.AND.A(I+1).E.0                                   026  LM00056
 00420 CLA +0 50000 0 00107    00421 ADD +0 40000 0 00220    00422 PAX +0 73400 1 00000    00423 CLA +0 50000 1 00074   
 00424 SUB +0 40200 0 00217    00425 TNZ -0 10000 0 00436    00426 LXA +0 53400 1 00107    00427 CLA +0 50000 1 00074   
 00430 SUB +0 40200 0 00217    00431 TNZ -0 10000 0 00436                                                               
                 EXECUTE PRNTP.(MES6)                                               027  LM00057
 00432 TSX +0 07400 4 00011    00433 TXH +3 00000 0 00171                                                               
                 TRANSFER TO ARGCK                                                  028  LM00058
 00434 TRA +0 02000 0 00017                                                                                             
                 OR WHENEVER A(I).E.ASTRSK                                          029  LM00059
 00435 TRA +0 02000 0 00531    00436 LXA +0 53400 1 00107    00437 CLA +0 50000 1 00074    00440 SUB +0 40200 0 00075   
 00441 TNZ -0 10000 0 00460                                                                                             
                 WHENEVER CM.E.3.AND.A(I+2).NE.ASTRSK, TRANSFER TO ARGC             030  LM00060
 00442 CLA +0 50000 0 00107    00443 ADD +0 40000 0 00221    00444 PAX +0 73400 1 00000    00445 CLA +0 50000 1 00074   
 00446 SUB +0 40200 0 00075    00447 TZE +0 10000 0 00454    00450 CLA +0 50000 0 00077    00451 SUB +0 40200 0 00222   
 00452 TNZ -0 10000 0 00454    00453 TRA +0 02000 0 00020                                                               
                 E1=4                                                               031  LM00061
 00454 CLA +0 50000 0 00223    00455 STO +0 60100 0 00101                                                               
                 TRANSFER TO STAR                                                   032  LM00062
 00456 TRA +0 02000 0 00047                                                                                             
                 OR WHENEVER A(I+1).E.ASTRSK                                        033  LM00063
 00457 TRA +0 02000 0 00531    00460 CLA +0 50000 0 00107    00461 ADD +0 40000 0 00220    00462 PAX +0 73400 1 00000   
 00463 CLA +0 50000 1 00074    00464 SUB +0 40200 0 00075    00465 TNZ -0 10000 0 00504                                 
                 WHENEVER CM.E.3.AND.A(I+3).NE.ASTRSK, TRANSFER TO ARGC             034  LM00064
 00466 CLA +0 50000 0 00107    00467 ADD +0 40000 0 00222    00470 PAX +0 73400 1 00000    00471 CLA +0 50000 1 00074   
 00472 SUB +0 40200 0 00075    00473 TZE +0 10000 0 00500    00474 CLA +0 50000 0 00077    00475 SUB +0 40200 0 00222   
 00476 TNZ -0 10000 0 00500    00477 TRA +0 02000 0 00020                                                               
                 E1=3                                                               035  LM00065
 00500 CLA +0 50000 0 00222    00501 STO +0 60100 0 00101                                                               
                 TRANSFER TO STAR                                                   036  LM00066
 00502 TRA +0 02000 0 00047                                                                                             
                 OR WHENEVER CM.E.3.AND.A(I+2).E.ASTRSK                             037  LM00067
 00503 TRA +0 02000 0 00531    00504 CLA +0 50000 0 00107    00505 ADD +0 40000 0 00221    00506 PAX +0 73400 1 00000   
 00507 CLA +0 50000 1 00074    00510 SUB +0 40200 0 00075    00511 TNZ -0 10000 0 00517    00512 CLA +0 50000 0 00077   
 00513 SUB +0 40200 0 00222    00514 TNZ -0 10000 0 00517                                                               
                 TRANSFER TO ASTER                                                  038  LM00068
 00515 TRA +0 02000 0 00021                                                                                             
                 OR WHENEVER CM.E.3.AND.A(I+3).E.ASTRSK                             039  LM00069
 00516 TRA +0 02000 0 00531    00517 CLA +0 50000 0 00107    00520 ADD +0 40000 0 00222    00521 PAX +0 73400 1 00000   
 00522 CLA +0 50000 1 00074    00523 SUB +0 40200 0 00075    00524 TNZ -0 10000 0 00531    00525 CLA +0 50000 0 00077   
 00526 SUB +0 40200 0 00222    00527 TNZ -0 10000 0 00531                                                               
                 TRANSFER TO ASTER                                                  040  LM00070
 00530 TRA +0 02000 0 00021                                                                                             
                 END OF CONDITIONAL                                                 041  LM00071
      ARGC       EXECUTE FSTATE.(A(I),A(I+1),FV(1)...1,NOFIL)                       042  LM00073
 00531 CLA +0 50000 0 00107    00532 ADD +0 40000 0 00220    00533 SUB +0 40200 0 00534    00534 TXH +3 00000 0 00074   
 00535 STA +0 62100 0 00544    00536 CLA +0 50000 0 00107    00537 SUB +0 40200 0 00540    00540 TXH +3 00000 0 00074   
 00541 STA +0 62100 0 00543    00542 TSX +0 07400 4 00005    00543 TXH +3 00000 0 00000    00544 TXH +3 00000 0 00000   
 00545 TIX +2 00220 0 00105    00546 TXH +3 00000 0 00044                                                               
                 EXECUTE EXEC.                                                      043  LM00075
 00547 TSX +0 07400 4 00014                                                                                             
      ARGCK      I=I+CM-1                                                           044  LM00076
 00550 CLA +0 50000 0 00107    00551 ADD +0 40000 0 00077    00552 SUB +0 40200 0 00220    00553 STO +0 60100 0 00107   
 00554 TRA +0 02000 0 00324                                                                                             
                 EXECUTE CHNCOM.(0)                                                 045  LM00077
 00555 TSX +0 07400 4 00001    00556 TXH +3 00000 0 00217                                                               
      NOFIL      MES2(1)=A(I)                                                       046  LM00079
 00557 LXA +0 53400 2 00107    00560 CLA +0 50000 2 00074    00561 STO +0 60100 0 00137                                 
                 MES2(2)=A(I+1)                                                     047  LM00080
 00562 CLA +0 50000 0 00107    00563 ADD +0 40000 0 00220    00564 PAX +0 73400 2 00000    00565 CLA +0 50000 2 00074   
 00566 STO +0 60100 0 00136                                                                                             
                 EXECUTE PRNTP.(MES2)                                               048  LM00081
 00567 TSX +0 07400 4 00011    00570 TXH +3 00000 0 00140                                                               
                 TRANSFER TO ARGCK                                                  049  LM00082
 00571 TRA +0 02000 0 00017                                                                                             
      ASTER      EXECUTE PRNTP.(MES10)                                              050  LM00084
 00572 TSX +0 07400 4 00011    00573 TXH +3 00000 0 00115                                                               
                 TRANSFER TO ARGCK                                                  051  LM00085
 00574 TRA +0 02000 0 00017                                                                                             
      STAR       WHENEVER FDR.E.1, TRANSFER TO SCA                                  052  LM00087
 00575 CLA +0 50000 0 00102    00576 SUB +0 40200 0 00220    00577 TNZ -0 10000 0 00601    00600 TRA +0 02000 0 00046   
                 WHENEVER FDR.E.2, TRANSFER TO STR                                  053  LM00088
 00601 CLA +0 50000 0 00102    00602 SUB +0 40200 0 00221    00603 TNZ -0 10000 0 00605    00604 TRA +0 02000 0 00050   
                 EXECUTE UPDATE.                                                    054  LM00089
 00605 TSX +0 07400 4 00013                                                                                             
                 EXECUTE LDFIL.($U.F.D.$,$(FILE)$,SCAN.)                            055  LM00090
 00606 TSX +0 07400 4 00010    00607 TXH +3 00000 0 00243    00610 TXH +3 00000 0 00244    00611 TXH +3 00000 0 00015   
                 EXECUTE PRNTP.(MES4)                                               056  LM00091
 00612 TSX +0 07400 4 00011    00613 TXH +3 00000 0 00155                                                               
      STR        MES11=A(I)                                                         057  LM00092
 00614 LXA +0 53400 2 00107    00615 CLA +0 50000 2 00074    00616 STO +0 60100 0 00122                                 
                 MES11(1)=A(I+1)                                                    058  LM00093
 00617 CLA +0 50000 0 00107    00620 ADD +0 40000 0 00220    00621 PAX +0 73400 2 00000    00622 CLA +0 50000 2 00074   
 00623 STO +0 60100 0 00121                                                                                             
                 EXECUTE PRNTP.(MES11)                                              059  LM00094
 00624 TSX +0 07400 4 00011    00625 TXH +3 00000 0 00122                                                               
                 FDR=2                                                              060  LM00095
 00626 CLA +0 50000 0 00221    00627 STO +0 60100 0 00102                                                               
                 TRANSFER TO ARGCK                                                  061  LM00096
 00630 TRA +0 02000 0 00017                                                                                             
                 INTERNAL FUNCTION(LODAD)                                           062  LM00099
 00631 TRA +0 02000 0 01061                                                                                             
                 ENTRY TO SCAN.                                                     063  LM00100
 00632 TRA +0 02000 0 00635    00015 TTR +0 02100 0 00633    00633 SXA +0 63400 2 01042    00634 TSX +0 07400 2 01042   
                 FDR=1                                                              064  LM00101
 00635 CLA +0 50000 0 00220    00636 STO +0 60100 0 00102                                                               
      SCA        AVJ=I+E1-3                                                         065  LM00102
 00637 CLA +0 50000 0 00107    00640 ADD +0 40000 0 00101    00641 SUB +0 40200 0 00222    00642 STO +0 60100 0 00076   
                 THROUGH SC, FOR J=E1+1,7,J.GE.(LODAD)                              066  LM00103
 00643 CLA +0 50000 0 00101    00644 ADD +0 40000 0 00220    00645 STO +0 60100 0 00110    00646 TRA +0 02000 0 00652   
 00647 CLA +0 50000 0 00110    00650 ADD +0 40000 0 00226    00651 STO +0 60100 0 00110    00652 CLA +0 50000 0 00110   
 00653 SUB +0 40200 0 00024    00654 TZE +0 10000 0 00734    00655 TPL +0 12000 0 00734                                 
                 WHENEVER LODAD(1K5-J).E.A(AVJ), TRANSFER TO GRARG                  067  LM00104
 00656 CLA +0 50000 0 00233    00657 SUB +0 40200 0 00110    00660 PAX +0 73400 1 00000    00661 LXA +0 53400 2 00076   
 00662 CLA +0 50000 1 00024    00663 SUB +0 40200 2 00074    00664 TNZ -0 10000 0 00666    00665 TRA +0 02000 0 00043   
      SC1        P=(LODAD(1K5-J-8+E1).LS.18).RS.33                                  068  LM00105
 00666 CLA +0 50000 0 00233    00667 SUB +0 40200 0 00110    00670 SUB +0 40200 0 00227    00671 ADD +0 40000 0 00101   
 00672 PAX +0 73400 1 00000    00673 CAL -0 50000 0 00230    00674 STA +0 62100 0 00676    00675 CAL -0 50000 1 00024   
 00676 ALS +0 76700 0 00000    00677 SLW +0 60200 0 01060    00700 CAL -0 50000 0 00232    00701 STA +0 62100 0 00703   
 00702 CAL -0 50000 0 01060    00703 LGR -0 76500 0 00000    00704 SLW +0 60200 0 00216                                 
                 F=(LODAD(1K5-J-7+E1).LS.18).RS.33                                  069  LM00106
 00705 CLA +0 50000 0 00233    00706 SUB +0 40200 0 00110    00707 SUB +0 40200 0 00226    00710 ADD +0 40000 0 00101   
 00711 PAX +0 73400 1 00000    00712 CAL -0 50000 0 00230    00713 STA +0 62100 0 00715    00714 CAL -0 50000 1 00024   
 00715 ALS +0 76700 0 00000    00716 SLW +0 60200 0 01060    00717 CAL -0 50000 0 00232    00720 STA +0 62100 0 00722   
 00721 CAL -0 50000 0 01060    00722 LGR -0 76500 0 00000    00723 SLW +0 60200 0 00104                                 
                 WHENEVER F.NE.0, J=J+P-1                                           070  LM00107
 00724 CLA +0 50000 0 00104    00725 SUB +0 40200 0 00217    00726 TZE +0 10000 0 00733    00727 CLA +0 50000 0 00110   
 00730 ADD +0 40000 0 00216    00731 SUB +0 40200 0 00220    00732 STO +0 60100 0 00110                                 
      SC         CONTINUE                                                           071  LM00108
 00733 TRA +0 02000 0 00647                                                                                             
                 WHENEVER A(I+4-E1).E.ASTRSK.AND.MODG.E.0,TRANSFERTOERK(5-E1)       072  LM00109
 00734 CLA +0 50000 0 00215    00735 SUB +0 40200 0 00217    00736 TNZ -0 10000 0 00752    00737 CLA +0 50000 0 00107   
 00740 ADD +0 40000 0 00223    00741 SUB +0 40200 0 00101    00742 PAX +0 73400 1 00000    00743 CLA +0 50000 1 00074   
 00744 SUB +0 40200 0 00075    00745 TNZ -0 10000 0 00752    00746 CLA +0 50000 0 00224    00747 SUB +0 40200 0 00101   
 00750 PAX +0 73400 2 00000    00751 TRA +0 02000 2 00026                                                               
                 TRANSFER TO ARGCK                                                  073  LM00110
 00752 TRA +0 02000 0 00017                                                                                             
      ERK(1)     MES12(3)=$SECOND$                                                  074  LM00112
 00753 CLA +0 50000 0 00242    00754 STO +0 60100 0 00127                                                               
                 TRANSFER TO ERKA                                                   075  LM00113
 00755 TRA +0 02000 0 00023                                                                                             
      ERK(2)     MES12(3)=$ FIRST$                                                  076  LM00114
 00756 CLA +0 50000 0 00240    00757 STO +0 60100 0 00127                                                               
      ERKA       MES12(5)=A(I+E1-3)                                                 077  LM00115
 00760 CLA +0 50000 0 00107    00761 ADD +0 40000 0 00101    00762 SUB +0 40200 0 00222    00763 PAX +0 73400 2 00000   
 00764 CLA +0 50000 2 00074    00765 STO +0 60100 0 00125                                                               
                 EXECUTE PRNTP.(MES12)                                              078  LM00116
 00766 TSX +0 07400 4 00011    00767 TXH +3 00000 0 00132                                                               
                 TRANSFER TO ARGCK                                                  079  LM00117
 00770 TRA +0 02000 0 00017                                                                                             
      GRARG      A(I+4-E1)=LODAD(1K5-J-7+2*E1)                                      080  LM00119
 00771 LDQ +0 56000 0 00221    00772 MPY +0 20000 0 00101    00773 STQ -0 60000 0 01060    00774 CLA +0 50000 0 00233   
 00775 SUB +0 40200 0 00110    00776 SUB +0 40200 0 00226    00777 ADD +0 40000 0 01060    01000 STO +0 60100 0 01060   
 01001 CLA +0 50000 0 00107    01002 ADD +0 40000 0 00223    01003 SUB +0 40200 0 00101    01004 PAX +0 73400 1 00000   
 01005 LXA +0 53400 2 01060    01006 CLA +0 50000 2 00024    01007 STO +0 60100 1 00074                                 
                 WHENEVER CM.E.3,A(I+6-E1)=A(I+4-E1)                                081  LM00120
 01010 CLA +0 50000 0 00077    01011 SUB +0 40200 0 00222    01012 TNZ -0 10000 0 01026    01013 CLA +0 50000 0 00107   
 01014 ADD +0 40000 0 00223    01015 SUB +0 40200 0 00101    01016 STO +0 60100 0 01060    01017 CLA +0 50000 0 00107   
 01020 ADD +0 40000 0 00225    01021 SUB +0 40200 0 00101    01022 PAX +0 73400 1 00000    01023 LXA +0 53400 2 01060   
 01024 CLA +0 50000 2 00074    01025 STO +0 60100 1 00074                                                               
                 WHENEVER A(I+4-E1).E.ASTRSK, MODG=1                                082  LM00121
 01026 CLA +0 50000 0 00107    01027 ADD +0 40000 0 00223    01030 SUB +0 40200 0 00101    01031 PAX +0 73400 1 00000   
 01032 CLA +0 50000 1 00074    01033 SUB +0 40200 0 00075    01034 TNZ -0 10000 0 01037    01035 CLA +0 50000 0 00220   
 01036 STO +0 60100 0 00215                                                                                             
                 EXECUTE EXEC.                                                      083  LM00122
 01037 TSX +0 07400 4 00014                                                                                             
                 TRANSFER TO SC1                                                    084  LM00123
 01040 TRA +0 02000 0 00045                                                                                             
                 END OF FUNCTION                                                    085  LM00124
 01041 TSX +0 07400 4 00004    01042 TXH +3 00000 0 00000    01043 SXD -0 63400 1 01042    01044 SXA +0 63400 4 01054   
 01045 CLA +0 50000 4 00001    01046 STA +0 62100 0 00653    01047 STA +0 62100 0 00662    01050 STA +0 62100 0 00675   
 01051 STA +0 62100 0 00714    01052 STA +0 62100 0 01006    01053 TRA +0 02000 2 00001    01054 AXT +0 77400 4 00000   
 01055 LXA +0 53400 2 01042    01056 LXD -0 53400 1 01042    01057 TRA +0 02000 4 00001                                 
                 INTERNAL FUNCTION                                                  086  LM00127
 01061 TRA +0 02000 0 01246                                                                                             
                 ENTRY TO EXEC.                                                     087  LM00128
 01062 TRA +0 02000 0 01065    00014 TTR +0 02100 0 01063    01063 SXA +0 63400 2 01234    01064 TSX +0 07400 2 01234   
                 TRANSFER TO FUN(CM)                                                088  LM00129
 01065 LXA +0 53400 2 00077    01066 TRA +0 02000 2 00042                                                               
      FUN(1)     WHENEVER DELETE.(A(I)).E.0, TRANSFER TO FUNA                       089  LM00131
 01067 CLA +0 50000 0 00107    01070 SUB +0 40200 0 01071    01071 TXH +3 00000 0 00074    01072 STA +0 62100 0 01074   
 01073 TSX +0 07400 4 00003    01074 TXH +3 00000 0 00000    01075 SUB +0 40200 0 00217    01076 TNZ -0 10000 0 01100   
 01077 TRA +0 02000 0 00033                                                                                             
                 MES3(1)=A(I)                                                       090  LM00132
 01100 LXA +0 53400 2 00107    01101 CLA +0 50000 2 00074    01102 STO +0 60100 0 00145                                 
                 MES3(2)=A(I+1)                                                     091  LM00133
 01103 CLA +0 50000 0 00107    01104 ADD +0 40000 0 00220    01105 PAX +0 73400 2 00000    01106 CLA +0 50000 2 00074   
 01107 STO +0 60100 0 00144                                                                                             
                 EXECUTE PRNTP.(MES3)                                               092  LM00134
 01110 TSX +0 07400 4 00011    01111 TXH +3 00000 0 00146                                                               
      FUNA       FUNCTION RETURN                                                    093  LM00135
 01112 TRA +0 02000 0 01240                                                                                             
      FUN(2)     WHENEVER MODF .E. 1, TRANSFER TO FUNB                              094  LM00137
 01113 CLA +0 50000 0 00214    01114 SUB +0 40200 0 00220    01115 TNZ -0 10000 0 01117    01116 TRA +0 02000 0 00036   
                 GETMOD.(A(I+2),FUNB1)                                              095  LM00138
 01117 CLA +0 50000 0 00107    01120 ADD +0 40000 0 00221    01121 SUB +0 40200 0 01122    01122 TXH +3 00000 0 00074   
 01123 STA +0 62100 0 01125    01124 TSX +0 07400 4 00006    01125 TXH +3 00000 0 00000    01126 TXH +3 00000 0 00034   
                 EXECUTE PRNTP.(MES7)                                               096  LM00139
 01127 TSX +0 07400 4 00011    01130 TXH +3 00000 0 00176                                                               
                 TRANSFER TO ARGCK                                                  097  LM00140
 01131 TRA +0 02000 0 00017                                                                                             
      FUNB1      MODF = 1                                                           098  LM00141
 01132 CLA +0 50000 0 00220    01133 STO +0 60100 0 00214                                                               
      FUNB       CHFILE. (A(I),A(I+1),A(I+2),-0,-0,FUNB2)                           099  LM00142
 01134 CLS +0 50200 0 00217    01135 STO +0 60100 0 01244    01136 CLS +0 50200 0 00217    01137 STO +0 60100 0 01245   
 01140 CLA +0 50000 0 00107    01141 ADD +0 40000 0 00221    01142 SUB +0 40200 0 01143    01143 TXH +3 00000 0 00074   
 01144 STA +0 62100 0 01161    01145 CLA +0 50000 0 00107    01146 ADD +0 40000 0 00220    01147 SUB +0 40200 0 01150   
 01150 TXH +3 00000 0 00074    01151 STA +0 62100 0 01160    01152 CLA +0 50000 0 00107    01153 SUB +0 40200 0 01154   
 01154 TXH +3 00000 0 00074    01155 STA +0 62100 0 01157    01156 TSX +0 07400 4 00000    01157 TXH +3 00000 0 00000   
 01160 TXH +3 00000 0 00000    01161 TXH +3 00000 0 00000    01162 TXH +3 00000 0 01245    01163 TXH +3 00000 0 01244   
 01164 TXH +3 00000 0 00035                                                                                             
                 TRANSFER TO FUNA                                                   100  LM00143
 01165 TRA +0 02000 0 00033                                                                                             
      FUNB2      MES8(1)=A(I)                                                       101  LM00144
 01166 LXA +0 53400 2 00107    01167 CLA +0 50000 2 00074    01170 STO +0 60100 0 00204                                 
                 MES8(2)=A(I+1)                                                     102  LM00145
 01171 CLA +0 50000 0 00107    01172 ADD +0 40000 0 00220    01173 PAX +0 73400 2 00000    01174 CLA +0 50000 2 00074   
 01175 STO +0 60100 0 00203                                                                                             
                 EXECUTE PRNTP.(MES8)                                               103  LM00146
 01176 TSX +0 07400 4 00011    01177 TXH +3 00000 0 00205                                                               
                 FUNCTION RETURN                                                    104  LM00147
 01200 TRA +0 02000 0 01240                                                                                             
      FUN(3)     WHENEVER RENAME.(A(I),A(I+2)).E.0, TRANSFER TO FUNA                105  LM00149
 01201 CLA +0 50000 0 00107    01202 ADD +0 40000 0 00221    01203 SUB +0 40200 0 01204    01204 TXH +3 00000 0 00074   
 01205 STA +0 62100 0 01214    01206 CLA +0 50000 0 00107    01207 SUB +0 40200 0 01210    01210 TXH +3 00000 0 00074   
 01211 STA +0 62100 0 01213    01212 TSX +0 07400 4 00012    01213 TXH +3 00000 0 00000    01214 TXH +3 00000 0 00000   
 01215 SUB +0 40200 0 00217    01216 TNZ -0 10000 0 01220    01217 TRA +0 02000 0 00033                                 
                 MES9(1)=A(I)                                                       106  LM00150
 01220 LXA +0 53400 2 00107    01221 CLA +0 50000 2 00074    01222 STO +0 60100 0 00212                                 
                 MES9(2)=A(I+1)                                                     107  LM00151
 01223 CLA +0 50000 0 00107    01224 ADD +0 40000 0 00220    01225 PAX +0 73400 2 00000    01226 CLA +0 50000 2 00074   
 01227 STO +0 60100 0 00211                                                                                             
                 EXECUTE PRNTP.(MES9)                                               108  LM00152
 01230 TSX +0 07400 4 00011    01231 TXH +3 00000 0 00213                                                               
                 FUNCTION RETURN                                                    109  LM00153
 01232 TRA +0 02000 0 01240                                                                                             
                 END OF FUNCTION                                                    110  LM00154
 01233 TSX +0 07400 4 00004    01234 TXH +3 00000 0 00000    01235 SXD -0 63400 1 01234    01236 SXA +0 63400 4 01240   
 01237 TRA +0 02000 2 00001    01240 AXT +0 77400 4 00000    01241 LXA +0 53400 2 01234    01242 LXD -0 53400 1 01234   
 01243 TRA +0 02000 4 00001                                                                                             
                 VECTOR VALUES MES2=$ FILE$,0,0,$ NOT FOUND$,777777777777K          111  LM00157
 00133     -3 77777 7 77777    00134     -0 66445 2 46060    00135     -2 04546 6 36026    00136     +0 00000 0 00000   
 00137     +0 00000 0 00000    00140     -2 02631 4 32560                                                               
                 VECTOR VALUES MES3=$ FILE$,0,0,$ NOT DELETED$,777777777777K        112  LM00158
 00141     -3 77777 7 77777    00142     +2 54325 6 32524    00143     -2 04546 6 36024    00144     +0 00000 0 00000   
 00145     +0 00000 0 00000    00146     -2 02631 4 32560                                                               
                 VECTOR VALUES MES4=$ ERROR IN READING FILE DIRECTORY$,             113  LM00159
                1777777777777K                                                      113  LM00160
 00147     -3 77777 7 77777    00150     -1 17060 6 06060    00151     +3 15125 2 36346    00152     +2 63143 2 56024   
 00153     +2 12431 4 52760    00154     -2 03145 6 05125    00155     -2 02551 5 14651                                 
                 VECTOR VALUES MES5(2)=$ INCOMPLETE SET OF ARGUMENTS$,              114  LM00161
                1777777777777K                                                      114  LM00162
 00156     -3 77777 7 77777    00157     +2 54563 6 26060    00160     -2 02151 2 76444    00161     -2 22563 6 04626   
 00162     -0 74325 6 32560    00163     -2 03145 2 34644                                                               
                 VECTOR VALUES MES6=$ FILE NAME ILLEGAL$,777777777777K              115  LM00163
 00166     -3 77777 7 77777    00167     -0 34325 2 72143    00170     -0 52144 2 56031    00171     -2 02631 4 32560   
                 VECTOR VALUES MES7=$ ILLEGAL MODE DEFINITION$,777777777777K        116  LM00164
 00172     -3 77777 7 77777    00173     -0 53163 3 14645    00174     +2 56024 2 52631    00175     +2 14360 4 44624   
 00176     -2 03143 4 32527                                                                                             
                 VECTOR VALUES MES8=$ FILE$,0,0,$ MODE NOT CHANGED$,                117  LM00165
                1777777777777K                                                      117  LM00166
 00177     -3 77777 7 77777    00200     +2 14527 2 52460    00201     -0 54663 6 02330    00202     -2 04446 2 42560   
 00203     +0 00000 0 00000    00204     +0 00000 0 00000    00205     -2 02631 4 32560                                 
                 VECTOR VALUES MES9=$ FILE$,0,0,$ NOT RENAMED$,777777777777K        118  LM00167
 00206     -3 77777 7 77777    00207     +2 54521 4 42524    00210     -2 04546 6 36051    00211     +0 00000 0 00000   
 00212     +0 00000 0 00000    00213     -2 02631 4 32560                                                               
                 VECTOR VALUES MES10=$ ILLEGAL USE OF ASTERISK$,777777777777K       119  LM00168
 00111     -3 77777 7 77777    00112     -2 32551 3 16242    00113     -2 04626 6 02162    00114     +2 14360 6 46225   
 00115     -2 03143 4 32527                                                                                             
                 VECTOR VALUES MES11(2)=$ IGNORED$,777777777777K                    120  LM00169
 00116     -3 77777 7 77777    00117     +2 52460 6 06060    00120     -2 03127 4 54651                                 
                 VECTOR VALUES MES12=$ NO FILE WITH $,0,$ NAME $,0,$ FOUND$,        121  LM00170
                1777777777777K                                                      121  LM00171
 00123     -3 77777 7 77777    00124     -2 02646 6 44524    00125     +0 00000 0 00000    00126     -2 04521 4 42560   
 00127     +0 00000 0 00000    00130     +3 06060 6 06060    00131     -0 32560 6 63163    00132     -2 04546 6 02631   
                 VECTOR VALUES ASTRSK=$     *$                                      122  LM00173
 00075     -2 06060 6 06054                                                                                             
                 VECTOR VALUES FENCE=777777777777K                                  123  LM00174
 00103     -3 77777 7 77777                                                                                             
                 NORMAL MODE IS INTEGER                                             124  LM00175
                 DIMENSION A(19),FV(1)                                              125  LM00176
                 END OF PROGRAM                                                     126  LM00177
 01246 TSX +0 07400 4 00004                                                                                             
1                                                                                                PAGE 1     
                           FILE NAME -- GETMD FAP                                   
                  
                                             ROUTINE TO CHANGE NMEMONICS FOR MODE TO
                                             OCTAL EQUIVALENTS.   
                                             G. SCHROEDER            JUNE,1965
                       00002         ENTRY   GETMOD   
                              SAVXR  MACRO
                                     SXA     X1,1     
                                     SXA     X2,2     
                                     SXA     X4,4     
                              SAVXR  END  
                              RSTXR  MACRO
                                     LXA     X1,1     
                                     LXA     X2,2     
                                     LXA     X4,4     
                              RSTXR  END  
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  272563444624     
                  
      00002                   GETMOD SAVXR
      00005  0774 00 2 00006         AXT     6,2
      00006  0600 00 0 00040         STZ     MODE     
      00007  0560 60 4 00001         LDQ*    1,4
      00010 -0754 00 0 00000  NEXT   ZAC  
      00011 -0763 00 0 00006         LGL     6  
      00012  0100 00 0 00031         TZE     DECR     
      00013 -0340 00 0 00041         LAS     BLANK    
      00014  0020 00 0 00016         TRA     *+2
      00015  0020 00 0 00031         TRA     DECR     
      00016  0774 00 1 00005         AXT     5,1
      00017 -0340 00 1 00054  CCR    LAS     TABLE+5,1
      00020  0020 00 0 00022         TRA     *+2
      00021  0020 00 0 00027         TRA     GCHAR    
      00022  2 00001 1 00017         TIX     CCR,1,1  
      00023                          RSTXR
      00026  0020 00 4 00003         TRA     3,4
      00027 -0500 00 1 00047  GCHAR  CAL     CHAR+5,1 
      00030 -0602 00 0 00040         ORS     MODE     
      00031  2 00001 2 00010  DECR   TIX     NEXT,2,1 
      00032                          RSTXR
      00035  0500 00 0 00040         CLA     MODE     
      00036  0601 60 4 00001         STO*    1,4
      00037  0020 60 4 00002         TRA*    2,4
      00040  0 00000 0 00000  MODE   PZE     0  
      00041 +000000000060     BLANK  OCT     60 
      00042 +000000000001     CHAR   OCT     1  
      00043 +000000000004            OCT     4  
      00044 +000000000010            OCT     10 
      00045 +000000000020            OCT     20 
      00046 +000000000100            OCT     100
      00047  000000000063     TABLE  BCI     1,00000T      TEMPORARY    
      00050  000000000051            BCI     1,00000R      READ-ONLY    
      00051  000000000066            BCI     1,00000W      WRITE-ONLY   
      00052  000000000065            BCI     1,00000V      PRIVATE
      00053  000000000047            BCI     1,00000P      PROTECTED    
1                                                                                                PAGE 2     
                           FILE NAME -- GETMD FAP                                   
                  
      00054  0 00000 0 00000  X1     PZE     0  
      00055  0 00000 0 00000  X2     PZE     0  
      00056  0 00000 0 00000  X4     PZE     0  
                                     END  
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         57 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         54     X1     2,   23,   32
         55     X2     3,   24,   33
         56     X4     4,   25,   34
         17    CCR    22
         42   CHAR    27
         31   DECR    12,   15
         40   MODE     6,   30,   35
         10   NEXT    31
         41  BLANK    13
         27  GCHAR    21
         47  TABLE    17
          2 GETMOD     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




COMFIL   BCD 09/18/68 2206.0     403         00000    
1                                                                                                PAGE 1     
                           FILE NAME -- COMFL FAP                                   
                  
                  
                                             COMFIL --- SWITCH USER TO SPECIFIED COMMON FILE    
                  
      00000  0074 00 4 00013         TSX     GETCOM,4      GET PARAMETER
      00001  0 00000 0 00001         PZE     1             FIRST ARGUMENT     
                  
      00002 -0320 00 0 00017         ANA     =O77          REMOVE ALL BUT FIRST CHARACTER 
      00003  0602 00 0 00016         SLW     TEMP          ..     
      00004  0402 00 0 00017         SUB     =O77          CHECK FOR FENCE    
      00005  0100 00 0 00007         TZE     *+2           FENCE = 0    
      00006 -0500 00 0 00016         CAL     TEMP          ..     
      00007  0074 00 4 00014         TSX     COMFIL,4      SWITCH DIRECTORY   
      00010  0000 00 0 00010         HTR     *             (1,4) RETURN NOT USED CURRENTLY
      00011  0074 00 4 00015         TSX     CHNCOM,4      END OF COMMAND     
      00012  0 00000 0 00000         PZE                   ..     
                  
      00013  0101 00 0 00022  GETCOM TIA     =HGETCOM      ..     
      00014  0101 00 0 00021  COMFIL TIA     =HCOMFIL      ..     
      00015  0101 00 0 00020  CHNCOM TIA     =HCHNCOM      ..     
                  
      00016  0 00000 0 00000  TEMP   PZE                   ..     
                  
                                     END  
                  
        LITERALS  
      00017  000000000077     
      00020  233045234644     
      00021  234644263143     
      00022  272563234644     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         23 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         16   TEMP     3,    6
         15 CHNCOM    11
         14 COMFIL     7
         13 GETCOM     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




DELFIB   BCD 10/04/70 1548.8    3996         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  DELFIB   MAD            05/04/69    1507.9
-                 
       DELFIB         DELETE A FIB JOB.                                                                LM00001    
                                                                                                       LM00002    
                      3/9/66 - NOEL I. MORRIS                                                          LM00003    
                                                                                                       LM00004    
                                                                                                       LM00005    
                  NORMAL MODE IS INTEGER                                                          *001 LM00006    
                  DIMENSION CARD (13), BUFF1 (431), BUFF2 (431)                                   *002 LM00007    
                                                                                                       LM00008    
                      PRESET DECLARATIONS.                                                             LM00009    
                                                                                                       LM00010    
                  VECTOR VALUES FIBJOB = $FIBJOB$                                                 *003 LM00011    
                  VECTOR VALUES   FILE = $  FILE$                                                 *004 LM00012    
                  VECTOR VALUES  C0056 = $ C0056$                                                 *005 LM00013    
                  VECTOR VALUES FIBMON = $ 99995$                                                 *006 LM00014    
                  VECTOR VALUES     RW = $RW$                                                     *007 LM00015    
                  VECTOR VALUES RELLOC = 1                                                        *008 LM00016    
                  VECTOR VALUES  FENCE = 777777777777K                                            *009 LM00017    
                  VECTOR VALUES    MZE = -0                                                       *010 LM00018    
                                                                                                       LM00019    
                  EQUIVALENCE (PROBN, NOJOB (5)), (PROGN, NOJOB (6)),                             *011 LM00020    
                1      (JOBNAM, NOJOB (1))                                                        *011 LM00021    
                                                                                                       LM00022    
                                                                                                       LM00023    
                      PICK UP JOB NAME AND SET UP.                                                     LM00024    
                                                                                                       LM00025    
                  JOBNAM = COMARG. (1)                                                            *012 LM00026    
                  WHENEVER JOBNAM .E. FENCE                                                       *013 LM00027    
                       PRNTP. (USAGE)                                                             *014 LM00028    
                       VECTOR VALUES USAGE = $ USAGE IS 'DELFIB  JOBNAM' .$,                      *015 LM00029    
                1           777777777777K                                                         *015 LM00030    
                       TRANSFER TO CHN                                                            *016 LM00031    
                  END OF CONDITIONAL                                                              *017 LM00032    
                                                                                                       LM00033    
                  WHOAMI. (CARD (1) ... 2)                                                        *018 LM00034    
                  PROBN = CARD (1)                                                                *019 LM00035    
                  PROGN = CARD                                                                    *020 LM00036    
                                                                                                       LM00037    
                  FERRTN. (ERROR)                                                                 *021 LM00038    
                                                                                                       LM00039    
                                                                                                       LM00040    
                      LINK TO FIBJOB FILE AND SEARCH FOR USER'S JOB.                                   LM00041    
                                                                                                       LM00042    
                  LINK. (FIBJOB, FILE, C0056, FIBMON, MZE, MZE, 120K, ERR1)                       *022 LM00043    
                  BFOPEN. (RW, FIBJOB, FILE, BUFF1 (431), MZE, MZE, ERR1)                         *023 LM00044    
                  UNLINK. (FIBJOB, FILE)                                                          *024 LM00045    
                                                                                                       LM00046    
      READ        BFREAD. (FIBJOB, FILE, CARD (13) ... 14, NOTFND, CT, ERROR)                     *025 LM00047    
                  RELLOC = RELLOC + 14                                                            *026 LM00048    
                                                                                                       LM00049    
                  WHENEVER  CARD (13) .NE. PROBN .OR.                                             *027 LM00050    
                1      CARD (11) .NE. PROGN .OR.                                                  *027 LM00051    
                2      CARD (10) .NE. JOBNAM,                                                     *027 LM00052    
                3           TRANSFER TO READ                                                      *027 LM00053    
                                                                                                       LM00054    
                                                                                                       LM00055    
                      CARD FOUND.  REWRITE FILE DELETING IT.                                           LM00056    
                                                                                                       LM00057    
                  BUFFER. (FIBJOB, FILE, BUFF2 (431) ... 432)                                     *028 LM00058    
                                                                                                       LM00059    
      RWLOOP      BFREAD. (FIBJOB, FILE, CARD (13) ... 14, RWFIN, CT, ERROR)                      *029 LM00060    
                  WRWAIT. (FIBJOB, FILE, RELLOC - 14, CARD (13) ... 14)                           *030 LM00061    
                                                                                                       LM00062    
                  RELLOC = RELLOC + 14                                                            *031 LM00063    
                  TRANSFER TO RWLOOP                                                              *032 LM00064    
                                                                                                       LM00065    
      RWFIN       TRFILE. (FIBJOB, FILE, RELLOC - 14, TRERR)                                      *033 LM00066    
                                                                                                       LM00067    
      TRERR       CONTINUE                                                                        *034 LM00068    
      CLOS        BFCLOS. (FIBJOB, FILE, ERROR)                                                   *035 LM00069    
      CHN         CHNCOM. (0)                                                                     *036 LM00070    
                                                                                                       LM00071    
                                                                                                       LM00072    
                      FILE SYSTEM ERROR ENCOUNTERED.                                                   LM00073    
                                                                                                       LM00074    
      ERR1        UNLINK. (FIBJOB, FILE)                                                          *037 LM00075    
      ERROR       DSKER.                                                                          *038 LM00076    
                                                                                                       LM00077    
                                                                                                       LM00078    
                      FIB JOB NOT FOUND.                                                               LM00079    
                                                                                                       LM00080    
      NOTFND      PRNTP. (NOJOB)                                                                  *039 LM00081    
                  VECTOR VALUES NOJOB = $ JOB  000000  NOT FOUND FOR   000000000000.$,            *040 LM00082    
                1      777777777777K                                                              *040 LM00083    
                  TRANSFER TO CLOS                                                                *041 LM00084    
                                                                                                       LM00085    
                                                                                                       LM00086    
                                                                                                       LM00087    
                  END OF PROGRAM                                                                  *042 LM00088    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   02021 TRANSFER VECTOR LENGTH  00020 PROGRAM BEGINS    01647
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BUFF1  00722 A 1        CT     01622   1        FIBMON 01625 A 1        NOTFND 00036   4        RWFIN  00040   4  
      BUFF2  01602 A 1        ERR1   00034   4        FILE   01626 A 1        PROBN  00024   1        RWLOOP 00041   4  
      C0056  01603 A 1        ERROR  00035   4        JOBNAM 00030   1        PROGN  00023   1        RW     01631 A 1  
      CARD   01621 A 1        FENCE  01623 A 1        MZE    01627 A 1        READ   00037   4        TRERR  00042   4  
      CHN    00032   4        FIBJOB 01624 A 1        NOJOB  00031 A 1        RELLOC 01630 A 1        USAGE  01637 A 1  
      CLOS   00033   4                                                                                                  
0FUNCTION DICTIONARY    
      BFCLOS 00000   1        BFOPEN 00001   1        BFREAD 00002   1        BUFFER 00003   1        CHNCOM 00004   1  
      COMARG 00005   1        DSKER  00006   1        EXIT   00007   1        FERRTN 00010   1        .SETUP 00011   1  
      LINK   00012   1        PRNTP  00013   1        TRFILE 00014   1        UNLINK 00015   1        WHOAMI 00016   1  
      WRWAIT 00017   1                                                                                                  
0ABSOLUTE CONSTANTS     
 01640 +000000000000     01645 +000000000660     01643 +000000000016     01644 +000000000120     01642 +000000000002    
 01641 +000000000001     01646 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00032 TXL -302006002004       00033 TXL -302004002000       00034 TXL -302011002006       00035 TXL -302012002011      
 00036 TXL -302014002012       00037 TXL -301724001715       00040 TXL -302000001770       00041 TXL -301754001745      
 00042 TXL -302000002000                                                                                                
0PROGRAM    
                 N'R                                                                001  LM00006
                 D'N CARD (13), BUFF1 (431), BUFF2 (431)                            002  LM00007
                 V'S FIBJOB = $FIBJOB$                                              003  LM00011
 01647 TSX +0 07400 4 00011    01624     +2 63122 4 14622                                                               
                 V'S   FILE = $  FILE$                                              004  LM00012
 01626     -2 06026 3 14325                                                                                             
                 V'S  C0056 = $ C0056$                                              005  LM00013
 01603     -2 02300 0 00506                                                                                             
                 V'S FIBMON = $ 99995$                                              006  LM00014
 01625     -2 01111 1 11105                                                                                             
                 V'S     RW = $RW$                                                  007  LM00015
 01631     -1 16660 6 06060                                                                                             
                 V'S RELLOC = 1                                                     008  LM00016
 01630     +0 00000 0 00001                                                                                             
                 V'S  FENCE = 777777777777K                                         009  LM00017
 01623     -3 77777 7 77777                                                                                             
                 V'S    MZE = -0                                                    010  LM00018
 01627     -0 00000 0 00000                                                                                             
                 E'E (PROBN, NOJOB (5)), (PROGN, NOJOB (6)),                        011  LM00020
                1     (JOBNAM, NOJOB (1))                                           011  LM00021
                 JOBNAM = COMARG. (1)                                               012  LM00026
 01650 TSX +0 07400 4 00005    01651 TXH +3 00000 0 01641    01652 STO +0 60100 0 00030                                 
                 W'R JOBNAM .E. FENCE                                               013  LM00027
 01653 CLA +0 50000 0 00030    01654 SUB +0 40200 0 01623    01655 TNZ -0 10000 0 01661                                 
                      PRNTP. (USAGE)                                                014  LM00028
 01656 TSX +0 07400 4 00013    01657 TXH +3 00000 0 01637                                                               
                      V'S USAGE = $ USAGE IS 'DELFIB  JOBNAM' .$,                   015  LM00029
                1          777777777777K                                            015  LM00030
 01632     -3 77777 7 77777    01633     -0 41460 3 36060    01634     -2 04146 2 24521    01635     +2 54326 3 12260   
 01636     -2 03162 6 01424    01637     -2 06462 2 12725                                                               
                      T'O CHN                                                       016  LM00031
 01660 TRA +0 02000 0 00032                                                                                             
                 E'L                                                                017  LM00032
                 WHOAMI. (CARD (1) ... 2)                                           018  LM00034
 01661 TSX +0 07400 4 00016    01662 TIX +2 01642 0 01620                                                               
                 PROBN = CARD (1)                                                   019  LM00035
 01663 CLA +0 50000 0 01620    01664 STO +0 60100 0 00024                                                               
                 PROGN = CARD                                                       020  LM00036
 01665 CLA +0 50000 0 01621    01666 STO +0 60100 0 00023                                                               
                 FERRTN. (ERROR)                                                    021  LM00038
 01667 TSX +0 07400 4 00010    01670 TXH +3 00000 0 00035                                                               
                 LINK. (FIBJOB, FILE, C0056, FIBMON, MZE, MZE, 120K, ERR1)          022  LM00043
 01671 TSX +0 07400 4 00012    01672 TXH +3 00000 0 01624    01673 TXH +3 00000 0 01626    01674 TXH +3 00000 0 01603   
 01675 TXH +3 00000 0 01625    01676 TXH +3 00000 0 01627    01677 TXH +3 00000 0 01627    01700 TXH +3 00000 0 01644   
 01701 TXH +3 00000 0 00034                                                                                             
                 BFOPEN. (RW, FIBJOB, FILE, BUFF1 (431), MZE, MZE, ERR1)            023  LM00044
 01702 TSX +0 07400 4 00001    01703 TXH +3 00000 0 01631    01704 TXH +3 00000 0 01624    01705 TXH +3 00000 0 01626   
 01706 TXH +3 00000 0 00043    01707 TXH +3 00000 0 01627    01710 TXH +3 00000 0 01627    01711 TXH +3 00000 0 00034   
                 UNLINK. (FIBJOB, FILE)                                             024  LM00045
 01712 TSX +0 07400 4 00015    01713 TXH +3 00000 0 01624    01714 TXH +3 00000 0 01626                                 
      READ       BFREAD. (FIBJOB, FILE, CARD (13) ... 14, NOTFND, CT, ERROR)        025  LM00047
 01715 TSX +0 07400 4 00002    01716 TXH +3 00000 0 01624    01717 TXH +3 00000 0 01626    01720 TIX +2 01643 0 01604   
 01721 TXH +3 00000 0 00036    01722 TXH +3 00000 0 01622    01723 TXH +3 00000 0 00035                                 
                 RELLOC = RELLOC + 14                                               026  LM00048
 01724 CLA +0 50000 0 01630    01725 ADD +0 40000 0 01643    01726 STO +0 60100 0 01630                                 
                 W'R  CARD (13) .NE. PROBN .OR.                                     027  LM00050
                1     CARD (11) .NE. PROGN .OR.                                     027  LM00051
                2     CARD (10) .NE. JOBNAM,                                        027  LM00052
                3          T'O READ                                                 027  LM00053
 01727 CLA +0 50000 0 01607    01730 SUB +0 40200 0 00030    01731 TNZ -0 10000 0 01740    01732 CLA +0 50000 0 01606   
 01733 SUB +0 40200 0 00023    01734 TNZ -0 10000 0 01740    01735 CLA +0 50000 0 01604    01736 SUB +0 40200 0 00024   
 01737 TZE +0 10000 0 01741    01740 TRA +0 02000 0 00037                                                               
                 BUFFER. (FIBJOB, FILE, BUFF2 (431) ... 432)                        028  LM00058
 01741 TSX +0 07400 4 00003    01742 TXH +3 00000 0 01624    01743 TXH +3 00000 0 01626    01744 TIX +2 01645 0 00723   
      RWLOOP     BFREAD. (FIBJOB, FILE, CARD (13) ... 14, RWFIN, CT, ERROR)         029  LM00060
 01745 TSX +0 07400 4 00002    01746 TXH +3 00000 0 01624    01747 TXH +3 00000 0 01626    01750 TIX +2 01643 0 01604   
 01751 TXH +3 00000 0 00040    01752 TXH +3 00000 0 01622    01753 TXH +3 00000 0 00035                                 
                 WRWAIT. (FIBJOB, FILE, RELLOC - 14, CARD (13) ... 14)              030  LM00061
 01754 CLA +0 50000 0 01630    01755 SUB +0 40200 0 01643    01756 STO +0 60100 0 02016    01757 TSX +0 07400 4 00017   
 01760 TXH +3 00000 0 01624    01761 TXH +3 00000 0 01626    01762 TXH +3 00000 0 02016    01763 TIX +2 01643 0 01604   
                 RELLOC = RELLOC + 14                                               031  LM00063
 01764 CLA +0 50000 0 01630    01765 ADD +0 40000 0 01643    01766 STO +0 60100 0 01630                                 
                 T'O RWLOOP                                                         032  LM00064
 01767 TRA +0 02000 0 00041                                                                                             
      RWFIN      TRFILE. (FIBJOB, FILE, RELLOC - 14, TRERR)                         033  LM00066
 01770 CLA +0 50000 0 01630    01771 SUB +0 40200 0 01643    01772 STO +0 60100 0 02016    01773 TSX +0 07400 4 00014   
 01774 TXH +3 00000 0 01624    01775 TXH +3 00000 0 01626    01776 TXH +3 00000 0 02016    01777 TXH +3 00000 0 00042   
      TRERR      C'E                                                                034  LM00068
      CLOS       BFCLOS. (FIBJOB, FILE, ERROR)                                      035  LM00069
 02000 TSX +0 07400 4 00000    02001 TXH +3 00000 0 01624    02002 TXH +3 00000 0 01626    02003 TXH +3 00000 0 00035   
      CHN        CHNCOM. (0)                                                        036  LM00070
 02004 TSX +0 07400 4 00004    02005 TXH +3 00000 0 01640                                                               
      ERR1       UNLINK. (FIBJOB, FILE)                                             037  LM00075
 02006 TSX +0 07400 4 00015    02007 TXH +3 00000 0 01624    02010 TXH +3 00000 0 01626                                 
      ERROR      DSKER.                                                             038  LM00076
 02011 TSX +0 07400 4 00006                                                                                             
      NOTFND     PRNTP. (NOJOB)                                                     039  LM00081
 02012 TSX +0 07400 4 00013    02013 TXH +3 00000 0 00031                                                               
                 V'S NOJOB = $ JOB  000000  NOT FOUND FOR   000000000000.$,         040  LM00082
                1     777777777777K                                                 040  LM00083
 00021     -3 77777 7 77777    00022     +3 36060 6 06060    00023     +0 00000 0 00000    00024     +0 00000 0 00000   
 00025     +2 64651 6 06060    00026     +2 64664 4 52460    00027     -2 06045 4 66360    00030     +0 00000 0 00000   
 00031     -2 04146 2 26060                                                                                             
                 T'O CLOS                                                           041  LM00084
 02014 TRA +0 02000 0 00033                                                                                             
                 E'M                                                                042  LM00088
 02015 TSX +0 07400 4 00007                                                                                             




  DIAL   BCD 10/04/70 1548.8    3056         00000    
1       M1416 3845  PETER R. BOS .... DIAL COMMAND FOR ATTACHED CONSOLES ....    01/12/70 1033.1 PAGE 1     
                  
                  
                                     PCC     ON 
                                     NOLNK
                       00007         ENTRY   0  
                       00007         ENTRY   DIAL     
                       00007         ENTRY   TEST00   
                                     LBL     DIAL     
                                     PCC     OFF
                  
                                     EXTERN  DEAD,GETA,GETCOM,GTPROB,ISIN,SCHEDL,WRFLX    
                  
                                     UNLIST     
                  
                  
                       00007  TEST00 SYN     *             ENTRY FOR DEBUGGING PROG.
      00007  0760 00 0 00016  DIAL   LMTM                  7-TAG MODE FOR XEC.A     
      00010                          CALL    GETCOM(1)     GET PROBLEM NO. OF ADDRESSEE   
      00012  0602 00 0 00066         SLW     PROB          ..     
      00013  0322 00 0 00070         ERA     FENCE.        CHECK IF GIVEN     
      00014  0100 00 0 00063         TZE     DIALER        ERROR IF NO PROBLEM NUMBER     
      00015                          CALL    GTPROB(PROB,DIALER) REFORMAT PROBLEM NO.     
      00020                          CALL    GETCOM(2)     PROGRAMMER NO.     
      00022  0602 00 0 00067         SLW     PROG          ..     
      00023  0322 00 0 00070         ERA     FENCE.        INSURE PROG. SPECIFIED   
      00024  0100 00 0 00063         TZE     DIALER        .. ERROR IF NOT    
      00025                          CALL    ISIN(PROB,PROG) SEE IF DESIRED USER LOGGED IN
      00030  0737 00 2 00000         PAC     ,2            .. USER NO. OR 0   
      00031 -3 00000 2 00050         TXL     NOTIN,2,0     SKIP TO ERROR SECTION IF NOT LOGGED IN     
      00032                          NZTBIT  USROPT,2,,DIALBT IS THIS USER ACCEPTING ADOPTEES   
      00035  0020 00 0 00056         TRA     NODIAL        .. NO, ERROR 
      00036                          XEC.A   LAC(USER,1)   USER NO. OF DIALER 
      00040  0636 00 1 00071         SCA     USR,1         .. SAVE
      00041  0756 00 2 00000         PCA     ,2            SET UP ADOPT WORD  
      00042                          XEC.A   SLW(ADOPT,1)  .. PUT AWAY  
      00044                          SCHEDL  =2,USR,=0     TELL SCHEDL USER NOW DEAD
                  
      00050  0500 00 0 00066  NOTIN  CLA     PROB          HERE IF USER NOT LOGGED IN     
      00051  0560 00 0 00067         LDQ     PROG          ..     
      00052 -0603 00 0 00072         DST     NOTCM         PROB-PROG TO COMMENT     
      00053                          TYPE    (/ T0000  0000 IS NOT LOGGED IN/),NOTCM
      00055  0020 00 0 00063         TRA     DIALER        SKIP   
                  
      00056  0500 00 0 00066  NODIAL CLA     PROB          HERE IF USER NOT ACCEPTING ADOPTEES  
      00057  0560 00 0 00067         LDQ     PROG          ..     
      00060 -0603 00 0 00077         DST     NDLCM         ..     
      00061                          TYPE    (/ T0000  0000 NOT DIALABLE/),NDLCM    
                  
      00063                   DIALER TYPE    (/ DIAL COMMAND INCORRECT/)
      00065  0074 00 4 00000         TSX     DEAD,4        .. AND DIE   
                  
                  
      00066  0 00000 0 00000  PROB   PZE                   PROB-PROG OF DIALEE
      00067  0 00000 0 00000  PROG   PZE                   ..     
      00070 -377777777777     FENCE. OCT     777777777777   
      00071  0 00000 0 00000  USR    PZE                   ..     
1       M1416 3845  PETER R. BOS .... DIAL COMMAND FOR ATTACHED CONSOLES ....    01/12/70 1033.1 PAGE 2     
                  
      00072                          RMT     *  
      00072  606300000000     NOTCM  BCI     / T0000  0000 IS NOT LOGGED IN/                                  .001
      00077  606300000000     NDLCM  BCI     / T0000  0000 NOT DIALABLE/                                      .001
      00104  602431214360     ..249  BCI     / DIAL COMMAND INCORRECT/                                        .001
                                     END  
                  
        LITERALS  
      00110  000000000000     
      00111  000000000002     
1       M1416 3845  PETER R. BOS .... DIAL COMMAND FOR ATTACHED CONSOLES ....    01/12/70 1033.1 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        112 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          1      A      
          2      B      
      72127      C     7
         50      N      
          4      P      
      74653     LA      
      74652     LB      
      74654     M0      
      72175     MQ      
      72177     OV      
      74672     PB      
      74671     Q0      
      74670     Q1      
      74667     Q2      
      74666     Q3      
      74665     Q4      
      74664     Q5      
      74663     Q6      
      74662     Q7      
      74661     Q8      
      74660     Q9      
      72176     SI      
      72174     SQ      
      72162    ILC      
      75402    IOD      
      72171    IR1      
      72170    IR2      
      72167    IR3      
      72166    IR4      
      72165    IR5      
      72164    IR6      
      72163    IR7      
          1    .F.      
          0    .I.      
      72173    LAC      
      74657    Q10      
      74656    Q11      
      74655    Q12      
          0    TMP      
         71    USR    40,   46
          0   BASE      
      74501   DATE      
          0   DEAD    65
          7   DIAL     0
      72203   DVCK      
      72201   FLMD      
          1   GETA    32,   36,   42
      72202   IOCK      
          4   ISIN    25
          1   .ATR      
       4000   .CLC      
1       M1416 3845  PETER R. BOS .... DIAL COMMAND FOR ATTACHED CONSOLES ....    01/12/70 1033.1 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         10   .CPY      
          2   .DSK      
        100   .LGN      
        200   .LGT      
        400   .LOG      
         20   .MEM      
       2000   .SAV      
      10000   .SUB      
          4   .SYS      
       1000   .UFL      
         40   .USR      
      72200   MTMD      
         66   PROB    12,   16,   26,   50,   56
         67   PROG    22,   27,   51,   57
      73315   Q1U1      
      72627   Q1U2      
      73315   Q3U1      
      72556   Q3U2      
      74602   QLEN      
      74557   QMAX      
      74556   QMIN      
      72204   SLTS      
      74616   SWAP      
      77137   TAU1      
      77066   TAU2      
      77015   TAU3      
      76744   TAU4      
      76673   TAU5      
      74502   USER    37
      74516   (MQ)      
      74520   (OV)      
      74517   (SI)      
      74515   (SQ)      
      75065  ADOPT    43
      74651  AMASK      
      72205  ASTAT      
      75207  AWAKE      
      72206  BSTAT      
      74474  COMSW      
      73442  DBUF1      
         20  D.COM      
          4  D.DIR      
          1  D.DSK      
          2  D.OPT      
         40  D.SAV      
         10  D.TSF      
      74647  DMASK      
      74473  DSKSW      
      74443  DUSER      
      74526  ENBSW      
      77777  ENBWD      
      74641  FENCE      
      72434  FSBCT      
      72435  FSBLK      
      76551  ITIME      
1       M1416 3845  PETER R. BOS .... DIAL COMMAND FOR ATTACHED CONSOLES ....    01/12/70 1033.1 PAGE 3     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      77461  ..001      
      75717  ..028      
      74357  ..180      
      72216  ..211      
      72215  ..212      
      72207  ..218      
          5  ..247    54,   77
          5  ..248    62,  104
        104  ..249    64,  110
          4  ..250    64,  110
         24  LCBUF      
      77604  LEVEL      
         20  L.COM      
         40  L.CPU      
          4  L.DIR      
          1  L.DSK      
        100  L.MEM      
          2  L.OPT      
         10  L.TSF      
      74644  LMASK      
         12  MAXLV      
         77  NDLCM    60,   62,  104
         72  NOTCM    52,   54,   77
         50  NOTIN    31
      74643  NULLS      
      74322  PBUFF      
      74646  PMASK      
      72157  PRIND      
      76500  PROBN      
      76427  PROGN      
      72172  PTIRS      
          0  Q.CUR      
          1  Q.MAX      
          2  Q.MIN      
         11  Q.TBL      
      74555  QKILL      
      77254  QLIST      
          3  QUITL      
      76041  RCODE      
      72160  RLIND      
      74645  RMASK      
      74636  SAVED      
      74604  SHIFT      
      74533  STNBY      
      74475  SWPSW      
      74650  TMASK      
      76305  UFDNM      
          2  UFLBT      
      76356  UNAME      
      76622  UTIME      
          6  WRFLX    53,   61,   63
      74503  (ILC)      
      74513  (IR0)      
      74512  (IR1)      
      74511  (IR2)      
1       M1416 3845  PETER R. BOS .... DIAL COMMAND FOR ATTACHED CONSOLES ....    01/12/70 1033.1 PAGE 4     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      74510  (IR3)      
      74507  (IR4)      
      74506  (IR5)      
      74505  (IR6)      
      74504  (IR7)      
      74514  (LAC)      
         12 ACTFIL      
         60 AFS1LN      
        366 AFS2LN      
         32 AFSCON      
         26 AFSENL      
      73362 AFSTU1      
      72727 AFSTU2      
      74442 ATLOST      
      72212 ATRILC      
      72231 AUTHOR      
      74454 AUTOND      
      74603 AVQLEN      
      74447 BASEAD      
      74622 BEGTIM      
      74445 BKGATT      
      74444 BKGKEY      
      74470 BKGPCT      
      74471 BKGTIM      
      74634 BKRPRV      
      74642 BLANKS      
      72230 BLIPCH      
      72227 BLIPDT      
      72226 BLIPTM      
      72221 BREAKL      
      72222 BRKILC      
      72213 BTRILC      
          5 CDEPTH      
      72432 CHNPTR      
        100 CLKBIT      
      74453 CLKTIM      
         24 CLNGTH      
      74640 CMFL00      
      74415 COMBUF      
      72241 COMCTR      
      72240 COMFSW      
      75575 COMMND      
      74460 COMPCT      
      74441 COMPTR      
      77462 COMRLC      
      74461 COMTIM      
      74631 CTSSID      
      74630 CURUSR      
      74500 DATEYR      
      74446 DEMKEY      
        200 DIALBT    34
         63 DIALER    14,   17,   24,   55
      74457 DISKSW      
      74464 DSKPCT      
      74465 DSKTIM      
1       M1416 3845  PETER R. BOS .... DIAL COMMAND FOR ATTACHED CONSOLES ....    01/12/70 1033.1 PAGE 5     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      74545 DUMMY0      
      74544 DUMMY1      
      74543 DUMMY2      
      74542 DUMMY3      
      74541 DUMMY4      
      74540 DUMMY5      
      74537 DUMMY6      
      74536 DUMMY7      
      74535 DUMMY8      
      74534 DUMMY9      
      72555 EMCOND      
      74612 EMPLVL      
         10 ENBBIT      
      74527 ESTTIM      
         70 FENCE.    13,   23
      74530 FIBPTR      
      74531 FIBRUN      
      74635 FORCOD      
         10 FSBENL      
        120 FSBLKL      
          1 FULBIT      
      74611 FULLEN      
      74613 FULLVL      
          2 GETCOM    10,   20
         10 GPHBIT      
         43 GROUPS      
      76112 GRPNO.      
      77210 GRPTBL      
          3 GTPROB    15
      74605 HANGUP      
          2 HUNGBT      
      74606 INACTV      
         20 INHBIT      
         20 INPBIT      
       2000 INTBIT      
      74554 KILLDT      
      74551 KILLSW      
      74553 KILLTM      
      77655 LENGTH      
      74607 LEVINC      
      74617 LEVTIM      
      10000 LOGTBT      
      72127 LOWCOM      
      72156 MACOND      
      74615 MAXLVL      
      74621 MAXTIM      
      72161 MEMBND      
          4 MESGBT      
      74614 MINLVL      
      74571 MXUSRS      
       1000 NBACBT      
          4 NBKBIT      
          2 NCVBIT      
      10000 NDEMBT      
      77777 NEWTOP      
1       M1416 3845  PETER R. BOS .... DIAL COMMAND FOR ATTACHED CONSOLES ....    01/12/70 1033.1 PAGE 6     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      74626 NEWUSR      
       4000 NFIBBT      
       2000 NFORBT      
        400 NINTBT      
       1000 NKILBT      
         56 NODIAL    35
          1 NOTIME      
      20000 NPRCBT      
        200 NQTBIT      
     700000 NTIMCD      
      74532 NUSERS      
        660 NWDSPT      
      74451 NWORDS      
      75014 OKPROB      
      74743 OKPROG      
      72214 OLDILC      
      77461 OLDTOP      
      74627 OLDUSR      
      74620 PAYTIM      
      74625 PAYUSR      
      74462 PRMPCT      
      74463 PRMTIM      
         45 Q1U1LN      
        100 Q1U2LN      
          0 Q3U1LN      
         51 Q3U2LN      
          4 Q.DNDT      
          6 Q.DNTM      
         10 Q.DNVR      
          3 Q.UPDT      
          5 Q.UPTM      
          7 Q.UPVR      
      74550 QLOSER      
      74610 QNTWAT      
      74560 QUANTM      
        100 R636BT      
          2 RCALBT      
      74452 RCLKDT      
          1 RCOMBT      
        200 RDSKBT      
         40 RKLDBT      
       2000 ROPRBT      
         20 RPATBT      
          4 RPROBT      
         10 RPRVBT      
          4 RSTFBT      
       1000 RSYSBT      
        400 RTSSBT      
        100 SAVEBT      
      72225 SAVEM1      
          4 SB.CHN      
          1 SB.CMD      
         10 SB.ERR      
          2 SB.TSX      
          5 SCHEDL    44
1       M1416 3845  PETER R. BOS .... DIAL COMMAND FOR ATTACHED CONSOLES ....    01/12/70 1033.1 PAGE 7     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      77726 STATUS      
      74450 STOPSW      
      77411 STRTIM      
      72266 SUBCOM      
      76234 SUBNAM      
      76163 SUBSWS      
      74547 SWPMAX      
      74546 SWPMIN      
      74466 SWPPCT      
      74467 SWPTIM      
      74455 SWPWAT      
         40 SYSBIT      
      74623 SYSDAT      
      74477 SYSNAM      
      74624 SYSTIM      
          7 TEST00     0,    7
      75136 TIMINC      
      77533 TIMLEV      
      74476 TIMNOW      
      72210 TINHIB      
      74472 TOTTIM      
         77 TPWRSW      
      74633 TSRCOD      
      74637 TSSDC.      
      72130 TSSFID      
      72234 TSSFIL      
      72233 TSSFSW      
         24 TSSMAX      
      72132 TSSTBL      
      75453 UARRAY      
          1 UBACBT      
       1000 UCBFBT      
      75260 UCHARG      
        200 UCHNBT      
      75331 UCLOCK      
        400 UCMLBT      
      72242 UCOMBF      
        100 UCOMBT      
      74414 UCOMND      
      74413 UCOMSW      
         10 UDEMBT      
      72211 UENBWD      
      72223 UFERTN      
          4 UFIBBT      
          1 UFLBIT      
          2 UFORBT      
      72224 UILOCK      
      75646 UNITID      
         20 UPRCBT      
      72232 URCODE      
         10 USRBIT      
      72236 USRFIL      
      75770 USROPT    33
      74456 USRWAT      
      75524 USWICH      
1       M1416 3845  PETER R. BOS .... DIAL COMMAND FOR ATTACHED CONSOLES ....    01/12/70 1033.1 PAGE 8     
                        POST PROCESSOR ASSEMBLY DATA  
                  
      72433 WATCOM      
      77462 WATTIM      
         16 WDSLIN      
      77340 WRKTIM      
       2000 XEQBIT      
      74524 (DVCK)      
      74522 (FLMD)      
      74523 (IOCK)      
      74521 (MTMD)      
      74525 (SLTS)      
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




    ED   BCD 09/18/68 2044.6   32730         00000    
           BEGIN                                                            00010___
       COMMENT .. CONTEXT EDITOR FOR CARD IMAGE PROGRAMS .. $,              00020___
           INTEGER BLANK,TAB,STAR,FENCE,TNAME,ENAME,TCLASS,OLDNAM,CLASS,L   00030  **** LINE TRUNCATED
            ,LINENO,LINCR,HILINE,COUNT,EDCT,NEWNAM,K,I,N,Q,J,PRC,OP,PRCT,   00040___
            STR1,TLP,STR2,ESTR,XXWORD,PRINAM,TLINI,SAVCT,BLANKS,STR2M1,     00050___
            STR2P1,STRDIF,STR1P1,EDWD,INPWD $,                              00060___
           INTEGER PROCEDURE LS,NUM,GET,COMARG $,                           00070___
           INTEGER ARRAY FAP,MAD,MADTRN,ALGOL,GPSS,XXXCWD,CCT $,            00080___
           INTEGER ARRAY LINE(85),EDLIN,TLIN,WHOAM(2) $,                    00090___
           BOOLEAN OK,MODIFY,GLOBAL,VERMOD,NDCHAR,TRNCSW $,                 00100___
           BOOLEAN PROCEDURE UNTAB $,                                       00110___
           PROCEDURE RED,DELETE,WRFLEX,SETTAB,DASIGN,DSEEK,RDTYPE,BLACK,    00120___
            PRCARD,WRLINE,MOVETO,VERPRN,RDCARD,CLOSE,SETCOL,SETBCD,DFILE,   00130___
            RENAME,CHFILE,UPDATE,CHNCOM,FLIP,RESET,WRCARD,WHOAMI $,         00140___
           TNAME .BCD. '(INPT1' $,                                          00150___
           ENAME .BCD. '(INPUT' $,                                          00160___
           BLANKS .BCD. ' ' $,                                              00170___
           PRESET                                                           00180___
                BEGIN                                                       00190___
                FENCE = 777777777777C $,                                    00200___
                BLANK = 60C $,                                              00210___
                TAB = 72C $,                                                00220___
                STAR = 545757575757C $,                                     00230___
                END $,                                                      00240___
       COMMENT .......... TAB SETTINGS .......... $,                        00250___
           PRESET                                                           00260___
                BEGIN                                                       00270___
                FAP = 3,8,16,30 $,                                          00280___
                MAD = 12,12,17,22,27,32,37,42,47,52,57,62,67 $,             00290___
                MADTRN = 12,7,12,17,22,27,32,37,42,47,52,57,62 $,           00300___
                ALGOL = 12,11,16,21,26,31,36,41,46,51,56,61,66 $,           00310___
                GPSS = 11,2,7,19,25,31,37,43,49,55,61,67 $,                 00320___
                END $,                                                      00330___
           PRESET                                                           00340___
                BEGIN                                                       00350___
                LENGTH = 0 $,                                               00360___
                LINENO = 0 $,                                               00370___
                HILINE = 0 $,                                               00380___
                LINCR = 10 $,                                               00390___
                VERMOD = 0B $,                                              00400___
                TRNCSW = 1B $,                                              00410___
                OK = 0B $,                                                  00420___
                END $,                                                      00430___
           SWITCH RQUEST = APPEND,BLKOUT,BOTTOM,BRIEF,CHANGE,CLIP,COLON,    00440___
            DELLIN,FILE,FIND,INSERT,KILL,LOCATE,MERGE,NEXLIN,OVRLAY,        00450___
            XPRINT,QUIT,RETYPE,SERIAL,TABSET,TOP,VERIFY,WRITE $,            00460___
           XXXCWD .BCD. '000000APPEND BLANKBOTTOM BRIEFCHANGE  CLIP COLON   00470___
 DELETE  FILE  FINDINSERT  KILLLOCATE MERGE  NEXTOVRLAY PRINT  QUITRETYPE   00480___
 SERIALTABSET   TOPVERIFY WRITE' $,                                         00490___
           XXWORD .BCD. '000000     A    BL     B    BR     C    CL    CO   00500___
      D    FL     F     I     K     L     M     N     O     P     Q     R   00510___
      S    TA     T    VE     W' $,                                         00520___
           PRESET CCT = 24 $,                                               00530___
       COMMENT .......... START OF MAIN PROGRAM .......... $,               00540___
           WHOAMI(WHOAM TO 2) $,                                            00550___
           TCLASS = WHOAM(1) $,                                             00560___
           RED() $,                                                         00570___
           DELETE(TNAME,TCLASS,0,ERROR) $,                                  00580___
           DELETE(ENAME,TCLASS,0,ERROR) $,                                  00590___
           EDWD = .BCI. 'EDIT:' $,                                          00600___
           INPWD = .BCI. 'INPUT:' $,                                        00610___
           OLDNAM = COMARG(1) $,                                            00620___
           CLASS = COMARG(2) $,                                             00630___
           NEWNAM = COMARG(3) $,                                            00640___
           IF OLDNAM EQL FENCE                                              00650___
           THEN BEGIN                                                       00660___
                WRFLEX(.BCI. 'NO FILE OR CLASS NAME GIVEN.' ,0) $,          00670___
                GOTO ERROR $,                                               00680___
                END                                                         00690___
           ELSE IF CLASS EQL FENCE                                          00700___
                THEN BEGIN                                                  00710___
                     CLASS = OLDNAM $,                                      00720___
                     NEWNAM = OLDNAM = FENCE $,                             00730___
                     END $,                                                 00740___
           IF CLASS EQL .BCD. '   FAP' OR CLASS EQL .BCD. '  PEST'          00750___
           THEN BEGIN                                                       00760___
                SETTAB(FAP) $,                                              00770___
                TRNCSW = FALSE $,                                           00780___
                END                                                         00790___
           ELSE IF CLASS EQL .BCD. 'MADTRN' OR CLASS EQL .BCD. 'FORTRN'     00800___
                THEN SETTAB(MADTRN)                                         00810___
                ELSE IF CLASS EQL .BCD. '   MAD'                            00820___
                     THEN SETTAB(MAD)                                       00830___
                     ELSE IF CLASS EQL .BCD. ' ALGOL'                       00840___
                          THEN SETTAB(ALGOL)                                00850___
                          ELSE IF CLASS EQL .BCD. '  GPSS'                  00860___
                               THEN SETTAB(GPSS)                            00870___
                               ELSE IF CLASS NEQ .BCD. ' COMIT'             00880___
                                    THEN WRFLEX(.BCI. 'TABS NOT SET' ,0)    00890___
                                          $,                                00900___
           DASIGN(ENAME,TCLASS,ERROR) $,                                    00910___
           IF OLDNAM EQL FENCE                                              00920___
           THEN GOTO PINPUT $,                                              00930___
           DSEEK(OLDNAM,CLASS,PINPUT) $,                                    00940___
           OK = TRUE $,                                                     00950___
           IF NEWNAM NEQ FENCE                                              00960___
           THEN OLDNAM = NEWNAM $,                                          00970___
       COMMENT .......... CONTROL WORD DISPATCHER .......... $,             00980___
 PEDIT $   RED() $,                                                         00990___
           WRFLEX(EDWD,0) $,                                                01000___
 NEXT $    RDTYPE(EDLIN,COUNT) $,                                           01010___
           IF COUNT EQL 0                                                   01020___
           THEN GOTO PINPUT $,                                              01030___
           EDCT = 0 $,                                                      01040___
           XXXCWD = GET() $,                                                01050___
           FOR I = 1 STEP 1 UNTIL CCT                                       01060___
           DO   IF XXXCWD EQL XXWORD(I) OR XXXCWD EQL XXXCWD(I)             01070___
                THEN GOTO RQUEST(I) $,                                      01080___
       COMMENT .......... NOT A REQUEST .......... $,                       01090___
           WRFLEX(.BCI. 'NOT A REQUEST:' ,0) $,                             01100___
 PCARD $   BLACK() $,                                                       01110___
           PRCARD(EDLIN,COUNT) $,                                           01120___
           RED() $,                                                         01130___
           GOTO NEXT $,                                                     01140___
       COMMENT .......... INSERT,INPUT MODE .......... $,                   01150___
 PINPUT $  WRFLEX(INPWD,0) $,                                               01160___
           BLACK() $,                                                       01170___
 INPUT $   RDTYPE(EDLIN,COUNT) $,                                           01180___
           IF COUNT EQL 0                                                   01190___
           THEN GOTO PEDIT $,                                               01200___
           IF UNTAB(EDLIN) AND TRNCSW                                       01210___
           THEN BEGIN                                                       01220___
                RED() $,                                                    01230___
                WRFLEX(.BCI. 'TRUNCATED:' ,0) $,                            01240___
                PRCARD(EDLIN,72) $,                                         01250___
                BLACK() $,                                                  01260___
                END $,                                                      01270___
           WRLINE() $,                                                      01280___
           LINENO = 0 $,                                                    01290___
           FOR I = 1 STEP 1 UNTIL 72                                        01300___
           DO LINE(I) = EDLIN(I) $,                                         01310___
           LENGTH = EDLIN $,                                                01320___
           GOTO INPUT $,                                                    01330___
 OVRLAY $  MOVETO(TLIN) $,                                                  01340___
           FOR I = 1 STEP 1 UNTIL TLIN                                      01350___
           DO   IF TLIN(I) NEQ BLANK                                        01360___
                THEN LINE(I) = TLIN(I) $,                                   01370___
           IF TLIN GRT LENGTH                                               01380___
           THEN LENGTH = TLIN $,                                            01390___
           VERPRN() $,                                                      01400___
           GOTO NEXT $,                                                     01410___
 BLKOUT $  MOVETO(TLIN) $,                                                  01420___
           FOR I = 1 STEP 1 UNTIL TLIN                                      01430___
           DO   IF TLIN(I) NEQ BLANK                                        01440___
                THEN LINE(I) = BLANK $,                                     01450___
           VERPRN() $,                                                      01460___
           GOTO NEXT $,                                                     01470___
       COMMENT .......... DELETE LINE OR CARDS .......... $,                01480___
 DELLIN $  IF (N = NUM()) EQL 0                                             01490___
           THEN N = 1 $,                                                    01500___
           FOR I = 2 STEP 1 UNTIL N                                         01510___
           DO   BEGIN                                                       01520___
                IF NOT OK                                                   01530___
                THEN GOTO EOF $,                                            01540___
                RDCARD(LINE,LENGTH,LINENO,EOF) $,                           01550___
                END $,                                                      01560___
           LENGTH = LINENO = 0 $,                                           01570___
           GOTO NEXT $,                                                     01580___
       COMMENT .......... RETYPE CURRENT CARD .......... $,                 01590___
 INSERT $  IF EDCT GEQ COUNT                                                01600___
           THEN GOTO PINPUT $,                                              01610___
           WRLINE() $,                                                      01620___
 RETYPE $  MOVETO(LINE) $,                                                  01630___
           LENGTH = LINE $,                                                 01640___
           GOTO NEXT $,                                                     01650___
       COMMENT .......... NEXT CARD .......... $,                           01660___
 NEXLIN $  IF (N = NUM()) EQL 0                                             01670___
           THEN N = 1 $,                                                    01680___
           FOR I = 1 STEP 1 UNTIL N                                         01690___
           DO   BEGIN                                                       01700___
                WRLINE() $,                                                 01710___
                IF NOT OK                                                   01720___
                THEN CLOSE() $,                                             01730___
                RDCARD(LINE,LENGTH,LINENO,EOF) $,                           01740___
                END $,                                                      01750___
           VERPRN() $,                                                      01760___
           GOTO NEXT $,                                                     01770___
       COMMENT ......... FIND MATCHING CARD .......... $,                   01780___
 FIND $    MOVETO(TLIN) $,                                                  01790___
 FIND2 $   WRLINE() $,                                                      01800___
           IF NOT OK                                                        01810___
           THEN CLOSE() $,                                                  01820___
           RDCARD(LINE,LENGTH,LINENO,EOF) $,                                01830___
           FOR I = 1 STEP 1 UNTIL TLIN                                      01840___
           DO   IF TLIN(I) NEQ BLANK AND TLIN(I) NEQ LINE(I)                01850___
                THEN GOTO FIND2 $,                                          01860___
           VERPRN() $,                                                      01870___
           GOTO NEXT $,                                                     01880___
       COMMENT .......... LOCATE LINE WITH CHAR. STRING ... $,              01890___
 LOCATE $  WRLINE() $,                                                      01900___
           IF NOT OK                                                        01910___
           THEN CLOSE() $,                                                  01920___
           RDCARD(LINE,LENGTH,LINENO,EOF) $,                                01930___
           FOR I = 1 STEP 1 UNTIL 84                                        01940___
           DO   BEGIN                                                       01950___
                J = I $,                                                    01960___
                FOR K = EDCT+1 STEP 1 UNTIL COUNT                           01970___
                DO   BEGIN                                                  01980___
                     IF J GRT 84                                            01990___
                     THEN GOTO LOCATE $,                                    02000___
                     IF EDLIN(K) NEQ LINE(J)                                02010___
                     THEN GOTO LOC2 $,                                      02020___
                     J = J+1 $,                                             02030___
                     END $,                                                 02040___
                VERPRN() $,                                                 02050___
                GOTO NEXT $,                                                02060___
 LOC2 $         END $,                                                      02070___
           GOTO LOCATE $,                                                   02080___
       COMMENT .......... PRINT CARD OR CARDS .......... $,                 02090___
 XPRINT $  N = NUM() $,                                                     02100___
           BLACK() $,                                                       02110___
           PRC = 72 $,                                                      02120___
           IF (OP = GET()) EQL .BCD. 'LINENO' OR OP EQL .BCD. '     L'      02130___
           THEN PRC = 80 $,                                                 02140___
 PRINT1 $  PRCT = LENGTH $,                                                 02150___
           IF PRCT GRT PRC                                                  02160___
           THEN PRCT = PRC $,                                               02170___
           PRCARD(LINE,PRCT) $,                                             02180___
           IF (N = N-1) LEQ 0                                               02190___
           THEN GOTO EPRINT $,                                              02200___
           WRLINE() $,                                                      02210___
           IF NOT OK                                                        02220___
           THEN GOTO EOF $,                                                 02230___
           RDCARD(LINE,LENGTH,LINENO,EOF) $,                                02240___
           GOTO PRINT1 $,                                                   02250___
 EPRINT $  RED() $,                                                         02260___
           GOTO NEXT $,                                                     02270___
       COMMENT .......... TOP,GO TO TOP OF CARD FILE .......... $,          02280___
 TOP $     WRLINE() $,                                                      02290___
           IF OK                                                            02300___
           THEN BEGIN                                                       02310___
                RDCARD(LINE,LENGTH,LINENO,ENDTOP) $,                        02320___
                GOTO TOP $,                                                 02330___
                END $,                                                      02340___
 ENDTOP $  CLOSE() $,                                                       02350___
           GOTO NEXT $,                                                     02360___
       COMMENT .. BOTTOM,GOTO BOTTOM OF CARD FILE .. $,                     02370___
 BOTTOM $  WRLINE() $,                                                      02380___
           IF OK                                                            02390___
           THEN BEGIN                                                       02400___
                RDCARD(LINE,LENGTH,LINENO,ENDBOT) $,                        02410___
                GOTO BOTTOM $,                                              02420___
                END $,                                                      02430___
 ENDBOT $  LENGTH = 0 $,                                                    02440___
           OK = FALSE $,                                                    02450___
           GOTO PINPUT $,                                                   02460___
       COMMENT .. CHANGE,REPLACE CHARACTER STRING .. $,                     02470___
 CHANGE $  Q = EDLIN(STR1 = EDCT = EDCT+1) $,                               02480___
           STR1P1 = STR1+1 $,                                               02490___
           FOR EDCT = EDCT+1 STEP 1 WHILE EDLIN(EDCT) NEQ Q AND EDCT LEQ    02500___
            COUNT                                                           02510___
           DO   BEGIN                                                       02520___
                END $,                                                      02530___
           STRDIF = (STR2M1 = (STR2P1 = (STR2 = EDCT)+1)-2)-STR1 $,         02540___
           FOR EDCT = EDCT+1 STEP 1 WHILE EDLIN(EDCT) NEQ Q AND EDCT LEQ    02550___
            COUNT                                                           02560___
           DO   BEGIN                                                       02570___
                END $,                                                      02580___
           EDCT = (ESTR = EDCT)+1 $,                                        02590___
           IF (N = NUM()) EQL 0                                             02600___
           THEN N = 1 $,                                                    02610___
           GLOBAL = ((OP = GET()) EQL .BCD. '     G' OR OP EQL .BCD. 'GLO   02620___
 BAL' ) $,                                                                  02630___
 REPEAT $  IF LENGTH LEQ 0                                                  02640___
           THEN GOTO ECHNG2 $,                                              02650___
           MODIFY = FALSE $,                                                02660___
           IF N LEQ 1                                                       02670___
           THEN MODIFY = TRUE $,                                            02680___
           FOR I = 1 STEP 1 UNTIL 72                                        02690___
           DO TLIN(I) = LINE(I) $,                                          02700___
           LENGTH = TLP = 1 $,                                              02710___
 FNDSTR $  FOR TLP = TLP STEP 1 UNTIL 72                                    02720___
           DO   BEGIN                                                       02730___
                J = TLP $,                                                  02740___
                FOR I = STR1P1 STEP 1 UNTIL STR2M1                          02750___
                DO   BEGIN                                                  02760___
                     IF EDLIN(I) NEQ TLIN(J) OR J GRT 72                    02770___
                     THEN GOTO FNDS2 $,                                     02780___
                     J = J+1 $,                                             02790___
                     END $,                                                 02800___
                GOTO FOUND $,                                               02810___
 FNDS2 $        LINE(LENGTH) = TLIN(TLP) $,                                 02820___
                IF LENGTH GRT 72                                            02830___
                THEN GOTO ECHNG $,                                          02840___
                LENGTH = LENGTH+1 $,                                        02850___
                END $,                                                      02860___
           LINE(LENGTH) = BLANK $,                                          02870___
           GOTO ECHNG $,                                                    02880___
 FOUND $   TLP = TLP+STRDIF $,                                              02890___
           MODIFY = TRUE $,                                                 02900___
           FOR I = STR2P1 STEP 1 WHILE I LES ESTR                           02910___
           DO   BEGIN                                                       02920___
                LINE(LENGTH) = EDLIN(I) $,                                  02930___
                IF LENGTH GEQ 72                                            02940___
                THEN GOTO ECHNG $,                                          02950___
                LENGTH = LENGTH+1 $,                                        02960___
                END $,                                                      02970___
           IF GLOBAL                                                        02980___
           THEN GOTO FNDSTR $,                                              02990___
           FOR TLP = TLP STEP 1 UNTIL 72                                    03000___
           DO   BEGIN                                                       03010___
                LINE(LENGTH) = TLIN(TLP) $,                                 03020___
                IF LENGTH GEQ 72                                            03030___
                THEN GOTO ECHNG $,                                          03040___
                LENGTH = LENGTH+1 $,                                        03050___
                END $,                                                      03060___
           LINE(LENGTH) = BLANK $,                                          03070___
 ECHNG $   FOR LENGTH = LENGTH+1 STEP 1 UNTIL 84                            03080___
           DO LINE(LENGTH) = BLANK $,                                       03090___
           LENGTH = 84 $,                                                   03100___
           IF MODIFY                                                        03110___
           THEN VERPRN() $,                                                 03120___
 ECHNG2 $  IF (N = N-1) LEQ 0                                               03130___
           THEN GOTO NEXT $,                                                03140___
           WRLINE() $,                                                      03150___
           IF NOT OK                                                        03160___
           THEN GOTO EOF $,                                                 03170___
           RDCARD(LINE,LENGTH,LINENO,EOF) $,                                03180___
           GOTO REPEAT $,                                                   03190___
       COMMENT .......... SERIAL,SET LINE INCREMENT .......... $,           03200___
 SERIAL $  IF (LINCR = NUM()) EQL 0                                         03210___
           THEN LINCR = 10 $,                                               03220___
           GOTO NEXT $,                                                     03230___
       COMMENT .......... TABSET,SET CONSOLE TABS .......... $,             03240___
 TABSET $  TLIN = 0 $,                                                      03250___
           FOR I = 1 STEP 1 UNTIL 30                                        03260___
           DO   BEGIN                                                       03270___
                IF (TLIN(I) = TLINI = NUM()) EQL 0                          03280___
                THEN BEGIN                                                  03290___
                     SETTAB(TLIN) $,                                        03300___
                     GOTO NEXT $,                                           03310___
                     END $,                                                 03320___
                IF I GRT 1 AND TLINI LEQ TLIN(I-1) OR TLINI GRT 84          03330___
                THEN BEGIN                                                  03340___
 TABERR $            WRFLEX(.BCI. 'ILLEGAL TAB SETTING IGNORED:' ,0) $,     03350___
                     GOTO PCARD $,                                          03360___
                     END $,                                                 03370___
                TLIN = I $,                                                 03380___
                END $,                                                      03390___
       COMMENT .. CONTROL SHOULD NEVER GET HERE, BUT .... $,                03400___
           GOTO TABERR $,                                                   03410___
       COMMENT .......... VERIFY MODE .......... $,                         03420___
 VERIFY $  VERMOD = TRUE $,                                                 03430___
           EDWD = .BCI. 'EDIT:' $,                                          03440___
           INPWD = .BCI. 'INPUT:' $,                                        03450___
           GOTO NEXT $,                                                     03460___
       COMMENT .......... BRIEF MODE .......... $,                          03470___
 BRIEF $   VERMOD = FALSE $,                                                03480___
           EDWD = .BCI. 'E:' $,                                             03490___
           INPWD = .BCI. 'I:' $,                                            03500___
           GOTO NEXT $,                                                     03510___
 COLON $   IF (OP = GET()) EQL .BCD. '  TEXT' OR OP EQL .BCD. '     T'      03520___
           THEN SETCOL(0)                                                   03530___
           ELSE IF OP EQL .BCD. 'BACKSP' OR OP EQL .BCD. '     B'           03540___
                THEN SETCOL(1)                                              03550___
                ELSE BEGIN                                                  03560___
                     WRFLEX(.BCI. 'ILLEGAL ARGUMENT OF COLON REQUEST:' ,0   03570___
                      ) $,                                                  03580___
                     GOTO PCARD $,                                          03590___
                     END $,                                                 03600___
           GOTO NEXT $,                                                     03610___
 CLIP $    IF (OP = GET()) EQL .BCD. '    ON'                               03620___
           THEN TRNCSW = TRUE                                               03630___
           ELSE IF OP EQL .BCD. '   OFF'                                    03640___
                THEN TRNCSW = FALSE                                         03650___
                ELSE BEGIN                                                  03660___
                     WRFLEX(.BCI. 'ILLEGAL ARGUMENT OF CLIP REQUEST:' ,0)   03670___
                      $,                                                    03680___
                     GOTO PCARD $,                                          03690___
                     END $,                                                 03700___
           GOTO NEXT $,                                                     03710___
 KILL $                                                                     03720___
 MERGE $                                                                    03730___
 APPEND $                                                                   03740___
 WRITE $                                                                    03750___
 NULL $    WRFLEX(.BCI. 'THIS FUNCTION NOT YET CODED:' ,0) $,               03760___
           GOTO PCARD $,                                                    03770___
       COMMENT .......... FILE,END OF EDITING .......... $,                 03780___
 FILE $    IF (PRINAM = GET()) EQL BLANKS                                   03790___
           THEN BEGIN                                                       03800___
                IF (PRINAM = OLDNAM) EQL FENCE                              03810___
                THEN BEGIN                                                  03820___
                     SETBCD() $,                                            03830___
                     WRFLEX(.BCI. 'NO FILE NAME GIVEN' ,0) $,               03840___
                     GOTO NEXT $,                                           03850___
                     END $,                                                 03860___
                END $,                                                      03870___
 FILE1 $   WRLINE() $,                                                      03880___
           IF OK                                                            03890___
           THEN BEGIN                                                       03900___
                RDCARD(LINE,LENGTH,LINENO,XEND) $,                          03910___
                GOTO FILE1 $,                                               03920___
                END $,                                                      03930___
 XEND $    DFILE(NOFILE) $,                                                 03940___
           RENAME(ENAME,TCLASS,PRINAM,CLASS,NODEL) $,                       03950___
 L3 $      CHFILE(TNAME,TCLASS,1,-0,-0,L4) $,                               03960___
           DELETE(TNAME,TCLASS,0,L4) $,                                     03970___
 L4 $      UPDATE() $,                                                      03980___
 ERROR $   BLACK() $,                                                       03990___
          WRFLEX(STAR,1) $,                                                 04000___
           CHNCOM(0) $,                                                     04010___
 NODEL $   FLIP() $,                                                        04020___
           GOTO PEDIT $,                                                    04030___
       COMMENT ............. QUIT, DELETE TEMP. FILES, LEAVE ....... $,     04040___
 QUIT $    RESET() $,                                                       04050___
          CHFILE(ENAME,TCLASS,1,-0,-0,L3) $,                                04060___
          DELETE(ENAME,TCLASS,0,L3) $,                                      04070___
           GOTO L3 $,                                                       04080___
       COMMENT .......... END OF FILE READING EDIT FILE .......... $,       04090___
 EOF $     RED() $,                                                         04100___
           WRFLEX(.BCI. 'END OF FILE REACHED BY:' ,0) $,                    04110___
           LENGTH = 0 $,                                                    04120___
           OK = FALSE $,                                                    04130___
           GOTO PCARD $,                                                    04140___
       COMMENT .......... HERE FOR DISK FILE ERROR .......... $,            04150___
 NOFILE $  WRFLEX(.BCI. 'NOTHING IN FILE' ,0) $,                            04160___
           OK = FALSE $,                                                    04170___
           LENGTH = LINENO = HILINE = 0 $,                                  04180___
           DASIGN(ENAME,TCLASS,ERROR) $,                                    04190___
           GOTO PINPUT $,                                                   04200___
       COMMENT .... ATTEMPT TO TERMINATE, THEN REVERSE FILES ..... $,       04210___
                                                                            04220___
           DEFINE PROCEDURE CLOSE TOBE                                      04230___
                BEGIN                                                       04240___
                DFILE(NOFILE) $,                                            04250___
                FLIP() $,                                                   04260___
                END $,                                                      04270___
                                                                            04280___
       COMMENT ..... REVERSE AND RE-OPEN FILES $,                           04290___
                                                                            04300___
           DEFINE PROCEDURE FLIP TOBE                                       04310___
                BEGIN                                                       04320___
          CHFILE(TNAME,TCLASS,1,-0,-0,IGNERR) $,                            04330___
 IGNERR $ DELETE(TNAME,TCLASS,0,ERROR) $,                                   04340___
                CHFILE(ENAME,TCLASS,16,TNAME,TCLASS,ERROR) $,               04350___
                UPDATE() $,                                                 04360___
                DSEEK(TNAME,TCLASS,NOFILE) $,                               04370___
                OK = TRUE $,                                                04380___
                DASIGN(ENAME,TCLASS,ERROR) $,                               04390___
                LENGTH = LINENO = HILINE = 0 $,                             04400___
                END $,                                                      04410___
                                                                            04420___
       COMMENT .......... PROCEDURE TO SET UP LINENO,ETC. ..... $,          04430___
                                                                            04440___
           DEFINE PROCEDURE WRLINE TOBE                                     04450___
                BEGIN                                                       04460___
                IF LENGTH NEQ 0                                             04470___
                THEN BEGIN                                                  04480___
                     IF LINENO LEQ HILINE                                   04490___
                     THEN LINENO = HILINE+LINCR $,                          04500___
                     WRCARD(LINE,LENGTH,LINENO,ERROR) $,                    04510___
                     IF LINENO GRT HILINE                                   04520___
                     THEN HILINE = LINENO $,                                04530___
                     END $,                                                 04540___
                END $,                                                      04550___
                                                                            04560___
       COMMENT ..... PROCEDURE TO VERIFY LINE ........ $,                   04570___
                                                                            04580___
           DEFINE PROCEDURE VERPRN TOBE                                     04590___
                BEGIN                                                       04600___
                IF VERMOD                                                   04610___
                THEN BEGIN                                                  04620___
                     BLACK() $,                                             04630___
                     PRCARD(LINE,72) $,                                     04640___
                     RED() $,                                               04650___
                     END $,                                                 04660___
                END $,                                                      04670___
                                                                            04680___
       COMMENT ....... PROCEDURES GET AND NUM(UTILITY)... $,                04690___
                                                                            04700___
           DEFINE INTEGER PROCEDURE GET TOBE                                04710___
                BEGIN                                                       04720___
                SAVCT = EDCT $,                                             04730___
                NDCHAR = TRUE $,                                            04740___
                XXWORD = BLANKS $,                                          04750___
                FOR EDCT = EDCT+1 WHILE (NDCHAR OR (EDLIN(EDCT) NEQ BLANK   04760___
                 AND EDLIN(EDCT) NEQ TAB)) AND EDCT LEQ COUNT               04770___
                DO   IF EDLIN(EDCT) NEQ TAB AND EDLIN(EDCT) NEQ BLANK       04780___
                     THEN BEGIN                                             04790___
                          XXWORD = LS(XXWORD,6) .V. EDLIN(EDCT) $,          04800___
                          NDCHAR = FALSE $,                                 04810___
                          END $,                                            04820___
                XXWORD = XXWORD $,                                          04830___
                END $,                                                      04840___
                                                                            04850___
           DEFINE INTEGER PROCEDURE NUM TOBE                                04860___
                BEGIN                                                       04870___
                SAVCT = EDCT $,                                             04880___
                NDCHAR = TRUE $,                                            04890___
                XXWORD = 0 $,                                               04900___
                FOR EDCT = EDCT+1 WHILE (NDCHAR OR (EDLIN(EDCT) NEQ BLANK   04910___
                 AND EDLIN(EDCT) NEQ TAB)) AND EDCT LEQ COUNT               04920___
                DO   IF EDLIN(EDCT) LES 10                                  04930___
                     THEN BEGIN                                             04940___
                          XXWORD = XXWORD*10+EDLIN(EDCT) $,                 04950___
                          NDCHAR = FALSE $,                                 04960___
                          END $,                                            04970___
                XXWORD = XXWORD $,                                          04980___
                END $,                                                      04990___
                                                                            05000___
       COMMENT ... PROCEDURE TO MOVE AND UN-TAB 'EDLIN' $,                  05010___
                                                                            05020___
           DEFINE PROCEDURE MOVETO(LIN) WHERE INTEGER ARRAY LIN TOBE        05030___
                BEGIN                                                       05040___
                IF EDLIN(EDCT) NEQ BLANK                                    05050___
                THEN EDCT = EDCT-1 $,                                       05060___
                I = 0 $,                                                    05070___
                FOR I = I+1 WHILE I LEQ 84 AND EDCT LES 84                  05080___
                DO LIN(I) = EDLIN(EDCT = EDCT+1) $,                         05090___
                IF UNTAB(LIN) AND TRNCSW                                    05100___
                THEN BEGIN                                                  05110___
                     BLACK() $,                                             05120___
                     WRFLEX(.BCI. 'TRUNCATED:' ,0) $,                       05130___
                     PRCARD(LIN,72) $,                                      05140___
                     RED() $,                                               05150___
                     END $,                                                 05160___
                END $,                                                      05170___
                                                                            05180___
           END FINI                                                         05190___
1PAGE 1      COMPILATION LISTING    
      
      
      
 00030                                 PSE   16 
 00031                                 TRA   (L000    
         (L001    
 00032   RQUEST                        TRA   APPEND   
 00033                                 TRA   BLKOUT   
 00034                                 TRA   BOTTOM   
 00035                                 TRA   BRIEF    
 00036                                 TRA   CHANGE   
 00037                                 TRA   CLIP     
 00040                                 TRA   COLON    
 00041                                 TRA   DELLIN   
 00042                                 TRA   FILE     
 00043                                 TRA   FIND     
 00044                                 TRA   INSERT   
 00045                                 TRA   KILL     
 00046                                 TRA   LOCATE   
 00047                                 TRA   MERGE    
 00050                                 TRA   NEXLIN   
 00051                                 TRA   OVRLAY   
 00052                                 TRA   XPRINT   
 00053                                 TRA   QUIT     
 00054                                 TRA   RETYPE   
 00055                                 TRA   SERIAL   
 00056                                 TRA   TABSET   
 00057                                 TRA   TOP      
 00060                                 TRA   VERIFY   
 00061                                 TRA   WRITE    
 00062   (L000                         TSX   WHOAMI,4 
 00063                                 TXH   WHOAM,,2 
 00064                                 LAC   1,1      
 00065                                 CLA   WHOAM,1  
 00066                                 STO   TCLASS   
 00067                                 TSX   RED,4    
 00070                                 TSX   DELETE,4 
 00071                                 TXH   TNAME    
 00072                                 TXH   TCLASS   
 00073                                 TXH   0  
 00074                                 TXH   ERROR    
 00075                                 TSX   DELETE,4 
 00076                                 TXH   ENAME    
 00077                                 TXH   TCLASS   
 00100                                 TXH   0  
 00101                                 TXH   ERROR    
 00102                                 CLA   )S001    
 00103                                 STO   EDWD     
 00104                                 CLA   )S002    
 00105                                 STO   INPWD    
 00106                                 TSX   COMARG,4 
 00107                                 TXH   1  
 00110                                 STO   OLDNAM   
 00111                                 TSX   COMARG,4 
1PAGE 2      COMPILATION LISTING    
      
      
      
 00112                                 TXH   2  
 00113                                 STO   CLASS    
 00114                                 TSX   COMARG,4 
 00115                                 TXH   3  
 00116                                 STO   NEWNAM   
 00117                                 CLA   OLDNAM   
 00120                                 SUB   FENCE    
 00121                                 TNZ   (L002    
 00122                                 TSX   WRFLEX,4 
 00123                                 TXH   )S003    
 00124                                 TXH   0  
 00125                                 TRA   ERROR    
 00126                                 TRA   (L003    
 00127   (L002                         CLA   CLASS    
 00130                                 SUB   FENCE    
 00131                                 TNZ   (L004    
 00132                                 CLA   OLDNAM   
 00133                                 STO   CLASS    
 00134                                 CLA   FENCE    
 00135                                 STO   OLDNAM   
 00136                                 STO   NEWNAM   
         (L004    
 00137   (L003                         CLA   CLASS    
 00140                                 SUB   )S004    
 00141                                 TZE   (L005    
 00142                                 CLA   CLASS    
 00143                                 SUB   )S005    
 00144                                 TNZ   (L006    
 00145   (L005                         TSX   SETTAB,4 
 00146                                 TXH   FAP      
 00147                                 CAL   FALSE    
 00150                                 SLW   TRNCSW   
 00151                                 TRA   (L007    
 00152   (L006                         CLA   CLASS    
 00153                                 SUB   )S006    
 00154                                 TZE   (L010    
 00155                                 CLA   CLASS    
 00156                                 SUB   )S007    
 00157                                 TNZ   (L011    
 00160   (L010                         TSX   SETTAB,4 
 00161                                 TXH   MADTRN   
 00162                                 TRA   (L012    
 00163   (L011                         CLA   CLASS    
 00164                                 SUB   )S010    
 00165                                 TNZ   (L013    
 00166                                 TSX   SETTAB,4 
 00167                                 TXH   MAD      
 00170                                 TRA   (L014    
 00171   (L013                         CLA   CLASS    
 00172                                 SUB   )S011    
 00173                                 TNZ   (L015    
1PAGE 3      COMPILATION LISTING    
      
      
      
 00174                                 TSX   SETTAB,4 
 00175                                 TXH   ALGOL    
 00176                                 TRA   (L016    
 00177   (L015                         CLA   CLASS    
 00200                                 SUB   )S012    
 00201                                 TNZ   (L017    
 00202                                 TSX   SETTAB,4 
 00203                                 TXH   GPSS     
 00204                                 TRA   (L020    
 00205   (L017                         CLA   CLASS    
 00206                                 SUB   )S013    
 00207                                 TZE   (L021    
 00210                                 TSX   WRFLEX,4 
 00211                                 TXH   )S014    
 00212                                 TXH   0  
         (L021    
         (L020    
         (L016    
         (L014    
         (L012    
 00213   (L007                         TSX   DASIGN,4 
 00214                                 TXH   ENAME    
 00215                                 TXH   TCLASS   
 00216                                 TXH   ERROR    
 00217                                 CLA   OLDNAM   
 00220                                 SUB   FENCE    
 00221                                 TNZ   (L022    
 00222                                 TRA   PINPUT   
 00223   (L022                         TSX   DSEEK,4  
 00224                                 TXH   OLDNAM   
 00225                                 TXH   CLASS    
 00226                                 TXH   PINPUT   
 00227                                 CAL   TRUE     
 00230                                 SLW   OK       
 00231                                 CLA   NEWNAM   
 00232                                 SUB   FENCE    
 00233                                 TZE   (L023    
 00234                                 CLA   NEWNAM   
 00235                                 STO   OLDNAM   
         (L023    
 00236   PEDIT                         TSX   RED,4    
 00237                                 TSX   WRFLEX,4 
 00240                                 TXH   EDWD     
 00241                                 TXH   0  
 00242   NEXT                          TSX   RDTYPE,4 
 00243                                 TXH   EDLIN    
 00244                                 TXH   COUNT    
 00245                                 CLA   COUNT    
 00246                                 TNZ   (L024    
 00247                                 TRA   PINPUT   
 00250   (L024                         CLA   0  
1PAGE 4      COMPILATION LISTING    
      
      
      
 00251                                 STO   EDCT     
 00252                                 TSX   GET,4    
 00253                                 STO   XXXCWD   
 00254   (L025                         CLA   1  
 00255                                 STO   I  
 00256   (L026                         LXA   CCT,4    
 00257                                 SXD   (L027,4  
 00260                                 LXA   I,4      
 00261   (L027                         TXH   (L030,4  
 00262                                 LAC   I,1      
 00263                                 CLA   XXXCWD   
 00264                                 SUB   XXWORD,1 
 00265                                 TZE   (L031    
 00266                                 CLA   XXXCWD   
 00267                                 SUB   XXXCWD,1 
 00270                                 TNZ   (L032    
 00271   (L031                         LAC   I,1      
 00272                                 TRA   RQUEST,1 
 00273   (L032                         LXA   I,4      
 00274                                 TXI   *+1,4,1  
 00275                                 SXA   I,4      
 00276                                 TRA   (L026    
 00277   (L030                         TSX   WRFLEX,4 
 00300                                 TXH   )S015    
 00301                                 TXH   0  
 00302   PCARD                         TSX   BLACK,4  
 00303                                 TSX   PRCARD,4 
 00304                                 TXH   EDLIN    
 00305                                 TXH   COUNT    
 00306                                 TSX   RED,4    
 00307                                 TRA   NEXT     
 00310   PINPUT                        TSX   WRFLEX,4 
 00311                                 TXH   INPWD    
 00312                                 TXH   0  
 00313                                 TSX   BLACK,4  
 00314   INPUT                         TSX   RDTYPE,4 
 00315                                 TXH   EDLIN    
 00316                                 TXH   COUNT    
 00317                                 CLA   COUNT    
 00320                                 TNZ   (L033    
 00321                                 TRA   PEDIT    
 00322   (L033                         TSX   UNTAB,4  
 00323                                 TXH   EDLIN    
 00324                                 TZE   (L034    
 00325                                 CAL   TRNCSW   
 00326                                 TZE   (L034    
 00327                                 TSX   RED,4    
 00330                                 TSX   WRFLEX,4 
 00331                                 TXH   )S016    
 00332                                 TXH   0  
 00333                                 TSX   PRCARD,4 
1PAGE 5      COMPILATION LISTING    
      
      
      
 00334                                 TXH   EDLIN    
 00335                                 TXH   110      
 00336                                 TSX   BLACK,4  
 00337   (L034                         TSX   WRLINE,4 
 00340                                 CLA   0  
 00341                                 STO   LINENO   
 00342   (L035                         CLA   1  
 00343                                 STO   I  
 00344                                 LXA   I,4      
 00345   (L036                         TXH   (L037,4,110    
 00346                                 LAC   I,1      
 00347                                 CLA   EDLIN,1  
 00350                                 STO   LINE,1   
 00351                                 LXA   I,4      
 00352                                 TXI   *+1,4,1  
 00353                                 SXA   I,4      
 00354                                 TRA   (L036    
 00355   (L037                         CLA   EDLIN    
 00356                                 STO   LENGTH   
 00357                                 TRA   INPUT    
 00360   OVRLAY                        TSX   MOVETO,4 
 00361                                 TXH   TLIN     
 00362   (L040                         CLA   1  
 00363                                 STO   I  
 00364   (L041                         LXA   TLIN,4   
 00365                                 SXD   (L042,4  
 00366                                 LXA   I,4      
 00367   (L042                         TXH   (L043,4  
 00370                                 LAC   I,1      
 00371                                 CLA   TLIN,1   
 00372                                 SUB   BLANK    
 00373                                 TZE   (L044    
 00374                                 CLA   TLIN,1   
 00375                                 STO   LINE,1   
 00376   (L044                         LXA   I,4      
 00377                                 TXI   *+1,4,1  
 00400                                 SXA   I,4      
 00401                                 TRA   (L041    
 00402   (L043                         CLA   TLIN     
 00403                                 SUB   LENGTH   
 00404                                 TMI   (L045    
 00405                                 TZE   (L045    
 00406                                 CLA   TLIN     
 00407                                 STO   LENGTH   
 00410   (L045                         TSX   VERPRN,4 
 00411                                 TRA   NEXT     
 00412   BLKOUT                        TSX   MOVETO,4 
 00413                                 TXH   TLIN     
 00414   (L046                         CLA   1  
 00415                                 STO   I  
 00416   (L047                         LXA   TLIN,4   
1PAGE 6      COMPILATION LISTING    
      
      
      
 00417                                 SXD   (L050,4  
 00420                                 LXA   I,4      
 00421   (L050                         TXH   (L051,4  
 00422                                 LAC   I,1      
 00423                                 CLA   TLIN,1   
 00424                                 SUB   BLANK    
 00425                                 TZE   (L052    
 00426                                 CLA   BLANK    
 00427                                 STO   LINE,1   
 00430   (L052                         LXA   I,4      
 00431                                 TXI   *+1,4,1  
 00432                                 SXA   I,4      
 00433                                 TRA   (L047    
 00434   (L051                         TSX   VERPRN,4 
 00435                                 TRA   NEXT     
 00436   DELLIN                        TSX   NUM,4    
 00437                                 STO   N  
 00440                                 TNZ   (L053    
 00441                                 CLA   1  
 00442                                 STO   N  
         (L053    
 00443   (L054                         CLA   2  
 00444                                 STO   I  
 00445   (L055                         LXA   N,4      
 00446                                 SXD   (L056,4  
 00447                                 LXA   I,4      
 00450   (L056                         TXH   (L057,4  
 00451                                 CAL   OK       
 00452                                 TNZ   (L060    
 00453                                 TRA   EOF      
 00454   (L060                         TSX   RDCARD,4 
 00455                                 TXH   LINE     
 00456                                 TXH   LENGTH   
 00457                                 TXH   LINENO   
 00460                                 TXH   EOF      
 00461                                 LXA   I,4      
 00462                                 TXI   *+1,4,1  
 00463                                 SXA   I,4      
 00464                                 TRA   (L055    
 00465   (L057                         CLA   0  
 00466                                 STO   LINENO   
 00467                                 STO   LENGTH   
 00470                                 TRA   NEXT     
 00471   INSERT                        CLA   EDCT     
 00472                                 SUB   COUNT    
 00473                                 TZE   *+2      
 00474                                 TMI   (L061    
 00475                                 TRA   PINPUT   
 00476   (L061                         TSX   WRLINE,4 
 00477   RETYPE                        TSX   MOVETO,4 
 00500                                 TXH   LINE     
1PAGE 7      COMPILATION LISTING    
      
      
      
 00501                                 CLA   LINE     
 00502                                 STO   LENGTH   
 00503                                 TRA   NEXT     
 00504   NEXLIN                        TSX   NUM,4    
 00505                                 STO   N  
 00506                                 TNZ   (L062    
 00507                                 CLA   1  
 00510                                 STO   N  
         (L062    
 00511   (L063                         CLA   1  
 00512                                 STO   I  
 00513   (L064                         LXA   N,4      
 00514                                 SXD   (L065,4  
 00515                                 LXA   I,4      
 00516   (L065                         TXH   (L066,4  
 00517                                 TSX   WRLINE,4 
 00520                                 CAL   OK       
 00521                                 TNZ   (L067    
 00522                                 TSX   CLOSE,4  
 00523   (L067                         TSX   RDCARD,4 
 00524                                 TXH   LINE     
 00525                                 TXH   LENGTH   
 00526                                 TXH   LINENO   
 00527                                 TXH   EOF      
 00530                                 LXA   I,4      
 00531                                 TXI   *+1,4,1  
 00532                                 SXA   I,4      
 00533                                 TRA   (L064    
 00534   (L066                         TSX   VERPRN,4 
 00535                                 TRA   NEXT     
 00536   FIND                          TSX   MOVETO,4 
 00537                                 TXH   TLIN     
 00540   FIND2                         TSX   WRLINE,4 
 00541                                 CAL   OK       
 00542                                 TNZ   (L070    
 00543                                 TSX   CLOSE,4  
 00544   (L070                         TSX   RDCARD,4 
 00545                                 TXH   LINE     
 00546                                 TXH   LENGTH   
 00547                                 TXH   LINENO   
 00550                                 TXH   EOF      
 00551   (L071                         CLA   1  
 00552                                 STO   I  
 00553   (L072                         LXA   TLIN,4   
 00554                                 SXD   (L073,4  
 00555                                 LXA   I,4      
 00556   (L073                         TXH   (L074,4  
 00557                                 LAC   I,1      
 00560                                 CLA   TLIN,1   
 00561                                 SUB   BLANK    
 00562                                 TZE   (L075    
1PAGE 8      COMPILATION LISTING    
      
      
      
 00563                                 CLA   TLIN,1   
 00564                                 SUB   LINE,1   
 00565                                 TZE   (L075    
 00566                                 TRA   FIND2    
 00567   (L075                         LXA   I,4      
 00570                                 TXI   *+1,4,1  
 00571                                 SXA   I,4      
 00572                                 TRA   (L072    
 00573   (L074                         TSX   VERPRN,4 
 00574                                 TRA   NEXT     
 00575   LOCATE                        TSX   WRLINE,4 
 00576                                 CAL   OK       
 00577                                 TNZ   (L076    
 00600                                 TSX   CLOSE,4  
 00601   (L076                         TSX   RDCARD,4 
 00602                                 TXH   LINE     
 00603                                 TXH   LENGTH   
 00604                                 TXH   LINENO   
 00605                                 TXH   EOF      
 00606   (L077                         CLA   1  
 00607                                 STO   I  
 00610                                 LXA   I,4      
 00611   (L100                         TXH   (L101,4,124    
 00612                                 CLA   I  
 00613                                 STO   J  
 00614   (L102                         CLA   EDCT     
 00615                                 ADD   1  
 00616                                 STO   K  
 00617   (L103                         LXA   COUNT,4  
 00620                                 SXD   (L104,4  
 00621                                 LXA   K,4      
 00622   (L104                         TXH   (L105,4  
 00623                                 CLA   J  
 00624                                 SUB   124      
 00625                                 TMI   (L106    
 00626                                 TZE   (L106    
 00627                                 TRA   LOCATE   
 00630   (L106                         LAC   J,1      
 00631                                 LAC   K,2      
 00632                                 CLA   EDLIN,2  
 00633                                 SUB   LINE,1   
 00634                                 TZE   (L107    
 00635                                 TRA   LOC2     
 00636   (L107                         CLA   J  
 00637                                 ADD   1  
 00640                                 STO   J  
 00641                                 LXA   K,4      
 00642                                 TXI   *+1,4,1  
 00643                                 SXA   K,4      
 00644                                 TRA   (L103    
 00645   (L105                         TSX   VERPRN,4 
1PAGE 9      COMPILATION LISTING    
      
      
      
 00646                                 TRA   NEXT     
 00647   LOC2                          LXA   I,4      
 00650                                 TXI   *+1,4,1  
 00651                                 SXA   I,4      
 00652                                 TRA   (L100    
 00653   (L101                         TRA   LOCATE   
 00654   XPRINT                        TSX   NUM,4    
 00655                                 STO   N  
 00656                                 TSX   BLACK,4  
 00657                                 CLA   110      
 00660                                 STO   PRC      
 00661                                 TSX   GET,4    
 00662                                 STO   OP       
 00663                                 SUB   )S017    
 00664                                 TZE   (L110    
 00665                                 CLA   OP       
 00666                                 SUB   )S020    
 00667                                 TNZ   (L111    
 00670   (L110                         CLA   120      
 00671                                 STO   PRC      
         (L111    
 00672   PRINT1                        CLA   LENGTH   
 00673                                 STO   PRCT     
 00674                                 CLA   PRCT     
 00675                                 SUB   PRC      
 00676                                 TMI   (L112    
 00677                                 TZE   (L112    
 00700                                 CLA   PRC      
 00701                                 STO   PRCT     
 00702   (L112                         TSX   PRCARD,4 
 00703                                 TXH   LINE     
 00704                                 TXH   PRCT     
 00705                                 CLA   N  
 00706                                 SUB   1  
 00707                                 STO   N  
 00710                                 TZE   *+2      
 00711                                 TPL   (L113    
 00712                                 TRA   EPRINT   
 00713   (L113                         TSX   WRLINE,4 
 00714                                 CAL   OK       
 00715                                 TNZ   (L114    
 00716                                 TRA   EOF      
 00717   (L114                         TSX   RDCARD,4 
 00720                                 TXH   LINE     
 00721                                 TXH   LENGTH   
 00722                                 TXH   LINENO   
 00723                                 TXH   EOF      
 00724                                 TRA   PRINT1   
 00725   EPRINT                        TSX   RED,4    
 00726                                 TRA   NEXT     
 00727   TOP                           TSX   WRLINE,4 
1PAGE 10     COMPILATION LISTING    
      
      
      
 00730                                 CAL   OK       
 00731                                 TZE   (L115    
 00732                                 TSX   RDCARD,4 
 00733                                 TXH   LINE     
 00734                                 TXH   LENGTH   
 00735                                 TXH   LINENO   
 00736                                 TXH   ENDTOP   
 00737                                 TRA   TOP      
         (L115    
 00740   ENDTOP                        TSX   CLOSE,4  
 00741                                 TRA   NEXT     
 00742   BOTTOM                        TSX   WRLINE,4 
 00743                                 CAL   OK       
 00744                                 TZE   (L116    
 00745                                 TSX   RDCARD,4 
 00746                                 TXH   LINE     
 00747                                 TXH   LENGTH   
 00750                                 TXH   LINENO   
 00751                                 TXH   ENDBOT   
 00752                                 TRA   BOTTOM   
         (L116    
 00753   ENDBOT                        CLA   0  
 00754                                 STO   LENGTH   
 00755                                 CAL   FALSE    
 00756                                 SLW   OK       
 00757                                 TRA   PINPUT   
 00760   CHANGE                        CLA   EDCT     
 00761                                 ADD   1  
 00762                                 STO   EDCT     
 00763                                 STO   STR1     
 00764                                 PAC   0,4      
 00765                                 CLA   EDLIN,4  
 00766                                 STO   Q  
 00767                                 CLA   STR1     
 00770                                 ADD   1  
 00771                                 STO   STR1P1   
 00772   (L117                         CLA   EDCT     
 00773                                 ADD   1  
 00774                                 STO   EDCT     
 00775   (L120                         LAC   EDCT,1   
 00776                                 CLA   EDLIN,1  
 00777                                 SUB   Q  
 01000                                 TZE   (L121    
 01001                                 CLA   EDCT     
 01002                                 SUB   COUNT    
 01003                                 TZE   *+2      
 01004                                 TPL   (L121    
 01005                                 LXA   EDCT,4   
 01006                                 TXI   *+1,4,1  
 01007                                 SXA   EDCT,4   
 01010                                 TRA   (L120    
1PAGE 11     COMPILATION LISTING    
      
      
      
 01011   (L121                         CLA   EDCT     
 01012                                 STO   STR2     
 01013                                 ADD   1  
 01014                                 STO   STR2P1   
 01015                                 SUB   2  
 01016                                 STO   STR2M1   
 01017                                 SUB   STR1     
 01020                                 STO   STRDIF   
 01021   (L122                         CLA   EDCT     
 01022                                 ADD   1  
 01023                                 STO   EDCT     
 01024   (L123                         LAC   EDCT,1   
 01025                                 CLA   EDLIN,1  
 01026                                 SUB   Q  
 01027                                 TZE   (L124    
 01030                                 CLA   EDCT     
 01031                                 SUB   COUNT    
 01032                                 TZE   *+2      
 01033                                 TPL   (L124    
 01034                                 LXA   EDCT,4   
 01035                                 TXI   *+1,4,1  
 01036                                 SXA   EDCT,4   
 01037                                 TRA   (L123    
 01040   (L124                         CLA   EDCT     
 01041                                 STO   ESTR     
 01042                                 ADD   1  
 01043                                 STO   EDCT     
 01044                                 TSX   NUM,4    
 01045                                 STO   N  
 01046                                 TNZ   (L125    
 01047                                 CLA   1  
 01050                                 STO   N  
 01051   (L125                         TSX   GET,4    
 01052                                 STO   OP       
 01053                                 SUB   )S021    
 01054                                 TZE   (L126    
 01055                                 CLA   OP       
 01056                                 SUB   )S022    
 01057                                 TNZ   (L127    
 01060   (L126                         CAL   TRUE     
 01061                                 TRA   *+2      
 01062   (L127                         CAL   FALSE    
 01063                                 SLW   GLOBAL   
 01064   REPEAT                        CLA   LENGTH   
 01065                                 TZE   *+2      
 01066                                 TPL   (L130    
 01067                                 TRA   ECHNG2   
 01070   (L130                         CAL   FALSE    
 01071                                 SLW   MODIFY   
 01072                                 CLA   N  
 01073                                 SUB   1  
1PAGE 12     COMPILATION LISTING    
      
      
      
 01074                                 TZE   *+2      
 01075                                 TPL   (L131    
 01076                                 CAL   TRUE     
 01077                                 SLW   MODIFY   
         (L131    
 01100   (L132                         CLA   1  
 01101                                 STO   I  
 01102                                 LXA   I,4      
 01103   (L133                         TXH   (L134,4,110    
 01104                                 LAC   I,1      
 01105                                 CLA   LINE,1   
 01106                                 STO   TLIN,1   
 01107                                 LXA   I,4      
 01110                                 TXI   *+1,4,1  
 01111                                 SXA   I,4      
 01112                                 TRA   (L133    
 01113   (L134                         CLA   1  
 01114                                 STO   TLP      
 01115                                 STO   LENGTH   
         FNDSTR   
 01116   (L135                         CLA   TLP      
 01117                                 STO   TLP      
 01120                                 LXA   TLP,4    
 01121   (L136                         TXH   (L137,4,110    
 01122                                 CLA   TLP      
 01123                                 STO   J  
 01124   (L140                         CLA   STR1P1   
 01125                                 STO   I  
 01126   (L141                         LXA   STR2M1,4 
 01127                                 SXD   (L142,4  
 01130                                 LXA   I,4      
 01131   (L142                         TXH   (L143,4  
 01132                                 LAC   J,1      
 01133                                 LAC   I,2      
 01134                                 CLA   EDLIN,2  
 01135                                 SUB   TLIN,1   
 01136                                 TNZ   (L144    
 01137                                 CLA   J  
 01140                                 SUB   110      
 01141                                 TMI   (L145    
 01142                                 TZE   (L145    
 01143   (L144                         TRA   FNDS2    
 01144   (L145                         CLA   J  
 01145                                 ADD   1  
 01146                                 STO   J  
 01147                                 LXA   I,4      
 01150                                 TXI   *+1,4,1  
 01151                                 SXA   I,4      
 01152                                 TRA   (L141    
 01153   (L143                         TRA   FOUND    
 01154   FNDS2                         LAC   LENGTH,1 
1PAGE 13     COMPILATION LISTING    
      
      
      
 01155                                 LAC   TLP,2    
 01156                                 CLA   TLIN,2   
 01157                                 STO   LINE,1   
 01160                                 CLA   LENGTH   
 01161                                 SUB   110      
 01162                                 TMI   (L146    
 01163                                 TZE   (L146    
 01164                                 TRA   ECHNG    
 01165   (L146                         CLA   LENGTH   
 01166                                 ADD   1  
 01167                                 STO   LENGTH   
 01170                                 LXA   TLP,4    
 01171                                 TXI   *+1,4,1  
 01172                                 SXA   TLP,4    
 01173                                 TRA   (L136    
 01174   (L137                         LAC   LENGTH,1 
 01175                                 CLA   BLANK    
 01176                                 STO   LINE,1   
 01177                                 TRA   ECHNG    
 01200   FOUND                         CLA   TLP      
 01201                                 ADD   STRDIF   
 01202                                 STO   TLP      
 01203                                 CAL   TRUE     
 01204                                 SLW   MODIFY   
 01205   (L147                         CLA   STR2P1   
 01206                                 STO   I  
 01207   (L150                         CLA   I  
 01210                                 SUB   ESTR     
 01211                                 TZE   (L151    
 01212                                 TPL   (L151    
 01213                                 LAC   LENGTH,1 
 01214                                 LAC   I,2      
 01215                                 CLA   EDLIN,2  
 01216                                 STO   LINE,1   
 01217                                 CLA   LENGTH   
 01220                                 SUB   110      
 01221                                 TZE   *+2      
 01222                                 TMI   (L152    
 01223                                 TRA   ECHNG    
 01224   (L152                         CLA   LENGTH   
 01225                                 ADD   1  
 01226                                 STO   LENGTH   
 01227                                 LXA   I,4      
 01230                                 TXI   *+1,4,1  
 01231                                 SXA   I,4      
 01232                                 TRA   (L150    
 01233   (L151                         CAL   GLOBAL   
 01234                                 TZE   (L153    
 01235                                 TRA   FNDSTR   
         (L153    
 01236   (L154                         CLA   TLP      
1PAGE 14     COMPILATION LISTING    
      
      
      
 01237                                 STO   TLP      
 01240                                 LXA   TLP,4    
 01241   (L155                         TXH   (L156,4,110    
 01242                                 LAC   LENGTH,1 
 01243                                 LAC   TLP,2    
 01244                                 CLA   TLIN,2   
 01245                                 STO   LINE,1   
 01246                                 CLA   LENGTH   
 01247                                 SUB   110      
 01250                                 TZE   *+2      
 01251                                 TMI   (L157    
 01252                                 TRA   ECHNG    
 01253   (L157                         CLA   LENGTH   
 01254                                 ADD   1  
 01255                                 STO   LENGTH   
 01256                                 LXA   TLP,4    
 01257                                 TXI   *+1,4,1  
 01260                                 SXA   TLP,4    
 01261                                 TRA   (L155    
 01262   (L156                         LAC   LENGTH,1 
 01263                                 CLA   BLANK    
 01264                                 STO   LINE,1   
         ECHNG    
 01265   (L160                         CLA   LENGTH   
 01266                                 ADD   1  
 01267                                 STO   LENGTH   
 01270                                 LXA   LENGTH,4 
 01271   (L161                         TXH   (L162,4,124    
 01272                                 LAC   LENGTH,1 
 01273                                 CLA   BLANK    
 01274                                 STO   LINE,1   
 01275                                 LXA   LENGTH,4 
 01276                                 TXI   *+1,4,1  
 01277                                 SXA   LENGTH,4 
 01300                                 TRA   (L161    
 01301   (L162                         CLA   124      
 01302                                 STO   LENGTH   
 01303                                 CAL   MODIFY   
 01304                                 TZE   (L163    
 01305                                 TSX   VERPRN,4 
         (L163    
 01306   ECHNG2                        CLA   N  
 01307                                 SUB   1  
 01310                                 STO   N  
 01311                                 TZE   *+2      
 01312                                 TPL   (L164    
 01313                                 TRA   NEXT     
 01314   (L164                         TSX   WRLINE,4 
 01315                                 CAL   OK       
 01316                                 TNZ   (L165    
 01317                                 TRA   EOF      
1PAGE 15     COMPILATION LISTING    
      
      
      
 01320   (L165                         TSX   RDCARD,4 
 01321                                 TXH   LINE     
 01322                                 TXH   LENGTH   
 01323                                 TXH   LINENO   
 01324                                 TXH   EOF      
 01325                                 TRA   REPEAT   
 01326   SERIAL                        TSX   NUM,4    
 01327                                 STO   LINCR    
 01330                                 TNZ   (L166    
 01331                                 CLA   12       
 01332                                 STO   LINCR    
 01333   (L166                         TRA   NEXT     
 01334   TABSET                        CLA   0  
 01335                                 STO   TLIN     
 01336   (L167                         CLA   1  
 01337                                 STO   I  
 01340                                 LXA   I,4      
 01341   (L170                         TXH   (L171,4,36     
 01342                                 TSX   NUM,4    
 01343                                 STO   TLINI    
 01344                                 LAC   I,1      
 01345                                 STO   TLIN,1   
 01346                                 TNZ   (L172    
 01347                                 TSX   SETTAB,4 
 01350                                 TXH   TLIN     
 01351                                 TRA   NEXT     
 01352   (L172                         CLA   I  
 01353                                 SUB   1  
 01354                                 TMI   (L173    
 01355                                 TZE   (L173    
 01356                                 CLA   I  
 01357                                 SUB   1  
 01360                                 PAC   0,4      
 01361                                 CLA   TLINI    
 01362                                 SUB   TLIN,4   
 01363                                 TMI   (L174    
 01364                                 TZE   (L174    
 01365   (L173                         CLA   TLINI    
 01366                                 SUB   124      
 01367                                 TMI   (L175    
 01370                                 TZE   (L175    
         (L174    
 01371   TABERR                        TSX   WRFLEX,4 
 01372                                 TXH   )S023    
 01373                                 TXH   0  
 01374                                 TRA   PCARD    
 01375   (L175                         CLA   I  
 01376                                 STO   TLIN     
 01377                                 LXA   I,4      
 01400                                 TXI   *+1,4,1  
 01401                                 SXA   I,4      
1PAGE 16     COMPILATION LISTING    
      
      
      
 01402                                 TRA   (L170    
 01403   (L171                         TRA   TABERR   
 01404   VERIFY                        CAL   TRUE     
 01405                                 SLW   VERMOD   
 01406                                 CLA   )S001    
 01407                                 STO   EDWD     
 01410                                 CLA   )S002    
 01411                                 STO   INPWD    
 01412                                 TRA   NEXT     
 01413   BRIEF                         CAL   FALSE    
 01414                                 SLW   VERMOD   
 01415                                 CLA   )S024    
 01416                                 STO   EDWD     
 01417                                 CLA   )S025    
 01420                                 STO   INPWD    
 01421                                 TRA   NEXT     
 01422   COLON                         TSX   GET,4    
 01423                                 STO   OP       
 01424                                 SUB   )S026    
 01425                                 TZE   (L176    
 01426                                 CLA   OP       
 01427                                 SUB   )S027    
 01430                                 TNZ   (L177    
 01431   (L176                         TSX   SETCOL,4 
 01432                                 TXH   0  
 01433                                 TRA   (L200    
 01434   (L177                         CLA   OP       
 01435                                 SUB   )S030    
 01436                                 TZE   (L201    
 01437                                 CLA   OP       
 01440                                 SUB   )S031    
 01441                                 TNZ   (L202    
 01442   (L201                         TSX   SETCOL,4 
 01443                                 TXH   1  
 01444                                 TRA   (L203    
 01445   (L202                         TSX   WRFLEX,4 
 01446                                 TXH   )S032    
 01447                                 TXH   0  
 01450                                 TRA   PCARD    
         (L203    
 01451   (L200                         TRA   NEXT     
 01452   CLIP                          TSX   GET,4    
 01453                                 STO   OP       
 01454                                 SUB   )S033    
 01455                                 TNZ   (L204    
 01456                                 CAL   TRUE     
 01457                                 SLW   TRNCSW   
 01460                                 TRA   (L205    
 01461   (L204                         CLA   OP       
 01462                                 SUB   )S034    
 01463                                 TNZ   (L206    
1PAGE 17     COMPILATION LISTING    
      
      
      
 01464                                 CAL   FALSE    
 01465                                 SLW   TRNCSW   
 01466                                 TRA   (L207    
 01467   (L206                         TSX   WRFLEX,4 
 01470                                 TXH   )S035    
 01471                                 TXH   0  
 01472                                 TRA   PCARD    
         (L207    
 01473   (L205                         TRA   NEXT     
         KILL     
         MERGE    
         APPEND   
         WRITE    
 01474   NULL                          TSX   WRFLEX,4 
 01475                                 TXH   )S036    
 01476                                 TXH   0  
 01477                                 TRA   PCARD    
 01500   FILE                          TSX   GET,4    
 01501                                 STO   PRINAM   
 01502                                 SUB   BLANKS   
 01503                                 TNZ   (L210    
 01504                                 CLA   OLDNAM   
 01505                                 STO   PRINAM   
 01506                                 SUB   FENCE    
 01507                                 TNZ   (L211    
 01510                                 TSX   SETBCD,4 
 01511                                 TSX   WRFLEX,4 
 01512                                 TXH   )S037    
 01513                                 TXH   0  
 01514                                 TRA   NEXT     
         (L211    
         (L210    
 01515   FILE1                         TSX   WRLINE,4 
 01516                                 CAL   OK       
 01517                                 TZE   (L212    
 01520                                 TSX   RDCARD,4 
 01521                                 TXH   LINE     
 01522                                 TXH   LENGTH   
 01523                                 TXH   LINENO   
 01524                                 TXH   XEND     
 01525                                 TRA   FILE1    
         (L212    
 01526   XEND                          TSX   DFILE,4  
 01527                                 TXH   NOFILE   
 01530                                 TSX   RENAME,4 
 01531                                 TXH   ENAME    
 01532                                 TXH   TCLASS   
 01533                                 TXH   PRINAM   
 01534                                 TXH   CLASS    
 01535                                 TXH   NODEL    
 01536   L3                            CLS   0  
1PAGE 18     COMPILATION LISTING    
      
      
      
 01537                                 STO   (C002    
 01540                                 CLS   0  
 01541                                 STO   (C003    
 01542                                 TSX   CHFILE,4 
 01543                                 TXH   TNAME    
 01544                                 TXH   TCLASS   
 01545                                 TXH   1  
 01546                                 TXH   (C002    
 01547                                 TXH   (C003    
 01550                                 TXH   L4 
 01551                                 TSX   DELETE,4 
 01552                                 TXH   TNAME    
 01553                                 TXH   TCLASS   
 01554                                 TXH   0  
 01555                                 TXH   L4 
 01556   L4                            TSX   UPDATE,4 
 01557   ERROR                         TSX   BLACK,4  
 01560                                 TSX   WRFLEX,4 
 01561                                 TXH   STAR     
 01562                                 TXH   1  
 01563                                 TSX   CHNCOM,4 
 01564                                 TXH   0  
 01565   NODEL                         TSX   FLIP,4   
 01566                                 TRA   PEDIT    
 01567   QUIT                          TSX   RESET,4  
 01570                                 CLS   0  
 01571                                 STO   (C002    
 01572                                 CLS   0  
 01573                                 STO   (C003    
 01574                                 TSX   CHFILE,4 
 01575                                 TXH   ENAME    
 01576                                 TXH   TCLASS   
 01577                                 TXH   1  
 01600                                 TXH   (C002    
 01601                                 TXH   (C003    
 01602                                 TXH   L3 
 01603                                 TSX   DELETE,4 
 01604                                 TXH   ENAME    
 01605                                 TXH   TCLASS   
 01606                                 TXH   0  
 01607                                 TXH   L3 
 01610                                 TRA   L3       
 01611   EOF                           TSX   RED,4    
 01612                                 TSX   WRFLEX,4 
 01613                                 TXH   )S040    
 01614                                 TXH   0  
 01615                                 CLA   0  
 01616                                 STO   LENGTH   
 01617                                 CAL   FALSE    
 01620                                 SLW   OK       
 01621                                 TRA   PCARD    
1PAGE 19     COMPILATION LISTING    
      
      
      
 01622   NOFILE                        TSX   WRFLEX,4 
 01623                                 TXH   )S041    
 01624                                 TXH   0  
 01625                                 CAL   FALSE    
 01626                                 SLW   OK       
 01627                                 CLA   0  
 01630                                 STO   HILINE   
 01631                                 STO   LINENO   
 01632                                 STO   LENGTH   
 01633                                 TSX   DASIGN,4 
 01634                                 TXH   ENAME    
 01635                                 TXH   TCLASS   
 01636                                 TXH   ERROR    
 01637                                 TRA   PINPUT   
 01640                                 TRA   (L213    
 01641   CLOSE                         TRA   (L214    
 01642   (L215                         TSX   DFILE,4  
 01643                                 TXH   NOFILE   
 01644                                 TSX   FLIP,4   
 01645   RETURN                        AXT   **,4     
 01646                                 TRA   1,4      
 01647   (L214                         SXA   RETURN,4 
 01650                                 TRA   (L215    
 01651   (L213                         TRA   (L216    
 01652   FLIP                          TRA   (L217    
 01653   (L220                         CLS   0  
 01654                                 STO   (C011    
 01655                                 CLS   0  
 01656                                 STO   (C012    
 01657                                 TSX   CHFILE,4 
 01660                                 TXH   TNAME    
 01661                                 TXH   TCLASS   
 01662                                 TXH   1  
 01663                                 TXH   (C011    
 01664                                 TXH   (C012    
 01665                                 TXH   IGNERR   
 01666   IGNERR                        TSX   DELETE,4 
 01667                                 TXH   TNAME    
 01670                                 TXH   TCLASS   
 01671                                 TXH   0  
 01672                                 TXH   ERROR    
 01673                                 TSX   CHFILE,4 
 01674                                 TXH   ENAME    
 01675                                 TXH   TCLASS   
 01676                                 TXH   20 
 01677                                 TXH   TNAME    
 01700                                 TXH   TCLASS   
 01701                                 TXH   ERROR    
 01702                                 TSX   UPDATE,4 
 01703                                 TSX   DSEEK,4  
 01704                                 TXH   TNAME    
1PAGE 20     COMPILATION LISTING    
      
      
      
 01705                                 TXH   TCLASS   
 01706                                 TXH   NOFILE   
 01707                                 CAL   TRUE     
 01710                                 SLW   OK       
 01711                                 TSX   DASIGN,4 
 01712                                 TXH   ENAME    
 01713                                 TXH   TCLASS   
 01714                                 TXH   ERROR    
 01715                                 CLA   0  
 01716                                 STO   HILINE   
 01717                                 STO   LINENO   
 01720                                 STO   LENGTH   
 01721   RETURN                        AXT   **,4     
 01722                                 TRA   1,4      
 01723   (L217                         SXA   RETURN,4 
 01724                                 TRA   (L220    
 01725   (L216                         TRA   (L221    
 01726   WRLINE                        TRA   (L222    
 01727   (L223                         CLA   LENGTH   
 01730                                 TZE   (L224    
 01731                                 CLA   LINENO   
 01732                                 SUB   HILINE   
 01733                                 TZE   *+2      
 01734                                 TPL   (L225    
 01735                                 CLA   HILINE   
 01736                                 ADD   LINCR    
 01737                                 STO   LINENO   
 01740   (L225                         TSX   WRCARD,4 
 01741                                 TXH   LINE     
 01742                                 TXH   LENGTH   
 01743                                 TXH   LINENO   
 01744                                 TXH   ERROR    
 01745                                 CLA   LINENO   
 01746                                 SUB   HILINE   
 01747                                 TMI   (L226    
 01750                                 TZE   (L226    
 01751                                 CLA   LINENO   
 01752                                 STO   HILINE   
         (L226    
         (L224    
 01753   RETURN                        AXT   **,4     
 01754                                 TRA   1,4      
 01755   (L222                         SXA   RETURN,4 
 01756                                 TRA   (L223    
 01757   (L221                         TRA   (L227    
 01760   VERPRN                        TRA   (L230    
 01761   (L231                         CAL   VERMOD   
 01762                                 TZE   (L232    
 01763                                 TSX   BLACK,4  
 01764                                 TSX   PRCARD,4 
 01765                                 TXH   LINE     
1PAGE 21     COMPILATION LISTING    
      
      
      
 01766                                 TXH   110      
 01767                                 TSX   RED,4    
         (L232    
 01770   RETURN                        AXT   **,4     
 01771                                 TRA   1,4      
 01772   (L230                         SXA   RETURN,4 
 01773                                 TRA   (L231    
 01774   (L227                         TRA   (L233    
 01775   GET                           TRA   (L234    
 01776   (L235                         CLA   EDCT     
 01777                                 STO   SAVCT    
 02000                                 CAL   TRUE     
 02001                                 SLW   NDCHAR   
 02002                                 CLA   BLANKS   
 02003                                 STO   XXWORD   
 02004   (L236                         CLA   EDCT     
 02005                                 ADD   1  
 02006                                 STO   EDCT     
 02007                                 CAL   NDCHAR   
 02010                                 TNZ   (L237    
 02011                                 LAC   EDCT,1   
 02012                                 CLA   EDLIN,1  
 02013                                 SUB   BLANK    
 02014                                 TZE   (L240    
 02015                                 CLA   EDLIN,1  
 02016                                 SUB   TAB      
 02017                                 TZE   (L240    
 02020   (L237                         CLA   EDCT     
 02021                                 SUB   COUNT    
 02022                                 TZE   *+2      
 02023                                 TPL   (L240    
 02024                                 LAC   EDCT,1   
 02025                                 CLA   EDLIN,1  
 02026                                 SUB   TAB      
 02027                                 TZE   (L241    
 02030                                 CLA   EDLIN,1  
 02031                                 SUB   BLANK    
 02032                                 TZE   (L241    
 02033                                 TSX   LS,4     
 02034                                 TXH   XXWORD   
 02035                                 TXH   6  
 02036                                 LAC   EDCT,1   
 02037                                 ORA   EDLIN,1  
 02040                                 STO   XXWORD   
 02041                                 CAL   FALSE    
 02042                                 SLW   NDCHAR   
 02043   (L241                         TRA   (L236    
 02044   (L240                         CLA   XXWORD   
 02045                                 STO   XXWORD   
 02046   RETURN                        AXT   **,4     
 02047                                 TRA   1,4      
1PAGE 22     COMPILATION LISTING    
      
      
      
 02050   (L234                         SXA   RETURN,4 
 02051                                 TRA   (L235    
 02052   (L233                         TRA   (L242    
 02053   NUM                           TRA   (L243    
 02054   (L244                         CLA   EDCT     
 02055                                 STO   SAVCT    
 02056                                 CAL   TRUE     
 02057                                 SLW   NDCHAR   
 02060                                 CLA   0  
 02061                                 STO   XXWORD   
 02062   (L245                         CLA   EDCT     
 02063                                 ADD   1  
 02064                                 STO   EDCT     
 02065                                 CAL   NDCHAR   
 02066                                 TNZ   (L246    
 02067                                 LAC   EDCT,1   
 02070                                 CLA   EDLIN,1  
 02071                                 SUB   BLANK    
 02072                                 TZE   (L247    
 02073                                 CLA   EDLIN,1  
 02074                                 SUB   TAB      
 02075                                 TZE   (L247    
 02076   (L246                         CLA   EDCT     
 02077                                 SUB   COUNT    
 02100                                 TZE   *+2      
 02101                                 TPL   (L247    
 02102                                 LAC   EDCT,1   
 02103                                 CLA   EDLIN,1  
 02104                                 SUB   12       
 02105                                 TZE   (L250    
 02106                                 TPL   (L250    
 02107                                 LDQ   XXWORD   
 02110                                 MPY   12       
 02111                                 XCA      
 02112                                 ADD   EDLIN,1  
 02113                                 STO   XXWORD   
 02114                                 CAL   FALSE    
 02115                                 SLW   NDCHAR   
 02116   (L250                         TRA   (L245    
 02117   (L247                         CLA   XXWORD   
 02120                                 STO   XXWORD   
 02121   RETURN                        AXT   **,4     
 02122                                 TRA   1,4      
 02123   (L243                         SXA   RETURN,4 
 02124                                 TRA   (L244    
 02125   (L242                         TRA   (L251    
 02126   MOVETO                        TRA   (L252    
 02127   (L253                         LAC   EDCT,1   
 02130                                 CLA   EDLIN,1  
 02131                                 SUB   BLANK    
 02132                                 TZE   (L254    
1PAGE 23     COMPILATION LISTING    
      
      
      
 02133                                 CLA   EDCT     
 02134                                 SUB   1  
 02135                                 STO   EDCT     
 02136   (L254                         CLA   0  
 02137                                 STO   I  
 02140   (L255                         CLA   I  
 02141                                 ADD   1  
 02142                                 STO   I  
 02143                                 CLA   I  
 02144                                 SUB   124      
 02145                                 TZE   *+2      
 02146                                 TPL   (L256    
 02147                                 CLA   EDCT     
 02150                                 SUB   124      
 02151                                 TZE   (L256    
 02152                                 TPL   (L256    
 02153                                 CLA   EDCT     
 02154                                 ADD   1  
 02155                                 STO   EDCT     
 02156                                 LAC   I,1      
 02157                                 PAC   0,4      
 02160                                 CLA   EDLIN,4  
 02161                                 STO   LIN,1    
 02162                                 TRA   (L255    
 02163   (L256                         TSX   UNTAB,4  
 02164                                 TXH   LIN      
 02165                                 TZE   (L257    
 02166                                 CAL   TRNCSW   
 02167                                 TZE   (L257    
 02170                                 TSX   BLACK,4  
 02171                                 TSX   WRFLEX,4 
 02172                                 TXH   )S016    
 02173                                 TXH   0  
 02174                                 TSX   PRCARD,4 
 02175                                 TXH   LIN      
 02176                                 TXH   110      
 02177                                 TSX   RED,4    
         (L257    
 02200   RETURN                        AXT   **,4     
 02201                                 TRA   1,4      
 02202   (L252                         SXA   RETURN,4 
 02203                                 CLA   1,4      
 02204                                 STA   2161     
 02205                                 STA   2164     
 02206                                 STA   2175     
 02207                                 TRA   (L253    
           BEGIN                                                            00010___
       COMMENT ..... GENERAL ROUTINE TO INTERPRET TABS ..... $,             00020___
           INTEGER ARRAY TABS(30),TCARD(84) $,                              00030___
           INTEGER I,COL,TAB $,                                             00040___
           BOOLEAN PRVTB,THSTB,COLVAL,VAL $,                                00050___
           PRESET TABS = 0 $,                                               00060___
           PRESET COLVAL = 1B $,                                            00070___
       COMMENT ..... ENTRY TO SET UP TAB SETTINGS ..... $,                  00080___
                                                                            00090___
           DEFINE PROCEDURE SETTAB(CARD) WHERE INTEGER ARRAY CARD TOBE      00100___
                BEGIN                                                       00110___
                FOR I = 0 STEP 1 UNTIL CARD                                 00120___
                DO TABS(I) = CARD(I) $,                                     00130___
                END $,                                                      00140___
                                                                            00150___
       COMMENT .... ENTRY TO SET INTERPRETATION OF COLON CHAR. ... $,       00160___
                                                                            00170___
           DEFINE PROCEDURE SETCOL(WORD) WHERE BOOLEAN WORD TOBE            00180___
                COLVAL = WORD $,                                            00190___
                                                                            00200___
       COMMENT ..... ENTRY TO UNPACK CARD WITH TABS ..... $,                00210___
                                                                            00220___
           DEFINE BOOLEAN PROCEDURE UNTAB(CARD) WHERE INTEGER ARRAY CARD    00230___
            TOBE                                                            00240___
                BEGIN                                                       00250___
                FOR I = 1 STEP 1 UNTIL 84                                   00260___
                DO   BEGIN                                                  00270___
                     TCARD(I) = CARD(I) $,                                  00280___
                     CARD(I) = .BCD. '00000 ' $,                            00290___
                     END $,                                                 00300___
                CARD = COL = TAB = 1 $,                                     00310___
                PRVTB = COLVAL $,                                           00320___
                FOR I = 1 STEP 1 UNTIL 84                                   00330___
                DO   BEGIN                                                  00340___
                     IF (TCARD = TCARD(I)) EQL 55C                          00350___
                     THEN BEGIN                                             00360___
                          VAL = FALSE $,                                    00370___
                          GOTO RETURN $,                                    00380___
                          END $,                                            00390___
                     IF COL GRT 72                                          00400___
                     THEN BEGIN                                             00410___
                          IF TCARD NEQ 60C                                  00420___
                          THEN BEGIN                                        00430___
                               VAL = TRUE $,                                00440___
                               GOTO RETURN $,                               00450___
                               END $,                                       00460___
                          END                                               00470___
                     ELSE BEGIN                                             00480___
                          THSTB = COLVAL $,                                 00490___
                          IF TCARD EQL 72C                                  00500___
                          THEN BEGIN                                        00510___
                               THSTB = TRUE $,                              00520___
 TABSET $                      IF TAB GRT TABS                              00530___
                               THEN COL = COL+2                             00540___
                               ELSE IF TABS(TAB) LEQ COL                    00550___
                                    THEN BEGIN                              00560___
                                         TAB = TAB+1 $,                     00570___
                                         GOTO TABSET $,                     00580___
                                         END                                00590___
                                    ELSE COL = TABS(TAB) $,                 00600___
                               END                                          00610___
                          ELSE IF PRVTB AND TCARD EQL 35C                   00620___
                               THEN BEGIN                                   00630___
                                    IF COL GRT 1                            00640___
                                    THEN BEGIN                              00650___
                                         COL = COL-1 $,                     00660___
 UNSET $                                 IF TAB GRT 1 AND TABS(TAB) GRT     00670___
                                          COL                               00680___
                                         THEN BEGIN                         00690___
                                              TAB = TAB-1 $,                00700___
                                              GOTO UNSET $,                 00710___
                                              END $,                        00720___
                                         END $,                             00730___
                                    END                                     00740___
                               ELSE BEGIN                                   00750___
                                    IF (CARD(COL) = TCARD) NEQ .BCD. '000   00760___
 00 ' AND COL GRT CARD              THEN CARD = COL $,                      00770___
                                    COL = COL+1 $,                          00780___
                                    END $,                                  00790___
                          PRVTB = THSTB $,                                  00800___
                          END $,                                            00810___
                     END $,                                                 00820___
                VAL = FALSE $,                                              00830___
                END $,                                                      00840___
                                                                            00850___
           END FINI                                                         00860___
1PAGE 1      COMPILATION LISTING    
      
      
      
 00001   SETTAB                        TRA   (L000    
         (L001    
 00002   (L002                         CLA   0  
 00003                                 STO   I  
 00004   (L003                         LXA   CARD,4   
 00005                                 SXD   (L004,4  
 00006                                 LXA   I,4      
 00007   (L004                         TXH   (L005,4  
 00010                                 LAC   I,1      
 00011                                 CLA   CARD,1   
 00012                                 STO   TABS,1   
 00013                                 LXA   I,4      
 00014                                 TXI   *+1,4,1  
 00015                                 SXA   I,4      
 00016                                 TRA   (L003    
         (L005    
 00017   RETURN                        AXT   **,4     
 00020                                 TRA   1,4      
 00021   (L000                         SXA   RETURN,4 
 00022                                 CLA   1,4      
 00023                                 STA   4  
 00024                                 STA   11       
 00025                                 TRA   (L001    
 00026   SETCOL                        TRA   (L006    
 00027   (L007                         CAL   WORD     
 00030                                 SLW   COLVAL   
 00031   RETURN                        AXT   **,4     
 00032                                 TRA   1,4      
 00033   (L006                         SXA   RETURN,4 
 00034                                 CLA   1,4      
 00035                                 STA   27       
 00036                                 TRA   (L007    
 00037   UNTAB                         TRA   (L010    
         (L011    
 00040   (L012                         CLA   1  
 00041                                 STO   I  
 00042                                 LXA   I,4      
 00043   (L013                         TXH   (L014,4,124    
 00044                                 LAC   I,1      
 00045                                 CLA   CARD,1   
 00046                                 STO   TCARD,1  
 00047                                 CLA   )S001    
 00050                                 STO   CARD,1   
 00051                                 LXA   I,4      
 00052                                 TXI   *+1,4,1  
 00053                                 SXA   I,4      
 00054                                 TRA   (L013    
 00055   (L014                         CLA   1  
 00056                                 STO   TAB      
 00057                                 STO   COL      
 00060                                 STO   CARD     
1PAGE 2      COMPILATION LISTING    
      
      
      
 00061                                 CAL   COLVAL   
 00062                                 SLW   PRVTB    
 00063   (L015                         CLA   1  
 00064                                 STO   I  
 00065                                 LXA   I,4      
 00066   (L016                         TXH   (L017,4,124    
 00067                                 LAC   I,1      
 00070                                 CLA   TCARD,1  
 00071                                 STO   TCARD    
 00072                                 SUB   55       
 00073                                 TNZ   (L020    
 00074                                 CAL   FALSE    
 00075                                 SLW   VAL      
 00076                                 TRA   RETURN   
 00077   (L020                         CLA   COL      
 00100                                 SUB   110      
 00101                                 TMI   (L021    
 00102                                 TZE   (L021    
 00103                                 CLA   TCARD    
 00104                                 SUB   60       
 00105                                 TZE   (L022    
 00106                                 CAL   TRUE     
 00107                                 SLW   VAL      
 00110                                 TRA   RETURN   
 00111   (L022                         TRA   (L023    
 00112   (L021                         CAL   COLVAL   
 00113                                 SLW   THSTB    
 00114                                 CLA   TCARD    
 00115                                 SUB   72       
 00116                                 TNZ   (L024    
 00117                                 CAL   TRUE     
 00120                                 SLW   THSTB    
 00121   TABSET                        CLA   TAB      
 00122                                 SUB   TABS     
 00123                                 TMI   (L025    
 00124                                 TZE   (L025    
 00125                                 CLA   COL      
 00126                                 ADD   2  
 00127                                 STO   COL      
 00130                                 TRA   (L026    
 00131   (L025                         LAC   TAB,1    
 00132                                 CLA   TABS,1   
 00133                                 SUB   COL      
 00134                                 TZE   *+2      
 00135                                 TPL   (L027    
 00136                                 CLA   TAB      
 00137                                 ADD   1  
 00140                                 STO   TAB      
 00141                                 TRA   TABSET   
 00142                                 TRA   (L030    
 00143   (L027                         LAC   TAB,1    
1PAGE 3      COMPILATION LISTING    
      
      
      
 00144                                 CLA   TABS,1   
 00145                                 STO   COL      
         (L030    
 00146   (L026                         TRA   (L031    
 00147   (L024                         CAL   PRVTB    
 00150                                 TZE   (L032    
 00151                                 CLA   TCARD    
 00152                                 SUB   35       
 00153                                 TNZ   (L032    
 00154                                 CLA   COL      
 00155                                 SUB   1  
 00156                                 TMI   (L033    
 00157                                 TZE   (L033    
 00160                                 CLA   COL      
 00161                                 SUB   1  
 00162                                 STO   COL      
 00163   UNSET                         CLA   TAB      
 00164                                 SUB   1  
 00165                                 TMI   (L034    
 00166                                 TZE   (L034    
 00167                                 LAC   TAB,1    
 00170                                 CLA   TABS,1   
 00171                                 SUB   COL      
 00172                                 TMI   (L034    
 00173                                 TZE   (L034    
 00174                                 CLA   TAB      
 00175                                 SUB   1  
 00176                                 STO   TAB      
 00177                                 TRA   UNSET    
         (L034    
 00200   (L033                         TRA   (L035    
 00201   (L032                         LAC   COL,1    
 00202                                 CLA   TCARD    
 00203                                 STO   CARD,1   
 00204                                 SUB   )S001    
 00205                                 TZE   (L036    
 00206                                 CLA   COL      
 00207                                 SUB   CARD     
 00210                                 TMI   (L036    
 00211                                 TZE   (L036    
 00212                                 CLA   COL      
 00213                                 STO   CARD     
 00214   (L036                         CLA   COL      
 00215                                 ADD   1  
 00216                                 STO   COL      
         (L035    
 00217   (L031                         CAL   THSTB    
 00220                                 SLW   PRVTB    
 00221   (L023                         LXA   I,4      
 00222                                 TXI   *+1,4,1  
 00223                                 SXA   I,4      
1PAGE 4      COMPILATION LISTING    
      
      
      
 00224                                 TRA   (L016    
 00225   (L017                         CAL   FALSE    
 00226                                 SLW   VAL      
 00227   RETURN                        AXT   **,4     
 00230                                 TRA   1,4      
 00231   (L010                         SXA   RETURN,4 
 00232                                 CLA   1,4      
 00233                                 STA   45       
 00234                                 STA   50       
 00235                                 STA   60       
 00236                                 STA   203      
 00237                                 STA   207      
 00240                                 STA   213      
 00241                                 TRA   (L011    
1                                                                                                PAGE 1     
                           NCLIB --- SUBROUTINE ENTRIES TO AVOID LOADING LIBRARY    
                  
                  
                                     PCC     ON 
                                     PMC     ON 
                  
                       00002         ENTRY   CHNCOM        EXIT TO CTSS 
                       00031         ENTRY   COMARG        GET PARAMETER FROM COMMAND LIST
                       00007         ENTRY   SETBCD        SET CONSOLE IN 6-BIT MODE
                       00010         ENTRY   SETFUL        SET CONSOLE IN 12-BIT MODE     
                       00011         ENTRY   SETBRK        SET CONSOLE INTERRUPT PROCEDURE
                       00012         ENTRY   WHOAMI        DETERMINE THE USER 
                       00013         ENTRY   RED           CHANGE CONSOLE TO RED    
                       00022         ENTRY   BLACK         CHANGE CONSOLE TO BLACK  
                  
                              TSSX   MACRO   A             CALL CORE A  
                                     AXC     *+1,4         .
                                     TIA     =H'A          ..     
                              TSSX   END                   ..     
                  
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  233045234644     
                  
      00002 -0500 60 4 00001  EXIT   CAL*    1,4           EXIT TO CTSS 
      00003  0621 00 0 00006         STA     CHNARG   
      00004 -0774 00 4 00005         AXC     *+1,4         EXIT TO NEXT COMMAND     
      00005  0101 00 0 00045         TIA     =HCHNCOM      .. OR GO DEAD OR DORMANT 
      00006  0 00000 0 00000  CHNARG PZE     **            ..     
                  
                       00002  CHNCOM SYN     EXIT          CHNCOM SAME AS EXIT
                  
      00007  0101 00 0 00047  SETBCD TIA     =HSETBCD      SET CONSOLE IN 6-BIT MODE
                  
      00010  0101 00 0 00051  SETFUL TIA     =HSETFUL      SET CONSOLE IN 12-BIT MODE     
                  
      00011  0101 00 0 00050  SETBRK TIA     =HSETBRK      SET CONSOLE INTERRUPT PROCEDURE
                  
      00012  0101 00 0 00052  WHOAMI TIA     =HWHOAMI      DETERMINE THE USER 
                  
      00013  0634 00 4 00041  RED    SXA     X4,4          COLOR SHIFT TO RED 
      00014  0074 00 4 00010         TSX     SETFUL,4      SET CONSOLE IN 12-BIT MODE     
      00015                          TSSX    WRFLXA        GIVE RED COLOR SHIFT     
      00015 -0774 00 4 00016         AXC     *+1,4                                                            .001
      00016  0101 00 0 00053         TIA     =HWRFLXA          ..                                             .001
      00017  0 00001 0 00043                 REDS,,1       ..     
      00020  0074 00 4 00007         TSX     SETBCD,4      RETURN CONSOLE TO 6-BIT MODE   
      00021  0020 00 0 00041         TRA     X4            RETURN 
                  
      00022  0634 00 4 00041  BLACK  SXA     X4,4          COLOR SHIFT TO BLACK     
      00023  0074 00 4 00010         TSX     SETFUL,4      SET CONSOLE IN 12-BIT MODE     
      00024                          TSSX    WRFLXA        GIVE BLACK COLOR SHIFT   
      00024 -0774 00 4 00025         AXC     *+1,4                                                            .001
      00025  0101 00 0 00053         TIA     =HWRFLXA          ..                                             .001
      00026  0 00001 0 00044                 BLACKS,,1     ..     
1                                                                                                PAGE 2     
                           NCLIB --- SUBROUTINE ENTRIES TO AVOID LOADING LIBRARY    
                  
      00027  0074 00 4 00007         TSX     SETBCD,4      RETURN CONSOLE TO 6-BIT MODE   
      00030  0020 00 0 00041         TRA     X4            RETURN 
                  
      00031  0634 00 4 00041  COMARG SXA     X4,4          GET PARAMETER FROM COMMAND LIST
      00032 -0500 60 4 00001         CAL*    1,4           NUMBER OF DESIRED PARAMETER    
      00033  0602 00 0 00036         SLW     CARGNO        ..     
      00034                          TSSX    GETCOM        PICK UP ARGUMENT   
      00034 -0774 00 4 00035         AXC     *+1,4                                                            .001
      00035  0101 00 0 00046         TIA     =HGETCOM          ..                                             .001
      00036  0 00000 0 00000  CARGNO PZE     **            ..     
      00037 -0130 00 0 00000         XCL                   LOGICAL AC TO MQ   
      00040  0131 00 0 00000         XCA                   RETURN TO ARITH. AC
      00041  0774 00 4 00000  X4     AXT     **,4          RETURN TO PROGRAM  
      00042  0020 00 4 00001         TRA     1,4           ..     
                  
      00043 +013300570057     REDS   OCT     013300570057  COLOR SHIFT(RED), NULL, NULL   
      00044 +013200570057     BLACKS OCT     013200570057  COLOR SHIFT(BLACK), NULL, NULL 
1                                                                                                PAGE 3     
                           LITERALS AND CROSS-REFERENCE LISTING FOR NCLIB           
                  
                                     TTL     LITERALS AND CROSS-REFERENCE LISTING FOR NCLIB     
                  
                                     END  
                  
        LITERALS  
      00045  233045234644     
      00046  272563234644     
      00047  622563222324     
      00050  622563225142     
      00051  622563266443     
      00052  663046214431     
      00053  665126436721     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         54 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         41     X4    13,   21,   22,   30,   31
         13    RED     0
          2   EXIT     7
         43   REDS    17
         22  BLACK     0
         44 BLACKS    26
         36 CARGNO    33
          6 CHNARG     3
          2 CHNCOM     0,    7
         31 COMARG     0
          7 SETBCD     0,   20,   27
         11 SETBRK     0
         10 SETFUL     0,   14,   23
         12 WHOAMI     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1                                                                                                PAGE 1     
                           EDUTL --- UTILITY ROUTINES FOR 'ED' IN ALGOL             
                  
                  
                       00004         ENTRY   WRFLEX        OUTPUT ON TYPEWRITER     
                       00007         ENTRY   WFLEXA        OUTPUT ON TYPEWRITER W/O C/R   
                       00032         ENTRY   LS 
                  
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  665126432567     
                  
      00002  0101 00 0 00042  WRFLXA TIA     =HWRFLXA 
                  
      00003  0101 00 0 00043  WRFLX  TIA     =HWRFLX  
                  
      00004  0634 00 1 00027  WRFLEX SXA     XR1,1         OUTPUT ON TYPEWRITER     
      00005  0774 00 1 00003         AXT     WRFLX,1       ..     
      00006  0020 00 0 00011         TRA     WRITE         ..     
                  
      00007  0634 00 1 00027  WFLEXA SXA     XR1,1         ..     
      00010  0774 00 1 00002         AXT     WRFLXA,1      ..     
                  
      00011  0634 00 1 00025  WRITE  SXA     WR.2,1        SAVE ROUTINE TO CALL     
      00012  0634 00 4 00030         SXA     XR4,4    
      00013 -0500 60 4 00002         CAL*    2,4           GET COUNT    
      00014 -0100 00 0 00021         TNZ     WR.1          BCD OR BCI   
      00015 -0500 60 4 00001         CAL*    1,4           BCI    
      00016  0622 00 0 00026         STD     WR.2+1        ..     
      00017  0621 00 0 00026         STA     WR.2+1        ..     
      00020  0020 00 0 00025         TRA     WR.2          ..     
      00021  0767 00 0 00022  WR.1   ALS     18            ..     
      00022  0622 00 0 00026         STD     WR.2+1        ..     
      00023 -0500 00 4 00001         CAL     1,4           .
      00024  0621 00 0 00026         STA     WR.2+1        ..     
      00025  0074 00 4 00000  WR.2   TSX     **,4          ..     
      00026  0 00000 0 00000         ***     **,,**        ..     
      00027  0774 00 1 00000  XR1    AXT     **,1          ..     
      00030  0774 00 4 00000  XR4    AXT     **,4          ..     
      00031  0020 00 4 00001         TRA     1,4
                  
      00032  0634 00 1 00040  LS     SXA     LSX1,1        SAVE INDEX 1 
      00033 -0500 60 4 00002         CAL*    2,4           GET SHIFT    
      00034  0737 00 1 00000         PAC     ,1            ..     
      00035  0560 60 4 00001         LDQ*    1,4           GET WORD     
      00036 -0763 00 1 00000         LGL     0,1           SHIFT IT     
      00037  0131 00 0 00000         XCA                   AND LEAVE IN ARITHMETIC AC     
      00040  0774 00 1 00000  LSX1   AXT     **,1          ..     
      00041  0020 00 4 00001         TRA     1,4           ..     
                  
                                     END  
                  
        LITERALS  
      00042  665126436721     
      00043  665126436760     
1                                                                                                PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         44 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         32     LS     0
         27    XR1     4,    7
         30    XR4    12
         40   LSX1    32
         21   WR.1    14
         25   WR.2    11,   16,   17,   20,   22,   24
          3  WRFLX     5
         11  WRITE     6
          7 WFLEXA     0
          4 WRFLEX     0
          2 WRFLXA    10
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1PAGE 1                    EDIOP --- I/O SUBROUTINES FOR 'ED', ALGOL VERSION              17 HR 42 MN  9 SEC  3/01/68   

 SUBROUTINE ENTRY POINTS
                       00003        DSEEK 
                       00044        RDCARD
                       00224        DASIGN
                       00264        WRCARD
                       00404        DFILE 
                       00436        RENAME
                       00714        UPDATE
                       00717        CHFILE
                       00713        RESET 
                       00720        IODIAG
                       00734        WRFLX 
                       00735        WRFLXA
                       00573        RDTYPE
                       00633        PRCARD

  TRANSFER VECTOR       
      00000  475145632551           PRNTER
      00001  622563222324           SETBCD
      00002  242543256325           DELETE

      
                                    *      PMC     ON 
      
      
                                           ENTRY   DSEEK         TO OPEN CARD FILE FOR READING  
                                           ENTRY   RDCARD        TO READ A CARD FROM CARD FILE  
      
                                           ENTRY   DASIGN        TO OPEN CARD FILE FOR WRITING  
                                           ENTRY   WRCARD        TO WRITE A CARD INTO FILE
                                           ENTRY   DFILE         TO CLOSE OUT THE WRITE FILE    
      
                                           ENTRY   RENAME        TO RENAME A FILE   
      
                                           ENTRY   UPDATE        TO UPDATE USER UFD 
                                           ENTRY   CHFILE        TO CHANGE THE NAME/MODE OF A FILE    
                                           ENTRY   RESET         TO RESET USER FILE STATUS
                                           ENTRY   IODIAG   
      
                                           ENTRY   WRFLX    
                                           ENTRY   WRFLXA   
      
                                           ENTRY   RDTYPE        TO READ A LINE FROM CONSOLE    
                                           ENTRY   PRCARD        TO PRINT A LINE ON CONSOLE     
      
                                           EXTERN  PRNTER,SETBCD,DELETE 
      
                                           MACRO
                                    LOC    0       N(A)     
                                           IFF     0,/CRS/LOC     
                                    LOC    SYN     *  
                                           TSX     N,4
                                           ARG     (A)
                                    0      END  
1PAGE 2                    EDIOP --- I/O SUBROUTINES FOR 'ED', ALGOL VERSION              17 HR 42 MN  9 SEC  3/01/68   

      
                                    ARG    MACRO   PARS     
                                           IRP     PARS     
                                           PAR     PARS     
                                           IRP  
                                    ARG    END  
      
                                    SYSENT MACRO   NAME     
                                           REM  
                                           IRP     NAME     
                                    NAME   TIA     =H'NAME  
                                           IRP  
                                    SYSENT END  
      
                                    PAR    OPSYN   PTH
                                    BLK    OPSYN   TIX           FLAG NON-DECR. BLKS
      
                       00660        BUFLN  EQU     432           CURRENT LENGTH OF DISK/DRUM RECORDS  
                       00016        CRDLN  EQU     14 
                       00003        SWN    EQU     3  
      
                       00676        RDLN   EQU     BUFLN+CRDLN    
                       00220        SMBLN  EQU     BUFLN/SWN
                       00236        WBLN   EQU     SMBLN+CRDLN    
      
                       02014        BUFSUM EQU     BUFLN+RDLN+WBLN  SUM OF BUFFERS TAKEN FROM MEM-BOUND     
1PAGE 3                    CARD-IMAGE INPUT FROM DISK                                     17 HR 42 MN  9 SEC  3/01/68   

      00003  0634 00 4 00652        DSEEK  SXA     X4,4          OPEN A FILE FOR READING  
      00004  0500 60 4 00001               CLA*    1,4           GET FIRST NAME     
      00005  0560 60 4 00002               LDQ*    2,4           GET SECOND NAME    
      00006 -0603 00 0 01010               DST     RD            SAVE FOR READING   
      00007 -0500 00 4 00003               CAL     3,4           POSSIBLE ERROR RETURN    
      00010  0621 00 0 00162               STA     ERRTN         ..     
      00011 -0500 00 0 01026               CAL     RB.           FIND LOCATION OF READ BUFFER   
      00012  0020 00 0 00013        GETRB  TRA     *+1           ONE-SHOT SWITCH    
                                                   GETBUF(RDBF)   
      00015  0621 00 0 01026               STA     RB.
      00016 -0625 00 0 00012               STL     GETRB         CLOSE THIS PATH    
      00017  0621 00 0 01030               STA     RE.
      00020  0621 00 0 01027               STA     R. 
      00021  0600 00 0 00002               STZ     NXTEOF   
                                                   OPEN(=HR,RD,RD+1,M,M,ERSEEK,ERRCOD)    
                                                   RPRIME() 
      00033 -0520 00 0 01025               NZT     EOFCT    
      00034 -0625 00 0 00002               STL     NXTEOF   
      00035  0020 00 0 00652               TRA     X4            RETURN 
      
      00036 -0500 00 0 01024        ERSEEK CAL     ERRCOD   
      00037  0402 00 0 01040               SUB     =12           IS IT FILE NOT FOUND     
      00040 -0100 00 0 00475               TNZ     ERRTRA        NO, FAKE 'FERRTN'  
                                                   WRFLX((RD,,4)) 
      00043  0020 00 0 00162               TRA     ERRTN    
      
      00044  0634 00 4 00652        RDCARD SXA     X4,4          READ A CARD FROM FILE    
      00045 -0500 00 4 00001               CAL     1,4           LINE ARRAY   
      00046  0621 00 0 00117               STA     RDLIN         ..     
      00047 -0500 00 4 00002               CAL     2,4           LENGTH 
      00050  0621 00 0 00123               STA     LENGTH        ..     
      00051 -0500 00 4 00003               CAL     3,4           LINENO 
      00052  0621 00 0 00147               STA     RDLNO         ..     
      00053 -0500 00 4 00004               CAL     4,4           POSSIBLE ERROR RETURN    
      00054  0621 00 0 00162               STA     ERRTN         ..     
      00055  0520 00 0 00002               ZET     NXTEOF   
      00056  0020 00 0 00157               TRA     RCLOS    
      00057  0520 00 0 01025               ZET     RWAIT    
                                                   FWAIT(RD,RD+1) 
      00063  0600 00 0 01025               STZ     RWAIT    
      00064  0774 00 4 00016               AXT     CRDLN,4  
      00065  0535 00 1 01027               LAC     R.,1     
      00066 -0500 00 1 00000               CAL     0,1
      00067  0602 00 4 00021               SLW     BUF+CRDLN,4    
      00070  1 77777 1 00071               TXI     *+1,1,-1 
      00071  2 00001 4 00066               TIX     *-3,4,1  
      00072 -0500 00 0 01027               CAL     R. 
      00073  0361 00 0 01000               ACL     CRDF     
      00074  0621 00 0 01027               STA     R. 
      00075  0361 00 0 01000               ACL     CRDF     
      00076 -0340 00 0 01030               LAS     RE.
      00077  0020 00 0 00151               TRA     RDREC    
      00100  0774 00 0 00000               AXT     0,0
                       00101        RDUNP  SYN     *  
1PAGE 4                    CARD-IMAGE INPUT FROM DISK                                     17 HR 42 MN  9 SEC  3/01/68   

      00101  0020 00 0 00102        CHARSW TRA     *+1           ONE-SHOT SWITCH    
      00102 -0500 00 0 00017               CAL     BUF+12        GET CHARACTERS FROM ID FIELD   
      00103 -0320 00 0 01101               ANA     =O777777000000               ..  
      00104  0602 00 0 01006               SLW     SEQCHR        3 CHARS IN SEQUENCE FIELD
      00105 -0320 00 0 01100               ANA     =O777700000000               ..  
      00106  0602 00 0 01007               SLW     SQCHR1        2 CHARS IN SEQUENCE FIELD
      00107 -0625 00 0 00101               STL     CHARSW        DON'T GO THROUGH THIS SEQUENCE AGAIN 
      00110  0774 00 1 00000               AXT     0,1           ..     
      00111  0774 00 2 00016               AXT     14,2          ..     
      00112  0560 00 2 00021        RDC1   LDQ     BUF+14,2      UNPACK CARD  
      00113  0774 00 4 00006               AXT     6,4           ..     
      00114 -0754 00 0 00000        RDC2   ZAC                   ..     
      00115 -0763 00 0 00006               LGL     6             ..     
      00116  1 77777 1 00117               TXI     *+1,1,-1      .. COUNTS CHARACTERS     
      00117  0602 00 1 00000        RDLIN  SLW     **,1          ..     
      00120  2 00001 4 00114               TIX     RDC2,4,1      ..     
      00121  2 00001 2 00112               TIX     RDC1,2,1      ..     
      00122  0756 00 1 00000               PCA     0,1           CHARACTER COUNT    
      00123  0602 00 0 00000        LENGTH SLW     **            .. SAVE IT   
      00124 -0500 00 0 00017               CAL     BUF+12        COLUMNS 73-78
      00125  0560 00 0 00020               LDQ     BUF+13        COLUMNS 79-84
      00126 -0763 00 0 00014               LGL     12            COLUMNS 75-80 TO AC
      00127  0602 00 0 00001               SLW     TNUM     
      00130 -0320 00 0 01067               ANA     =H 
      00131  0771 00 0 00004               ARS     4  
      00132  0114 06 0 00773               CVR     TB4,,6   
      00133 -0320 00 0 00001               ANA     TNUM     
      00134 -0130 00 0 00000               XCL  
      00135  0600 00 0 00001               STZ     TNUM          ..     
      00136  0774 00 4 00006               AXT     6,4           ..     
      00137 -0754 00 0 00000        RDDTBC ZAC                   CONVERT LINE NUMBER TO BINARY  
      00140 -0763 00 0 00003               LGL     3             ..     
      00141  0401 00 0 00001               ADM     TNUM          ..     
      00142 -0763 00 0 00003               LGL     3             ..     
      00143  0401 00 0 00001               ADM     TNUM          ..     
      00144  0361 00 0 00001               ACL     TNUM          ..     
      00145  0602 00 0 00001               SLW     TNUM          ..     
      00146  2 00001 4 00137               TIX     RDDTBC,4,1    ..     
      00147  0602 00 0 00000        RDLNO  SLW     **            SAVE BINARY LINE NUMBER  
      00150  0020 00 0 00652               TRA     X4            RETURN 
      
      00151  0520 00 0 00000        RDREC  ZET     EOFSW    
      00152  0020 00 0 00155               TRA     RDEOF1   
                                                   RPRIME() 
      00154  0020 00 0 00101               TRA     RDUNP    
      
      00155 -0625 00 0 00002        RDEOF1 STL     NXTEOF   
      00156  0020 00 0 00101               TRA     RDUNP    
      
                                    RCLOS          CLOSE(RD,RD+1) 
      00162  0020 00 0 00000        ERRTN  TRA     ** 
      
      00163  0634 00 4 00222        RPRIME SXA     RPRX,4   
      00164 -0500 00 0 01030               CAL     RE.
1PAGE 5                    CARD-IMAGE INPUT FROM DISK                                     17 HR 42 MN  9 SEC  3/01/68   

      00165  0402 00 0 01027               SUB     R. 
      00166  0100 00 0 00177               TZE     NOMOVE   
      00167  0734 00 4 00000               PAX     ,4 
      00170  0535 00 1 01027               LAC     R.,1     
      00171  0535 00 2 01026               LAC     RB.,2    
      00172  0560 00 1 00000               LDQ     0,1
      00173 -0600 00 2 00000               STQ     0,2
      00174  1 77777 1 00175               TXI     *+1,1,-1 
      00175  1 77777 2 00176               TXI     *+1,2,-1 
      00176  2 00001 4 00172               TIX     *-4,4,1  
      00177  0361 00 0 01026        NOMOVE ACL     RB.
      00200  0621 00 0 00213               STA     RDLOC    
      00201  0621 00 0 01030               STA     RE.
      00202 -0500 00 0 01026               CAL     RB.
      00203  0621 00 0 01027               STA     R. 
      00204  0774 00 4 00660               AXT     BUFLN,4  
      00205  0634 00 4 01025               SXA     EOFCT,4  
      00206 -0625 00 0 00000               STL     EOFSW    
                                                   RDFILE(RD,RD+1,=0)   
      00213                         RDLOC  ARG     ((**,,BUFLN)EOFRD,EOFCT)   
      00216  0600 00 0 00000               STZ     EOFSW    
      00217 -0500 00 0 01030        EOFRD  CAL     RE.
      00220  0361 00 0 01025               ACL     EOFCT    
      00221  0621 00 0 01030               STA     RE.
      00222  0774 00 4 00000        RPRX   AXT     **,4     
      00223  0020 00 4 00001               TRA     1,4
1PAGE 6                    CARD-IMAGE OUTPUT TO DISK                                      17 HR 42 MN  9 SEC  3/01/68   

      00224  0634 00 4 00652        DASIGN SXA     X4,4          OPEN FILE FOR WRITING    
      00225  0500 60 4 00001               CLA*    1,4           GET FIRST NAME     
      00226  0560 60 4 00002               LDQ*    2,4           SECOND NAME  
      00227 -0603 00 0 01014               DST     WR            SAVE WRITE NAMES   
      00230 -0500 00 4 00003               CAL     3,4           GET LOCATION OF ERR. RETURN    
      00231  0621 00 0 00162               STA     ERRTN         ..     
      00232 -0500 00 0 01031               CAL     WB.
      00233  0020 00 0 00234        GETWB  TRA     *+1           ONE-SHOT SWITCH    
                                                   GETBUF(BUFCON) 
      00236  0621 00 0 00262               STA     WBUFFS        ..     
                                                   GETBUF(WRBF)   
      00241  0621 00 0 01031               STA     WB.
      00242  0621 00 0 00402               STA     WRLOC    
      00243 -0625 00 0 00233               STL     GETWB         CLOSE THIS PATH    
      00244  0621 00 0 01032               STA     W. 
      00245  0361 00 0 01004               ACL     SMBF     
      00246  0621 00 0 01033               STA     WE.
      00247  0774 00 4 00003               AXT     SWN,4    
      00250  0634 00 4 01034               SXA     WRCT,4   
      00251  0600 00 0 01035               STZ     WRSW     
                                                   OPEN(=HW,WR,WR+1,=O20)     
                                                   BUFFER(WR,WR+1)
      00262                         WBUFFS ARG     ((**,,BUFLN))  
      00263  0020 00 0 00652               TRA     X4            RETURN 
      
      00264 -0520 60 4 00002        WRCARD NZT*    2,4           WRITE A CARD INTO FILE   
      00265  0020 00 4 00005               TRA     5,4           SKIP IF NOTHING TO WRITE 
      00266  0634 00 4 00652               SXA     X4,4          ..     
      00267 -0500 00 4 00001               CAL     1,4           MOVE PARAMETERS (BASE)   
      00270  0621 00 0 00276               STA     WRC1+1        ..     
      00271 -0500 00 4 00002               CAL     2,4           .. (LENGTH)  
      00272  0621 00 0 00277               STA     WRC1+2        ..     
      00273  0500 00 4 00004               CLA     4,4           POSSIBLE ERROR RETURN    
      00274  0621 00 0 00162               STA     ERRTN         ..     
                                    WRC1           PACK(**,**)   PACK CHARACTERS INTO CARD IMAGE
      00300  0522 00 0 00652               XEC     X4 
      00301  0560 60 4 00003               LDQ*    3,4
      00302 -0754 00 0 00000               PXD     ,0 
      00303  0221 00 0 01047               DVP     =1000000 
      00304  0560 00 0 01036               LDQ     =0 
      00305  0765 00 0 00002               LRS     2  
      00306  0774 00 1 00006               AXT     6,1
      00307  0225 06 1 00773               VDP     DTAB,1,6 
      00310  2 00001 1 00307               TIX     *-1,1,1  
      00311 -0130 00 0 00000               XCL  
      00312  0560 00 0 01067               LDQ     =H            BLANKS TO MQ 
      00313 -0765 00 0 00014               LGR     12            SHIFT LINE NUMBER TO COLUMN 75-80    
      00314  0044 00 0 00000               PAI                   PREPARE TO TEST FOR NUMBER W/ 6 DIGITS     
      00315 -0501 00 0 01007               ORA     SQCHR1        ..     
      00316 -0054 00  000017               LFT     17            TEST FOR NUMBER .GE. 100000    
      00317  0020 00 0 00321               TRA     *+2           NON-ZERO, LEAVE 2-CHAR. ID     
      00320 -0501 00 0 01006               ORA     SEQCHR        'OR' IN 3 CHARS OF ID    
      00321  0602 00 0 00017               SLW     BUF+12        PLACE LINE NUMBER INTO CARD IMAGE    
      00322 -0600 00 0 00020               STQ     BUF+13        ..     
1PAGE 7                    CARD-IMAGE OUTPUT TO DISK                                      17 HR 42 MN  9 SEC  3/01/68   

      00323 -0520 00 0 01035               NZT     WRSW     
      00324  0020 00 0 00354               TRA     WRCX     
      00325  0600 00 0 01035               STZ     WRSW     
      00326  0520 00 0 01034               ZET     WWAIT    
      00327  0020 00 0 00335               TRA     WRCY     
                                                   FWAIT(WR,WR+1) 
      00333 -0500 00 0 01005               CAL     WB1
      00334  0020 00 0 00337               TRA     *+3
      00335 -0500 00 0 01034        WRCY   CAL     WRCT     
      00336  0402 00 0 01037               SUB     =1 
      00337  0621 00 0 01034               STA     WRCT     
      00340 -0500 00 0 01032               CAL     W. 
      00341  0402 00 0 01033               SUB     WE.
      00342  0100 00 0 00351               TZE     WRCZ     
      00343  0734 00 4 00000               PAX     ,4 
      00344  0535 00 2 01031               LAC     WB.,2    
      00345  0560 00 2 00220               LDQ     SMBLN,2  
      00346 -0600 00 2 00000               STQ     0,2
      00347  1 77777 2 00350               TXI     *+1,2,-1 
      00350  2 00001 4 00345               TIX     *-3,4,1  
      00351  0361 00 0 01031        WRCZ   ACL     WB.
      00352  0621 00 0 01032               STA     W. 
      00353  0020 00 0 00355               TRA     *+2
      00354 -0500 00 0 01032        WRCX   CAL     W. 
      00355  0737 00 2 00000               PAC     ,2 
      00356  0361 00 0 01000               ACL     CRDF     
      00357 -0340 00 0 01033               LAS     WE.
      00360  0774 00 0 00000               AXT     0,0
      00361 -0625 00 0 01035               STL     WRSW     
      00362  0602 00 0 01032               SLW     W. 
      00363  0774 00 4 00016               AXT     CRDLN,4  
      00364  0560 00 4 00021               LDQ     BUF+CRDLN,4    
      00365 -0600 00 2 00000               STQ     0,2
      00366  1 77777 2 00367               TXI     *+1,2,-1 
      00367  2 00001 4 00364               TIX     *-3,4,1  
      00370 -0520 00 0 01035               NZT     WRSW     
      00371  0020 00 0 00652               TRA     X4 
      00372 -0774 00 1 00725               AXC     WRWAIT,1 
      00373 -0520 00 0 01034               NZT     WRCT     
      00374 -0774 00 1 00724               AXC     WRFILE,1 
      00375 -0774 00 4 00376               AXC     *+1,4    
      00376  0020 00 1 00000               TRA     0,1
      00377                                ARG     (WR,WR+1,=0)   
      00402                         WRLOC  ARG     ((**,,SMBLN))  
      00403  0020 00 0 00652               TRA     X4            RETURN 
      
      00404  0634 00 4 00652        DFILE  SXA     X4,4          CLOSE OUT WRITE FILE     
      00405 -0500 00 4 00001               CAL     1,4
      00406  0621 00 0 00162               STA     ERRTN    
      00407 -0500 00 0 01031               CAL     WB.
      00410 -0520 00 0 01035               NZT     WRSW     
      00411  0020 00 0 00417               TRA     WCLOS    
      00412 -0520 00 0 01034               NZT     WWAIT    
                                                   FWAIT(WR,WR+1) 
1PAGE 8                    CARD-IMAGE OUTPUT TO DISK                                      17 HR 42 MN  9 SEC  3/01/68   

      00416 -0500 00 0 01033               CAL     WE.
      00417  0602 00 0 00001        WCLOS  SLW     TNUM     
      00420  0621 00 0 00431               STA     WRLC1    
      00421 -0500 00 0 01032               CAL     W. 
      00422  0402 00 0 00001               SUB     TNUM     
      00423  0100 00 0 00432               TZE     WCL1     
      00424  0602 00 0 00001               SLW     TNUM     
                                                   WRWAIT(WR,WR+1,=0)   
      00431  2 00001 0 00000        WRLC1  BLK     **,,TNUM 
                                    WCL1           CLOSE(WR,WR+1) 
      00435  0020 00 0 00652               TRA     X4            RETURN 
1PAGE 9                    UTILITY DISK SUBROUTINES                                       17 HR 42 MN  9 SEC  3/01/68   

      00436  0634 00 4 00652        RENAME SXA     X4,4          RENAME A FILE
      00437  0500 60 4 00001               CLA*    1,4           OLD 1  
      00440  0560 60 4 00002               LDQ*    2,4           OLD 2  
      00441 -0603 00 0 01020               DST     OLD           ..     
      00442  0500 60 4 00003               CLA*    3,4           NEW 1  
      00443  0560 60 4 00004               LDQ*    4,4           NEW 2  
      00444 -0603 00 0 01016               DST     NEW           ..     
      00445 -0500 00 4 00005               CAL     5,4           ERROR RETURN 
      00446  0621 00 0 00162               STA     ERRTN         ..     
      00447  0600 00 0 00023               STZ     ARY+1         SET MODE TO ZERO, IN CASE NO FILE    
                                                   FSTATE(NEW,NEW+1(ARY,,2)*) 
      00455 -0500 00 0 00023               CAL     ARY+1    
      00456 -0320 00 0 01044               ANA     =O176    
      00457  0602 00 0 00021               SLW     MODES    
                                                   DELETE(NEW,NEW+1,=0,ERRTN) 
                                                   CHFILE(OLD,OLD+1,MODES,NEW,NEW+1,ERRTN)
      00474  0020 00 0 00652               TRA     X4            RETURN 
      
1PAGE 10                   ERROR TRAPS FOR DISK I/O                                       17 HR 42 MN  9 SEC  3/01/68   

      00475 -3 00513 0 00476        ERRTRA TXL     *+1,,ERX4+2   MAKE IT LOOK LIKE MAD STMT LABEL     
      00476  0634 00 4 00511               SXA     ERX4,4   
                                                   SETBCD() 
                                                   PRNTER() 
                                                   WRFLXA((DOYOU,,4))   
                                                   RDYES(*+2)     
      00505  0020 00 0 00162               TRA     ERRTN    
                                                   WRFLX((TRYMSG,,6))   
                                                   DORMNT() 
      00511  0774 00 4 00000        ERX4   AXT     **,4     
      00512  0020 00 4 00000               TRA     0,4
      
      00513 -3 00543 0 00514        TIRRTN TXL     *+1,,TIRX4+2  AS AT 'ERRTRA'     
      00514  0634 00 4 00541               SXA     TIRX4,4  
      00515 -0500 00 4 00000               CAL     0,4
      00516  0737 00 2 00000               PAC     ,2            GET S/R LOCATION   
      00517  0560 60 2 00000               LDQ*    0,2           GET S/R NAME (ASSUME TSX-TIA-BCD)    
      00520 -0600 00 0 00746               STQ     LOCKMS+6      SAVE FOR PRINTING  
      00521 -0320 00 0 01045               ANA     =O77777  
      00522  0402 00 0 00777               SUB     OPNC     
      00523 -0100 00 0 00525               TNZ     *+2
      00524  1 77777 4 00525               TXI     *+1,4,-1 
      00525  0500 60 4 00001               CLA*    1,4
      00526  0560 60 4 00002               LDQ*    2,4
      00527 -0603 00 0 00740               DST     LOCKMS        PUT FILE-NAME IN MESSAGE 
                                                   SETBCD() 
                                                   WRFLXA((LOCKMS,,10)) 
                                                   WRFLXA((LOCKM1,,2))  
                                                   RDYES(ERRTN)   
                                                   TILOCK(=0)     
      00541  0774 00 4 00000        TIRX4  AXT     **,4     
      00542  0020 00 4 00000               TRA     0,4
1PAGE 11                   OBTAIN I/O BUFFERS FROM USER'S MEMORY BOUND                    17 HR 42 MN  9 SEC  3/01/68   

      00543  0634 00 4 00553        GETBUF SXA     GETBX4,4      SAVE   
      00544  0600 00 0 00003               STZ     BUF           RESET WORD   
                                                   GETMEM()      FIND CURRENT MEMORY BOUND
      00546  0621 00 0 00003               STA     BUF           (=FIRST LOCATION FOR RETURNED BUFFER)
      00547  0522 00 0 00553               XEC     GETBX4        RESTOR X4    
      00550  0361 60 4 00001               ACL*    1,4           ADD CALLER'S DESIRED BUFFER LENGTH   
                                                   SETMEM()      EXTEND MEMORY TO CONTAIN NEW BUFFER  
      00552 -0500 00 0 00003               CAL     BUF           RETURN ADDRESS OF NEW BUFFER IN AC   
      00553  0774 00 4 00000        GETBX4 AXT     **,4          ..     
      00554  0020 00 4 00002               TRA     2,4           RETURN 
1PAGE 12                   CONSOLE INPUT-OUTPUT                                           17 HR 42 MN  9 SEC  3/01/68   

      00555  0634 00 4 00570        RDYES  SXA     RDX4,4        SKELETON READ-LEFT-JUSTIFIED ROUTINE 
                                    RDJ1           RDFLXA((BUF,,1))  READ ONE WORD FROM CONSOLE 
      00560  0560 00 0 00003               LDQ     BUF           ..     
      00561 -0754 00 0 00000               PXD     ,0            ..     
      00562 -0763 00 0 00006               LGL     6             ..     
      00563  0402 00 0 01043               SUB     =O77          CHECK FOR INPUT FROM 'WRMESS'  
      00564  0100 00 0 00556               TZE     RDJ1          IGNORE INTER-CONSOLE COMMUNICATIONS  
      00565 -0500 00 0 00003               CAL     BUF
      00566  0771 00 0 00022               ARS     18 
      00567  0402 00 0 01046               SUB     =H000YES 
      00570  0774 00 4 00000        RDX4   AXT     **,4          ..     
      00571 -0100 60 4 00001               TNZ*    1,4
      00572  0020 00 4 00002               TRA     2,4           RETURN TO CALLER   
      
      00573  0634 00 4 00652        RDTYPE SXA     X4,4          READ A LINE FROM USER CONSOLE  
      00574 -0500 00 4 00001               CAL     1,4           GET ARRAY BASE FOR LINE  
      00575  0621 00 0 00624               STA     RLIN          ..     
      00576 -0500 00 4 00002               CAL     2,4           GET BASE OF LOCATION LENGTH    
      00577  0621 00 0 00614               STA     RLEN          ..     
                                    RDT3           RDFLXA(BUF)   READ LINE FROM CONSOLE   
      00602  0734 00 4 00000               PAX     0,4           CHAR. COUNT TO IR4 
      00603  0560 00 0 00003               LDQ     BUF           GET 1ST WORD FROM INPUT BUFFER 
      00604 -0754 00 0 00000               PXD     ,0            ..     
      00605 -0763 00 0 00006               LGL     6             ..     
      00606  0402 00 0 01043               SUB     =O77          IS IT INTER-CONSOLE COMMUNICATIONS BUF.    
      00607  0100 00 0 00600               TZE     RDT3          YES, IGNORE LINE   
      00610 -3 00124 4 00612               TXL     *+2,4,84      SKIP IF COUNT.LE.84
      00611  0774 00 4 00125               AXT     85,4          OTHERWISE SET COUNT= 85  
      00612  1 77777 4 00613               TXI     *+1,4,-1      REDUCE COUNT BY ONE
      00613  0754 00 4 00000               PXA     0,4           COUNT TO AC  
      00614  0602 00 0 00000        RLEN   SLW     **            RETURN COUNT TO CALLER   
      00615  0774 00 1 00000               AXT     0,1           ..     
      00616  0774 00 2 00016               AXT     14,2          ..     
      00617  0560 00 2 00021        RDT1   LDQ     BUF+14,2      MOVE CHARACTERS TO CALLER ARRAY
      00620  0774 00 4 00006               AXT     6,4           ..     
      00621 -0754 00 0 00000        RDT2   ZAC                   ..     
      00622 -0763 00 0 00006               LGL     6             ..     
      00623  1 77777 1 00624               TXI     *+1,1,-1      ..     
      00624  0602 00 1 00000        RLIN   SLW     **,1          ..     
      00625  2 00001 4 00621               TIX     RDT2,4,1      ..     
      00626  2 00001 2 00617               TIX     RDT1,2,1      ..     
      00627 -0774 00 1 00125               AXC     85,1          PLACE RETURN CHARACTER AT END OF STRING    
      00630 -0500 00 0 01042               CAL     =O55          ..     
      00631  0602 60 0 00624               SLW*    RLIN          ..     
      00632  0020 00 0 00652               TRA     X4            RETURN 
      
      00633  0634 00 4 00652        PRCARD SXA     X4,4          PRINT CARD ON USER CONSOLE     
      00634  0520 60 4 00002               ZET*    2,4           IS LENGTH= 0 
      00635  0020 00 0 00641               TRA     PRC1          NO, SKIP     
                                                   WRFLX(*)      YES, TYPE RETURN ONLY    
      00640  0020 00 0 00652               TRA     X4            AND RETURN   
      00641 -0500 00 4 00001        PRC1   CAL     1,4           MOVE PARAMETERS (ARRAY BASE ADDRESS) 
      00642  0621 00 0 00646               STA     PRC2+1        ..     
      00643 -0500 00 4 00002               CAL     2,4           .. (LOCATION OF LENGTH)  
1PAGE 13                   CONSOLE INPUT-OUTPUT                                           17 HR 42 MN  9 SEC  3/01/68   

      00644  0621 00 0 00647               STA     PRC2+2        ..     
                                    PRC2           PACK(**,**)   PACK CHARACTERS INTO CARD IMAGE
                                                   WRFLX((BUF,,14))  TYPE LINE TO USER'S CONSOLE
      00652  0774 00 4 00000        X4     AXT     **,4          RETURN 
      00653  0020 00 4 00001               TRA     1,4           ..     
1PAGE 14                   FORM CARD IMAGE BUFFER FROM UNPACKED INPUT ARRAY               17 HR 42 MN  9 SEC  3/01/68   

      00654  0634 00 4 00711        PACK   SXA     PKX4,4        UTILITY ROUTINE TO PACK CHARACTER STRING   
      00655 -0500 00 4 00001               CAL     1,4           GET LOCATION OF CHARACTER STRING     
      00656  0621 00 0 00667               STA     PKLIN         ..     
      00657 -0500 60 4 00002               CAL*    2,4           GET LENGTH OF STRING     
      00660  0737 00 4 00000               PAC     ,4            LENGTH TO XR.
      00661  1 77777 4 00662               TXI     *+1,4,-1      ..     
      00662 -0634 00 4 00674               SXD     PKLEN,4       ..     
      00663 -0774 00 1 00001               AXC     1,1           FOR ALGOL    
      00664  0774 00 2 00016               AXT     14,2          ..     
      00665  0560 00 0 01067        PK1    LDQ     =H            PACK CHARACTERS INTO CARD IMAGE
      00666  0774 00 4 00006               AXT     6,4           ..     
      00667 -0500 00 1 00000        PKLIN  CAL     **,1          ..     
      00670 -0773 00 0 00006               RQL     6             ..     
      00671 -0765 00 0 00006               LGR     6             ..     
      00672 -0773 00 0 00006               RQL     6             ..     
      00673  1 77777 1 00674               TXI     *+1,1,-1      MOVE FORWD. IN STORAGE   
      00674 -3 00000 1 00701        PKLEN  TXL     PKEND,1,**    .. SKIP IF NO MORE CHARACTERS  
      00675  2 00001 4 00667               TIX     PKLIN,4,1     ..     
      00676 -0600 00 2 00021               STQ     BUF+14,2      ..     
      00677  2 00001 2 00665               TIX     PK1,2,1       ..     
      00700  0020 00 0 00711               TRA     PKX4          AND RETURN   
      00701 -2 00001 4 00704        PKEND  TNX     *+3,4,1       FILL OUT REST OF WORD WITH BLANKS    
      00702 -0773 00 0 00006               RQL     6             ..     
      00703  0020 00 0 00701               TRA     PKEND         ..     
      00704 -0600 00 2 00021               STQ     BUF+14,2      SAVE LAST NON-BLANK WORD 
      00705  0560 00 0 01067               LDQ     =H            ..     
      00706 -2 00001 2 00711        PKBLK  TNX     PKX4,2,1      FILL OUT REST OF LINE WITH BLANK WORDS     
      00707 -0600 00 2 00021               STQ     BUF+14,2      ..     
      00710  0020 00 0 00706               TRA     PKBLK         ..     
      00711  0774 00 4 00000        PKX4   AXT     **,4          HERE FOR RETURN    
      00712  0020 00 4 00003               TRA     3,4           ..     
1PAGE 15                   SYSTEM SUBROUTINE ENTRIES                                      17 HR 42 MN  9 SEC  3/01/68   

                                                   DIRECT CALLS PROVIDED AS ENTRY POINTS  
      
      00713  0101 00 0 01065        RESET  TIA     =HRESETF      DIFFERENT NAMES FOR SAME FUNCTION    
      
      00714                                SYSENT  (UPDATE,FSTATE,DELFIL,CHFILE,IODIAG)   
      
      
                                                   CALLS FOR DISK I/O   
      
      00721                                SYSENT  (OPEN,BUFFER,RDFILE,WRFILE,WRWAIT,FWAIT,CLOSE)     
      
      
                                                   SYSTEM ERROR TRAPS   
      
      00730                                SYSENT  (FERRTN,TILOCK)
      
      
                                                   OTHER CALLS TO CTSS SUPERVISOR   
      
      00732                                SYSENT  (GETMEM,SETMEM,WRFLX,WRFLXA,RDFLXA,DORMNT)   
1PAGE 16                   VARIABLES AND CONSTANTS FOR EDIOP                              17 HR 42 MN  9 SEC  3/01/68   

      00740  606060606060           LOCKMS BCI     2, 
      00742  603162601443                  BCI     5, IS 'LOCKED' ON CALL TO 'NAME' 
      00747  333333575757                  VFD     H18/...,O18/575757   
      
      00750  244660704664           DOYOU  BCI     4,DO YOU WISH TO PROCEED,  
      
      00754  634660662131           LOCKM1 BCI     1,TO WAI 
      00755  637360575757                  VFD     H6/T,O30/7360575757  
      
      00756  637047256014           TRYMSG BCI     6,TYPE 'START' TO REPEAT LAST CALL     
      
      00764 -0 00000 0 00000        M      MZE                   ..     
      
      00765 +000006065000                  DEC     1E5B31,1E4B25,1E3B19,1E2B13,1E1B7,1E0B1
                       00773        DTAB   SYN     *  
      
      00773  170000000773           TB4    VFD     O6/17,30/*     
                                           DUP     1,3
                                           VFD     O6/,30/TB4     
      
      00777  0 00000 0 00721        OPNC   PZE     OPEN          CHECK ON TILOCK RETURN   
      
      01000  0 00000 0 00016        CRDF   PZE     CRDLN    
      01001  0 00000 0 00660        BUFCON PZE     BUFLN    
      01002  0 00000 0 00676        RDBF   PZE     RDLN     
      01003  0 00000 0 00236        WRBF   PZE     WBLN     
      
      01004  0 00000 0 00220        SMBF   PZE     SMBLN    
      01005  0 00000 0 00002        WB1    PZE     SWN-1    
      
      01006  606060000000           SEQCHR BCI     1,   000      COL 73-75    
      01007  606000000000           SQCHR1 BCI     1,  0000      COL 73-74    
      
      01010  545454545454           RD     BCI     2,************ 
      01012  604546636026                  BCI     2, NOT FOUND.  
      
      01014  535353535353           WR     BCI     2,$$$$$$$$$$$$ 
      01016  141414141414           NEW    BCI     2,'''''''''''' 
      01020  131313131313           OLD    BCI     2,============ 
      
      01022  404040404040           FILNAM BCI     2,------------ 
      
                       01022        FN     SYN     FILNAM   
      
      01024  0 00000 0 00000        ERRCOD PZE     **            ..     
      
      01025  0 00000 0 00000        EOFCT  PZE     ** 
      
                       01025        RWAIT  EQU     EOFCT    
      
      01026  0 00000 0 00000        RB.    PZE     ** 
      01027  0 00000 0 00000        R.     PZE     ** 
      01030  0 00000 0 00000        RE.    PZE     ** 
      
1PAGE 17                   VARIABLES AND CONSTANTS FOR EDIOP                              17 HR 42 MN  9 SEC  3/01/68   

      01031  0 00000 0 00000          WB.  PZE     ** 
      01032  0 00000 0 00000          W.   PZE     ** 
      01033  0 00000 0 00000          WE.  PZE     ** 
      
      01034  0 00000 0 00000        WRCT   PZE     ** 
      
                       01034        WWAIT  SYN     WRCT     
      
      01035  0 00000 0 00000        WRSW   PZE     ** 
      
                       00000        EOFSW  EQU     0             USE LOWER CORE FOR TEMPORARIES 
                       00001        TNUM   EQU     1             ..     
                       00002        NXTEOF EQU     2             ..     
      
                       00003        BUF    EQU     3             (BSS 14, 14-WORD LINE-BUFFER)  
                       00021        MODES  EQU     17            ..     
                       00022        ARY    EQU     18            (BSS 2, READ BUFFER FOR 'FSTATE')    
      
                       00022        TEMP   SYN     ARY
1PAGE 18                   LITERALS AND CROSS-REFERENCE LISTING FOR EDIOP                 17 HR 42 MN  9 SEC  3/01/68   

      
                       01036               END  

  LITERALS              
      01036  000000000000     
      01037  000000000001     
      01040  000000000014     
      01041  000000000020     
      01042  000000000055     
      01043  000000000077     
      01044  000000000176     
      01045  000000077777     
      01046  000000702562     
      01047  000003641100     
      01050  226426262551     
      01051  233026314325     
      01052  234346622560     
      01053  242543263143     
      01054  244651444563     
      01055  262551516345     
      01056  266263216325     
      01057  266621316360     
      01060  272563442544     
      01061  314624312127     
      01062  464725456060     
      01063  512426314325     
      01064  512426436721     
      01065  512562256326     
      01066  516060606060     
      01067  606060606060     
      01070  622563442544     
      01071  633143462342     
      01072  644724216325     
      01073  665126314325     
      01074  665126436721     
      01075  665126436760     
      01076  665166213163     
      01077  666060606060     
      01100  777700000000     
      01101  777777000000     

      01102 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  

    NO ERROR IN ABOVE ASSEMBLY
1PAGE 19                   LITERALS AND CROSS-REFERENCE LISTING FOR EDIOP                 17 HR 42 MN  9 SEC  3/01/68   

 DEFINITION SYMBOL REFERENCES       
        764      M    26,   27,  764
       1022     FN  1024
       1010     RD     6,   24,   25,   42,   61,   62,  160,  161,  210,  211, 1010
       1027     R.    20,   65,   72,   74,  165,  170,  203, 1027
       1032     W.   244,  340,  352,  354,  362,  421, 1032
       1014     WR   227,  254,  255,  260,  261,  331,  332,  377,  400,  414,  415,  426,  427,  433,  434, 1014
        652     X4     3,   35,   44,  150,  224,  263,  266,  300,  371,  403,  404,  435,  436,  474,  573,  632,  633
                     640,  652
         22    ARY   447,  453,  455, 1036, 1036
          3    BUF    67,  102,  112,  124,  125,  321,  322,  364,  544,  546,  552,  557,  560,  565,  601,  603,  617
                     651,  676,  704,  707, 1036
       1016    NEW   444,  451,  452,  461,  462,  471,  472, 1016
       1020    OLD   441,  466,  467, 1020
        665    PK1   665,  677
       1026    RB.    11,   15,  171,  177,  202, 1026
       1030    RE.    17,   76,  164,  201,  217,  221, 1030
          3    SWN     3,    3,  247, 1005
        773    TB4   132,  773,  774,  775,  776
       1005    WB1   333, 1005
       1031    WB.   232,  241,  344,  351,  407, 1031
       1033    WE.   246,  341,  357,  416, 1033
       1000   CRDF    73,   75,  356, 1000
        773   DTAB   307,  773
        511   ERX4   475,  476,  511
        721   OPEN    22,  252,  721,  777
        777   OPNC   522,  777
        654   PACK   275,  645,  654
        711   PKX4   654,  700,  706,  711
        641   PRC1   635,  641
        645   PRC2   642,  644,  645
       1002   RDBF    14, 1002
        112   RDC1   112,  121
        114   RDC2   114,  120
        556   RDJ1   556,  564
        676   RDLN     3,    3, 1002
        617   RDT1   617,  626
        621   RDT2   621,  625
        600   RDT3   600,  607
        570   RDX4   555,  570
        614   RLEN   577,  614
        624   RLIN   575,  624,  631
        222   RPRX   163,  222
       1004   SMBF   245, 1004
         22   TEMP  1036
          1   TNUM   127,  133,  135,  141,  143,  144,  145,  417,  422,  424,  431, 1036
        236   WBLN     3,    3, 1003
        432   WCL1   423,  432
       1003   WRBF   240, 1003
        275   WRC1   270,  272,  275
       1034   WRCT   250,  335,  337,  373, 1034, 1035
        354   WRCX   324,  354
        335   WRCY   327,  335
        351   WRCZ   342,  351
1PAGE 20                   LITERALS AND CROSS-REFERENCE LISTING FOR EDIOP                 17 HR 42 MN  9 SEC  3/01/68   

       1035   WRSW   251,  323,  325,  361,  370,  410, 1035
        660  BUFLN     3,    3,    3,    3,  204,  213,  262, 1001
        727  CLOSE   157,  432,  727
         16  CRDLN     3,    3,    3,   64,   67,  363,  364, 1000
        404  DFILE     3,    3,  404
        750  DOYOU   502,  750
          3  DSEEK     3,    3,    3
       1025  EOFCT    33,  205,  215,  220, 1025, 1026
        217  EOFRD   214,  217
          0  EOFSW   151,  206,  216, 1036
        162  ERRTN    10,   43,   54,  162,  231,  274,  406,  446,  464,  473,  505,  536
        726  FWAIT    60,  330,  413,  726
         12  GETRB    12,   16
        233  GETWB   233,  243
         21  MODES   457,  470, 1036
        706  PKBLK   706,  710
        701  PKEND   674,  701,  703
        674  PKLEN   662,  674
        667  PKLIN   656,  667,  675
        157  RCLOS    56,  157
        117  RDLIN    46,  117
        147  RDLNO    52,  147
        213  RDLOC   200,  213
        151  RDREC    77,  151
        101  RDUNP   101,  154,  156
        555  RDYES   503,  535,  555
        713  RESET     3,    3,  713
       1025  RWAIT    57,   63, 1026
        220  SMBLN     3,    3,  345,  402, 1004
        541  TIRX4   513,  514,  541
        417  WCLOS   411,  417
        734  WRFLX     3,    3,   41,  506,  636,  650,  734
        431  WRLC1   420,  431
        402  WRLOC   242,  402
       1034  WWAIT   326,  412, 1035
       1001 BUFCON   235, 1001
        722 BUFFER   257,  722
       2014 BUFSUM     3
        101 CHARSW   101,  107
        717 CHFILE     3,    3,  465,  717
        224 DASIGN     3,    3,  224
          2 DELETE   460
        716 DELFIL   716
        737 DORMNT   510,  737
       1024 ERRCOD    31,   36, 1024
        475 ERRTRA    40,  475
         36 ERSEEK    30,   36
        730 FERRTN   730
       1022 FILNAM  1022, 1024
        715 FSTATE   450,  715
        543 GETBUF    13,  234,  237,  543
        553 GETBX4   543,  547,  553
        732 GETMEM   545,  732
        720 IODIAG     3,    3,  720
1PAGE 21                   LITERALS AND CROSS-REFERENCE LISTING FOR EDIOP                 17 HR 42 MN  9 SEC  3/01/68   

        123 LENGTH    50,  123
        754 LOCKM1   534,  754
        740 LOCKMS   520,  527,  532,  740
        177 NOMOVE   166,  177
          2 NXTEOF    21,   34,   55,  155, 1036
        633 PRCARD     3,    3,  633
          0 PRNTER   500
         44 RDCARD     3,    3,   44
        137 RDDTBC   137,  146
        155 RDEOF1   152,  155
        723 RDFILE   207,  723
        736 RDFLXA   556,  600,  736
        573 RDTYPE     3,    3,  573
        436 RENAME     3,    3,  436
        163 RPRIME    32,  153,  163
       1006 SEQCHR   104,  320, 1006
          1 SETBCD   477,  530
        733 SETMEM   551,  733
       1007 SQCHR1   106,  315, 1007
        731 TILOCK   537,  731
        513 TIRRTN   513
        756 TRYMSG   507,  756
        714 UPDATE     3,    3,  714
        262 WBUFFS   236,  262
        264 WRCARD     3,    3,  264
        724 WRFILE   374,  724
        735 WRFLXA     3,    3,  501,  531,  533,  735
        725 WRWAIT   372,  425,  725
1       PRNTER - (DUMMY MODULE FOR THE ED COMMAND)                                               PAGE 1     
                  
                              *          (CALLS PRNTER VIA NEXCOM.)     
                       00000         ENTRY   PRNTER   
      00000 -0500 00 0 00005  PRNTER CAL     =HPRNTER 
      00001  0560 00 0 00003         LDQ     =O-71    
      00002  0101 00 0 00004         TIA     =HNEXCOM 
                                     END  
                  
        LITERALS  
      00003  400000000071     
      00004  452567234644     
      00005  475145632551     
1       PRNTER - (DUMMY MODULE FOR THE ED COMMAND)                                               PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          6 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          0 PRNTER     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




   EDA   BCD 05/10/69 1840.2   32929         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  EDITOR   MAD            04/23/69    1348.3
-                 
                 ..  EDIT BY CONTEXT PROGRAM.                                                          LM00001    
                                                                                                       LM00002    
                 ..  J. H. SALTZER, NOVEMBER, 1964.                                                    LM00003    
                 ..  LAST MODIFICATION, APRIL, 1967.                                                   LM00004    
                 ..  MODIFIED OCTOBER, 1967 BY PETER R. BOS                                            LM00005    
                 ..  TO ALLOW SETTING BREAK CHARACTER 'MCHNG'                                          LM00006    
                                                                                                       LM00007    
                 .. DECLARATIONS.                                                                      LM00008    
                                                                                                       LM00009    
                  VECTOR VALUES FENCE = 777777777777K                                             *001 LM00010    
                  VECTOR VALUES RETURN = 55K                                                      *002 LM00011    
                  VECTOR VALUES IN = $(INPUT$                                                     *003 LM00012    
                  VECTOR VALUES IN1 = $(INPT1$                                                    *004 LM00013    
                  VECTOR VALUES BRIEF = 0B                                                        *005 LM00014    
                  VECTOR VALUES OK = 0B                                                           *006 LM00015    
                  VECTOR VALUES BUFSIZ = 360                                                      *007 LM00016    
                  DIMENSION LINE(361), EDLIN(361)                                                 *008 LM00017    
                  DIMENSION REDS(1), BLACKS(1)                                                    *009 LM00018    
                  DIMENSION ATNAM(2)                                                              *010 LM00019    
                  NORMAL MODE IS INTEGER                                                          *011 LM00020    
                  BOOLEAN OK, GLOBAL, FSTPAS                                                      *012 LM00021    
                  BOOLEAN CHNG, CLRSW, BRIEF                                                      *013 LM00022    
                                                                                                       LM00023    
      . . .      . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                           LM00024    
                                                                                                       LM00025    
                 ..  INITIALIZATION.                                                                   LM00026    
                                                                                                       LM00027    
                  SECOND NAME OF INTERMEDIATE FILES NOW PROGNO                                         LM00028    
                                                                                                       LM00029    
                  WHOAMI.(ATNAM(2)...2)                                                           *014 LM00030    
                  FI = ATNAM(1)                                                                   *015 LM00031    
                  GETVAL.(BLANK, TAB, DEFALT, MCHNG, REDS(1), BLACKS(1))                          *016 LM00032    
                  CLRNAM.(IN, FI, CHN, 1B)                                                        *017 LM00033    
                  CLRNAM.(IN1, FI, CHN, 1B)                                                       *018 LM00034    
                  ASSIGN.(IN, FI)                                                                 *019 LM00035    
                  OLDNAM = COMARG.(1)                                                             *020 LM00036    
                  OLDSEC = DEFALT                                                                 *021 LM00037    
                  WHENEVER OLDNAM .E. FENCE, TRANSFER TO INSERT                                   *022 LM00038    
                  OLDSEC = COMARG.(2)                                                             *023 LM00039    
                  WHENEVER OLDSEC .E. FENCE, OLDSEC = DEFALT                                      *024 LM00040    
                  SEEK.(OLDNAM, OLDSEC, INSERT)                                                   *025 LM00041    
                  FSTPAS = 1B                                                                     *026 LM00042    
                  OK = 1B                                                                         *027 LM00043    
                                                                                                       LM00044    
                 ..  ENTER EDIT MODE.                                                                  LM00045    
                                                                                                       LM00046    
      EDIT        WHENEVER .NOT. BRIEF, PRINT COMMENT $0E1D1I1T$                                  *028 LM00047    
                                                                                                       LM00048    
                 ..  OBTAIN NEXT REQUEST.                                                              LM00049    
                                                                                                       LM00050    
      NXRQ        COUNT = TYPEIN.(EDLIN, BUFSIZ)                                                  *029 LM00051    
                  WHENEVER EDLIN(1) .E. MCHNG .AND. COUNT .L. 3                                   *030 LM00052    
                1      , TRANSFER TO INSERT                                                       *030 LM00053    
                  WHENEVER COUNT .L. 2, TRANSFER TO NXRQ                                          *031 LM00054    
                  EDCT = 0                                                                        *032 LM00055    
                  CWD = GET.(0)                                                                   *033 LM00056    
                                                                                                       LM00057    
                  WHENEVER CWD .E. $DELETE$ .OR. CWD .E. $     D$                                 *034 LM00058    
                    N = BIN.(GET.(0))                                                             *035 LM00059    
                    THROUGH DREAD, FOR I = 1, 1, I .GE. N                                         *036 LM00060    
       DREAD          LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *037 LM00061    
                    LENGTH = 0                                                                    *038 LM00062    
                                                                                                       LM00063    
                  OR WHENEVER CWD .E. $  NEXT$ .OR. CWD .E. $     N$                              *039 LM00064    
                    N = BIN.(GET.(0))                                                             *040 LM00065    
                    WHENEVER N .E. 0, N = 1                                                       *041 LM00066    
                    THROUGH NXT, FOR I = 1, 1, I .G. N                                            *042 LM00067    
                      WRITE.(LINE, LENGTH)                                                        *043 LM00068    
                      WHENEVER .NOT. OK, CLSOUT.                                                  *044 LM00069    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *045 LM00070    
       NXT            CONTINUE                                                                    *046 LM00071    
                                                                                                       LM00072    
                  OR WHENEVER CWD .E. $INSERT$ .OR. CWD .E. $     I$                              *047 LM00073    
                    WRITE.(LINE, LENGTH)                                                          *048 LM00074    
                    TRANSFER TO RETYPE                                                            *049 LM00075    
                                                                                                       LM00076    
      INSERT        WHENEVER .NOT. BRIEF, PRINT COMMENT $0I1N1P1U1T$                              *050 LM00077    
       INPUT        COUNT = TYPEIN.(EDLIN, BUFSIZ)                                                *051 LM00078    
                    WHENEVER COUNT .L. 3 .AND. EDLIN(1) .E. MCHNG                                 *052 LM00079    
                1      , TRANSFER TO EDIT                                                         *052 LM00080    
                    WRITE.(LINE, LENGTH)                                                          *053 LM00081    
                    THROUGH MVLP, FOR I = 1, 1, I .G. COUNT                                       *054 LM00082    
       MVLP           LINE(I) = EDLIN(I)                                                          *055 LM00083    
                    LENGTH = COUNT                                                                *056 LM00084    
                    TRANSFER TO INPUT                                                             *057 LM00085    
                                                                                                       LM00086    
                  OR WHENEVER CWD .E. $BOTTOM$ .OR. CWD .E. $     B$                              *058 LM00087    
                    WRITE.(LINE, LENGTH)                                                          *059 LM00088    
                    LENGTH = 0                                                                    *060 LM00089    
                    WHENEVER OK, BOTTOM.                                                          *061 LM00090    
                    TRANSFER TO INSERT                                                            *062 LM00091    
                                                                                                       LM00092    
                  OR WHENEVER CWD .E. $APPEND$ .OR. CWD .E. $     A$                              *063 LM00093    
                    WHENEVER LENGTH .G. 0, LENGTH = LENGTH - 1                                    *064 LM00094    
                    TRANSFER TO APPEND                                                            *065 LM00095    
                                                                                                       LM00096    
                  OR WHENEVER CWD .E. $RETYPE$ .OR. CWD .E. $     R$                              *066 LM00097    
       RETYPE       LENGTH = 0                                                                    *067 LM00098    
      APPEND        THROUGH RPLC, FOR EDCT = EDCT + 1, 1, EDCT .G. COUNT                          *068 LM00099    
                      LENGTH = LENGTH + 1                                                         *069 LM00100    
       RPLC           LINE(LENGTH) = EDLIN(EDCT)                                                  *070 LM00101    
                                                                                                       LM00102    
                  OR WHENEVER CWD .E. $ ERASE$ .OR. CWD .E. $     E$                              *071 LM00103    
                    WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETERS.(EDLIN(EDCT+1))                     *072 LM00104    
                                                                                                       LM00105    
                  OR WHENEVER CWD .E. $  KILL$ .OR. CWD .E. $     K$                              *073 LM00106    
                    WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETKIL.(EDLIN(EDCT+1))                     *074 LM00107    
                                                                                                       LM00108    
                 ..  MODIFICATION ALLOWS SETTING 'MCHNG'. PRB.                                         LM00109    
                                                                                                       LM00110    
                  OR WHENEVER CWD .E. $ BREAK$ .OR. CWD .E. $    BR$                              *075 LM00111    
                    WHENEVER EDLIN(EDCT) .E. RETURN                                               *076 LM00112    
                      MCHNG = RETURN                                                              *077 LM00113    
                    OR WHENEVER EDLIN(EDCT+1) .NE. BLANK                                          *078 LM00114    
                      MCHNG = EDLIN(EDCT+1)                                                       *079 LM00115    
                    END OF CONDITIONAL                                                            *080 LM00116    
                                                                                                       LM00117    
                  OR WHENEVER CWD .E. $VERIFY$ .OR. CWD .E. $     V$                              *081 LM00118    
                    CWD = GET.(0)                                                                 *082 LM00119    
                    WHENEVER CWD .E. $    ON$                                                     *083 LM00120    
                      BRIEF = 0B                                                                  *084 LM00121    
                    OR WHENEVER CWD .E. $   OFF$                                                  *085 LM00122    
                      BRIEF = 1B                                                                  *086 LM00123    
                    END OF CONDITIONAL                                                            *087 LM00124    
                                                                                                       LM00125    
                  OR WHENEVER CWD .E. $LOCATE$ .OR. CWD .E. $     L$                              *088 LM00126    
                    LOCATE = 1                                                                    *089 LM00127    
                    TRANSFER TO FIND                                                              *090 LM00128    
                                                                                                       LM00129    
                  OR WHENEVER CWD .E. $  FIND$ .OR. CWD .E. $     F$                              *091 LM00130    
                    LOCATE = 0                                                                    *092 LM00131    
      FIND          WHENEVER EDCT+1 .GE. COUNT                                                    *093 LM00132    
                      COUNT = OCOUNT                                                              *094 LM00133    
                      EDCT = EDCT + 1                                                             *095 LM00134    
                    END OF CONDITIONAL                                                            *096 LM00135    
                    OCOUNT = COUNT                                                                *097 LM00136    
       NTFND        WRITE.(LINE, LENGTH)                                                          *098 LM00137    
                    WHENEVER  .NOT. OK, CLSOUT.                                                   *099 LM00138    
                    LENGTH = READ.(LINE, BUFSIZ, EOF)                                             *100 LM00139    
                    THROUGH LOCSCN, FOR K=0, 1,K.G.LOCATE*(LENGTH-COUNT+EDCT)                     *101 LM00140    
                      J = K                                                                       *102 LM00141    
                      THROUGH LOOK, FOR I = EDCT+1, 1, I .GE. COUNT                               *103 LM00142    
                        J = J + 1                                                                 *104 LM00143    
       TAGN             WHENEVER LINE(J) .E. EDLIN(I), TRANSFER TO LOOK                           *105 LM00144    
                        WHENEVER (LINE(J).E. TAB) .AND. (EDLIN(I) .E. BLANK)                      *106 LM00145    
                1        , TRANSFER TO LOOK                                                       *106 LM00146    
                        WHENEVER EDLIN(I-1) .NE. BLANK .OR. I .E. EDCT + 1                        *107 LM00147    
                1        , TRANSFER TO LOCSCN                                                     *107 LM00148    
                        WHENEVER LINE(J) .NE. BLANK .AND. LINE(J) .NE. TAB                        *108 LM00149    
                1        , TRANSFER TO LOCSCN                                                     *108 LM00150    
                        J = J + 1                                                                 *109 LM00151    
                        TRANSFER TO TAGN                                                          *110 LM00152    
       LOOK             WHENEVER I .E. EDCT+1, FNDST = J                                          *111 LM00153    
                      FNDND = J                                                                   *112 LM00154    
                      WHENEVER .NOT. BRIEF, PRNT.(FNDST, FNDND)                                   *113 LM00155    
                      TRANSFER TO NXRQ                                                            *114 LM00156    
        LOCSCN        CONTINUE                                                                    *115 LM00157    
                    TRANSFER TO NTFND                                                             *116 LM00158    
                                                                                                       LM00159    
                  OR WHENEVER CWD .E. $ PRINT$ .OR. CWD .E. $     P$                              *117 LM00160    
                    NPRNT = BIN.(GET.(0))                                                         *118 LM00161    
      PNTLP         WHENEVER LENGTH .E. 0                                                         *119 LM00162    
                      PRINT COMMENT $0N1O0 1C1U1R1R1E1N1T0 1L1I1N1E0.$                            *120 LM00163    
                    OTHERWISE                                                                     *121 LM00164    
                      TYPOUT.(LINE, LENGTH)                                                       *122 LM00165    
                    END OF CONDITIONAL                                                            *123 LM00166    
                    NPRNT = NPRNT - 1                                                             *124 LM00167    
                    WHENEVER NPRNT .G. 0                                                          *125 LM00168    
                      WRITE.(LINE, LENGTH)                                                        *126 LM00169    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *127 LM00170    
                      TRANSFER TO PNTLP                                                           *128 LM00171    
                    END OF CONDITIONAL                                                            *129 LM00172    
                                                                                                       LM00173    
                  OR WHENEVER CWD .E. $   TOP$ .OR. CWD .E. $     T$                              *130 LM00174    
       TOPLP        WRITE.(LINE, LENGTH)                                                          *131 LM00175    
                    WHENEVER OK, BOTTOM.                                                          *132 LM00176    
                    CLSOUT.                                                                       *133 LM00177    
                                                                                                       LM00178    
                  OR WHENEVER CWD .E. $CHANGE$ .OR. CWD .E. $     C$                              *134 LM00179    
                                                                                                       LM00180    
      . . .       . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          LM00181    
                                                                                                       LM00182    
                 ..  DELINEATE QUOTED STRINGS.                                                         LM00183    
                                                                                                       LM00184    
                    EDCT = EDCT+1                                                                 *135 LM00185    
                    QUOTE = EDLIN(EDCT)                                                           *136 LM00186    
                    STR1 = EDCT                                                                   *137 LM00187    
      QLOOP         THROUGH QLOOP, FOR EDCT = EDCT+1, 1,                                          *138 LM00188    
                1      (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                             *138 LM00189    
                    STR2 = EDCT                                                                   *139 LM00190    
      QLOOP1        THROUGH QLOOP1, FOR EDCT = EDCT+1, 1,                                         *140 LM00191    
                1      (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                             *140 LM00192    
                    EST2 = EDCT                                                                   *141 LM00193    
                                                                                                       LM00194    
                 .. CHECK FOR ITERATION COUNT AND GLOBAL REQUEST.                                      LM00195    
                                                                                                       LM00196    
                    EDCT = EDCT + 1                                                               *142 LM00197    
                    TEM = 1                                                                       *143 LM00198    
                    GLOBAL = 0B                                                                   *144 LM00199    
      ARGLP         CWD = GET.(0)                                                                 *145 LM00200    
                    WHENEVER CWD .E. $ $                                                          *146 LM00201    
                      TRANSFER TO SHIFT                                                           *147 LM00202    
                    OR WHENEVER CWD .E. $     G$                                                  *148 LM00203    
                      WHENEVER STR2 .NE. STR1+1, GLOBAL = 1B                                      *149 LM00204    
                    OTHERWISE                                                                     *150 LM00205    
                      TEM = BIN.(CWD)                                                             *151 LM00206    
                    END OF CONDITIONAL                                                            *152 LM00207    
                    TRANSFER TO ARGLP                                                             *153 LM00208    
                                                                                                       LM00209    
                 .. SHIFT LINE TO BOTTOM OF BUFFER.                                                    LM00210    
                                                                                                       LM00211    
       SHIFT        THROUGH MVDWN, FOR I = LENGTH, -1, I .L. 1                                    *154 LM00212    
      MVDWN           LINE(BUFSIZ+I-LENGTH) = LINE(I)                                             *155 LM00213    
                    DOWN = BUFSIZ-LENGTH+1                                                        *156 LM00214    
                    UP = 0                                                                        *157 LM00215    
                    CHNG = 0B                                                                     *158 LM00216    
                    CHST = LENGTH + 1                                                             *159 LM00217    
                    CHEND = LENGTH                                                                *160 LM00218    
                                                                                                       LM00219    
                 .. SEARCH FOR PRESENCE OF FIRST STRING.                                               LM00220    
                                                                                                       LM00221    
      SRCHLP        UP = UP + 1                                                                   *161 LM00222    
      SRTST           WHENEVER DOWN .G. BUFSIZ, TRANSFER TO GIVUP                                 *162 LM00223    
                      J = DOWN                                                                    *163 LM00224    
                      THROUGH COMPAR, FOR I = STR1+1, 1, I .GE. STR2                              *164 LM00225    
                        WHENEVER J .GE. BUFSIZ, TRANSFER TO GIVUP                                 *165 LM00226    
                        WHENEVER EDLIN(I) .NE. LINE(J), TRANSFER TO NOCOMP                        *166 LM00227    
       COMPAR           J = J + 1                                                                 *167 LM00228    
                      TRANSFER TO STFND                                                           *168 LM00229    
                                                                                                       LM00230    
      NOCOMP          LINE(UP) = LINE(DOWN)                                                       *169 LM00231    
                      DOWN = DOWN + 1                                                             *170 LM00232    
                    TRANSFER TO SRCHLP                                                            *171 LM00233    
                                                                                                       LM00234    
                 .. STRING FOUND, REPLACE WITH SECOND STRING.                                          LM00235    
                                                                                                       LM00236    
      STFND         CHNG = 1B                                                                     *172 LM00237    
                    DOWN = DOWN + (STR2-STR1-1)                                                   *173 LM00238    
                    CHST = UP                                                                     *174 LM00239    
                    THROUGH REPLAC, FOR I = STR2 + 1, 1, I .GE. EST2                              *175 LM00240    
                      LINE(UP) = EDLIN(I)                                                         *176 LM00241    
                      UP = UP + 1                                                                 *177 LM00242    
       REPLAC         WHENEVER UP .G. DOWN, TRANSFER TO GIVUP                                     *178 LM00243    
                    CHEND = UP - 1                                                                *179 LM00244    
                    WHENEVER GLOBAL, TRANSFER TO SRTST                                            *180 LM00245    
                                                                                                       LM00246    
                 .. MOVE REST OF LINE BACK UP.                                                         LM00247    
                                                                                                       LM00248    
      GIVUP         THROUGH FILOUT, FOR UP = UP, 1, DOWN .G. BUFSIZ                               *181 LM00249    
                      LINE(UP) = LINE(DOWN)                                                       *182 LM00250    
      FILOUT          DOWN = DOWN + 1                                                             *183 LM00251    
                    LENGTH = UP - 1                                                               *184 LM00252    
                    TEM = TEM - 1                                                                 *185 LM00253    
                    WHENEVER .NOT. BRIEF .AND. (TEM .G. 0 .THEN. CHNG)                            *186 LM00254    
                1        , PRNT.(CHST, CHEND)                                                     *186 LM00255    
                    CANON.(LINE, LENGTH, BUFSIZ)                                                  *187 LM00256    
                    WHENEVER TEM .G. 0                                                            *188 LM00257    
                      WRITE.(LINE, LENGTH)                                                        *189 LM00258    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *190 LM00259    
                      TRANSFER TO SHIFT                                                           *191 LM00260    
                    END OF CONDITIONAL                                                            *192 LM00261    
                                                                                                       LM00262    
      . . . .     . . . . . . . . . . . . . . . . . . . . . . . . . . . .                              LM00263    
                                                                                                       LM00264    
                  OR WHENEVER CWD .E. $ SPLIT$ .OR. CWD .E. $     S$                              *193 LM00265    
                    TOPNAM = GET.(0)                                                              *194 LM00266    
                    WHENEVER TOPNAM .E. $ $, TRANSFER TO NONAME                                   *195 LM00267    
                    WHENEVER TOPNAM .E. OLDNAM .AND. FSTPAS                                       *196 LM00268    
      NEWNM           PRINT COMMENT $0P1L1E1A1S1E0 1U1S1E0 1A1N1O1T1H1E1R0 1N1A                   *197 LM00269    
                1 1M1E0.$                                                                         *197 LM00270    
                      TRANSFER TO NXRQ                                                            *198 LM00271    
                    END OF CONDITIONAL                                                            *199 LM00272    
                    SECNAM = GET.(0)                                                              *200 LM00273    
                  WHENEVER SECNAM .E. $ $, SECNAM = OLDSEC                                        *201 LM00274    
                    CLRNAM.(TOPNAM, SECNAM, NEWNM, 1B)                                            *202 LM00275    
                    CLOSEW.                                                                       *203 LM00276    
                    RENAME.(IN, FI, TOPNAM, SECNAM)                                               *204 LM00277    
                    ASSIGN.(IN, FI)                                                               *205 LM00278    
                    OLDNAM = FENCE                                                                *206 LM00279    
                    TRANSFER TO TOPLP                                                             *207 LM00280    
                                                                                                       LM00281    
                  OR WHENEVER CWD .E. $  QUIT$ .OR. CWD .E. $     Q$                              *208 LM00282    
                    ENDRD.                                                                        *209 LM00283    
                    CLOSEW.                                                                       *210 LM00284    
                    DELFIL.(IN1, FI, DLQ1)                                                        *211 LM00285    
      DLQ1          DELFIL.(IN, FI, DLQ2)                                                         *212 LM00286    
      DLQ2          TRANSFER TO CHN                                                               *213 LM00287    
                                                                                                       LM00288    
                  OR WHENEVER CWD .E. $  FILE$                                                    *214 LM00289    
                    PRINAM = GET.(0)                                                              *215 LM00290    
                    CLRSW = 1B                                                                    *216 LM00291    
                    WHENEVER PRINAM .E. $ $                                                       *217 LM00292    
                      PRINAM = OLDNAM                                                             *218 LM00293    
                      SECNAM = OLDSEC                                                             *219 LM00294    
                      CLRSW = 0B                                                                  *220 LM00295    
                    OTHERWISE                                                                     *221 LM00296    
                      SECNAM = GET.(0)                                                            *222 LM00297    
                      WHENEVER SECNAM .E. $ $                                                     *223 LM00298    
                        SECNAM = OLDSEC                                                           *224 LM00299    
                      END OF CONDITIONAL                                                          *225 LM00300    
                    END OF CONDITIONAL                                                            *226 LM00301    
                    WHENEVER PRINAM .E. FENCE                                                     *227 LM00302    
      NONAME          PRINT COMMENT $0N1O0 1F1I1L1E0 1N1A1M1E0 1G1I1V1E1N0.$                      *228 LM00303    
                      TRANSFER TO NXRQ                                                            *229 LM00304    
                    END OF CONDITIONAL                                                            *230 LM00305    
                    WRITE.(LINE, LENGTH)                                                          *231 LM00306    
                    LENGTH = 0                                                                    *232 LM00307    
                    WHENEVER OK, BOTTOM.                                                          *233 LM00308    
                    CLRNAM.(PRINAM, SECNAM, NEWNM, CLRSW)                                         *234 LM00309    
                    CLOSEW.                                                                       *235 LM00310    
                    DELFIL.(IN1, FI, DL1)                                                         *236 LM00311    
      DL1           RENAME.(IN, FI, PRINAM, SECNAM)                                               *237 LM00312    
      CHN           EXIT.                                                                         *238 LM00313    
                                                                                                       LM00314    
                  OTHERWISE                                                                       *239 LM00315    
                    PRINT COMMENT $0N1O1T0 1A0 1R1E1Q1U1E1S1T0:$                                  *240 LM00316    
                    TYPOUT.(EDLIN, COUNT)                                                         *241 LM00317    
                                                                                                       LM00318    
                  END OF CONDITIONAL                                                              *242 LM00319    
                  TRANSFER TO NXRQ                                                                *243 LM00320    
                                                                                                       LM00321    
      EOF         PRINTCOMMENT $0E1N1D0 1O1F0 1F1I1L1E0 1R1E1A1C1H1E1D0 1B1Y0:$                   *244 LM00322    
                  TYPOUT.(EDLIN, COUNT)                                                           *245 LM00323    
                  LENGTH = 0                                                                      *246 LM00324    
                  OK = 0B                                                                         *247 LM00325    
                  TRANSFER TO NXRQ                                                                *248 LM00326    
                                                                                                       LM00327    
                 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                           LM00328    
                                                                                                       LM00329    
                 .. SUBROUTINES.                                                                       LM00330    
                                                                                                       LM00331    
       CLSOUT.   .. FUNCTION TO MOVE POINTER BACK TO TOP OF FILE.                                      LM00332    
                                                                                                       LM00333    
                  INTERNAL FUNCTION                                                               *249 LM00334    
                  ENTRY TO CLSOUT.                                                                *250 LM00335    
                    CLOSEW.                                                                       *251 LM00336    
                    DELFIL.(IN1, FI, DL2)                                                         *252 LM00337    
      DL2           CHFILE.(IN, FI, -0, IN1)                                                      *253 LM00338    
                    SEEK.(IN1, FI, CHN)                                                           *254 LM00339    
                    ASSIGN.(IN, FI)                                                               *255 LM00340    
                    OK = 1B                                                                       *256 LM00341    
                    LENGTH = 0                                                                    *257 LM00342    
                    FSTPAS = 0B                                                                   *258 LM00343    
                    FUNCTION RETURN                                                               *259 LM00344    
                  END OF FUNCTION                                                                 *260 LM00345    
                                                                                                       LM00346    
        GET.     .. FUNCTION TO OBTAIN ARGUMENT WORD IN HOLLERITH.                                     LM00347    
                                                                                                       LM00348    
                  INTERNAL FUNCTION                                                               *261 LM00349    
                  ENTRY TO GET.                                                                   *262 LM00350    
                    WORD = $ $                                                                    *263 LM00351    
      SCANLP        THROUGH SCANLP, FOR EDCT = EDCT, 1,                                           *264 LM00352    
                1   (EDLIN(EDCT+1).NE.BLANK) .OR. (EDCT+1.GE.COUNT)                               *264 LM00353    
       GTLP         EDCT = EDCT + 1                                                               *265 LM00354    
                    WHENEVER EDLIN(EDCT) .E. BLANK, FUNCTION RETURN WORD                          *266 LM00355    
                    WHENEVER EDLIN(EDCT) .E. TAB .OR. EDCT .GE. COUNT                             *267 LM00356    
                      EDCT = EDCT - 1                                                             *268 LM00357    
                      FUNCTION RETURN WORD                                                        *269 LM00358    
                    END OF CONDITIONAL                                                            *270 LM00359    
                    WORD = (WORD .LS. 6) .V. HOL.(EDLIN(EDCT))                                    *271 LM00360    
                    TRANSFER TO GTLP                                                              *272 LM00361    
                  END OF FUNCTION                                                                 *273 LM00362    
                                                                                                       LM00363    
       PRNT.     ..  FUNCTION TO PRINT A LINE WITH COLOR SHIFTS.                                       LM00364    
                                                                                                       LM00365    
                  INTERNAL FUNCTION(STAR, EN)                                                     *274 LM00366    
                  ENTRY TO PRNT.                                                                  *275 LM00367    
                    TYPOUT.(LINE, STAR-1)                                                         *276 LM00368    
                    TYPOUT.(REDS, 1)                                                              *277 LM00369    
                    TYPOUT.(LINE(STAR-1), EN-STAR+1)                                              *278 LM00370    
                    TYPOUT.(BLACKS, 1)                                                            *279 LM00371    
                    TYPOUT.(LINE(EN), LENGTH-EN)                                                  *280 LM00372    
                    FUNCTION RETURN                                                               *281 LM00373    
                  END OF FUNCTION                                                                 *282 LM00374    
                                                                                                       LM00375    
                  END OF PROGRAM                                                                  *283 LM00376    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   03713 TRANSFER VECTOR LENGTH  00030 PROGRAM BEGINS    01555
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      APPEND 00034   4        DLQ1   00041   4        GTLP   00047   4        NONAME 00056   4        RETYPE 00062   4  
      ARGLP  00035   4        DLQ2   00042   4        IN1    00673 A 1        NPRNT  01455   1        RPLC   00033   4  
      ATNAM  00073 A 1        DOWN   00110   1        INPUT  00050   4        N      01456   1        SCANLP 00033   4  
      BLACKS 00075 A 1        DREAD  00033   4        IN     00674 A 1        NTFND  00057   4        SECNAM 01470   1  
      BLANK  00076   1        EDCT   00111   1        INSERT 00051   4        NXRQ   00060   4        SHIFT  00063   4  
      BRIEF  00077 A 2        EDIT   00043   4        I      00675   1        NXT    00033   4        SRCHLP 00064   4  
      BUFSIZ 00100 A 1        EDLIN  00663 A 1        J      00676   1        OCOUNT 01457   1        SRTST  00065   4  
      CHEND  00101   1        EOF    00044   4        K      00677   1        OK     01460 A 2        STFND  00066   4  
      CHNG   00102   2        EST2   00664   1        LENGTH 00700   1        OLDNAM 01461   1        STR1   01471   1  
      CHN    00036   4        FENCE  00665 A 1        LINE   01452 A 1        OLDSEC 01462   1        STR2   01472   1  
      CHST   00103   1        FILOUT 00033   4        LOCATE 01453   1        PNTLP  00061   4        TAB    01473   1  
      CLRSW  00104   2        FIND   00045   4        LOCSCN 00052   4        PRINAM 01463   1        TAGN   00067   4  
      COMPAR 00033   4        FI     00666   1        LOOK   00053   4        QLOOP1 00033   4        TEM    01474   1  
      COUNT  00105   1        FNDND  00667   1        MCHNG  01454   1        QLOOP  00033   4        TOPLP  00070   4  
      CWD    00106   1        FNDST  00670   1        MVDWN  00033   4        QUOTE  01464   1        TOPNAM 01475   1  
      DEFALT 00107   1        FSTPAS 00671   2        MVLP   00033   4        REDS   01466 A 1        UP     01476   1  
      DL1    00037   4        GIVUP  00046   4        NEWNM  00054   4        REPLAC 00033   4        WORD   01477   1  
      DL2    00040   4        GLOBAL 00672   2        NOCOMP 00055   4        RETURN 01467 A 1                          
0FUNCTION DICTIONARY    
      ASSIGN 00000   1        BIN    00001   1        BOTTOM 00002   1        CANON  00003   1        CHFILE 00004   1  
      CLOSEW 00005   1        CLRNAM 00006   1        COMARG 00007   1        DELFIL 00010   1        ENDRD  00011   1  
      EXIT   00012   1        GETVAL 00013   1        HOL    00014   1        .PCOMT 00015   1        .SETUP 00016   1  
      READ   00017   1        RENAME 00020   1        SEEK   00021   1        SETERS 00022   1        SETKIL 00023   1  
      TYPEIN 00024   1        TYPOUT 00025   1        WHOAMI 00026   1        WRITE  00027   1        CLSOUT 00030   1  
      GET    00031   1        PRNT   00032   1                                                                          
0ABSOLUTE CONSTANTS     
 01504 +000000000006     01520 -206026314325     01524 -206050643163     01544 -206060606050     01553 -206247433163    
 01547 -206060606062     01536 -206060606027     01546 -206060606060     01510 +233021452725     01532 -206060606023    
 01552 -206060634647     01550 -206060606063     01517 -204751314563     01543 -206060606047     01521 -206026314524    
 01535 -206060606026     01513 -034623216325     01541 -206060606043     01525 -206060462626     01527 -206060604645    
 01554 -252551312670     01551 -206060606065     01515 -202251252142     01526 -206060602251     01522 -206042314343    
 01540 -206060606042     01516 -202551216225     01534 -206060606025     01514 -112563704725     01545 -206060606051    
 01505 +214747254524     01530 -206060606021     01506 +224663634644     01531 -206060606022     01512 +314562255163    
 01537 -206060606031     01523 -206045256763     01542 -206060606045     01511 +242543256325     01533 -206060606024    
 01500 +000000000000     01503 +000000000003     01502 +000000000002     01501 +000000000001     01507 +233000000000    
0STATEMENT DICTIONARY   
 00034 TXL -302146002133       00035 TXL -302676002673       00036 TXL -303402003401       00037 TXL -303401003374      
 00040 TXL -303460003451       00041 TXL -303301003275       00042 TXL -303302003301       00043 TXL -301645001637      
 00044 TXL -303430003416       00045 TXL -302334002327       00046 TXL -303117003105       00047 TXL -303543003540      
 00050 TXL -302026002022       00051 TXL -302022002014       00052 TXL -302506002505       00053 TXL -302475002465      
 00054 TXL -303226003214       00055 TXL -303032003026       00056 TXL -303351003340       00057 TXL -302346002343      
 00060 TXL -301651001645       00061 TXL -302527002524       00062 TXL -302133002131       00063 TXL -302734002722      
 00064 TXL -302764002761       00065 TXL -302771002764       00066 TXL -303040003036       00067 TXL -302424002416      
 00070 TXL -302575002572                                                                                                
0PROGRAM    
                 VECTOR VALUES FENCE = 777777777777K                                001  LM00010
 01555 TSX +0 07400 4 00016    00665     -3 77777 7 77777                                                               
                 VECTOR VALUES RETURN = 55K                                         002  LM00011
 01467     +0 00000 0 00055                                                                                             
                 VECTOR VALUES IN = $(INPUT$                                        003  LM00012
 00674     -3 43145 4 76463                                                                                             
                 VECTOR VALUES IN1 = $(INPT1$                                       004  LM00013
 00673     -3 43145 4 76301                                                                                             
                 VECTOR VALUES BRIEF = 0B                                           005  LM00014
 00077     +0 00000 0 00000                                                                                             
                 VECTOR VALUES OK = 0B                                              006  LM00015
 01460     +0 00000 0 00000                                                                                             
                 VECTOR VALUES BUFSIZ = 360                                         007  LM00016
 00100     +0 00000 0 00550                                                                                             
                 DIMENSION LINE(361), EDLIN(361)                                    008  LM00017
                 DIMENSION REDS(1), BLACKS(1)                                       009  LM00018
                 D'N ATNAM(2)                                                       010  LM00019
                 NORMAL MODE IS INTEGER                                             011  LM00020
                 BOOLEAN OK, GLOBAL, FSTPAS                                         012  LM00021
                 BOOLEAN CHNG, CLRSW, BRIEF                                         013  LM00022
                 WHOAMI.(ATNAM(2)...2)                                              014  LM00030
 01556 TSX +0 07400 4 00026    01557 TIX +2 01502 0 00071                                                               
                 FI = ATNAM(1)                                                      015  LM00031
 01560 CLA +0 50000 0 00072    01561 STO +0 60100 0 00666                                                               
                 GETVAL.(BLANK, TAB, DEFALT, MCHNG, REDS(1), BLACKS(1))             016  LM00032
 01562 TSX +0 07400 4 00013    01563 TXH +3 00000 0 00076    01564 TXH +3 00000 0 01473    01565 TXH +3 00000 0 00107   
 01566 TXH +3 00000 0 01454    01567 TXH +3 00000 0 01465    01570 TXH +3 00000 0 00074                                 
                 CLRNAM.(IN, FI, CHN, 1B)                                           017  LM00033
 01571 TSX +0 07400 4 00006    01572 TXH +3 00000 0 00674    01573 TXH +3 00000 0 00666    01574 TXH +3 00000 0 00036   
 01575 TXH +3 00000 0 01501                                                                                             
                 CLRNAM.(IN1, FI, CHN, 1B)                                          018  LM00034
 01576 TSX +0 07400 4 00006    01577 TXH +3 00000 0 00673    01600 TXH +3 00000 0 00666    01601 TXH +3 00000 0 00036   
 01602 TXH +3 00000 0 01501                                                                                             
                 ASSIGN.(IN, FI)                                                    019  LM00035
 01603 TSX +0 07400 4 00000    01604 TXH +3 00000 0 00674    01605 TXH +3 00000 0 00666                                 
                 OLDNAM = COMARG.(1)                                                020  LM00036
 01606 TSX +0 07400 4 00007    01607 TXH +3 00000 0 01501    01610 STO +0 60100 0 01461                                 
                 OLDSEC = DEFALT                                                    021  LM00037
 01611 CLA +0 50000 0 00107    01612 STO +0 60100 0 01462                                                               
                 WHENEVER OLDNAM .E. FENCE, TRANSFER TO INSERT                      022  LM00038
 01613 CLA +0 50000 0 01461    01614 SUB +0 40200 0 00665    01615 TNZ -0 10000 0 01617    01616 TRA +0 02000 0 00051   
                 OLDSEC = COMARG.(2)                                                023  LM00039
 01617 TSX +0 07400 4 00007    01620 TXH +3 00000 0 01502    01621 STO +0 60100 0 01462                                 
                 WHENEVER OLDSEC .E. FENCE, OLDSEC = DEFALT                         024  LM00040
 01622 CLA +0 50000 0 01462    01623 SUB +0 40200 0 00665    01624 TNZ -0 10000 0 01627    01625 CLA +0 50000 0 00107   
 01626 STO +0 60100 0 01462                                                                                             
                 SEEK.(OLDNAM, OLDSEC, INSERT)                                      025  LM00041
 01627 TSX +0 07400 4 00021    01630 TXH +3 00000 0 01461    01631 TXH +3 00000 0 01462    01632 TXH +3 00000 0 00051   
                 FSTPAS = 1B                                                        026  LM00042
 01633 CLA +0 50000 0 01501    01634 STO +0 60100 0 00671                                                               
                 OK = 1B                                                            027  LM00043
 01635 CLA +0 50000 0 01501    01636 STO +0 60100 0 01460                                                               
      EDIT       WHENEVER .NOT. BRIEF, PRINT COMMENT $0E1D1I1T$                     028  LM00047
 01637 ZET +0 52000 0 00077    01640 TRA +0 02000 0 01645    01641 TSX +0 07400 4 00015    01642     +0 00000 0 00002   
 01643     +0 02501 2 40131    01644     +0 16360 6 06060                                                               
      NXRQ       COUNT = TYPEIN.(EDLIN, BUFSIZ)                                     029  LM00051
 01645 TSX +0 07400 4 00024    01646 TXH +3 00000 0 00663    01647 TXH +3 00000 0 00100    01650 STO +0 60100 0 00105   
                 WHENEVER EDLIN(1) .E. MCHNG .AND. COUNT .L. 3                      030  LM00052
                1     , TRANSFER TO INSERT                                          030  LM00053
 01651 CLA +0 50000 0 00105    01652 SUB +0 40200 0 01503    01653 TZE +0 10000 0 01661    01654 TPL +0 12000 0 01661   
 01655 CLA +0 50000 0 00662    01656 SUB +0 40200 0 01454    01657 TNZ -0 10000 0 01661    01660 TRA +0 02000 0 00051   
                 WHENEVER COUNT .L. 2, TRANSFER TO NXRQ                             031  LM00054
 01661 CLA +0 50000 0 00105    01662 SUB +0 40200 0 01502    01663 TZE +0 10000 0 01666    01664 TPL +0 12000 0 01666   
 01665 TRA +0 02000 0 00060                                                                                             
                 EDCT = 0                                                           032  LM00055
 01666 CLA +0 50000 0 01500    01667 STO +0 60100 0 00111                                                               
                 CWD = GET.(0)                                                      033  LM00056
 01670 TSX +0 07400 4 00031    01671 TXH +3 00000 0 01500    01672 STO +0 60100 0 00106                                 
                 WHENEVER CWD .E. $DELETE$ .OR. CWD .E. $     D$                    034  LM00058
 01673 CLA +0 50000 0 00106    01674 SUB +0 40200 0 01533    01675 TZE +0 10000 0 01701    01676 CLA +0 50000 0 00106   
 01677 SUB +0 40200 0 01511    01700 TNZ -0 10000 0 01732                                                               
                   N = BIN.(GET.(0))                                                035  LM00059
 01701 TSX +0 07400 4 00031    01702 TXH +3 00000 0 01500    01703 STO +0 60100 0 03710    01704 TSX +0 07400 4 00001   
 01705 TXH +3 00000 0 03710    01706 STO +0 60100 0 01456                                                               
                   THROUGH DREAD, FOR I = 1, 1, I .GE. N                            036  LM00060
 01707 CLA +0 50000 0 01501    01710 STO +0 60100 0 00675    01711 TRA +0 02000 0 01715    01712 CLA +0 50000 0 00675   
 01713 ADD +0 40000 0 01501    01714 STO +0 60100 0 00675    01715 CLA +0 50000 0 00675    01716 SUB +0 40200 0 01456   
 01717 TZE +0 10000 0 01727    01720 TPL +0 12000 0 01727                                                               
       DREAD         LENGTH = READ.(LINE, BUFSIZ, EOF)                              037  LM00061
 01721 TSX +0 07400 4 00017    01722 TXH +3 00000 0 01452    01723 TXH +3 00000 0 00100    01724 TXH +3 00000 0 00044   
 01725 STO +0 60100 0 00700    01726 TRA +0 02000 0 01712                                                               
                   LENGTH = 0                                                       038  LM00062
 01727 CLA +0 50000 0 01500    01730 STO +0 60100 0 00700                                                               
                 OR WHENEVER CWD .E. $  NEXT$ .OR. CWD .E. $     N$                 039  LM00064
 01731 TRA +0 02000 0 03415    01732 CLA +0 50000 0 00106    01733 SUB +0 40200 0 01542    01734 TZE +0 10000 0 01740   
 01735 CLA +0 50000 0 00106    01736 SUB +0 40200 0 01523    01737 TNZ -0 10000 0 02002                                 
                   N = BIN.(GET.(0))                                                040  LM00065
 01740 TSX +0 07400 4 00031    01741 TXH +3 00000 0 01500    01742 STO +0 60100 0 03710    01743 TSX +0 07400 4 00001   
 01744 TXH +3 00000 0 03710    01745 STO +0 60100 0 01456                                                               
                   WHENEVER N .E. 0, N = 1                                          041  LM00066
 01746 CLA +0 50000 0 01456    01747 SUB +0 40200 0 01500    01750 TNZ -0 10000 0 01753    01751 CLA +0 50000 0 01501   
 01752 STO +0 60100 0 01456                                                                                             
                   THROUGH NXT, FOR I = 1, 1, I .G. N                               042  LM00067
 01753 CLA +0 50000 0 01501    01754 STO +0 60100 0 00675    01755 TRA +0 02000 0 01761    01756 CLA +0 50000 0 00675   
 01757 ADD +0 40000 0 01501    01760 STO +0 60100 0 00675    01761 CLA +0 50000 0 00675    01762 SUB +0 40200 0 01456   
 01763 TZE +0 10000 0 01765    01764 TPL +0 12000 0 02001                                                               
                     WRITE.(LINE, LENGTH)                                           043  LM00068
 01765 TSX +0 07400 4 00027    01766 TXH +3 00000 0 01452    01767 TXH +3 00000 0 00700                                 
                     WHENEVER .NOT. OK, CLSOUT.                                     044  LM00069
 01770 ZET +0 52000 0 01460    01771 TRA +0 02000 0 01773    01772 TSX +0 07400 4 00030                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              045  LM00070
 01773 TSX +0 07400 4 00017    01774 TXH +3 00000 0 01452    01775 TXH +3 00000 0 00100    01776 TXH +3 00000 0 00044   
 01777 STO +0 60100 0 00700                                                                                             
       NXT           CONTINUE                                                       046  LM00071
 02000 TRA +0 02000 0 01756                                                                                             
                 OR WHENEVER CWD .E. $INSERT$ .OR. CWD .E. $     I$                 047  LM00073
 02001 TRA +0 02000 0 03415    02002 CLA +0 50000 0 00106    02003 SUB +0 40200 0 01537    02004 TZE +0 10000 0 02010   
 02005 CLA +0 50000 0 00106    02006 SUB +0 40200 0 01512    02007 TNZ -0 10000 0 02064                                 
                   WRITE.(LINE, LENGTH)                                             048  LM00074
 02010 TSX +0 07400 4 00027    02011 TXH +3 00000 0 01452    02012 TXH +3 00000 0 00700                                 
                   TRANSFER TO RETYPE                                               049  LM00075
 02013 TRA +0 02000 0 00062                                                                                             
      INSERT       WHENEVER .NOT. BRIEF, PRINT COMMENT $0I1N1P1U1T$                 050  LM00077
 02014 ZET +0 52000 0 00077    02015 TRA +0 02000 0 02022    02016 TSX +0 07400 4 00015    02017     +0 00000 0 00002   
 02020     +0 03101 4 50147    02021     +0 16401 6 36060                                                               
       INPUT       COUNT = TYPEIN.(EDLIN, BUFSIZ)                                   051  LM00078
 02022 TSX +0 07400 4 00024    02023 TXH +3 00000 0 00663    02024 TXH +3 00000 0 00100    02025 STO +0 60100 0 00105   
                   WHENEVER COUNT .L. 3 .AND. EDLIN(1) .E. MCHNG                    052  LM00079
                1     , TRANSFER TO EDIT                                            052  LM00080
 02026 CLA +0 50000 0 00662    02027 SUB +0 40200 0 01454    02030 TNZ -0 10000 0 02036    02031 CLA +0 50000 0 00105   
 02032 SUB +0 40200 0 01503    02033 TZE +0 10000 0 02036    02034 TPL +0 12000 0 02036    02035 TRA +0 02000 0 00043   
                   WRITE.(LINE, LENGTH)                                             053  LM00081
 02036 TSX +0 07400 4 00027    02037 TXH +3 00000 0 01452    02040 TXH +3 00000 0 00700                                 
                   THROUGH MVLP, FOR I = 1, 1, I .G. COUNT                          054  LM00082
 02041 CLA +0 50000 0 01501    02042 STO +0 60100 0 00675    02043 TRA +0 02000 0 02047    02044 CLA +0 50000 0 00675   
 02045 ADD +0 40000 0 01501    02046 STO +0 60100 0 00675    02047 CLA +0 50000 0 00675    02050 SUB +0 40200 0 00105   
 02051 TZE +0 10000 0 02053    02052 TPL +0 12000 0 02060                                                               
       MVLP          LINE(I) = EDLIN(I)                                             055  LM00083
 02053 LXA +0 53400 1 00675    02054 LXA +0 53400 2 00675    02055 CLA +0 50000 2 00663    02056 STO +0 60100 1 01452   
 02057 TRA +0 02000 0 02044                                                                                             
                   LENGTH = COUNT                                                   056  LM00084
 02060 CLA +0 50000 0 00105    02061 STO +0 60100 0 00700                                                               
                   TRANSFER TO INPUT                                                057  LM00085
 02062 TRA +0 02000 0 00050                                                                                             
                 OR WHENEVER CWD .E. $BOTTOM$ .OR. CWD .E. $     B$                 058  LM00087
 02063 TRA +0 02000 0 03415    02064 CLA +0 50000 0 00106    02065 SUB +0 40200 0 01531    02066 TZE +0 10000 0 02072   
 02067 CLA +0 50000 0 00106    02070 SUB +0 40200 0 01506    02071 TNZ -0 10000 0 02104                                 
                   WRITE.(LINE, LENGTH)                                             059  LM00088
 02072 TSX +0 07400 4 00027    02073 TXH +3 00000 0 01452    02074 TXH +3 00000 0 00700                                 
                   LENGTH = 0                                                       060  LM00089
 02075 CLA +0 50000 0 01500    02076 STO +0 60100 0 00700                                                               
                   WHENEVER OK, BOTTOM.                                             061  LM00090
 02077 NZT -0 52000 0 01460    02100 TRA +0 02000 0 02102    02101 TSX +0 07400 4 00002                                 
                   TRANSFER TO INSERT                                               062  LM00091
 02102 TRA +0 02000 0 00051                                                                                             
                 OR WHENEVER CWD .E. $APPEND$ .OR. CWD .E. $     A$                 063  LM00093
 02103 TRA +0 02000 0 03415    02104 CLA +0 50000 0 00106    02105 SUB +0 40200 0 01530    02106 TZE +0 10000 0 02112   
 02107 CLA +0 50000 0 00106    02110 SUB +0 40200 0 01505    02111 TNZ -0 10000 0 02123                                 
                   WHENEVER LENGTH .G. 0, LENGTH = LENGTH - 1                       064  LM00094
 02112 CLA +0 50000 0 00700    02113 SUB +0 40200 0 01500    02114 TZE +0 10000 0 02121    02115 TMI -0 12000 0 02121   
 02116 CLA +0 50000 0 00700    02117 SUB +0 40200 0 01501    02120 STO +0 60100 0 00700                                 
                   TRANSFER TO APPEND                                               065  LM00095
 02121 TRA +0 02000 0 00034                                                                                             
                 OR WHENEVER CWD .E. $RETYPE$ .OR. CWD .E. $     R$                 066  LM00097
 02122 TRA +0 02000 0 03415    02123 CLA +0 50000 0 00106    02124 SUB +0 40200 0 01545    02125 TZE +0 10000 0 02131   
 02126 CLA +0 50000 0 00106    02127 SUB +0 40200 0 01514    02130 TNZ -0 10000 0 02157                                 
       RETYPE      LENGTH = 0                                                       067  LM00098
 02131 CLA +0 50000 0 01500    02132 STO +0 60100 0 00700                                                               
      APPEND       THROUGH RPLC, FOR EDCT = EDCT + 1, 1, EDCT .G. COUNT             068  LM00099
 02133 CLA +0 50000 0 00111    02134 ADD +0 40000 0 01501    02135 STO +0 60100 0 00111    02136 TRA +0 02000 0 02142   
 02137 CLA +0 50000 0 00111    02140 ADD +0 40000 0 01501    02141 STO +0 60100 0 00111    02142 CLA +0 50000 0 00111   
 02143 SUB +0 40200 0 00105    02144 TZE +0 10000 0 02146    02145 TPL +0 12000 0 02156                                 
                     LENGTH = LENGTH + 1                                            069  LM00100
 02146 CLA +0 50000 0 00700    02147 ADD +0 40000 0 01501    02150 STO +0 60100 0 00700                                 
       RPLC          LINE(LENGTH) = EDLIN(EDCT)                                     070  LM00101
 02151 LXA +0 53400 1 00700    02152 LXA +0 53400 2 00111    02153 CLA +0 50000 2 00663    02154 STO +0 60100 1 01452   
 02155 TRA +0 02000 0 02137                                                                                             
                 OR WHENEVER CWD .E. $ ERASE$ .OR. CWD .E. $     E$                 071  LM00103
 02156 TRA +0 02000 0 03415    02157 CLA +0 50000 0 00106    02160 SUB +0 40200 0 01534    02161 TZE +0 10000 0 02165   
 02162 CLA +0 50000 0 00106    02163 SUB +0 40200 0 01516    02164 TNZ -0 10000 0 02203                                 
                   WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETERS.(EDLIN(EDCT+1))        072  LM00104
 02165 CLA +0 50000 0 00111    02166 ADD +0 40000 0 01501    02167 PAX +0 73400 1 00000    02170 CLA +0 50000 1 00663   
 02171 SUB +0 40200 0 00076    02172 TZE +0 10000 0 02202    02173 CLA +0 50000 0 00111    02174 ADD +0 40000 0 01501   
 02175 SUB +0 40200 0 02176    02176 TXH +3 00000 0 00663    02177 STA +0 62100 0 02201    02200 TSX +0 07400 4 00022   
 02201 TXH +3 00000 0 00000                                                                                             
                 OR WHENEVER CWD .E. $  KILL$ .OR. CWD .E. $     K$                 073  LM00106
 02202 TRA +0 02000 0 03415    02203 CLA +0 50000 0 00106    02204 SUB +0 40200 0 01540    02205 TZE +0 10000 0 02211   
 02206 CLA +0 50000 0 00106    02207 SUB +0 40200 0 01522    02210 TNZ -0 10000 0 02227                                 
                   WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETKIL.(EDLIN(EDCT+1))        074  LM00107
 02211 CLA +0 50000 0 00111    02212 ADD +0 40000 0 01501    02213 PAX +0 73400 1 00000    02214 CLA +0 50000 1 00663   
 02215 SUB +0 40200 0 00076    02216 TZE +0 10000 0 02226    02217 CLA +0 50000 0 00111    02220 ADD +0 40000 0 01501   
 02221 SUB +0 40200 0 02222    02222 TXH +3 00000 0 00663    02223 STA +0 62100 0 02225    02224 TSX +0 07400 4 00023   
 02225 TXH +3 00000 0 00000                                                                                             
                 OR WHENEVER CWD .E. $ BREAK$ .OR. CWD .E. $    BR$                 075  LM00111
 02226 TRA +0 02000 0 03415    02227 CLA +0 50000 0 00106    02230 SUB +0 40200 0 01526    02231 TZE +0 10000 0 02235   
 02232 CLA +0 50000 0 00106    02233 SUB +0 40200 0 01515    02234 TNZ -0 10000 0 02260                                 
                   WHENEVER EDLIN(EDCT) .E. RETURN                                  076  LM00112
 02235 LXA +0 53400 1 00111    02236 CLA +0 50000 1 00663    02237 SUB +0 40200 0 01467    02240 TNZ -0 10000 0 02244   
                     MCHNG = RETURN                                                 077  LM00113
 02241 CLA +0 50000 0 01467    02242 STO +0 60100 0 01454                                                               
                   OR WHENEVER EDLIN(EDCT+1) .NE. BLANK                             078  LM00114
 02243 TRA +0 02000 0 02257    02244 CLA +0 50000 0 00111    02245 ADD +0 40000 0 01501    02246 PAX +0 73400 1 00000   
 02247 CLA +0 50000 1 00663    02250 SUB +0 40200 0 00076    02251 TZE +0 10000 0 02257                                 
                     MCHNG = EDLIN(EDCT+1)                                          079  LM00115
 02252 CLA +0 50000 0 00111    02253 ADD +0 40000 0 01501    02254 PAX +0 73400 2 00000    02255 CLA +0 50000 2 00663   
 02256 STO +0 60100 0 01454                                                                                             
                   END OF CONDITIONAL                                               080  LM00116
                 OR WHENEVER CWD .E. $VERIFY$ .OR. CWD .E. $     V$                 081  LM00118
 02257 TRA +0 02000 0 03415    02260 CLA +0 50000 0 00106    02261 SUB +0 40200 0 01551    02262 TZE +0 10000 0 02266   
 02263 CLA +0 50000 0 00106    02264 SUB +0 40200 0 01554    02265 TNZ -0 10000 0 02305                                 
                   CWD = GET.(0)                                                    082  LM00119
 02266 TSX +0 07400 4 00031    02267 TXH +3 00000 0 01500    02270 STO +0 60100 0 00106                                 
                   WHENEVER CWD .E. $    ON$                                        083  LM00120
 02271 CLA +0 50000 0 00106    02272 SUB +0 40200 0 01527    02273 TNZ -0 10000 0 02277                                 
                     BRIEF = 0B                                                     084  LM00121
 02274 CLA +0 50000 0 01500    02275 STO +0 60100 0 00077                                                               
                   OR WHENEVER CWD .E. $   OFF$                                     085  LM00122
 02276 TRA +0 02000 0 02304    02277 CLA +0 50000 0 00106    02300 SUB +0 40200 0 01525    02301 TNZ -0 10000 0 02304   
                     BRIEF = 1B                                                     086  LM00123
 02302 CLA +0 50000 0 01501    02303 STO +0 60100 0 00077                                                               
                   END OF CONDITIONAL                                               087  LM00124
                 OR WHENEVER CWD .E. $LOCATE$ .OR. CWD .E. $     L$                 088  LM00126
 02304 TRA +0 02000 0 03415    02305 CLA +0 50000 0 00106    02306 SUB +0 40200 0 01541    02307 TZE +0 10000 0 02313   
 02310 CLA +0 50000 0 00106    02311 SUB +0 40200 0 01513    02312 TNZ -0 10000 0 02317                                 
                   LOCATE = 1                                                       089  LM00127
 02313 CLA +0 50000 0 01501    02314 STO +0 60100 0 01453                                                               
                   TRANSFER TO FIND                                                 090  LM00128
 02315 TRA +0 02000 0 00045                                                                                             
                 OR WHENEVER CWD .E. $  FIND$ .OR. CWD .E. $     F$                 091  LM00130
 02316 TRA +0 02000 0 03415    02317 CLA +0 50000 0 00106    02320 SUB +0 40200 0 01535    02321 TZE +0 10000 0 02325   
 02322 CLA +0 50000 0 00106    02323 SUB +0 40200 0 01521    02324 TNZ -0 10000 0 02510                                 
                   LOCATE = 0                                                       092  LM00131
 02325 CLA +0 50000 0 01500    02326 STO +0 60100 0 01453                                                               
      FIND         WHENEVER EDCT+1 .GE. COUNT                                       093  LM00132
 02327 CLA +0 50000 0 00111    02330 ADD +0 40000 0 01501    02331 SUB +0 40200 0 00105    02332 TZE +0 10000 0 02334   
 02333 TMI -0 12000 0 02341                                                                                             
                     COUNT = OCOUNT                                                 094  LM00133
 02334 CLA +0 50000 0 01457    02335 STO +0 60100 0 00105                                                               
                     EDCT = EDCT + 1                                                095  LM00134
 02336 CLA +0 50000 0 00111    02337 ADD +0 40000 0 01501    02340 STO +0 60100 0 00111                                 
                   END OF CONDITIONAL                                               096  LM00135
                   OCOUNT = COUNT                                                   097  LM00136
 02341 CLA +0 50000 0 00105    02342 STO +0 60100 0 01457                                                               
       NTFND       WRITE.(LINE, LENGTH)                                             098  LM00137
 02343 TSX +0 07400 4 00027    02344 TXH +3 00000 0 01452    02345 TXH +3 00000 0 00700                                 
                   WHENEVER  .NOT. OK, CLSOUT.                                      099  LM00138
 02346 ZET +0 52000 0 01460    02347 TRA +0 02000 0 02351    02350 TSX +0 07400 4 00030                                 
                   LENGTH = READ.(LINE, BUFSIZ, EOF)                                100  LM00139
 02351 TSX +0 07400 4 00017    02352 TXH +3 00000 0 01452    02353 TXH +3 00000 0 00100    02354 TXH +3 00000 0 00044   
 02355 STO +0 60100 0 00700                                                                                             
                   THROUGH LOCSCN, FOR K=0, 1,K.G.LOCATE*(LENGTH-COUNT+EDCT)        101  LM00140
 02356 CLA +0 50000 0 01500    02357 STO +0 60100 0 00677    02360 TRA +0 02000 0 02364    02361 CLA +0 50000 0 00677   
 02362 ADD +0 40000 0 01501    02363 STO +0 60100 0 00677    02364 CLA +0 50000 0 00700    02365 SUB +0 40200 0 00105   
 02366 ADD +0 40000 0 00111    02367 XCA +0 13100 0 00000    02370 MPY +0 20000 0 01453    02371 XCA +0 13100 0 00000   
 02372 CHS +0 76000 0 00002    02373 ADD +0 40000 0 00677    02374 TZE +0 10000 0 02376    02375 TPL +0 12000 0 02506   
                     J = K                                                          102  LM00141
 02376 CLA +0 50000 0 00677    02377 STO +0 60100 0 00676                                                               
                     THROUGH LOOK, FOR I = EDCT+1, 1, I .GE. COUNT                  103  LM00142
 02400 CLA +0 50000 0 00111    02401 ADD +0 40000 0 01501    02402 STO +0 60100 0 00675    02403 TRA +0 02000 0 02407   
 02404 CLA +0 50000 0 00675    02405 ADD +0 40000 0 01501    02406 STO +0 60100 0 00675    02407 CLA +0 50000 0 00675   
 02410 SUB +0 40200 0 00105    02411 TZE +0 10000 0 02475    02412 TPL +0 12000 0 02475                                 
                       J = J + 1                                                    104  LM00143
 02413 CLA +0 50000 0 00676    02414 ADD +0 40000 0 01501    02415 STO +0 60100 0 00676                                 
       TAGN            WHENEVER LINE(J) .E. EDLIN(I), TRANSFER TO LOOK              105  LM00144
 02416 LXA +0 53400 1 00676    02417 LXA +0 53400 2 00675    02420 CLA +0 50000 1 01452    02421 SUB +0 40200 2 00663   
 02422 TNZ -0 10000 0 02424    02423 TRA +0 02000 0 00053                                                               
                       WHENEVER (LINE(J).E. TAB) .AND. (EDLIN(I) .E. BLANK)         106  LM00145
                1       , TRANSFER TO LOOK                                          106  LM00146
 02424 LXA +0 53400 1 00675    02425 CLA +0 50000 1 00663    02426 SUB +0 40200 0 00076    02427 TNZ -0 10000 0 02435   
 02430 LXA +0 53400 1 00676    02431 CLA +0 50000 1 01452    02432 SUB +0 40200 0 01473    02433 TNZ -0 10000 0 02435   
 02434 TRA +0 02000 0 00053                                                                                             
                       WHENEVER EDLIN(I-1) .NE. BLANK .OR. I .E. EDCT + 1           107  LM00147
                1       , TRANSFER TO LOCSCN                                        107  LM00148
 02435 CLA +0 50000 0 00111    02436 ADD +0 40000 0 01501    02437 CHS +0 76000 0 00002    02440 ADD +0 40000 0 00675   
 02441 TZE +0 10000 0 02450    02442 CLA +0 50000 0 00675    02443 SUB +0 40200 0 01501    02444 PAX +0 73400 1 00000   
 02445 CLA +0 50000 1 00663    02446 SUB +0 40200 0 00076    02447 TZE +0 10000 0 02451    02450 TRA +0 02000 0 00052   
                       WHENEVER LINE(J) .NE. BLANK .AND. LINE(J) .NE. TAB           108  LM00149
                1       , TRANSFER TO LOCSCN                                        108  LM00150
 02451 LXA +0 53400 1 00676    02452 CLA +0 50000 1 01452    02453 SUB +0 40200 0 01473    02454 TZE +0 10000 0 02461   
 02455 CLA +0 50000 1 01452    02456 SUB +0 40200 0 00076    02457 TZE +0 10000 0 02461    02460 TRA +0 02000 0 00052   
                       J = J + 1                                                    109  LM00151
 02461 CLA +0 50000 0 00676    02462 ADD +0 40000 0 01501    02463 STO +0 60100 0 00676                                 
                       TRANSFER TO TAGN                                             110  LM00152
 02464 TRA +0 02000 0 00067                                                                                             
       LOOK            WHENEVER I .E. EDCT+1, FNDST = J                             111  LM00153
 02465 CLA +0 50000 0 00111    02466 ADD +0 40000 0 01501    02467 CHS +0 76000 0 00002    02470 ADD +0 40000 0 00675   
 02471 TNZ -0 10000 0 02474    02472 CLA +0 50000 0 00676    02473 STO +0 60100 0 00670    02474 TRA +0 02000 0 02404   
                     FNDND = J                                                      112  LM00154
 02475 CLA +0 50000 0 00676    02476 STO +0 60100 0 00667                                                               
                     WHENEVER .NOT. BRIEF, PRNT.(FNDST, FNDND)                      113  LM00155
 02477 ZET +0 52000 0 00077    02500 TRA +0 02000 0 02504    02501 TSX +0 07400 4 00032    02502 TXH +3 00000 0 00670   
 02503 TXH +3 00000 0 00667                                                                                             
                     TRANSFER TO NXRQ                                               114  LM00156
 02504 TRA +0 02000 0 00060                                                                                             
        LOCSCN       CONTINUE                                                       115  LM00157
 02505 TRA +0 02000 0 02361                                                                                             
                   TRANSFER TO NTFND                                                116  LM00158
 02506 TRA +0 02000 0 00057                                                                                             
                 OR WHENEVER CWD .E. $ PRINT$ .OR. CWD .E. $     P$                 117  LM00160
 02507 TRA +0 02000 0 03415    02510 CLA +0 50000 0 00106    02511 SUB +0 40200 0 01543    02512 TZE +0 10000 0 02516   
 02513 CLA +0 50000 0 00106    02514 SUB +0 40200 0 01517    02515 TNZ -0 10000 0 02564                                 
                   NPRNT = BIN.(GET.(0))                                            118  LM00161
 02516 TSX +0 07400 4 00031    02517 TXH +3 00000 0 01500    02520 STO +0 60100 0 03710    02521 TSX +0 07400 4 00001   
 02522 TXH +3 00000 0 03710    02523 STO +0 60100 0 01455                                                               
      PNTLP        WHENEVER LENGTH .E. 0                                            119  LM00162
 02524 CLA +0 50000 0 00700    02525 SUB +0 40200 0 01500    02526 TNZ -0 10000 0 02540                                 
                     PRINT COMMENT $0N1O0 1C1U1R1R1E1N1T0 1L1I1N1E0.$               120  LM00163
 02527 TSX +0 07400 4 00015    02530     +0 00000 0 00006    02531     +0 04501 4 60060    02532     +0 12301 6 40151   
 02533     +0 15101 2 50145    02534     +0 16300 6 00143    02535     +0 13101 4 50125    02536     +0 03360 6 06060   
                   OTHERWISE                                                        121  LM00164
 02537 TRA +0 02000 0 02543                                                                                             
                     TYPOUT.(LINE, LENGTH)                                          122  LM00165
 02540 TSX +0 07400 4 00025    02541 TXH +3 00000 0 01452    02542 TXH +3 00000 0 00700                                 
                   END OF CONDITIONAL                                               123  LM00166
                   NPRNT = NPRNT - 1                                                124  LM00167
 02543 CLA +0 50000 0 01455    02544 SUB +0 40200 0 01501    02545 STO +0 60100 0 01455                                 
                   WHENEVER NPRNT .G. 0                                             125  LM00168
 02546 CLA +0 50000 0 01455    02547 SUB +0 40200 0 01500    02550 TZE +0 10000 0 02563    02551 TMI -0 12000 0 02563   
                     WRITE.(LINE, LENGTH)                                           126  LM00169
 02552 TSX +0 07400 4 00027    02553 TXH +3 00000 0 01452    02554 TXH +3 00000 0 00700                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              127  LM00170
 02555 TSX +0 07400 4 00017    02556 TXH +3 00000 0 01452    02557 TXH +3 00000 0 00100    02560 TXH +3 00000 0 00044   
 02561 STO +0 60100 0 00700                                                                                             
                     TRANSFER TO PNTLP                                              128  LM00171
 02562 TRA +0 02000 0 00061                                                                                             
                   END OF CONDITIONAL                                               129  LM00172
                 OR WHENEVER CWD .E. $   TOP$ .OR. CWD .E. $     T$                 130  LM00174
 02563 TRA +0 02000 0 03415    02564 CLA +0 50000 0 00106    02565 SUB +0 40200 0 01550    02566 TZE +0 10000 0 02572   
 02567 CLA +0 50000 0 00106    02570 SUB +0 40200 0 01552    02571 TNZ -0 10000 0 02602                                 
       TOPLP       WRITE.(LINE, LENGTH)                                             131  LM00175
 02572 TSX +0 07400 4 00027    02573 TXH +3 00000 0 01452    02574 TXH +3 00000 0 00700                                 
                   WHENEVER OK, BOTTOM.                                             132  LM00176
 02575 NZT -0 52000 0 01460    02576 TRA +0 02000 0 02600    02577 TSX +0 07400 4 00002                                 
                   CLSOUT.                                                          133  LM00177
 02600 TSX +0 07400 4 00030                                                                                             
                 OR WHENEVER CWD .E. $CHANGE$ .OR. CWD .E. $     C$                 134  LM00179
 02601 TRA +0 02000 0 03415    02602 CLA +0 50000 0 00106    02603 SUB +0 40200 0 01532    02604 TZE +0 10000 0 02610   
 02605 CLA +0 50000 0 00106    02606 SUB +0 40200 0 01510    02607 TNZ -0 10000 0 03172                                 
                   EDCT = EDCT+1                                                    135  LM00185
 02610 CLA +0 50000 0 00111    02611 ADD +0 40000 0 01501    02612 STO +0 60100 0 00111                                 
                   QUOTE = EDLIN(EDCT)                                              136  LM00186
 02613 LXA +0 53400 2 00111    02614 CLA +0 50000 2 00663    02615 STO +0 60100 0 01464                                 
                   STR1 = EDCT                                                      137  LM00187
 02616 CLA +0 50000 0 00111    02617 STO +0 60100 0 01471                                                               
      QLOOP        THROUGH QLOOP, FOR EDCT = EDCT+1, 1,                             138  LM00188
                1     (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                138  LM00189
 02620 CLA +0 50000 0 00111    02621 ADD +0 40000 0 01501    02622 STO +0 60100 0 00111    02623 TRA +0 02000 0 02627   
 02624 CLA +0 50000 0 00111    02625 ADD +0 40000 0 01501    02626 STO +0 60100 0 00111    02627 CLA +0 50000 0 00111   
 02630 SUB +0 40200 0 00105    02631 TZE +0 10000 0 02640    02632 TPL +0 12000 0 02640    02633 LXA +0 53400 1 00111   
 02634 CLA +0 50000 1 00663    02635 SUB +0 40200 0 01464    02636 TZE +0 10000 0 02640    02637 TRA +0 02000 0 02624   
                   STR2 = EDCT                                                      139  LM00190
 02640 CLA +0 50000 0 00111    02641 STO +0 60100 0 01472                                                               
      QLOOP1       THROUGH QLOOP1, FOR EDCT = EDCT+1, 1,                            140  LM00191
                1     (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                140  LM00192
 02642 CLA +0 50000 0 00111    02643 ADD +0 40000 0 01501    02644 STO +0 60100 0 00111    02645 TRA +0 02000 0 02651   
 02646 CLA +0 50000 0 00111    02647 ADD +0 40000 0 01501    02650 STO +0 60100 0 00111    02651 CLA +0 50000 0 00111   
 02652 SUB +0 40200 0 00105    02653 TZE +0 10000 0 02662    02654 TPL +0 12000 0 02662    02655 LXA +0 53400 1 00111   
 02656 CLA +0 50000 1 00663    02657 SUB +0 40200 0 01464    02660 TZE +0 10000 0 02662    02661 TRA +0 02000 0 02646   
                   EST2 = EDCT                                                      141  LM00193
 02662 CLA +0 50000 0 00111    02663 STO +0 60100 0 00664                                                               
                   EDCT = EDCT + 1                                                  142  LM00197
 02664 CLA +0 50000 0 00111    02665 ADD +0 40000 0 01501    02666 STO +0 60100 0 00111                                 
                   TEM = 1                                                          143  LM00198
 02667 CLA +0 50000 0 01501    02670 STO +0 60100 0 01474                                                               
                   GLOBAL = 0B                                                      144  LM00199
 02671 CLA +0 50000 0 01500    02672 STO +0 60100 0 00672                                                               
      ARGLP        CWD = GET.(0)                                                    145  LM00200
 02673 TSX +0 07400 4 00031    02674 TXH +3 00000 0 01500    02675 STO +0 60100 0 00106                                 
                   WHENEVER CWD .E. $ $                                             146  LM00201
 02676 CLA +0 50000 0 00106    02677 SUB +0 40200 0 01546    02700 TNZ -0 10000 0 02703                                 
                     TRANSFER TO SHIFT                                              147  LM00202
 02701 TRA +0 02000 0 00063                                                                                             
                   OR WHENEVER CWD .E. $     G$                                     148  LM00203
 02702 TRA +0 02000 0 02721    02703 CLA +0 50000 0 00106    02704 SUB +0 40200 0 01536    02705 TNZ -0 10000 0 02716   
                     WHENEVER STR2 .NE. STR1+1, GLOBAL = 1B                         149  LM00204
 02706 CLA +0 50000 0 01471    02707 ADD +0 40000 0 01501    02710 CHS +0 76000 0 00002    02711 ADD +0 40000 0 01472   
 02712 TZE +0 10000 0 02715    02713 CLA +0 50000 0 01501    02714 STO +0 60100 0 00672                                 
                   OTHERWISE                                                        150  LM00205
 02715 TRA +0 02000 0 02721                                                                                             
                     TEM = BIN.(CWD)                                                151  LM00206
 02716 TSX +0 07400 4 00001    02717 TXH +3 00000 0 00106    02720 STO +0 60100 0 01474                                 
                   END OF CONDITIONAL                                               152  LM00207
                   TRANSFER TO ARGLP                                                153  LM00208
 02721 TRA +0 02000 0 00035                                                                                             
       SHIFT       THROUGH MVDWN, FOR I = LENGTH, -1, I .L. 1                       154  LM00212
 02722 CLA +0 50000 0 00700    02723 STO +0 60100 0 00675    02724 TRA +0 02000 0 02730    02725 CLS +0 50200 0 01501   
 02726 ADD +0 40000 0 00675    02727 STO +0 60100 0 00675    02730 CLA +0 50000 0 00675    02731 SUB +0 40200 0 01501   
 02732 TZE +0 10000 0 02734    02733 TMI -0 12000 0 02744                                                               
      MVDWN          LINE(BUFSIZ+I-LENGTH) = LINE(I)                                155  LM00213
 02734 CLA +0 50000 0 00100    02735 ADD +0 40000 0 00675    02736 SUB +0 40200 0 00700    02737 PAX +0 73400 1 00000   
 02740 LXA +0 53400 2 00675    02741 CLA +0 50000 2 01452    02742 STO +0 60100 1 01452    02743 TRA +0 02000 0 02725   
                   DOWN = BUFSIZ-LENGTH+1                                           156  LM00214
 02744 CLA +0 50000 0 00100    02745 SUB +0 40200 0 00700    02746 ADD +0 40000 0 01501    02747 STO +0 60100 0 00110   
                   UP = 0                                                           157  LM00215
 02750 CLA +0 50000 0 01500    02751 STO +0 60100 0 01476                                                               
                   CHNG = 0B                                                        158  LM00216
 02752 CLA +0 50000 0 01500    02753 STO +0 60100 0 00102                                                               
                   CHST = LENGTH + 1                                                159  LM00217
 02754 CLA +0 50000 0 00700    02755 ADD +0 40000 0 01501    02756 STO +0 60100 0 00103                                 
                   CHEND = LENGTH                                                   160  LM00218
 02757 CLA +0 50000 0 00700    02760 STO +0 60100 0 00101                                                               
      SRCHLP       UP = UP + 1                                                      161  LM00222
 02761 CLA +0 50000 0 01476    02762 ADD +0 40000 0 01501    02763 STO +0 60100 0 01476                                 
      SRTST          WHENEVER DOWN .G. BUFSIZ, TRANSFER TO GIVUP                    162  LM00223
 02764 CLA +0 50000 0 00110    02765 SUB +0 40200 0 00100    02766 TZE +0 10000 0 02771    02767 TMI -0 12000 0 02771   
 02770 TRA +0 02000 0 00046                                                                                             
                     J = DOWN                                                       163  LM00224
 02771 CLA +0 50000 0 00110    02772 STO +0 60100 0 00676                                                               
                     THROUGH COMPAR, FOR I = STR1+1, 1, I .GE. STR2                 164  LM00225
 02773 CLA +0 50000 0 01471    02774 ADD +0 40000 0 01501    02775 STO +0 60100 0 00675    02776 TRA +0 02000 0 03002   
 02777 CLA +0 50000 0 00675    03000 ADD +0 40000 0 01501    03001 STO +0 60100 0 00675    03002 CLA +0 50000 0 00675   
 03003 SUB +0 40200 0 01472    03004 TZE +0 10000 0 03025    03005 TPL +0 12000 0 03025                                 
                       WHENEVER J .GE. BUFSIZ, TRANSFER TO GIVUP                    165  LM00226
 03006 CLA +0 50000 0 00676    03007 SUB +0 40200 0 00100    03010 TZE +0 10000 0 03012    03011 TMI -0 12000 0 03013   
 03012 TRA +0 02000 0 00046                                                                                             
                       WHENEVER EDLIN(I) .NE. LINE(J), TRANSFER TO NOCOMP           166  LM00227
 03013 LXA +0 53400 1 00675    03014 LXA +0 53400 2 00676    03015 CLA +0 50000 1 00663    03016 SUB +0 40200 2 01452   
 03017 TZE +0 10000 0 03021    03020 TRA +0 02000 0 00055                                                               
       COMPAR          J = J + 1                                                    167  LM00228
 03021 CLA +0 50000 0 00676    03022 ADD +0 40000 0 01501    03023 STO +0 60100 0 00676    03024 TRA +0 02000 0 02777   
                     TRANSFER TO STFND                                              168  LM00229
 03025 TRA +0 02000 0 00066                                                                                             
      NOCOMP         LINE(UP) = LINE(DOWN)                                          169  LM00231
 03026 LXA +0 53400 1 01476    03027 LXA +0 53400 2 00110    03030 CLA +0 50000 2 01452    03031 STO +0 60100 1 01452   
                     DOWN = DOWN + 1                                                170  LM00232
 03032 CLA +0 50000 0 00110    03033 ADD +0 40000 0 01501    03034 STO +0 60100 0 00110                                 
                   TRANSFER TO SRCHLP                                               171  LM00233
 03035 TRA +0 02000 0 00064                                                                                             
      STFND        CHNG = 1B                                                        172  LM00237
 03036 CLA +0 50000 0 01501    03037 STO +0 60100 0 00102                                                               
                   DOWN = DOWN + (STR2-STR1-1)                                      173  LM00238
 03040 CLA +0 50000 0 01472    03041 SUB +0 40200 0 01471    03042 SUB +0 40200 0 01501    03043 ADD +0 40000 0 00110   
 03044 STO +0 60100 0 00110                                                                                             
                   CHST = UP                                                        174  LM00239
 03045 CLA +0 50000 0 01476    03046 STO +0 60100 0 00103                                                               
                   THROUGH REPLAC, FOR I = STR2 + 1, 1, I .GE. EST2                 175  LM00240
 03047 CLA +0 50000 0 01472    03050 ADD +0 40000 0 01501    03051 STO +0 60100 0 00675    03052 TRA +0 02000 0 03056   
 03053 CLA +0 50000 0 00675    03054 ADD +0 40000 0 01501    03055 STO +0 60100 0 00675    03056 CLA +0 50000 0 00675   
 03057 SUB +0 40200 0 00664    03060 TZE +0 10000 0 03077    03061 TPL +0 12000 0 03077                                 
                     LINE(UP) = EDLIN(I)                                            176  LM00241
 03062 LXA +0 53400 1 01476    03063 LXA +0 53400 2 00675    03064 CLA +0 50000 2 00663    03065 STO +0 60100 1 01452   
                     UP = UP + 1                                                    177  LM00242
 03066 CLA +0 50000 0 01476    03067 ADD +0 40000 0 01501    03070 STO +0 60100 0 01476                                 
       REPLAC        WHENEVER UP .G. DOWN, TRANSFER TO GIVUP                        178  LM00243
 03071 CLA +0 50000 0 01476    03072 SUB +0 40200 0 00110    03073 TZE +0 10000 0 03076    03074 TMI -0 12000 0 03076   
 03075 TRA +0 02000 0 00046    03076 TRA +0 02000 0 03053                                                               
                   CHEND = UP - 1                                                   179  LM00244
 03077 CLA +0 50000 0 01476    03100 SUB +0 40200 0 01501    03101 STO +0 60100 0 00101                                 
                   WHENEVER GLOBAL, TRANSFER TO SRTST                               180  LM00245
 03102 NZT -0 52000 0 00672    03103 TRA +0 02000 0 03105    03104 TRA +0 02000 0 00065                                 
      GIVUP        THROUGH FILOUT, FOR UP = UP, 1, DOWN .G. BUFSIZ                  181  LM00249
 03105 CLA +0 50000 0 01476    03106 STO +0 60100 0 01476    03107 TRA +0 02000 0 03113    03110 CLA +0 50000 0 01476   
 03111 ADD +0 40000 0 01501    03112 STO +0 60100 0 01476    03113 CLA +0 50000 0 00110    03114 SUB +0 40200 0 00100   
 03115 TZE +0 10000 0 03117    03116 TPL +0 12000 0 03127                                                               
                     LINE(UP) = LINE(DOWN)                                          182  LM00250
 03117 LXA +0 53400 1 01476    03120 LXA +0 53400 2 00110    03121 CLA +0 50000 2 01452    03122 STO +0 60100 1 01452   
      FILOUT         DOWN = DOWN + 1                                                183  LM00251
 03123 CLA +0 50000 0 00110    03124 ADD +0 40000 0 01501    03125 STO +0 60100 0 00110    03126 TRA +0 02000 0 03110   
                   LENGTH = UP - 1                                                  184  LM00252
 03127 CLA +0 50000 0 01476    03130 SUB +0 40200 0 01501    03131 STO +0 60100 0 00700                                 
                   TEM = TEM - 1                                                    185  LM00253
 03132 CLA +0 50000 0 01474    03133 SUB +0 40200 0 01501    03134 STO +0 60100 0 01474                                 
                   WHENEVER .NOT. BRIEF .AND. (TEM .G. 0 .THEN. CHNG)               186  LM00254
                1       , PRNT.(CHST, CHEND)                                        186  LM00255
 03135 ZET +0 52000 0 00102    03136 TRA +0 02000 0 03143    03137 CLA +0 50000 0 01474    03140 SUB +0 40200 0 01500   
 03141 TZE +0 10000 0 03143    03142 TPL +0 12000 0 03150    03143 ZET +0 52000 0 00077    03144 TRA +0 02000 0 03150   
 03145 TSX +0 07400 4 00032    03146 TXH +3 00000 0 00103    03147 TXH +3 00000 0 00101                                 
                   CANON.(LINE, LENGTH, BUFSIZ)                                     187  LM00256
 03150 TSX +0 07400 4 00003    03151 TXH +3 00000 0 01452    03152 TXH +3 00000 0 00700    03153 TXH +3 00000 0 00100   
                   WHENEVER TEM .G. 0                                               188  LM00257
 03154 CLA +0 50000 0 01474    03155 SUB +0 40200 0 01500    03156 TZE +0 10000 0 03171    03157 TMI -0 12000 0 03171   
                     WRITE.(LINE, LENGTH)                                           189  LM00258
 03160 TSX +0 07400 4 00027    03161 TXH +3 00000 0 01452    03162 TXH +3 00000 0 00700                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              190  LM00259
 03163 TSX +0 07400 4 00017    03164 TXH +3 00000 0 01452    03165 TXH +3 00000 0 00100    03166 TXH +3 00000 0 00044   
 03167 STO +0 60100 0 00700                                                                                             
                     TRANSFER TO SHIFT                                              191  LM00260
 03170 TRA +0 02000 0 00063                                                                                             
                   END OF CONDITIONAL                                               192  LM00261
                 OR WHENEVER CWD .E. $ SPLIT$ .OR. CWD .E. $     S$                 193  LM00265
 03171 TRA +0 02000 0 03415    03172 CLA +0 50000 0 00106    03173 SUB +0 40200 0 01547    03174 TZE +0 10000 0 03200   
 03175 CLA +0 50000 0 00106    03176 SUB +0 40200 0 01553    03177 TNZ -0 10000 0 03261                                 
                   TOPNAM = GET.(0)                                                 194  LM00266
 03200 TSX +0 07400 4 00031    03201 TXH +3 00000 0 01500    03202 STO +0 60100 0 01475                                 
                   WHENEVER TOPNAM .E. $ $, TRANSFER TO NONAME                      195  LM00267
 03203 CLA +0 50000 0 01475    03204 SUB +0 40200 0 01546    03205 TNZ -0 10000 0 03207    03206 TRA +0 02000 0 00056   
                   WHENEVER TOPNAM .E. OLDNAM .AND. FSTPAS                          196  LM00268
 03207 NZT -0 52000 0 00671    03210 TRA +0 02000 0 03227    03211 CLA +0 50000 0 01475    03212 SUB +0 40200 0 01461   
 03213 TNZ -0 10000 0 03227                                                                                             
      NEWNM          PRINT COMMENT $0P1L1E1A1S1E0 1U1S1E0 1A1N1O1T1H1E1R0 1N1A      197  LM00269
                11M1E0.$                                                            197  LM00270
 03214 TSX +0 07400 4 00015    03215     +0 00000 0 00010    03216     +0 04701 4 30125    03217     +0 12101 6 20125   
 03220     +0 06001 6 40162    03221     +0 12500 6 00121    03222     +0 14501 4 60163    03223     +0 13001 2 50151   
 03224     +0 06001 4 50121    03225     +0 14401 2 50033                                                               
                     TRANSFER TO NXRQ                                               198  LM00271
 03226 TRA +0 02000 0 00060                                                                                             
                   END OF CONDITIONAL                                               199  LM00272
                   SECNAM = GET.(0)                                                 200  LM00273
 03227 TSX +0 07400 4 00031    03230 TXH +3 00000 0 01500    03231 STO +0 60100 0 01470                                 
                 WHENEVER SECNAM .E. $ $, SECNAM = OLDSEC                           201  LM00274
 03232 CLA +0 50000 0 01470    03233 SUB +0 40200 0 01546    03234 TNZ -0 10000 0 03237    03235 CLA +0 50000 0 01462   
 03236 STO +0 60100 0 01470                                                                                             
                   CLRNAM.(TOPNAM, SECNAM, NEWNM, 1B)                               202  LM00275
 03237 TSX +0 07400 4 00006    03240 TXH +3 00000 0 01475    03241 TXH +3 00000 0 01470    03242 TXH +3 00000 0 00054   
 03243 TXH +3 00000 0 01501                                                                                             
                   CLOSEW.                                                          203  LM00276
 03244 TSX +0 07400 4 00005                                                                                             
                   RENAME.(IN, FI, TOPNAM, SECNAM)                                  204  LM00277
 03245 TSX +0 07400 4 00020    03246 TXH +3 00000 0 00674    03247 TXH +3 00000 0 00666    03250 TXH +3 00000 0 01475   
 03251 TXH +3 00000 0 01470                                                                                             
                   ASSIGN.(IN, FI)                                                  205  LM00278
 03252 TSX +0 07400 4 00000    03253 TXH +3 00000 0 00674    03254 TXH +3 00000 0 00666                                 
                   OLDNAM = FENCE                                                   206  LM00279
 03255 CLA +0 50000 0 00665    03256 STO +0 60100 0 01461                                                               
                   TRANSFER TO TOPLP                                                207  LM00280
 03257 TRA +0 02000 0 00070                                                                                             
                 OR WHENEVER CWD .E. $  QUIT$ .OR. CWD .E. $     Q$                 208  LM00282
 03260 TRA +0 02000 0 03415    03261 CLA +0 50000 0 00106    03262 SUB +0 40200 0 01544    03263 TZE +0 10000 0 03267   
 03264 CLA +0 50000 0 00106    03265 SUB +0 40200 0 01524    03266 TNZ -0 10000 0 03303                                 
                   ENDRD.                                                           209  LM00283
 03267 TSX +0 07400 4 00011                                                                                             
                   CLOSEW.                                                          210  LM00284
 03270 TSX +0 07400 4 00005                                                                                             
                   DELFIL.(IN1, FI, DLQ1)                                           211  LM00285
 03271 TSX +0 07400 4 00010    03272 TXH +3 00000 0 00673    03273 TXH +3 00000 0 00666    03274 TXH +3 00000 0 00041   
      DLQ1         DELFIL.(IN, FI, DLQ2)                                            212  LM00286
 03275 TSX +0 07400 4 00010    03276 TXH +3 00000 0 00674    03277 TXH +3 00000 0 00666    03300 TXH +3 00000 0 00042   
      DLQ2         TRANSFER TO CHN                                                  213  LM00287
 03301 TRA +0 02000 0 00036                                                                                             
                 OR WHENEVER CWD .E. $  FILE$                                       214  LM00289
 03302 TRA +0 02000 0 03415    03303 CLA +0 50000 0 00106    03304 SUB +0 40200 0 01520    03305 TNZ -0 10000 0 03403   
                   PRINAM = GET.(0)                                                 215  LM00290
 03306 TSX +0 07400 4 00031    03307 TXH +3 00000 0 01500    03310 STO +0 60100 0 01463                                 
                   CLRSW = 1B                                                       216  LM00291
 03311 CLA +0 50000 0 01501    03312 STO +0 60100 0 00104                                                               
                   WHENEVER PRINAM .E. $ $                                          217  LM00292
 03313 CLA +0 50000 0 01463    03314 SUB +0 40200 0 01546    03315 TNZ -0 10000 0 03325                                 
                     PRINAM = OLDNAM                                                218  LM00293
 03316 CLA +0 50000 0 01461    03317 STO +0 60100 0 01463                                                               
                     SECNAM = OLDSEC                                                219  LM00294
 03320 CLA +0 50000 0 01462    03321 STO +0 60100 0 01470                                                               
                     CLRSW = 0B                                                     220  LM00295
 03322 CLA +0 50000 0 01500    03323 STO +0 60100 0 00104                                                               
                   OTHERWISE                                                        221  LM00296
 03324 TRA +0 02000 0 03335                                                                                             
                     SECNAM = GET.(0)                                               222  LM00297
 03325 TSX +0 07400 4 00031    03326 TXH +3 00000 0 01500    03327 STO +0 60100 0 01470                                 
                     WHENEVER SECNAM .E. $ $                                        223  LM00298
 03330 CLA +0 50000 0 01470    03331 SUB +0 40200 0 01546    03332 TNZ -0 10000 0 03335                                 
                       SECNAM = OLDSEC                                              224  LM00299
 03333 CLA +0 50000 0 01462    03334 STO +0 60100 0 01470                                                               
                     END OF CONDITIONAL                                             225  LM00300
                   END OF CONDITIONAL                                               226  LM00301
                   WHENEVER PRINAM .E. FENCE                                        227  LM00302
 03335 CLA +0 50000 0 01463    03336 SUB +0 40200 0 00665    03337 TNZ -0 10000 0 03352                                 
      NONAME         PRINT COMMENT $0N1O0 1F1I1L1E0 1N1A1M1E0 1G1I1V1E1N0.$         228  LM00303
 03340 TSX +0 07400 4 00015    03341     +0 00000 0 00007    03342     +0 04501 4 60060    03343     +0 12601 3 10143   
 03344     +0 12500 6 00145    03345     +0 12101 4 40125    03346     +0 06001 2 70131    03347     +0 16501 2 50145   
 03350     +0 03360 6 06060                                                                                             
                     TRANSFER TO NXRQ                                               229  LM00304
 03351 TRA +0 02000 0 00060                                                                                             
                   END OF CONDITIONAL                                               230  LM00305
                   WRITE.(LINE, LENGTH)                                             231  LM00306
 03352 TSX +0 07400 4 00027    03353 TXH +3 00000 0 01452    03354 TXH +3 00000 0 00700                                 
                   LENGTH = 0                                                       232  LM00307
 03355 CLA +0 50000 0 01500    03356 STO +0 60100 0 00700                                                               
                   WHENEVER OK, BOTTOM.                                             233  LM00308
 03357 NZT -0 52000 0 01460    03360 TRA +0 02000 0 03362    03361 TSX +0 07400 4 00002                                 
                   CLRNAM.(PRINAM, SECNAM, NEWNM, CLRSW)                            234  LM00309
 03362 TSX +0 07400 4 00006    03363 TXH +3 00000 0 01463    03364 TXH +3 00000 0 01470    03365 TXH +3 00000 0 00054   
 03366 TXH +3 00000 0 00104                                                                                             
                   CLOSEW.                                                          235  LM00310
 03367 TSX +0 07400 4 00005                                                                                             
                   DELFIL.(IN1, FI, DL1)                                            236  LM00311
 03370 TSX +0 07400 4 00010    03371 TXH +3 00000 0 00673    03372 TXH +3 00000 0 00666    03373 TXH +3 00000 0 00037   
      DL1          RENAME.(IN, FI, PRINAM, SECNAM)                                  237  LM00312
 03374 TSX +0 07400 4 00020    03375 TXH +3 00000 0 00674    03376 TXH +3 00000 0 00666    03377 TXH +3 00000 0 01463   
 03400 TXH +3 00000 0 01470                                                                                             
      CHN          EXIT.                                                            238  LM00313
 03401 TSX +0 07400 4 00012                                                                                             
                 OTHERWISE                                                          239  LM00315
 03402 TRA +0 02000 0 03415                                                                                             
                   PRINT COMMENT $0N1O1T0 1A0 1R1E1Q1U1E1S1T0:$                     240  LM00316
 03403 TSX +0 07400 4 00015    03404     +0 00000 0 00005    03405     +0 04501 4 60163    03406     +0 06001 2 10060   
 03407     +0 15101 2 50150    03410     +0 16401 2 50162    03411     +0 16300 3 56060                                 
                   TYPOUT.(EDLIN, COUNT)                                            241  LM00317
 03412 TSX +0 07400 4 00025    03413 TXH +3 00000 0 00663    03414 TXH +3 00000 0 00105                                 
                 END OF CONDITIONAL                                                 242  LM00319
                 TRANSFER TO NXRQ                                                   243  LM00320
 03415 TRA +0 02000 0 00060                                                                                             
      EOF        PRINTCOMMENT $0E1N1D0 1O1F0 1F1I1L1E0 1R1E1A1C1H1E1D0 1B1Y0:$      244  LM00322
 03416 TSX +0 07400 4 00015    03417     +0 00000 0 00010    03420     +0 02501 4 50124    03421     +0 06001 4 60126   
 03422     +0 06001 2 60131    03423     +0 14301 2 50060    03424     +0 15101 2 50121    03425     +0 12301 3 00125   
 03426     +0 12400 6 00122    03427     +0 17000 3 56060                                                               
                 TYPOUT.(EDLIN, COUNT)                                              245  LM00323
 03430 TSX +0 07400 4 00025    03431 TXH +3 00000 0 00663    03432 TXH +3 00000 0 00105                                 
                 LENGTH = 0                                                         246  LM00324
 03433 CLA +0 50000 0 01500    03434 STO +0 60100 0 00700                                                               
                 OK = 0B                                                            247  LM00325
 03435 CLA +0 50000 0 01500    03436 STO +0 60100 0 01460                                                               
                 TRANSFER TO NXRQ                                                   248  LM00326
 03437 TRA +0 02000 0 00060                                                                                             
                 INTERNAL FUNCTION                                                  249  LM00334
 03440 TRA +0 02000 0 03510                                                                                             
                 ENTRY TO CLSOUT.                                                   250  LM00335
 03441 TRA +0 02000 0 03444    00030 TTR +0 02100 0 03442    03442 SXA +0 63400 2 03477    03443 TSX +0 07400 2 03477   
                   CLOSEW.                                                          251  LM00336
 03444 TSX +0 07400 4 00005                                                                                             
                   DELFIL.(IN1, FI, DL2)                                            252  LM00337
 03445 TSX +0 07400 4 00010    03446 TXH +3 00000 0 00673    03447 TXH +3 00000 0 00666    03450 TXH +3 00000 0 00040   
      DL2          CHFILE.(IN, FI, -0, IN1)                                         253  LM00338
 03451 CLS +0 50200 0 01500    03452 STO +0 60100 0 03507    03453 TSX +0 07400 4 00004    03454 TXH +3 00000 0 00674   
 03455 TXH +3 00000 0 00666    03456 TXH +3 00000 0 03507    03457 TXH +3 00000 0 00673                                 
                   SEEK.(IN1, FI, CHN)                                              254  LM00339
 03460 TSX +0 07400 4 00021    03461 TXH +3 00000 0 00673    03462 TXH +3 00000 0 00666    03463 TXH +3 00000 0 00036   
                   ASSIGN.(IN, FI)                                                  255  LM00340
 03464 TSX +0 07400 4 00000    03465 TXH +3 00000 0 00674    03466 TXH +3 00000 0 00666                                 
                   OK = 1B                                                          256  LM00341
 03467 CLA +0 50000 0 01501    03470 STO +0 60100 0 01460                                                               
                   LENGTH = 0                                                       257  LM00342
 03471 CLA +0 50000 0 01500    03472 STO +0 60100 0 00700                                                               
                   FSTPAS = 0B                                                      258  LM00343
 03473 CLA +0 50000 0 01500    03474 STO +0 60100 0 00671                                                               
                   FUNCTION RETURN                                                  259  LM00344
 03475 TRA +0 02000 0 03503                                                                                             
                 END OF FUNCTION                                                    260  LM00345
 03476 TSX +0 07400 4 00012    03477 TXH +3 00000 0 00000    03500 SXD -0 63400 1 03477    03501 SXA +0 63400 4 03503   
 03502 TRA +0 02000 2 00001    03503 AXT +0 77400 4 00000    03504 LXA +0 53400 2 03477    03505 LXD -0 53400 1 03477   
 03506 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  261  LM00349
 03510 TRA +0 02000 0 03616                                                                                             
                 ENTRY TO GET.                                                      262  LM00350
 03511 TRA +0 02000 0 03514    00031 TTR +0 02100 0 03512    03512 SXA +0 63400 2 03605    03513 TSX +0 07400 2 03605   
                   WORD = $ $                                                       263  LM00351
 03514 CLA +0 50000 0 01546    03515 STO +0 60100 0 01477                                                               
      SCANLP       THROUGH SCANLP, FOR EDCT = EDCT, 1,                              264  LM00352
                1  (EDLIN(EDCT+1).NE.BLANK) .OR. (EDCT+1.GE.COUNT)                  264  LM00353
 03516 CLA +0 50000 0 00111    03517 STO +0 60100 0 00111    03520 TRA +0 02000 0 03524    03521 CLA +0 50000 0 00111   
 03522 ADD +0 40000 0 01501    03523 STO +0 60100 0 00111    03524 CLA +0 50000 0 00111    03525 ADD +0 40000 0 01501   
 03526 SUB +0 40200 0 00105    03527 TZE +0 10000 0 03540    03530 TPL +0 12000 0 03540    03531 CLA +0 50000 0 00111   
 03532 ADD +0 40000 0 01501    03533 PAX +0 73400 1 00000    03534 CLA +0 50000 1 00663    03535 SUB +0 40200 0 00076   
 03536 TNZ -0 10000 0 03540    03537 TRA +0 02000 0 03521                                                               
       GTLP        EDCT = EDCT + 1                                                  265  LM00354
 03540 CLA +0 50000 0 00111    03541 ADD +0 40000 0 01501    03542 STO +0 60100 0 00111                                 
                   WHENEVER EDLIN(EDCT) .E. BLANK, FUNCTION RETURN WORD             266  LM00355
 03543 LXA +0 53400 1 00111    03544 CLA +0 50000 1 00663    03545 SUB +0 40200 0 00076    03546 TNZ -0 10000 0 03551   
 03547 CLA +0 50000 0 01477    03550 TRA +0 02000 0 03611                                                               
                   WHENEVER EDLIN(EDCT) .E. TAB .OR. EDCT .GE. COUNT                267  LM00356
 03551 CLA +0 50000 0 00111    03552 SUB +0 40200 0 00105    03553 TZE +0 10000 0 03561    03554 TPL +0 12000 0 03561   
 03555 LXA +0 53400 1 00111    03556 CLA +0 50000 1 00663    03557 SUB +0 40200 0 01473    03560 TNZ -0 10000 0 03566   
                     EDCT = EDCT - 1                                                268  LM00357
 03561 CLA +0 50000 0 00111    03562 SUB +0 40200 0 01501    03563 STO +0 60100 0 00111                                 
                     FUNCTION RETURN WORD                                           269  LM00358
 03564 CLA +0 50000 0 01477    03565 TRA +0 02000 0 03611                                                               
                   END OF CONDITIONAL                                               270  LM00359
                   WORD = (WORD .LS. 6) .V. HOL.(EDLIN(EDCT))                       271  LM00360
 03566 CLA +0 50000 0 00111    03567 SUB +0 40200 0 03570    03570 TXH +3 00000 0 00663    03571 STA +0 62100 0 03573   
 03572 TSX +0 07400 4 00014    03573 TXH +3 00000 0 00000    03574 STO +0 60100 0 03615    03575 CAL -0 50000 0 01504   
 03576 STA +0 62100 0 03600    03577 CAL -0 50000 0 01477    03600 ALS +0 76700 0 00000    03601 ORA -0 50100 0 03615   
 03602 SLW +0 60200 0 01477                                                                                             
                   TRANSFER TO GTLP                                                 272  LM00361
 03603 TRA +0 02000 0 00047                                                                                             
                 END OF FUNCTION                                                    273  LM00362
 03604 TSX +0 07400 4 00012    03605 TXH +3 00000 0 00000    03606 SXD -0 63400 1 03605    03607 SXA +0 63400 4 03611   
 03610 TRA +0 02000 2 00001    03611 AXT +0 77400 4 00000    03612 LXA +0 53400 2 03605    03613 LXD -0 53400 1 03605   
 03614 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION(STAR, EN)                                        274  LM00366
 03616 TRA +0 02000 0 03707                                                                                             
                 ENTRY TO PRNT.                                                     275  LM00367
 03617 TRA +0 02000 0 03622    00032 TTR +0 02100 0 03620    03620 SXA +0 63400 2 03666    03621 TSX +0 07400 2 03666   
                   TYPOUT.(LINE, STAR-1)                                            276  LM00368
 03622 CLA +0 50000 0 00024    03623 SUB +0 40200 0 01501    03624 STO +0 60100 0 03706    03625 TSX +0 07400 4 00025   
 03626 TXH +3 00000 0 01452    03627 TXH +3 00000 0 03706                                                               
                   TYPOUT.(REDS, 1)                                                 277  LM00369
 03630 TSX +0 07400 4 00025    03631 TXH +3 00000 0 01466    03632 TXH +3 00000 0 01501                                 
                   TYPOUT.(LINE(STAR-1), EN-STAR+1)                                 278  LM00370
 03633 CLA +0 50000 0 00024    03634 SUB +0 40200 0 00024    03635 ADD +0 40000 0 01501    03636 STO +0 60100 0 03706   
 03637 CLA +0 50000 0 00024    03640 SUB +0 40200 0 01501    03641 SUB +0 40200 0 03642    03642 TXH +3 00000 0 01452   
 03643 STA +0 62100 0 03645    03644 TSX +0 07400 4 00025    03645 TXH +3 00000 0 00000    03646 TXH +3 00000 0 03706   
                   TYPOUT.(BLACKS, 1)                                               279  LM00371
 03647 TSX +0 07400 4 00025    03650 TXH +3 00000 0 00075    03651 TXH +3 00000 0 01501                                 
                   TYPOUT.(LINE(EN), LENGTH-EN)                                     280  LM00372
 03652 CLA +0 50000 0 00700    03653 SUB +0 40200 0 00024    03654 STO +0 60100 0 03706    03655 CLA +0 50000 0 00024   
 03656 SUB +0 40200 0 03657    03657 TXH +3 00000 0 01452    03660 STA +0 62100 0 03662    03661 TSX +0 07400 4 00025   
 03662 TXH +3 00000 0 00000    03663 TXH +3 00000 0 03706                                                               
                   FUNCTION RETURN                                                  281  LM00373
 03664 TRA +0 02000 0 03702                                                                                             
                 END OF FUNCTION                                                    282  LM00374
 03665 TSX +0 07400 4 00012    03666 TXH +3 00000 0 00000    03667 SXD -0 63400 1 03666    03670 SXA +0 63400 4 03702   
 03671 CLA +0 50000 4 00001    03672 STA +0 62100 0 03622    03673 STA +0 62100 0 03634    03674 STA +0 62100 0 03637   
 03675 CLA +0 50000 4 00002    03676 STA +0 62100 0 03633    03677 STA +0 62100 0 03653    03700 STA +0 62100 0 03655   
 03701 TRA +0 02000 2 00001    03702 AXT +0 77400 4 00000    03703 LXA +0 53400 2 03666    03704 LXD -0 53400 1 03666   
 03705 TRA +0 02000 4 00001                                                                                             
                 END OF PROGRAM                                                     283  LM00376
 03707 TSX +0 07400 4 00012                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  EDAVAL   MAD            04/23/69    1348.8
-                 
                 ..  ROUTINE TO RETURN INITIAL VALUES TO EDITOR FOR                                    LM00001    
                 ..  EDITING ASCII FILES.                                                              LM00002    
                                                                                                       LM00003    
                  EXTERNAL FUNCTION(BLANK, TAB, DEFALT, MCHNG, RED, BLACK)                        *001 LM00004    
                  NORMAL MODE IS INTEGER                                                          *002 LM00005    
                  ENTRY TO GETVAL.                                                                *003 LM00006    
                    BLANK  = 040K                                                                 *004 LM00007    
                    TAB    = 011K                                                                 *005 LM00008    
                    DEFALT = $ ASCII$                                                             *006 LM00009    
                    MCHNG  = 056K                                                                 *007 LM00010    
                    RED    = 016K                                                                 *008 LM00011    
                    BLACK  = 017K                                                                 *009 LM00012    
                    FUNCTION RETURN                                                               *010 LM00013    
                  END OF FUNCTION                                                                 *011 LM00014    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00061 TRANSFER VECTOR LENGTH  00001 PROGRAM BEGINS    00012
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      GETVAL 00013   0                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00005 +000000000017     00004 +000000000016     00007 +000000000056     00011 -202162233131     00003 +000000000011    
 00006 +000000000040     00002 +000000000001     00010 +233000000000                                                    
0PROGRAM    
                 EXTERNAL FUNCTION(BLANK, TAB, DEFALT, MCHNG, RED, BLACK)           001  LM00004
                 N'R                                                                002  LM00005
                 E'O GETVAL.                                                        003  LM00006
 00012 TRA +0 02000 0 00015    00013 SXA +0 63400 2 00033    00014 TSX +0 07400 2 00033                                 
                   BLANK  = 040K                                                    004  LM00007
 00015 CLA +0 50000 0 00006    00016 STO +0 60100 0 00024                                                               
                   TAB    = 011K                                                    005  LM00008
 00017 CLA +0 50000 0 00003    00020 STO +0 60100 0 00024                                                               
                   DEFALT = $ ASCII$                                                006  LM00009
 00021 CLA +0 50000 0 00011    00022 STO +0 60100 0 00024                                                               
                   MCHNG  = 056K                                                    007  LM00010
 00023 CLA +0 50000 0 00007    00024 STO +0 60100 0 00024                                                               
                   RED    = 016K                                                    008  LM00011
 00025 CLA +0 50000 0 00004    00026 STO +0 60100 0 00024                                                               
                   BLACK  = 017K                                                    009  LM00012
 00027 CLA +0 50000 0 00005    00030 STO +0 60100 0 00024                                                               
                   F'N                                                              010  LM00013
 00031 TRA +0 02000 0 00053                                                                                             
                 E'N                                                                011  LM00014
 00032 TSX +0 07400 4 00000    00033 TXH +3 00000 0 00000    00034 SXD -0 63400 1 00033    00035 SXA +0 63400 4 00053   
 00036 CLA +0 50000 4 00001    00037 STA +0 62100 0 00016    00040 CLA +0 50000 4 00002    00041 STA +0 62100 0 00020   
 00042 CLA +0 50000 4 00003    00043 STA +0 62100 0 00022    00044 CLA +0 50000 4 00004    00045 STA +0 62100 0 00024   
 00046 CLA +0 50000 4 00005    00047 STA +0 62100 0 00026    00050 CLA +0 50000 4 00006    00051 STA +0 62100 0 00030   
 00052 TRA +0 02000 2 00001    00053 AXT +0 77400 4 00000    00054 LXA +0 53400 2 00033    00055 LXD -0 53400 1 00033   
 00056 TRA +0 02000 4 00001                                                                                             
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                   04/23/69 1349.6 PAGE 1     
                  
                              *      NOTE, INDEX REGISTERS SIX AND SEVEN MUST BE PRESERVED
                              *      BY THE CALLING PROGRAM.
                              *      THIS ROUTINE MAKES TYPEWRITER COMMENTS, BUT DOES NOT 
                              *      AFFECT THE BCD-FULL MODE SWITCH.   
                              *     
                              *           J. H. SALTZER, JANUARY, 1965. 
                              *     
                       00015         ENTRY   ASSIGN        TO ASSIGN A NAME TO THE WRITE FILE.  
                       00057         ENTRY   WRWORD        TO ADD A WORD TO THE FILE.     
                       00100         ENTRY   FILE          TO CLOSE THE FILE. 
                              *     
                       00160         ENTRY   SEEK          TO OPEN A FILE FOR READING.    
                       00242         ENTRY   RDWORD        TO GET A WORD FROM FILE. 
                       00275         ENTRY   ENDRD         TO CLOSE THE FILE. 
                              *     
                                     EXTERN  GETBUF,SETBCD,SETFUL,WRFLX,WRFLXA
                                     EXTERN  OPEN,WRWAIT,RDWAIT,CLOSE,FSTATE,BUFFER 
                              *     
                              *      ASSIGN.($NAME1$,$NAME2$)     
                              *     
                  
        TRANSFER VECTOR 
      00000  272563226426     GETBUF
      00001  622563222324     SETBCD
      00002  622563266443     SETFUL
      00003  665126436760     WRFLX 
      00004  665126436721     WRFLXA
      00005  464725456060     OPEN  
      00006  665166213163     WRWAIT
      00007  512466213163     RDWAIT
      00010  234346622560     CLOSE 
      00011  266263216325     FSTATE
      00012  226426262551     BUFFER
                  
            LINKAGE DIRECTOR  
      00013  000000000000     
      00014  216262312745     
                  
      00015 -0500 60 4 00001  ASSIGN CAL*    1,4           OPEN FILE, GET FILE NAME.
      00016  0602 00 0 00304         SLW     OUTNAM        ..     
      00017 -0500 60 4 00002         CAL*    2,4           ..     
      00020  0602 00 0 00305         SLW     OUTNAM+1      ..     
      00021  0634 00 4 00041         SXA     OPX4,4        SAVE LINKAGE.
      00022  0020 00 0 00023   OSW   TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                    *******************
      00023 -0500 00 0 00315         CAL     WBFSZ         GET AN OUTPUT BUFFER FROM SUPERVISOR.
      00024  0074 00 4 00000         TSX     GETBUF,4      ..     
      00025  0621 00 0 00071         STA     WCALL         SAVE LOCATION OF BUFFER. 
      00026  0621 00 0 00113         STA     CLCALL        TO CLOSE OUT FILE. 
      00027  0361 00 0 00315         ACL     WBFSZ         ADD LENGTH, TO FORM END ADDRESS.     
      00030  0621 00 0 00060         STA     WRNM          INSERT IN INSERTER.
      00031 -0500 00 0 00313         CAL     TRKSZ         GET A DISK TRACK BUFFER. 
      00032  0074 00 4 00000         TSX     GETBUF,4      ..     
      00033  0621 00 0 00055         STA     BFCALL        SET UP BUFFER CALLER.    
      00034 -0625 00 0 00022         STL     OSW           RESET ONE-TIME SWITCH.   
                              *                                                    *******************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                   04/23/69 1349.6 PAGE 2     
                  
      00035  0774 00 4 00040         AXT     OPOK,4        SET QUOTA EXHAUSTED ERROR RETURN.    
      00036  0634 00 4 00143         SXA     WRTN,4        ..     
      00037  0074 00 3 00043         TSX     OPN,3         OPEN THE FILE.     
      00040  0774 00 7 00330  OPOK   AXT     WBFLTH,7      SET UP STORAGE COUNT.    
      00041  0774 00 4 00000   OPX4  AXT     --,4          RESTORE LINKAGE.   
      00042  0020 00 4 00003         TRA     3,4           RETURN.
                              *     
      00043  0074 00 4 00005  OPN    TSX     OPEN,4        OPEN FILE.   
 TD   00044  3 00000 0 00324         TXH     =HW           FOR WRITING. 
 TD   00045  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00046  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00047  3 00000 0 00156         TXH     MODE          MAKE IT PERMANENT IF POSSIBLE. 
 TD   00050  3 00000 0 00320         TXH     =2            PUT IT ON THE DISK.
 TD   00051  3 00000 0 00127  OPERR  TXH     OEXH          IN CASE NO MORE QUOTA AVAILABLE.     
      00052  0074 00 4 00012         TSX     BUFFER,4      ASSIGN A BUFFER FOR THE FILE.  
 TD   00053  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00054  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00055  3 00660 0 00000  BFCALL TXH     --,,TRKLTH    ..     
      00056  0020 00 3 00001         TRA     1,3           RETURN TO CALLER.  
                              *     
                              *     
                              *      ENTRY TO ADD A WORD TO FILE. 
                              *              WRWORD.(WORD)  
                              *     
      00057 -0500 60 4 00001  WRWORD CAL*    1,4           GET WORD TO BE ADDED.    
      00060  0602 00 7 00000   WRNM  SLW     --,7          ADD WORD TO OUTPUT BUFFER.     
      00061  2 00001 7 00077         TIX     RETURN,7,1    COUNT AND CHECK FOR FULL BUFFER.     
      00062  0634 00 4 00076   FULL  SXA     FULX4,4       BUFFER FULL, WRITE IT OUT.     
      00063  0774 00 4 00065         AXT     WRAGN,4       SET UP EXHAUSTED RETURN ADDRESS.     
      00064  0634 00 4 00143         SXA     WRTN,4        ..     
      00065  0074 00 4 00006  WRAGN  TSX     WRWAIT,4      GIVE BUFFER TO SUPERVISOR.     
 TD   00066  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00067  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00070  3 00000 0 00316         TXH     =0            ..     
      00071  3 00330 0 00000  WCALL  TXH     --,,WBFLTH    ..     
 TD   00072  3 00000 0 00321         TXH     =-0           IGNORE POSSIBLE EOF.     
 TD   00073  3 00000 0 00321         TXH     =-0           ..     
 TD   00074  3 00000 0 00124  WRERR  TXH     WEXH          ALLOW ERROR RETURN.
      00075  0774 00 7 00330         AXT     WBFLTH,7      RESET BUFFER POINTER.    
      00076  0774 00 4 00000   FULX4 AXT     --,4          RESTORE LINKAGE.   
      00077  0020 00 4 00002  RETURN TRA     2,4           RETURN TO CALLER.  
                              *     
                              *      FILE.     NO ARGUMENTS.
                              *     
      00100  0634 00 4 00122  FILE   SXA     CL4,4         ENTRY TO CLOSE OUT FILE. 
      00101 -0634 00 7 00103         SXD     *+2,7         FORM COUNT OF WORDS SINCE
      00102  0774 00 7 00330         AXT     WBFLTH,7      LAST BUFFER WAS WRITTEN. 
      00103 -2 00000 7 00117         TNX     NOWR,7,--     IF ZERO, SKIP FINAL WRITE CALL.
      00104 -0634 00 7 00113         SXD     CLCALL,7      NON-ZERO, SET UP WRITE CALL.   
      00105  0774 00 4 00107         AXT     FWR,4         SET UP RETURN ADDRESS FOR EXHAUSTED CASE.  
      00106  0634 00 4 00143         SXA     WRTN,4        ..     
      00107  0074 00 4 00006  FWR    TSX     WRWAIT,4      WRITE OUT PARTIAL BUFFER.
 TD   00110  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00111  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00112  3 00000 0 00316         TXH     =0            ..     
      00113  3 00000 0 00000  CLCALL TXH     --,,--        ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                   04/23/69 1349.6 PAGE 3     
                  
 TD   00114  3 00000 0 00321         TXH     =-0           IGNORE EOF RETURN. 
 TD   00115  3 00000 0 00321         TXH     =-0           ..     
 TD   00116  3 00000 0 00124         TXH     WEXH          ALLOW ERROR RETURN.
      00117  0074 00 4 00010  NOWR   TSX     CLOSE,4       CLOSE OUT THE FILE.
 TD   00120  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00121  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00122  0774 00 4 00000   CL4   AXT     --,4          RESTORE LINKAGE.   
      00123  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00124  0074 00 4 00010  WEXH   TSX     CLOSE,4       TRACK QUOTA EXHAUSTED, CLOSE FILE.   
 TD   00125  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00126  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00127  0074 00 4 00001  OEXH   TSX     SETBCD,4      ENTRY FROM OPEN ERROR, COMMENT.
      00130  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00131  0074 00 4 00003         TSX     WRFLX,4       ..     
      00132  0 00011 0 00144                 ERMESS,,9
      00133  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00134  0074 00 4 00002         TSX     SETFUL,4      YES, RESET INDICATOR.    
      00135 -0500 00 0 00317         CAL     =1            SWITCH TO TEMPORARY MODE.
      00136  0601 00 0 00156         STO     MODE          ..     
      00137 -0500 00 0 00155         CAL     NOP           BLOCK FUTURE ERROR RETURN.     
      00140  0602 00 0 00051         SLW     OPERR         ..     
      00141  0602 00 0 00074         SLW     WRERR    
      00142  0074 00 3 00043         TSX     OPN,3         NOW, OPEN IT AGAIN.
      00143  0020 00 0 00000  WRTN   TRA     --            ALL FIXED, RETURN TO MAIN STREAM.    
                              *     
      00144  635121234260     ERMESS BCI     9,TRACK QUOTA EXHAUSTED, TEMPORARY MODE WILL BE USED.    
      00145  506446632160     
      00146  256730216462     
      00147  632524736063     
      00150  254447465121     
      00151  517060444624     
      00152  256066314343     
      00153  602225606462     
      00154  252433606060     
      00155  0761 00 0 00000   NOP   NOP                   INSTRUCTION TO BLOCK ERROR RETURN.   
      00156  0 00000 0 00000  MODE           0             START IN PERMANENT MODE. 
      00157  0 00000 0 00000  MODSW                        TEMP STORAGE FOR 6-BIT,12-BIT INDICATOR.   
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     
                              *      SEEK.($NAME1$, $NAME2$, ERRET)     
                              *      ERROR RETURN MEANS FILE NOT FOUND. 
                              *     
      00160 -0500 60 4 00001   SEEK  CAL*    1,4           GET FILE NAME.     
      00161  0602 00 0 00306         SLW     INNAM         ..     
      00162 -0500 60 4 00002         CAL*    2,4           ..     
      00163  0602 00 0 00307         SLW     INNAM+1       ..     
      00164  0634 00 4 00222         SXA     SKX4,4        SAVE LINKAGE.
      00165  0020 00 0 00166   SKSW  TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                  *********************
      00166 -0500 00 0 00314         CAL     RBFSZ         GET A BUFFER FROM SUPERVISOR.  
      00167  0074 00 4 00000         TSX     GETBUF,4      ..     
      00170  0621 00 0 00257         STA     ECALL         STORE BUFFER LOCATION.   
      00171  0621 00 0 00217         STA     STCALL        ..     
      00172 -0625 00 0 00165         STL     SKSW          RESET ONE-TIME SWITCH.   
                              *                                                  *********************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                   04/23/69 1349.6 PAGE 4     
                  
      00173 -0500 00 0 00217         CAL     STCALL        SET UP PICKUP INSTRUCTION FOR INDEXING.    
      00174  0361 00 0 00314         ACL     RBFSZ         ..     
      00175  0621 00 0 00242         STA     RDWORD        ..     
      00176  0074 00 4 00011         TSX     FSTATE,4      MAKE SURE FILE IS THERE. 
 TD   00177  3 00000 0 00306         TXH     INNAM         ..     
 TD   00200  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00201  3 00000 0 00321         TXH     =-0           DON'T WANT DATA.   
 TD   00202  3 00000 0 00224         TXH     NOTFN         ERROR RETURN MEANS FILE NOT THERE.   
      00203  0074 00 4 00005         TSX     OPEN,4        OPEN THE FILE FOR READING.     
 TD   00204  3 00000 0 00322         TXH     =HR           ..     
 TD   00205  3 00000 0 00306         TXH     INNAM         ..     
 TD   00206  3 00000 0 00307         TXH     INNAM+1       ..     
      00207  0774 00 6 00660         AXT     RBFLTH,6      SET UP BUFFER COUNTER.   
      00210  0774 00 4 00222         AXT     SKX4,4        SET END OF FILE RETURN.  
      00211  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00212  0600 00 0 00312         STZ     EOFR          CLEAR END OF FILE SWITCH.
      00213  0074 00 4 00007         TSX     RDWAIT,4      GET INITIAL BUFFER LOAD. 
 TD   00214  3 00000 0 00306         TXH     INNAM         ..     
 TD   00215  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00216  3 00000 0 00316         TXH     =0            ..     
      00217  3 00660 0 00000  STCALL TXH     --,,RBFLTH    ..     
 TD   00220  3 00000 0 00265         TXH     EOF           END OF FILE RETURN.
 TD   00221  3 00000 0 00311         TXH     EOFCT         ..     
      00222  0774 00 4 00000   SKX4  AXT     --,4          RESTORE LINKAGE.   
      00223  0020 00 4 00004         TRA     4,4           RETURN TO CALLER.  
                              *     
      00224  0074 00 4 00001  NOTFN  TSX     SETBCD,4      FILE NOT FOUND, COMMENT. 
      00225  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00226  0074 00 4 00004         TSX     WRFLXA,4      START UP COMMENT.  
      00227  0 00001 0 00323                 =H FILE ,,1   ..     
      00230  0074 00 4 00004         TSX     WRFLXA,4      INSERT FILE NAME.  
      00231  0 00002 0 00306                 INNAM,,2      ..     
      00232  0074 00 4 00003         TSX     WRFLX,4       END OF COMMENT.    
      00233  0 00002 0 00240                 ECM,,2        ..     
      00234  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00235  0074 00 4 00002         TSX     SETFUL,4      YES, RESET MODE.   
      00236  0534 00 4 00222         LXA     SKX4,4        GIVE ERROR RETURN. 
      00237  0020 60 4 00003         TRA*    3,4           ..     
                              *     
      00240  604546636026     ECM    BCI     2, NOT FOUND.  
      00241  466445243360     
                              *     
                              *      ENTRY TO OBTAIN WORD FROM FILE.    
                              *              WORD = RDWORD.(EOF)  
                              *     
      00242  0500 00 6 00000  RDWORD CLA     --,6          GET WORD FROM INPUT BUFFER.    
      00243  2 00001 6 00264         TIX     GOBACK,6,1    INDEX, AND CHECK FOR EMPTY BUFFER.   
      00244  0520 00 0 00312         ZET     EOFR          BUFFER EMPTY, HAS END OF FILE OCCURRED.    
      00245  0020 60 4 00001         TRA*    1,4           YES, GIVE EOF RETURN.    
      00246  0601 00 0 00310         STO     RTEMP         NO, SAVE WORD AND GET SOME MORE DATA.
      00247  0634 00 4 00263         SXA     EMPX4,4       SAVE LINKAGE, ALSO.
      00250  0774 00 6 00660         AXT     RBFLTH,6      RESET BUFFER POINTER.    
      00251  0774 00 4 00262         AXT     EMPGT,4       SET END OF FILE RETURN.  
      00252  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00253  0074 00 4 00007         TSX     RDWAIT,4      GET ANOTHER BUFFER LOAD OF DATA.     
 TD   00254  3 00000 0 00306         TXH     INNAM         ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                   04/23/69 1349.6 PAGE 5     
                  
 TD   00255  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00256  3 00000 0 00316         TXH     =0            ..     
      00257  3 00660 0 00000  ECALL  TXH     --,,RBFLTH    ..     
 TD   00260  3 00000 0 00265         TXH     EOF           ..     
 TD   00261  3 00000 0 00311         TXH     EOFCT         ..     
      00262  0500 00 0 00310   EMPGT CLA     RTEMP         RESTORE WORD FOR THIS CALL.    
      00263  0774 00 4 00000   EMPX4 AXT     --,4          RESTORE LINKAGE.   
      00264  0020 00 4 00002  GOBACK TRA     2,4           RETURN TO CALLER.  
                              *     
      00265 -0625 00 0 00312  EOF    STL     EOFR          END OF FILE REACHED, SET SWITCH.     
      00266 -0500 00 0 00311         CAL     EOFCT         GET COUNT OF WORDS LEFT. 
      00267  0361 00 0 00317         ACL     =1            BUGGER WORD COUNT. 
      00270  0734 00 6 00000         PAX     0,6           SET WORD COUNTER.  
      00271  0361 00 0 00257         ACL     ECALL         ADJUST PICKUP INSTRUCTION.     
      00272  0621 00 0 00242         STA     RDWORD        ..     
      00273  0074 00 4 00275         TSX     ENDRD,4       TURN OFF FILE.     
      00274  0020 00 0 00000  EOFRTN TRA     --            RETURN TO END OF RDFILE CALLING SEQUENCE.  
                              *     
                              *      ENTRY TO CLOSE INPUT FILE.   
                              *      ENDRD.     
                              *     
      00275  0634 00 4 00302  ENDRD  SXA     ENDX4,4       SAVE LINKAGE.
      00276  0074 00 4 00010         TSX     CLOSE,4       CLOSE FILE.  
 TD   00277  3 00000 0 00306         TXH     INNAM         ..     
 TD   00300  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00301  3 00000 0 00302         TXH     *+1           IGNORE ANY ERROR RETURN. 
      00302  0774 00 4 00000  ENDX4  AXT     --,4          RESTORE LINKAGE.   
      00303  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00304  545454545454     OUTNAM BCI     2,************  NAME OF OUTPUT FILE.   
      00305  545454545454     
      00306  545454545454      INNAM BCI     2,************  NAME OF INPUT FILE.    
      00307  545454545454     
      00310  0 00000 0 00000   RTEMP                       STORAGE FOR WORD.  
      00311  0 00000 0 00000  EOFCT                        STORAGE FOR END OF FILE COUNTER.     
      00312  0 00000 0 00312   EOFR          *             SWITCH FOR END OF FILE MET.    
                              *     
                       00660  TRKLTH EQU     432           DISK TRACK LENGTH. 
      00313  0 00000 0 00660   TRKSZ         TRKLTH        WORD CONTAINING TRACK LENGTH.  
                       00660  RBFLTH EQU     TRKLTH        READ BUFFER LENGTH.
                       00330  WBFLTH EQU     TRKLTH/2      WRITE BUFFER LENGTH.     
      00314  0 00000 0 00660  RBFSZ          RBFLTH        WORD CONTAINING READ BUFFER SIZE.    
      00315  0 00000 0 00330  WBFSZ          WBFLTH        WORD CONTAINING WRITE BUFFER SIZE.   
                              *     
                                     END  
                  
        LITERALS  
      00316  000000000000     
      00317  000000000001     
      00320  000000000002     
      00321  400000000000     
      00322  516060606060     
      00323  602631432560     
      00324  666060606060     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                   04/23/69 1349.6 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        325 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        122    CL4   100
        240    ECM   233
        265    EOF   220,  260
        107    FWR   105
        155    NOP   137
         43    OPN    37,  142
         22    OSW    34
        312   EOFR   212,  244,  265
        100   FILE     0
         62   FULL      
        156   MODE    47,  136
        117   NOWR   103
        127   OEXH    51
          5   OPEN    43,  203
         40   OPOK    35
         41   OPX4    21
        160   SEEK     0
        165   SKSW   172
        222   SKX4   164,  210,  236
        124   WEXH    74,  116
         60   WRNM    30
        143   WRTN    36,   64,  106
         10  CLOSE   117,  124,  276
        257  ECALL   170,  271
        262  EMPGT   251
        263  EMPX4   247
        275  ENDRD     0,  273
        302  ENDX4   275
        311  EOFCT   221,  261,  266
         76  FULX4    62
        306  INNAM   161,  163,  177,  200,  205,  206,  214,  215,  231,  254,  255,  277,  300
        157  MODSW   130,  133,  225,  234
        224  NOTFN   202
         51  OPERR   140
        314  RBFSZ   166,  174
        310  RTEMP   246,  262
        313  TRKSZ    31
        315  WBFSZ    23,   27
         71  WCALL    25
         65  WRAGN    63
         74  WRERR   141
          3  WRFLX   131,  232
         15 ASSIGN     0
         55 BFCALL    33
         12 BUFFER    52
        113 CLCALL    26,  104
        274 EOFRTN   211,  252
        144 ERMESS   132
         11 FSTATE   176
          0 GETBUF    24,   32,  167
        264 GOBACK   243
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                   04/23/69 1349.6 PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        304 OUTNAM    16,   20,   45,   46,   53,   54,   66,   67,  110,  111,  120,  121,  125,  126
        660 RBFLTH   207,  217,  250,  257,  314
          7 RDWAIT   213,  253
        242 RDWORD     0,  175,  272
         77 RETURN    61
          1 SETBCD   127,  224
          2 SETFUL   134,  235
        217 STCALL   171,  173
        660 TRKLTH    55,  313,  314
        330 WBFLTH    40,   71,   75,  102,  314,  315
          4 WRFLXA   226,  230
          6 WRWAIT    65,  107
         57 WRWORD     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                          04/23/69 1353.3 PAGE 1     
                  
                              *      USAGE:  CLRNAM.(NAME1, NAME2, CANT, SW)  
                              *        FILE NAME1 NAME2 WILL BE CHECKED FOR AND     
                              *        DELETED IF POSSIBLE.  IF SW
                              *        IS TRUE, USER WILL BE ASKED BEFORE DELETING  
                              *        THE OLD FILE.  
                              *     
                       00012         ENTRY   CLRNAM        CLEAR FILE NAME.   
                              *     
                                     EXTERN  SETFUL,SETBCD,WRFLX,WRFLXA,RDFLXA
                                     EXTERN  FSTATE,CHFILE,DELFIL 
                              *     
                  
        TRANSFER VECTOR 
      00000  622563266443     SETFUL
      00001  622563222324     SETBCD
      00002  665126436760     WRFLX 
      00003  665126436721     WRFLXA
      00004  512426436721     RDFLXA
      00005  266263216325     FSTATE
      00006  233026314325     CHFILE
      00007  242543263143     DELFIL
                  
            LINKAGE DIRECTOR  
      00010  000000000000     
      00011  234351452144     
                  
      00012 -0500 60 4 00001  CLRNAM CAL*    1,4           GET FILE NAME.     
      00013  0602 00 0 00121         SLW     N1            ..     
      00014 -0500 60 4 00002         CAL*    2,4           SECONDARY NAME.    
      00015  0602 00 0 00122         SLW     N2            ..     
      00016  0634 00 4 00147         SXA     SV4,4         SAVE LINKAGE.
      00017  0074 00 4 00005         TSX     FSTATE,4      CHECK STATE OF FILE.     
 TD   00020  3 00000 0 00121         TXH     N1            NAME   
 TD   00021  3 00000 0 00122         TXH     N2            NAME   
      00022  3 00010 0 00156         TXH     DATA,,8       FILE STATE   
 TD   00023  3 00000 0 00112         TXH     FSTERR        IN CASE OF ERROR   
 TD   00024  3 00000 0 00155         TXH     ERNO          GATHER ERROR NUMBER.     
      00025  0441 00 0 00157         LDI     MODE          CHECK MODE OF FILE.
      00026 -0054 00  400000         LFT     400000        IS MODE NEGATIVE.  
      00027  0020 00 0 00100         TRA     LINKED        YES, FILE IS LINKED.     
      00030  0600 00 0 00154         STZ     PROTEC        ASSUME NOT PROTECTED.    
      00031  0056 00  000100         RNT     100           CHECK PROTECTED BIT.     
      00032  0020 00 0 00035         TRA     CKASK         NOT PROTECTED, SHOULD WE ASK ANYWAY. 
      00033 -0625 00 0 00154         STL     PROTEC        PROTECTED, SET SWITCH FOR LONG COMMENT.    
      00034  0020 00 0 00040         TRA     ASK           GO ASK PERMISSION TO DELETE FILE.    
      00035  0534 00 4 00147  CKASK  LXA     SV4,4         GET LINKAGE TO ASK SWITCH.     
      00036 -0520 60 4 00004         NZT*    4,4           SHOULD WE ASK PERMISSION ANYWAY.     
      00037  0020 00 0 00065         TRA     DELETE        NO, GO DELETE FILE.
      00040  0074 00 4 00000  ASK    TSX     SETFUL,4      SET CHARACTER MODE SWITCH.     
      00041  0074 00 4 00003         TSX     WRFLXA,4      BEGIN THE COMMENT. 
      00042  0 00003 0 00116                 MI,,3         ..     
      00043  0074 00 4 00001         TSX     SETBCD,4      SWITCH TO BCD FOR FILE NAME.   
      00044  0074 00 4 00003         TSX     WRFLXA,4      WRITE OUT FILE NAME.     
      00045  0 00002 0 00121                 N1,,2    
      00046  0074 00 4 00000         TSX     SETFUL,4      BACK TO FULL MODE. 
      00047 -0520 00 0 00154         NZT     PROTEC        SHOULD WE CLAIM IT IS PROTECTED.     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                          04/23/69 1353.3 PAGE 2     
                  
      00050  0020 00 0 00053         TRA     SKPPCM        NO, SKIP THAT PART.
      00051  0074 00 4 00003         TSX     WRFLXA,4      YES, ANNOUNC PROTECTED PART.   
      00052  0 00006 0 00123                 ISPTC,,6      ..     
      00053  0074 00 4 00003  SKPPCM TSX     WRFLXA,4      NOW ASK FOR PERMISSION.  
      00054  0 00012 0 00131                 DOYOU,,10     ..     
      00055  0074 00 4 00001         TSX     SETBCD,4      SWITCH SO ERASE WORKS.   
      00056  0074 00 4 00004         TSX     RDFLXA,4 
      00057  0 00001 0 00150                 IN,,1         GET ONE WORD.
      00060  0074 00 4 00000         TSX     SETFUL,4      RESTORE MODE.
      00061 -0500 00 0 00150         CAL     IN            GET THAT WORD.     
      00062  0771 00 0 00022         ARS     18            GET FIRST THREE CHARACTERS.    
      00063  0322 00 0 00170         ERA     =H000YES      DID HE SAY YES.    
      00064 -0100 00 0 00076         TNZ     ERTN          NO, GIVE ERROR RETURN.   
      00065  0074 00 4 00006  DELETE TSX     CHFILE,4      GOODY, WE CAN DELETE IT. 
 TD   00066  3 00000 0 00121         TXH     N1            MAKE SURE IT IS DELETEABLE.    
 TD   00067  3 00000 0 00122         TXH     N2            ..     
 TD   00070  3 00000 0 00166         TXH     =1            BY CHANGING ITS MODE TO TEMPORARY.   
      00071  0074 00 4 00007         TSX     DELFIL,4      DELETE THE SILLY THING.  
 TD   00072  3 00000 0 00121         TXH     N1            ..     
 TD   00073  3 00000 0 00122         TXH     N2            ..     
      00074  0534 00 4 00147  RTN    LXA     SV4,4         RESTORE THE LINKAGE.     
      00075  0020 00 4 00005         TRA     5,4           RETURN TO CALLER.  
                              *     
      00076  0534 00 4 00147  ERTN   LXA     SV4,4         ERROR RETURN, FILE CANNOT BE DELETED.
      00077  0020 60 4 00003         TRA*    3,4           RETURN THROUGH ERROR RETURN.   
                              *     
      00100  0074 00 4 00000  LINKED TSX     SETFUL,4      FILE IS LINKED, COMMENT AND GIVE UP. 
      00101  0074 00 4 00003         TSX     WRFLXA,4      START THE COMMENT. 
      00102  0 00003 0 00116                 MI,,3         ..     
      00103  0074 00 4 00001         TSX     SETBCD,4      SWITCH MODE FOR FILE NAME.     
      00104  0074 00 4 00003         TSX     WRFLXA,4      TYPE FILE NAME.    
      00105  0 00002 0 00121                 N1,,2         ..     
      00106  0074 00 4 00000         TSX     SETFUL,4      SWITCH FOR REST OF COMMENT.    
      00107  0074 00 4 00002         TSX     WRFLX,4       END THIS PART WITH A C.R.
      00110  0 00004 0 00143                 ISLNK,,4      ..     
      00111  0020 00 0 00076         TRA     ERTN          NOW GIVE AN ERROR RETURN.
                              *     
      00112  0500 00 0 00155  FSTERR CLA     ERNO          ERROR RETURN FROM FSTATE, FIND OUT WHY.    
      00113  0402 00 0 00167         SUB     =3            RETURN 3 MEANS FILE NOT FOUND. 
      00114 -0100 00 0 00100         TNZ     LINKED        WRONG ERROR RETURN, ASSUME LINKED.   
      00115  0020 00 0 00074         TRA     RTN           FILE NOT FOUND, NAME IS OK.    
                              *     
                              *                            DATA, COMMENTS, ETC.     
                              *     
      00116  004601430124     MI     BCI     3,0O1L1D0 1F1I1L1E0  
      00117  006001260131     
      00120  014301250060     
                              *     
      00121  0 00000 0 00000  N1                           STORAGE FOR FILE NAME.   
      00122  0 00000 0 00000  N2                           SECONDARY NAME.    
                              *     
      00123  006001310162     ISPTC  BCI     1,0 1I1S 
      00124 +006001330057            OCT     006001330057  BLANK, RED SHIFT, NULL.  
      00125  004700510046            BCI     3,0P0R0O0T0E0C0T0E0D 
      00126  006300250023     
      00127  006300250024     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                          04/23/69 1353.3 PAGE 3     
                  
      00130 +013200330060            OCT     013200330060  BLACK SHIFT, PERIOD, BLANK.    
      00131  006000400040     DOYOU  BCI     9,0 0-0-0D1O0 1Y1O1U0 1W1I1S1H0 1T1O0 1D1E1L1E1T1E0 1I1T 
      00132  002401460060     
      00133  017001460164     
      00134  006001660131     
      00135  016201300060     
      00136  016301460060     
      00137  012401250143     
      00140  012501630125     
      00141  006001310163     
      00142 +015600600060            OCT     015600600060  TERMINAL QUESTION MARK.  
                              *     
      00143  006001310162     ISLNK  BCI     4,0 1I1S0 1L1I1N1K1E1D0.   
      00144  006001430131     
      00145  014501420125     
      00146  012400336060     
                              *     
      00147  0 00000 0 00000  SV4                          STORAGE FOR CALLING LINKAGE.   
      00150                   IN     BSS     4             FOR INPUT WORD.    
      00154  0 00000 0 00000  PROTEC                       SWITCH FOR PROTECTED FILE.     
      00155  0 00000 0 00000  ERNO                         STORAGE FOR ERROR NUMBER.
      00156                   DATA   BSS     8             FOR STATE INFORMATION.   
                       00161  DEVICE EQU     DATA+3   
                       00157  MODE   EQU     DATA+1   
                              *     
                                     END  
                  
        LITERALS  
      00166  000000000001     
      00167  000000000003     
      00170  000000702562     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                          04/23/69 1353.3 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        171 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        150     IN    57,   61
        116     MI    42,  102
        121     N1    13,   20,   45,   66,   72,  105
        122     N2    15,   21,   67,   73
         40    ASK    34
         74    RTN   115
        147    SV4    16,   35,   74,   76
        156   DATA    22,  166
        155   ERNO    24,  112
         76   ERTN    64,  111
        157   MODE    25,  166
         35  CKASK    32
        131  DOYOU    54
        143  ISLNK   110
        123  ISPTC    52
          2  WRFLX   107
          6 CHFILE    65
         12 CLRNAM     0
         65 DELETE    37
          7 DELFIL    71
        161 DEVICE   166
          5 FSTATE    17
        112 FSTERR    23
        100 LINKED    27,  114
        154 PROTEC    30,   33,   47
          4 RDFLXA    56
          1 SETBCD    43,   55,  103
          0 SETFUL    40,   46,   60,  100,  106
         53 SKPPCM    50
          3 WRFLXA    41,   44,   51,   53,  101,  104
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.       04/23/69 1354.6 PAGE 1     
                  
                              *        J. H. SALTZER, MAY, 1965.  
                              *     
                       00004         ENTRY   RENAME        RENAME FILE. 
                              *     
                                     EXTERN CHFILE,WRFLX    
                              *     
                  
        TRANSFER VECTOR 
      00000  233026314325     CHFILE
      00001  665126436760     WRFLX 
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  512545214425     
                  
      00004  0500 60 4 00001  RENAME CLA*    1,4           GET FILE NAMES.    
      00005  0601 00 0 00071         STO     OLD1          ..     
      00006  0500 60 4 00002         CLA*    2,4           ..     
      00007  0601 00 0 00072         STO     OLD2          ..     
      00010  0601 00 0 00074         STO     NEW2          ASSUME NO CHANGE IN SECONDARY NAMES. 
      00011  0500 60 4 00003         CLA*    3,4           ..     
      00012  0601 00 0 00073         STO     NEW1          ..     
      00013  0560 00 4 00004         LDQ     4,4           CHECK FOR TXH
      00014  0500 00 0 00076         CLA     =O300000000000 ..    
      00015  0040 00 0 00020         TLQ     SKPN2         NO TXH, SECONDARY NAME UNCHANGED.    
      00016  0500 60 4 00004         CLA*    4,4           TXH, CHANGE SECONDARY NAME.    
      00017  0601 00 0 00074         STO     NEW2          ..     
      00020  0634 00 4 00036  SKPN2  SXA     RETURN,4      SAVE LINKAGE.
      00021  0074 00 4 00000         TSX     CHFILE,4      CHANGE NAME WITHOUT CHANGING MODE.   
 TD   00022  3 00000 0 00071         TXH     OLD1          ..     
 TD   00023  3 00000 0 00072         TXH     OLD2          ..     
 TD   00024  3 00000 0 00077         TXH     =-0           MODE UNCHANGED.    
 TD   00025  3 00000 0 00073         TXH     NEW1          ..     
 TD   00026  3 00000 0 00074         TXH     NEW2          ..     
      00027  0074 00 4 00000         TSX     CHFILE,4      CHANGE MODE WITHOUT CHANGING NAME.   
 TD   00030  3 00000 0 00073         TXH     NEW1          ..     
 TD   00031  3 00000 0 00074         TXH     NEW2          ..     
 TD   00032  3 00000 0 00075         TXH     =0            PERMANENT MODE.    
 TD   00033  3 00000 0 00077         TXH     =-0           NAME UNCHANGED.    
 TD   00034  3 00000 0 00077         TXH     =-0           ..     
 TD   00035  3 00000 0 00040         TXH     CHERR         IN CASE MODE UNCHANGEABLE.     
      00036  0774 00 4 00000  RETURN AXT     --,4          RESTORE LINKAGE.   
      00037  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
      00040  0074 00 4 00001  CHERR  TSX     WRFLX,4       ASSUME TRACK QUOTA EXHAUSTED, AND COMMENT. 
      00041  0 00010 0 00045                 TRKQUO,,8     ..     
      00042  0074 00 4 00001         TSX     WRFLX,4       MENTION THAT NEW FILE IS TEMP MODE.  
      00043  0 00013 0 00055                 TMPMOD,,11    ....   
      00044  0020 00 0 00036         TRA     RETURN        EXIT.  
                              *     
                              *              COMMENTS AND STORAGE.
                              *     
      00045  006301510121     TRKQUO BCI     8,0T1R1A1C1K0 1Q1U1O1T1A0 0E0X0H0A0U0S0T0E0D0.     
      00046  012301420060     
      00047  015001640146     
      00050  016301210060     
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.       04/23/69 1354.6 PAGE 2     
                  
      00051  002500670030     
      00052  002100640062     
      00053  006300250024     
      00054  003360606060     
                              *     
      00055  007001460164     TMPMOD BCI     5,0Y1O1U1R0 1N1E1W0 1F1I1L1E0 1I 
      00056  015100600145     
      00057  012501660060     
      00060  012601310143     
      00061  012500600131     
      00062 +016200600133            OCT     016200600133  S, BLANK, RED SHIFT.     
      00063  006300250044            BCI     3,0T0E0M0P0O0R0A0R0Y 
      00064  004700460051     
      00065  002100510070     
      00066 +013200600144            OCT     013200600144  BLACK SHIFT, BLANK, SMALL M.   
      00067  014601240125            BCI     2,1O1D1E0.     
      00070  003360606060     
                              *     
      00071  0 00000 0 00000  OLD1  
      00072  0 00000 0 00000  OLD2  
      00073  0 00000 0 00000  NEW1  
      00074  0 00000 0 00000  NEW2  
                              *     
                                     END  
                  
        LITERALS  
      00075  000000000000     
      00076  300000000000     
      00077  400000000000     
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.       04/23/69 1354.6 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        100 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         73   NEW1    12,   25,   30
         74   NEW2    10,   17,   26,   31
         71   OLD1     5,   22
         72   OLD2     7,   23
         40  CHERR    35
         20  SKPN2    15
          1  WRFLX    40,   42
          0 CHFILE    21,   27
          4 RENAME     0
         36 RETURN    20,   44
         55 TMPMOD    43
         45 TRKQUO    41
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                       04/23/69 1354.9 PAGE 1     
                  
                              *     
                              *      J. H. SALTZER, JANUARY, 1965.
                              *     
                       00004         ENTRY   PRWORD        ADD A WORD TO PRINT BUFFER.    
                       00021         ENTRY   PRBUFF        PRINT OUT PARTIAL BUFFER.
                       00030         ENTRY   TYWORD        GET NEXT TYPED WORD.     
                       00047         ENTRY   TYLINE        RESET TO START READING NEXT LINE.    
                              *     
                                     EXTERN RDFLXA,WRFLXA   
                              *     
                  
        TRANSFER VECTOR 
      00000  512426436721     RDFLXA
      00001  665126436721     WRFLXA
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  475166465124     
                  
                       00034  BUFLEN EQU     28            TYPEWRITER BUFFER SIZE.  
                              *     
                              *      ADD WORD TO PRINT BUFFER.    
                              *      PRWORD.(WORD)    
                              *     
      00004  0634 00 4 00017  PRWORD SXA     PRX4,4        SAVE LINKAGE.
      00005 -0500 60 4 00001         CAL*    1,4           GET WORD BEING ADDED.    
      00006 -0734 00 4 00000         PDX     0,4           CHECK FOR DISK CONTROL WORD.   
      00007  3 77776 4 00017         TXH     PRX4,4,-2     DON'T STORE CONTROL WORD.
      00010  0774 00 4 00034   PWCNT AXT     BUFLEN,4      SET WORD COUNTER (INITIALLY BUFLEN.) 
      00011  0602 00 4 00105         SLW     BUFF+BUFLEN,4 STORE WORD IN BUFFER.    
      00012  2 00001 4 00016         TIX     PSAVE,4,1     COUNT, CHECK FOR OVERFLOW.     
      00013  0074 00 4 00001         TSX     WRFLXA,4      BUFFER FULL, PRINT W/O C.R.    
      00014  0 00034 0 00051                 BUFF,,BUFLEN  ..     
      00015  0774 00 4 00034  PFRESH AXT     BUFLEN,4      RESET WORD COUNTER.
      00016  0634 00 4 00010   PSAVE SXA     PWCNT,4       SAVE WORD COUNTER. 
      00017  0774 00 4 00000   PRX4  AXT     --,4          RESTORE LINKAGE.   
      00020  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
                              *      PRINT OUT REMAINING BUFFER, RESET COUNTER.     
                              *     
      00021  0634 00 4 00017  PRBUFF SXA     PRX4,4        SAVE LINKAGE.
      00022  0535 00 4 00010         LAC     PWCNT,4       GET WORD COUNT.    
      00023  1 00034 4 00024         TXI     *+1,4,BUFLEN  FORM COMPLEMENT MOD BUFLEN.    
      00024 -0634 00 4 00026         SXD     PRCL,4        SAVE COUNT IN CALLER.    
      00025  0074 00 4 00001         TSX     WRFLXA,4      PRINT REMAINDER.   
      00026  0 00000 0 00051   PRCL          BUFF,,--      ..     
      00027  0020 00 0 00015         TRA     PFRESH        GO REFRESH COUNTER, AND RETURN.
                              *     
                              *      GET A WORD FROM INPUT BUFFER.
                              *         WORD = TYWORD.(0)   
                              *     
      00030  0634 00 4 00045  TYWORD SXA     TYX4,4        SAVE LINKAGE.
      00031  0774 00 5 00000  TYCNT  AXT     --,5          GET WORD COUNTER.  
      00032  0774 00 4 00000  TYPOS  AXT     --,4          GET BUFFER POINTER.
      00033  2 00006 5 00041         TIX     TYGET,5,6     CHECK FOR WORDS LEFT.    
      00034  0074 00 4 00000         TSX     RDFLXA,4      NO, GET SOME.
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                       04/23/69 1354.9 PAGE 2     
                  
      00035  0 00034 0 00051  TYCALL         BUFF,,BUFLEN  ..     
      00036  0734 00 5 00000         PAX     0,5           INSERT 6-BIT CHARACTER COUNT INTO COUNTER. 
      00037  2 40000 5 00040         TIX     *+1,5,16384   REMOVE BIT 21 IF PRESENT.
      00040  0774 00 4 00000         AXT     0,4           RESET INPUT BUFFER POINTER.    
      00041  0500 00 4 00051  TYGET  CLA     BUFF,4        GET A WORD.  
      00042  1 77777 4 00043         TXI     *+1,4,-1      MOVE POINTER TO NEXT WORD.     
      00043  0634 00 4 00032         SXA     TYPOS,4       SAVE POINTER.
      00044  0634 00 5 00031         SXA     TYCNT,5       SAVE CHARACTER COUNTER.  
      00045  0774 00 4 00000  TYX4   AXT     --,4          RESTORE LINKAGE.   
      00046  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      00047  0634 00 0 00031  TYLINE ZSA     TYCNT         RESET CHARACTER COUNT TO MAKE LINE EMPTY.  
      00050  0020 00 4 00001         TRA     1,4           RETURN 
                              *     
      00051                   BUFF   BSS     BUFLEN            OUTPUT BUFFER. 
                              *     
                                     END  
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                       04/23/69 1354.9 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        105 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         51   BUFF    11,   14,   26,   35,   41
         26   PRCL    24
         17   PRX4     4,    7,   21
         45   TYX4    30
         16  PSAVE    12
         10  PWCNT    16,   22
         31  TYCNT    44,   47
         41  TYGET    33
         32  TYPOS    43
         34 BUFLEN     4,   10,   11,   14,   15,   23,   35,   51
         15 PFRESH    27
         21 PRBUFF     0
          4 PRWORD     0
          0 RDFLXA    34
         35 TYCALL      
         47 TYLINE     0
         30 TYWORD     0
          1 WRFLXA    13,   25
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            SUBROUTINE TO CONVERT BCD NUMBER TO BINARY.                         04/23/69 1355.8 PAGE 1     
                  
                              *     
                              *        J. H. SALTZER, MAY, 1966.  
                       00002         ENTRY   BIN           CONVERTER.   
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  223145606060     
                  
      00002  0634 00 1 00024   BIN   SXA     IRR1,1   
      00003  0600 00 0 00027         STZ     INT           CLEAR RESULT.
      00004  0774 00 1 00006         AXT     6,1
      00005  0560 60 4 00001         LDQ*    1,4           GET ARGUMENT.
      00006 -0754 00 0 00000  LOP    ZAC  
      00007 -0763 00 0 00006         LGL     6             GET NEXT CHARACTER.
      00010 -0340 00 0 00032         LAS     =10           SKIP OVER NON-DIGITS.    
      00011  0020 00 0 00023         TRA     TIX
      00012  0020 00 0 00023         TRA     TIX
      00013  0601 00 0 00030         STO     DIG           NUMBER, SAVE DIGIT.
      00014 -0600 00 0 00031         STQ     TEM           SAVE MQ FOR MULTIPLIACATION.   
      00015  0560 00 0 00027         LDQ     INT           GET OLD NUMBER.    
      00016  0200 00 0 00032         MPY     =10           SHIFT. 
      00017  0131 00 0 00000         XCA  
      00020  0400 00 0 00030         ADD     DIG           ADD THIS DIGIT TO RESULT.
      00021  0601 00 0 00027         STO     INT           SAVE, FOR NEXT PASS.     
      00022  0560 00 0 00031         LDQ     TEM           RESTORE MQ.  
      00023  2 00001 1 00006  TIX    TIX     LOP,1,1  
      00024  0774 00 1 00000   IRR1  AXT     --,1     
      00025  0500 00 0 00027         CLA     INT           RESULT IN AC.
      00026  0020 00 4 00002         TRA     2,4
                              *     
      00027  0 00000 0 00000   INT  
      00030  0 00000 0 00000   DIG  
      00031  0 00000 0 00000   TEM  
                              *     
                                     END  
                  
        LITERALS  
      00032  000000000012     
1            SUBROUTINE TO CONVERT BCD NUMBER TO BINARY.                         04/23/69 1355.8 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         33 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          2    BIN     0
         30    DIG    13,   20
         27    INT     3,   15,   21,   25
          6    LOP    23
         31    TEM    14,   22
         23    TIX    11,   12
         24   IRR1     2
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            LIBRARY PACKAGE.                                                    04/23/69 1356.0 PAGE 1     
                  
                       00024         ENTRY   .PCOMT        PRINT COMMENT ROUTINE    
                       00010         ENTRY   CHNCOM        GO DORMANT.  
                       00005         ENTRY   EXIT          SAME.  
                       00002         ENTRY   .SETUP        CALLED BY MAD MAIN PROGRA.     
                       00013         ENTRY   COMARG        GET COMMAND ARGUMENT.    
                       00106         ENTRY   WHOAMI   
                       00066         ENTRY   SETBCD   
                       00064         ENTRY   SETFUL   
                       00065         ENTRY   SETBRK   
                       00061         ENTRY   WRFLXA   
                       00063         ENTRY   WRFLX    
                       00062         ENTRY   RDFLXA   
                       00067         ENTRY   UPDATE        UPDATE U.F.D.
                       00070         ENTRY   CHFILE   
                       00071         ENTRY   DELFIL   
                       00072         ENTRY   FSTATE   
                       00073         ENTRY   BUFFER   
                       00074         ENTRY   OPEN     
                       00075         ENTRY   WRWAIT   
                       00076         ENTRY   WRFILE   
                       00077         ENTRY   RDWAIT   
                       00100         ENTRY   RDFILE   
                       00101         ENTRY   CLOSE    
                       00043         ENTRY   GETBUF        OBTAIN BUFFERS FROM SUPERVISOR.
                              *     
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  334723464463     
                  
      00002  0760 00 0 00016  .SETUP LMTM                  USE SEVEN TAG MODE.
      00003  0774 00 6 00000         AXT     0,6           SET UP IR6 TO AVOID EARLY CALL TO READ.    
      00004  0020 00 0 00064         TRA     SETFUL        USE FULL MODE.  SETFUL RETURNS 1,4.  
                              *     
      00005  0074 00 4 00066  EXIT   TSX     SETBCD,4      CLEANUP, RESET MODE.     
      00006  0074 00 4 00063         TSX     WRFLX,4       PUT OUT A STAR FOR RUNCOMS.    
      00007  0 00001 0 00060                 STAR,,1       AND THEN PERFORM CHNCOM SEQUENCE.    
      00010  0074 00 4 00102  CHNCOM TSX     CHN,4         THIS CHNCOM ALWAYS GOES DEAD,  
 TD   00011  3 00000 0 00107         TXH     =0            IF NO CHAIN EXISTS.
      00012  0020 00 0 00010         TRA     *-2           IN CASE OF RESTART, DON'T.     
                              *     
      00013  0634 00 4 00022  COMARG SXA     CM4,4         GET COMMAND ARGUMENT FOR MAD.  
      00014 -0500 60 4 00001         CAL*    1,4           GET ARGUMENT NUMBER.     
      00015  0602 00 0 00017         SLW     ARG           GIVE ARGUMENT NUMBER.    
      00016  0074 00 4 00103         TSX     GETCOM,4      GET COMMAND ARGUMENT.    
      00017  0 00000 0 00000   ARG                         ..     
      00020  0602 00 0 00017         SLW     ARG           MOVE TO ARITHMETIC AC.   
      00021  0500 00 0 00017         CLA     ARG           ..     
      00022  0774 00 4 00000   CM4   AXT     --,4          RESTORE LINKAGE.   
      00023  0020 00 4 00002         TRA     2,4           RETURN TO CALLER.  
                              *     
      00024 -0500 00 4 00001  .PCOMT CAL     1,4           GET WORD COUNT.    
      00025  0621 00 0 00042         STA     RETURN        ON RETURN, JUMP BUFFER.  
      00026  0767 00 0 00022         ALS     18            SETUP COUNT. 
      00027  0622 00 0 00036         STD     PCNT          ..     
      00030  1 77776 4 00031         TXI     *+1,4,-2      SETUP UP BUFFER ADDRESS. 
1            LIBRARY PACKAGE.                                                    04/23/69 1356.0 PAGE 2     
                  
      00031  0636 00 4 00036         SCA     PCNT,4        SAVE BUFFER ADDRESS, AND LINKAGE.    
      00032  0074 00 4 00064         TSX     SETFUL,4      MAKE SURE MODE SET AND NO LINES COMING IN. 
      00033  0074 00 4 00061         TSX     WRFLXA,4      SWITCH TO RED SHIFT.     
      00034  0 00001 0 00056                 REDS,,1       ..     
      00035  0074 00 4 00063         TSX     WRFLX,4       PRINT LINE.  
      00036  0 00000 0 00000   PCNT          --,,--        ..     
      00037  0074 00 4 00061         TSX     WRFLXA,4      SHIFT BACK TO BLACK.     
      00040  0 00001 0 00057                 BLCKS,,1      ..     
      00041  0535 00 4 00036         LAC     PCNT,4        RESTORE LINKAGE.   
      00042  0020 00 4 00000  RETURN TRA     --,4          RETURN TO CALLER.  
                              *     
      00043  0634 00 4 00052  GETBUF SXA     GX4,4         ENTRY TO GET BUFFERS.    
      00044  0602 00 0 00055         SLW     BUFSIZ        SIZE OF BUFFER IN AC.    
      00045  0074 00 4 00104         TSX     GETMEM,4      GET PRESENT BOUND. 
      00046  0601 00 0 00054         STO     START         SAVE AS BUFFER START.    
      00047  0361 00 0 00055         ACL     BUFSIZ        FORM NEW BOUND.    
      00050  0074 00 4 00105         TSX     SETMEM,4      ASK FOR MORE.
      00051 -0500 00 0 00054         CAL     START         GIVE CALLER LOCATION OF  
      00052  0774 00 4 00000   GX4   AXT     --,4          HIS NEW BUFFER.    
      00053  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      00054  0 00000 0 00000   START                       STORAGE FOR BUFFER LOCATION.   
      00055  0 00000 0 00000  BUFSIZ                       STORAGE FOR BUFFER SIZE. 
                              *     
      00056 +013300570057      REDS  OCT     013300570057  RED SHIFT AND TWO NULLS. 
      00057 +013200570057      BLCKS OCT     013200570057  BLACK SHIFT AND TWO NULLS.     
      00060 -145757575757     STAR   OCT     545757575757  ASTERISK AND 5 NULLS.    
                              *     
                              *              SUPERVISOR SUBROUTINE CALLERS.   
                              *     
      00061  0101 00 0 00133  WRFLXA TIA     =HWRFLXA 
      00062  0101 00 0 00122  RDFLXA TIA     =HRDFLXA 
      00063  0101 00 0 00134  WRFLX  TIA     =HWRFLX  
      00064  0101 00 0 00126  SETFUL TIA     =HSETFUL 
      00065  0101 00 0 00125  SETBRK TIA     =HSETBRK 
      00066  0101 00 0 00124  SETBCD TIA     =HSETBCD 
      00067  0101 00 0 00130  UPDATE TIA     =HUPDATE 
      00070  0101 00 0 00111  CHFILE TIA     =HCHFILE 
      00071  0101 00 0 00114  DELFIL TIA     =HDELFIL 
      00072  0101 00 0 00115  FSTATE TIA     =HFSTATE 
      00073  0101 00 0 00110  BUFFER TIA     =HBUFFER 
      00074  0101 00 0 00120  OPEN   TIA     =HOPEN   
      00075  0101 00 0 00135  WRWAIT TIA     =HWRWAIT 
      00076  0101 00 0 00132  WRFILE TIA     =HWRFILE 
      00077  0101 00 0 00123  RDWAIT TIA     =HRDWAIT 
      00100  0101 00 0 00121  RDFILE TIA     =HRDFILE 
      00101  0101 00 0 00113  CLOSE  TIA     =HCLOSE  
      00102  0101 00 0 00112  CHN    TIA     =HCHNCOM 
      00103  0101 00 0 00116  GETCOM TIA     =HGETCOM 
      00104  0101 00 0 00117  GETMEM TIA     =HGETMEM 
      00105  0101 00 0 00127  SETMEM TIA     =HSETMEM 
      00106  0101 00 0 00131  WHOAMI TIA     =HWHOAMI 
                              *     
                                     END  
1            LIBRARY PACKAGE.                                                    04/23/69 1356.0 PAGE 3     
                  
        LITERALS  
      00107  000000000000     
      00110  226426262551     
      00111  233026314325     
      00112  233045234644     
      00113  234346622560     
      00114  242543263143     
      00115  266263216325     
      00116  272563234644     
      00117  272563442544     
      00120  464725456060     
      00121  512426314325     
      00122  512426436721     
      00123  512466213163     
      00124  622563222324     
      00125  622563225142     
      00126  622563266443     
      00127  622563442544     
      00130  644724216325     
      00131  663046214431     
      00132  665126314325     
      00133  665126436721     
      00134  665126436760     
      00135  665166213163     
1            LIBRARY PACKAGE.                                                    04/23/69 1356.0 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        136 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         17    ARG    15,   20,   21
        102    CHN    10
         22    CM4    13
         52    GX4    43
          5   EXIT     0
         74   OPEN     0
         36   PCNT    27,   31,   41
         56   REDS    34
         60   STAR     7
         57  BLCKS    40
        101  CLOSE     0
         54  START    46,   51
         63  WRFLX     0,    6,   35
         73 BUFFER     0
         55 BUFSIZ    44,   47
         70 CHFILE     0
         10 CHNCOM     0
         13 COMARG     0
         71 DELFIL     0
         72 FSTATE     0
         43 GETBUF     0
        103 GETCOM    16
        104 GETMEM    45
         24 .PCOMT     0
          2 .SETUP     0
        100 RDFILE     0
         62 RDFLXA     0
         77 RDWAIT     0
         42 RETURN    25
         66 SETBCD     0,    5
         65 SETBRK     0
         64 SETFUL     0,    4,   32
        105 SETMEM    50
         67 UPDATE     0
        106 WHOAMI     0
         76 WRFILE     0
         61 WRFLXA     0,   33,   37
         75 WRWAIT     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




   EDB   BCD 09/18/68 2206.2   39586         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  EDITOR   MAD            02/08/68    1745.3
-                 
                 ..  EDIT BY CONTEXT PROGRAM.                                                          LM00001    
                                                                                                       LM00002    
                 ..  J. H. SALTZER, NOVEMBER, 1964.                                                    LM00003    
                 ..  LAST MODIFICATION, APRIL, 1967.                                                   LM00004    
                 ..  MODIFIED OCTOBER, 1967 BY PETER R. BOS                                            LM00005    
                 ..  TO ALLOW SETTING BREAK CHARACTER 'MCHNG'                                          LM00006    
                                                                                                       LM00007    
                 .. DECLARATIONS.                                                                      LM00008    
                                                                                                       LM00009    
                  VECTOR VALUES FENCE = 777777777777K                                             *001 LM00010    
                  VECTOR VALUES RETURN = 55K                                                      *002 LM00011    
                  VECTOR VALUES IN = $(INPUT$                                                     *003 LM00012    
                  VECTOR VALUES IN1 = $(INPT1$                                                    *004 LM00013    
                  VECTOR VALUES BRIEF = 0B                                                        *005 LM00014    
                  VECTOR VALUES OK = 0B                                                           *006 LM00015    
                  VECTOR VALUES BUFSIZ = 360                                                      *007 LM00016    
                  DIMENSION LINE(361), EDLIN(361)                                                 *008 LM00017    
                  DIMENSION REDS(1), BLACKS(1)                                                    *009 LM00018    
                  DIMENSION ATNAM(2)                                                              *010 LM00019    
                  NORMAL MODE IS INTEGER                                                          *011 LM00020    
                  BOOLEAN OK, GLOBAL, FSTPAS                                                      *012 LM00021    
                  BOOLEAN CHNG, CLRSW, BRIEF                                                      *013 LM00022    
                                                                                                       LM00023    
      . . .      . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                           LM00024    
                                                                                                       LM00025    
                 ..  INITIALIZATION.                                                                   LM00026    
                                                                                                       LM00027    
                  SECOND NAME OF INTERMEDIATE FILES NOW PROGNO                                         LM00028    
                                                                                                       LM00029    
                  WHOAMI.(ATNAM(2)...2)                                                           *014 LM00030    
                  FI = ATNAM(1)                                                                   *015 LM00031    
                  GETVAL.(BLANK, TAB, DEFALT, MCHNG, REDS(1), BLACKS(1))                          *016 LM00032    
                  CLRNAM.(IN, FI, CHN, 1B)                                                        *017 LM00033    
                  CLRNAM.(IN1, FI, CHN, 1B)                                                       *018 LM00034    
                  ASSIGN.(IN, FI)                                                                 *019 LM00035    
                  OLDNAM = COMARG.(1)                                                             *020 LM00036    
                  OLDSEC = DEFALT                                                                 *021 LM00037    
                  WHENEVER OLDNAM .E. FENCE, TRANSFER TO INSERT                                   *022 LM00038    
                  OLDSEC = COMARG.(2)                                                             *023 LM00039    
                  WHENEVER OLDSEC .E. FENCE, OLDSEC = DEFALT                                      *024 LM00040    
                  SEEK.(OLDNAM, OLDSEC, INSERT)                                                   *025 LM00041    
                  FSTPAS = 1B                                                                     *026 LM00042    
                  OK = 1B                                                                         *027 LM00043    
                                                                                                       LM00044    
                 ..  ENTER EDIT MODE.                                                                  LM00045    
                                                                                                       LM00046    
      EDIT        WHENEVER .NOT. BRIEF, PRINT COMMENT $0E1D1I1T$                                  *028 LM00047    
                                                                                                       LM00048    
                 ..  OBTAIN NEXT REQUEST.                                                              LM00049    
                                                                                                       LM00050    
      NXRQ        COUNT = TYPEIN.(EDLIN, BUFSIZ)                                                  *029 LM00051    
                  WHENEVER EDLIN(1) .E. MCHNG .AND. COUNT .L. 3                                   *030 LM00052    
                1      , TRANSFER TO INSERT                                                       *030 LM00053    
                  WHENEVER COUNT .L. 2, TRANSFER TO NXRQ                                          *031 LM00054    
                  EDCT = 0                                                                        *032 LM00055    
                  CWD = GET.(0)                                                                   *033 LM00056    
                                                                                                       LM00057    
                  WHENEVER CWD .E. $DELETE$ .OR. CWD .E. $     D$                                 *034 LM00058    
                    N = BIN.(GET.(0))                                                             *035 LM00059    
                    THROUGH DREAD, FOR I = 1, 1, I .GE. N                                         *036 LM00060    
       DREAD          LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *037 LM00061    
                    LENGTH = 0                                                                    *038 LM00062    
                                                                                                       LM00063    
                  OR WHENEVER CWD .E. $  NEXT$ .OR. CWD .E. $     N$                              *039 LM00064    
                    N = BIN.(GET.(0))                                                             *040 LM00065    
                    WHENEVER N .E. 0, N = 1                                                       *041 LM00066    
                    THROUGH NXT, FOR I = 1, 1, I .G. N                                            *042 LM00067    
                      WRITE.(LINE, LENGTH)                                                        *043 LM00068    
                      WHENEVER .NOT. OK, CLSOUT.                                                  *044 LM00069    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *045 LM00070    
       NXT            CONTINUE                                                                    *046 LM00071    
                                                                                                       LM00072    
                  OR WHENEVER CWD .E. $INSERT$ .OR. CWD .E. $     I$                              *047 LM00073    
                    WRITE.(LINE, LENGTH)                                                          *048 LM00074    
                    TRANSFER TO RETYPE                                                            *049 LM00075    
                                                                                                       LM00076    
      INSERT        WHENEVER .NOT. BRIEF, PRINT COMMENT $0I1N1P1U1T$                              *050 LM00077    
       INPUT        COUNT = TYPEIN.(EDLIN, BUFSIZ)                                                *051 LM00078    
                    WHENEVER COUNT .L. 3 .AND. EDLIN(1) .E. MCHNG                                 *052 LM00079    
                1      , TRANSFER TO EDIT                                                         *052 LM00080    
                    WRITE.(LINE, LENGTH)                                                          *053 LM00081    
                    THROUGH MVLP, FOR I = 1, 1, I .G. COUNT                                       *054 LM00082    
       MVLP           LINE(I) = EDLIN(I)                                                          *055 LM00083    
                    LENGTH = COUNT                                                                *056 LM00084    
                    TRANSFER TO INPUT                                                             *057 LM00085    
                                                                                                       LM00086    
                  OR WHENEVER CWD .E. $BOTTOM$ .OR. CWD .E. $     B$                              *058 LM00087    
                    WRITE.(LINE, LENGTH)                                                          *059 LM00088    
                    LENGTH = 0                                                                    *060 LM00089    
                    WHENEVER OK, BOTTOM.                                                          *061 LM00090    
                    TRANSFER TO INSERT                                                            *062 LM00091    
                                                                                                       LM00092    
                  OR WHENEVER CWD .E. $APPEND$ .OR. CWD .E. $     A$                              *063 LM00093    
                    WHENEVER LENGTH .G. 0, LENGTH = LENGTH - 1                                    *064 LM00094    
                    TRANSFER TO APPEND                                                            *065 LM00095    
                                                                                                       LM00096    
                  OR WHENEVER CWD .E. $RETYPE$ .OR. CWD .E. $     R$                              *066 LM00097    
       RETYPE       LENGTH = 0                                                                    *067 LM00098    
      APPEND        THROUGH RPLC, FOR EDCT = EDCT + 1, 1, EDCT .G. COUNT                          *068 LM00099    
                      LENGTH = LENGTH + 1                                                         *069 LM00100    
       RPLC           LINE(LENGTH) = EDLIN(EDCT)                                                  *070 LM00101    
                                                                                                       LM00102    
                  OR WHENEVER CWD .E. $ ERASE$ .OR. CWD .E. $     E$                              *071 LM00103    
                    WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETERS.(EDLIN(EDCT+1))                     *072 LM00104    
                                                                                                       LM00105    
                  OR WHENEVER CWD .E. $  KILL$ .OR. CWD .E. $     K$                              *073 LM00106    
                    WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETKIL.(EDLIN(EDCT+1))                     *074 LM00107    
                                                                                                       LM00108    
                 ..  MODIFICATION ALLOWS SETTING 'MCHNG'. PRB.                                         LM00109    
                                                                                                       LM00110    
                  OR WHENEVER CWD .E. $ BREAK$ .OR. CWD .E. $    BR$                              *075 LM00111    
                    WHENEVER EDLIN(EDCT) .E. RETURN                                               *076 LM00112    
                      MCHNG = RETURN                                                              *077 LM00113    
                    OR WHENEVER EDLIN(EDCT+1) .NE. BLANK                                          *078 LM00114    
                      MCHNG = EDLIN(EDCT+1)                                                       *079 LM00115    
                    END OF CONDITIONAL                                                            *080 LM00116    
                                                                                                       LM00117    
                  OR WHENEVER CWD .E. $VERIFY$ .OR. CWD .E. $     V$                              *081 LM00118    
                    CWD = GET.(0)                                                                 *082 LM00119    
                    WHENEVER CWD .E. $    ON$                                                     *083 LM00120    
                      BRIEF = 0B                                                                  *084 LM00121    
                    OR WHENEVER CWD .E. $   OFF$                                                  *085 LM00122    
                      BRIEF = 1B                                                                  *086 LM00123    
                    END OF CONDITIONAL                                                            *087 LM00124    
                                                                                                       LM00125    
                  OR WHENEVER CWD .E. $LOCATE$ .OR. CWD .E. $     L$                              *088 LM00126    
                    LOCATE = 1                                                                    *089 LM00127    
                    TRANSFER TO FIND                                                              *090 LM00128    
                                                                                                       LM00129    
                  OR WHENEVER CWD .E. $  FIND$ .OR. CWD .E. $     F$                              *091 LM00130    
                    LOCATE = 0                                                                    *092 LM00131    
      FIND          WHENEVER EDCT+1 .GE. COUNT                                                    *093 LM00132    
                      COUNT = OCOUNT                                                              *094 LM00133    
                      EDCT = EDCT + 1                                                             *095 LM00134    
                    END OF CONDITIONAL                                                            *096 LM00135    
                    OCOUNT = COUNT                                                                *097 LM00136    
       NTFND        WRITE.(LINE, LENGTH)                                                          *098 LM00137    
                    WHENEVER  .NOT. OK, CLSOUT.                                                   *099 LM00138    
                    LENGTH = READ.(LINE, BUFSIZ, EOF)                                             *100 LM00139    
                    THROUGH LOCSCN, FOR K=0, 1,K.G.LOCATE*(LENGTH-COUNT+EDCT)                     *101 LM00140    
                      J = K                                                                       *102 LM00141    
                      THROUGH LOOK, FOR I = EDCT+1, 1, I .GE. COUNT                               *103 LM00142    
                        J = J + 1                                                                 *104 LM00143    
       TAGN             WHENEVER LINE(J) .E. EDLIN(I), TRANSFER TO LOOK                           *105 LM00144    
                        WHENEVER (LINE(J).E. TAB) .AND. (EDLIN(I) .E. BLANK)                      *106 LM00145    
                1        , TRANSFER TO LOOK                                                       *106 LM00146    
                        WHENEVER EDLIN(I-1) .NE. BLANK .OR. I .E. EDCT + 1                        *107 LM00147    
                1        , TRANSFER TO LOCSCN                                                     *107 LM00148    
                        WHENEVER LINE(J) .NE. BLANK .AND. LINE(J) .NE. TAB                        *108 LM00149    
                1        , TRANSFER TO LOCSCN                                                     *108 LM00150    
                        J = J + 1                                                                 *109 LM00151    
                        TRANSFER TO TAGN                                                          *110 LM00152    
       LOOK             WHENEVER I .E. EDCT+1, FNDST = J                                          *111 LM00153    
                      FNDND = J                                                                   *112 LM00154    
                      WHENEVER .NOT. BRIEF, PRNT.(FNDST, FNDND)                                   *113 LM00155    
                      TRANSFER TO NXRQ                                                            *114 LM00156    
        LOCSCN        CONTINUE                                                                    *115 LM00157    
                    TRANSFER TO NTFND                                                             *116 LM00158    
                                                                                                       LM00159    
                  OR WHENEVER CWD .E. $ PRINT$ .OR. CWD .E. $     P$                              *117 LM00160    
                    NPRNT = BIN.(GET.(0))                                                         *118 LM00161    
      PNTLP         WHENEVER LENGTH .E. 0                                                         *119 LM00162    
                      PRINT COMMENT $0N1O0 1C1U1R1R1E1N1T0 1L1I1N1E0.$                            *120 LM00163    
                    OTHERWISE                                                                     *121 LM00164    
                      TYPOUT.(LINE, LENGTH)                                                       *122 LM00165    
                    END OF CONDITIONAL                                                            *123 LM00166    
                    NPRNT = NPRNT - 1                                                             *124 LM00167    
                    WHENEVER NPRNT .G. 0                                                          *125 LM00168    
                      WRITE.(LINE, LENGTH)                                                        *126 LM00169    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *127 LM00170    
                      TRANSFER TO PNTLP                                                           *128 LM00171    
                    END OF CONDITIONAL                                                            *129 LM00172    
                                                                                                       LM00173    
                  OR WHENEVER CWD .E. $   TOP$ .OR. CWD .E. $     T$                              *130 LM00174    
       TOPLP        WRITE.(LINE, LENGTH)                                                          *131 LM00175    
                    WHENEVER OK, BOTTOM.                                                          *132 LM00176    
                    CLSOUT.                                                                       *133 LM00177    
                                                                                                       LM00178    
                  OR WHENEVER CWD .E. $CHANGE$ .OR. CWD .E. $     C$                              *134 LM00179    
                                                                                                       LM00180    
      . . .       . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          LM00181    
                                                                                                       LM00182    
                 ..  DELINEATE QUOTED STRINGS.                                                         LM00183    
                                                                                                       LM00184    
                    EDCT = EDCT+1                                                                 *135 LM00185    
                    QUOTE = EDLIN(EDCT)                                                           *136 LM00186    
                    STR1 = EDCT                                                                   *137 LM00187    
      QLOOP         THROUGH QLOOP, FOR EDCT = EDCT+1, 1,                                          *138 LM00188    
                1      (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                             *138 LM00189    
                    STR2 = EDCT                                                                   *139 LM00190    
      QLOOP1        THROUGH QLOOP1, FOR EDCT = EDCT+1, 1,                                         *140 LM00191    
                1      (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                             *140 LM00192    
                    EST2 = EDCT                                                                   *141 LM00193    
                                                                                                       LM00194    
                 .. CHECK FOR ITERATION COUNT AND GLOBAL REQUEST.                                      LM00195    
                                                                                                       LM00196    
                    EDCT = EDCT + 1                                                               *142 LM00197    
                    TEM = 1                                                                       *143 LM00198    
                    GLOBAL = 0B                                                                   *144 LM00199    
      ARGLP         CWD = GET.(0)                                                                 *145 LM00200    
                    WHENEVER CWD .E. $ $                                                          *146 LM00201    
                      TRANSFER TO SHIFT                                                           *147 LM00202    
                    OR WHENEVER CWD .E. $     G$                                                  *148 LM00203    
                      WHENEVER STR2 .NE. STR1+1, GLOBAL = 1B                                      *149 LM00204    
                    OTHERWISE                                                                     *150 LM00205    
                      TEM = BIN.(CWD)                                                             *151 LM00206    
                    END OF CONDITIONAL                                                            *152 LM00207    
                    TRANSFER TO ARGLP                                                             *153 LM00208    
                                                                                                       LM00209    
                 .. SHIFT LINE TO BOTTOM OF BUFFER.                                                    LM00210    
                                                                                                       LM00211    
       SHIFT        THROUGH MVDWN, FOR I = LENGTH, -1, I .L. 1                                    *154 LM00212    
      MVDWN           LINE(BUFSIZ+I-LENGTH) = LINE(I)                                             *155 LM00213    
                    DOWN = BUFSIZ-LENGTH+1                                                        *156 LM00214    
                    UP = 0                                                                        *157 LM00215    
                    CHNG = 0B                                                                     *158 LM00216    
                    CHST = LENGTH + 1                                                             *159 LM00217    
                    CHEND = LENGTH                                                                *160 LM00218    
                                                                                                       LM00219    
                 .. SEARCH FOR PRESENCE OF FIRST STRING.                                               LM00220    
                                                                                                       LM00221    
      SRCHLP        UP = UP + 1                                                                   *161 LM00222    
      SRTST           WHENEVER DOWN .G. BUFSIZ, TRANSFER TO GIVUP                                 *162 LM00223    
                      J = DOWN                                                                    *163 LM00224    
                      THROUGH COMPAR, FOR I = STR1+1, 1, I .GE. STR2                              *164 LM00225    
                        WHENEVER J .GE. BUFSIZ, TRANSFER TO GIVUP                                 *165 LM00226    
                        WHENEVER EDLIN(I) .NE. LINE(J), TRANSFER TO NOCOMP                        *166 LM00227    
       COMPAR           J = J + 1                                                                 *167 LM00228    
                      TRANSFER TO STFND                                                           *168 LM00229    
                                                                                                       LM00230    
      NOCOMP          LINE(UP) = LINE(DOWN)                                                       *169 LM00231    
                      DOWN = DOWN + 1                                                             *170 LM00232    
                    TRANSFER TO SRCHLP                                                            *171 LM00233    
                                                                                                       LM00234    
                 .. STRING FOUND, REPLACE WITH SECOND STRING.                                          LM00235    
                                                                                                       LM00236    
      STFND         CHNG = 1B                                                                     *172 LM00237    
                    DOWN = DOWN + (STR2-STR1-1)                                                   *173 LM00238    
                    CHST = UP                                                                     *174 LM00239    
                    THROUGH REPLAC, FOR I = STR2 + 1, 1, I .GE. EST2                              *175 LM00240    
                      LINE(UP) = EDLIN(I)                                                         *176 LM00241    
                      UP = UP + 1                                                                 *177 LM00242    
       REPLAC         WHENEVER UP .G. DOWN, TRANSFER TO GIVUP                                     *178 LM00243    
                    CHEND = UP - 1                                                                *179 LM00244    
                    WHENEVER GLOBAL, TRANSFER TO SRTST                                            *180 LM00245    
                                                                                                       LM00246    
                 .. MOVE REST OF LINE BACK UP.                                                         LM00247    
                                                                                                       LM00248    
      GIVUP         THROUGH FILOUT, FOR UP = UP, 1, DOWN .G. BUFSIZ                               *181 LM00249    
                      LINE(UP) = LINE(DOWN)                                                       *182 LM00250    
      FILOUT          DOWN = DOWN + 1                                                             *183 LM00251    
                    LENGTH = UP - 1                                                               *184 LM00252    
                    TEM = TEM - 1                                                                 *185 LM00253    
                    WHENEVER .NOT. BRIEF .AND. (TEM .G. 0 .THEN. CHNG)                            *186 LM00254    
                1        , PRNT.(CHST, CHEND)                                                     *186 LM00255    
                    CANON.(LINE, LENGTH, BUFSIZ)                                                  *187 LM00256    
                    WHENEVER TEM .G. 0                                                            *188 LM00257    
                      WRITE.(LINE, LENGTH)                                                        *189 LM00258    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *190 LM00259    
                      TRANSFER TO SHIFT                                                           *191 LM00260    
                    END OF CONDITIONAL                                                            *192 LM00261    
                                                                                                       LM00262    
      . . . .     . . . . . . . . . . . . . . . . . . . . . . . . . . . .                              LM00263    
                                                                                                       LM00264    
                  OR WHENEVER CWD .E. $ SPLIT$ .OR. CWD .E. $     S$                              *193 LM00265    
                    TOPNAM = GET.(0)                                                              *194 LM00266    
                    WHENEVER TOPNAM .E. $ $, TRANSFER TO NONAME                                   *195 LM00267    
                    WHENEVER TOPNAM .E. OLDNAM .AND. FSTPAS                                       *196 LM00268    
      NEWNM           PRINT COMMENT $0P1L1E1A1S1E0 1U1S1E0 1A1N1O1T1H1E1R0 1N1A                   *197 LM00269    
                1 1M1E0.$                                                                         *197 LM00270    
                      TRANSFER TO NXRQ                                                            *198 LM00271    
                    END OF CONDITIONAL                                                            *199 LM00272    
                    SECNAM = GET.(0)                                                              *200 LM00273    
                  WHENEVER SECNAM .E. $ $, SECNAM = OLDSEC                                        *201 LM00274    
                    CLRNAM.(TOPNAM, SECNAM, NEWNM, 1B)                                            *202 LM00275    
                    CLOSEW.                                                                       *203 LM00276    
                    RENAME.(IN, FI, TOPNAM, SECNAM)                                               *204 LM00277    
                    ASSIGN.(IN, FI)                                                               *205 LM00278    
                    OLDNAM = FENCE                                                                *206 LM00279    
                    TRANSFER TO TOPLP                                                             *207 LM00280    
                                                                                                       LM00281    
                  OR WHENEVER CWD .E. $  QUIT$ .OR. CWD .E. $     Q$                              *208 LM00282    
                    ENDRD.                                                                        *209 LM00283    
                    CLOSEW.                                                                       *210 LM00284    
                    DELFIL.(IN1, FI, DLQ1)                                                        *211 LM00285    
      DLQ1          DELFIL.(IN, FI, DLQ2)                                                         *212 LM00286    
      DLQ2          TRANSFER TO CHN                                                               *213 LM00287    
                                                                                                       LM00288    
                  OR WHENEVER CWD .E. $  FILE$                                                    *214 LM00289    
                    PRINAM = GET.(0)                                                              *215 LM00290    
                    CLRSW = 1B                                                                    *216 LM00291    
                    WHENEVER PRINAM .E. $ $                                                       *217 LM00292    
                      PRINAM = OLDNAM                                                             *218 LM00293    
                      SECNAM = OLDSEC                                                             *219 LM00294    
                      CLRSW = 0B                                                                  *220 LM00295    
                    OTHERWISE                                                                     *221 LM00296    
                      SECNAM = GET.(0)                                                            *222 LM00297    
                      WHENEVER SECNAM .E. $ $                                                     *223 LM00298    
                        SECNAM = OLDSEC                                                           *224 LM00299    
                      END OF CONDITIONAL                                                          *225 LM00300    
                    END OF CONDITIONAL                                                            *226 LM00301    
                    WHENEVER PRINAM .E. FENCE                                                     *227 LM00302    
      NONAME          PRINT COMMENT $0N1O0 1F1I1L1E0 1N1A1M1E0 1G1I1V1E1N0.$                      *228 LM00303    
                      TRANSFER TO NXRQ                                                            *229 LM00304    
                    END OF CONDITIONAL                                                            *230 LM00305    
                    WRITE.(LINE, LENGTH)                                                          *231 LM00306    
                    LENGTH = 0                                                                    *232 LM00307    
                    WHENEVER OK, BOTTOM.                                                          *233 LM00308    
                    CLRNAM.(PRINAM, SECNAM, NEWNM, CLRSW)                                         *234 LM00309    
                    CLOSEW.                                                                       *235 LM00310    
                    DELFIL.(IN1, FI, DL1)                                                         *236 LM00311    
      DL1           RENAME.(IN, FI, PRINAM, SECNAM)                                               *237 LM00312    
      CHN           EXIT.                                                                         *238 LM00313    
                                                                                                       LM00314    
                  OTHERWISE                                                                       *239 LM00315    
                    PRINT COMMENT $0N1O1T0 1A0 1R1E1Q1U1E1S1T0:$                                  *240 LM00316    
                    TYPOUT.(EDLIN, COUNT)                                                         *241 LM00317    
                                                                                                       LM00318    
                  END OF CONDITIONAL                                                              *242 LM00319    
                  TRANSFER TO NXRQ                                                                *243 LM00320    
                                                                                                       LM00321    
      EOF         PRINTCOMMENT $0E1N1D0 1O1F0 1F1I1L1E0 1R1E1A1C1H1E1D0 1B1Y0:$                   *244 LM00322    
                  TYPOUT.(EDLIN, COUNT)                                                           *245 LM00323    
                  LENGTH = 0                                                                      *246 LM00324    
                  OK = 0B                                                                         *247 LM00325    
                  TRANSFER TO NXRQ                                                                *248 LM00326    
                                                                                                       LM00327    
                 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                           LM00328    
                                                                                                       LM00329    
                 .. SUBROUTINES.                                                                       LM00330    
                                                                                                       LM00331    
       CLSOUT.   .. FUNCTION TO MOVE POINTER BACK TO TOP OF FILE.                                      LM00332    
                                                                                                       LM00333    
                  INTERNAL FUNCTION                                                               *249 LM00334    
                  ENTRY TO CLSOUT.                                                                *250 LM00335    
                    CLOSEW.                                                                       *251 LM00336    
                    DELFIL.(IN1, FI, DL2)                                                         *252 LM00337    
      DL2           CHFILE.(IN, FI, -0, IN1)                                                      *253 LM00338    
                    SEEK.(IN1, FI, CHN)                                                           *254 LM00339    
                    ASSIGN.(IN, FI)                                                               *255 LM00340    
                    OK = 1B                                                                       *256 LM00341    
                    LENGTH = 0                                                                    *257 LM00342    
                    FSTPAS = 0B                                                                   *258 LM00343    
                    FUNCTION RETURN                                                               *259 LM00344    
                  END OF FUNCTION                                                                 *260 LM00345    
                                                                                                       LM00346    
        GET.     .. FUNCTION TO OBTAIN ARGUMENT WORD IN HOLLERITH.                                     LM00347    
                                                                                                       LM00348    
                  INTERNAL FUNCTION                                                               *261 LM00349    
                  ENTRY TO GET.                                                                   *262 LM00350    
                    WORD = $ $                                                                    *263 LM00351    
      SCANLP        THROUGH SCANLP, FOR EDCT = EDCT, 1,                                           *264 LM00352    
                1   (EDLIN(EDCT+1).NE.BLANK) .OR. (EDCT+1.GE.COUNT)                               *264 LM00353    
       GTLP         EDCT = EDCT + 1                                                               *265 LM00354    
                    WHENEVER EDLIN(EDCT) .E. BLANK, FUNCTION RETURN WORD                          *266 LM00355    
                    WHENEVER EDLIN(EDCT) .E. TAB .OR. EDCT .GE. COUNT                             *267 LM00356    
                      EDCT = EDCT - 1                                                             *268 LM00357    
                      FUNCTION RETURN WORD                                                        *269 LM00358    
                    END OF CONDITIONAL                                                            *270 LM00359    
                    WORD = (WORD .LS. 6) .V. HOL.(EDLIN(EDCT))                                    *271 LM00360    
                    TRANSFER TO GTLP                                                              *272 LM00361    
                  END OF FUNCTION                                                                 *273 LM00362    
                                                                                                       LM00363    
       PRNT.     ..  FUNCTION TO PRINT A LINE WITH COLOR SHIFTS.                                       LM00364    
                                                                                                       LM00365    
                  INTERNAL FUNCTION(STAR, EN)                                                     *274 LM00366    
                  ENTRY TO PRNT.                                                                  *275 LM00367    
                    TYPOUT.(LINE, STAR-1)                                                         *276 LM00368    
                    TYPOUT.(REDS, 1)                                                              *277 LM00369    
                    TYPOUT.(LINE(STAR-1), EN-STAR+1)                                              *278 LM00370    
                    TYPOUT.(BLACKS, 1)                                                            *279 LM00371    
                    TYPOUT.(LINE(EN), LENGTH-EN)                                                  *280 LM00372    
                    FUNCTION RETURN                                                               *281 LM00373    
                  END OF FUNCTION                                                                 *282 LM00374    
                                                                                                       LM00375    
                  END OF PROGRAM                                                                  *283 LM00376    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   03713 TRANSFER VECTOR LENGTH  00030 PROGRAM BEGINS    01555
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      APPEND 00034   4        DLQ1   00041   4        GTLP   00047   4        NONAME 00056   4        RETYPE 00062   4  
      ARGLP  00035   4        DLQ2   00042   4        IN1    00673 A 1        NPRNT  01455   1        RPLC   00033   4  
      ATNAM  00073 A 1        DOWN   00110   1        INPUT  00050   4        N      01456   1        SCANLP 00033   4  
      BLACKS 00075 A 1        DREAD  00033   4        IN     00674 A 1        NTFND  00057   4        SECNAM 01470   1  
      BLANK  00076   1        EDCT   00111   1        INSERT 00051   4        NXRQ   00060   4        SHIFT  00063   4  
      BRIEF  00077 A 2        EDIT   00043   4        I      00675   1        NXT    00033   4        SRCHLP 00064   4  
      BUFSIZ 00100 A 1        EDLIN  00663 A 1        J      00676   1        OCOUNT 01457   1        SRTST  00065   4  
      CHEND  00101   1        EOF    00044   4        K      00677   1        OK     01460 A 2        STFND  00066   4  
      CHNG   00102   2        EST2   00664   1        LENGTH 00700   1        OLDNAM 01461   1        STR1   01471   1  
      CHN    00036   4        FENCE  00665 A 1        LINE   01452 A 1        OLDSEC 01462   1        STR2   01472   1  
      CHST   00103   1        FILOUT 00033   4        LOCATE 01453   1        PNTLP  00061   4        TAB    01473   1  
      CLRSW  00104   2        FIND   00045   4        LOCSCN 00052   4        PRINAM 01463   1        TAGN   00067   4  
      COMPAR 00033   4        FI     00666   1        LOOK   00053   4        QLOOP1 00033   4        TEM    01474   1  
      COUNT  00105   1        FNDND  00667   1        MCHNG  01454   1        QLOOP  00033   4        TOPLP  00070   4  
      CWD    00106   1        FNDST  00670   1        MVDWN  00033   4        QUOTE  01464   1        TOPNAM 01475   1  
      DEFALT 00107   1        FSTPAS 00671   2        MVLP   00033   4        REDS   01466 A 1        UP     01476   1  
      DL1    00037   4        GIVUP  00046   4        NEWNM  00054   4        REPLAC 00033   4        WORD   01477   1  
      DL2    00040   4        GLOBAL 00672   2        NOCOMP 00055   4        RETURN 01467 A 1                          
0FUNCTION DICTIONARY    
      ASSIGN 00000   1        BIN    00001   1        BOTTOM 00002   1        CANON  00003   1        CHFILE 00004   1  
      CLOSEW 00005   1        CLRNAM 00006   1        COMARG 00007   1        DELFIL 00010   1        ENDRD  00011   1  
      EXIT   00012   1        GETVAL 00013   1        HOL    00014   1        .PCOMT 00015   1        .SETUP 00016   1  
      READ   00017   1        RENAME 00020   1        SEEK   00021   1        SETERS 00022   1        SETKIL 00023   1  
      TYPEIN 00024   1        TYPOUT 00025   1        WHOAMI 00026   1        WRITE  00027   1        CLSOUT 00030   1  
      GET    00031   1        PRNT   00032   1                                                                          
0ABSOLUTE CONSTANTS     
 01504 +000000000006     01520 -206026314325     01524 -206050643163     01544 -206060606050     01553 -206247433163    
 01547 -206060606062     01536 -206060606027     01546 -206060606060     01510 +233021452725     01532 -206060606023    
 01552 -206060634647     01550 -206060606063     01517 -204751314563     01543 -206060606047     01521 -206026314524    
 01535 -206060606026     01513 -034623216325     01541 -206060606043     01525 -206060462626     01527 -206060604645    
 01554 -252551312670     01551 -206060606065     01515 -202251252142     01526 -206060602251     01522 -206042314343    
 01540 -206060606042     01516 -202551216225     01534 -206060606025     01514 -112563704725     01545 -206060606051    
 01505 +214747254524     01530 -206060606021     01506 +224663634644     01531 -206060606022     01512 +314562255163    
 01537 -206060606031     01523 -206045256763     01542 -206060606045     01511 +242543256325     01533 -206060606024    
 01500 +000000000000     01503 +000000000003     01502 +000000000002     01501 +000000000001     01507 +233000000000    
0STATEMENT DICTIONARY   
 00034 TXL -302146002133       00035 TXL -302676002673       00036 TXL -303402003401       00037 TXL -303401003374      
 00040 TXL -303460003451       00041 TXL -303301003275       00042 TXL -303302003301       00043 TXL -301645001637      
 00044 TXL -303430003416       00045 TXL -302334002327       00046 TXL -303117003105       00047 TXL -303543003540      
 00050 TXL -302026002022       00051 TXL -302022002014       00052 TXL -302506002505       00053 TXL -302475002465      
 00054 TXL -303226003214       00055 TXL -303032003026       00056 TXL -303351003340       00057 TXL -302346002343      
 00060 TXL -301651001645       00061 TXL -302527002524       00062 TXL -302133002131       00063 TXL -302734002722      
 00064 TXL -302764002761       00065 TXL -302771002764       00066 TXL -303040003036       00067 TXL -302424002416      
 00070 TXL -302575002572                                                                                                
0PROGRAM    
                 VECTOR VALUES FENCE = 777777777777K                                001  LM00010
 01555 TSX +0 07400 4 00016    00665     -3 77777 7 77777                                                               
                 VECTOR VALUES RETURN = 55K                                         002  LM00011
 01467     +0 00000 0 00055                                                                                             
                 VECTOR VALUES IN = $(INPUT$                                        003  LM00012
 00674     -3 43145 4 76463                                                                                             
                 VECTOR VALUES IN1 = $(INPT1$                                       004  LM00013
 00673     -3 43145 4 76301                                                                                             
                 VECTOR VALUES BRIEF = 0B                                           005  LM00014
 00077     +0 00000 0 00000                                                                                             
                 VECTOR VALUES OK = 0B                                              006  LM00015
 01460     +0 00000 0 00000                                                                                             
                 VECTOR VALUES BUFSIZ = 360                                         007  LM00016
 00100     +0 00000 0 00550                                                                                             
                 DIMENSION LINE(361), EDLIN(361)                                    008  LM00017
                 DIMENSION REDS(1), BLACKS(1)                                       009  LM00018
                 D'N ATNAM(2)                                                       010  LM00019
                 NORMAL MODE IS INTEGER                                             011  LM00020
                 BOOLEAN OK, GLOBAL, FSTPAS                                         012  LM00021
                 BOOLEAN CHNG, CLRSW, BRIEF                                         013  LM00022
                 WHOAMI.(ATNAM(2)...2)                                              014  LM00030
 01556 TSX +0 07400 4 00026    01557 TIX +2 01502 0 00071                                                               
                 FI = ATNAM(1)                                                      015  LM00031
 01560 CLA +0 50000 0 00072    01561 STO +0 60100 0 00666                                                               
                 GETVAL.(BLANK, TAB, DEFALT, MCHNG, REDS(1), BLACKS(1))             016  LM00032
 01562 TSX +0 07400 4 00013    01563 TXH +3 00000 0 00076    01564 TXH +3 00000 0 01473    01565 TXH +3 00000 0 00107   
 01566 TXH +3 00000 0 01454    01567 TXH +3 00000 0 01465    01570 TXH +3 00000 0 00074                                 
                 CLRNAM.(IN, FI, CHN, 1B)                                           017  LM00033
 01571 TSX +0 07400 4 00006    01572 TXH +3 00000 0 00674    01573 TXH +3 00000 0 00666    01574 TXH +3 00000 0 00036   
 01575 TXH +3 00000 0 01501                                                                                             
                 CLRNAM.(IN1, FI, CHN, 1B)                                          018  LM00034
 01576 TSX +0 07400 4 00006    01577 TXH +3 00000 0 00673    01600 TXH +3 00000 0 00666    01601 TXH +3 00000 0 00036   
 01602 TXH +3 00000 0 01501                                                                                             
                 ASSIGN.(IN, FI)                                                    019  LM00035
 01603 TSX +0 07400 4 00000    01604 TXH +3 00000 0 00674    01605 TXH +3 00000 0 00666                                 
                 OLDNAM = COMARG.(1)                                                020  LM00036
 01606 TSX +0 07400 4 00007    01607 TXH +3 00000 0 01501    01610 STO +0 60100 0 01461                                 
                 OLDSEC = DEFALT                                                    021  LM00037
 01611 CLA +0 50000 0 00107    01612 STO +0 60100 0 01462                                                               
                 WHENEVER OLDNAM .E. FENCE, TRANSFER TO INSERT                      022  LM00038
 01613 CLA +0 50000 0 01461    01614 SUB +0 40200 0 00665    01615 TNZ -0 10000 0 01617    01616 TRA +0 02000 0 00051   
                 OLDSEC = COMARG.(2)                                                023  LM00039
 01617 TSX +0 07400 4 00007    01620 TXH +3 00000 0 01502    01621 STO +0 60100 0 01462                                 
                 WHENEVER OLDSEC .E. FENCE, OLDSEC = DEFALT                         024  LM00040
 01622 CLA +0 50000 0 01462    01623 SUB +0 40200 0 00665    01624 TNZ -0 10000 0 01627    01625 CLA +0 50000 0 00107   
 01626 STO +0 60100 0 01462                                                                                             
                 SEEK.(OLDNAM, OLDSEC, INSERT)                                      025  LM00041
 01627 TSX +0 07400 4 00021    01630 TXH +3 00000 0 01461    01631 TXH +3 00000 0 01462    01632 TXH +3 00000 0 00051   
                 FSTPAS = 1B                                                        026  LM00042
 01633 CLA +0 50000 0 01501    01634 STO +0 60100 0 00671                                                               
                 OK = 1B                                                            027  LM00043
 01635 CLA +0 50000 0 01501    01636 STO +0 60100 0 01460                                                               
      EDIT       WHENEVER .NOT. BRIEF, PRINT COMMENT $0E1D1I1T$                     028  LM00047
 01637 ZET +0 52000 0 00077    01640 TRA +0 02000 0 01645    01641 TSX +0 07400 4 00015    01642     +0 00000 0 00002   
 01643     +0 02501 2 40131    01644     +0 16360 6 06060                                                               
      NXRQ       COUNT = TYPEIN.(EDLIN, BUFSIZ)                                     029  LM00051
 01645 TSX +0 07400 4 00024    01646 TXH +3 00000 0 00663    01647 TXH +3 00000 0 00100    01650 STO +0 60100 0 00105   
                 WHENEVER EDLIN(1) .E. MCHNG .AND. COUNT .L. 3                      030  LM00052
                1     , TRANSFER TO INSERT                                          030  LM00053
 01651 CLA +0 50000 0 00105    01652 SUB +0 40200 0 01503    01653 TZE +0 10000 0 01661    01654 TPL +0 12000 0 01661   
 01655 CLA +0 50000 0 00662    01656 SUB +0 40200 0 01454    01657 TNZ -0 10000 0 01661    01660 TRA +0 02000 0 00051   
                 WHENEVER COUNT .L. 2, TRANSFER TO NXRQ                             031  LM00054
 01661 CLA +0 50000 0 00105    01662 SUB +0 40200 0 01502    01663 TZE +0 10000 0 01666    01664 TPL +0 12000 0 01666   
 01665 TRA +0 02000 0 00060                                                                                             
                 EDCT = 0                                                           032  LM00055
 01666 CLA +0 50000 0 01500    01667 STO +0 60100 0 00111                                                               
                 CWD = GET.(0)                                                      033  LM00056
 01670 TSX +0 07400 4 00031    01671 TXH +3 00000 0 01500    01672 STO +0 60100 0 00106                                 
                 WHENEVER CWD .E. $DELETE$ .OR. CWD .E. $     D$                    034  LM00058
 01673 CLA +0 50000 0 00106    01674 SUB +0 40200 0 01533    01675 TZE +0 10000 0 01701    01676 CLA +0 50000 0 00106   
 01677 SUB +0 40200 0 01511    01700 TNZ -0 10000 0 01732                                                               
                   N = BIN.(GET.(0))                                                035  LM00059
 01701 TSX +0 07400 4 00031    01702 TXH +3 00000 0 01500    01703 STO +0 60100 0 03710    01704 TSX +0 07400 4 00001   
 01705 TXH +3 00000 0 03710    01706 STO +0 60100 0 01456                                                               
                   THROUGH DREAD, FOR I = 1, 1, I .GE. N                            036  LM00060
 01707 CLA +0 50000 0 01501    01710 STO +0 60100 0 00675    01711 TRA +0 02000 0 01715    01712 CLA +0 50000 0 00675   
 01713 ADD +0 40000 0 01501    01714 STO +0 60100 0 00675    01715 CLA +0 50000 0 00675    01716 SUB +0 40200 0 01456   
 01717 TZE +0 10000 0 01727    01720 TPL +0 12000 0 01727                                                               
       DREAD         LENGTH = READ.(LINE, BUFSIZ, EOF)                              037  LM00061
 01721 TSX +0 07400 4 00017    01722 TXH +3 00000 0 01452    01723 TXH +3 00000 0 00100    01724 TXH +3 00000 0 00044   
 01725 STO +0 60100 0 00700    01726 TRA +0 02000 0 01712                                                               
                   LENGTH = 0                                                       038  LM00062
 01727 CLA +0 50000 0 01500    01730 STO +0 60100 0 00700                                                               
                 OR WHENEVER CWD .E. $  NEXT$ .OR. CWD .E. $     N$                 039  LM00064
 01731 TRA +0 02000 0 03415    01732 CLA +0 50000 0 00106    01733 SUB +0 40200 0 01542    01734 TZE +0 10000 0 01740   
 01735 CLA +0 50000 0 00106    01736 SUB +0 40200 0 01523    01737 TNZ -0 10000 0 02002                                 
                   N = BIN.(GET.(0))                                                040  LM00065
 01740 TSX +0 07400 4 00031    01741 TXH +3 00000 0 01500    01742 STO +0 60100 0 03710    01743 TSX +0 07400 4 00001   
 01744 TXH +3 00000 0 03710    01745 STO +0 60100 0 01456                                                               
                   WHENEVER N .E. 0, N = 1                                          041  LM00066
 01746 CLA +0 50000 0 01456    01747 SUB +0 40200 0 01500    01750 TNZ -0 10000 0 01753    01751 CLA +0 50000 0 01501   
 01752 STO +0 60100 0 01456                                                                                             
                   THROUGH NXT, FOR I = 1, 1, I .G. N                               042  LM00067
 01753 CLA +0 50000 0 01501    01754 STO +0 60100 0 00675    01755 TRA +0 02000 0 01761    01756 CLA +0 50000 0 00675   
 01757 ADD +0 40000 0 01501    01760 STO +0 60100 0 00675    01761 CLA +0 50000 0 00675    01762 SUB +0 40200 0 01456   
 01763 TZE +0 10000 0 01765    01764 TPL +0 12000 0 02001                                                               
                     WRITE.(LINE, LENGTH)                                           043  LM00068
 01765 TSX +0 07400 4 00027    01766 TXH +3 00000 0 01452    01767 TXH +3 00000 0 00700                                 
                     WHENEVER .NOT. OK, CLSOUT.                                     044  LM00069
 01770 ZET +0 52000 0 01460    01771 TRA +0 02000 0 01773    01772 TSX +0 07400 4 00030                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              045  LM00070
 01773 TSX +0 07400 4 00017    01774 TXH +3 00000 0 01452    01775 TXH +3 00000 0 00100    01776 TXH +3 00000 0 00044   
 01777 STO +0 60100 0 00700                                                                                             
       NXT           CONTINUE                                                       046  LM00071
 02000 TRA +0 02000 0 01756                                                                                             
                 OR WHENEVER CWD .E. $INSERT$ .OR. CWD .E. $     I$                 047  LM00073
 02001 TRA +0 02000 0 03415    02002 CLA +0 50000 0 00106    02003 SUB +0 40200 0 01537    02004 TZE +0 10000 0 02010   
 02005 CLA +0 50000 0 00106    02006 SUB +0 40200 0 01512    02007 TNZ -0 10000 0 02064                                 
                   WRITE.(LINE, LENGTH)                                             048  LM00074
 02010 TSX +0 07400 4 00027    02011 TXH +3 00000 0 01452    02012 TXH +3 00000 0 00700                                 
                   TRANSFER TO RETYPE                                               049  LM00075
 02013 TRA +0 02000 0 00062                                                                                             
      INSERT       WHENEVER .NOT. BRIEF, PRINT COMMENT $0I1N1P1U1T$                 050  LM00077
 02014 ZET +0 52000 0 00077    02015 TRA +0 02000 0 02022    02016 TSX +0 07400 4 00015    02017     +0 00000 0 00002   
 02020     +0 03101 4 50147    02021     +0 16401 6 36060                                                               
       INPUT       COUNT = TYPEIN.(EDLIN, BUFSIZ)                                   051  LM00078
 02022 TSX +0 07400 4 00024    02023 TXH +3 00000 0 00663    02024 TXH +3 00000 0 00100    02025 STO +0 60100 0 00105   
                   WHENEVER COUNT .L. 3 .AND. EDLIN(1) .E. MCHNG                    052  LM00079
                1     , TRANSFER TO EDIT                                            052  LM00080
 02026 CLA +0 50000 0 00662    02027 SUB +0 40200 0 01454    02030 TNZ -0 10000 0 02036    02031 CLA +0 50000 0 00105   
 02032 SUB +0 40200 0 01503    02033 TZE +0 10000 0 02036    02034 TPL +0 12000 0 02036    02035 TRA +0 02000 0 00043   
                   WRITE.(LINE, LENGTH)                                             053  LM00081
 02036 TSX +0 07400 4 00027    02037 TXH +3 00000 0 01452    02040 TXH +3 00000 0 00700                                 
                   THROUGH MVLP, FOR I = 1, 1, I .G. COUNT                          054  LM00082
 02041 CLA +0 50000 0 01501    02042 STO +0 60100 0 00675    02043 TRA +0 02000 0 02047    02044 CLA +0 50000 0 00675   
 02045 ADD +0 40000 0 01501    02046 STO +0 60100 0 00675    02047 CLA +0 50000 0 00675    02050 SUB +0 40200 0 00105   
 02051 TZE +0 10000 0 02053    02052 TPL +0 12000 0 02060                                                               
       MVLP          LINE(I) = EDLIN(I)                                             055  LM00083
 02053 LXA +0 53400 1 00675    02054 LXA +0 53400 2 00675    02055 CLA +0 50000 2 00663    02056 STO +0 60100 1 01452   
 02057 TRA +0 02000 0 02044                                                                                             
                   LENGTH = COUNT                                                   056  LM00084
 02060 CLA +0 50000 0 00105    02061 STO +0 60100 0 00700                                                               
                   TRANSFER TO INPUT                                                057  LM00085
 02062 TRA +0 02000 0 00050                                                                                             
                 OR WHENEVER CWD .E. $BOTTOM$ .OR. CWD .E. $     B$                 058  LM00087
 02063 TRA +0 02000 0 03415    02064 CLA +0 50000 0 00106    02065 SUB +0 40200 0 01531    02066 TZE +0 10000 0 02072   
 02067 CLA +0 50000 0 00106    02070 SUB +0 40200 0 01506    02071 TNZ -0 10000 0 02104                                 
                   WRITE.(LINE, LENGTH)                                             059  LM00088
 02072 TSX +0 07400 4 00027    02073 TXH +3 00000 0 01452    02074 TXH +3 00000 0 00700                                 
                   LENGTH = 0                                                       060  LM00089
 02075 CLA +0 50000 0 01500    02076 STO +0 60100 0 00700                                                               
                   WHENEVER OK, BOTTOM.                                             061  LM00090
 02077 NZT -0 52000 0 01460    02100 TRA +0 02000 0 02102    02101 TSX +0 07400 4 00002                                 
                   TRANSFER TO INSERT                                               062  LM00091
 02102 TRA +0 02000 0 00051                                                                                             
                 OR WHENEVER CWD .E. $APPEND$ .OR. CWD .E. $     A$                 063  LM00093
 02103 TRA +0 02000 0 03415    02104 CLA +0 50000 0 00106    02105 SUB +0 40200 0 01530    02106 TZE +0 10000 0 02112   
 02107 CLA +0 50000 0 00106    02110 SUB +0 40200 0 01505    02111 TNZ -0 10000 0 02123                                 
                   WHENEVER LENGTH .G. 0, LENGTH = LENGTH - 1                       064  LM00094
 02112 CLA +0 50000 0 00700    02113 SUB +0 40200 0 01500    02114 TZE +0 10000 0 02121    02115 TMI -0 12000 0 02121   
 02116 CLA +0 50000 0 00700    02117 SUB +0 40200 0 01501    02120 STO +0 60100 0 00700                                 
                   TRANSFER TO APPEND                                               065  LM00095
 02121 TRA +0 02000 0 00034                                                                                             
                 OR WHENEVER CWD .E. $RETYPE$ .OR. CWD .E. $     R$                 066  LM00097
 02122 TRA +0 02000 0 03415    02123 CLA +0 50000 0 00106    02124 SUB +0 40200 0 01545    02125 TZE +0 10000 0 02131   
 02126 CLA +0 50000 0 00106    02127 SUB +0 40200 0 01514    02130 TNZ -0 10000 0 02157                                 
       RETYPE      LENGTH = 0                                                       067  LM00098
 02131 CLA +0 50000 0 01500    02132 STO +0 60100 0 00700                                                               
      APPEND       THROUGH RPLC, FOR EDCT = EDCT + 1, 1, EDCT .G. COUNT             068  LM00099
 02133 CLA +0 50000 0 00111    02134 ADD +0 40000 0 01501    02135 STO +0 60100 0 00111    02136 TRA +0 02000 0 02142   
 02137 CLA +0 50000 0 00111    02140 ADD +0 40000 0 01501    02141 STO +0 60100 0 00111    02142 CLA +0 50000 0 00111   
 02143 SUB +0 40200 0 00105    02144 TZE +0 10000 0 02146    02145 TPL +0 12000 0 02156                                 
                     LENGTH = LENGTH + 1                                            069  LM00100
 02146 CLA +0 50000 0 00700    02147 ADD +0 40000 0 01501    02150 STO +0 60100 0 00700                                 
       RPLC          LINE(LENGTH) = EDLIN(EDCT)                                     070  LM00101
 02151 LXA +0 53400 1 00700    02152 LXA +0 53400 2 00111    02153 CLA +0 50000 2 00663    02154 STO +0 60100 1 01452   
 02155 TRA +0 02000 0 02137                                                                                             
                 OR WHENEVER CWD .E. $ ERASE$ .OR. CWD .E. $     E$                 071  LM00103
 02156 TRA +0 02000 0 03415    02157 CLA +0 50000 0 00106    02160 SUB +0 40200 0 01534    02161 TZE +0 10000 0 02165   
 02162 CLA +0 50000 0 00106    02163 SUB +0 40200 0 01516    02164 TNZ -0 10000 0 02203                                 
                   WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETERS.(EDLIN(EDCT+1))        072  LM00104
 02165 CLA +0 50000 0 00111    02166 ADD +0 40000 0 01501    02167 PAX +0 73400 1 00000    02170 CLA +0 50000 1 00663   
 02171 SUB +0 40200 0 00076    02172 TZE +0 10000 0 02202    02173 CLA +0 50000 0 00111    02174 ADD +0 40000 0 01501   
 02175 SUB +0 40200 0 02176    02176 TXH +3 00000 0 00663    02177 STA +0 62100 0 02201    02200 TSX +0 07400 4 00022   
 02201 TXH +3 00000 0 00000                                                                                             
                 OR WHENEVER CWD .E. $  KILL$ .OR. CWD .E. $     K$                 073  LM00106
 02202 TRA +0 02000 0 03415    02203 CLA +0 50000 0 00106    02204 SUB +0 40200 0 01540    02205 TZE +0 10000 0 02211   
 02206 CLA +0 50000 0 00106    02207 SUB +0 40200 0 01522    02210 TNZ -0 10000 0 02227                                 
                   WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETKIL.(EDLIN(EDCT+1))        074  LM00107
 02211 CLA +0 50000 0 00111    02212 ADD +0 40000 0 01501    02213 PAX +0 73400 1 00000    02214 CLA +0 50000 1 00663   
 02215 SUB +0 40200 0 00076    02216 TZE +0 10000 0 02226    02217 CLA +0 50000 0 00111    02220 ADD +0 40000 0 01501   
 02221 SUB +0 40200 0 02222    02222 TXH +3 00000 0 00663    02223 STA +0 62100 0 02225    02224 TSX +0 07400 4 00023   
 02225 TXH +3 00000 0 00000                                                                                             
                 OR WHENEVER CWD .E. $ BREAK$ .OR. CWD .E. $    BR$                 075  LM00111
 02226 TRA +0 02000 0 03415    02227 CLA +0 50000 0 00106    02230 SUB +0 40200 0 01526    02231 TZE +0 10000 0 02235   
 02232 CLA +0 50000 0 00106    02233 SUB +0 40200 0 01515    02234 TNZ -0 10000 0 02260                                 
                   WHENEVER EDLIN(EDCT) .E. RETURN                                  076  LM00112
 02235 LXA +0 53400 1 00111    02236 CLA +0 50000 1 00663    02237 SUB +0 40200 0 01467    02240 TNZ -0 10000 0 02244   
                     MCHNG = RETURN                                                 077  LM00113
 02241 CLA +0 50000 0 01467    02242 STO +0 60100 0 01454                                                               
                   OR WHENEVER EDLIN(EDCT+1) .NE. BLANK                             078  LM00114
 02243 TRA +0 02000 0 02257    02244 CLA +0 50000 0 00111    02245 ADD +0 40000 0 01501    02246 PAX +0 73400 1 00000   
 02247 CLA +0 50000 1 00663    02250 SUB +0 40200 0 00076    02251 TZE +0 10000 0 02257                                 
                     MCHNG = EDLIN(EDCT+1)                                          079  LM00115
 02252 CLA +0 50000 0 00111    02253 ADD +0 40000 0 01501    02254 PAX +0 73400 2 00000    02255 CLA +0 50000 2 00663   
 02256 STO +0 60100 0 01454                                                                                             
                   END OF CONDITIONAL                                               080  LM00116
                 OR WHENEVER CWD .E. $VERIFY$ .OR. CWD .E. $     V$                 081  LM00118
 02257 TRA +0 02000 0 03415    02260 CLA +0 50000 0 00106    02261 SUB +0 40200 0 01551    02262 TZE +0 10000 0 02266   
 02263 CLA +0 50000 0 00106    02264 SUB +0 40200 0 01554    02265 TNZ -0 10000 0 02305                                 
                   CWD = GET.(0)                                                    082  LM00119
 02266 TSX +0 07400 4 00031    02267 TXH +3 00000 0 01500    02270 STO +0 60100 0 00106                                 
                   WHENEVER CWD .E. $    ON$                                        083  LM00120
 02271 CLA +0 50000 0 00106    02272 SUB +0 40200 0 01527    02273 TNZ -0 10000 0 02277                                 
                     BRIEF = 0B                                                     084  LM00121
 02274 CLA +0 50000 0 01500    02275 STO +0 60100 0 00077                                                               
                   OR WHENEVER CWD .E. $   OFF$                                     085  LM00122
 02276 TRA +0 02000 0 02304    02277 CLA +0 50000 0 00106    02300 SUB +0 40200 0 01525    02301 TNZ -0 10000 0 02304   
                     BRIEF = 1B                                                     086  LM00123
 02302 CLA +0 50000 0 01501    02303 STO +0 60100 0 00077                                                               
                   END OF CONDITIONAL                                               087  LM00124
                 OR WHENEVER CWD .E. $LOCATE$ .OR. CWD .E. $     L$                 088  LM00126
 02304 TRA +0 02000 0 03415    02305 CLA +0 50000 0 00106    02306 SUB +0 40200 0 01541    02307 TZE +0 10000 0 02313   
 02310 CLA +0 50000 0 00106    02311 SUB +0 40200 0 01513    02312 TNZ -0 10000 0 02317                                 
                   LOCATE = 1                                                       089  LM00127
 02313 CLA +0 50000 0 01501    02314 STO +0 60100 0 01453                                                               
                   TRANSFER TO FIND                                                 090  LM00128
 02315 TRA +0 02000 0 00045                                                                                             
                 OR WHENEVER CWD .E. $  FIND$ .OR. CWD .E. $     F$                 091  LM00130
 02316 TRA +0 02000 0 03415    02317 CLA +0 50000 0 00106    02320 SUB +0 40200 0 01535    02321 TZE +0 10000 0 02325   
 02322 CLA +0 50000 0 00106    02323 SUB +0 40200 0 01521    02324 TNZ -0 10000 0 02510                                 
                   LOCATE = 0                                                       092  LM00131
 02325 CLA +0 50000 0 01500    02326 STO +0 60100 0 01453                                                               
      FIND         WHENEVER EDCT+1 .GE. COUNT                                       093  LM00132
 02327 CLA +0 50000 0 00111    02330 ADD +0 40000 0 01501    02331 SUB +0 40200 0 00105    02332 TZE +0 10000 0 02334   
 02333 TMI -0 12000 0 02341                                                                                             
                     COUNT = OCOUNT                                                 094  LM00133
 02334 CLA +0 50000 0 01457    02335 STO +0 60100 0 00105                                                               
                     EDCT = EDCT + 1                                                095  LM00134
 02336 CLA +0 50000 0 00111    02337 ADD +0 40000 0 01501    02340 STO +0 60100 0 00111                                 
                   END OF CONDITIONAL                                               096  LM00135
                   OCOUNT = COUNT                                                   097  LM00136
 02341 CLA +0 50000 0 00105    02342 STO +0 60100 0 01457                                                               
       NTFND       WRITE.(LINE, LENGTH)                                             098  LM00137
 02343 TSX +0 07400 4 00027    02344 TXH +3 00000 0 01452    02345 TXH +3 00000 0 00700                                 
                   WHENEVER  .NOT. OK, CLSOUT.                                      099  LM00138
 02346 ZET +0 52000 0 01460    02347 TRA +0 02000 0 02351    02350 TSX +0 07400 4 00030                                 
                   LENGTH = READ.(LINE, BUFSIZ, EOF)                                100  LM00139
 02351 TSX +0 07400 4 00017    02352 TXH +3 00000 0 01452    02353 TXH +3 00000 0 00100    02354 TXH +3 00000 0 00044   
 02355 STO +0 60100 0 00700                                                                                             
                   THROUGH LOCSCN, FOR K=0, 1,K.G.LOCATE*(LENGTH-COUNT+EDCT)        101  LM00140
 02356 CLA +0 50000 0 01500    02357 STO +0 60100 0 00677    02360 TRA +0 02000 0 02364    02361 CLA +0 50000 0 00677   
 02362 ADD +0 40000 0 01501    02363 STO +0 60100 0 00677    02364 CLA +0 50000 0 00700    02365 SUB +0 40200 0 00105   
 02366 ADD +0 40000 0 00111    02367 XCA +0 13100 0 00000    02370 MPY +0 20000 0 01453    02371 XCA +0 13100 0 00000   
 02372 CHS +0 76000 0 00002    02373 ADD +0 40000 0 00677    02374 TZE +0 10000 0 02376    02375 TPL +0 12000 0 02506   
                     J = K                                                          102  LM00141
 02376 CLA +0 50000 0 00677    02377 STO +0 60100 0 00676                                                               
                     THROUGH LOOK, FOR I = EDCT+1, 1, I .GE. COUNT                  103  LM00142
 02400 CLA +0 50000 0 00111    02401 ADD +0 40000 0 01501    02402 STO +0 60100 0 00675    02403 TRA +0 02000 0 02407   
 02404 CLA +0 50000 0 00675    02405 ADD +0 40000 0 01501    02406 STO +0 60100 0 00675    02407 CLA +0 50000 0 00675   
 02410 SUB +0 40200 0 00105    02411 TZE +0 10000 0 02475    02412 TPL +0 12000 0 02475                                 
                       J = J + 1                                                    104  LM00143
 02413 CLA +0 50000 0 00676    02414 ADD +0 40000 0 01501    02415 STO +0 60100 0 00676                                 
       TAGN            WHENEVER LINE(J) .E. EDLIN(I), TRANSFER TO LOOK              105  LM00144
 02416 LXA +0 53400 1 00676    02417 LXA +0 53400 2 00675    02420 CLA +0 50000 1 01452    02421 SUB +0 40200 2 00663   
 02422 TNZ -0 10000 0 02424    02423 TRA +0 02000 0 00053                                                               
                       WHENEVER (LINE(J).E. TAB) .AND. (EDLIN(I) .E. BLANK)         106  LM00145
                1       , TRANSFER TO LOOK                                          106  LM00146
 02424 LXA +0 53400 1 00675    02425 CLA +0 50000 1 00663    02426 SUB +0 40200 0 00076    02427 TNZ -0 10000 0 02435   
 02430 LXA +0 53400 1 00676    02431 CLA +0 50000 1 01452    02432 SUB +0 40200 0 01473    02433 TNZ -0 10000 0 02435   
 02434 TRA +0 02000 0 00053                                                                                             
                       WHENEVER EDLIN(I-1) .NE. BLANK .OR. I .E. EDCT + 1           107  LM00147
                1       , TRANSFER TO LOCSCN                                        107  LM00148
 02435 CLA +0 50000 0 00111    02436 ADD +0 40000 0 01501    02437 CHS +0 76000 0 00002    02440 ADD +0 40000 0 00675   
 02441 TZE +0 10000 0 02450    02442 CLA +0 50000 0 00675    02443 SUB +0 40200 0 01501    02444 PAX +0 73400 1 00000   
 02445 CLA +0 50000 1 00663    02446 SUB +0 40200 0 00076    02447 TZE +0 10000 0 02451    02450 TRA +0 02000 0 00052   
                       WHENEVER LINE(J) .NE. BLANK .AND. LINE(J) .NE. TAB           108  LM00149
                1       , TRANSFER TO LOCSCN                                        108  LM00150
 02451 LXA +0 53400 1 00676    02452 CLA +0 50000 1 01452    02453 SUB +0 40200 0 01473    02454 TZE +0 10000 0 02461   
 02455 CLA +0 50000 1 01452    02456 SUB +0 40200 0 00076    02457 TZE +0 10000 0 02461    02460 TRA +0 02000 0 00052   
                       J = J + 1                                                    109  LM00151
 02461 CLA +0 50000 0 00676    02462 ADD +0 40000 0 01501    02463 STO +0 60100 0 00676                                 
                       TRANSFER TO TAGN                                             110  LM00152
 02464 TRA +0 02000 0 00067                                                                                             
       LOOK            WHENEVER I .E. EDCT+1, FNDST = J                             111  LM00153
 02465 CLA +0 50000 0 00111    02466 ADD +0 40000 0 01501    02467 CHS +0 76000 0 00002    02470 ADD +0 40000 0 00675   
 02471 TNZ -0 10000 0 02474    02472 CLA +0 50000 0 00676    02473 STO +0 60100 0 00670    02474 TRA +0 02000 0 02404   
                     FNDND = J                                                      112  LM00154
 02475 CLA +0 50000 0 00676    02476 STO +0 60100 0 00667                                                               
                     WHENEVER .NOT. BRIEF, PRNT.(FNDST, FNDND)                      113  LM00155
 02477 ZET +0 52000 0 00077    02500 TRA +0 02000 0 02504    02501 TSX +0 07400 4 00032    02502 TXH +3 00000 0 00670   
 02503 TXH +3 00000 0 00667                                                                                             
                     TRANSFER TO NXRQ                                               114  LM00156
 02504 TRA +0 02000 0 00060                                                                                             
        LOCSCN       CONTINUE                                                       115  LM00157
 02505 TRA +0 02000 0 02361                                                                                             
                   TRANSFER TO NTFND                                                116  LM00158
 02506 TRA +0 02000 0 00057                                                                                             
                 OR WHENEVER CWD .E. $ PRINT$ .OR. CWD .E. $     P$                 117  LM00160
 02507 TRA +0 02000 0 03415    02510 CLA +0 50000 0 00106    02511 SUB +0 40200 0 01543    02512 TZE +0 10000 0 02516   
 02513 CLA +0 50000 0 00106    02514 SUB +0 40200 0 01517    02515 TNZ -0 10000 0 02564                                 
                   NPRNT = BIN.(GET.(0))                                            118  LM00161
 02516 TSX +0 07400 4 00031    02517 TXH +3 00000 0 01500    02520 STO +0 60100 0 03710    02521 TSX +0 07400 4 00001   
 02522 TXH +3 00000 0 03710    02523 STO +0 60100 0 01455                                                               
      PNTLP        WHENEVER LENGTH .E. 0                                            119  LM00162
 02524 CLA +0 50000 0 00700    02525 SUB +0 40200 0 01500    02526 TNZ -0 10000 0 02540                                 
                     PRINT COMMENT $0N1O0 1C1U1R1R1E1N1T0 1L1I1N1E0.$               120  LM00163
 02527 TSX +0 07400 4 00015    02530     +0 00000 0 00006    02531     +0 04501 4 60060    02532     +0 12301 6 40151   
 02533     +0 15101 2 50145    02534     +0 16300 6 00143    02535     +0 13101 4 50125    02536     +0 03360 6 06060   
                   OTHERWISE                                                        121  LM00164
 02537 TRA +0 02000 0 02543                                                                                             
                     TYPOUT.(LINE, LENGTH)                                          122  LM00165
 02540 TSX +0 07400 4 00025    02541 TXH +3 00000 0 01452    02542 TXH +3 00000 0 00700                                 
                   END OF CONDITIONAL                                               123  LM00166
                   NPRNT = NPRNT - 1                                                124  LM00167
 02543 CLA +0 50000 0 01455    02544 SUB +0 40200 0 01501    02545 STO +0 60100 0 01455                                 
                   WHENEVER NPRNT .G. 0                                             125  LM00168
 02546 CLA +0 50000 0 01455    02547 SUB +0 40200 0 01500    02550 TZE +0 10000 0 02563    02551 TMI -0 12000 0 02563   
                     WRITE.(LINE, LENGTH)                                           126  LM00169
 02552 TSX +0 07400 4 00027    02553 TXH +3 00000 0 01452    02554 TXH +3 00000 0 00700                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              127  LM00170
 02555 TSX +0 07400 4 00017    02556 TXH +3 00000 0 01452    02557 TXH +3 00000 0 00100    02560 TXH +3 00000 0 00044   
 02561 STO +0 60100 0 00700                                                                                             
                     TRANSFER TO PNTLP                                              128  LM00171
 02562 TRA +0 02000 0 00061                                                                                             
                   END OF CONDITIONAL                                               129  LM00172
                 OR WHENEVER CWD .E. $   TOP$ .OR. CWD .E. $     T$                 130  LM00174
 02563 TRA +0 02000 0 03415    02564 CLA +0 50000 0 00106    02565 SUB +0 40200 0 01550    02566 TZE +0 10000 0 02572   
 02567 CLA +0 50000 0 00106    02570 SUB +0 40200 0 01552    02571 TNZ -0 10000 0 02602                                 
       TOPLP       WRITE.(LINE, LENGTH)                                             131  LM00175
 02572 TSX +0 07400 4 00027    02573 TXH +3 00000 0 01452    02574 TXH +3 00000 0 00700                                 
                   WHENEVER OK, BOTTOM.                                             132  LM00176
 02575 NZT -0 52000 0 01460    02576 TRA +0 02000 0 02600    02577 TSX +0 07400 4 00002                                 
                   CLSOUT.                                                          133  LM00177
 02600 TSX +0 07400 4 00030                                                                                             
                 OR WHENEVER CWD .E. $CHANGE$ .OR. CWD .E. $     C$                 134  LM00179
 02601 TRA +0 02000 0 03415    02602 CLA +0 50000 0 00106    02603 SUB +0 40200 0 01532    02604 TZE +0 10000 0 02610   
 02605 CLA +0 50000 0 00106    02606 SUB +0 40200 0 01510    02607 TNZ -0 10000 0 03172                                 
                   EDCT = EDCT+1                                                    135  LM00185
 02610 CLA +0 50000 0 00111    02611 ADD +0 40000 0 01501    02612 STO +0 60100 0 00111                                 
                   QUOTE = EDLIN(EDCT)                                              136  LM00186
 02613 LXA +0 53400 2 00111    02614 CLA +0 50000 2 00663    02615 STO +0 60100 0 01464                                 
                   STR1 = EDCT                                                      137  LM00187
 02616 CLA +0 50000 0 00111    02617 STO +0 60100 0 01471                                                               
      QLOOP        THROUGH QLOOP, FOR EDCT = EDCT+1, 1,                             138  LM00188
                1     (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                138  LM00189
 02620 CLA +0 50000 0 00111    02621 ADD +0 40000 0 01501    02622 STO +0 60100 0 00111    02623 TRA +0 02000 0 02627   
 02624 CLA +0 50000 0 00111    02625 ADD +0 40000 0 01501    02626 STO +0 60100 0 00111    02627 CLA +0 50000 0 00111   
 02630 SUB +0 40200 0 00105    02631 TZE +0 10000 0 02640    02632 TPL +0 12000 0 02640    02633 LXA +0 53400 1 00111   
 02634 CLA +0 50000 1 00663    02635 SUB +0 40200 0 01464    02636 TZE +0 10000 0 02640    02637 TRA +0 02000 0 02624   
                   STR2 = EDCT                                                      139  LM00190
 02640 CLA +0 50000 0 00111    02641 STO +0 60100 0 01472                                                               
      QLOOP1       THROUGH QLOOP1, FOR EDCT = EDCT+1, 1,                            140  LM00191
                1     (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                140  LM00192
 02642 CLA +0 50000 0 00111    02643 ADD +0 40000 0 01501    02644 STO +0 60100 0 00111    02645 TRA +0 02000 0 02651   
 02646 CLA +0 50000 0 00111    02647 ADD +0 40000 0 01501    02650 STO +0 60100 0 00111    02651 CLA +0 50000 0 00111   
 02652 SUB +0 40200 0 00105    02653 TZE +0 10000 0 02662    02654 TPL +0 12000 0 02662    02655 LXA +0 53400 1 00111   
 02656 CLA +0 50000 1 00663    02657 SUB +0 40200 0 01464    02660 TZE +0 10000 0 02662    02661 TRA +0 02000 0 02646   
                   EST2 = EDCT                                                      141  LM00193
 02662 CLA +0 50000 0 00111    02663 STO +0 60100 0 00664                                                               
                   EDCT = EDCT + 1                                                  142  LM00197
 02664 CLA +0 50000 0 00111    02665 ADD +0 40000 0 01501    02666 STO +0 60100 0 00111                                 
                   TEM = 1                                                          143  LM00198
 02667 CLA +0 50000 0 01501    02670 STO +0 60100 0 01474                                                               
                   GLOBAL = 0B                                                      144  LM00199
 02671 CLA +0 50000 0 01500    02672 STO +0 60100 0 00672                                                               
      ARGLP        CWD = GET.(0)                                                    145  LM00200
 02673 TSX +0 07400 4 00031    02674 TXH +3 00000 0 01500    02675 STO +0 60100 0 00106                                 
                   WHENEVER CWD .E. $ $                                             146  LM00201
 02676 CLA +0 50000 0 00106    02677 SUB +0 40200 0 01546    02700 TNZ -0 10000 0 02703                                 
                     TRANSFER TO SHIFT                                              147  LM00202
 02701 TRA +0 02000 0 00063                                                                                             
                   OR WHENEVER CWD .E. $     G$                                     148  LM00203
 02702 TRA +0 02000 0 02721    02703 CLA +0 50000 0 00106    02704 SUB +0 40200 0 01536    02705 TNZ -0 10000 0 02716   
                     WHENEVER STR2 .NE. STR1+1, GLOBAL = 1B                         149  LM00204
 02706 CLA +0 50000 0 01471    02707 ADD +0 40000 0 01501    02710 CHS +0 76000 0 00002    02711 ADD +0 40000 0 01472   
 02712 TZE +0 10000 0 02715    02713 CLA +0 50000 0 01501    02714 STO +0 60100 0 00672                                 
                   OTHERWISE                                                        150  LM00205
 02715 TRA +0 02000 0 02721                                                                                             
                     TEM = BIN.(CWD)                                                151  LM00206
 02716 TSX +0 07400 4 00001    02717 TXH +3 00000 0 00106    02720 STO +0 60100 0 01474                                 
                   END OF CONDITIONAL                                               152  LM00207
                   TRANSFER TO ARGLP                                                153  LM00208
 02721 TRA +0 02000 0 00035                                                                                             
       SHIFT       THROUGH MVDWN, FOR I = LENGTH, -1, I .L. 1                       154  LM00212
 02722 CLA +0 50000 0 00700    02723 STO +0 60100 0 00675    02724 TRA +0 02000 0 02730    02725 CLS +0 50200 0 01501   
 02726 ADD +0 40000 0 00675    02727 STO +0 60100 0 00675    02730 CLA +0 50000 0 00675    02731 SUB +0 40200 0 01501   
 02732 TZE +0 10000 0 02734    02733 TMI -0 12000 0 02744                                                               
      MVDWN          LINE(BUFSIZ+I-LENGTH) = LINE(I)                                155  LM00213
 02734 CLA +0 50000 0 00100    02735 ADD +0 40000 0 00675    02736 SUB +0 40200 0 00700    02737 PAX +0 73400 1 00000   
 02740 LXA +0 53400 2 00675    02741 CLA +0 50000 2 01452    02742 STO +0 60100 1 01452    02743 TRA +0 02000 0 02725   
                   DOWN = BUFSIZ-LENGTH+1                                           156  LM00214
 02744 CLA +0 50000 0 00100    02745 SUB +0 40200 0 00700    02746 ADD +0 40000 0 01501    02747 STO +0 60100 0 00110   
                   UP = 0                                                           157  LM00215
 02750 CLA +0 50000 0 01500    02751 STO +0 60100 0 01476                                                               
                   CHNG = 0B                                                        158  LM00216
 02752 CLA +0 50000 0 01500    02753 STO +0 60100 0 00102                                                               
                   CHST = LENGTH + 1                                                159  LM00217
 02754 CLA +0 50000 0 00700    02755 ADD +0 40000 0 01501    02756 STO +0 60100 0 00103                                 
                   CHEND = LENGTH                                                   160  LM00218
 02757 CLA +0 50000 0 00700    02760 STO +0 60100 0 00101                                                               
      SRCHLP       UP = UP + 1                                                      161  LM00222
 02761 CLA +0 50000 0 01476    02762 ADD +0 40000 0 01501    02763 STO +0 60100 0 01476                                 
      SRTST          WHENEVER DOWN .G. BUFSIZ, TRANSFER TO GIVUP                    162  LM00223
 02764 CLA +0 50000 0 00110    02765 SUB +0 40200 0 00100    02766 TZE +0 10000 0 02771    02767 TMI -0 12000 0 02771   
 02770 TRA +0 02000 0 00046                                                                                             
                     J = DOWN                                                       163  LM00224
 02771 CLA +0 50000 0 00110    02772 STO +0 60100 0 00676                                                               
                     THROUGH COMPAR, FOR I = STR1+1, 1, I .GE. STR2                 164  LM00225
 02773 CLA +0 50000 0 01471    02774 ADD +0 40000 0 01501    02775 STO +0 60100 0 00675    02776 TRA +0 02000 0 03002   
 02777 CLA +0 50000 0 00675    03000 ADD +0 40000 0 01501    03001 STO +0 60100 0 00675    03002 CLA +0 50000 0 00675   
 03003 SUB +0 40200 0 01472    03004 TZE +0 10000 0 03025    03005 TPL +0 12000 0 03025                                 
                       WHENEVER J .GE. BUFSIZ, TRANSFER TO GIVUP                    165  LM00226
 03006 CLA +0 50000 0 00676    03007 SUB +0 40200 0 00100    03010 TZE +0 10000 0 03012    03011 TMI -0 12000 0 03013   
 03012 TRA +0 02000 0 00046                                                                                             
                       WHENEVER EDLIN(I) .NE. LINE(J), TRANSFER TO NOCOMP           166  LM00227
 03013 LXA +0 53400 1 00675    03014 LXA +0 53400 2 00676    03015 CLA +0 50000 1 00663    03016 SUB +0 40200 2 01452   
 03017 TZE +0 10000 0 03021    03020 TRA +0 02000 0 00055                                                               
       COMPAR          J = J + 1                                                    167  LM00228
 03021 CLA +0 50000 0 00676    03022 ADD +0 40000 0 01501    03023 STO +0 60100 0 00676    03024 TRA +0 02000 0 02777   
                     TRANSFER TO STFND                                              168  LM00229
 03025 TRA +0 02000 0 00066                                                                                             
      NOCOMP         LINE(UP) = LINE(DOWN)                                          169  LM00231
 03026 LXA +0 53400 1 01476    03027 LXA +0 53400 2 00110    03030 CLA +0 50000 2 01452    03031 STO +0 60100 1 01452   
                     DOWN = DOWN + 1                                                170  LM00232
 03032 CLA +0 50000 0 00110    03033 ADD +0 40000 0 01501    03034 STO +0 60100 0 00110                                 
                   TRANSFER TO SRCHLP                                               171  LM00233
 03035 TRA +0 02000 0 00064                                                                                             
      STFND        CHNG = 1B                                                        172  LM00237
 03036 CLA +0 50000 0 01501    03037 STO +0 60100 0 00102                                                               
                   DOWN = DOWN + (STR2-STR1-1)                                      173  LM00238
 03040 CLA +0 50000 0 01472    03041 SUB +0 40200 0 01471    03042 SUB +0 40200 0 01501    03043 ADD +0 40000 0 00110   
 03044 STO +0 60100 0 00110                                                                                             
                   CHST = UP                                                        174  LM00239
 03045 CLA +0 50000 0 01476    03046 STO +0 60100 0 00103                                                               
                   THROUGH REPLAC, FOR I = STR2 + 1, 1, I .GE. EST2                 175  LM00240
 03047 CLA +0 50000 0 01472    03050 ADD +0 40000 0 01501    03051 STO +0 60100 0 00675    03052 TRA +0 02000 0 03056   
 03053 CLA +0 50000 0 00675    03054 ADD +0 40000 0 01501    03055 STO +0 60100 0 00675    03056 CLA +0 50000 0 00675   
 03057 SUB +0 40200 0 00664    03060 TZE +0 10000 0 03077    03061 TPL +0 12000 0 03077                                 
                     LINE(UP) = EDLIN(I)                                            176  LM00241
 03062 LXA +0 53400 1 01476    03063 LXA +0 53400 2 00675    03064 CLA +0 50000 2 00663    03065 STO +0 60100 1 01452   
                     UP = UP + 1                                                    177  LM00242
 03066 CLA +0 50000 0 01476    03067 ADD +0 40000 0 01501    03070 STO +0 60100 0 01476                                 
       REPLAC        WHENEVER UP .G. DOWN, TRANSFER TO GIVUP                        178  LM00243
 03071 CLA +0 50000 0 01476    03072 SUB +0 40200 0 00110    03073 TZE +0 10000 0 03076    03074 TMI -0 12000 0 03076   
 03075 TRA +0 02000 0 00046    03076 TRA +0 02000 0 03053                                                               
                   CHEND = UP - 1                                                   179  LM00244
 03077 CLA +0 50000 0 01476    03100 SUB +0 40200 0 01501    03101 STO +0 60100 0 00101                                 
                   WHENEVER GLOBAL, TRANSFER TO SRTST                               180  LM00245
 03102 NZT -0 52000 0 00672    03103 TRA +0 02000 0 03105    03104 TRA +0 02000 0 00065                                 
      GIVUP        THROUGH FILOUT, FOR UP = UP, 1, DOWN .G. BUFSIZ                  181  LM00249
 03105 CLA +0 50000 0 01476    03106 STO +0 60100 0 01476    03107 TRA +0 02000 0 03113    03110 CLA +0 50000 0 01476   
 03111 ADD +0 40000 0 01501    03112 STO +0 60100 0 01476    03113 CLA +0 50000 0 00110    03114 SUB +0 40200 0 00100   
 03115 TZE +0 10000 0 03117    03116 TPL +0 12000 0 03127                                                               
                     LINE(UP) = LINE(DOWN)                                          182  LM00250
 03117 LXA +0 53400 1 01476    03120 LXA +0 53400 2 00110    03121 CLA +0 50000 2 01452    03122 STO +0 60100 1 01452   
      FILOUT         DOWN = DOWN + 1                                                183  LM00251
 03123 CLA +0 50000 0 00110    03124 ADD +0 40000 0 01501    03125 STO +0 60100 0 00110    03126 TRA +0 02000 0 03110   
                   LENGTH = UP - 1                                                  184  LM00252
 03127 CLA +0 50000 0 01476    03130 SUB +0 40200 0 01501    03131 STO +0 60100 0 00700                                 
                   TEM = TEM - 1                                                    185  LM00253
 03132 CLA +0 50000 0 01474    03133 SUB +0 40200 0 01501    03134 STO +0 60100 0 01474                                 
                   WHENEVER .NOT. BRIEF .AND. (TEM .G. 0 .THEN. CHNG)               186  LM00254
                1       , PRNT.(CHST, CHEND)                                        186  LM00255
 03135 ZET +0 52000 0 00102    03136 TRA +0 02000 0 03143    03137 CLA +0 50000 0 01474    03140 SUB +0 40200 0 01500   
 03141 TZE +0 10000 0 03143    03142 TPL +0 12000 0 03150    03143 ZET +0 52000 0 00077    03144 TRA +0 02000 0 03150   
 03145 TSX +0 07400 4 00032    03146 TXH +3 00000 0 00103    03147 TXH +3 00000 0 00101                                 
                   CANON.(LINE, LENGTH, BUFSIZ)                                     187  LM00256
 03150 TSX +0 07400 4 00003    03151 TXH +3 00000 0 01452    03152 TXH +3 00000 0 00700    03153 TXH +3 00000 0 00100   
                   WHENEVER TEM .G. 0                                               188  LM00257
 03154 CLA +0 50000 0 01474    03155 SUB +0 40200 0 01500    03156 TZE +0 10000 0 03171    03157 TMI -0 12000 0 03171   
                     WRITE.(LINE, LENGTH)                                           189  LM00258
 03160 TSX +0 07400 4 00027    03161 TXH +3 00000 0 01452    03162 TXH +3 00000 0 00700                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              190  LM00259
 03163 TSX +0 07400 4 00017    03164 TXH +3 00000 0 01452    03165 TXH +3 00000 0 00100    03166 TXH +3 00000 0 00044   
 03167 STO +0 60100 0 00700                                                                                             
                     TRANSFER TO SHIFT                                              191  LM00260
 03170 TRA +0 02000 0 00063                                                                                             
                   END OF CONDITIONAL                                               192  LM00261
                 OR WHENEVER CWD .E. $ SPLIT$ .OR. CWD .E. $     S$                 193  LM00265
 03171 TRA +0 02000 0 03415    03172 CLA +0 50000 0 00106    03173 SUB +0 40200 0 01547    03174 TZE +0 10000 0 03200   
 03175 CLA +0 50000 0 00106    03176 SUB +0 40200 0 01553    03177 TNZ -0 10000 0 03261                                 
                   TOPNAM = GET.(0)                                                 194  LM00266
 03200 TSX +0 07400 4 00031    03201 TXH +3 00000 0 01500    03202 STO +0 60100 0 01475                                 
                   WHENEVER TOPNAM .E. $ $, TRANSFER TO NONAME                      195  LM00267
 03203 CLA +0 50000 0 01475    03204 SUB +0 40200 0 01546    03205 TNZ -0 10000 0 03207    03206 TRA +0 02000 0 00056   
                   WHENEVER TOPNAM .E. OLDNAM .AND. FSTPAS                          196  LM00268
 03207 NZT -0 52000 0 00671    03210 TRA +0 02000 0 03227    03211 CLA +0 50000 0 01475    03212 SUB +0 40200 0 01461   
 03213 TNZ -0 10000 0 03227                                                                                             
      NEWNM          PRINT COMMENT $0P1L1E1A1S1E0 1U1S1E0 1A1N1O1T1H1E1R0 1N1A      197  LM00269
                11M1E0.$                                                            197  LM00270
 03214 TSX +0 07400 4 00015    03215     +0 00000 0 00010    03216     +0 04701 4 30125    03217     +0 12101 6 20125   
 03220     +0 06001 6 40162    03221     +0 12500 6 00121    03222     +0 14501 4 60163    03223     +0 13001 2 50151   
 03224     +0 06001 4 50121    03225     +0 14401 2 50033                                                               
                     TRANSFER TO NXRQ                                               198  LM00271
 03226 TRA +0 02000 0 00060                                                                                             
                   END OF CONDITIONAL                                               199  LM00272
                   SECNAM = GET.(0)                                                 200  LM00273
 03227 TSX +0 07400 4 00031    03230 TXH +3 00000 0 01500    03231 STO +0 60100 0 01470                                 
                 WHENEVER SECNAM .E. $ $, SECNAM = OLDSEC                           201  LM00274
 03232 CLA +0 50000 0 01470    03233 SUB +0 40200 0 01546    03234 TNZ -0 10000 0 03237    03235 CLA +0 50000 0 01462   
 03236 STO +0 60100 0 01470                                                                                             
                   CLRNAM.(TOPNAM, SECNAM, NEWNM, 1B)                               202  LM00275
 03237 TSX +0 07400 4 00006    03240 TXH +3 00000 0 01475    03241 TXH +3 00000 0 01470    03242 TXH +3 00000 0 00054   
 03243 TXH +3 00000 0 01501                                                                                             
                   CLOSEW.                                                          203  LM00276
 03244 TSX +0 07400 4 00005                                                                                             
                   RENAME.(IN, FI, TOPNAM, SECNAM)                                  204  LM00277
 03245 TSX +0 07400 4 00020    03246 TXH +3 00000 0 00674    03247 TXH +3 00000 0 00666    03250 TXH +3 00000 0 01475   
 03251 TXH +3 00000 0 01470                                                                                             
                   ASSIGN.(IN, FI)                                                  205  LM00278
 03252 TSX +0 07400 4 00000    03253 TXH +3 00000 0 00674    03254 TXH +3 00000 0 00666                                 
                   OLDNAM = FENCE                                                   206  LM00279
 03255 CLA +0 50000 0 00665    03256 STO +0 60100 0 01461                                                               
                   TRANSFER TO TOPLP                                                207  LM00280
 03257 TRA +0 02000 0 00070                                                                                             
                 OR WHENEVER CWD .E. $  QUIT$ .OR. CWD .E. $     Q$                 208  LM00282
 03260 TRA +0 02000 0 03415    03261 CLA +0 50000 0 00106    03262 SUB +0 40200 0 01544    03263 TZE +0 10000 0 03267   
 03264 CLA +0 50000 0 00106    03265 SUB +0 40200 0 01524    03266 TNZ -0 10000 0 03303                                 
                   ENDRD.                                                           209  LM00283
 03267 TSX +0 07400 4 00011                                                                                             
                   CLOSEW.                                                          210  LM00284
 03270 TSX +0 07400 4 00005                                                                                             
                   DELFIL.(IN1, FI, DLQ1)                                           211  LM00285
 03271 TSX +0 07400 4 00010    03272 TXH +3 00000 0 00673    03273 TXH +3 00000 0 00666    03274 TXH +3 00000 0 00041   
      DLQ1         DELFIL.(IN, FI, DLQ2)                                            212  LM00286
 03275 TSX +0 07400 4 00010    03276 TXH +3 00000 0 00674    03277 TXH +3 00000 0 00666    03300 TXH +3 00000 0 00042   
      DLQ2         TRANSFER TO CHN                                                  213  LM00287
 03301 TRA +0 02000 0 00036                                                                                             
                 OR WHENEVER CWD .E. $  FILE$                                       214  LM00289
 03302 TRA +0 02000 0 03415    03303 CLA +0 50000 0 00106    03304 SUB +0 40200 0 01520    03305 TNZ -0 10000 0 03403   
                   PRINAM = GET.(0)                                                 215  LM00290
 03306 TSX +0 07400 4 00031    03307 TXH +3 00000 0 01500    03310 STO +0 60100 0 01463                                 
                   CLRSW = 1B                                                       216  LM00291
 03311 CLA +0 50000 0 01501    03312 STO +0 60100 0 00104                                                               
                   WHENEVER PRINAM .E. $ $                                          217  LM00292
 03313 CLA +0 50000 0 01463    03314 SUB +0 40200 0 01546    03315 TNZ -0 10000 0 03325                                 
                     PRINAM = OLDNAM                                                218  LM00293
 03316 CLA +0 50000 0 01461    03317 STO +0 60100 0 01463                                                               
                     SECNAM = OLDSEC                                                219  LM00294
 03320 CLA +0 50000 0 01462    03321 STO +0 60100 0 01470                                                               
                     CLRSW = 0B                                                     220  LM00295
 03322 CLA +0 50000 0 01500    03323 STO +0 60100 0 00104                                                               
                   OTHERWISE                                                        221  LM00296
 03324 TRA +0 02000 0 03335                                                                                             
                     SECNAM = GET.(0)                                               222  LM00297
 03325 TSX +0 07400 4 00031    03326 TXH +3 00000 0 01500    03327 STO +0 60100 0 01470                                 
                     WHENEVER SECNAM .E. $ $                                        223  LM00298
 03330 CLA +0 50000 0 01470    03331 SUB +0 40200 0 01546    03332 TNZ -0 10000 0 03335                                 
                       SECNAM = OLDSEC                                              224  LM00299
 03333 CLA +0 50000 0 01462    03334 STO +0 60100 0 01470                                                               
                     END OF CONDITIONAL                                             225  LM00300
                   END OF CONDITIONAL                                               226  LM00301
                   WHENEVER PRINAM .E. FENCE                                        227  LM00302
 03335 CLA +0 50000 0 01463    03336 SUB +0 40200 0 00665    03337 TNZ -0 10000 0 03352                                 
      NONAME         PRINT COMMENT $0N1O0 1F1I1L1E0 1N1A1M1E0 1G1I1V1E1N0.$         228  LM00303
 03340 TSX +0 07400 4 00015    03341     +0 00000 0 00007    03342     +0 04501 4 60060    03343     +0 12601 3 10143   
 03344     +0 12500 6 00145    03345     +0 12101 4 40125    03346     +0 06001 2 70131    03347     +0 16501 2 50145   
 03350     +0 03360 6 06060                                                                                             
                     TRANSFER TO NXRQ                                               229  LM00304
 03351 TRA +0 02000 0 00060                                                                                             
                   END OF CONDITIONAL                                               230  LM00305
                   WRITE.(LINE, LENGTH)                                             231  LM00306
 03352 TSX +0 07400 4 00027    03353 TXH +3 00000 0 01452    03354 TXH +3 00000 0 00700                                 
                   LENGTH = 0                                                       232  LM00307
 03355 CLA +0 50000 0 01500    03356 STO +0 60100 0 00700                                                               
                   WHENEVER OK, BOTTOM.                                             233  LM00308
 03357 NZT -0 52000 0 01460    03360 TRA +0 02000 0 03362    03361 TSX +0 07400 4 00002                                 
                   CLRNAM.(PRINAM, SECNAM, NEWNM, CLRSW)                            234  LM00309
 03362 TSX +0 07400 4 00006    03363 TXH +3 00000 0 01463    03364 TXH +3 00000 0 01470    03365 TXH +3 00000 0 00054   
 03366 TXH +3 00000 0 00104                                                                                             
                   CLOSEW.                                                          235  LM00310
 03367 TSX +0 07400 4 00005                                                                                             
                   DELFIL.(IN1, FI, DL1)                                            236  LM00311
 03370 TSX +0 07400 4 00010    03371 TXH +3 00000 0 00673    03372 TXH +3 00000 0 00666    03373 TXH +3 00000 0 00037   
      DL1          RENAME.(IN, FI, PRINAM, SECNAM)                                  237  LM00312
 03374 TSX +0 07400 4 00020    03375 TXH +3 00000 0 00674    03376 TXH +3 00000 0 00666    03377 TXH +3 00000 0 01463   
 03400 TXH +3 00000 0 01470                                                                                             
      CHN          EXIT.                                                            238  LM00313
 03401 TSX +0 07400 4 00012                                                                                             
                 OTHERWISE                                                          239  LM00315
 03402 TRA +0 02000 0 03415                                                                                             
                   PRINT COMMENT $0N1O1T0 1A0 1R1E1Q1U1E1S1T0:$                     240  LM00316
 03403 TSX +0 07400 4 00015    03404     +0 00000 0 00005    03405     +0 04501 4 60163    03406     +0 06001 2 10060   
 03407     +0 15101 2 50150    03410     +0 16401 2 50162    03411     +0 16300 3 56060                                 
                   TYPOUT.(EDLIN, COUNT)                                            241  LM00317
 03412 TSX +0 07400 4 00025    03413 TXH +3 00000 0 00663    03414 TXH +3 00000 0 00105                                 
                 END OF CONDITIONAL                                                 242  LM00319
                 TRANSFER TO NXRQ                                                   243  LM00320
 03415 TRA +0 02000 0 00060                                                                                             
      EOF        PRINTCOMMENT $0E1N1D0 1O1F0 1F1I1L1E0 1R1E1A1C1H1E1D0 1B1Y0:$      244  LM00322
 03416 TSX +0 07400 4 00015    03417     +0 00000 0 00010    03420     +0 02501 4 50124    03421     +0 06001 4 60126   
 03422     +0 06001 2 60131    03423     +0 14301 2 50060    03424     +0 15101 2 50121    03425     +0 12301 3 00125   
 03426     +0 12400 6 00122    03427     +0 17000 3 56060                                                               
                 TYPOUT.(EDLIN, COUNT)                                              245  LM00323
 03430 TSX +0 07400 4 00025    03431 TXH +3 00000 0 00663    03432 TXH +3 00000 0 00105                                 
                 LENGTH = 0                                                         246  LM00324
 03433 CLA +0 50000 0 01500    03434 STO +0 60100 0 00700                                                               
                 OK = 0B                                                            247  LM00325
 03435 CLA +0 50000 0 01500    03436 STO +0 60100 0 01460                                                               
                 TRANSFER TO NXRQ                                                   248  LM00326
 03437 TRA +0 02000 0 00060                                                                                             
                 INTERNAL FUNCTION                                                  249  LM00334
 03440 TRA +0 02000 0 03510                                                                                             
                 ENTRY TO CLSOUT.                                                   250  LM00335
 03441 TRA +0 02000 0 03444    00030 TTR +0 02100 0 03442    03442 SXA +0 63400 2 03477    03443 TSX +0 07400 2 03477   
                   CLOSEW.                                                          251  LM00336
 03444 TSX +0 07400 4 00005                                                                                             
                   DELFIL.(IN1, FI, DL2)                                            252  LM00337
 03445 TSX +0 07400 4 00010    03446 TXH +3 00000 0 00673    03447 TXH +3 00000 0 00666    03450 TXH +3 00000 0 00040   
      DL2          CHFILE.(IN, FI, -0, IN1)                                         253  LM00338
 03451 CLS +0 50200 0 01500    03452 STO +0 60100 0 03507    03453 TSX +0 07400 4 00004    03454 TXH +3 00000 0 00674   
 03455 TXH +3 00000 0 00666    03456 TXH +3 00000 0 03507    03457 TXH +3 00000 0 00673                                 
                   SEEK.(IN1, FI, CHN)                                              254  LM00339
 03460 TSX +0 07400 4 00021    03461 TXH +3 00000 0 00673    03462 TXH +3 00000 0 00666    03463 TXH +3 00000 0 00036   
                   ASSIGN.(IN, FI)                                                  255  LM00340
 03464 TSX +0 07400 4 00000    03465 TXH +3 00000 0 00674    03466 TXH +3 00000 0 00666                                 
                   OK = 1B                                                          256  LM00341
 03467 CLA +0 50000 0 01501    03470 STO +0 60100 0 01460                                                               
                   LENGTH = 0                                                       257  LM00342
 03471 CLA +0 50000 0 01500    03472 STO +0 60100 0 00700                                                               
                   FSTPAS = 0B                                                      258  LM00343
 03473 CLA +0 50000 0 01500    03474 STO +0 60100 0 00671                                                               
                   FUNCTION RETURN                                                  259  LM00344
 03475 TRA +0 02000 0 03503                                                                                             
                 END OF FUNCTION                                                    260  LM00345
 03476 TSX +0 07400 4 00012    03477 TXH +3 00000 0 00000    03500 SXD -0 63400 1 03477    03501 SXA +0 63400 4 03503   
 03502 TRA +0 02000 2 00001    03503 AXT +0 77400 4 00000    03504 LXA +0 53400 2 03477    03505 LXD -0 53400 1 03477   
 03506 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  261  LM00349
 03510 TRA +0 02000 0 03616                                                                                             
                 ENTRY TO GET.                                                      262  LM00350
 03511 TRA +0 02000 0 03514    00031 TTR +0 02100 0 03512    03512 SXA +0 63400 2 03605    03513 TSX +0 07400 2 03605   
                   WORD = $ $                                                       263  LM00351
 03514 CLA +0 50000 0 01546    03515 STO +0 60100 0 01477                                                               
      SCANLP       THROUGH SCANLP, FOR EDCT = EDCT, 1,                              264  LM00352
                1  (EDLIN(EDCT+1).NE.BLANK) .OR. (EDCT+1.GE.COUNT)                  264  LM00353
 03516 CLA +0 50000 0 00111    03517 STO +0 60100 0 00111    03520 TRA +0 02000 0 03524    03521 CLA +0 50000 0 00111   
 03522 ADD +0 40000 0 01501    03523 STO +0 60100 0 00111    03524 CLA +0 50000 0 00111    03525 ADD +0 40000 0 01501   
 03526 SUB +0 40200 0 00105    03527 TZE +0 10000 0 03540    03530 TPL +0 12000 0 03540    03531 CLA +0 50000 0 00111   
 03532 ADD +0 40000 0 01501    03533 PAX +0 73400 1 00000    03534 CLA +0 50000 1 00663    03535 SUB +0 40200 0 00076   
 03536 TNZ -0 10000 0 03540    03537 TRA +0 02000 0 03521                                                               
       GTLP        EDCT = EDCT + 1                                                  265  LM00354
 03540 CLA +0 50000 0 00111    03541 ADD +0 40000 0 01501    03542 STO +0 60100 0 00111                                 
                   WHENEVER EDLIN(EDCT) .E. BLANK, FUNCTION RETURN WORD             266  LM00355
 03543 LXA +0 53400 1 00111    03544 CLA +0 50000 1 00663    03545 SUB +0 40200 0 00076    03546 TNZ -0 10000 0 03551   
 03547 CLA +0 50000 0 01477    03550 TRA +0 02000 0 03611                                                               
                   WHENEVER EDLIN(EDCT) .E. TAB .OR. EDCT .GE. COUNT                267  LM00356
 03551 CLA +0 50000 0 00111    03552 SUB +0 40200 0 00105    03553 TZE +0 10000 0 03561    03554 TPL +0 12000 0 03561   
 03555 LXA +0 53400 1 00111    03556 CLA +0 50000 1 00663    03557 SUB +0 40200 0 01473    03560 TNZ -0 10000 0 03566   
                     EDCT = EDCT - 1                                                268  LM00357
 03561 CLA +0 50000 0 00111    03562 SUB +0 40200 0 01501    03563 STO +0 60100 0 00111                                 
                     FUNCTION RETURN WORD                                           269  LM00358
 03564 CLA +0 50000 0 01477    03565 TRA +0 02000 0 03611                                                               
                   END OF CONDITIONAL                                               270  LM00359
                   WORD = (WORD .LS. 6) .V. HOL.(EDLIN(EDCT))                       271  LM00360
 03566 CLA +0 50000 0 00111    03567 SUB +0 40200 0 03570    03570 TXH +3 00000 0 00663    03571 STA +0 62100 0 03573   
 03572 TSX +0 07400 4 00014    03573 TXH +3 00000 0 00000    03574 STO +0 60100 0 03615    03575 CAL -0 50000 0 01504   
 03576 STA +0 62100 0 03600    03577 CAL -0 50000 0 01477    03600 ALS +0 76700 0 00000    03601 ORA -0 50100 0 03615   
 03602 SLW +0 60200 0 01477                                                                                             
                   TRANSFER TO GTLP                                                 272  LM00361
 03603 TRA +0 02000 0 00047                                                                                             
                 END OF FUNCTION                                                    273  LM00362
 03604 TSX +0 07400 4 00012    03605 TXH +3 00000 0 00000    03606 SXD -0 63400 1 03605    03607 SXA +0 63400 4 03611   
 03610 TRA +0 02000 2 00001    03611 AXT +0 77400 4 00000    03612 LXA +0 53400 2 03605    03613 LXD -0 53400 1 03605   
 03614 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION(STAR, EN)                                        274  LM00366
 03616 TRA +0 02000 0 03707                                                                                             
                 ENTRY TO PRNT.                                                     275  LM00367
 03617 TRA +0 02000 0 03622    00032 TTR +0 02100 0 03620    03620 SXA +0 63400 2 03666    03621 TSX +0 07400 2 03666   
                   TYPOUT.(LINE, STAR-1)                                            276  LM00368
 03622 CLA +0 50000 0 00024    03623 SUB +0 40200 0 01501    03624 STO +0 60100 0 03706    03625 TSX +0 07400 4 00025   
 03626 TXH +3 00000 0 01452    03627 TXH +3 00000 0 03706                                                               
                   TYPOUT.(REDS, 1)                                                 277  LM00369
 03630 TSX +0 07400 4 00025    03631 TXH +3 00000 0 01466    03632 TXH +3 00000 0 01501                                 
                   TYPOUT.(LINE(STAR-1), EN-STAR+1)                                 278  LM00370
 03633 CLA +0 50000 0 00024    03634 SUB +0 40200 0 00024    03635 ADD +0 40000 0 01501    03636 STO +0 60100 0 03706   
 03637 CLA +0 50000 0 00024    03640 SUB +0 40200 0 01501    03641 SUB +0 40200 0 03642    03642 TXH +3 00000 0 01452   
 03643 STA +0 62100 0 03645    03644 TSX +0 07400 4 00025    03645 TXH +3 00000 0 00000    03646 TXH +3 00000 0 03706   
                   TYPOUT.(BLACKS, 1)                                               279  LM00371
 03647 TSX +0 07400 4 00025    03650 TXH +3 00000 0 00075    03651 TXH +3 00000 0 01501                                 
                   TYPOUT.(LINE(EN), LENGTH-EN)                                     280  LM00372
 03652 CLA +0 50000 0 00700    03653 SUB +0 40200 0 00024    03654 STO +0 60100 0 03706    03655 CLA +0 50000 0 00024   
 03656 SUB +0 40200 0 03657    03657 TXH +3 00000 0 01452    03660 STA +0 62100 0 03662    03661 TSX +0 07400 4 00025   
 03662 TXH +3 00000 0 00000    03663 TXH +3 00000 0 03706                                                               
                   FUNCTION RETURN                                                  281  LM00373
 03664 TRA +0 02000 0 03702                                                                                             
                 END OF FUNCTION                                                    282  LM00374
 03665 TSX +0 07400 4 00012    03666 TXH +3 00000 0 00000    03667 SXD -0 63400 1 03666    03670 SXA +0 63400 4 03702   
 03671 CLA +0 50000 4 00001    03672 STA +0 62100 0 03622    03673 STA +0 62100 0 03634    03674 STA +0 62100 0 03637   
 03675 CLA +0 50000 4 00002    03676 STA +0 62100 0 03633    03677 STA +0 62100 0 03653    03700 STA +0 62100 0 03655   
 03701 TRA +0 02000 2 00001    03702 AXT +0 77400 4 00000    03703 LXA +0 53400 2 03666    03704 LXD -0 53400 1 03666   
 03705 TRA +0 02000 4 00001                                                                                             
                 END OF PROGRAM                                                     283  LM00376
 03707 TSX +0 07400 4 00012                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  BINVAL   MAD            02/08/68    1747.9
-                 
                 ..  ROUTINE TO RETURN INITIAL VALUES TO EDITOR FOR                                    LM00001    
                 ..  EDITING ASCII FILES.                                                              LM00002    
                                                                                                       LM00003    
                  EXTERNAL FUNCTION(BLANK, TAB, DEFALT, MCHNG, REDS, BLACKS)                      *001 LM00004    
                  NORMAL MODE IS INTEGER                                                          *002 LM00005    
                  ENTRY TO GETVAL.                                                                *003 LM00006    
                    BLANK  = 060K                                                                 *004 LM00007    
                    TAB    = 072K                                                                 *005 LM00008    
                    DEFALT = $ SAVED$                                                             *006 LM00009    
                    MCHNG  = 055K                                                                 *007 LM00010    
                    REDS   = 133K                                                                 *008 LM00011    
                    BLACKS = 132K                                                                 *009 LM00012    
                    FUNCTION RETURN                                                               *010 LM00013    
                  END OF FUNCTION                                                                 *011 LM00014    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00061 TRANSFER VECTOR LENGTH  00001 PROGRAM BEGINS    00012
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      GETVAL 00013   0                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00006 +000000000132     00007 +000000000133     00003 +000000000055     00011 -206221652524     00005 +000000000072    
 00004 +000000000060     00002 +000000000001     00010 +233000000000                                                    
0PROGRAM    
                 EXTERNAL FUNCTION(BLANK, TAB, DEFALT, MCHNG, REDS, BLACKS)         001  LM00004
                 NORMAL MODE IS INTEGER                                             002  LM00005
                 ENTRY TO GETVAL.                                                   003  LM00006
 00012 TRA +0 02000 0 00015    00013 SXA +0 63400 2 00033    00014 TSX +0 07400 2 00033                                 
                   BLANK  = 060K                                                    004  LM00007
 00015 CLA +0 50000 0 00004    00016 STO +0 60100 0 00024                                                               
                   TAB    = 072K                                                    005  LM00008
 00017 CLA +0 50000 0 00005    00020 STO +0 60100 0 00024                                                               
                   DEFALT = $ SAVED$                                                006  LM00009
 00021 CLA +0 50000 0 00011    00022 STO +0 60100 0 00024                                                               
                   MCHNG  = 055K                                                    007  LM00010
 00023 CLA +0 50000 0 00003    00024 STO +0 60100 0 00024                                                               
                   REDS   = 133K                                                    008  LM00011
 00025 CLA +0 50000 0 00007    00026 STO +0 60100 0 00024                                                               
                   BLACKS = 132K                                                    009  LM00012
 00027 CLA +0 50000 0 00006    00030 STO +0 60100 0 00024                                                               
                   FUNCTION RETURN                                                  010  LM00013
 00031 TRA +0 02000 0 00053                                                                                             
                 END OF FUNCTION                                                    011  LM00014
 00032 TSX +0 07400 4 00000    00033 TXH +3 00000 0 00000    00034 SXD -0 63400 1 00033    00035 SXA +0 63400 4 00053   
 00036 CLA +0 50000 4 00001    00037 STA +0 62100 0 00016    00040 CLA +0 50000 4 00002    00041 STA +0 62100 0 00020   
 00042 CLA +0 50000 4 00003    00043 STA +0 62100 0 00022    00044 CLA +0 50000 4 00004    00045 STA +0 62100 0 00024   
 00046 CLA +0 50000 4 00005    00047 STA +0 62100 0 00026    00050 CLA +0 50000 4 00006    00051 STA +0 62100 0 00030   
 00052 TRA +0 02000 2 00001    00053 AXT +0 77400 4 00000    00054 LXA +0 53400 2 00033    00055 LXD -0 53400 1 00033   
 00056 TRA +0 02000 4 00001                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  BINCON   MAD            02/08/68    1746.6
-                 
                 ..  CHARACTER PACKING AND UNPACKING ROUTINE FOR BINARY FILES.                         LM00001    
                 ..  J. H. SALTZER, JANUARY, 1966.                                                     LM00002    
                                                                                                       LM00003    
                  EXTERNAL FUNCTION(LINE, BUFSIZ, EOF)                                            *001 LM00004    
                  NORMAL MODE IS INTEGER                                                          *002 LM00005    
                  VECTOR VALUES RETURN = 55K                                                      *003 LM00006    
                  STATEMENT LABEL EOF                                                             *004 LM00007    
                                                                                                       LM00008    
                  ENTRY TO READ.                                                                  *005 LM00009    
                    X = RDWORD.(EOF)                                                              *006 LM00010    
                    THROUGH GIVE, FOR I = 12, -1, I .L. 1                                         *007 LM00011    
                      LINE(I) = X.A.7K                                                            *008 LM00012    
      GIVE            X = X.RS.3                                                                  *009 LM00013    
                    LINE(13) = RETURN                                                             *010 LM00014    
                    FUNCTION RETURN 13                                                            *011 LM00015    
                                                                                                       LM00016    
                  ENTRY TO WRITE.                                                                 *012 LM00017    
                    WHENEVER BUFSIZ .LE. 1, FUNCTION RETURN                                       *013 LM00018    
                    BUFSIZ = BUFSIZ - 1                                                           *014 LM00019    
                    X = 0                                                                         *015 LM00020    
                    THROUGH PACK, FOR I = 1, 1, I .G. BUFSIZ                                      *016 LM00021    
      PACK            X = (X .LS. 3) .V. (LINE(I) .A. 7K)                                         *017 LM00022    
                    WRWORD.(X)                                                                    *018 LM00023    
                    FUNCTION RETURN                                                               *019 LM00024    
                                                                                                       LM00025    
                  ENTRY TO CLOSEW.                                                                *020 LM00026    
                    FILE.                                                                         *021 LM00027    
                    FUNCTION RETURN                                                               *022 LM00028    
                                                                                                       LM00029    
                  ENTRY TO BOTTOM.                                                                *023 LM00030    
      LP            WRWORD.(RDWORD.(DONE))                                                        *024 LM00031    
                    TRANSFER TO LP                                                                *025 LM00032    
                                                                                                       LM00033    
      DONE          FUNCTION RETURN                                                               *026 LM00034    
                                                                                                       LM00035    
                  END OF FUNCTION                                                                 *027 LM00036    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00174 TRANSFER VECTOR LENGTH  00004 PROGRAM BEGINS    00021
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      BOTTOM 00132   0        CLOSEW 00125   0        WRITE  00060   0        READ   00022   0                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      DONE   00005   4        I      00007   1        PACK   00004   4        RETURN 00010 A 1        X      00011   1  
      GIVE   00004   4        LP     00006   4                                                                          
0FUNCTION DICTIONARY    
      EXIT   00000   1        FILE   00001   1        RDWORD 00002   1        WRWORD 00003   1                          
0ABSOLUTE CONSTANTS     
 00012 +000000000000     00017 +000000000015     00014 +000000000003     00015 +000000000007     00016 +000000000014    
 00013 +000000000001     00020 +233000000000                                                                            
0STATEMENT DICTIONARY   
 00005 TXL -300143000142       00006 TXL -300141000134                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION(LINE, BUFSIZ, EOF)                               001  LM00004
                 NORMAL MODE IS INTEGER                                             002  LM00005
                 VECTOR VALUES RETURN = 55K                                         003  LM00006
 00010     +0 00000 0 00055                                                                                             
                 STATEMENT LABEL EOF                                                004  LM00007
                 ENTRY TO READ.                                                     005  LM00009
 00021 TRA +0 02000 0 00024    00022 SXA +0 63400 2 00145    00023 TSX +0 07400 2 00145                                 
                   X = RDWORD.(EOF)                                                 006  LM00010
 00024 TSX +0 07400 4 00002    00025 TXH +3 00000 0 00024    00026 STO +0 60100 0 00011                                 
                   THROUGH GIVE, FOR I = 12, -1, I .L. 1                            007  LM00011
 00027 CLA +0 50000 0 00016    00030 STO +0 60100 0 00007    00031 TRA +0 02000 0 00035    00032 CLS +0 50200 0 00013   
 00033 ADD +0 40000 0 00007    00034 STO +0 60100 0 00007    00035 CLA +0 50000 0 00007    00036 SUB +0 40200 0 00013   
 00037 TZE +0 10000 0 00041    00040 TMI -0 12000 0 00053                                                               
                     LINE(I) = X.A.7K                                               008  LM00012
 00041 CAL -0 50000 0 00011    00042 ANA -0 32000 0 00015    00043 LXA +0 53400 1 00007    00044 SLW +0 60200 1 00024   
      GIVE           X = X.RS.3                                                     009  LM00013
 00045 CAL -0 50000 0 00014    00046 STA +0 62100 0 00050    00047 CAL -0 50000 0 00011    00050 LGR -0 76500 0 00000   
 00051 SLW +0 60200 0 00011    00052 TRA +0 02000 0 00032                                                               
                   LINE(13) = RETURN                                                010  LM00014
 00053 CLA +0 50000 0 00010    00054 STO +0 60100 0 00007                                                               
                   FUNCTION RETURN 13                                               011  LM00015
 00055 CLA +0 50000 0 00017    00056 TRA +0 02000 0 00165                                                               
                 ENTRY TO WRITE.                                                    012  LM00017
 00057 TRA +0 02000 0 00062    00060 SXA +0 63400 2 00145    00061 TSX +0 07400 2 00145                                 
                   WHENEVER BUFSIZ .LE. 1, FUNCTION RETURN                          013  LM00018
 00062 CLA +0 50000 0 00024    00063 SUB +0 40200 0 00013    00064 TZE +0 10000 0 00066    00065 TPL +0 12000 0 00067   
 00066 TRA +0 02000 0 00165                                                                                             
                   BUFSIZ = BUFSIZ - 1                                              014  LM00019
 00067 CLA +0 50000 0 00024    00070 SUB +0 40200 0 00013    00071 STO +0 60100 0 00024                                 
                   X = 0                                                            015  LM00020
 00072 CLA +0 50000 0 00012    00073 STO +0 60100 0 00011                                                               
                   THROUGH PACK, FOR I = 1, 1, I .G. BUFSIZ                         016  LM00021
 00074 CLA +0 50000 0 00013    00075 STO +0 60100 0 00007    00076 TRA +0 02000 0 00102    00077 CLA +0 50000 0 00007   
 00100 ADD +0 40000 0 00013    00101 STO +0 60100 0 00007    00102 CLA +0 50000 0 00007    00103 SUB +0 40200 0 00024   
 00104 TZE +0 10000 0 00106    00105 TPL +0 12000 0 00121                                                               
      PACK           X = (X .LS. 3) .V. (LINE(I) .A. 7K)                            017  LM00022
 00106 LXA +0 53400 1 00007    00107 CAL -0 50000 1 00024    00110 ANA -0 32000 0 00015    00111 SLW +0 60200 0 00171   
 00112 CAL -0 50000 0 00014    00113 STA +0 62100 0 00115    00114 CAL -0 50000 0 00011    00115 ALS +0 76700 0 00000   
 00116 ORA -0 50100 0 00171    00117 SLW +0 60200 0 00011    00120 TRA +0 02000 0 00077                                 
                   WRWORD.(X)                                                       018  LM00023
 00121 TSX +0 07400 4 00003    00122 TXH +3 00000 0 00011                                                               
                   FUNCTION RETURN                                                  019  LM00024
 00123 TRA +0 02000 0 00165                                                                                             
                 ENTRY TO CLOSEW.                                                   020  LM00026
 00124 TRA +0 02000 0 00127    00125 SXA +0 63400 2 00145    00126 TSX +0 07400 2 00145                                 
                   FILE.                                                            021  LM00027
 00127 TSX +0 07400 4 00001                                                                                             
                   FUNCTION RETURN                                                  022  LM00028
 00130 TRA +0 02000 0 00165                                                                                             
                 ENTRY TO BOTTOM.                                                   023  LM00030
 00131 TRA +0 02000 0 00134    00132 SXA +0 63400 2 00145    00133 TSX +0 07400 2 00145                                 
      LP           WRWORD.(RDWORD.(DONE))                                           024  LM00031
 00134 TSX +0 07400 4 00002    00135 TXH +3 00000 0 00005    00136 STO +0 60100 0 00171    00137 TSX +0 07400 4 00003   
 00140 TXH +3 00000 0 00171                                                                                             
                   TRANSFER TO LP                                                   025  LM00032
 00141 TRA +0 02000 0 00006                                                                                             
      DONE         FUNCTION RETURN                                                  026  LM00034
 00142 TRA +0 02000 0 00165                                                                                             
                 END OF FUNCTION                                                    027  LM00036
 00143 TSX +0 07400 4 00000    00144 PZE +0 00000 0 00015    00145 TXH +3 00000 0 00000    00146 SXD -0 63400 1 00145   
 00147 SXA +0 63400 4 00165    00150 CLA +0 50000 4 00001    00151 STA +0 62100 0 00044    00152 STA +0 62100 0 00107   
 00153 SUB +0 40200 0 00144    00154 STA +0 62100 0 00054    00155 CLA +0 50000 4 00002    00156 STA +0 62100 0 00062   
 00157 STA +0 62100 0 00067    00160 STA +0 62100 0 00071    00161 STA +0 62100 0 00103    00162 CLA +0 50000 4 00003   
 00163 STO +0 60100 0 00025    00164 TRA +0 02000 2 00001    00165 AXT +0 77400 4 00000    00166 LXA +0 53400 2 00145   
 00167 LXD -0 53400 1 00145    00170 TRA +0 02000 4 00001                                                               
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 1     
                  
                              *      NOTE, INDEX REGISTERS SIX AND SEVEN MUST BE PRESERVED
                              *      BY THE CALLING PROGRAM.
                              *      THIS ROUTINE MAKES TYPEWRITER COMMENTS, BUT DOES NOT 
                              *      AFFECT THE BCD-FULL MODE SWITCH.   
                              *     
                              *           J. H. SALTZER, JANUARY, 1965. 
                              *     
                       00015         ENTRY   ASSIGN        TO ASSIGN A NAME TO THE WRITE FILE.  
                       00057         ENTRY   WRWORD        TO ADD A WORD TO THE FILE.     
                       00100         ENTRY   FILE          TO CLOSE THE FILE. 
                              *     
                       00160         ENTRY   SEEK          TO OPEN A FILE FOR READING.    
                       00242         ENTRY   RDWORD        TO GET A WORD FROM FILE. 
                       00275         ENTRY   ENDRD         TO CLOSE THE FILE. 
                              *     
                                     EXTERN  GETBUF,SETBCD,SETFUL,WRFLX,WRFLXA
                                     EXTERN  OPEN,WRWAIT,RDWAIT,CLOSE,FSTATE,BUFFER 
                              *     
                              *      ASSIGN.($NAME1$,$NAME2$)     
                              *     
                  
        TRANSFER VECTOR 
      00000  272563226426     GETBUF
      00001  622563222324     SETBCD
      00002  622563266443     SETFUL
      00003  665126436760     WRFLX 
      00004  665126436721     WRFLXA
      00005  464725456060     OPEN  
      00006  665166213163     WRWAIT
      00007  512466213163     RDWAIT
      00010  234346622560     CLOSE 
      00011  266263216325     FSTATE
      00012  226426262551     BUFFER
                  
            LINKAGE DIRECTOR  
      00013  000000000000     
      00014  216262312745     
                  
      00015 -0500 60 4 00001  ASSIGN CAL*    1,4           OPEN FILE, GET FILE NAME.
      00016  0602 00 0 00304         SLW     OUTNAM        ..     
      00017 -0500 60 4 00002         CAL*    2,4           ..     
      00020  0602 00 0 00305         SLW     OUTNAM+1      ..     
      00021  0634 00 4 00041         SXA     OPX4,4        SAVE LINKAGE.
      00022  0020 00 0 00023   OSW   TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                    *******************
      00023 -0500 00 0 00315         CAL     WBFSZ         GET AN OUTPUT BUFFER FROM SUPERVISOR.
      00024  0074 00 4 00000         TSX     GETBUF,4      ..     
      00025  0621 00 0 00071         STA     WCALL         SAVE LOCATION OF BUFFER. 
      00026  0621 00 0 00113         STA     CLCALL        TO CLOSE OUT FILE. 
      00027  0361 00 0 00315         ACL     WBFSZ         ADD LENGTH, TO FORM END ADDRESS.     
      00030  0621 00 0 00060         STA     WRNM          INSERT IN INSERTER.
      00031 -0500 00 0 00313         CAL     TRKSZ         GET A DISK TRACK BUFFER. 
      00032  0074 00 4 00000         TSX     GETBUF,4      ..     
      00033  0621 00 0 00055         STA     BFCALL        SET UP BUFFER CALLER.    
      00034 -0625 00 0 00022         STL     OSW           RESET ONE-TIME SWITCH.   
                              *                                                    *******************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 2     
                  
      00035  0774 00 4 00040         AXT     OPOK,4        SET QUOTA EXHAUSTED ERROR RETURN.    
      00036  0634 00 4 00143         SXA     WRTN,4        ..     
      00037  0074 00 3 00043         TSX     OPN,3         OPEN THE FILE.     
      00040  0774 00 7 00330  OPOK   AXT     WBFLTH,7      SET UP STORAGE COUNT.    
      00041  0774 00 4 00000   OPX4  AXT     --,4          RESTORE LINKAGE.   
      00042  0020 00 4 00003         TRA     3,4           RETURN.
                              *     
      00043  0074 00 4 00005  OPN    TSX     OPEN,4        OPEN FILE.   
 TD   00044  3 00000 0 00324         TXH     =HW           FOR WRITING. 
 TD   00045  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00046  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00047  3 00000 0 00156         TXH     MODE          MAKE IT PERMANENT IF POSSIBLE. 
 TD   00050  3 00000 0 00320         TXH     =2            PUT IT ON THE DISK.
 TD   00051  3 00000 0 00127  OPERR  TXH     OEXH          IN CASE NO MORE QUOTA AVAILABLE.     
      00052  0074 00 4 00012         TSX     BUFFER,4      ASSIGN A BUFFER FOR THE FILE.  
 TD   00053  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00054  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00055  3 00660 0 00000  BFCALL TXH     --,,TRKLTH    ..     
      00056  0020 00 3 00001         TRA     1,3           RETURN TO CALLER.  
                              *     
                              *     
                              *      ENTRY TO ADD A WORD TO FILE. 
                              *              WRWORD.(WORD)  
                              *     
      00057 -0500 60 4 00001  WRWORD CAL*    1,4           GET WORD TO BE ADDED.    
      00060  0602 00 7 00000   WRNM  SLW     --,7          ADD WORD TO OUTPUT BUFFER.     
      00061  2 00001 7 00077         TIX     RETURN,7,1    COUNT AND CHECK FOR FULL BUFFER.     
      00062  0634 00 4 00076   FULL  SXA     FULX4,4       BUFFER FULL, WRITE IT OUT.     
      00063  0774 00 4 00065         AXT     WRAGN,4       SET UP EXHAUSTED RETURN ADDRESS.     
      00064  0634 00 4 00143         SXA     WRTN,4        ..     
      00065  0074 00 4 00006  WRAGN  TSX     WRWAIT,4      GIVE BUFFER TO SUPERVISOR.     
 TD   00066  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00067  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00070  3 00000 0 00316         TXH     =0            ..     
      00071  3 00330 0 00000  WCALL  TXH     --,,WBFLTH    ..     
 TD   00072  3 00000 0 00321         TXH     =-0           IGNORE POSSIBLE EOF.     
 TD   00073  3 00000 0 00321         TXH     =-0           ..     
 TD   00074  3 00000 0 00124  WRERR  TXH     WEXH          ALLOW ERROR RETURN.
      00075  0774 00 7 00330         AXT     WBFLTH,7      RESET BUFFER POINTER.    
      00076  0774 00 4 00000   FULX4 AXT     --,4          RESTORE LINKAGE.   
      00077  0020 00 4 00002  RETURN TRA     2,4           RETURN TO CALLER.  
                              *     
                              *      FILE.     NO ARGUMENTS.
                              *     
      00100  0634 00 4 00122  FILE   SXA     CL4,4         ENTRY TO CLOSE OUT FILE. 
      00101 -0634 00 7 00103         SXD     *+2,7         FORM COUNT OF WORDS SINCE
      00102  0774 00 7 00330         AXT     WBFLTH,7      LAST BUFFER WAS WRITTEN. 
      00103 -2 00000 7 00117         TNX     NOWR,7,--     IF ZERO, SKIP FINAL WRITE CALL.
      00104 -0634 00 7 00113         SXD     CLCALL,7      NON-ZERO, SET UP WRITE CALL.   
      00105  0774 00 4 00107         AXT     FWR,4         SET UP RETURN ADDRESS FOR EXHAUSTED CASE.  
      00106  0634 00 4 00143         SXA     WRTN,4        ..     
      00107  0074 00 4 00006  FWR    TSX     WRWAIT,4      WRITE OUT PARTIAL BUFFER.
 TD   00110  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00111  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00112  3 00000 0 00316         TXH     =0            ..     
      00113  3 00000 0 00000  CLCALL TXH     --,,--        ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 3     
                  
 TD   00114  3 00000 0 00321         TXH     =-0           IGNORE EOF RETURN. 
 TD   00115  3 00000 0 00321         TXH     =-0           ..     
 TD   00116  3 00000 0 00124         TXH     WEXH          ALLOW ERROR RETURN.
      00117  0074 00 4 00010  NOWR   TSX     CLOSE,4       CLOSE OUT THE FILE.
 TD   00120  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00121  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00122  0774 00 4 00000   CL4   AXT     --,4          RESTORE LINKAGE.   
      00123  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00124  0074 00 4 00010  WEXH   TSX     CLOSE,4       TRACK QUOTA EXHAUSTED, CLOSE FILE.   
 TD   00125  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00126  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00127  0074 00 4 00001  OEXH   TSX     SETBCD,4      ENTRY FROM OPEN ERROR, COMMENT.
      00130  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00131  0074 00 4 00003         TSX     WRFLX,4       ..     
      00132  0 00011 0 00144                 ERMESS,,9
      00133  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00134  0074 00 4 00002         TSX     SETFUL,4      YES, RESET INDICATOR.    
      00135 -0500 00 0 00317         CAL     =1            SWITCH TO TEMPORARY MODE.
      00136  0601 00 0 00156         STO     MODE          ..     
      00137 -0500 00 0 00155         CAL     NOP           BLOCK FUTURE ERROR RETURN.     
      00140  0602 00 0 00051         SLW     OPERR         ..     
      00141  0602 00 0 00074         SLW     WRERR    
      00142  0074 00 3 00043         TSX     OPN,3         NOW, OPEN IT AGAIN.
      00143  0020 00 0 00000  WRTN   TRA     --            ALL FIXED, RETURN TO MAIN STREAM.    
                              *     
      00144  635121234260     ERMESS BCI     9,TRACK QUOTA EXHAUSTED, TEMPORARY MODE WILL BE USED.    
      00145  506446632160     
      00146  256730216462     
      00147  632524736063     
      00150  254447465121     
      00151  517060444624     
      00152  256066314343     
      00153  602225606462     
      00154  252433606060     
      00155  0761 00 0 00000   NOP   NOP                   INSTRUCTION TO BLOCK ERROR RETURN.   
      00156  0 00000 0 00000  MODE           0             START IN PERMANENT MODE. 
      00157  0 00000 0 00000  MODSW                        TEMP STORAGE FOR 6-BIT,12-BIT INDICATOR.   
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     
                              *      SEEK.($NAME1$, $NAME2$, ERRET)     
                              *      ERROR RETURN MEANS FILE NOT FOUND. 
                              *     
      00160 -0500 60 4 00001   SEEK  CAL*    1,4           GET FILE NAME.     
      00161  0602 00 0 00306         SLW     INNAM         ..     
      00162 -0500 60 4 00002         CAL*    2,4           ..     
      00163  0602 00 0 00307         SLW     INNAM+1       ..     
      00164  0634 00 4 00222         SXA     SKX4,4        SAVE LINKAGE.
      00165  0020 00 0 00166   SKSW  TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                  *********************
      00166 -0500 00 0 00314         CAL     RBFSZ         GET A BUFFER FROM SUPERVISOR.  
      00167  0074 00 4 00000         TSX     GETBUF,4      ..     
      00170  0621 00 0 00257         STA     ECALL         STORE BUFFER LOCATION.   
      00171  0621 00 0 00217         STA     STCALL        ..     
      00172 -0625 00 0 00165         STL     SKSW          RESET ONE-TIME SWITCH.   
                              *                                                  *********************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 4     
                  
      00173 -0500 00 0 00217         CAL     STCALL        SET UP PICKUP INSTRUCTION FOR INDEXING.    
      00174  0361 00 0 00314         ACL     RBFSZ         ..     
      00175  0621 00 0 00242         STA     RDWORD        ..     
      00176  0074 00 4 00011         TSX     FSTATE,4      MAKE SURE FILE IS THERE. 
 TD   00177  3 00000 0 00306         TXH     INNAM         ..     
 TD   00200  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00201  3 00000 0 00321         TXH     =-0           DON'T WANT DATA.   
 TD   00202  3 00000 0 00224         TXH     NOTFN         ERROR RETURN MEANS FILE NOT THERE.   
      00203  0074 00 4 00005         TSX     OPEN,4        OPEN THE FILE FOR READING.     
 TD   00204  3 00000 0 00322         TXH     =HR           ..     
 TD   00205  3 00000 0 00306         TXH     INNAM         ..     
 TD   00206  3 00000 0 00307         TXH     INNAM+1       ..     
      00207  0774 00 6 00660         AXT     RBFLTH,6      SET UP BUFFER COUNTER.   
      00210  0774 00 4 00222         AXT     SKX4,4        SET END OF FILE RETURN.  
      00211  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00212  0600 00 0 00312         STZ     EOFR          CLEAR END OF FILE SWITCH.
      00213  0074 00 4 00007         TSX     RDWAIT,4      GET INITIAL BUFFER LOAD. 
 TD   00214  3 00000 0 00306         TXH     INNAM         ..     
 TD   00215  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00216  3 00000 0 00316         TXH     =0            ..     
      00217  3 00660 0 00000  STCALL TXH     --,,RBFLTH    ..     
 TD   00220  3 00000 0 00265         TXH     EOF           END OF FILE RETURN.
 TD   00221  3 00000 0 00311         TXH     EOFCT         ..     
      00222  0774 00 4 00000   SKX4  AXT     --,4          RESTORE LINKAGE.   
      00223  0020 00 4 00004         TRA     4,4           RETURN TO CALLER.  
                              *     
      00224  0074 00 4 00001  NOTFN  TSX     SETBCD,4      FILE NOT FOUND, COMMENT. 
      00225  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00226  0074 00 4 00004         TSX     WRFLXA,4      START UP COMMENT.  
      00227  0 00001 0 00323                 =H FILE ,,1   ..     
      00230  0074 00 4 00004         TSX     WRFLXA,4      INSERT FILE NAME.  
      00231  0 00002 0 00306                 INNAM,,2      ..     
      00232  0074 00 4 00003         TSX     WRFLX,4       END OF COMMENT.    
      00233  0 00002 0 00240                 ECM,,2        ..     
      00234  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00235  0074 00 4 00002         TSX     SETFUL,4      YES, RESET MODE.   
      00236  0534 00 4 00222         LXA     SKX4,4        GIVE ERROR RETURN. 
      00237  0020 60 4 00003         TRA*    3,4           ..     
                              *     
      00240  604546636026     ECM    BCI     2, NOT FOUND.  
      00241  466445243360     
                              *     
                              *      ENTRY TO OBTAIN WORD FROM FILE.    
                              *              WORD = RDWORD.(EOF)  
                              *     
      00242  0500 00 6 00000  RDWORD CLA     --,6          GET WORD FROM INPUT BUFFER.    
      00243  2 00001 6 00264         TIX     GOBACK,6,1    INDEX, AND CHECK FOR EMPTY BUFFER.   
      00244  0520 00 0 00312         ZET     EOFR          BUFFER EMPTY, HAS END OF FILE OCCURRED.    
      00245  0020 60 4 00001         TRA*    1,4           YES, GIVE EOF RETURN.    
      00246  0601 00 0 00310         STO     RTEMP         NO, SAVE WORD AND GET SOME MORE DATA.
      00247  0634 00 4 00263         SXA     EMPX4,4       SAVE LINKAGE, ALSO.
      00250  0774 00 6 00660         AXT     RBFLTH,6      RESET BUFFER POINTER.    
      00251  0774 00 4 00262         AXT     EMPGT,4       SET END OF FILE RETURN.  
      00252  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00253  0074 00 4 00007         TSX     RDWAIT,4      GET ANOTHER BUFFER LOAD OF DATA.     
 TD   00254  3 00000 0 00306         TXH     INNAM         ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 5     
                  
 TD   00255  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00256  3 00000 0 00316         TXH     =0            ..     
      00257  3 00660 0 00000  ECALL  TXH     --,,RBFLTH    ..     
 TD   00260  3 00000 0 00265         TXH     EOF           ..     
 TD   00261  3 00000 0 00311         TXH     EOFCT         ..     
      00262  0500 00 0 00310   EMPGT CLA     RTEMP         RESTORE WORD FOR THIS CALL.    
      00263  0774 00 4 00000   EMPX4 AXT     --,4          RESTORE LINKAGE.   
      00264  0020 00 4 00002  GOBACK TRA     2,4           RETURN TO CALLER.  
                              *     
      00265 -0625 00 0 00312  EOF    STL     EOFR          END OF FILE REACHED, SET SWITCH.     
      00266 -0500 00 0 00311         CAL     EOFCT         GET COUNT OF WORDS LEFT. 
      00267  0361 00 0 00317         ACL     =1            BUGGER WORD COUNT. 
      00270  0734 00 6 00000         PAX     0,6           SET WORD COUNTER.  
      00271  0361 00 0 00257         ACL     ECALL         ADJUST PICKUP INSTRUCTION.     
      00272  0621 00 0 00242         STA     RDWORD        ..     
      00273  0074 00 4 00275         TSX     ENDRD,4       TURN OFF FILE.     
      00274  0020 00 0 00000  EOFRTN TRA     --            RETURN TO END OF RDFILE CALLING SEQUENCE.  
                              *     
                              *      ENTRY TO CLOSE INPUT FILE.   
                              *      ENDRD.     
                              *     
      00275  0634 00 4 00302  ENDRD  SXA     ENDX4,4       SAVE LINKAGE.
      00276  0074 00 4 00010         TSX     CLOSE,4       CLOSE FILE.  
 TD   00277  3 00000 0 00306         TXH     INNAM         ..     
 TD   00300  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00301  3 00000 0 00302         TXH     *+1           IGNORE ANY ERROR RETURN. 
      00302  0774 00 4 00000  ENDX4  AXT     --,4          RESTORE LINKAGE.   
      00303  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00304  545454545454     OUTNAM BCI     2,************  NAME OF OUTPUT FILE.   
      00305  545454545454     
      00306  545454545454      INNAM BCI     2,************  NAME OF INPUT FILE.    
      00307  545454545454     
      00310  0 00000 0 00000   RTEMP                       STORAGE FOR WORD.  
      00311  0 00000 0 00000  EOFCT                        STORAGE FOR END OF FILE COUNTER.     
      00312  0 00000 0 00312   EOFR          *             SWITCH FOR END OF FILE MET.    
                              *     
                       00660  TRKLTH EQU     432           DISK TRACK LENGTH. 
      00313  0 00000 0 00660   TRKSZ         TRKLTH        WORD CONTAINING TRACK LENGTH.  
                       00660  RBFLTH EQU     TRKLTH        READ BUFFER LENGTH.
                       00330  WBFLTH EQU     TRKLTH/2      WRITE BUFFER LENGTH.     
      00314  0 00000 0 00660  RBFSZ          RBFLTH        WORD CONTAINING READ BUFFER SIZE.    
      00315  0 00000 0 00330  WBFSZ          WBFLTH        WORD CONTAINING WRITE BUFFER SIZE.   
                              *     
                                     END  
                  
        LITERALS  
      00316  000000000000     
      00317  000000000001     
      00320  000000000002     
      00321  400000000000     
      00322  516060606060     
      00323  602631432560     
      00324  666060606060     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        325 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        122    CL4   100
        240    ECM   233
        265    EOF   220,  260
        107    FWR   105
        155    NOP   137
         43    OPN    37,  142
         22    OSW    34
        312   EOFR   212,  244,  265
        100   FILE     0
         62   FULL      
        156   MODE    47,  136
        117   NOWR   103
        127   OEXH    51
          5   OPEN    43,  203
         40   OPOK    35
         41   OPX4    21
        160   SEEK     0
        165   SKSW   172
        222   SKX4   164,  210,  236
        124   WEXH    74,  116
         60   WRNM    30
        143   WRTN    36,   64,  106
         10  CLOSE   117,  124,  276
        257  ECALL   170,  271
        262  EMPGT   251
        263  EMPX4   247
        275  ENDRD     0,  273
        302  ENDX4   275
        311  EOFCT   221,  261,  266
         76  FULX4    62
        306  INNAM   161,  163,  177,  200,  205,  206,  214,  215,  231,  254,  255,  277,  300
        157  MODSW   130,  133,  225,  234
        224  NOTFN   202
         51  OPERR   140
        314  RBFSZ   166,  174
        310  RTEMP   246,  262
        313  TRKSZ    31
        315  WBFSZ    23,   27
         71  WCALL    25
         65  WRAGN    63
         74  WRERR   141
          3  WRFLX   131,  232
         15 ASSIGN     0
         55 BFCALL    33
         12 BUFFER    52
        113 CLCALL    26,  104
        274 EOFRTN   211,  252
        144 ERMESS   132
         11 FSTATE   176
          0 GETBUF    24,   32,  167
        264 GOBACK   243
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        304 OUTNAM    16,   20,   45,   46,   53,   54,   66,   67,  110,  111,  120,  121,  125,  126
        660 RBFLTH   207,  217,  250,  257,  314
          7 RDWAIT   213,  253
        242 RDWORD     0,  175,  272
         77 RETURN    61
          1 SETBCD   127,  224
          2 SETFUL   134,  235
        217 STCALL   171,  173
        660 TRKLTH    55,  313,  314
        330 WBFLTH    40,   71,   75,  102,  314,  315
          4 WRFLXA   226,  230
          6 WRWAIT    65,  107
         57 WRWORD     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 1     
                  
                              *      USAGE  CLRNAM.(NAME1, NAME2, CANT, SW)   
                              *        FILE NAME1 NAME2 WILL BE CHECKED FOR AND     
                              *        DELETED IF POSSIBLE.  IF SW
                              *        IS TRUE, USER WILL BE ASKED BEFORE DELETING  
                              *        THE OLD FILE.  
                              *     
                       00012         ENTRY   CLRNAM        CLEAR FILE NAME.   
                              *     
                                     EXTERN  SETFUL,SETBCD,WRFLX,WRFLXA,RDFLXA
                                     EXTERN  FSTATE,CHFILE,DELFIL 
                              *     
                  
        TRANSFER VECTOR 
      00000  622563266443     SETFUL
      00001  622563222324     SETBCD
      00002  665126436760     WRFLX 
      00003  665126436721     WRFLXA
      00004  512426436721     RDFLXA
      00005  266263216325     FSTATE
      00006  233026314325     CHFILE
      00007  242543263143     DELFIL
                  
            LINKAGE DIRECTOR  
      00010  000000000000     
      00011  234351452144     
                  
      00012 -0500 60 4 00001  CLRNAM CAL*    1,4           GET FILE NAME.     
      00013  0602 00 0 00121         SLW     N1            ..     
      00014 -0500 60 4 00002         CAL*    2,4           SECONDARY NAME.    
      00015  0602 00 0 00122         SLW     N2            ..     
      00016  0634 00 4 00147         SXA     SV4,4         SAVE LINKAGE.
      00017  0074 00 4 00005         TSX     FSTATE,4      CHECK STATE OF FILE.     
 TD   00020  3 00000 0 00121         TXH     N1            NAME   
 TD   00021  3 00000 0 00122         TXH     N2            NAME   
      00022  3 00010 0 00156         TXH     DATA,,8       FILE STATE   
 TD   00023  3 00000 0 00112         TXH     FSTERR        IN CASE OF ERROR   
 TD   00024  3 00000 0 00155         TXH     ERNO          GATHER ERROR NUMBER.     
      00025  0441 00 0 00157         LDI     MODE          CHECK MODE OF FILE.
      00026 -0054 00  400000         LFT     400000        IS MODE NEGATIVE.  
      00027  0020 00 0 00100         TRA     LINKED        YES, FILE IS LINKED.     
      00030  0600 00 0 00154         STZ     PROTEC        ASSUME NOT PROTECTED.    
      00031  0056 00  000100         RNT     100           CHECK PROTECTED BIT.     
      00032  0020 00 0 00035         TRA     CKASK         NOT PROTECTED, SHOULD WE ASK ANYWAY. 
      00033 -0625 00 0 00154         STL     PROTEC        PROTECTED, SET SWITCH FOR LONG COMMENT.    
      00034  0020 00 0 00040         TRA     ASK           GO ASK PERMISSION TO DELETE FILE.    
      00035  0534 00 4 00147  CKASK  LXA     SV4,4         GET LINKAGE TO ASK SWITCH.     
      00036 -0520 60 4 00004         NZT*    4,4           SHOULD WE ASK PERMISSION ANYWAY.     
      00037  0020 00 0 00065         TRA     DELETE        NO, GO DELETE FILE.
      00040  0074 00 4 00000  ASK    TSX     SETFUL,4      SET CHARACTER MODE SWITCH.     
      00041  0074 00 4 00003         TSX     WRFLXA,4      BEGIN THE COMMENT. 
      00042  0 00003 0 00116                 MI,,3         ..     
      00043  0074 00 4 00001         TSX     SETBCD,4      SWITCH TO BCD FOR FILE NAME.   
      00044  0074 00 4 00003         TSX     WRFLXA,4      WRITE OUT FILE NAME.     
      00045  0 00002 0 00121                 N1,,2    
      00046  0074 00 4 00000         TSX     SETFUL,4      BACK TO FULL MODE. 
      00047 -0520 00 0 00154         NZT     PROTEC        SHOULD WE CLAIM IT IS PROTECTED.     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 2     
                  
      00050  0020 00 0 00053         TRA     SKPPCM        NO, SKIP THAT PART.
      00051  0074 00 4 00003         TSX     WRFLXA,4      YES, ANNOUNC PROTECTED PART.   
      00052  0 00006 0 00123                 ISPTC,,6      ..     
      00053  0074 00 4 00003  SKPPCM TSX     WRFLXA,4      NOW ASK FOR PERMISSION.  
      00054  0 00012 0 00131                 DOYOU,,10     ..     
      00055  0074 00 4 00001         TSX     SETBCD,4      SWITCH SO ERASE WORKS.   
      00056  0074 00 4 00004         TSX     RDFLXA,4 
      00057  0 00001 0 00150                 IN,,1         GET ONE WORD.
      00060  0074 00 4 00000         TSX     SETFUL,4      RESTORE MODE.
      00061 -0500 00 0 00150         CAL     IN            GET THAT WORD.     
      00062  0771 00 0 00022         ARS     18            GET FIRST THREE CHARACTERS.    
      00063  0322 00 0 00170         ERA     =H000YES      DID HE SAY YES.    
      00064 -0100 00 0 00076         TNZ     ERTN          NO, GIVE ERROR RETURN.   
      00065  0074 00 4 00006  DELETE TSX     CHFILE,4      GOODY, WE CAN DELETE IT. 
 TD   00066  3 00000 0 00121         TXH     N1            MAKE SURE IT IS DELETEABLE.    
 TD   00067  3 00000 0 00122         TXH     N2            ..     
 TD   00070  3 00000 0 00166         TXH     =1            BY CHANGING ITS MODE TO TEMPORARY.   
      00071  0074 00 4 00007         TSX     DELFIL,4      DELETE THE SILLY THING.  
 TD   00072  3 00000 0 00121         TXH     N1            ..     
 TD   00073  3 00000 0 00122         TXH     N2            ..     
      00074  0534 00 4 00147  RTN    LXA     SV4,4         RESTORE THE LINKAGE.     
      00075  0020 00 4 00005         TRA     5,4           RETURN TO CALLER.  
                              *     
      00076  0534 00 4 00147  ERTN   LXA     SV4,4         ERROR RETURN, FILE CANNOT BE DELETED.
      00077  0020 60 4 00003         TRA*    3,4           RETURN THROUGH ERROR RETURN.   
                              *     
      00100  0074 00 4 00000  LINKED TSX     SETFUL,4      FILE IS LINKED, COMMENT AND GIVE UP. 
      00101  0074 00 4 00003         TSX     WRFLXA,4      START THE COMMENT. 
      00102  0 00003 0 00116                 MI,,3         ..     
      00103  0074 00 4 00001         TSX     SETBCD,4      SWITCH MODE FOR FILE NAME.     
      00104  0074 00 4 00003         TSX     WRFLXA,4      TYPE FILE NAME.    
      00105  0 00002 0 00121                 N1,,2         ..     
      00106  0074 00 4 00000         TSX     SETFUL,4      SWITCH FOR REST OF COMMENT.    
      00107  0074 00 4 00002         TSX     WRFLX,4       END THIS PART WITH A C.R.
      00110  0 00004 0 00143                 ISLNK,,4      ..     
      00111  0020 00 0 00076         TRA     ERTN          NOW GIVE AN ERROR RETURN.
                              *     
      00112  0500 00 0 00155  FSTERR CLA     ERNO          ERROR RETURN FROM FSTATE, FIND OUT WHY.    
      00113  0402 00 0 00167         SUB     =3            RETURN 3 MEANS FILE NOT FOUND. 
      00114 -0100 00 0 00100         TNZ     LINKED        WRONG ERROR RETURN, ASSUME LINKED.   
      00115  0020 00 0 00074         TRA     RTN           FILE NOT FOUND, NAME IS OK.    
                              *     
                              *                            DATA, COMMENTS, ETC.     
                              *     
      00116  004601430124     MI     BCI     3,0O1L1D0 1F1I1L1E0  
      00117  006001260131     
      00120  014301250060     
                              *     
      00121  0 00000 0 00000  N1                           STORAGE FOR FILE NAME.   
      00122  0 00000 0 00000  N2                           SECONDARY NAME.    
                              *     
      00123  006001310162     ISPTC  BCI     1,0 1I1S 
      00124 +006001330057            OCT     006001330057  BLANK, RED SHIFT, NULL.  
      00125  004700510046            BCI     3,0P0R0O0T0E0C0T0E0D 
      00126  006300250023     
      00127  006300250024     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 3     
                  
      00130 +013200330060            OCT     013200330060  BLACK SHIFT, PERIOD, BLANK.    
      00131  006000400040     DOYOU  BCI     9,0 0-0-0D1O0 1Y1O1U0 1W1I1S1H0 1T1O0 1D1E1L1E1T1E0 1I1T 
      00132  002401460060     
      00133  017001460164     
      00134  006001660131     
      00135  016201300060     
      00136  016301460060     
      00137  012401250143     
      00140  012501630125     
      00141  006001310163     
      00142 +015600600060            OCT     015600600060  TERMINAL QUESTION MARK.  
                              *     
      00143  006001310162     ISLNK  BCI     4,0 1I1S0 1L1I1N1K1E1D0.   
      00144  006001430131     
      00145  014501420125     
      00146  012400336060     
                              *     
      00147  0 00000 0 00000  SV4                          STORAGE FOR CALLING LINKAGE.   
      00150                   IN     BSS     4             FOR INPUT WORD.    
      00154  0 00000 0 00000  PROTEC                       SWITCH FOR PROTECTED FILE.     
      00155  0 00000 0 00000  ERNO                         STORAGE FOR ERROR NUMBER.
      00156                   DATA   BSS     8             FOR STATE INFORMATION.   
                       00161  DEVICE EQU     DATA+3   
                       00157  MODE   EQU     DATA+1   
                              *     
                                     END  
                  
        LITERALS  
      00166  000000000001     
      00167  000000000003     
      00170  000000702562     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        171 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        150     IN    57,   61
        116     MI    42,  102
        121     N1    13,   20,   45,   66,   72,  105
        122     N2    15,   21,   67,   73
         40    ASK    34
         74    RTN   115
        147    SV4    16,   35,   74,   76
        156   DATA    22,  166
        155   ERNO    24,  112
         76   ERTN    64,  111
        157   MODE    25,  166
         35  CKASK    32
        131  DOYOU    54
        143  ISLNK   110
        123  ISPTC    52
          2  WRFLX   107
          6 CHFILE    65
         12 CLRNAM     0
         65 DELETE    37
          7 DELFIL    71
        161 DEVICE   166
          5 FSTATE    17
        112 FSTERR    23
        100 LINKED    27,  114
        154 PROTEC    30,   33,   47
          4 RDFLXA    56
          1 SETBCD    43,   55,  103
          0 SETFUL    40,   46,   60,  100,  106
         53 SKPPCM    50
          3 WRFLXA    41,   44,   51,   53,  101,  104
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 1     
                  
                              *        J. H. SALTZER, MAY, 1965.  
                              *     
                       00004         ENTRY   RENAME        RENAME FILE. 
                              *     
                                     EXTERN CHFILE,WRFLX    
                              *     
                  
        TRANSFER VECTOR 
      00000  233026314325     CHFILE
      00001  665126436760     WRFLX 
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  512545214425     
                  
      00004  0500 60 4 00001  RENAME CLA*    1,4           GET FILE NAMES.    
      00005  0601 00 0 00071         STO     OLD1          ..     
      00006  0500 60 4 00002         CLA*    2,4           ..     
      00007  0601 00 0 00072         STO     OLD2          ..     
      00010  0601 00 0 00074         STO     NEW2          ASSUME NO CHANGE IN SECONDARY NAMES. 
      00011  0500 60 4 00003         CLA*    3,4           ..     
      00012  0601 00 0 00073         STO     NEW1          ..     
      00013  0560 00 4 00004         LDQ     4,4           CHECK FOR TXH
      00014  0500 00 0 00076         CLA     =O300000000000 ..    
      00015  0040 00 0 00020         TLQ     SKPN2         NO TXH, SECONDARY NAME UNCHANGED.    
      00016  0500 60 4 00004         CLA*    4,4           TXH, CHANGE SECONDARY NAME.    
      00017  0601 00 0 00074         STO     NEW2          ..     
      00020  0634 00 4 00036  SKPN2  SXA     RETURN,4      SAVE LINKAGE.
      00021  0074 00 4 00000         TSX     CHFILE,4      CHANGE NAME WITHOUT CHANGING MODE.   
 TD   00022  3 00000 0 00071         TXH     OLD1          ..     
 TD   00023  3 00000 0 00072         TXH     OLD2          ..     
 TD   00024  3 00000 0 00077         TXH     =-0           MODE UNCHANGED.    
 TD   00025  3 00000 0 00073         TXH     NEW1          ..     
 TD   00026  3 00000 0 00074         TXH     NEW2          ..     
      00027  0074 00 4 00000         TSX     CHFILE,4      CHANGE MODE WITHOUT CHANGING NAME.   
 TD   00030  3 00000 0 00073         TXH     NEW1          ..     
 TD   00031  3 00000 0 00074         TXH     NEW2          ..     
 TD   00032  3 00000 0 00075         TXH     =0            PERMANENT MODE.    
 TD   00033  3 00000 0 00077         TXH     =-0           NAME UNCHANGED.    
 TD   00034  3 00000 0 00077         TXH     =-0           ..     
 TD   00035  3 00000 0 00040         TXH     CHERR         IN CASE MODE UNCHANGEABLE.     
      00036  0774 00 4 00000  RETURN AXT     --,4          RESTORE LINKAGE.   
      00037  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
      00040  0074 00 4 00001  CHERR  TSX     WRFLX,4       ASSUME TRACK QUOTA EXHAUSTED, AND COMMENT. 
      00041  0 00010 0 00045                 TRKQUO,,8     ..     
      00042  0074 00 4 00001         TSX     WRFLX,4       MENTION THAT NEW FILE IS TEMP MODE.  
      00043  0 00013 0 00055                 TMPMOD,,11    ....   
      00044  0020 00 0 00036         TRA     RETURN        EXIT.  
                              *     
                              *              COMMENTS AND STORAGE.
                              *     
      00045  006301510121     TRKQUO BCI     8,0T1R1A1C1K0 1Q1U1O1T1A0 0E0X0H0A0U0S0T0E0D0.     
      00046  012301420060     
      00047  015001640146     
      00050  016301210060     
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 2     
                  
      00051  002500670030     
      00052  002100640062     
      00053  006300250024     
      00054  003360606060     
                              *     
      00055  007001460164     TMPMOD BCI     5,0Y1O1U1R0 1N1E1W0 1F1I1L1E0 1I 
      00056  015100600145     
      00057  012501660060     
      00060  012601310143     
      00061  012500600131     
      00062 +016200600133            OCT     016200600133  S, BLANK, RED SHIFT.     
      00063  006300250044            BCI     3,0T0E0M0P0O0R0A0R0Y 
      00064  004700460051     
      00065  002100510070     
      00066 +013200600144            OCT     013200600144  BLACK SHIFT, BLANK, SMALL M.   
      00067  014601240125            BCI     2,1O1D1E0.     
      00070  003360606060     
                              *     
      00071  0 00000 0 00000  OLD1  
      00072  0 00000 0 00000  OLD2  
      00073  0 00000 0 00000  NEW1  
      00074  0 00000 0 00000  NEW2  
                              *     
                                     END  
                  
        LITERALS  
      00075  000000000000     
      00076  300000000000     
      00077  400000000000     
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        100 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         73   NEW1    12,   25,   30
         74   NEW2    10,   17,   26,   31
         71   OLD1     5,   22
         72   OLD2     7,   23
         40  CHERR    35
         20  SKPN2    15
          1  WRFLX    40,   42
          0 CHFILE    21,   27
          4 RENAME     0
         36 RETURN    20,   44
         55 TMPMOD    43
         45 TRKQUO    41
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1     MAD PROGRAM LISTING ... ... ...                 FILE    6TYP   MAD            02/08/68    1745.8
-                 
                 ..  TYPEWRITER INPUT CHARACTER CONTROL ROUTINE.                                       LM00001    
                 ..  USAGE. . .   COUNT = TYPEIN.(BUFFER, BUFSIZ, ERASE, KILL)                         LM00002    
                           J. H. SALTZER, JANUARY, 1965.                                               LM00003    
                                                                                                       LM00004    
                  EXTERNAL FUNCTION(LINE, BUFSIZ)                                                 *001 LM00005    
                                                                                                       LM00006    
                  NORMAL MODE IS INTEGER                                                          *002 LM00007    
                  VECTOR VALUES E1 = 0137K                                                        *003 LM00008    
                  VECTOR VALUES K1 = 0156K                                                        *004 LM00009    
                  VECTOR VALUES NBITS = 12                                                        *005 LM00010    
                  VECTOR VALUES NULL = 0057K                                                      *006 LM00011    
                  VECTOR VALUES ERASE = 0504K                                                     *007 LM00012    
                  VECTOR VALUES KILL = 0506K                                                      *008 LM00013    
                  VECTOR VALUES RETURN = 0055K                                                    *009 LM00014    
                  VECTOR VALUES WRDSIZ = 36                                                       *010 LM00015    
                  VECTOR VALUES CHMASK = 7777K                                                    *011 LM00016    
                                                                                                       LM00017    
                  ENTRY TO SETERS.                                                                *012 LM00018    
                    ERASE = LINE                                                                  *013 LM00019    
                    FUNCTION RETURN                                                               *014 LM00020    
                                                                                                       LM00021    
                  ENTRY TO SETKIL.                                                                *015 LM00022    
                    KILL = LINE                                                                   *016 LM00023    
                    FUNCTION RETURN                                                               *017 LM00024    
                                                                                                       LM00025    
                  ENTRY TO CANON.                                                                 *018 LM00026    
                    FUNCTION RETURN                                                               *019 LM00027    
                                                                                                       LM00028    
                  ENTRY TO TYPEIN.                                                                *020 LM00029    
                    SIZE = 0                                                                      *021 LM00030    
                    TYLINE.                                                                       *022 LM00031    
       LOOP         WORD = TYWORD.(0)                                                             *023 LM00032    
                    THROUGH DISECT, FOR I = WRDSIZ-NBITS,-NBITS, I .L. 0                          *024 LM00033    
                      CHAR = (WORD.RS.I) .A. CHMASK                                               *025 LM00034    
                      WHENEVER CHAR .E. ERASE .OR. CHAR .E. E1                                    *026 LM00035    
                        WHENEVER SIZE .G. 0, SIZE = SIZE - 1                                      *027 LM00036    
                      OR WHENEVER CHAR .E. KILL .OR. CHAR .E. K1                                  *028 LM00037    
                        SIZE = 0                                                                  *029 LM00038    
                      OR WHENEVER CHAR .E. RETURN .OR. CHAR.RS.6 .E. RETURN                       *030 LM00039    
                        TRANSFER TO UND                                                           *031 LM00040    
                      OR WHENEVER CHAR .A. 0400K .E. 0                                            *032 LM00041    
                        SIZE = SIZE + 1                                                           *033 LM00042    
                        LINE(SIZE) = CHAR.A.77K                                                   *034 LM00043    
                      END OF CONDITIONAL                                                          *035 LM00044    
       DISECT         WHENEVER SIZE .GE. BUFSIZ, TRANSFER TO UND                                  *036 LM00045    
                    TRANSFER TO LOOP                                                              *037 LM00046    
      UND           SIZE = SIZE + 1                                                               *038 LM00047    
                    LINE(SIZE) = RETURN                                                           *039 LM00048    
                    FUNCTION RETURN SIZE                                                          *040 LM00049    
                                                                                                       LM00050    
                 ..     TYPEWRITER OUTPUT CHARACTER CONTROL ROUTINE.                                   LM00051    
                 ..     USAGE. . .    TYPOUT.(LINE, LENGTH)                                            LM00052    
                                                                                                       LM00053    
                  ENTRY TO TYPOUT.                                                                *041 LM00054    
                    K = 0                                                                         *042 LM00055    
                    SETFUL.                                                                       *043 LM00056    
                    THROUGH PRLOOP, FOR J = 1, 1, J .G. BUFSIZ                                    *044 LM00057    
                      TWORD = (TWORD .LS. NBITS) .V. LINE(J)                                      *045 LM00058    
                      K = K + 1                                                                   *046 LM00059    
                      WHENEVER K .GE. WRDSIZ/NBITS                                                *047 LM00060    
                        K = 0                                                                     *048 LM00061    
                        PRWORD.(TWORD)                                                            *049 LM00062    
       PRLOOP         END OF CONDITIONAL                                                          *050 LM00063    
                    THROUGH NULPK, FOR K = K, 1, K.GE. WRDSIZ/NBITS                               *051 LM00064    
       NULPK          TWORD = (TWORD.LS.NBITS) .V. NULL                                           *052 LM00065    
                    PRWORD.(TWORD)                                                                *053 LM00066    
                    PRBUFF.                                                                       *054 LM00067    
                    FUNCTION RETURN                                                               *055 LM00068    
                                                                                                       LM00069    
                  ENTRY TO HOL.                                                                   *056 LM00070    
                    FUNCTION RETURN LINE .A. 77K                                                  *057 LM00071    
                                                                                                       LM00072    
                  END OF FUNCTION                                                                 *058 LM00073    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00351 TRANSFER VECTOR LENGTH  00006 PROGRAM BEGINS    00037
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      HOL    00314   0        TYPOUT 00212   0        TYPEIN 00060   0        CANON  00054   0        SETKIL 00046   0  
      SETERS 00040   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      CHAR   00011   1        I      00015   1        K      00021   1        NULPK  00006   4        TWORD  00026   1  
      CHMASK 00012 A 1        J      00016   1        LOOP   00007   4        PRLOOP 00006   4        UND    00010   4  
      DISECT 00006   4        K1     00017 A 1        NBITS  00022 A 1        RETURN 00024 A 1        WORD   00027   1  
      E1     00013 A 1        KILL   00020 A 1        NULL   00023 A 1        SIZE   00025   1        WRDSIZ 00030 A 1  
      ERASE  00014 A 1                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1        PRBUFF 00001   1        PRWORD 00002   1        SETFUL 00003   1        TYLINE 00004   1  
      TYWORD 00005   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00034 +000000000077     00035 +000000000400     00033 +000000000006     00031 +000000000000     00032 +000000000001    
 00036 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00007 TXL -300070000065       00010 TXL -300204000201                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION(LINE, BUFSIZ)                                    001  LM00005
                 NORMAL MODE IS INTEGER                                             002  LM00007
                 VECTOR VALUES E1 = 0137K                                           003  LM00008
 00013     +0 00000 0 00137                                                                                             
                 VECTOR VALUES K1 = 0156K                                           004  LM00009
 00017     +0 00000 0 00156                                                                                             
                 VECTOR VALUES NBITS = 12                                           005  LM00010
 00022     +0 00000 0 00014                                                                                             
                 VECTOR VALUES NULL = 0057K                                         006  LM00011
 00023     +0 00000 0 00057                                                                                             
                 VECTOR VALUES ERASE = 0504K                                        007  LM00012
 00014     +0 00000 0 00504                                                                                             
                 VECTOR VALUES KILL = 0506K                                         008  LM00013
 00020     +0 00000 0 00506                                                                                             
                 VECTOR VALUES RETURN = 0055K                                       009  LM00014
 00024     +0 00000 0 00055                                                                                             
                 VECTOR VALUES WRDSIZ = 36                                          010  LM00015
 00030     +0 00000 0 00044                                                                                             
                 VECTOR VALUES CHMASK = 7777K                                       011  LM00016
 00012     +0 00000 0 07777                                                                                             
                 ENTRY TO SETERS.                                                   012  LM00018
 00037 TRA +0 02000 0 00042    00040 SXA +0 63400 2 00324    00041 TSX +0 07400 2 00324                                 
                   ERASE = LINE                                                     013  LM00019
 00042 CLA +0 50000 0 00024    00043 STO +0 60100 0 00014                                                               
                   FUNCTION RETURN                                                  014  LM00020
 00044 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO SETKIL.                                                   015  LM00022
 00045 TRA +0 02000 0 00050    00046 SXA +0 63400 2 00324    00047 TSX +0 07400 2 00324                                 
                   KILL = LINE                                                      016  LM00023
 00050 CLA +0 50000 0 00024    00051 STO +0 60100 0 00020                                                               
                   FUNCTION RETURN                                                  017  LM00024
 00052 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO CANON.                                                    018  LM00026
 00053 TRA +0 02000 0 00056    00054 SXA +0 63400 2 00324    00055 TSX +0 07400 2 00324                                 
                   FUNCTION RETURN                                                  019  LM00027
 00056 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO TYPEIN.                                                   020  LM00029
 00057 TRA +0 02000 0 00062    00060 SXA +0 63400 2 00324    00061 TSX +0 07400 2 00324                                 
                   SIZE = 0                                                         021  LM00030
 00062 CLA +0 50000 0 00031    00063 STO +0 60100 0 00025                                                               
                   TYLINE.                                                          022  LM00031
 00064 TSX +0 07400 4 00004                                                                                             
       LOOP        WORD = TYWORD.(0)                                                023  LM00032
 00065 TSX +0 07400 4 00005    00066 TXH +3 00000 0 00031    00067 STO +0 60100 0 00027                                 
                   THROUGH DISECT, FOR I = WRDSIZ-NBITS,-NBITS, I .L. 0             024  LM00033
 00070 CLA +0 50000 0 00030    00071 SUB +0 40200 0 00022    00072 STO +0 60100 0 00015    00073 TRA +0 02000 0 00077   
 00074 CLS +0 50200 0 00022    00075 ADD +0 40000 0 00015    00076 STO +0 60100 0 00015    00077 CLA +0 50000 0 00015   
 00100 SUB +0 40200 0 00031    00101 TZE +0 10000 0 00103    00102 TMI -0 12000 0 00200                                 
                     CHAR = (WORD.RS.I) .A. CHMASK                                  025  LM00034
 00103 CAL -0 50000 0 00015    00104 STA +0 62100 0 00106    00105 CAL -0 50000 0 00027    00106 LGR -0 76500 0 00000   
 00107 ANA -0 32000 0 00012    00110 SLW +0 60200 0 00011                                                               
                     WHENEVER CHAR .E. ERASE .OR. CHAR .E. E1                       026  LM00035
 00111 CLA +0 50000 0 00011    00112 SUB +0 40200 0 00013    00113 TZE +0 10000 0 00117    00114 CLA +0 50000 0 00011   
 00115 SUB +0 40200 0 00014    00116 TNZ -0 10000 0 00127                                                               
                       WHENEVER SIZE .G. 0, SIZE = SIZE - 1                         027  LM00036
 00117 CLA +0 50000 0 00025    00120 SUB +0 40200 0 00031    00121 TZE +0 10000 0 00126    00122 TMI -0 12000 0 00126   
 00123 CLA +0 50000 0 00025    00124 SUB +0 40200 0 00032    00125 STO +0 60100 0 00025                                 
                     OR WHENEVER CHAR .E. KILL .OR. CHAR .E. K1                     028  LM00037
 00126 TRA +0 02000 0 00172    00127 CLA +0 50000 0 00011    00130 SUB +0 40200 0 00017    00131 TZE +0 10000 0 00135   
 00132 CLA +0 50000 0 00011    00133 SUB +0 40200 0 00020    00134 TNZ -0 10000 0 00140                                 
                       SIZE = 0                                                     029  LM00038
 00135 CLA +0 50000 0 00031    00136 STO +0 60100 0 00025                                                               
                     O'R CHAR .E. RETURN .OR. CHAR.RS.6 .E. RETURN                  030  LM00039
 00137 TRA +0 02000 0 00172    00140 CAL -0 50000 0 00033    00141 STA +0 62100 0 00143    00142 CAL -0 50000 0 00011   
 00143 LGR -0 76500 0 00000    00144 SLW +0 60200 0 00346    00145 CLA +0 50000 0 00346    00146 SUB +0 40200 0 00024   
 00147 TZE +0 10000 0 00153    00150 CLA +0 50000 0 00011    00151 SUB +0 40200 0 00024    00152 TNZ -0 10000 0 00155   
                       TRANSFER TO UND                                              031  LM00040
 00153 TRA +0 02000 0 00010                                                                                             
                     O'R CHAR .A. 0400K .E. 0                                       032  LM00041
 00154 TRA +0 02000 0 00172    00155 CAL -0 50000 0 00011    00156 ANA -0 32000 0 00035    00157 SLW +0 60200 0 00346   
 00160 CLA +0 50000 0 00346    00161 SUB +0 40200 0 00031    00162 TNZ -0 10000 0 00172                                 
                       SIZE = SIZE + 1                                              033  LM00042
 00163 CLA +0 50000 0 00025    00164 ADD +0 40000 0 00032    00165 STO +0 60100 0 00025                                 
                       LINE(SIZE) = CHAR.A.77K                                      034  LM00043
 00166 CAL -0 50000 0 00011    00167 ANA -0 32000 0 00034    00170 LXA +0 53400 1 00025    00171 SLW +0 60200 1 00024   
                     END OF CONDITIONAL                                             035  LM00044
       DISECT        WHENEVER SIZE .GE. BUFSIZ, TRANSFER TO UND                     036  LM00045
 00172 CLA +0 50000 0 00025    00173 SUB +0 40200 0 00024    00174 TZE +0 10000 0 00176    00175 TMI -0 12000 0 00177   
 00176 TRA +0 02000 0 00010    00177 TRA +0 02000 0 00074                                                               
                   TRANSFER TO LOOP                                                 037  LM00046
 00200 TRA +0 02000 0 00007                                                                                             
      UND          SIZE = SIZE + 1                                                  038  LM00047
 00201 CLA +0 50000 0 00025    00202 ADD +0 40000 0 00032    00203 STO +0 60100 0 00025                                 
                   LINE(SIZE) = RETURN                                              039  LM00048
 00204 LXA +0 53400 1 00025    00205 CLA +0 50000 0 00024    00206 STO +0 60100 1 00024                                 
                   FUNCTION RETURN SIZE                                             040  LM00049
 00207 CLA +0 50000 0 00025    00210 TRA +0 02000 0 00342                                                               
                 ENTRY TO TYPOUT.                                                   041  LM00054
 00211 TRA +0 02000 0 00214    00212 SXA +0 63400 2 00324    00213 TSX +0 07400 2 00324                                 
                   K = 0                                                            042  LM00055
 00214 CLA +0 50000 0 00031    00215 STO +0 60100 0 00021                                                               
                   SETFUL.                                                          043  LM00056
 00216 TSX +0 07400 4 00003                                                                                             
                   THROUGH PRLOOP, FOR J = 1, 1, J .G. BUFSIZ                       044  LM00057
 00217 CLA +0 50000 0 00032    00220 STO +0 60100 0 00016    00221 TRA +0 02000 0 00225    00222 CLA +0 50000 0 00016   
 00223 ADD +0 40000 0 00032    00224 STO +0 60100 0 00016    00225 CLA +0 50000 0 00016    00226 SUB +0 40200 0 00024   
 00227 TZE +0 10000 0 00231    00230 TPL +0 12000 0 00261                                                               
                     TWORD = (TWORD .LS. NBITS) .V. LINE(J)                         045  LM00058
 00231 CAL -0 50000 0 00022    00232 STA +0 62100 0 00234    00233 CAL -0 50000 0 00026    00234 ALS +0 76700 0 00000   
 00235 LXA +0 53400 2 00016    00236 ORA -0 50100 2 00024    00237 SLW +0 60200 0 00026                                 
                     K = K + 1                                                      046  LM00059
 00240 CLA +0 50000 0 00021    00241 ADD +0 40000 0 00032    00242 STO +0 60100 0 00021                                 
                     WHENEVER K .GE. WRDSIZ/NBITS                                   047  LM00060
 00243 LDQ +0 56000 0 00030    00244 PXD -0 75400 0 00000    00245 LLS +0 76300 0 00000    00246 DVP +0 22100 0 00022   
 00247 XCA +0 13100 0 00000    00250 CHS +0 76000 0 00002    00251 ADD +0 40000 0 00021    00252 TZE +0 10000 0 00254   
 00253 TMI -0 12000 0 00260                                                                                             
                       K = 0                                                        048  LM00061
 00254 CLA +0 50000 0 00031    00255 STO +0 60100 0 00021                                                               
                       PRWORD.(TWORD)                                               049  LM00062
 00256 TSX +0 07400 4 00002    00257 TXH +3 00000 0 00026                                                               
       PRLOOP        END OF CONDITIONAL                                             050  LM00063
 00260 TRA +0 02000 0 00222                                                                                             
                   THROUGH NULPK, FOR K = K, 1, K.GE. WRDSIZ/NBITS                  051  LM00064
 00261 CLA +0 50000 0 00021    00262 STO +0 60100 0 00021    00263 TRA +0 02000 0 00267    00264 CLA +0 50000 0 00021   
 00265 ADD +0 40000 0 00032    00266 STO +0 60100 0 00021    00267 LDQ +0 56000 0 00030    00270 PXD -0 75400 0 00000   
 00271 LLS +0 76300 0 00000    00272 DVP +0 22100 0 00022    00273 XCA +0 13100 0 00000    00274 CHS +0 76000 0 00002   
 00275 ADD +0 40000 0 00021    00276 TZE +0 10000 0 00307    00277 TPL +0 12000 0 00307                                 
       NULPK         TWORD = (TWORD.LS.NBITS) .V. NULL                              052  LM00065
 00300 CAL -0 50000 0 00022    00301 STA +0 62100 0 00303    00302 CAL -0 50000 0 00026    00303 ALS +0 76700 0 00000   
 00304 ORA -0 50100 0 00023    00305 SLW +0 60200 0 00026    00306 TRA +0 02000 0 00264                                 
                   PRWORD.(TWORD)                                                   053  LM00066
 00307 TSX +0 07400 4 00002    00310 TXH +3 00000 0 00026                                                               
                   PRBUFF.                                                          054  LM00067
 00311 TSX +0 07400 4 00001                                                                                             
                   FUNCTION RETURN                                                  055  LM00068
 00312 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO HOL.                                                      056  LM00070
 00313 TRA +0 02000 0 00316    00314 SXA +0 63400 2 00324    00315 TSX +0 07400 2 00324                                 
                   FUNCTION RETURN LINE .A. 77K                                     057  LM00071
 00316 CAL -0 50000 0 00024    00317 ANA -0 32000 0 00034    00320 SLW +0 60200 0 00346    00321 CLA +0 50000 0 00346   
 00322 TRA +0 02000 0 00342                                                                                             
                 END OF FUNCTION                                                    058  LM00073
 00323 TSX +0 07400 4 00000    00324 TXH +3 00000 0 00000    00325 SXD -0 63400 1 00324    00326 SXA +0 63400 4 00342   
 00327 CLA +0 50000 4 00001    00330 STA +0 62100 0 00042    00331 STA +0 62100 0 00050    00332 STA +0 62100 0 00171   
 00333 STA +0 62100 0 00206    00334 STA +0 62100 0 00236    00335 STA +0 62100 0 00316    00336 CLA +0 50000 4 00002   
 00337 STA +0 62100 0 00173    00340 STA +0 62100 0 00226    00341 TRA +0 02000 2 00001    00342 AXT +0 77400 4 00000   
 00343 LXA +0 53400 2 00324    00344 LXD -0 53400 1 00324    00345 TRA +0 02000 4 00001                                 
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 1     
                  
                              *     
                              *      J. H. SALTZER, JANUARY, 1965.
                              *     
                       00004         ENTRY   PRWORD        ADD A WORD TO PRINT BUFFER.    
                       00021         ENTRY   PRBUFF        PRINT OUT PARTIAL BUFFER.
                       00030         ENTRY   TYWORD        GET NEXT TYPED WORD.     
                       00047         ENTRY   TYLINE        RESET TO START READING NEXT LINE.    
                              *     
                                     EXTERN RDFLXA,WRFLXA   
                              *     
                  
        TRANSFER VECTOR 
      00000  512426436721     RDFLXA
      00001  665126436721     WRFLXA
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  475166465124     
                  
                       00034  BUFLEN EQU     28            TYPEWRITER BUFFER SIZE.  
                              *     
                              *      ADD WORD TO PRINT BUFFER.    
                              *      PRWORD.(WORD)    
                              *     
      00004  0634 00 4 00017  PRWORD SXA     PRX4,4        SAVE LINKAGE.
      00005 -0500 60 4 00001         CAL*    1,4           GET WORD BEING ADDED.    
      00006 -0734 00 4 00000         PDX     0,4           CHECK FOR DISK CONTROL WORD.   
      00007  3 77776 4 00017         TXH     PRX4,4,-2     DON'T STORE CONTROL WORD.
      00010  0774 00 4 00034   PWCNT AXT     BUFLEN,4      SET WORD COUNTER (INITIALLY BUFLEN.) 
      00011  0602 00 4 00105         SLW     BUFF+BUFLEN,4 STORE WORD IN BUFFER.    
      00012  2 00001 4 00016         TIX     PSAVE,4,1     COUNT, CHECK FOR OVERFLOW.     
      00013  0074 00 4 00001         TSX     WRFLXA,4      BUFFER FULL, PRINT W/O C.R.    
      00014  0 00034 0 00051                 BUFF,,BUFLEN  ..     
      00015  0774 00 4 00034  PFRESH AXT     BUFLEN,4      RESET WORD COUNTER.
      00016  0634 00 4 00010   PSAVE SXA     PWCNT,4       SAVE WORD COUNTER. 
      00017  0774 00 4 00000   PRX4  AXT     --,4          RESTORE LINKAGE.   
      00020  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
                              *      PRINT OUT REMAINING BUFFER, RESET COUNTER.     
                              *     
      00021  0634 00 4 00017  PRBUFF SXA     PRX4,4        SAVE LINKAGE.
      00022  0535 00 4 00010         LAC     PWCNT,4       GET WORD COUNT.    
      00023  1 00034 4 00024         TXI     *+1,4,BUFLEN  FORM COMPLEMENT MOD BUFLEN.    
      00024 -0634 00 4 00026         SXD     PRCL,4        SAVE COUNT IN CALLER.    
      00025  0074 00 4 00001         TSX     WRFLXA,4      PRINT REMAINDER.   
      00026  0 00000 0 00051   PRCL          BUFF,,--      ..     
      00027  0020 00 0 00015         TRA     PFRESH        GO REFRESH COUNTER, AND RETURN.
                              *     
                              *      GET A WORD FROM INPUT BUFFER.
                              *         WORD = TYWORD.(0)   
                              *     
      00030  0634 00 4 00045  TYWORD SXA     TYX4,4        SAVE LINKAGE.
      00031  0774 00 5 00000  TYCNT  AXT     --,5          GET WORD COUNTER.  
      00032  0774 00 4 00000  TYPOS  AXT     --,4          GET BUFFER POINTER.
      00033  2 00006 5 00041         TIX     TYGET,5,6     CHECK FOR WORDS LEFT.    
      00034  0074 00 4 00000         TSX     RDFLXA,4      NO, GET SOME.
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 2     
                  
      00035  0 00034 0 00051  TYCALL         BUFF,,BUFLEN  ..     
      00036  0734 00 5 00000         PAX     0,5           INSERT 6-BIT CHARACTER COUNT INTO COUNTER. 
      00037  2 40000 5 00040         TIX     *+1,5,16384   REMOVE BIT 21 IF PRESENT.
      00040  0774 00 4 00000         AXT     0,4           RESET INPUT BUFFER POINTER.    
      00041  0500 00 4 00051  TYGET  CLA     BUFF,4        GET A WORD.  
      00042  1 77777 4 00043         TXI     *+1,4,-1      MOVE POINTER TO NEXT WORD.     
      00043  0634 00 4 00032         SXA     TYPOS,4       SAVE POINTER.
      00044  0634 00 5 00031         SXA     TYCNT,5       SAVE CHARACTER COUNTER.  
      00045  0774 00 4 00000  TYX4   AXT     --,4          RESTORE LINKAGE.   
      00046  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      00047  0634 00 0 00031  TYLINE ZSA     TYCNT         RESET CHARACTER COUNT TO MAKE LINE EMPTY.  
      00050  0020 00 4 00001         TRA     1,4           RETURN 
                              *     
      00051                   BUFF   BSS     BUFLEN            OUTPUT BUFFER. 
                              *     
                                     END  
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        105 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         51   BUFF    11,   14,   26,   35,   41
         26   PRCL    24
         17   PRX4     4,    7,   21
         45   TYX4    30
         16  PSAVE    12
         10  PWCNT    16,   22
         31  TYCNT    44,   47
         41  TYGET    33
         32  TYPOS    43
         34 BUFLEN     4,   10,   11,   14,   15,   23,   35,   51
         15 PFRESH    27
         21 PRBUFF     0
          4 PRWORD     0
          0 RDFLXA    34
         35 TYCALL      
         47 TYLINE     0
         30 TYWORD     0
          1 WRFLXA    13,   25
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            SUBROUTINE TO CONVERT BCD NUMBER TO BINARY.                                         PAGE 1     
                  
                              *     
                              *        J. H. SALTZER, MAY, 1966.  
                       00002         ENTRY   BIN           CONVERTER.   
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  223145606060     
                  
      00002  0634 00 1 00024   BIN   SXA     IRR1,1   
      00003  0600 00 0 00027         STZ     INT           CLEAR RESULT.
      00004  0774 00 1 00006         AXT     6,1
      00005  0560 60 4 00001         LDQ*    1,4           GET ARGUMENT.
      00006 -0754 00 0 00000  LOP    ZAC  
      00007 -0763 00 0 00006         LGL     6             GET NEXT CHARACTER.
      00010 -0340 00 0 00032         LAS     =10           SKIP OVER NON-DIGITS.    
      00011  0020 00 0 00023         TRA     TIX
      00012  0020 00 0 00023         TRA     TIX
      00013  0601 00 0 00030         STO     DIG           NUMBER, SAVE DIGIT.
      00014 -0600 00 0 00031         STQ     TEM           SAVE MQ FOR MULTIPLIACATION.   
      00015  0560 00 0 00027         LDQ     INT           GET OLD NUMBER.    
      00016  0200 00 0 00032         MPY     =10           SHIFT. 
      00017  0131 00 0 00000         XCA  
      00020  0400 00 0 00030         ADD     DIG           ADD THIS DIGIT TO RESULT.
      00021  0601 00 0 00027         STO     INT           SAVE, FOR NEXT PASS.     
      00022  0560 00 0 00031         LDQ     TEM           RESTORE MQ.  
      00023  2 00001 1 00006  TIX    TIX     LOP,1,1  
      00024  0774 00 1 00000   IRR1  AXT     --,1     
      00025  0500 00 0 00027         CLA     INT           RESULT IN AC.
      00026  0020 00 4 00002         TRA     2,4
                              *     
      00027  0 00000 0 00000   INT  
      00030  0 00000 0 00000   DIG  
      00031  0 00000 0 00000   TEM  
                              *     
                                     END  
                  
        LITERALS  
      00032  000000000012     
1            SUBROUTINE TO CONVERT BCD NUMBER TO BINARY.                                         PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         33 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          2    BIN     0
         30    DIG    13,   20
         27    INT     3,   15,   21,   25
          6    LOP    23
         31    TEM    14,   22
         23    TIX    11,   12
         24   IRR1     2
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            LIBRARY PACKAGE.                                                                    PAGE 1     
                  
                       00024         ENTRY   .PCOMT        PRINT COMMENT ROUTINE    
                       00010         ENTRY   CHNCOM        GO DORMANT.  
                       00005         ENTRY   EXIT          SAME.  
                       00002         ENTRY   .SETUP        CALLED BY MAD MAIN PROGRA.     
                       00013         ENTRY   COMARG        GET COMMAND ARGUMENT.    
                       00106         ENTRY   WHOAMI   
                       00066         ENTRY   SETBCD   
                       00064         ENTRY   SETFUL   
                       00065         ENTRY   SETBRK   
                       00061         ENTRY   WRFLXA   
                       00063         ENTRY   WRFLX    
                       00062         ENTRY   RDFLXA   
                       00067         ENTRY   UPDATE        UPDATE U.F.D.
                       00070         ENTRY   CHFILE   
                       00071         ENTRY   DELFIL   
                       00072         ENTRY   FSTATE   
                       00073         ENTRY   BUFFER   
                       00074         ENTRY   OPEN     
                       00075         ENTRY   WRWAIT   
                       00076         ENTRY   WRFILE   
                       00077         ENTRY   RDWAIT   
                       00100         ENTRY   RDFILE   
                       00101         ENTRY   CLOSE    
                       00043         ENTRY   GETBUF        OBTAIN BUFFERS FROM SUPERVISOR.
                              *     
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  334723464463     
                  
      00002  0760 00 0 00016  .SETUP LMTM                  USE SEVEN TAG MODE.
      00003  0774 00 6 00000         AXT     0,6           SET UP IR6 TO AVOID EARLY CALL TO READ.    
      00004  0020 00 0 00064         TRA     SETFUL        USE FULL MODE.  SETFUL RETURNS 1,4.  
                              *     
      00005  0074 00 4 00066  EXIT   TSX     SETBCD,4      CLEANUP, RESET MODE.     
      00006  0074 00 4 00063         TSX     WRFLX,4       PUT OUT A STAR FOR RUNCOMS.    
      00007  0 00001 0 00060                 STAR,,1       AND THEN PERFORM CHNCOM SEQUENCE.    
      00010  0074 00 4 00102  CHNCOM TSX     CHN,4         THIS CHNCOM ALWAYS GOES DEAD,  
 TD   00011  3 00000 0 00107         TXH     =0            IF NO CHAIN EXISTS.
      00012  0020 00 0 00010         TRA     *-2           IN CASE OF RESTART, DON'T.     
                              *     
      00013  0634 00 4 00022  COMARG SXA     CM4,4         GET COMMAND ARGUMENT FOR MAD.  
      00014 -0500 60 4 00001         CAL*    1,4           GET ARGUMENT NUMBER.     
      00015  0602 00 0 00017         SLW     ARG           GIVE ARGUMENT NUMBER.    
      00016  0074 00 4 00103         TSX     GETCOM,4      GET COMMAND ARGUMENT.    
      00017  0 00000 0 00000   ARG                         ..     
      00020  0602 00 0 00017         SLW     ARG           MOVE TO ARITHMETIC AC.   
      00021  0500 00 0 00017         CLA     ARG           ..     
      00022  0774 00 4 00000   CM4   AXT     --,4          RESTORE LINKAGE.   
      00023  0020 00 4 00002         TRA     2,4           RETURN TO CALLER.  
                              *     
      00024 -0500 00 4 00001  .PCOMT CAL     1,4           GET WORD COUNT.    
      00025  0621 00 0 00042         STA     RETURN        ON RETURN, JUMP BUFFER.  
      00026  0767 00 0 00022         ALS     18            SETUP COUNT. 
      00027  0622 00 0 00036         STD     PCNT          ..     
      00030  1 77776 4 00031         TXI     *+1,4,-2      SETUP UP BUFFER ADDRESS. 
1            LIBRARY PACKAGE.                                                                    PAGE 2     
                  
      00031  0636 00 4 00036         SCA     PCNT,4        SAVE BUFFER ADDRESS, AND LINKAGE.    
      00032  0074 00 4 00064         TSX     SETFUL,4      MAKE SURE MODE SET AND NO LINES COMING IN. 
      00033  0074 00 4 00061         TSX     WRFLXA,4      SWITCH TO RED SHIFT.     
      00034  0 00001 0 00056                 REDS,,1       ..     
      00035  0074 00 4 00063         TSX     WRFLX,4       PRINT LINE.  
      00036  0 00000 0 00000   PCNT          --,,--        ..     
      00037  0074 00 4 00061         TSX     WRFLXA,4      SHIFT BACK TO BLACK.     
      00040  0 00001 0 00057                 BLCKS,,1      ..     
      00041  0535 00 4 00036         LAC     PCNT,4        RESTORE LINKAGE.   
      00042  0020 00 4 00000  RETURN TRA     --,4          RETURN TO CALLER.  
                              *     
      00043  0634 00 4 00052  GETBUF SXA     GX4,4         ENTRY TO GET BUFFERS.    
      00044  0602 00 0 00055         SLW     BUFSIZ        SIZE OF BUFFER IN AC.    
      00045  0074 00 4 00104         TSX     GETMEM,4      GET PRESENT BOUND. 
      00046  0601 00 0 00054         STO     START         SAVE AS BUFFER START.    
      00047  0361 00 0 00055         ACL     BUFSIZ        FORM NEW BOUND.    
      00050  0074 00 4 00105         TSX     SETMEM,4      ASK FOR MORE.
      00051 -0500 00 0 00054         CAL     START         GIVE CALLER LOCATION OF  
      00052  0774 00 4 00000   GX4   AXT     --,4          HIS NEW BUFFER.    
      00053  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      00054  0 00000 0 00000   START                       STORAGE FOR BUFFER LOCATION.   
      00055  0 00000 0 00000  BUFSIZ                       STORAGE FOR BUFFER SIZE. 
                              *     
      00056 +013300570057      REDS  OCT     013300570057  RED SHIFT AND TWO NULLS. 
      00057 +013200570057      BLCKS OCT     013200570057  BLACK SHIFT AND TWO NULLS.     
      00060 -145757575757     STAR   OCT     545757575757  ASTERISK AND 5 NULLS.    
                              *     
                              *              SUPERVISOR SUBROUTINE CALLERS.   
                              *     
      00061  0101 00 0 00133  WRFLXA TIA     =HWRFLXA 
      00062  0101 00 0 00122  RDFLXA TIA     =HRDFLXA 
      00063  0101 00 0 00134  WRFLX  TIA     =HWRFLX  
      00064  0101 00 0 00126  SETFUL TIA     =HSETFUL 
      00065  0101 00 0 00125  SETBRK TIA     =HSETBRK 
      00066  0101 00 0 00124  SETBCD TIA     =HSETBCD 
      00067  0101 00 0 00130  UPDATE TIA     =HUPDATE 
      00070  0101 00 0 00111  CHFILE TIA     =HCHFILE 
      00071  0101 00 0 00114  DELFIL TIA     =HDELFIL 
      00072  0101 00 0 00115  FSTATE TIA     =HFSTATE 
      00073  0101 00 0 00110  BUFFER TIA     =HBUFFER 
      00074  0101 00 0 00120  OPEN   TIA     =HOPEN   
      00075  0101 00 0 00135  WRWAIT TIA     =HWRWAIT 
      00076  0101 00 0 00132  WRFILE TIA     =HWRFILE 
      00077  0101 00 0 00123  RDWAIT TIA     =HRDWAIT 
      00100  0101 00 0 00121  RDFILE TIA     =HRDFILE 
      00101  0101 00 0 00113  CLOSE  TIA     =HCLOSE  
      00102  0101 00 0 00112  CHN    TIA     =HCHNCOM 
      00103  0101 00 0 00116  GETCOM TIA     =HGETCOM 
      00104  0101 00 0 00117  GETMEM TIA     =HGETMEM 
      00105  0101 00 0 00127  SETMEM TIA     =HSETMEM 
      00106  0101 00 0 00131  WHOAMI TIA     =HWHOAMI 
                              *     
                                     END  
1            LIBRARY PACKAGE.                                                                    PAGE 3     
                  
        LITERALS  
      00107  000000000000     
      00110  226426262551     
      00111  233026314325     
      00112  233045234644     
      00113  234346622560     
      00114  242543263143     
      00115  266263216325     
      00116  272563234644     
      00117  272563442544     
      00120  464725456060     
      00121  512426314325     
      00122  512426436721     
      00123  512466213163     
      00124  622563222324     
      00125  622563225142     
      00126  622563266443     
      00127  622563442544     
      00130  644724216325     
      00131  663046214431     
      00132  665126314325     
      00133  665126436721     
      00134  665126436760     
      00135  665166213163     
1            LIBRARY PACKAGE.                                                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        136 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         17    ARG    15,   20,   21
        102    CHN    10
         22    CM4    13
         52    GX4    43
          5   EXIT     0
         74   OPEN     0
         36   PCNT    27,   31,   41
         56   REDS    34
         60   STAR     7
         57  BLCKS    40
        101  CLOSE     0
         54  START    46,   51
         63  WRFLX     0,    6,   35
         73 BUFFER     0
         55 BUFSIZ    44,   47
         70 CHFILE     0
         10 CHNCOM     0
         13 COMARG     0
         71 DELFIL     0
         72 FSTATE     0
         43 GETBUF     0
        103 GETCOM    16
        104 GETMEM    45
         24 .PCOMT     0
          2 .SETUP     0
        100 RDFILE     0
         62 RDFLXA     0
         77 RDWAIT     0
         42 RETURN    25
         66 SETBCD     0,    5
         65 SETBRK     0
         64 SETFUL     0,    4,   32
        105 SETMEM    50
         67 UPDATE     0
        106 WHOAMI     0
         76 WRFILE     0
         61 WRFLXA     0,   33,   37
         75 WRWAIT     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




   EDC   BCD 09/18/68 2206.4   57269         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  EDITCD   MAD            09/18/68    0946.1
-                 
                 ..  EDIT BY CONTEXT PROGRAM.                                                          LM00001    
                                                                                                       LM00002    
                 ..  J. H. SALTZER, NOVEMBER, 1964.                                                    LM00003    
                 ..  LAST MODIFICATION, APRIL, 1967.                                                   LM00004    
                 .. MODIFIED SEPTEMBER, 1967 BY PETER R. BOS                                           LM00005    
                 ..  TO USE CARD IMAGE CONVERSION PACKAGE.                                             LM00006    
                                                                                                       LM00007    
                 .. DECLARATIONS.                                                                      LM00008    
                                                                                                       LM00009    
                  VECTOR VALUES FENCE = 777777777777K                                             *001 LM00010    
                  VECTOR VALUES IN = $(INPUT$                                                     *002 LM00011    
                  VECTOR VALUES IN1 = $(INPT1$                                                    *003 LM00012    
                  VECTOR VALUES BRIEF = 0B                                                        *004 LM00013    
                  VECTOR VALUES OK = 0B                                                           *005 LM00014    
                  VECTOR VALUES BUFSIZ = 360                                                      *006 LM00015    
                  DIMENSION LINE(361), EDLIN(361)                                                 *007 LM00016    
                  DIMENSION REDS(1), BLACKS(1)                                                    *008 LM00017    
                  DIMENSION ATNAM(2)                                                              *009 LM00018    
                  NORMAL MODE IS INTEGER                                                          *010 LM00019    
                  BOOLEAN OK, GLOBAL, FSTPAS                                                      *011 LM00020    
                  BOOLEAN CHNG, CLRSW, BRIEF                                                      *012 LM00021    
                                                                                                       LM00022    
      . . .      . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                           LM00023    
                                                                                                       LM00024    
                 ..  INITIALIZATION.                                                                   LM00025    
                                                                                                       LM00026    
                  SECOND NAME OF INTERMEDIATE FILES NOW PROGNO                                         LM00027    
                                                                                                       LM00028    
                  WHOAMI.(ATNAM(2)...2)                                                           *013 LM00029    
                  FI = ATNAM(1)                                                                   *014 LM00030    
                  GETVAL.(BLANK, TAB, DEFALT, MCHNG, REDS(1), BLACKS(1))                          *015 LM00031    
                  CLRNAM.(IN, FI, CHN, 1B)                                                        *016 LM00032    
                  CLRNAM.(IN1, FI, CHN, 1B)                                                       *017 LM00033    
                  ASSIGN.(IN, FI)                                                                 *018 LM00034    
                  OLDNAM = COMARG.(1)                                                             *019 LM00035    
                  OLDSEC = DEFALT                                                                 *020 LM00036    
                  WHENEVER OLDNAM .E. FENCE                                                       *021 LM00037    
                    CDINIT.                                                                       *022 LM00038    
                    TRANSFER TO INSERT                                                            *023 LM00039    
                  END OF CONDITIONAL                                                              *024 LM00040    
                  OLDSEC = COMARG.(2)                                                             *025 LM00041    
                  WHENEVER OLDSEC .E. FENCE, OLDSEC = DEFALT                                      *026 LM00042    
                  CDINIT.                                                                         *027 LM00043    
                  SEEK.(OLDNAM, OLDSEC, INSERT)                                                   *028 LM00044    
                  FSTPAS = 1B                                                                     *029 LM00045    
                  OK = 1B                                                                         *030 LM00046    
                                                                                                       LM00047    
                 ..  ENTER EDIT MODE.                                                                  LM00048    
                                                                                                       LM00049    
      EDIT        WHENEVER .NOT. BRIEF, PRINT COMMENT $0E1D1I1T$                                  *031 LM00050    
                                                                                                       LM00051    
                 ..  OBTAIN NEXT REQUEST.                                                              LM00052    
                                                                                                       LM00053    
      NXRQ        COUNT = TYPEIN.(EDLIN, BUFSIZ)                                                  *032 LM00054    
                  WHENEVER EDLIN(1) .E. MCHNG .AND. COUNT .L. 3                                   *033 LM00055    
                1      , TRANSFER TO INSERT                                                       *033 LM00056    
                  WHENEVER COUNT .L. 2, TRANSFER TO NXRQ                                          *034 LM00057    
                  EDCT = 0                                                                        *035 LM00058    
                  CWD = GET.(0)                                                                   *036 LM00059    
                                                                                                       LM00060    
                  WHENEVER CWD .E. $DELETE$ .OR. CWD .E. $     D$                                 *037 LM00061    
                    N = BIN.(GET.(0))                                                             *038 LM00062    
                    THROUGH DREAD, FOR I = 1, 1, I .GE. N                                         *039 LM00063    
       DREAD          LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *040 LM00064    
                    LENGTH = 0                                                                    *041 LM00065    
                                                                                                       LM00066    
                  OR WHENEVER CWD .E. $  NEXT$ .OR. CWD .E. $     N$                              *042 LM00067    
                    N = BIN.(GET.(0))                                                             *043 LM00068    
                    WHENEVER N .E. 0, N = 1                                                       *044 LM00069    
                    THROUGH NXT, FOR I = 1, 1, I .G. N                                            *045 LM00070    
                      WRITE.(LINE, LENGTH)                                                        *046 LM00071    
                      WHENEVER .NOT. OK, CLSOUT.                                                  *047 LM00072    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *048 LM00073    
       NXT            CONTINUE                                                                    *049 LM00074    
                                                                                                       LM00075    
                  OR WHENEVER CWD .E. $INSERT$ .OR. CWD .E. $     I$                              *050 LM00076    
                    WRITE.(LINE, LENGTH)                                                          *051 LM00077    
                    TRANSFER TO RETYPE                                                            *052 LM00078    
                                                                                                       LM00079    
      INSERT        WHENEVER .NOT. BRIEF, PRINT COMMENT $0I1N1P1U1T$                              *053 LM00080    
       INPUT        COUNT = TYPEIN.(EDLIN, BUFSIZ)                                                *054 LM00081    
                    WHENEVER COUNT .L. 3 .AND. EDLIN(1) .E. MCHNG                                 *055 LM00082    
                1      , TRANSFER TO EDIT                                                         *055 LM00083    
                    WRITE.(LINE, LENGTH)                                                          *056 LM00084    
                    THROUGH MVLP, FOR I = 1, 1, I .G. COUNT                                       *057 LM00085    
       MVLP           LINE(I) = EDLIN(I)                                                          *058 LM00086    
                    LENGTH = COUNT                                                                *059 LM00087    
                    TRANSFER TO INPUT                                                             *060 LM00088    
                                                                                                       LM00089    
                  OR WHENEVER CWD .E. $BOTTOM$ .OR. CWD .E. $     B$                              *061 LM00090    
                    WRITE.(LINE, LENGTH)                                                          *062 LM00091    
                    LENGTH = 0                                                                    *063 LM00092    
                    WHENEVER OK, BOTTOM.                                                          *064 LM00093    
                    TRANSFER TO INSERT                                                            *065 LM00094    
                                                                                                       LM00095    
                  OR WHENEVER CWD .E. $APPEND$ .OR. CWD .E. $     A$                              *066 LM00096    
                    WHENEVER LENGTH .G. 0, LENGTH = LENGTH - 1                                    *067 LM00097    
                    TRANSFER TO APPEND                                                            *068 LM00098    
                                                                                                       LM00099    
                  OR WHENEVER CWD .E. $RETYPE$ .OR. CWD .E. $     R$                              *069 LM00100    
       RETYPE       LENGTH = 0                                                                    *070 LM00101    
      APPEND        THROUGH RPLC, FOR EDCT = EDCT + 1, 1, EDCT .G. COUNT                          *071 LM00102    
                      LENGTH = LENGTH + 1                                                         *072 LM00103    
       RPLC           LINE(LENGTH) = EDLIN(EDCT)                                                  *073 LM00104    
                                                                                                       LM00105    
                  OR WHENEVER CWD .E. $ ERASE$ .OR. CWD .E. $     E$                              *074 LM00106    
                    WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETERS.(EDLIN(EDCT+1))                     *075 LM00107    
                                                                                                       LM00108    
                  OR WHENEVER CWD .E. $  KILL$ .OR. CWD .E. $     K$                              *076 LM00109    
                    WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETKIL.(EDLIN(EDCT+1))                     *077 LM00110    
                                                                                                       LM00111    
                  OR WHENEVER CWD .E. $  BKSP$ .OR. CWD .E. $    BK$                              *078 LM00112    
                    WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETBK.(EDLIN(EDCT+1))                      *079 LM00113    
                                                                                                       LM00114    
                  OR WHENEVER CWD .E. $VERIFY$ .OR. CWD .E. $     V$                              *080 LM00115    
                    CWD = GET.(0)                                                                 *081 LM00116    
                    WHENEVER CWD .E. $    ON$                                                     *082 LM00117    
                      BRIEF = 0B                                                                  *083 LM00118    
                    OR WHENEVER CWD .E. $   OFF$                                                  *084 LM00119    
                      BRIEF = 1B                                                                  *085 LM00120    
                    END OF CONDITIONAL                                                            *086 LM00121    
                                                                                                       LM00122    
                  OR WHENEVER CWD .E. $LOCATE$ .OR. CWD .E. $     L$                              *087 LM00123    
                    LOCATE = 1                                                                    *088 LM00124    
                    TRANSFER TO FIND                                                              *089 LM00125    
                                                                                                       LM00126    
                  OR WHENEVER CWD .E. $  FIND$ .OR. CWD .E. $     F$                              *090 LM00127    
                    LOCATE = 0                                                                    *091 LM00128    
      FIND          WHENEVER EDCT+1 .GE. COUNT                                                    *092 LM00129    
                      COUNT = OCOUNT                                                              *093 LM00130    
                      EDCT = EDCT + 1                                                             *094 LM00131    
                    END OF CONDITIONAL                                                            *095 LM00132    
                    OCOUNT = COUNT                                                                *096 LM00133    
       NTFND        WRITE.(LINE, LENGTH)                                                          *097 LM00134    
                    WHENEVER  .NOT. OK, CLSOUT.                                                   *098 LM00135    
                    LENGTH = READ.(LINE, BUFSIZ, EOF)                                             *099 LM00136    
                    THROUGH LOCSCN, FOR K=0, 1,K.G.LOCATE*(LENGTH-COUNT+EDCT)                     *100 LM00137    
                      J = K                                                                       *101 LM00138    
                      THROUGH LOOK, FOR I = EDCT+1, 1, I .GE. COUNT                               *102 LM00139    
                        J = J + 1                                                                 *103 LM00140    
       TAGN             WHENEVER LINE(J) .E. EDLIN(I), TRANSFER TO LOOK                           *104 LM00141    
                        WHENEVER (LINE(J).E. TAB) .AND. (EDLIN(I) .E. BLANK)                      *105 LM00142    
                1        , TRANSFER TO LOOK                                                       *105 LM00143    
                        WHENEVER EDLIN(I-1) .NE. BLANK .OR. I .E. EDCT + 1                        *106 LM00144    
                1        , TRANSFER TO LOCSCN                                                     *106 LM00145    
                        WHENEVER LINE(J) .NE. BLANK .AND. LINE(J) .NE. TAB                        *107 LM00146    
                1        , TRANSFER TO LOCSCN                                                     *107 LM00147    
                        J = J + 1                                                                 *108 LM00148    
                        TRANSFER TO TAGN                                                          *109 LM00149    
       LOOK             WHENEVER I .E. EDCT+1, FNDST = J                                          *110 LM00150    
                      FNDND = J                                                                   *111 LM00151    
                      WHENEVER .NOT. BRIEF, PRNT.(FNDST, FNDND)                                   *112 LM00152    
                      TRANSFER TO NXRQ                                                            *113 LM00153    
        LOCSCN        CONTINUE                                                                    *114 LM00154    
                    TRANSFER TO NTFND                                                             *115 LM00155    
                                                                                                       LM00156    
                  OR WHENEVER CWD .E. $ PRINT$ .OR. CWD .E. $     P$                              *116 LM00157    
                    NPRNT = BIN.(GET.(0))                                                         *117 LM00158    
      PNTLP         WHENEVER LENGTH .E. 0                                                         *118 LM00159    
                      PRINT COMMENT $0N1O0 1C1U1R1R1E1N1T0 1L1I1N1E0.$                            *119 LM00160    
                    OTHERWISE                                                                     *120 LM00161    
                      TYPOUT.(LINE, LENGTH)                                                       *121 LM00162    
                    END OF CONDITIONAL                                                            *122 LM00163    
                    NPRNT = NPRNT - 1                                                             *123 LM00164    
                    WHENEVER NPRNT .G. 0                                                          *124 LM00165    
                      WRITE.(LINE, LENGTH)                                                        *125 LM00166    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *126 LM00167    
                      TRANSFER TO PNTLP                                                           *127 LM00168    
                    END OF CONDITIONAL                                                            *128 LM00169    
                                                                                                       LM00170    
                  OR WHENEVER CWD .E. $   TOP$ .OR. CWD .E. $     T$                              *129 LM00171    
       TOPLP        WRITE.(LINE, LENGTH)                                                          *130 LM00172    
                    WHENEVER OK, BOTTOM.                                                          *131 LM00173    
                    CLSOUT.                                                                       *132 LM00174    
                                                                                                       LM00175    
                  OR WHENEVER CWD .E. $CHANGE$ .OR. CWD .E. $     C$                              *133 LM00176    
                                                                                                       LM00177    
      . . .       . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          LM00178    
                                                                                                       LM00179    
                 ..  DELINEATE QUOTED STRINGS.                                                         LM00180    
                                                                                                       LM00181    
                    EDCT = EDCT+1                                                                 *134 LM00182    
                    QUOTE = EDLIN(EDCT)                                                           *135 LM00183    
                    STR1 = EDCT                                                                   *136 LM00184    
      QLOOP         THROUGH QLOOP, FOR EDCT = EDCT+1, 1,                                          *137 LM00185    
                1      (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                             *137 LM00186    
                    STR2 = EDCT                                                                   *138 LM00187    
      QLOOP1        THROUGH QLOOP1, FOR EDCT = EDCT+1, 1,                                         *139 LM00188    
                1      (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                             *139 LM00189    
                    EST2 = EDCT                                                                   *140 LM00190    
                                                                                                       LM00191    
                 .. CHECK FOR ITERATION COUNT AND GLOBAL REQUEST.                                      LM00192    
                                                                                                       LM00193    
                    EDCT = EDCT + 1                                                               *141 LM00194    
                    TEM = 1                                                                       *142 LM00195    
                    GLOBAL = 0B                                                                   *143 LM00196    
      ARGLP         CWD = GET.(0)                                                                 *144 LM00197    
                    WHENEVER CWD .E. $ $                                                          *145 LM00198    
                      TRANSFER TO SHIFT                                                           *146 LM00199    
                    OR WHENEVER CWD .E. $     G$                                                  *147 LM00200    
                      WHENEVER STR2 .NE. STR1+1, GLOBAL = 1B                                      *148 LM00201    
                    OTHERWISE                                                                     *149 LM00202    
                      TEM = BIN.(CWD)                                                             *150 LM00203    
                    END OF CONDITIONAL                                                            *151 LM00204    
                    TRANSFER TO ARGLP                                                             *152 LM00205    
                                                                                                       LM00206    
                 .. SHIFT LINE TO BOTTOM OF BUFFER.                                                    LM00207    
                                                                                                       LM00208    
       SHIFT        THROUGH MVDWN, FOR I = LENGTH, -1, I .L. 1                                    *153 LM00209    
      MVDWN           LINE(BUFSIZ+I-LENGTH) = LINE(I)                                             *154 LM00210    
                    DOWN = BUFSIZ-LENGTH+1                                                        *155 LM00211    
                    UP = 0                                                                        *156 LM00212    
                    CHNG = 0B                                                                     *157 LM00213    
                    CHST = LENGTH + 1                                                             *158 LM00214    
                    CHEND = LENGTH                                                                *159 LM00215    
                                                                                                       LM00216    
                 .. SEARCH FOR PRESENCE OF FIRST STRING.                                               LM00217    
                                                                                                       LM00218    
      SRCHLP        UP = UP + 1                                                                   *160 LM00219    
      SRTST           WHENEVER DOWN .G. BUFSIZ, TRANSFER TO GIVUP                                 *161 LM00220    
                      J = DOWN                                                                    *162 LM00221    
                      THROUGH COMPAR, FOR I = STR1+1, 1, I .GE. STR2                              *163 LM00222    
                        WHENEVER J .GE. BUFSIZ, TRANSFER TO GIVUP                                 *164 LM00223    
                        WHENEVER EDLIN(I) .NE. LINE(J), TRANSFER TO NOCOMP                        *165 LM00224    
       COMPAR           J = J + 1                                                                 *166 LM00225    
                      TRANSFER TO STFND                                                           *167 LM00226    
                                                                                                       LM00227    
      NOCOMP          LINE(UP) = LINE(DOWN)                                                       *168 LM00228    
                      DOWN = DOWN + 1                                                             *169 LM00229    
                    TRANSFER TO SRCHLP                                                            *170 LM00230    
                                                                                                       LM00231    
                 .. STRING FOUND, REPLACE WITH SECOND STRING.                                          LM00232    
                                                                                                       LM00233    
      STFND         CHNG = 1B                                                                     *171 LM00234    
                    DOWN = DOWN + (STR2-STR1-1)                                                   *172 LM00235    
                    CHST = UP                                                                     *173 LM00236    
                    THROUGH REPLAC, FOR I = STR2 + 1, 1, I .GE. EST2                              *174 LM00237    
                      LINE(UP) = EDLIN(I)                                                         *175 LM00238    
                      UP = UP + 1                                                                 *176 LM00239    
       REPLAC         WHENEVER UP .G. DOWN, TRANSFER TO GIVUP                                     *177 LM00240    
                    CHEND = UP - 1                                                                *178 LM00241    
                    WHENEVER GLOBAL, TRANSFER TO SRTST                                            *179 LM00242    
                                                                                                       LM00243    
                 .. MOVE REST OF LINE BACK UP.                                                         LM00244    
                                                                                                       LM00245    
      GIVUP         THROUGH FILOUT, FOR UP = UP, 1, DOWN .G. BUFSIZ                               *180 LM00246    
                      LINE(UP) = LINE(DOWN)                                                       *181 LM00247    
      FILOUT          DOWN = DOWN + 1                                                             *182 LM00248    
                    LENGTH = UP - 1                                                               *183 LM00249    
                    TEM = TEM - 1                                                                 *184 LM00250    
                    WHENEVER .NOT. BRIEF .AND. (TEM .G. 0 .THEN. CHNG)                            *185 LM00251    
                1        , PRNT.(CHST, CHEND)                                                     *185 LM00252    
                    CANON.(LINE, LENGTH, BUFSIZ)                                                  *186 LM00253    
                    WHENEVER TEM .G. 0                                                            *187 LM00254    
                      WRITE.(LINE, LENGTH)                                                        *188 LM00255    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *189 LM00256    
                      TRANSFER TO SHIFT                                                           *190 LM00257    
                    END OF CONDITIONAL                                                            *191 LM00258    
                                                                                                       LM00259    
      . . . .     . . . . . . . . . . . . . . . . . . . . . . . . . . . .                              LM00260    
                                                                                                       LM00261    
                  OR WHENEVER CWD .E. $ SPLIT$ .OR. CWD .E. $     S$                              *192 LM00262    
                    TOPNAM = GET.(0)                                                              *193 LM00263    
                    WHENEVER TOPNAM .E. $ $, TRANSFER TO NONAME                                   *194 LM00264    
                    WHENEVER TOPNAM .E. OLDNAM .AND. FSTPAS                                       *195 LM00265    
      NEWNM           PRINT COMMENT $0P1L1E1A1S1E0 1U1S1E0 1A1N1O1T1H1E1R0 1N1A                   *196 LM00266    
                1 1M1E0.$                                                                         *196 LM00267    
                      TRANSFER TO NXRQ                                                            *197 LM00268    
                    END OF CONDITIONAL                                                            *198 LM00269    
                    SECNAM = GET.(0)                                                              *199 LM00270    
                  WHENEVER SECNAM .E. $ $, SECNAM = OLDSEC                                        *200 LM00271    
                    CLRNAM.(TOPNAM, SECNAM, NEWNM, 1B)                                            *201 LM00272    
                    CLOSEW.                                                                       *202 LM00273    
                    RENAME.(IN, FI, TOPNAM, SECNAM)                                               *203 LM00274    
                    ASSIGN.(IN, FI)                                                               *204 LM00275    
                    OLDNAM = FENCE                                                                *205 LM00276    
                    TRANSFER TO TOPLP                                                             *206 LM00277    
                                                                                                       LM00278    
                  OR WHENEVER CWD .E. $  QUIT$ .OR. CWD .E. $     Q$                              *207 LM00279    
                    ENDRD.                                                                        *208 LM00280    
                    CLOSEW.                                                                       *209 LM00281    
                    DELFIL.(IN1, FI, DLQ1)                                                        *210 LM00282    
      DLQ1          DELFIL.(IN, FI, DLQ2)                                                         *211 LM00283    
      DLQ2          TRANSFER TO CHN                                                               *212 LM00284    
                                                                                                       LM00285    
                  OR WHENEVER CWD .E. $TABSET$ .OR. CWD .E. $    TB$                              *213 LM00286    
                    TB = GET.(0)                                                                  *214 LM00287    
                    WHENEVER TB .E. $     *$                                                      *215 LM00288    
                      TBINIT.                                                                     *216 LM00289    
                    OTHERWISE                                                                     *217 LM00290    
                      NEWTBS.                                                                     *218 LM00291    
      GTTB            WHENEVER TB .E. $ $, TRANSFER TO NXRQ                                       *219 LM00292    
                      TABSET.(BIN.(TB))                                                           *220 LM00293    
                      TB = GET.(0)                                                                *221 LM00294    
                      TRANSFER TO GTTB                                                            *222 LM00295    
                    END OF CONDITIONAL                                                            *223 LM00296    
                                                                                                       LM00297    
                  OR WHENEVER CWD .E. $ BKSET$                                                    *224 LM00298    
                    BK = GET.(0)                                                                  *225 LM00299    
                    NEWBKS.                                                                       *226 LM00300    
      GTBK          WHENEVER BK .E. $ $, TRANSFER TO NXRQ                                         *227 LM00301    
                    BKSET.(BIN.(BK))                                                              *228 LM00302    
                    BK = GET.(0)                                                                  *229 LM00303    
                    TRANSFER TO GTBK                                                              *230 LM00304    
                                                                                                       LM00305    
                  OR WHENEVER CWD .E. $SERIAL$ .OR. CWD .E. $    SR$                              *231 LM00306    
                    FSTNO = GET.(0)                                                               *232 LM00307    
                    WHENEVER FSTNO .E. $   OFF$                                                   *233 LM00308    
                      SINHB.(1)                                                                   *234 LM00309    
                    OR WHENEVER FSTNO .E. $    ON$                                                *235 LM00310    
                      SINHB.(0)                                                                   *236 LM00311    
                    OTHERWISE                                                                     *237 LM00312    
                      WHENEVER FSTNO .E. $ $                                                      *238 LM00313    
                        FSTNO = 10                                                                *239 LM00314    
                        INCR = 10                                                                 *240 LM00315    
                      OTHERWISE                                                                   *241 LM00316    
                        FSTNO = BIN.(FSTNO)                                                       *242 LM00317    
                        INCR = GET.(0)                                                            *243 LM00318    
                        WHENEVER INCR .E. $ $                                                     *244 LM00319    
                          INCR = 10                                                               *245 LM00320    
                        OTHERWISE                                                                 *246 LM00321    
                          INCR = BIN.(INCR)                                                       *247 LM00322    
                        END OF CONDITIONAL                                                        *248 LM00323    
                      END OF CONDITIONAL                                                          *249 LM00324    
                      SETSR.(FSTNO,INCR)                                                          *250 LM00325    
                      SINHB.(0)                                                                   *251 LM00326    
                    END OF CONDITIONAL                                                            *252 LM00327    
                                                                                                       LM00328    
                  OR WHENEVER CWD .E. $ NCOLS$ .OR. CWD .E. $    NC$                              *253 LM00329    
                    NCOL = GET.(0)                                                                *254 LM00330    
                    WHENEVER NCOL .E. $ $                                                         *255 LM00331    
                      SETCOL.(72)                                                                 *256 LM00332    
                    OTHERWISE                                                                     *257 LM00333    
                      SETCOL.(BIN.(NCOL))                                                         *258 LM00334    
                    END OF CONDITIONAL                                                            *259 LM00335    
                                                                                                       LM00336    
                  OR WHENEVER CWD .E. $  FILE$                                                    *260 LM00337    
                    PRINAM = GET.(0)                                                              *261 LM00338    
                    CLRSW = 1B                                                                    *262 LM00339    
                    WHENEVER PRINAM .E. $ $                                                       *263 LM00340    
                      PRINAM = OLDNAM                                                             *264 LM00341    
                      SECNAM = OLDSEC                                                             *265 LM00342    
                      CLRSW = 0B                                                                  *266 LM00343    
                    OTHERWISE                                                                     *267 LM00344    
                      SECNAM = GET.(0)                                                            *268 LM00345    
                      WHENEVER SECNAM .E. $ $                                                     *269 LM00346    
                        SECNAM = OLDSEC                                                           *270 LM00347    
                      END OF CONDITIONAL                                                          *271 LM00348    
                    END OF CONDITIONAL                                                            *272 LM00349    
                    WHENEVER PRINAM .E. FENCE                                                     *273 LM00350    
      NONAME          PRINT COMMENT $0N1O0 1F1I1L1E0 1N1A1M1E0 1G1I1V1E1N0.$                      *274 LM00351    
                      TRANSFER TO NXRQ                                                            *275 LM00352    
                    END OF CONDITIONAL                                                            *276 LM00353    
                    WRITE.(LINE, LENGTH)                                                          *277 LM00354    
                    LENGTH = 0                                                                    *278 LM00355    
                    WHENEVER OK, BOTTOM.                                                          *279 LM00356    
                    CLRNAM.(PRINAM, SECNAM, NEWNM, CLRSW)                                         *280 LM00357    
                    CLOSEW.                                                                       *281 LM00358    
                    DELFIL.(IN1, FI, DL1)                                                         *282 LM00359    
      DL1           RENAME.(IN, FI, PRINAM, SECNAM)                                               *283 LM00360    
      CHN           EXIT.                                                                         *284 LM00361    
                                                                                                       LM00362    
                  OTHERWISE                                                                       *285 LM00363    
                    PRINT COMMENT $0N1O1T0 1A0 1R1E1Q1U1E1S1T0:$                                  *286 LM00364    
                    TYPOUT.(EDLIN, COUNT)                                                         *287 LM00365    
                                                                                                       LM00366    
                  END OF CONDITIONAL                                                              *288 LM00367    
                  TRANSFER TO NXRQ                                                                *289 LM00368    
                                                                                                       LM00369    
      EOF         PRINTCOMMENT $0E1N1D0 1O1F0 1F1I1L1E0 1R1E1A1C1H1E1D0 1B1Y0:$                   *290 LM00370    
                  TYPOUT.(EDLIN, COUNT)                                                           *291 LM00371    
                  LENGTH = 0                                                                      *292 LM00372    
                  OK = 0B                                                                         *293 LM00373    
                  TRANSFER TO NXRQ                                                                *294 LM00374    
                                                                                                       LM00375    
                 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                           LM00376    
                                                                                                       LM00377    
                 .. SUBROUTINES.                                                                       LM00378    
                                                                                                       LM00379    
       CLSOUT.   .. FUNCTION TO MOVE POINTER BACK TO TOP OF FILE.                                      LM00380    
                                                                                                       LM00381    
                  INTERNAL FUNCTION                                                               *295 LM00382    
                  ENTRY TO CLSOUT.                                                                *296 LM00383    
                    CLOSEW.                                                                       *297 LM00384    
                    DELFIL.(IN1, FI, DL2)                                                         *298 LM00385    
      DL2           CHFILE.(IN, FI, -0, IN1)                                                      *299 LM00386    
                    SEEK.(IN1, FI, CHN)                                                           *300 LM00387    
                    ASSIGN.(IN, FI)                                                               *301 LM00388    
                    OK = 1B                                                                       *302 LM00389    
                    LENGTH = 0                                                                    *303 LM00390    
                    FSTPAS = 0B                                                                   *304 LM00391    
                    FUNCTION RETURN                                                               *305 LM00392    
                  END OF FUNCTION                                                                 *306 LM00393    
                                                                                                       LM00394    
        GET.     .. FUNCTION TO OBTAIN ARGUMENT WORD IN HOLLERITH.                                     LM00395    
                                                                                                       LM00396    
                  INTERNAL FUNCTION                                                               *307 LM00397    
                  ENTRY TO GET.                                                                   *308 LM00398    
                    WORD = $ $                                                                    *309 LM00399    
      SCANLP        THROUGH SCANLP, FOR EDCT = EDCT, 1,                                           *310 LM00400    
                1   (EDLIN(EDCT+1).NE.BLANK) .OR. (EDCT+1.GE.COUNT)                               *310 LM00401    
       GTLP         EDCT = EDCT + 1                                                               *311 LM00402    
                    WHENEVER EDLIN(EDCT) .E. BLANK, FUNCTION RETURN WORD                          *312 LM00403    
                    WHENEVER EDLIN(EDCT) .E. TAB .OR. EDCT .GE. COUNT                             *313 LM00404    
                      EDCT = EDCT - 1                                                             *314 LM00405    
                      FUNCTION RETURN WORD                                                        *315 LM00406    
                    END OF CONDITIONAL                                                            *316 LM00407    
                    WORD = (WORD .LS. 6) .V. HOL.(EDLIN(EDCT))                                    *317 LM00408    
                    TRANSFER TO GTLP                                                              *318 LM00409    
                  END OF FUNCTION                                                                 *319 LM00410    
                                                                                                       LM00411    
       PRNT.     ..  FUNCTION TO PRINT A LINE WITH COLOR SHIFTS.                                       LM00412    
                                                                                                       LM00413    
                  INTERNAL FUNCTION(STAR, EN)                                                     *320 LM00414    
                  ENTRY TO PRNT.                                                                  *321 LM00415    
                    TYPOUT.(LINE, STAR-1)                                                         *322 LM00416    
                    TYPOUT.(REDS, 1)                                                              *323 LM00417    
                    TYPOUT.(LINE(STAR-1), EN-STAR+1)                                              *324 LM00418    
                    TYPOUT.(BLACKS, 1)                                                            *325 LM00419    
                    TYPOUT.(LINE(EN), LENGTH-EN)                                                  *326 LM00420    
                    FUNCTION RETURN                                                               *327 LM00421    
                  END OF FUNCTION                                                                 *328 LM00422    
                                                                                                       LM00423    
                 .. FUNCTION TO INITIALIZE CARD IMAGE CONVERTER.                                       LM00424    
                                                                                                       LM00425    
                  INTERNAL FUNCTION                                                               *329 LM00426    
                  ENTRY TO CDINIT.                                                                *330 LM00427    
                  TBINIT.                                                                         *331 LM00428    
                  SETCOL.(72)                                                                     *332 LM00429    
                  SINHB.(0)                                                                       *333 LM00430    
                  FUNCTION RETURN                                                                 *334 LM00431    
                  END OF FUNCTION                                                                 *335 LM00432    
                                                                                                       LM00433    
                 .. FUNCTION TO INITIALIZE TAB SETTINGS.                                               LM00434    
                                                                                                       LM00435    
                  INTERNAL FUNCTION                                                               *336 LM00436    
                  ENTRY TO TBINIT.                                                                *337 LM00437    
                  NEWTBS.                                                                         *338 LM00438    
                  NEWBKS.                                                                         *339 LM00439    
                  WHENEVER OLDSEC .E. $   MAD$                                                    *340 LM00440    
                    THROUGH MTB, FOR VALUES OF TB = 12,17,22,27,32,37,42,47,55                    *341 LM00441    
      MTB             TABSET.(TB)                                                                 *342 LM00442    
                    BKSET.(12)                                                                    *343 LM00443    
                  OR WHENEVER OLDSEC .E. $   FAP$                                                 *344 LM00444    
                    THROUGH FTB, FOR VALUES OF TB = 8,16,30,34,38,42,46,55                        *345 LM00445    
      FTB             TABSET.(TB)                                                                 *346 LM00446    
                  OR WHENEVER OLDSEC .E. $MADTRN$                                                 *347 LM00447    
                    THROUGH F2TB, FOR VALUES OF TB = 7,12,17,22,27,32,37,42,47,55                 *348 LM00448    
      F2TB            TABSET.(TB)                                                                 *349 LM00449    
                    BKSET.(7)                                                                     *350 LM00450    
                  OR WHENEVER OLDSEC .E. $ ALGOL$                                                 *351 LM00451    
                    THROUGH ATB, FOR VALUES OF TB = 11,16,21,26,31,36,41,46,51,56,                *352 LM00452    
                1     61,66                                                                       *352 LM00453    
      ATB             TABSET.(TB)                                                                 *353 LM00454    
                  OTHERWISE                                                                       *354 LM00455    
                    PRINT COMMENT $OT1A1B1S0 1N1O1T0 1S1E1T0.$                                    *355 LM00456    
                  END OF CONDITIONAL                                                              *356 LM00457    
                  FUNCTION RETURN                                                                 *357 LM00458    
                  END OF FUNCTION                                                                 *358 LM00459    
                                                                                                       LM00460    
                  END OF PROGRAM                                                                  *359 LM00461    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   04661 TRANSFER VECTOR LENGTH  00040 PROGRAM BEGINS    01645
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      APPEND 00046   4        DLQ1   00053   4        GLOBAL 00710   2        MVLP   00045   4        REPLAC 00045   4  
      ARGLP  00047   4        DLQ2   00054   4        GTBK   00061   4        NCOL   01474   1        RETYPE 00076   4  
      ATB    00045   4        DOWN   00125   1        GTLP   00062   4        NEWNM  00070   4        RPLC   00045   4  
      ATNAM  00107 A 1        DREAD  00045   4        GTTB   00063   4        NOCOMP 00071   4        SCANLP 00045   4  
      BK     00110   1        EDCT   00126   1        IN1    00711 A 1        NONAME 00072   4        SECNAM 01507   1  
      BLACKS 00112 A 1        EDIT   00055   4        INCR   00712   1        NPRNT  01475   1        SHIFT  00077   4  
      BLANK  00113   1        EDLIN  00700 A 1        INPUT  00064   4        N      01476   1        SRCHLP 00100   4  
      BRIEF  00114 A 2        EOF    00056   4        IN     00713 A 1        NTFND  00073   4        SRTST  00101   4  
      BUFSIZ 00115 A 1        EST2   00701   1        INSERT 00065   4        NXRQ   00074   4        STFND  00102   4  
      CHEND  00116   1        F2TB   00045   4        I      00714   1        NXT    00045   4        STR1   01510   1  
      CHNG   00117   2        FENCE  00702 A 1        J      00715   1        OCOUNT 01477   1        STR2   01511   1  
      CHN    00050   4        FILOUT 00045   4        K      00716   1        OK     01500 A 2        TAB    01512   1  
      CHST   00120   1        FIND   00057   4        LENGTH 00717   1        OLDNAM 01501   1        TAGN   00103   4  
      CLRSW  00121   2        FI     00703   1        LINE   01471 A 1        OLDSEC 01502   1        TB     01513   1  
      COMPAR 00045   4        FNDND  00704   1        LOCATE 01472   1        PNTLP  00075   4        TEM    01514   1  
      COUNT  00122   1        FNDST  00705   1        LOCSCN 00066   4        PRINAM 01503   1        TOPLP  00104   4  
      CWD    00123   1        FSTNO  00706   1        LOOK   00067   4        QLOOP1 00045   4        TOPNAM 01515   1  
      DEFALT 00124   1        FSTPAS 00707   2        MCHNG  01473   1        QLOOP  00045   4        UP     01516   1  
      DL1    00051   4        FTB    00045   4        MTB    00045   4        QUOTE  01504   1        WORD   01517   1  
      DL2    00052   4        GIVUP  00060   4        MVDWN  00045   4        REDS   01506 A 1                          
0FUNCTION DICTIONARY    
      ASSIGN 00000   1        BIN    00001   1        BKSET  00002   1        BOTTOM 00003   1        CANON  00004   1  
      CHFILE 00005   1        CLOSEW 00006   1        CLRNAM 00007   1        COMARG 00010   1        DELFIL 00011   1  
      ENDRD  00012   1        EXIT   00013   1        GETVAL 00014   1        HOL    00015   1        .PCOMT 00016   1  
      .SETUP 00017   1        NEWBKS 00020   1        NEWTBS 00021   1        READ   00022   1        RENAME 00023   1  
      SEEK   00024   1        SETBK  00025   1        SETCOL 00026   1        SETERS 00027   1        SETKIL 00030   1  
      SETSR  00031   1        SINHB  00032   1        TABSET 00033   1        TYPEIN 00034   1        TYPOUT 00035   1  
      WHOAMI 00036   1        WRITE  00037   1        CDINIT 00040   1        CLSOUT 00041   1        GET    00042   1  
      PRNT   00043   1        TBINIT 00044   1                                                                          
0ABSOLUTE CONSTANTS     
 01557 +000000000102     01556 +000000000075     01555 +000000000070     01553 +000000000063     01547 +000000000051    
 01544 +000000000044     01541 +000000000037     01536 +000000000032     01534 +000000000025     01530 +000000000013    
 01572 -202143274643     01525 +000000000007     01570 -042124635145     01551 +000000000056     01546 +000000000046    
 01543 +000000000042     01540 +000000000036     01532 +000000000020     01526 +000000000010     01605 -206060262147    
 01554 +000000000067     01552 +000000000057     01550 +000000000052     01545 +000000000045     01542 +000000000040    
 01537 +000000000033     01535 +000000000026     01533 +000000000021     01531 +000000000014     01606 -206060442124    
 01524 +000000000006     01600 -206026314325     01560 +000000000110     01575 -204523464362     01611 -206060604523    
 01527 +000000000012     01642 -222551312143     01636 -206060606251     01573 -202242622563     01631 -206060606054    
 01643 -232122622563     01637 -206060606322     01604 -206050643163     01627 -206060606050     01641 -206247433163    
 01633 -206060606062     01621 -206060606027     01632 -206060606060     01564 +233021452725     01615 -206060606023    
 01640 -206060634647     01634 -206060606063     01576 -204751314563     01626 -206060606047     01601 -206026314524    
 01620 -206060606026     01567 -034623216325     01624 -206060606043     01607 -206060462626     01612 -206060604645    
 01644 -252551312670     01635 -206060606065     01577 -206022426247     01610 -206060602242     01602 -206042314343    
 01623 -206060606042     01574 -202551216225     01617 -206060606025     01571 -112563704725     01630 -206060606051    
 01561 +214747254524     01613 -206060606021     01562 +224663634644     01614 -206060606022     01566 +314562255163    
 01622 -206060606031     01603 -206045256763     01625 -206060606045     01565 +242543256325     01616 -206060606024    
 01520 +000000000000     01523 +000000000003     01522 +000000000002     01521 +000000000001     01563 +233000000000    
0STATEMENT DICTIONARY   
 00046 TXL -302240002225       00047 TXL -302763002760       00050 TXL -303660003657       00051 TXL -303657003652      
 00052 TXL -303736003727       00053 TXL -303366003362       00054 TXL -303367003366       00055 TXL -301737001731      
 00056 TXL -303706003674       00057 TXL -302421002414       00060 TXL -303204003172       00061 TXL -303440003434      
 00062 TXL -304021004016       00063 TXL -303413003407       00064 TXL -302120002114       00065 TXL -302114002106      
 00066 TXL -302573002572       00067 TXL -302562002552       00070 TXL -303313003301       00071 TXL -303117003113      
 00072 TXL -303627003616       00073 TXL -302433002430       00074 TXL -301743001737       00075 TXL -302614002611      
 00076 TXL -302225002223       00077 TXL -303021003007       00100 TXL -303051003046       00101 TXL -303056003051      
 00102 TXL -303125003123       00103 TXL -302511002503       00104 TXL -302662002657                                    
0PROGRAM    
                 VECTOR VALUES FENCE = 777777777777K                                001  LM00010
 01645 TSX +0 07400 4 00017    00702     -3 77777 7 77777                                                               
                 VECTOR VALUES IN = $(INPUT$                                        002  LM00011
 00713     -3 43145 4 76463                                                                                             
                 VECTOR VALUES IN1 = $(INPT1$                                       003  LM00012
 00711     -3 43145 4 76301                                                                                             
                 VECTOR VALUES BRIEF = 0B                                           004  LM00013
 00114     +0 00000 0 00000                                                                                             
                 VECTOR VALUES OK = 0B                                              005  LM00014
 01500     +0 00000 0 00000                                                                                             
                 VECTOR VALUES BUFSIZ = 360                                         006  LM00015
 00115     +0 00000 0 00550                                                                                             
                 DIMENSION LINE(361), EDLIN(361)                                    007  LM00016
                 DIMENSION REDS(1), BLACKS(1)                                       008  LM00017
                 D'N ATNAM(2)                                                       009  LM00018
                 NORMAL MODE IS INTEGER                                             010  LM00019
                 BOOLEAN OK, GLOBAL, FSTPAS                                         011  LM00020
                 BOOLEAN CHNG, CLRSW, BRIEF                                         012  LM00021
                 WHOAMI.(ATNAM(2)...2)                                              013  LM00029
 01646 TSX +0 07400 4 00036    01647 TIX +2 01522 0 00105                                                               
                 FI = ATNAM(1)                                                      014  LM00030
 01650 CLA +0 50000 0 00106    01651 STO +0 60100 0 00703                                                               
                 GETVAL.(BLANK, TAB, DEFALT, MCHNG, REDS(1), BLACKS(1))             015  LM00031
 01652 TSX +0 07400 4 00014    01653 TXH +3 00000 0 00113    01654 TXH +3 00000 0 01512    01655 TXH +3 00000 0 00124   
 01656 TXH +3 00000 0 01473    01657 TXH +3 00000 0 01505    01660 TXH +3 00000 0 00111                                 
                 CLRNAM.(IN, FI, CHN, 1B)                                           016  LM00032
 01661 TSX +0 07400 4 00007    01662 TXH +3 00000 0 00713    01663 TXH +3 00000 0 00703    01664 TXH +3 00000 0 00050   
 01665 TXH +3 00000 0 01521                                                                                             
                 CLRNAM.(IN1, FI, CHN, 1B)                                          017  LM00033
 01666 TSX +0 07400 4 00007    01667 TXH +3 00000 0 00711    01670 TXH +3 00000 0 00703    01671 TXH +3 00000 0 00050   
 01672 TXH +3 00000 0 01521                                                                                             
                 ASSIGN.(IN, FI)                                                    018  LM00034
 01673 TSX +0 07400 4 00000    01674 TXH +3 00000 0 00713    01675 TXH +3 00000 0 00703                                 
                 OLDNAM = COMARG.(1)                                                019  LM00035
 01676 TSX +0 07400 4 00010    01677 TXH +3 00000 0 01521    01700 STO +0 60100 0 01501                                 
                 OLDSEC = DEFALT                                                    020  LM00036
 01701 CLA +0 50000 0 00124    01702 STO +0 60100 0 01502                                                               
                 W'R OLDNAM .E. FENCE                                               021  LM00037
 01703 CLA +0 50000 0 01501    01704 SUB +0 40200 0 00702    01705 TNZ -0 10000 0 01710                                 
                   CDINIT.                                                          022  LM00038
 01706 TSX +0 07400 4 00040                                                                                             
                   T'O INSERT                                                       023  LM00039
 01707 TRA +0 02000 0 00065                                                                                             
                 E'L                                                                024  LM00040
                 OLDSEC = COMARG.(2)                                                025  LM00041
 01710 TSX +0 07400 4 00010    01711 TXH +3 00000 0 01522    01712 STO +0 60100 0 01502                                 
                 WHENEVER OLDSEC .E. FENCE, OLDSEC = DEFALT                         026  LM00042
 01713 CLA +0 50000 0 01502    01714 SUB +0 40200 0 00702    01715 TNZ -0 10000 0 01720    01716 CLA +0 50000 0 00124   
 01717 STO +0 60100 0 01502                                                                                             
                 CDINIT.                                                            027  LM00043
 01720 TSX +0 07400 4 00040                                                                                             
                 SEEK.(OLDNAM, OLDSEC, INSERT)                                      028  LM00044
 01721 TSX +0 07400 4 00024    01722 TXH +3 00000 0 01501    01723 TXH +3 00000 0 01502    01724 TXH +3 00000 0 00065   
                 FSTPAS = 1B                                                        029  LM00045
 01725 CLA +0 50000 0 01521    01726 STO +0 60100 0 00707                                                               
                 OK = 1B                                                            030  LM00046
 01727 CLA +0 50000 0 01521    01730 STO +0 60100 0 01500                                                               
      EDIT       WHENEVER .NOT. BRIEF, PRINT COMMENT $0E1D1I1T$                     031  LM00050
 01731 ZET +0 52000 0 00114    01732 TRA +0 02000 0 01737    01733 TSX +0 07400 4 00016    01734     +0 00000 0 00002   
 01735     +0 02501 2 40131    01736     +0 16360 6 06060                                                               
      NXRQ       COUNT = TYPEIN.(EDLIN, BUFSIZ)                                     032  LM00054
 01737 TSX +0 07400 4 00034    01740 TXH +3 00000 0 00700    01741 TXH +3 00000 0 00115    01742 STO +0 60100 0 00122   
                 WHENEVER EDLIN(1) .E. MCHNG .AND. COUNT .L. 3                      033  LM00055
                1     , TRANSFER TO INSERT                                          033  LM00056
 01743 CLA +0 50000 0 00122    01744 SUB +0 40200 0 01523    01745 TZE +0 10000 0 01753    01746 TPL +0 12000 0 01753   
 01747 CLA +0 50000 0 00677    01750 SUB +0 40200 0 01473    01751 TNZ -0 10000 0 01753    01752 TRA +0 02000 0 00065   
                 WHENEVER COUNT .L. 2, TRANSFER TO NXRQ                             034  LM00057
 01753 CLA +0 50000 0 00122    01754 SUB +0 40200 0 01522    01755 TZE +0 10000 0 01760    01756 TPL +0 12000 0 01760   
 01757 TRA +0 02000 0 00074                                                                                             
                 EDCT = 0                                                           035  LM00058
 01760 CLA +0 50000 0 01520    01761 STO +0 60100 0 00126                                                               
                 CWD = GET.(0)                                                      036  LM00059
 01762 TSX +0 07400 4 00042    01763 TXH +3 00000 0 01520    01764 STO +0 60100 0 00123                                 
                 WHENEVER CWD .E. $DELETE$ .OR. CWD .E. $     D$                    037  LM00061
 01765 CLA +0 50000 0 00123    01766 SUB +0 40200 0 01616    01767 TZE +0 10000 0 01773    01770 CLA +0 50000 0 00123   
 01771 SUB +0 40200 0 01565    01772 TNZ -0 10000 0 02024                                                               
                   N = BIN.(GET.(0))                                                038  LM00062
 01773 TSX +0 07400 4 00042    01774 TXH +3 00000 0 01520    01775 STO +0 60100 0 04656    01776 TSX +0 07400 4 00001   
 01777 TXH +3 00000 0 04656    02000 STO +0 60100 0 01476                                                               
                   THROUGH DREAD, FOR I = 1, 1, I .GE. N                            039  LM00063
 02001 CLA +0 50000 0 01521    02002 STO +0 60100 0 00714    02003 TRA +0 02000 0 02007    02004 CLA +0 50000 0 00714   
 02005 ADD +0 40000 0 01521    02006 STO +0 60100 0 00714    02007 CLA +0 50000 0 00714    02010 SUB +0 40200 0 01476   
 02011 TZE +0 10000 0 02021    02012 TPL +0 12000 0 02021                                                               
       DREAD         LENGTH = READ.(LINE, BUFSIZ, EOF)                              040  LM00064
 02013 TSX +0 07400 4 00022    02014 TXH +3 00000 0 01471    02015 TXH +3 00000 0 00115    02016 TXH +3 00000 0 00056   
 02017 STO +0 60100 0 00717    02020 TRA +0 02000 0 02004                                                               
                   LENGTH = 0                                                       041  LM00065
 02021 CLA +0 50000 0 01520    02022 STO +0 60100 0 00717                                                               
                 OR WHENEVER CWD .E. $  NEXT$ .OR. CWD .E. $     N$                 042  LM00067
 02023 TRA +0 02000 0 03673    02024 CLA +0 50000 0 00123    02025 SUB +0 40200 0 01625    02026 TZE +0 10000 0 02032   
 02027 CLA +0 50000 0 00123    02030 SUB +0 40200 0 01603    02031 TNZ -0 10000 0 02074                                 
                   N = BIN.(GET.(0))                                                043  LM00068
 02032 TSX +0 07400 4 00042    02033 TXH +3 00000 0 01520    02034 STO +0 60100 0 04656    02035 TSX +0 07400 4 00001   
 02036 TXH +3 00000 0 04656    02037 STO +0 60100 0 01476                                                               
                   WHENEVER N .E. 0, N = 1                                          044  LM00069
 02040 CLA +0 50000 0 01476    02041 SUB +0 40200 0 01520    02042 TNZ -0 10000 0 02045    02043 CLA +0 50000 0 01521   
 02044 STO +0 60100 0 01476                                                                                             
                   THROUGH NXT, FOR I = 1, 1, I .G. N                               045  LM00070
 02045 CLA +0 50000 0 01521    02046 STO +0 60100 0 00714    02047 TRA +0 02000 0 02053    02050 CLA +0 50000 0 00714   
 02051 ADD +0 40000 0 01521    02052 STO +0 60100 0 00714    02053 CLA +0 50000 0 00714    02054 SUB +0 40200 0 01476   
 02055 TZE +0 10000 0 02057    02056 TPL +0 12000 0 02073                                                               
                     WRITE.(LINE, LENGTH)                                           046  LM00071
 02057 TSX +0 07400 4 00037    02060 TXH +3 00000 0 01471    02061 TXH +3 00000 0 00717                                 
                     WHENEVER .NOT. OK, CLSOUT.                                     047  LM00072
 02062 ZET +0 52000 0 01500    02063 TRA +0 02000 0 02065    02064 TSX +0 07400 4 00041                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              048  LM00073
 02065 TSX +0 07400 4 00022    02066 TXH +3 00000 0 01471    02067 TXH +3 00000 0 00115    02070 TXH +3 00000 0 00056   
 02071 STO +0 60100 0 00717                                                                                             
       NXT           CONTINUE                                                       049  LM00074
 02072 TRA +0 02000 0 02050                                                                                             
                 OR WHENEVER CWD .E. $INSERT$ .OR. CWD .E. $     I$                 050  LM00076
 02073 TRA +0 02000 0 03673    02074 CLA +0 50000 0 00123    02075 SUB +0 40200 0 01622    02076 TZE +0 10000 0 02102   
 02077 CLA +0 50000 0 00123    02100 SUB +0 40200 0 01566    02101 TNZ -0 10000 0 02156                                 
                   WRITE.(LINE, LENGTH)                                             051  LM00077
 02102 TSX +0 07400 4 00037    02103 TXH +3 00000 0 01471    02104 TXH +3 00000 0 00717                                 
                   TRANSFER TO RETYPE                                               052  LM00078
 02105 TRA +0 02000 0 00076                                                                                             
      INSERT       WHENEVER .NOT. BRIEF, PRINT COMMENT $0I1N1P1U1T$                 053  LM00080
 02106 ZET +0 52000 0 00114    02107 TRA +0 02000 0 02114    02110 TSX +0 07400 4 00016    02111     +0 00000 0 00002   
 02112     +0 03101 4 50147    02113     +0 16401 6 36060                                                               
       INPUT       COUNT = TYPEIN.(EDLIN, BUFSIZ)                                   054  LM00081
 02114 TSX +0 07400 4 00034    02115 TXH +3 00000 0 00700    02116 TXH +3 00000 0 00115    02117 STO +0 60100 0 00122   
                   WHENEVER COUNT .L. 3 .AND. EDLIN(1) .E. MCHNG                    055  LM00082
                1     , TRANSFER TO EDIT                                            055  LM00083
 02120 CLA +0 50000 0 00677    02121 SUB +0 40200 0 01473    02122 TNZ -0 10000 0 02130    02123 CLA +0 50000 0 00122   
 02124 SUB +0 40200 0 01523    02125 TZE +0 10000 0 02130    02126 TPL +0 12000 0 02130    02127 TRA +0 02000 0 00055   
                   WRITE.(LINE, LENGTH)                                             056  LM00084
 02130 TSX +0 07400 4 00037    02131 TXH +3 00000 0 01471    02132 TXH +3 00000 0 00717                                 
                   THROUGH MVLP, FOR I = 1, 1, I .G. COUNT                          057  LM00085
 02133 CLA +0 50000 0 01521    02134 STO +0 60100 0 00714    02135 TRA +0 02000 0 02141    02136 CLA +0 50000 0 00714   
 02137 ADD +0 40000 0 01521    02140 STO +0 60100 0 00714    02141 CLA +0 50000 0 00714    02142 SUB +0 40200 0 00122   
 02143 TZE +0 10000 0 02145    02144 TPL +0 12000 0 02152                                                               
       MVLP          LINE(I) = EDLIN(I)                                             058  LM00086
 02145 LXA +0 53400 1 00714    02146 LXA +0 53400 2 00714    02147 CLA +0 50000 2 00700    02150 STO +0 60100 1 01471   
 02151 TRA +0 02000 0 02136                                                                                             
                   LENGTH = COUNT                                                   059  LM00087
 02152 CLA +0 50000 0 00122    02153 STO +0 60100 0 00717                                                               
                   TRANSFER TO INPUT                                                060  LM00088
 02154 TRA +0 02000 0 00064                                                                                             
                 OR WHENEVER CWD .E. $BOTTOM$ .OR. CWD .E. $     B$                 061  LM00090
 02155 TRA +0 02000 0 03673    02156 CLA +0 50000 0 00123    02157 SUB +0 40200 0 01614    02160 TZE +0 10000 0 02164   
 02161 CLA +0 50000 0 00123    02162 SUB +0 40200 0 01562    02163 TNZ -0 10000 0 02176                                 
                   WRITE.(LINE, LENGTH)                                             062  LM00091
 02164 TSX +0 07400 4 00037    02165 TXH +3 00000 0 01471    02166 TXH +3 00000 0 00717                                 
                   LENGTH = 0                                                       063  LM00092
 02167 CLA +0 50000 0 01520    02170 STO +0 60100 0 00717                                                               
                   WHENEVER OK, BOTTOM.                                             064  LM00093
 02171 NZT -0 52000 0 01500    02172 TRA +0 02000 0 02174    02173 TSX +0 07400 4 00003                                 
                   TRANSFER TO INSERT                                               065  LM00094
 02174 TRA +0 02000 0 00065                                                                                             
                 OR WHENEVER CWD .E. $APPEND$ .OR. CWD .E. $     A$                 066  LM00096
 02175 TRA +0 02000 0 03673    02176 CLA +0 50000 0 00123    02177 SUB +0 40200 0 01613    02200 TZE +0 10000 0 02204   
 02201 CLA +0 50000 0 00123    02202 SUB +0 40200 0 01561    02203 TNZ -0 10000 0 02215                                 
                   WHENEVER LENGTH .G. 0, LENGTH = LENGTH - 1                       067  LM00097
 02204 CLA +0 50000 0 00717    02205 SUB +0 40200 0 01520    02206 TZE +0 10000 0 02213    02207 TMI -0 12000 0 02213   
 02210 CLA +0 50000 0 00717    02211 SUB +0 40200 0 01521    02212 STO +0 60100 0 00717                                 
                   TRANSFER TO APPEND                                               068  LM00098
 02213 TRA +0 02000 0 00046                                                                                             
                 OR WHENEVER CWD .E. $RETYPE$ .OR. CWD .E. $     R$                 069  LM00100
 02214 TRA +0 02000 0 03673    02215 CLA +0 50000 0 00123    02216 SUB +0 40200 0 01630    02217 TZE +0 10000 0 02223   
 02220 CLA +0 50000 0 00123    02221 SUB +0 40200 0 01571    02222 TNZ -0 10000 0 02251                                 
       RETYPE      LENGTH = 0                                                       070  LM00101
 02223 CLA +0 50000 0 01520    02224 STO +0 60100 0 00717                                                               
      APPEND       THROUGH RPLC, FOR EDCT = EDCT + 1, 1, EDCT .G. COUNT             071  LM00102
 02225 CLA +0 50000 0 00126    02226 ADD +0 40000 0 01521    02227 STO +0 60100 0 00126    02230 TRA +0 02000 0 02234   
 02231 CLA +0 50000 0 00126    02232 ADD +0 40000 0 01521    02233 STO +0 60100 0 00126    02234 CLA +0 50000 0 00126   
 02235 SUB +0 40200 0 00122    02236 TZE +0 10000 0 02240    02237 TPL +0 12000 0 02250                                 
                     LENGTH = LENGTH + 1                                            072  LM00103
 02240 CLA +0 50000 0 00717    02241 ADD +0 40000 0 01521    02242 STO +0 60100 0 00717                                 
       RPLC          LINE(LENGTH) = EDLIN(EDCT)                                     073  LM00104
 02243 LXA +0 53400 1 00717    02244 LXA +0 53400 2 00126    02245 CLA +0 50000 2 00700    02246 STO +0 60100 1 01471   
 02247 TRA +0 02000 0 02231                                                                                             
                 OR WHENEVER CWD .E. $ ERASE$ .OR. CWD .E. $     E$                 074  LM00106
 02250 TRA +0 02000 0 03673    02251 CLA +0 50000 0 00123    02252 SUB +0 40200 0 01617    02253 TZE +0 10000 0 02257   
 02254 CLA +0 50000 0 00123    02255 SUB +0 40200 0 01574    02256 TNZ -0 10000 0 02275                                 
                   WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETERS.(EDLIN(EDCT+1))        075  LM00107
 02257 CLA +0 50000 0 00126    02260 ADD +0 40000 0 01521    02261 PAX +0 73400 1 00000    02262 CLA +0 50000 1 00700   
 02263 SUB +0 40200 0 00113    02264 TZE +0 10000 0 02274    02265 CLA +0 50000 0 00126    02266 ADD +0 40000 0 01521   
 02267 SUB +0 40200 0 02270    02270 TXH +3 00000 0 00700    02271 STA +0 62100 0 02273    02272 TSX +0 07400 4 00027   
 02273 TXH +3 00000 0 00000                                                                                             
                 OR WHENEVER CWD .E. $  KILL$ .OR. CWD .E. $     K$                 076  LM00109
 02274 TRA +0 02000 0 03673    02275 CLA +0 50000 0 00123    02276 SUB +0 40200 0 01623    02277 TZE +0 10000 0 02303   
 02300 CLA +0 50000 0 00123    02301 SUB +0 40200 0 01602    02302 TNZ -0 10000 0 02321                                 
                   WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETKIL.(EDLIN(EDCT+1))        077  LM00110
 02303 CLA +0 50000 0 00126    02304 ADD +0 40000 0 01521    02305 PAX +0 73400 1 00000    02306 CLA +0 50000 1 00700   
 02307 SUB +0 40200 0 00113    02310 TZE +0 10000 0 02320    02311 CLA +0 50000 0 00126    02312 ADD +0 40000 0 01521   
 02313 SUB +0 40200 0 02314    02314 TXH +3 00000 0 00700    02315 STA +0 62100 0 02317    02316 TSX +0 07400 4 00030   
 02317 TXH +3 00000 0 00000                                                                                             
                 O'R CWD .E. $  BKSP$ .OR. CWD .E. $    BK$                         078  LM00112
 02320 TRA +0 02000 0 03673    02321 CLA +0 50000 0 00123    02322 SUB +0 40200 0 01610    02323 TZE +0 10000 0 02327   
 02324 CLA +0 50000 0 00123    02325 SUB +0 40200 0 01577    02326 TNZ -0 10000 0 02345                                 
                   W'R EDLIN(EDCT+1) .NE. BLANK, SETBK.(EDLIN(EDCT+1))              079  LM00113
 02327 CLA +0 50000 0 00126    02330 ADD +0 40000 0 01521    02331 PAX +0 73400 1 00000    02332 CLA +0 50000 1 00700   
 02333 SUB +0 40200 0 00113    02334 TZE +0 10000 0 02344    02335 CLA +0 50000 0 00126    02336 ADD +0 40000 0 01521   
 02337 SUB +0 40200 0 02340    02340 TXH +3 00000 0 00700    02341 STA +0 62100 0 02343    02342 TSX +0 07400 4 00025   
 02343 TXH +3 00000 0 00000                                                                                             
                 OR WHENEVER CWD .E. $VERIFY$ .OR. CWD .E. $     V$                 080  LM00115
 02344 TRA +0 02000 0 03673    02345 CLA +0 50000 0 00123    02346 SUB +0 40200 0 01635    02347 TZE +0 10000 0 02353   
 02350 CLA +0 50000 0 00123    02351 SUB +0 40200 0 01644    02352 TNZ -0 10000 0 02372                                 
                   CWD = GET.(0)                                                    081  LM00116
 02353 TSX +0 07400 4 00042    02354 TXH +3 00000 0 01520    02355 STO +0 60100 0 00123                                 
                   WHENEVER CWD .E. $    ON$                                        082  LM00117
 02356 CLA +0 50000 0 00123    02357 SUB +0 40200 0 01612    02360 TNZ -0 10000 0 02364                                 
                     BRIEF = 0B                                                     083  LM00118
 02361 CLA +0 50000 0 01520    02362 STO +0 60100 0 00114                                                               
                   OR WHENEVER CWD .E. $   OFF$                                     084  LM00119
 02363 TRA +0 02000 0 02371    02364 CLA +0 50000 0 00123    02365 SUB +0 40200 0 01607    02366 TNZ -0 10000 0 02371   
                     BRIEF = 1B                                                     085  LM00120
 02367 CLA +0 50000 0 01521    02370 STO +0 60100 0 00114                                                               
                   END OF CONDITIONAL                                               086  LM00121
                 OR WHENEVER CWD .E. $LOCATE$ .OR. CWD .E. $     L$                 087  LM00123
 02371 TRA +0 02000 0 03673    02372 CLA +0 50000 0 00123    02373 SUB +0 40200 0 01624    02374 TZE +0 10000 0 02400   
 02375 CLA +0 50000 0 00123    02376 SUB +0 40200 0 01567    02377 TNZ -0 10000 0 02404                                 
                   LOCATE = 1                                                       088  LM00124
 02400 CLA +0 50000 0 01521    02401 STO +0 60100 0 01472                                                               
                   TRANSFER TO FIND                                                 089  LM00125
 02402 TRA +0 02000 0 00057                                                                                             
                 OR WHENEVER CWD .E. $  FIND$ .OR. CWD .E. $     F$                 090  LM00127
 02403 TRA +0 02000 0 03673    02404 CLA +0 50000 0 00123    02405 SUB +0 40200 0 01620    02406 TZE +0 10000 0 02412   
 02407 CLA +0 50000 0 00123    02410 SUB +0 40200 0 01601    02411 TNZ -0 10000 0 02575                                 
                   LOCATE = 0                                                       091  LM00128
 02412 CLA +0 50000 0 01520    02413 STO +0 60100 0 01472                                                               
      FIND         WHENEVER EDCT+1 .GE. COUNT                                       092  LM00129
 02414 CLA +0 50000 0 00126    02415 ADD +0 40000 0 01521    02416 SUB +0 40200 0 00122    02417 TZE +0 10000 0 02421   
 02420 TMI -0 12000 0 02426                                                                                             
                     COUNT = OCOUNT                                                 093  LM00130
 02421 CLA +0 50000 0 01477    02422 STO +0 60100 0 00122                                                               
                     EDCT = EDCT + 1                                                094  LM00131
 02423 CLA +0 50000 0 00126    02424 ADD +0 40000 0 01521    02425 STO +0 60100 0 00126                                 
                   END OF CONDITIONAL                                               095  LM00132
                   OCOUNT = COUNT                                                   096  LM00133
 02426 CLA +0 50000 0 00122    02427 STO +0 60100 0 01477                                                               
       NTFND       WRITE.(LINE, LENGTH)                                             097  LM00134
 02430 TSX +0 07400 4 00037    02431 TXH +3 00000 0 01471    02432 TXH +3 00000 0 00717                                 
                   WHENEVER  .NOT. OK, CLSOUT.                                      098  LM00135
 02433 ZET +0 52000 0 01500    02434 TRA +0 02000 0 02436    02435 TSX +0 07400 4 00041                                 
                   LENGTH = READ.(LINE, BUFSIZ, EOF)                                099  LM00136
 02436 TSX +0 07400 4 00022    02437 TXH +3 00000 0 01471    02440 TXH +3 00000 0 00115    02441 TXH +3 00000 0 00056   
 02442 STO +0 60100 0 00717                                                                                             
                   THROUGH LOCSCN, FOR K=0, 1,K.G.LOCATE*(LENGTH-COUNT+EDCT)        100  LM00137
 02443 CLA +0 50000 0 01520    02444 STO +0 60100 0 00716    02445 TRA +0 02000 0 02451    02446 CLA +0 50000 0 00716   
 02447 ADD +0 40000 0 01521    02450 STO +0 60100 0 00716    02451 CLA +0 50000 0 00717    02452 SUB +0 40200 0 00122   
 02453 ADD +0 40000 0 00126    02454 XCA +0 13100 0 00000    02455 MPY +0 20000 0 01472    02456 XCA +0 13100 0 00000   
 02457 CHS +0 76000 0 00002    02460 ADD +0 40000 0 00716    02461 TZE +0 10000 0 02463    02462 TPL +0 12000 0 02573   
                     J = K                                                          101  LM00138
 02463 CLA +0 50000 0 00716    02464 STO +0 60100 0 00715                                                               
                     THROUGH LOOK, FOR I = EDCT+1, 1, I .GE. COUNT                  102  LM00139
 02465 CLA +0 50000 0 00126    02466 ADD +0 40000 0 01521    02467 STO +0 60100 0 00714    02470 TRA +0 02000 0 02474   
 02471 CLA +0 50000 0 00714    02472 ADD +0 40000 0 01521    02473 STO +0 60100 0 00714    02474 CLA +0 50000 0 00714   
 02475 SUB +0 40200 0 00122    02476 TZE +0 10000 0 02562    02477 TPL +0 12000 0 02562                                 
                       J = J + 1                                                    103  LM00140
 02500 CLA +0 50000 0 00715    02501 ADD +0 40000 0 01521    02502 STO +0 60100 0 00715                                 
       TAGN            WHENEVER LINE(J) .E. EDLIN(I), TRANSFER TO LOOK              104  LM00141
 02503 LXA +0 53400 1 00715    02504 LXA +0 53400 2 00714    02505 CLA +0 50000 1 01471    02506 SUB +0 40200 2 00700   
 02507 TNZ -0 10000 0 02511    02510 TRA +0 02000 0 00067                                                               
                       WHENEVER (LINE(J).E. TAB) .AND. (EDLIN(I) .E. BLANK)         105  LM00142
                1       , TRANSFER TO LOOK                                          105  LM00143
 02511 LXA +0 53400 1 00714    02512 CLA +0 50000 1 00700    02513 SUB +0 40200 0 00113    02514 TNZ -0 10000 0 02522   
 02515 LXA +0 53400 1 00715    02516 CLA +0 50000 1 01471    02517 SUB +0 40200 0 01512    02520 TNZ -0 10000 0 02522   
 02521 TRA +0 02000 0 00067                                                                                             
                       WHENEVER EDLIN(I-1) .NE. BLANK .OR. I .E. EDCT + 1           106  LM00144
                1       , TRANSFER TO LOCSCN                                        106  LM00145
 02522 CLA +0 50000 0 00126    02523 ADD +0 40000 0 01521    02524 CHS +0 76000 0 00002    02525 ADD +0 40000 0 00714   
 02526 TZE +0 10000 0 02535    02527 CLA +0 50000 0 00714    02530 SUB +0 40200 0 01521    02531 PAX +0 73400 1 00000   
 02532 CLA +0 50000 1 00700    02533 SUB +0 40200 0 00113    02534 TZE +0 10000 0 02536    02535 TRA +0 02000 0 00066   
                       WHENEVER LINE(J) .NE. BLANK .AND. LINE(J) .NE. TAB           107  LM00146
                1       , TRANSFER TO LOCSCN                                        107  LM00147
 02536 LXA +0 53400 1 00715    02537 CLA +0 50000 1 01471    02540 SUB +0 40200 0 01512    02541 TZE +0 10000 0 02546   
 02542 CLA +0 50000 1 01471    02543 SUB +0 40200 0 00113    02544 TZE +0 10000 0 02546    02545 TRA +0 02000 0 00066   
                       J = J + 1                                                    108  LM00148
 02546 CLA +0 50000 0 00715    02547 ADD +0 40000 0 01521    02550 STO +0 60100 0 00715                                 
                       TRANSFER TO TAGN                                             109  LM00149
 02551 TRA +0 02000 0 00103                                                                                             
       LOOK            WHENEVER I .E. EDCT+1, FNDST = J                             110  LM00150
 02552 CLA +0 50000 0 00126    02553 ADD +0 40000 0 01521    02554 CHS +0 76000 0 00002    02555 ADD +0 40000 0 00714   
 02556 TNZ -0 10000 0 02561    02557 CLA +0 50000 0 00715    02560 STO +0 60100 0 00705    02561 TRA +0 02000 0 02471   
                     FNDND = J                                                      111  LM00151
 02562 CLA +0 50000 0 00715    02563 STO +0 60100 0 00704                                                               
                     WHENEVER .NOT. BRIEF, PRNT.(FNDST, FNDND)                      112  LM00152
 02564 ZET +0 52000 0 00114    02565 TRA +0 02000 0 02571    02566 TSX +0 07400 4 00043    02567 TXH +3 00000 0 00705   
 02570 TXH +3 00000 0 00704                                                                                             
                     TRANSFER TO NXRQ                                               113  LM00153
 02571 TRA +0 02000 0 00074                                                                                             
        LOCSCN       CONTINUE                                                       114  LM00154
 02572 TRA +0 02000 0 02446                                                                                             
                   TRANSFER TO NTFND                                                115  LM00155
 02573 TRA +0 02000 0 00073                                                                                             
                 OR WHENEVER CWD .E. $ PRINT$ .OR. CWD .E. $     P$                 116  LM00157
 02574 TRA +0 02000 0 03673    02575 CLA +0 50000 0 00123    02576 SUB +0 40200 0 01626    02577 TZE +0 10000 0 02603   
 02600 CLA +0 50000 0 00123    02601 SUB +0 40200 0 01576    02602 TNZ -0 10000 0 02651                                 
                   NPRNT = BIN.(GET.(0))                                            117  LM00158
 02603 TSX +0 07400 4 00042    02604 TXH +3 00000 0 01520    02605 STO +0 60100 0 04656    02606 TSX +0 07400 4 00001   
 02607 TXH +3 00000 0 04656    02610 STO +0 60100 0 01475                                                               
      PNTLP        WHENEVER LENGTH .E. 0                                            118  LM00159
 02611 CLA +0 50000 0 00717    02612 SUB +0 40200 0 01520    02613 TNZ -0 10000 0 02625                                 
                     PRINT COMMENT $0N1O0 1C1U1R1R1E1N1T0 1L1I1N1E0.$               119  LM00160
 02614 TSX +0 07400 4 00016    02615     +0 00000 0 00006    02616     +0 04501 4 60060    02617     +0 12301 6 40151   
 02620     +0 15101 2 50145    02621     +0 16300 6 00143    02622     +0 13101 4 50125    02623     +0 03360 6 06060   
                   OTHERWISE                                                        120  LM00161
 02624 TRA +0 02000 0 02630                                                                                             
                     TYPOUT.(LINE, LENGTH)                                          121  LM00162
 02625 TSX +0 07400 4 00035    02626 TXH +3 00000 0 01471    02627 TXH +3 00000 0 00717                                 
                   END OF CONDITIONAL                                               122  LM00163
                   NPRNT = NPRNT - 1                                                123  LM00164
 02630 CLA +0 50000 0 01475    02631 SUB +0 40200 0 01521    02632 STO +0 60100 0 01475                                 
                   WHENEVER NPRNT .G. 0                                             124  LM00165
 02633 CLA +0 50000 0 01475    02634 SUB +0 40200 0 01520    02635 TZE +0 10000 0 02650    02636 TMI -0 12000 0 02650   
                     WRITE.(LINE, LENGTH)                                           125  LM00166
 02637 TSX +0 07400 4 00037    02640 TXH +3 00000 0 01471    02641 TXH +3 00000 0 00717                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              126  LM00167
 02642 TSX +0 07400 4 00022    02643 TXH +3 00000 0 01471    02644 TXH +3 00000 0 00115    02645 TXH +3 00000 0 00056   
 02646 STO +0 60100 0 00717                                                                                             
                     TRANSFER TO PNTLP                                              127  LM00168
 02647 TRA +0 02000 0 00075                                                                                             
                   END OF CONDITIONAL                                               128  LM00169
                 OR WHENEVER CWD .E. $   TOP$ .OR. CWD .E. $     T$                 129  LM00171
 02650 TRA +0 02000 0 03673    02651 CLA +0 50000 0 00123    02652 SUB +0 40200 0 01634    02653 TZE +0 10000 0 02657   
 02654 CLA +0 50000 0 00123    02655 SUB +0 40200 0 01640    02656 TNZ -0 10000 0 02667                                 
       TOPLP       WRITE.(LINE, LENGTH)                                             130  LM00172
 02657 TSX +0 07400 4 00037    02660 TXH +3 00000 0 01471    02661 TXH +3 00000 0 00717                                 
                   WHENEVER OK, BOTTOM.                                             131  LM00173
 02662 NZT -0 52000 0 01500    02663 TRA +0 02000 0 02665    02664 TSX +0 07400 4 00003                                 
                   CLSOUT.                                                          132  LM00174
 02665 TSX +0 07400 4 00041                                                                                             
                 OR WHENEVER CWD .E. $CHANGE$ .OR. CWD .E. $     C$                 133  LM00176
 02666 TRA +0 02000 0 03673    02667 CLA +0 50000 0 00123    02670 SUB +0 40200 0 01615    02671 TZE +0 10000 0 02675   
 02672 CLA +0 50000 0 00123    02673 SUB +0 40200 0 01564    02674 TNZ -0 10000 0 03257                                 
                   EDCT = EDCT+1                                                    134  LM00182
 02675 CLA +0 50000 0 00126    02676 ADD +0 40000 0 01521    02677 STO +0 60100 0 00126                                 
                   QUOTE = EDLIN(EDCT)                                              135  LM00183
 02700 LXA +0 53400 2 00126    02701 CLA +0 50000 2 00700    02702 STO +0 60100 0 01504                                 
                   STR1 = EDCT                                                      136  LM00184
 02703 CLA +0 50000 0 00126    02704 STO +0 60100 0 01510                                                               
      QLOOP        THROUGH QLOOP, FOR EDCT = EDCT+1, 1,                             137  LM00185
                1     (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                137  LM00186
 02705 CLA +0 50000 0 00126    02706 ADD +0 40000 0 01521    02707 STO +0 60100 0 00126    02710 TRA +0 02000 0 02714   
 02711 CLA +0 50000 0 00126    02712 ADD +0 40000 0 01521    02713 STO +0 60100 0 00126    02714 CLA +0 50000 0 00126   
 02715 SUB +0 40200 0 00122    02716 TZE +0 10000 0 02725    02717 TPL +0 12000 0 02725    02720 LXA +0 53400 1 00126   
 02721 CLA +0 50000 1 00700    02722 SUB +0 40200 0 01504    02723 TZE +0 10000 0 02725    02724 TRA +0 02000 0 02711   
                   STR2 = EDCT                                                      138  LM00187
 02725 CLA +0 50000 0 00126    02726 STO +0 60100 0 01511                                                               
      QLOOP1       THROUGH QLOOP1, FOR EDCT = EDCT+1, 1,                            139  LM00188
                1     (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                139  LM00189
 02727 CLA +0 50000 0 00126    02730 ADD +0 40000 0 01521    02731 STO +0 60100 0 00126    02732 TRA +0 02000 0 02736   
 02733 CLA +0 50000 0 00126    02734 ADD +0 40000 0 01521    02735 STO +0 60100 0 00126    02736 CLA +0 50000 0 00126   
 02737 SUB +0 40200 0 00122    02740 TZE +0 10000 0 02747    02741 TPL +0 12000 0 02747    02742 LXA +0 53400 1 00126   
 02743 CLA +0 50000 1 00700    02744 SUB +0 40200 0 01504    02745 TZE +0 10000 0 02747    02746 TRA +0 02000 0 02733   
                   EST2 = EDCT                                                      140  LM00190
 02747 CLA +0 50000 0 00126    02750 STO +0 60100 0 00701                                                               
                   EDCT = EDCT + 1                                                  141  LM00194
 02751 CLA +0 50000 0 00126    02752 ADD +0 40000 0 01521    02753 STO +0 60100 0 00126                                 
                   TEM = 1                                                          142  LM00195
 02754 CLA +0 50000 0 01521    02755 STO +0 60100 0 01514                                                               
                   GLOBAL = 0B                                                      143  LM00196
 02756 CLA +0 50000 0 01520    02757 STO +0 60100 0 00710                                                               
      ARGLP        CWD = GET.(0)                                                    144  LM00197
 02760 TSX +0 07400 4 00042    02761 TXH +3 00000 0 01520    02762 STO +0 60100 0 00123                                 
                   WHENEVER CWD .E. $ $                                             145  LM00198
 02763 CLA +0 50000 0 00123    02764 SUB +0 40200 0 01632    02765 TNZ -0 10000 0 02770                                 
                     TRANSFER TO SHIFT                                              146  LM00199
 02766 TRA +0 02000 0 00077                                                                                             
                   OR WHENEVER CWD .E. $     G$                                     147  LM00200
 02767 TRA +0 02000 0 03006    02770 CLA +0 50000 0 00123    02771 SUB +0 40200 0 01621    02772 TNZ -0 10000 0 03003   
                     WHENEVER STR2 .NE. STR1+1, GLOBAL = 1B                         148  LM00201
 02773 CLA +0 50000 0 01510    02774 ADD +0 40000 0 01521    02775 CHS +0 76000 0 00002    02776 ADD +0 40000 0 01511   
 02777 TZE +0 10000 0 03002    03000 CLA +0 50000 0 01521    03001 STO +0 60100 0 00710                                 
                   OTHERWISE                                                        149  LM00202
 03002 TRA +0 02000 0 03006                                                                                             
                     TEM = BIN.(CWD)                                                150  LM00203
 03003 TSX +0 07400 4 00001    03004 TXH +3 00000 0 00123    03005 STO +0 60100 0 01514                                 
                   END OF CONDITIONAL                                               151  LM00204
                   TRANSFER TO ARGLP                                                152  LM00205
 03006 TRA +0 02000 0 00047                                                                                             
       SHIFT       THROUGH MVDWN, FOR I = LENGTH, -1, I .L. 1                       153  LM00209
 03007 CLA +0 50000 0 00717    03010 STO +0 60100 0 00714    03011 TRA +0 02000 0 03015    03012 CLS +0 50200 0 01521   
 03013 ADD +0 40000 0 00714    03014 STO +0 60100 0 00714    03015 CLA +0 50000 0 00714    03016 SUB +0 40200 0 01521   
 03017 TZE +0 10000 0 03021    03020 TMI -0 12000 0 03031                                                               
      MVDWN          LINE(BUFSIZ+I-LENGTH) = LINE(I)                                154  LM00210
 03021 CLA +0 50000 0 00115    03022 ADD +0 40000 0 00714    03023 SUB +0 40200 0 00717    03024 PAX +0 73400 1 00000   
 03025 LXA +0 53400 2 00714    03026 CLA +0 50000 2 01471    03027 STO +0 60100 1 01471    03030 TRA +0 02000 0 03012   
                   DOWN = BUFSIZ-LENGTH+1                                           155  LM00211
 03031 CLA +0 50000 0 00115    03032 SUB +0 40200 0 00717    03033 ADD +0 40000 0 01521    03034 STO +0 60100 0 00125   
                   UP = 0                                                           156  LM00212
 03035 CLA +0 50000 0 01520    03036 STO +0 60100 0 01516                                                               
                   CHNG = 0B                                                        157  LM00213
 03037 CLA +0 50000 0 01520    03040 STO +0 60100 0 00117                                                               
                   CHST = LENGTH + 1                                                158  LM00214
 03041 CLA +0 50000 0 00717    03042 ADD +0 40000 0 01521    03043 STO +0 60100 0 00120                                 
                   CHEND = LENGTH                                                   159  LM00215
 03044 CLA +0 50000 0 00717    03045 STO +0 60100 0 00116                                                               
      SRCHLP       UP = UP + 1                                                      160  LM00219
 03046 CLA +0 50000 0 01516    03047 ADD +0 40000 0 01521    03050 STO +0 60100 0 01516                                 
      SRTST          WHENEVER DOWN .G. BUFSIZ, TRANSFER TO GIVUP                    161  LM00220
 03051 CLA +0 50000 0 00125    03052 SUB +0 40200 0 00115    03053 TZE +0 10000 0 03056    03054 TMI -0 12000 0 03056   
 03055 TRA +0 02000 0 00060                                                                                             
                     J = DOWN                                                       162  LM00221
 03056 CLA +0 50000 0 00125    03057 STO +0 60100 0 00715                                                               
                     THROUGH COMPAR, FOR I = STR1+1, 1, I .GE. STR2                 163  LM00222
 03060 CLA +0 50000 0 01510    03061 ADD +0 40000 0 01521    03062 STO +0 60100 0 00714    03063 TRA +0 02000 0 03067   
 03064 CLA +0 50000 0 00714    03065 ADD +0 40000 0 01521    03066 STO +0 60100 0 00714    03067 CLA +0 50000 0 00714   
 03070 SUB +0 40200 0 01511    03071 TZE +0 10000 0 03112    03072 TPL +0 12000 0 03112                                 
                       WHENEVER J .GE. BUFSIZ, TRANSFER TO GIVUP                    164  LM00223
 03073 CLA +0 50000 0 00715    03074 SUB +0 40200 0 00115    03075 TZE +0 10000 0 03077    03076 TMI -0 12000 0 03100   
 03077 TRA +0 02000 0 00060                                                                                             
                       WHENEVER EDLIN(I) .NE. LINE(J), TRANSFER TO NOCOMP           165  LM00224
 03100 LXA +0 53400 1 00714    03101 LXA +0 53400 2 00715    03102 CLA +0 50000 1 00700    03103 SUB +0 40200 2 01471   
 03104 TZE +0 10000 0 03106    03105 TRA +0 02000 0 00071                                                               
       COMPAR          J = J + 1                                                    166  LM00225
 03106 CLA +0 50000 0 00715    03107 ADD +0 40000 0 01521    03110 STO +0 60100 0 00715    03111 TRA +0 02000 0 03064   
                     TRANSFER TO STFND                                              167  LM00226
 03112 TRA +0 02000 0 00102                                                                                             
      NOCOMP         LINE(UP) = LINE(DOWN)                                          168  LM00228
 03113 LXA +0 53400 1 01516    03114 LXA +0 53400 2 00125    03115 CLA +0 50000 2 01471    03116 STO +0 60100 1 01471   
                     DOWN = DOWN + 1                                                169  LM00229
 03117 CLA +0 50000 0 00125    03120 ADD +0 40000 0 01521    03121 STO +0 60100 0 00125                                 
                   TRANSFER TO SRCHLP                                               170  LM00230
 03122 TRA +0 02000 0 00100                                                                                             
      STFND        CHNG = 1B                                                        171  LM00234
 03123 CLA +0 50000 0 01521    03124 STO +0 60100 0 00117                                                               
                   DOWN = DOWN + (STR2-STR1-1)                                      172  LM00235
 03125 CLA +0 50000 0 01511    03126 SUB +0 40200 0 01510    03127 SUB +0 40200 0 01521    03130 ADD +0 40000 0 00125   
 03131 STO +0 60100 0 00125                                                                                             
                   CHST = UP                                                        173  LM00236
 03132 CLA +0 50000 0 01516    03133 STO +0 60100 0 00120                                                               
                   THROUGH REPLAC, FOR I = STR2 + 1, 1, I .GE. EST2                 174  LM00237
 03134 CLA +0 50000 0 01511    03135 ADD +0 40000 0 01521    03136 STO +0 60100 0 00714    03137 TRA +0 02000 0 03143   
 03140 CLA +0 50000 0 00714    03141 ADD +0 40000 0 01521    03142 STO +0 60100 0 00714    03143 CLA +0 50000 0 00714   
 03144 SUB +0 40200 0 00701    03145 TZE +0 10000 0 03164    03146 TPL +0 12000 0 03164                                 
                     LINE(UP) = EDLIN(I)                                            175  LM00238
 03147 LXA +0 53400 1 01516    03150 LXA +0 53400 2 00714    03151 CLA +0 50000 2 00700    03152 STO +0 60100 1 01471   
                     UP = UP + 1                                                    176  LM00239
 03153 CLA +0 50000 0 01516    03154 ADD +0 40000 0 01521    03155 STO +0 60100 0 01516                                 
       REPLAC        WHENEVER UP .G. DOWN, TRANSFER TO GIVUP                        177  LM00240
 03156 CLA +0 50000 0 01516    03157 SUB +0 40200 0 00125    03160 TZE +0 10000 0 03163    03161 TMI -0 12000 0 03163   
 03162 TRA +0 02000 0 00060    03163 TRA +0 02000 0 03140                                                               
                   CHEND = UP - 1                                                   178  LM00241
 03164 CLA +0 50000 0 01516    03165 SUB +0 40200 0 01521    03166 STO +0 60100 0 00116                                 
                   WHENEVER GLOBAL, TRANSFER TO SRTST                               179  LM00242
 03167 NZT -0 52000 0 00710    03170 TRA +0 02000 0 03172    03171 TRA +0 02000 0 00101                                 
      GIVUP        THROUGH FILOUT, FOR UP = UP, 1, DOWN .G. BUFSIZ                  180  LM00246
 03172 CLA +0 50000 0 01516    03173 STO +0 60100 0 01516    03174 TRA +0 02000 0 03200    03175 CLA +0 50000 0 01516   
 03176 ADD +0 40000 0 01521    03177 STO +0 60100 0 01516    03200 CLA +0 50000 0 00125    03201 SUB +0 40200 0 00115   
 03202 TZE +0 10000 0 03204    03203 TPL +0 12000 0 03214                                                               
                     LINE(UP) = LINE(DOWN)                                          181  LM00247
 03204 LXA +0 53400 1 01516    03205 LXA +0 53400 2 00125    03206 CLA +0 50000 2 01471    03207 STO +0 60100 1 01471   
      FILOUT         DOWN = DOWN + 1                                                182  LM00248
 03210 CLA +0 50000 0 00125    03211 ADD +0 40000 0 01521    03212 STO +0 60100 0 00125    03213 TRA +0 02000 0 03175   
                   LENGTH = UP - 1                                                  183  LM00249
 03214 CLA +0 50000 0 01516    03215 SUB +0 40200 0 01521    03216 STO +0 60100 0 00717                                 
                   TEM = TEM - 1                                                    184  LM00250
 03217 CLA +0 50000 0 01514    03220 SUB +0 40200 0 01521    03221 STO +0 60100 0 01514                                 
                   WHENEVER .NOT. BRIEF .AND. (TEM .G. 0 .THEN. CHNG)               185  LM00251
                1       , PRNT.(CHST, CHEND)                                        185  LM00252
 03222 ZET +0 52000 0 00117    03223 TRA +0 02000 0 03230    03224 CLA +0 50000 0 01514    03225 SUB +0 40200 0 01520   
 03226 TZE +0 10000 0 03230    03227 TPL +0 12000 0 03235    03230 ZET +0 52000 0 00114    03231 TRA +0 02000 0 03235   
 03232 TSX +0 07400 4 00043    03233 TXH +3 00000 0 00120    03234 TXH +3 00000 0 00116                                 
                   CANON.(LINE, LENGTH, BUFSIZ)                                     186  LM00253
 03235 TSX +0 07400 4 00004    03236 TXH +3 00000 0 01471    03237 TXH +3 00000 0 00717    03240 TXH +3 00000 0 00115   
                   WHENEVER TEM .G. 0                                               187  LM00254
 03241 CLA +0 50000 0 01514    03242 SUB +0 40200 0 01520    03243 TZE +0 10000 0 03256    03244 TMI -0 12000 0 03256   
                     WRITE.(LINE, LENGTH)                                           188  LM00255
 03245 TSX +0 07400 4 00037    03246 TXH +3 00000 0 01471    03247 TXH +3 00000 0 00717                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              189  LM00256
 03250 TSX +0 07400 4 00022    03251 TXH +3 00000 0 01471    03252 TXH +3 00000 0 00115    03253 TXH +3 00000 0 00056   
 03254 STO +0 60100 0 00717                                                                                             
                     TRANSFER TO SHIFT                                              190  LM00257
 03255 TRA +0 02000 0 00077                                                                                             
                   END OF CONDITIONAL                                               191  LM00258
                 OR WHENEVER CWD .E. $ SPLIT$ .OR. CWD .E. $     S$                 192  LM00262
 03256 TRA +0 02000 0 03673    03257 CLA +0 50000 0 00123    03260 SUB +0 40200 0 01633    03261 TZE +0 10000 0 03265   
 03262 CLA +0 50000 0 00123    03263 SUB +0 40200 0 01641    03264 TNZ -0 10000 0 03346                                 
                   TOPNAM = GET.(0)                                                 193  LM00263
 03265 TSX +0 07400 4 00042    03266 TXH +3 00000 0 01520    03267 STO +0 60100 0 01515                                 
                   WHENEVER TOPNAM .E. $ $, TRANSFER TO NONAME                      194  LM00264
 03270 CLA +0 50000 0 01515    03271 SUB +0 40200 0 01632    03272 TNZ -0 10000 0 03274    03273 TRA +0 02000 0 00072   
                   WHENEVER TOPNAM .E. OLDNAM .AND. FSTPAS                          195  LM00265
 03274 NZT -0 52000 0 00707    03275 TRA +0 02000 0 03314    03276 CLA +0 50000 0 01515    03277 SUB +0 40200 0 01501   
 03300 TNZ -0 10000 0 03314                                                                                             
      NEWNM          PRINT COMMENT $0P1L1E1A1S1E0 1U1S1E0 1A1N1O1T1H1E1R0 1N1A      196  LM00266
                11M1E0.$                                                            196  LM00267
 03301 TSX +0 07400 4 00016    03302     +0 00000 0 00010    03303     +0 04701 4 30125    03304     +0 12101 6 20125   
 03305     +0 06001 6 40162    03306     +0 12500 6 00121    03307     +0 14501 4 60163    03310     +0 13001 2 50151   
 03311     +0 06001 4 50121    03312     +0 14401 2 50033                                                               
                     TRANSFER TO NXRQ                                               197  LM00268
 03313 TRA +0 02000 0 00074                                                                                             
                   END OF CONDITIONAL                                               198  LM00269
                   SECNAM = GET.(0)                                                 199  LM00270
 03314 TSX +0 07400 4 00042    03315 TXH +3 00000 0 01520    03316 STO +0 60100 0 01507                                 
                 WHENEVER SECNAM .E. $ $, SECNAM = OLDSEC                           200  LM00271
 03317 CLA +0 50000 0 01507    03320 SUB +0 40200 0 01632    03321 TNZ -0 10000 0 03324    03322 CLA +0 50000 0 01502   
 03323 STO +0 60100 0 01507                                                                                             
                   CLRNAM.(TOPNAM, SECNAM, NEWNM, 1B)                               201  LM00272
 03324 TSX +0 07400 4 00007    03325 TXH +3 00000 0 01515    03326 TXH +3 00000 0 01507    03327 TXH +3 00000 0 00070   
 03330 TXH +3 00000 0 01521                                                                                             
                   CLOSEW.                                                          202  LM00273
 03331 TSX +0 07400 4 00006                                                                                             
                   RENAME.(IN, FI, TOPNAM, SECNAM)                                  203  LM00274
 03332 TSX +0 07400 4 00023    03333 TXH +3 00000 0 00713    03334 TXH +3 00000 0 00703    03335 TXH +3 00000 0 01515   
 03336 TXH +3 00000 0 01507                                                                                             
                   ASSIGN.(IN, FI)                                                  204  LM00275
 03337 TSX +0 07400 4 00000    03340 TXH +3 00000 0 00713    03341 TXH +3 00000 0 00703                                 
                   OLDNAM = FENCE                                                   205  LM00276
 03342 CLA +0 50000 0 00702    03343 STO +0 60100 0 01501                                                               
                   TRANSFER TO TOPLP                                                206  LM00277
 03344 TRA +0 02000 0 00104                                                                                             
                 OR WHENEVER CWD .E. $  QUIT$ .OR. CWD .E. $     Q$                 207  LM00279
 03345 TRA +0 02000 0 03673    03346 CLA +0 50000 0 00123    03347 SUB +0 40200 0 01627    03350 TZE +0 10000 0 03354   
 03351 CLA +0 50000 0 00123    03352 SUB +0 40200 0 01604    03353 TNZ -0 10000 0 03370                                 
                   ENDRD.                                                           208  LM00280
 03354 TSX +0 07400 4 00012                                                                                             
                   CLOSEW.                                                          209  LM00281
 03355 TSX +0 07400 4 00006                                                                                             
                   DELFIL.(IN1, FI, DLQ1)                                           210  LM00282
 03356 TSX +0 07400 4 00011    03357 TXH +3 00000 0 00711    03360 TXH +3 00000 0 00703    03361 TXH +3 00000 0 00053   
      DLQ1         DELFIL.(IN, FI, DLQ2)                                            211  LM00283
 03362 TSX +0 07400 4 00011    03363 TXH +3 00000 0 00713    03364 TXH +3 00000 0 00703    03365 TXH +3 00000 0 00054   
      DLQ2         TRANSFER TO CHN                                                  212  LM00284
 03366 TRA +0 02000 0 00050                                                                                             
                 O'R CWD .E. $TABSET$ .OR. CWD .E. $    TB$                         213  LM00286
 03367 TRA +0 02000 0 03673    03370 CLA +0 50000 0 00123    03371 SUB +0 40200 0 01637    03372 TZE +0 10000 0 03376   
 03373 CLA +0 50000 0 00123    03374 SUB +0 40200 0 01643    03375 TNZ -0 10000 0 03425                                 
                   TB = GET.(0)                                                     214  LM00287
 03376 TSX +0 07400 4 00042    03377 TXH +3 00000 0 01520    03400 STO +0 60100 0 01513                                 
                   W'R TB .E. $     *$                                              215  LM00288
 03401 CLA +0 50000 0 01513    03402 SUB +0 40200 0 01631    03403 TNZ -0 10000 0 03406                                 
                     TBINIT.                                                        216  LM00289
 03404 TSX +0 07400 4 00044                                                                                             
                   O'E                                                              217  LM00290
 03405 TRA +0 02000 0 03424                                                                                             
                     NEWTBS.                                                        218  LM00291
 03406 TSX +0 07400 4 00021                                                                                             
      GTTB           W'R TB .E. $ $, T'O NXRQ                                       219  LM00292
 03407 CLA +0 50000 0 01513    03410 SUB +0 40200 0 01632    03411 TNZ -0 10000 0 03413    03412 TRA +0 02000 0 00074   
                     TABSET.(BIN.(TB))                                              220  LM00293
 03413 TSX +0 07400 4 00001    03414 TXH +3 00000 0 01513    03415 STO +0 60100 0 04656    03416 TSX +0 07400 4 00033   
 03417 TXH +3 00000 0 04656                                                                                             
                     TB = GET.(0)                                                   221  LM00294
 03420 TSX +0 07400 4 00042    03421 TXH +3 00000 0 01520    03422 STO +0 60100 0 01513                                 
                     T'O GTTB                                                       222  LM00295
 03423 TRA +0 02000 0 00063                                                                                             
                   E'L                                                              223  LM00296
                 O'R CWD .E. $ BKSET$                                               224  LM00298
 03424 TRA +0 02000 0 03673    03425 CLA +0 50000 0 00123    03426 SUB +0 40200 0 01573    03427 TNZ -0 10000 0 03452   
                   BK = GET.(0)                                                     225  LM00299
 03430 TSX +0 07400 4 00042    03431 TXH +3 00000 0 01520    03432 STO +0 60100 0 00110                                 
                   NEWBKS.                                                          226  LM00300
 03433 TSX +0 07400 4 00020                                                                                             
      GTBK         W'R BK .E. $ $, T'O NXRQ                                         227  LM00301
 03434 CLA +0 50000 0 00110    03435 SUB +0 40200 0 01632    03436 TNZ -0 10000 0 03440    03437 TRA +0 02000 0 00074   
                   BKSET.(BIN.(BK))                                                 228  LM00302
 03440 TSX +0 07400 4 00001    03441 TXH +3 00000 0 00110    03442 STO +0 60100 0 04656    03443 TSX +0 07400 4 00002   
 03444 TXH +3 00000 0 04656                                                                                             
                   BK = GET.(0)                                                     229  LM00303
 03445 TSX +0 07400 4 00042    03446 TXH +3 00000 0 01520    03447 STO +0 60100 0 00110                                 
                   T'O GTBK                                                         230  LM00304
 03450 TRA +0 02000 0 00061                                                                                             
                 O'R CWD .E. $SERIAL$ .OR. CWD .E. $    SR$                         231  LM00306
 03451 TRA +0 02000 0 03673    03452 CLA +0 50000 0 00123    03453 SUB +0 40200 0 01636    03454 TZE +0 10000 0 03460   
 03455 CLA +0 50000 0 00123    03456 SUB +0 40200 0 01642    03457 TNZ -0 10000 0 03534                                 
                   FSTNO = GET.(0)                                                  232  LM00307
 03460 TSX +0 07400 4 00042    03461 TXH +3 00000 0 01520    03462 STO +0 60100 0 00706                                 
                   W'R FSTNO .E. $   OFF$                                           233  LM00308
 03463 CLA +0 50000 0 00706    03464 SUB +0 40200 0 01607    03465 TNZ -0 10000 0 03471                                 
                     SINHB.(1)                                                      234  LM00309
 03466 TSX +0 07400 4 00032    03467 TXH +3 00000 0 01521                                                               
                   O'R FSTNO .E. $    ON$                                           235  LM00310
 03470 TRA +0 02000 0 03533    03471 CLA +0 50000 0 00706    03472 SUB +0 40200 0 01612    03473 TNZ -0 10000 0 03477   
                     SINHB.(0)                                                      236  LM00311
 03474 TSX +0 07400 4 00032    03475 TXH +3 00000 0 01520                                                               
                   O'E                                                              237  LM00312
 03476 TRA +0 02000 0 03533                                                                                             
                     W'R FSTNO .E. $ $                                              238  LM00313
 03477 CLA +0 50000 0 00706    03500 SUB +0 40200 0 01632    03501 TNZ -0 10000 0 03507                                 
                       FSTNO = 10                                                   239  LM00314
 03502 CLA +0 50000 0 01527    03503 STO +0 60100 0 00706                                                               
                       INCR = 10                                                    240  LM00315
 03504 CLA +0 50000 0 01527    03505 STO +0 60100 0 00712                                                               
                     O'E                                                            241  LM00316
 03506 TRA +0 02000 0 03526                                                                                             
                       FSTNO = BIN.(FSTNO)                                          242  LM00317
 03507 TSX +0 07400 4 00001    03510 TXH +3 00000 0 00706    03511 STO +0 60100 0 00706                                 
                       INCR = GET.(0)                                               243  LM00318
 03512 TSX +0 07400 4 00042    03513 TXH +3 00000 0 01520    03514 STO +0 60100 0 00712                                 
                       W'R INCR .E. $ $                                             244  LM00319
 03515 CLA +0 50000 0 00712    03516 SUB +0 40200 0 01632    03517 TNZ -0 10000 0 03523                                 
                         INCR = 10                                                  245  LM00320
 03520 CLA +0 50000 0 01527    03521 STO +0 60100 0 00712                                                               
                       O'E                                                          246  LM00321
 03522 TRA +0 02000 0 03526                                                                                             
                         INCR = BIN.(INCR)                                          247  LM00322
 03523 TSX +0 07400 4 00001    03524 TXH +3 00000 0 00712    03525 STO +0 60100 0 00712                                 
                       E'L                                                          248  LM00323
                     E'L                                                            249  LM00324
                     SETSR.(FSTNO,INCR)                                             250  LM00325
 03526 TSX +0 07400 4 00031    03527 TXH +3 00000 0 00706    03530 TXH +3 00000 0 00712                                 
                     SINHB.(0)                                                      251  LM00326
 03531 TSX +0 07400 4 00032    03532 TXH +3 00000 0 01520                                                               
                   E'L                                                              252  LM00327
                 O'R CWD .E. $ NCOLS$ .OR. CWD .E. $    NC$                         253  LM00329
 03533 TRA +0 02000 0 03673    03534 CLA +0 50000 0 00123    03535 SUB +0 40200 0 01611    03536 TZE +0 10000 0 03542   
 03537 CLA +0 50000 0 00123    03540 SUB +0 40200 0 01575    03541 TNZ -0 10000 0 03561                                 
                   NCOL = GET.(0)                                                   254  LM00330
 03542 TSX +0 07400 4 00042    03543 TXH +3 00000 0 01520    03544 STO +0 60100 0 01474                                 
                   W'R NCOL .E. $ $                                                 255  LM00331
 03545 CLA +0 50000 0 01474    03546 SUB +0 40200 0 01632    03547 TNZ -0 10000 0 03553                                 
                     SETCOL.(72)                                                    256  LM00332
 03550 TSX +0 07400 4 00026    03551 TXH +3 00000 0 01560                                                               
                   O'E                                                              257  LM00333
 03552 TRA +0 02000 0 03560                                                                                             
                     SETCOL.(BIN.(NCOL))                                            258  LM00334
 03553 TSX +0 07400 4 00001    03554 TXH +3 00000 0 01474    03555 STO +0 60100 0 04656    03556 TSX +0 07400 4 00026   
 03557 TXH +3 00000 0 04656                                                                                             
                   E'L                                                              259  LM00335
                 OR WHENEVER CWD .E. $  FILE$                                       260  LM00337
 03560 TRA +0 02000 0 03673    03561 CLA +0 50000 0 00123    03562 SUB +0 40200 0 01600    03563 TNZ -0 10000 0 03661   
                   PRINAM = GET.(0)                                                 261  LM00338
 03564 TSX +0 07400 4 00042    03565 TXH +3 00000 0 01520    03566 STO +0 60100 0 01503                                 
                   CLRSW = 1B                                                       262  LM00339
 03567 CLA +0 50000 0 01521    03570 STO +0 60100 0 00121                                                               
                   WHENEVER PRINAM .E. $ $                                          263  LM00340
 03571 CLA +0 50000 0 01503    03572 SUB +0 40200 0 01632    03573 TNZ -0 10000 0 03603                                 
                     PRINAM = OLDNAM                                                264  LM00341
 03574 CLA +0 50000 0 01501    03575 STO +0 60100 0 01503                                                               
                     SECNAM = OLDSEC                                                265  LM00342
 03576 CLA +0 50000 0 01502    03577 STO +0 60100 0 01507                                                               
                     CLRSW = 0B                                                     266  LM00343
 03600 CLA +0 50000 0 01520    03601 STO +0 60100 0 00121                                                               
                   OTHERWISE                                                        267  LM00344
 03602 TRA +0 02000 0 03613                                                                                             
                     SECNAM = GET.(0)                                               268  LM00345
 03603 TSX +0 07400 4 00042    03604 TXH +3 00000 0 01520    03605 STO +0 60100 0 01507                                 
                     WHENEVER SECNAM .E. $ $                                        269  LM00346
 03606 CLA +0 50000 0 01507    03607 SUB +0 40200 0 01632    03610 TNZ -0 10000 0 03613                                 
                       SECNAM = OLDSEC                                              270  LM00347
 03611 CLA +0 50000 0 01502    03612 STO +0 60100 0 01507                                                               
                     END OF CONDITIONAL                                             271  LM00348
                   END OF CONDITIONAL                                               272  LM00349
                   WHENEVER PRINAM .E. FENCE                                        273  LM00350
 03613 CLA +0 50000 0 01503    03614 SUB +0 40200 0 00702    03615 TNZ -0 10000 0 03630                                 
      NONAME         PRINT COMMENT $0N1O0 1F1I1L1E0 1N1A1M1E0 1G1I1V1E1N0.$         274  LM00351
 03616 TSX +0 07400 4 00016    03617     +0 00000 0 00007    03620     +0 04501 4 60060    03621     +0 12601 3 10143   
 03622     +0 12500 6 00145    03623     +0 12101 4 40125    03624     +0 06001 2 70131    03625     +0 16501 2 50145   
 03626     +0 03360 6 06060                                                                                             
                     TRANSFER TO NXRQ                                               275  LM00352
 03627 TRA +0 02000 0 00074                                                                                             
                   END OF CONDITIONAL                                               276  LM00353
                   WRITE.(LINE, LENGTH)                                             277  LM00354
 03630 TSX +0 07400 4 00037    03631 TXH +3 00000 0 01471    03632 TXH +3 00000 0 00717                                 
                   LENGTH = 0                                                       278  LM00355
 03633 CLA +0 50000 0 01520    03634 STO +0 60100 0 00717                                                               
                   WHENEVER OK, BOTTOM.                                             279  LM00356
 03635 NZT -0 52000 0 01500    03636 TRA +0 02000 0 03640    03637 TSX +0 07400 4 00003                                 
                   CLRNAM.(PRINAM, SECNAM, NEWNM, CLRSW)                            280  LM00357
 03640 TSX +0 07400 4 00007    03641 TXH +3 00000 0 01503    03642 TXH +3 00000 0 01507    03643 TXH +3 00000 0 00070   
 03644 TXH +3 00000 0 00121                                                                                             
                   CLOSEW.                                                          281  LM00358
 03645 TSX +0 07400 4 00006                                                                                             
                   DELFIL.(IN1, FI, DL1)                                            282  LM00359
 03646 TSX +0 07400 4 00011    03647 TXH +3 00000 0 00711    03650 TXH +3 00000 0 00703    03651 TXH +3 00000 0 00051   
      DL1          RENAME.(IN, FI, PRINAM, SECNAM)                                  283  LM00360
 03652 TSX +0 07400 4 00023    03653 TXH +3 00000 0 00713    03654 TXH +3 00000 0 00703    03655 TXH +3 00000 0 01503   
 03656 TXH +3 00000 0 01507                                                                                             
      CHN          EXIT.                                                            284  LM00361
 03657 TSX +0 07400 4 00013                                                                                             
                 OTHERWISE                                                          285  LM00363
 03660 TRA +0 02000 0 03673                                                                                             
                   PRINT COMMENT $0N1O1T0 1A0 1R1E1Q1U1E1S1T0:$                     286  LM00364
 03661 TSX +0 07400 4 00016    03662     +0 00000 0 00005    03663     +0 04501 4 60163    03664     +0 06001 2 10060   
 03665     +0 15101 2 50150    03666     +0 16401 2 50162    03667     +0 16300 3 56060                                 
                   TYPOUT.(EDLIN, COUNT)                                            287  LM00365
 03670 TSX +0 07400 4 00035    03671 TXH +3 00000 0 00700    03672 TXH +3 00000 0 00122                                 
                 END OF CONDITIONAL                                                 288  LM00367
                 TRANSFER TO NXRQ                                                   289  LM00368
 03673 TRA +0 02000 0 00074                                                                                             
      EOF        PRINTCOMMENT $0E1N1D0 1O1F0 1F1I1L1E0 1R1E1A1C1H1E1D0 1B1Y0:$      290  LM00370
 03674 TSX +0 07400 4 00016    03675     +0 00000 0 00010    03676     +0 02501 4 50124    03677     +0 06001 4 60126   
 03700     +0 06001 2 60131    03701     +0 14301 2 50060    03702     +0 15101 2 50121    03703     +0 12301 3 00125   
 03704     +0 12400 6 00122    03705     +0 17000 3 56060                                                               
                 TYPOUT.(EDLIN, COUNT)                                              291  LM00371
 03706 TSX +0 07400 4 00035    03707 TXH +3 00000 0 00700    03710 TXH +3 00000 0 00122                                 
                 LENGTH = 0                                                         292  LM00372
 03711 CLA +0 50000 0 01520    03712 STO +0 60100 0 00717                                                               
                 OK = 0B                                                            293  LM00373
 03713 CLA +0 50000 0 01520    03714 STO +0 60100 0 01500                                                               
                 TRANSFER TO NXRQ                                                   294  LM00374
 03715 TRA +0 02000 0 00074                                                                                             
                 INTERNAL FUNCTION                                                  295  LM00382
 03716 TRA +0 02000 0 03766                                                                                             
                 ENTRY TO CLSOUT.                                                   296  LM00383
 03717 TRA +0 02000 0 03722    00041 TTR +0 02100 0 03720    03720 SXA +0 63400 2 03755    03721 TSX +0 07400 2 03755   
                   CLOSEW.                                                          297  LM00384
 03722 TSX +0 07400 4 00006                                                                                             
                   DELFIL.(IN1, FI, DL2)                                            298  LM00385
 03723 TSX +0 07400 4 00011    03724 TXH +3 00000 0 00711    03725 TXH +3 00000 0 00703    03726 TXH +3 00000 0 00052   
      DL2          CHFILE.(IN, FI, -0, IN1)                                         299  LM00386
 03727 CLS +0 50200 0 01520    03730 STO +0 60100 0 03765    03731 TSX +0 07400 4 00005    03732 TXH +3 00000 0 00713   
 03733 TXH +3 00000 0 00703    03734 TXH +3 00000 0 03765    03735 TXH +3 00000 0 00711                                 
                   SEEK.(IN1, FI, CHN)                                              300  LM00387
 03736 TSX +0 07400 4 00024    03737 TXH +3 00000 0 00711    03740 TXH +3 00000 0 00703    03741 TXH +3 00000 0 00050   
                   ASSIGN.(IN, FI)                                                  301  LM00388
 03742 TSX +0 07400 4 00000    03743 TXH +3 00000 0 00713    03744 TXH +3 00000 0 00703                                 
                   OK = 1B                                                          302  LM00389
 03745 CLA +0 50000 0 01521    03746 STO +0 60100 0 01500                                                               
                   LENGTH = 0                                                       303  LM00390
 03747 CLA +0 50000 0 01520    03750 STO +0 60100 0 00717                                                               
                   FSTPAS = 0B                                                      304  LM00391
 03751 CLA +0 50000 0 01520    03752 STO +0 60100 0 00707                                                               
                   FUNCTION RETURN                                                  305  LM00392
 03753 TRA +0 02000 0 03761                                                                                             
                 END OF FUNCTION                                                    306  LM00393
 03754 TSX +0 07400 4 00013    03755 TXH +3 00000 0 00000    03756 SXD -0 63400 1 03755    03757 SXA +0 63400 4 03761   
 03760 TRA +0 02000 2 00001    03761 AXT +0 77400 4 00000    03762 LXA +0 53400 2 03755    03763 LXD -0 53400 1 03755   
 03764 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  307  LM00397
 03766 TRA +0 02000 0 04074                                                                                             
                 ENTRY TO GET.                                                      308  LM00398
 03767 TRA +0 02000 0 03772    00042 TTR +0 02100 0 03770    03770 SXA +0 63400 2 04063    03771 TSX +0 07400 2 04063   
                   WORD = $ $                                                       309  LM00399
 03772 CLA +0 50000 0 01632    03773 STO +0 60100 0 01517                                                               
      SCANLP       THROUGH SCANLP, FOR EDCT = EDCT, 1,                              310  LM00400
                1  (EDLIN(EDCT+1).NE.BLANK) .OR. (EDCT+1.GE.COUNT)                  310  LM00401
 03774 CLA +0 50000 0 00126    03775 STO +0 60100 0 00126    03776 TRA +0 02000 0 04002    03777 CLA +0 50000 0 00126   
 04000 ADD +0 40000 0 01521    04001 STO +0 60100 0 00126    04002 CLA +0 50000 0 00126    04003 ADD +0 40000 0 01521   
 04004 SUB +0 40200 0 00122    04005 TZE +0 10000 0 04016    04006 TPL +0 12000 0 04016    04007 CLA +0 50000 0 00126   
 04010 ADD +0 40000 0 01521    04011 PAX +0 73400 1 00000    04012 CLA +0 50000 1 00700    04013 SUB +0 40200 0 00113   
 04014 TNZ -0 10000 0 04016    04015 TRA +0 02000 0 03777                                                               
       GTLP        EDCT = EDCT + 1                                                  311  LM00402
 04016 CLA +0 50000 0 00126    04017 ADD +0 40000 0 01521    04020 STO +0 60100 0 00126                                 
                   WHENEVER EDLIN(EDCT) .E. BLANK, FUNCTION RETURN WORD             312  LM00403
 04021 LXA +0 53400 1 00126    04022 CLA +0 50000 1 00700    04023 SUB +0 40200 0 00113    04024 TNZ -0 10000 0 04027   
 04025 CLA +0 50000 0 01517    04026 TRA +0 02000 0 04067                                                               
                   WHENEVER EDLIN(EDCT) .E. TAB .OR. EDCT .GE. COUNT                313  LM00404
 04027 CLA +0 50000 0 00126    04030 SUB +0 40200 0 00122    04031 TZE +0 10000 0 04037    04032 TPL +0 12000 0 04037   
 04033 LXA +0 53400 1 00126    04034 CLA +0 50000 1 00700    04035 SUB +0 40200 0 01512    04036 TNZ -0 10000 0 04044   
                     EDCT = EDCT - 1                                                314  LM00405
 04037 CLA +0 50000 0 00126    04040 SUB +0 40200 0 01521    04041 STO +0 60100 0 00126                                 
                     FUNCTION RETURN WORD                                           315  LM00406
 04042 CLA +0 50000 0 01517    04043 TRA +0 02000 0 04067                                                               
                   END OF CONDITIONAL                                               316  LM00407
                   WORD = (WORD .LS. 6) .V. HOL.(EDLIN(EDCT))                       317  LM00408
 04044 CLA +0 50000 0 00126    04045 SUB +0 40200 0 04046    04046 TXH +3 00000 0 00700    04047 STA +0 62100 0 04051   
 04050 TSX +0 07400 4 00015    04051 TXH +3 00000 0 00000    04052 STO +0 60100 0 04073    04053 CAL -0 50000 0 01524   
 04054 STA +0 62100 0 04056    04055 CAL -0 50000 0 01517    04056 ALS +0 76700 0 00000    04057 ORA -0 50100 0 04073   
 04060 SLW +0 60200 0 01517                                                                                             
                   TRANSFER TO GTLP                                                 318  LM00409
 04061 TRA +0 02000 0 00062                                                                                             
                 END OF FUNCTION                                                    319  LM00410
 04062 TSX +0 07400 4 00013    04063 TXH +3 00000 0 00000    04064 SXD -0 63400 1 04063    04065 SXA +0 63400 4 04067   
 04066 TRA +0 02000 2 00001    04067 AXT +0 77400 4 00000    04070 LXA +0 53400 2 04063    04071 LXD -0 53400 1 04063   
 04072 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION(STAR, EN)                                        320  LM00414
 04074 TRA +0 02000 0 04165                                                                                             
                 ENTRY TO PRNT.                                                     321  LM00415
 04075 TRA +0 02000 0 04100    00043 TTR +0 02100 0 04076    04076 SXA +0 63400 2 04144    04077 TSX +0 07400 2 04144   
                   TYPOUT.(LINE, STAR-1)                                            322  LM00416
 04100 CLA +0 50000 0 00024    04101 SUB +0 40200 0 01521    04102 STO +0 60100 0 04164    04103 TSX +0 07400 4 00035   
 04104 TXH +3 00000 0 01471    04105 TXH +3 00000 0 04164                                                               
                   TYPOUT.(REDS, 1)                                                 323  LM00417
 04106 TSX +0 07400 4 00035    04107 TXH +3 00000 0 01506    04110 TXH +3 00000 0 01521                                 
                   TYPOUT.(LINE(STAR-1), EN-STAR+1)                                 324  LM00418
 04111 CLA +0 50000 0 00024    04112 SUB +0 40200 0 00024    04113 ADD +0 40000 0 01521    04114 STO +0 60100 0 04164   
 04115 CLA +0 50000 0 00024    04116 SUB +0 40200 0 01521    04117 SUB +0 40200 0 04120    04120 TXH +3 00000 0 01471   
 04121 STA +0 62100 0 04123    04122 TSX +0 07400 4 00035    04123 TXH +3 00000 0 00000    04124 TXH +3 00000 0 04164   
                   TYPOUT.(BLACKS, 1)                                               325  LM00419
 04125 TSX +0 07400 4 00035    04126 TXH +3 00000 0 00112    04127 TXH +3 00000 0 01521                                 
                   TYPOUT.(LINE(EN), LENGTH-EN)                                     326  LM00420
 04130 CLA +0 50000 0 00717    04131 SUB +0 40200 0 00024    04132 STO +0 60100 0 04164    04133 CLA +0 50000 0 00024   
 04134 SUB +0 40200 0 04135    04135 TXH +3 00000 0 01471    04136 STA +0 62100 0 04140    04137 TSX +0 07400 4 00035   
 04140 TXH +3 00000 0 00000    04141 TXH +3 00000 0 04164                                                               
                   FUNCTION RETURN                                                  327  LM00421
 04142 TRA +0 02000 0 04160                                                                                             
                 END OF FUNCTION                                                    328  LM00422
 04143 TSX +0 07400 4 00013    04144 TXH +3 00000 0 00000    04145 SXD -0 63400 1 04144    04146 SXA +0 63400 4 04160   
 04147 CLA +0 50000 4 00001    04150 STA +0 62100 0 04100    04151 STA +0 62100 0 04112    04152 STA +0 62100 0 04115   
 04153 CLA +0 50000 4 00002    04154 STA +0 62100 0 04111    04155 STA +0 62100 0 04131    04156 STA +0 62100 0 04133   
 04157 TRA +0 02000 2 00001    04160 AXT +0 77400 4 00000    04161 LXA +0 53400 2 04144    04162 LXD -0 53400 1 04144   
 04163 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  329  LM00426
 04165 TRA +0 02000 0 04210                                                                                             
                 ENTRY TO CDINIT.                                                   330  LM00427
 04166 TRA +0 02000 0 04171    00040 TTR +0 02100 0 04167    04167 SXA +0 63400 2 04200    04170 TSX +0 07400 2 04200   
                 TBINIT.                                                            331  LM00428
 04171 TSX +0 07400 4 00044                                                                                             
                 SETCOL.(72)                                                        332  LM00429
 04172 TSX +0 07400 4 00026    04173 TXH +3 00000 0 01560                                                               
                 SINHB.(0)                                                          333  LM00430
 04174 TSX +0 07400 4 00032    04175 TXH +3 00000 0 01520                                                               
                 F'N                                                                334  LM00431
 04176 TRA +0 02000 0 04204                                                                                             
                 E'N                                                                335  LM00432
 04177 TSX +0 07400 4 00013    04200 TXH +3 00000 0 00000    04201 SXD -0 63400 1 04200    04202 SXA +0 63400 4 04204   
 04203 TRA +0 02000 2 00001    04204 AXT +0 77400 4 00000    04205 LXA +0 53400 2 04200    04206 LXD -0 53400 1 04200   
 04207 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  336  LM00436
 04210 TRA +0 02000 0 04655                                                                                             
                 ENTRY TO TBINIT.                                                   337  LM00437
 04211 TRA +0 02000 0 04214    00044 TTR +0 02100 0 04212    04212 SXA +0 63400 2 04645    04213 TSX +0 07400 2 04645   
                 NEWTBS.                                                            338  LM00438
 04214 TSX +0 07400 4 00021                                                                                             
                 NEWBKS.                                                            339  LM00439
 04215 TSX +0 07400 4 00020                                                                                             
                 W'R OLDSEC .E. $   MAD$                                            340  LM00440
 04216 CLA +0 50000 0 01502    04217 SUB +0 40200 0 01606    04220 TNZ -0 10000 0 04316                                 
                   T'H MTB, FOR VALUES OF TB = 12,17,22,27,32,37,42,47,55           341  LM00441
 04221 CLA +0 50000 0 01531    04222 STO +0 60100 0 01513    04223 CLA +0 50000 0 04226    04224 STO +0 60100 0 04307   
 04225 TRA +0 02000 0 04310    04226 TRA +0 02000 0 04227    04227 CLA +0 50000 0 01533    04230 STO +0 60100 0 01513   
 04231 CLA +0 50000 0 04234    04232 STO +0 60100 0 04307    04233 TRA +0 02000 0 04310    04234 TRA +0 02000 0 04235   
 04235 CLA +0 50000 0 01535    04236 STO +0 60100 0 01513    04237 CLA +0 50000 0 04242    04240 STO +0 60100 0 04307   
 04241 TRA +0 02000 0 04310    04242 TRA +0 02000 0 04243    04243 CLA +0 50000 0 01537    04244 STO +0 60100 0 01513   
 04245 CLA +0 50000 0 04250    04246 STO +0 60100 0 04307    04247 TRA +0 02000 0 04310    04250 TRA +0 02000 0 04251   
 04251 CLA +0 50000 0 01542    04252 STO +0 60100 0 01513    04253 CLA +0 50000 0 04256    04254 STO +0 60100 0 04307   
 04255 TRA +0 02000 0 04310    04256 TRA +0 02000 0 04257    04257 CLA +0 50000 0 01545    04260 STO +0 60100 0 01513   
 04261 CLA +0 50000 0 04264    04262 STO +0 60100 0 04307    04263 TRA +0 02000 0 04310    04264 TRA +0 02000 0 04265   
 04265 CLA +0 50000 0 01550    04266 STO +0 60100 0 01513    04267 CLA +0 50000 0 04272    04270 STO +0 60100 0 04307   
 04271 TRA +0 02000 0 04310    04272 TRA +0 02000 0 04273    04273 CLA +0 50000 0 01552    04274 STO +0 60100 0 01513   
 04275 CLA +0 50000 0 04300    04276 STO +0 60100 0 04307    04277 TRA +0 02000 0 04310    04300 TRA +0 02000 0 04301   
 04301 CLA +0 50000 0 01554    04302 STO +0 60100 0 01513    04303 CLA +0 50000 0 04306    04304 STO +0 60100 0 04307   
 04305 TRA +0 02000 0 04310    04306 TRA +0 02000 0 04313    04307 TRA +0 02000 0 04307                                 
      MTB            TABSET.(TB)                                                    342  LM00442
 04310 TSX +0 07400 4 00033    04311 TXH +3 00000 0 01513    04312 TRA +0 02000 0 04307                                 
                   BKSET.(12)                                                       343  LM00443
 04313 TSX +0 07400 4 00002    04314 TXH +3 00000 0 01531                                                               
                 O'R OLDSEC .E. $   FAP$                                            344  LM00444
 04315 TRA +0 02000 0 04643    04316 CLA +0 50000 0 01502    04317 SUB +0 40200 0 01605    04320 TNZ -0 10000 0 04406   
                   T'H FTB, FOR VALUES OF TB = 8,16,30,34,38,42,46,55               345  LM00445
 04321 CLA +0 50000 0 01526    04322 STO +0 60100 0 01513    04323 CLA +0 50000 0 04326    04324 STO +0 60100 0 04401   
 04325 TRA +0 02000 0 04402    04326 TRA +0 02000 0 04327    04327 CLA +0 50000 0 01532    04330 STO +0 60100 0 01513   
 04331 CLA +0 50000 0 04334    04332 STO +0 60100 0 04401    04333 TRA +0 02000 0 04402    04334 TRA +0 02000 0 04335   
 04335 CLA +0 50000 0 01540    04336 STO +0 60100 0 01513    04337 CLA +0 50000 0 04342    04340 STO +0 60100 0 04401   
 04341 TRA +0 02000 0 04402    04342 TRA +0 02000 0 04343    04343 CLA +0 50000 0 01543    04344 STO +0 60100 0 01513   
 04345 CLA +0 50000 0 04350    04346 STO +0 60100 0 04401    04347 TRA +0 02000 0 04402    04350 TRA +0 02000 0 04351   
 04351 CLA +0 50000 0 01546    04352 STO +0 60100 0 01513    04353 CLA +0 50000 0 04356    04354 STO +0 60100 0 04401   
 04355 TRA +0 02000 0 04402    04356 TRA +0 02000 0 04357    04357 CLA +0 50000 0 01550    04360 STO +0 60100 0 01513   
 04361 CLA +0 50000 0 04364    04362 STO +0 60100 0 04401    04363 TRA +0 02000 0 04402    04364 TRA +0 02000 0 04365   
 04365 CLA +0 50000 0 01551    04366 STO +0 60100 0 01513    04367 CLA +0 50000 0 04372    04370 STO +0 60100 0 04401   
 04371 TRA +0 02000 0 04402    04372 TRA +0 02000 0 04373    04373 CLA +0 50000 0 01554    04374 STO +0 60100 0 01513   
 04375 CLA +0 50000 0 04400    04376 STO +0 60100 0 04401    04377 TRA +0 02000 0 04402    04400 TRA +0 02000 0 04405   
 04401 TRA +0 02000 0 04401                                                                                             
      FTB            TABSET.(TB)                                                    346  LM00446
 04402 TSX +0 07400 4 00033    04403 TXH +3 00000 0 01513    04404 TRA +0 02000 0 04401                                 
                 O'R OLDSEC .E. $MADTRN$                                            347  LM00447
 04405 TRA +0 02000 0 04643    04406 CLA +0 50000 0 01502    04407 SUB +0 40200 0 01570    04410 TNZ -0 10000 0 04514   
                   T'H F2TB, FOR VALUES OF TB = 7,12,17,22,27,32,37,42,47,55        348  LM00448
 04411 CLA +0 50000 0 01525    04412 STO +0 60100 0 01513    04413 CLA +0 50000 0 04416    04414 STO +0 60100 0 04505   
 04415 TRA +0 02000 0 04506    04416 TRA +0 02000 0 04417    04417 CLA +0 50000 0 01531    04420 STO +0 60100 0 01513   
 04421 CLA +0 50000 0 04424    04422 STO +0 60100 0 04505    04423 TRA +0 02000 0 04506    04424 TRA +0 02000 0 04425   
 04425 CLA +0 50000 0 01533    04426 STO +0 60100 0 01513    04427 CLA +0 50000 0 04432    04430 STO +0 60100 0 04505   
 04431 TRA +0 02000 0 04506    04432 TRA +0 02000 0 04433    04433 CLA +0 50000 0 01535    04434 STO +0 60100 0 01513   
 04435 CLA +0 50000 0 04440    04436 STO +0 60100 0 04505    04437 TRA +0 02000 0 04506    04440 TRA +0 02000 0 04441   
 04441 CLA +0 50000 0 01537    04442 STO +0 60100 0 01513    04443 CLA +0 50000 0 04446    04444 STO +0 60100 0 04505   
 04445 TRA +0 02000 0 04506    04446 TRA +0 02000 0 04447    04447 CLA +0 50000 0 01542    04450 STO +0 60100 0 01513   
 04451 CLA +0 50000 0 04454    04452 STO +0 60100 0 04505    04453 TRA +0 02000 0 04506    04454 TRA +0 02000 0 04455   
 04455 CLA +0 50000 0 01545    04456 STO +0 60100 0 01513    04457 CLA +0 50000 0 04462    04460 STO +0 60100 0 04505   
 04461 TRA +0 02000 0 04506    04462 TRA +0 02000 0 04463    04463 CLA +0 50000 0 01550    04464 STO +0 60100 0 01513   
 04465 CLA +0 50000 0 04470    04466 STO +0 60100 0 04505    04467 TRA +0 02000 0 04506    04470 TRA +0 02000 0 04471   
 04471 CLA +0 50000 0 01552    04472 STO +0 60100 0 01513    04473 CLA +0 50000 0 04476    04474 STO +0 60100 0 04505   
 04475 TRA +0 02000 0 04506    04476 TRA +0 02000 0 04477    04477 CLA +0 50000 0 01554    04500 STO +0 60100 0 01513   
 04501 CLA +0 50000 0 04504    04502 STO +0 60100 0 04505    04503 TRA +0 02000 0 04506    04504 TRA +0 02000 0 04511   
 04505 TRA +0 02000 0 04505                                                                                             
      F2TB           TABSET.(TB)                                                    349  LM00449
 04506 TSX +0 07400 4 00033    04507 TXH +3 00000 0 01513    04510 TRA +0 02000 0 04505                                 
                   BKSET.(7)                                                        350  LM00450
 04511 TSX +0 07400 4 00002    04512 TXH +3 00000 0 01525                                                               
                 O'R OLDSEC .E. $ ALGOL$                                            351  LM00451
 04513 TRA +0 02000 0 04643    04514 CLA +0 50000 0 01502    04515 SUB +0 40200 0 01572    04516 TNZ -0 10000 0 04634   
                   T'H ATB, FOR VALUES OF TB = 11,16,21,26,31,36,41,46,51,56,       352  LM00452
                1    61,66                                                          352  LM00453
 04517 CLA +0 50000 0 01530    04520 STO +0 60100 0 01513    04521 CLA +0 50000 0 04524    04522 STO +0 60100 0 04627   
 04523 TRA +0 02000 0 04630    04524 TRA +0 02000 0 04525    04525 CLA +0 50000 0 01532    04526 STO +0 60100 0 01513   
 04527 CLA +0 50000 0 04532    04530 STO +0 60100 0 04627    04531 TRA +0 02000 0 04630    04532 TRA +0 02000 0 04533   
 04533 CLA +0 50000 0 01534    04534 STO +0 60100 0 01513    04535 CLA +0 50000 0 04540    04536 STO +0 60100 0 04627   
 04537 TRA +0 02000 0 04630    04540 TRA +0 02000 0 04541    04541 CLA +0 50000 0 01536    04542 STO +0 60100 0 01513   
 04543 CLA +0 50000 0 04546    04544 STO +0 60100 0 04627    04545 TRA +0 02000 0 04630    04546 TRA +0 02000 0 04547   
 04547 CLA +0 50000 0 01541    04550 STO +0 60100 0 01513    04551 CLA +0 50000 0 04554    04552 STO +0 60100 0 04627   
 04553 TRA +0 02000 0 04630    04554 TRA +0 02000 0 04555    04555 CLA +0 50000 0 01544    04556 STO +0 60100 0 01513   
 04557 CLA +0 50000 0 04562    04560 STO +0 60100 0 04627    04561 TRA +0 02000 0 04630    04562 TRA +0 02000 0 04563   
 04563 CLA +0 50000 0 01547    04564 STO +0 60100 0 01513    04565 CLA +0 50000 0 04570    04566 STO +0 60100 0 04627   
 04567 TRA +0 02000 0 04630    04570 TRA +0 02000 0 04571    04571 CLA +0 50000 0 01551    04572 STO +0 60100 0 01513   
 04573 CLA +0 50000 0 04576    04574 STO +0 60100 0 04627    04575 TRA +0 02000 0 04630    04576 TRA +0 02000 0 04577   
 04577 CLA +0 50000 0 01553    04600 STO +0 60100 0 01513    04601 CLA +0 50000 0 04604    04602 STO +0 60100 0 04627   
 04603 TRA +0 02000 0 04630    04604 TRA +0 02000 0 04605    04605 CLA +0 50000 0 01555    04606 STO +0 60100 0 01513   
 04607 CLA +0 50000 0 04612    04610 STO +0 60100 0 04627    04611 TRA +0 02000 0 04630    04612 TRA +0 02000 0 04613   
 04613 CLA +0 50000 0 01556    04614 STO +0 60100 0 01513    04615 CLA +0 50000 0 04620    04616 STO +0 60100 0 04627   
 04617 TRA +0 02000 0 04630    04620 TRA +0 02000 0 04621    04621 CLA +0 50000 0 01557    04622 STO +0 60100 0 01513   
 04623 CLA +0 50000 0 04626    04624 STO +0 60100 0 04627    04625 TRA +0 02000 0 04630    04626 TRA +0 02000 0 04633   
 04627 TRA +0 02000 0 04627                                                                                             
      ATB            TABSET.(TB)                                                    353  LM00454
 04630 TSX +0 07400 4 00033    04631 TXH +3 00000 0 01513    04632 TRA +0 02000 0 04627                                 
                 O'E                                                                354  LM00455
 04633 TRA +0 02000 0 04643                                                                                             
                   PRINT COMMENT $OT1A1B1S0 1N1O1T0 1S1E1T0.$                       355  LM00456
 04634 TSX +0 07400 4 00016    04635     +0 00000 0 00005    04636     -0 66301 2 10122    04637     +0 16200 6 00145   
 04640     +0 14601 6 30060    04641     +0 16201 2 50163    04642     +0 03360 6 06060                                 
                 E'L                                                                356  LM00457
                 FUNCTION RETURN                                                    357  LM00458
 04643 TRA +0 02000 0 04651                                                                                             
                 END OF FUNCTION                                                    358  LM00459
 04644 TSX +0 07400 4 00013    04645 TXH +3 00000 0 00000    04646 SXD -0 63400 1 04645    04647 SXA +0 63400 4 04651   
 04650 TRA +0 02000 2 00001    04651 AXT +0 77400 4 00000    04652 LXA +0 53400 2 04645    04653 LXD -0 53400 1 04645   
 04654 TRA +0 02000 4 00001                                                                                             
                 END OF PROGRAM                                                     359  LM00461
 04655 TSX +0 07400 4 00013                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  EDLVAL   MAD            09/18/68    0946.7
-                 
                 ..  ROUTINE TO RETURN INITIAL VALUES TO EDITOR FOR                                    LM00001    
                 ..  EDITING ASCII FILES.                                                              LM00002    
                                                                                                       LM00003    
                  EXTERNAL FUNCTION(BLANK, TAB, DEFALT, MCHNG, REDS, BLACKS)                      *001 LM00004    
                  NORMAL MODE IS INTEGER                                                          *002 LM00005    
                  ENTRY TO GETVAL.                                                                *003 LM00006    
                    BLANK  = 060K                                                                 *004 LM00007    
                    TAB    = 072K                                                                 *005 LM00008    
                    DEFALT = $   MAD$                                                             *006 LM00009    
                    MCHNG  = 055K                                                                 *007 LM00010    
                    REDS   = 133K                                                                 *008 LM00011    
                    BLACKS = 132K                                                                 *009 LM00012    
                    FUNCTION RETURN                                                               *010 LM00013    
                  END OF FUNCTION                                                                 *011 LM00014    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00061 TRANSFER VECTOR LENGTH  00001 PROGRAM BEGINS    00012
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      GETVAL 00013   0                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00006 +000000000132     00007 +000000000133     00003 +000000000055     00011 -206060442124     00005 +000000000072    
 00004 +000000000060     00002 +000000000001     00010 +233000000000                                                    
0PROGRAM    
                 EXTERNAL FUNCTION(BLANK, TAB, DEFALT, MCHNG, REDS, BLACKS)         001  LM00004
                 NORMAL MODE IS INTEGER                                             002  LM00005
                 ENTRY TO GETVAL.                                                   003  LM00006
 00012 TRA +0 02000 0 00015    00013 SXA +0 63400 2 00033    00014 TSX +0 07400 2 00033                                 
                   BLANK  = 060K                                                    004  LM00007
 00015 CLA +0 50000 0 00004    00016 STO +0 60100 0 00024                                                               
                   TAB    = 072K                                                    005  LM00008
 00017 CLA +0 50000 0 00005    00020 STO +0 60100 0 00024                                                               
                   DEFALT = $   MAD$                                                006  LM00009
 00021 CLA +0 50000 0 00011    00022 STO +0 60100 0 00024                                                               
                   MCHNG  = 055K                                                    007  LM00010
 00023 CLA +0 50000 0 00003    00024 STO +0 60100 0 00024                                                               
                   REDS   = 133K                                                    008  LM00011
 00025 CLA +0 50000 0 00007    00026 STO +0 60100 0 00024                                                               
                   BLACKS = 132K                                                    009  LM00012
 00027 CLA +0 50000 0 00006    00030 STO +0 60100 0 00024                                                               
                   FUNCTION RETURN                                                  010  LM00013
 00031 TRA +0 02000 0 00053                                                                                             
                 END OF FUNCTION                                                    011  LM00014
 00032 TSX +0 07400 4 00000    00033 TXH +3 00000 0 00000    00034 SXD -0 63400 1 00033    00035 SXA +0 63400 4 00053   
 00036 CLA +0 50000 4 00001    00037 STA +0 62100 0 00016    00040 CLA +0 50000 4 00002    00041 STA +0 62100 0 00020   
 00042 CLA +0 50000 4 00003    00043 STA +0 62100 0 00022    00044 CLA +0 50000 4 00004    00045 STA +0 62100 0 00024   
 00046 CLA +0 50000 4 00005    00047 STA +0 62100 0 00026    00050 CLA +0 50000 4 00006    00051 STA +0 62100 0 00030   
 00052 TRA +0 02000 2 00001    00053 AXT +0 77400 4 00000    00054 LXA +0 53400 2 00033    00055 LXD -0 53400 1 00033   
 00056 TRA +0 02000 4 00001                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  6CONCD   MAD            09/18/68    0957.6
-                 
                  CARD IMAGE I/O MODULE FOR EDL PACKAGE.                                               LM00001    
                                                                                                       LM00002    
                     PETER R. BOS     SEPTEMBER 1967.                                                  LM00003    
                                                                                                       LM00004    
                  THIS MODULE, TOGETHER WITH THE OTHER COMPONENTS                                      LM00005    
                  OF THE EDL COMMAND, IS INTENDED TO PROVIDE AN                                        LM00006    
                  ALTERNATIVE TO THE SYSTEM COMMAND 'ED', GIVING                                       LM00007    
                  SOMEWHAT GREATER CONVENIENCES, AND ALLOWING                                          LM00008    
                  INTERMEDIATE FILES TO BE WRITTEN IN TEMPORARY                                        LM00009    
                  MODE WHEN EXCEEDING RECORD QUOTAS (WHICH ED DOES                                     LM00010    
                  NOT DO). WHEN USED TOGETHER WITH THE MODIFIED                                        LM00011    
                  MAIN PROGRAM 'EDITCD', TAB SETTINGS ARE INTERPRETED,                                 LM00012    
                  AND FILES MAY BE SERIALIZED.                                                         LM00013    
                                                                                                       LM00014    
                  EXTERNAL FUNCTION (LINE, L, EOF)                                                *001 LM00015    
                  NORMAL MODE IS INTEGER                                                          *002 LM00016    
                  BOOLEAN SRINHB                                                                  *003 LM00017    
                  STATEMENT LABEL EOF                                                             *004 LM00018    
                  INSERT FILE .MOD.                                                               *005 LM00019    
                      DEFINE BINARY OPERATOR .MOD., PRECEDENCE SAME AS /                          *006 LM00001    
                      MODE STRUCTURE 1 .MOD. 1 TO 1                                               *007 LM00002    
             JMP      *+1,AT,*+3                                                                  *008 LM00003    
             JMP      *+11,AC,*+1                                                                 *009 LM00004    
             JMP      *+12,LA,*+6                                                                 *010 LM00005    
             JMP      *+13,AC,*+1                                                                 *011 LM00006    
             JMP      *+2,MQ,*+1                                                                  *012 LM00007    
             JMP      *+13,LA,*+2                                                                 *013 LM00008    
             STQ      T                                                                           *014 LM00009    
             LDQ      A                                                                           *015 LM00010    
             PXD                                                                                  *016 LM00011    
             LLS      0                                                                           *017 LM00012    
             DVP      B                                                                           *018 LM00013    
             OUT      AC                                                                          *019 LM00014    
             XCA                                                                                  *020 LM00015    
             JMP      *-5                                                                         *021 LM00016    
             XCL                                                                                  *022 LM00017    
             JMP      *-7                                                                         *023 LM00018    
             STO      T                                                                           *024 LM00019    
             JMP      *-10                                                                        *025 LM00020    
             SLW      T                                                                           *026 LM00021    
             JMP      *-12                                                                        *027 LM00022    
             END                                                                                  *028 LM00023    
                  DIMENSION CARD(14), TB(20), BK(84)                                              *029 LM00020    
                  VECTOR VALUES BK=377777777777K                                                  *030 LM00021    
                  VECTOR VALUES NBKS=0                                                            *031 LM00022    
                  VECTOR VALUES MXBKS=83                                                          *032 LM00023    
                  VECTOR VALUES TB=377777777777K                                                  *033 LM00024    
                  VECTOR VALUES MXTBS=20                                                          *034 LM00025    
                  VECTOR VALUES NTBS=0                                                            *035 LM00026    
                  VECTOR VALUES FNS3=377777777777K                                                *036 LM00027    
                  VECTOR VALUES FNS7=777777777777K                                                *037 LM00028    
                  VECTOR VALUES FSTNO=10                                                          *038 LM00029    
                  VECTOR VALUES INCR=10                                                           *039 LM00030    
                  VECTOR VALUES NXTNO=10                                                          *040 LM00031    
                  VECTOR VALUES ZLNO=$ 00000$                                                     *041 LM00032    
                  VECTOR VALUES SRINHB=0B                                                         *042 LM00033    
                  VECTOR VALUES BLNK=60K                                                          *043 LM00034    
                  VECTOR VALUES BLNKS=$ $                                                         *044 LM00035    
                  VECTOR VALUES RETURN=55K                                                        *045 LM00036    
                  VECTOR VALUES TAB=72K                                                           *046 LM00037    
                  VECTOR VALUES BKSP=35K                                                          *047 LM00038    
                    (COLON USED FOR BACKSPACE)                                                         LM00039    
                  VECTOR VALUES NCOLS=72                                                          *048 LM00040    
                  VECTOR VALUES MXCOLS=84                                                         *049 LM00041    
                  VECTOR VALUES SRCOL=72                                                          *050 LM00042    
                  VECTOR VALUES NWRDS=14                                                          *051 LM00043    
                  VECTOR VALUES NCLWD=2                                                           *052 LM00044    
                  VECTOR VALUES NCHRS=6                                                           *053 LM00045    
                  VECTOR VALUES BTSCHR=6                                                          *054 LM00046    
                  VECTOR VALUES CHRMSK=77K                                                        *055 LM00047    
                  VECTOR VALUES UNMSK=777777777700K                                               *056 LM00048    
                                                                                                       LM00049    
                  ENTRY TO SETBK.                                                                 *057 LM00050    
                  BKSP=LINE.A.CHRMSK                                                              *058 LM00051    
                  FUNCTION RETURN                                                                 *059 LM00052    
                                                                                                       LM00053    
                  ENTRY TO WRITE.                                                                 *060 LM00054    
                  ( WRITE.(LINE,LENGTH) )                                                              LM00055    
                  B=0                                                                             *061 LM00056    
                  T=0                                                                             *062 LM00057    
                  WHENEVER L.L.1, FUNCTION RETURN                                                 *063 LM00058    
                  LTH=L-1                                                                         *064 LM00059    
                  J=1                                                                             *065 LM00060    
                  THROUGH UNCNV, FOR I=1,1,I.G.LTH                                                *066 LM00061    
      GTTB          THROUGH GTTB, FOR T=0,1,TB(T).G.J                                             *067 LM00062    
      GTBK          THROUGH GTBK, FOR B=0,1,BK(B).GE.J                                            *068 LM00063    
                    CHAR=LINE(I).A.CHRMSK                                                         *069 LM00064    
                    WHENEVER CHAR.E.TAB                                                           *070 LM00065    
                      WHENEVER TB(T).E.FNS3                                                       *071 LM00066    
                        CHAR=BLNK                                                                 *072 LM00067    
                        TRANSFER TO ISCHR                                                         *073 LM00068    
                      END OF CONDITIONAL                                                          *074 LM00069    
                      THROUGH FILLT, FOR J=J,1,J.E.TB(T)                                          *075 LM00070    
                        STCHR.(BLNK,J,EOLW)                                                       *076 LM00071    
      FILLT           CONTINUE                                                                    *077 LM00072    
                    OR WHENEVER CHAR.E.BKSP.AND.J.E.BK(B)                                         *078 LM00073    
                      J=J-1                                                                       *079 LM00074    
                    OTHERWISE                                                                     *080 LM00075    
      ISCHR           STCHR.(CHAR,J,EOLW)                                                         *081 LM00076    
                      J=J+1                                                                       *082 LM00077    
                    END OF CONDITIONAL                                                            *083 LM00078    
      UNCNV       CONTINUE                                                                        *084 LM00079    
      EOLW        FILLB.                                                                          *085 LM00080    
                  WHENEVER .NOT.SRINHB, SERIAL.                                                   *086 LM00081    
                  WRCARD.                                                                         *087 LM00082    
                  FUNCTION RETURN                                                                 *088 LM00083    
                                                                                                       LM00084    
                  ENTRY TO READ.                                                                  *089 LM00085    
                  ( LENGTH=READ.(LINE,BUFSIZ,EOF) )                                                    LM00086    
                  B=0                                                                             *090 LM00087    
                  T=0                                                                             *091 LM00088    
                  LTH=L-1                                                                         *092 LM00089    
                  J=1                                                                             *093 LM00090    
                  LAST=0                                                                          *094 LM00091    
                  RDCARD.(EOF)                                                                    *095 LM00092    
                  THROUGH CNVRT, FOR I=1,1,I.G.LTH                                                *096 LM00093    
                    GTCHR.(CHAR,J,EOLR)                                                           *097 LM00094    
                    WHENEVER CHAR.NE.BLNK, LAST=I                                                 *098 LM00095    
                    LINE(I)=CHAR                                                                  *099 LM00096    
                    J=J+1                                                                         *100 LM00097    
      CNVRT       CONTINUE                                                                        *101 LM00098    
      EOLR        LINE(LAST+1)=RETURN                                                             *102 LM00099    
                  FUNCTION RETURN LAST+1                                                          *103 LM00100    
                                                                                                       LM00101    
                  ENTRY TO BOTTOM.                                                                *104 LM00102    
      RD          RDCARD.(ENDB)                                                                   *105 LM00103    
                  J=NCOLS+1                                                                       *106 LM00104    
                  FILLB.                                                                          *107 LM00105    
                  WHENEVER .NOT. SRINHB, SERIAL.                                                  *108 LM00106    
                  WRCARD.                                                                         *109 LM00107    
                  TRANSFER TO RD                                                                  *110 LM00108    
      ENDB        FUNCTION RETURN                                                                 *111 LM00109    
                                                                                                       LM00110    
                  ENTRY TO NEWTBS.                                                                *112 LM00111    
                  TB=FNS3                                                                         *113 LM00112    
                  NTBS=0                                                                          *114 LM00113    
                  FUNCTION RETURN                                                                 *115 LM00114    
                                                                                                       LM00115    
                  ENTRY TO NEWBKS.                                                                *116 LM00116    
                  BK=FNS3                                                                         *117 LM00117    
                  NBKS=0                                                                          *118 LM00118    
                  FUNCTION RETURN                                                                 *119 LM00119    
                                                                                                       LM00120    
                  ENTRY TO TABSET.                                                                *120 LM00121    
                  WHENEVER NTBS.GE.MXTBS, FUNCTION RETURN                                         *121 LM00122    
                  WHENEVER LINE.L.TB(NTBS-1).AND.NTBS.G.0, FUNCTION RETURN                        *122 LM00123    
                  TB(NTBS)=LINE                                                                   *123 LM00124    
                  NTBS=NTBS+1                                                                     *124 LM00125    
                  TB(NTBS)=FNS3                                                                   *125 LM00126    
                  FUNCTION RETURN                                                                 *126 LM00127    
                                                                                                       LM00128    
                  ENTRY TO BKSET.                                                                 *127 LM00129    
                  WHENEVER LINE.G.NCOLS, FUNCTION RETURN                                          *128 LM00130    
                  WHENEVER NBKS.GE.MXBKS, FUNCTION RETURN                                         *129 LM00131    
                  WHENEVER LINE.LE.1, FUNCTION RETURN                                             *130 LM00132    
                  WHENEVER LINE.L.BK(NBKS-1).AND.NBKS.G.0, FUNCTION RETURN                        *131 LM00133    
                  BK(NBKS)=LINE                                                                   *132 LM00134    
                  NBKS=NBKS+1                                                                     *133 LM00135    
                  BK(NBKS)=FNS3                                                                   *134 LM00136    
                  FUNCTION RETURN                                                                 *135 LM00137    
                                                                                                       LM00138    
                  ENTRY TO SETSR.                                                                 *136 LM00139    
                  NXTNO=LINE                                                                      *137 LM00140    
                  FSTNO=LINE                                                                      *138 LM00141    
                  INCR=L                                                                          *139 LM00142    
                  FUNCTION RETURN                                                                 *140 LM00143    
                                                                                                       LM00144    
                  ENTRY TO SINHB.                                                                 *141 LM00145    
                  EQUIVALENCE(INHB,SRINHB)                                                        *142 LM00146    
                  INHB=LINE                                                                       *143 LM00147    
                  FUNCTION RETURN                                                                 *144 LM00148    
                                                                                                       LM00149    
                  ENTRY TO SETCOL.                                                                *145 LM00150    
                  NCOLS=LINE                                                                      *146 LM00151    
                  WHENEVER NCOLS.E.0, NCOLS=SRCOL                                                 *147 LM00152    
                  WHENEVER NCOLS.NE.SRCOL, SRINHB=1B                                              *148 LM00153    
                  WHENEVER NCOLS.G.MXCOLS, NCOLS=MXCOLS                                           *149 LM00154    
                  FUNCTION RETURN                                                                 *150 LM00155    
                                                                                                       LM00156    
                  ENTRY TO CLOSEW.                                                                *151 LM00157    
                  NXTNO = FSTNO                                                                   *152 LM00158    
                  FILE.                                                                           *153 LM00159    
                  FUNCTION RETURN                                                                 *154 LM00160    
                                                                                                       LM00161    
                                                                                                       LM00162    
                  ...INTERNAL SUBROUTINES.                                                             LM00163    
                                                                                                       LM00164    
                  INTERNAL FUNCTION (ENDF)                                                        *155 LM00165    
                  STATEMENT LABEL ENDF                                                            *156 LM00166    
                  ENTRY TO RDCARD.                                                                *157 LM00167    
                  THROUGH RDLP, FOR N=NWRDS,-1,N.L.1                                              *158 LM00168    
                    CARD(N)=RDWORD.(ENDF)                                                         *159 LM00169    
      RDLP        CONTINUE                                                                        *160 LM00170    
                  FUNCTION RETURN                                                                 *161 LM00171    
                                                                                                       LM00172    
                  ENTRY TO WRCARD.                                                                *162 LM00173    
                  THROUGH WRLP, FOR N=NWRDS,-1,N.L.1                                              *163 LM00174    
                    WRWORD.(CARD(N))                                                              *164 LM00175    
      WRLP        CONTINUE                                                                        *165 LM00176    
                  FUNCTION RETURN                                                                 *166 LM00177    
                  END OF FUNCTION                                                                 *167 LM00178    
                                                                                                       LM00179    
                  INTERNAL FUNCTION (ARG1,ARG2,LOC)                                               *168 LM00180    
                  STATEMENT LABEL LOC                                                             *169 LM00181    
                  ENTRY TO GTCHR.                                                                 *170 LM00182    
                  WHENEVER ARG2.G.NCOLS, TRANSFER TO LOC                                          *171 LM00183    
                  M=BTSCHR*(NCHRS-1-(ARG2-1).MOD.NCHRS)                                           *172 LM00184    
                  N=NWRDS-(ARG2-1)/NCHRS                                                          *173 LM00185    
                  ARG1=(CARD(N).RS.M).A.CHRMSK                                                    *174 LM00186    
                  FUNCTION RETURN                                                                 *175 LM00187    
                                                                                                       LM00188    
                  ENTRY TO STCHR.                                                                 *176 LM00189    
                  WHENEVER ARG2.G.NCOLS, TRANSFER TO LOC                                          *177 LM00190    
                  M=BTSCHR*(NCHRS-1-(ARG2-1).MOD.NCHRS)                                           *178 LM00191    
                  N=NWRDS-(ARG2-1)/NCHRS                                                          *179 LM00192    
                  CARD(N)=(CARD(N).A.UNMSK.LS.M).V.((ARG1.A.CHRMSK).LS.M)                         *180 LM00193    
                  FUNCTION RETURN                                                                 *181 LM00194    
                  END OF FUNCTION                                                                 *182 LM00195    
                                                                                                       LM00196    
                  INTERNAL FUNCTION (ARG1,ARG2)                                                   *183 LM00197    
                  ENTRY TO SERIAL.                                                                *184 LM00198    
                  LNO=DERBC.(NXTNO).V.ZLNO                                                        *185 LM00199    
                  CARD(2)=(LNO.RS.(BTSCHR*NCLWD)).V.                                              *186 LM00200    
                1   (BLNKS.LS.(BTSCHR*(NCHRS-NCLWD)))                                             *186 LM00201    
                  CARD(1)=LNO.LS.(BTSCHR*(NCHRS-NCLWD)).V.                                        *187 LM00202    
                1   (BLNKS.RS.(BTSCHR*NCLWD))                                                     *187 LM00203    
                  NXTNO=NXTNO+INCR                                                                *188 LM00204    
                  FUNCTION RETURN                                                                 *189 LM00205    
                  END OF FUNCTION                                                                 *190 LM00206    
                                                                                                       LM00207    
                  INTERNAL FUNCTION                                                               *191 LM00208    
                  ENTRY TO FILLB.                                                                 *192 LM00209    
                  NC=J-1                                                                          *193 LM00210    
                  M=BTSCHR*((NC-1).MOD.NCHRS+1)                                                   *194 LM00211    
                  N=NWRDS-(NC-1)/NCHRS                                                            *195 LM00212    
                  CARD(N)=(CARD(N).A.(FNS7.LS.(BTSCHR*NCHRS-M))).V.(BLNKS.RS.M)                   *196 LM00213    
                  THROUGH BLANK, FOR N=N-1,-1,N.L.1                                               *197 LM00214    
                    CARD(N)=BLNKS                                                                 *198 LM00215    
      BLANK       CONTINUE                                                                        *199 LM00216    
                  FUNCTION RETURN                                                                 *200 LM00217    
                  END OF FUNCTION                                                                 *201 LM00218    
                                                                                                       LM00219    
                  END OF FUNCTION                                                                 *202 LM00220    
                                       MODE STRUCTURE 1 .MOD. 1 TO 1          007  LM00002
 (THE NUMERIC FORM OF THE OPERATOR-MODE ARGUMENT IS    11111 )    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   01443 TRANSFER VECTOR LENGTH  00005 PROGRAM BEGINS    00261
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      CLOSEW 00740   0        SETCOL 00712   0        SINHB  00704   0        SETSR  00672   0        BKSET  00622   0  
      TABSET 00564   0        NEWBKS 00554   0        NEWTBS 00544   0        BOTTOM 00525   0        READ   00443   0  
      WRITE  00271   0        SETBK  00262   0                                                                          
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      BK     00146 A 1        ENDB   00015   4        I      00201   1        NCHRS  00213 A 1        RETURN 00223 A 1  
      BKSP   00147 A 1        EOLR   00016   4        ISCHR  00020   4        NCLWD  00214 A 1        SRCOL  00224 A 1  
      BLANK  00013   4        EOLW   00017   4        J      00202   1        NCOLS  00215 A 1        SRINHB 00014 A 2  
      BLNK   00150 A 1        FILLT  00013   4        LAST   00203   1        NC     00216   1        TAB    00225 A 1  
      BLNKS  00151 A 1        FNS3   00175 A 1        LNO    00204   1        N      00217   1        TB     00252 A 1  
      B      00152   1        FNS7   00176 A 1        LTH    00205   1        NTBS   00220 A 1        T      00253   1  
      BTSCHR 00153 A 1        FSTNO  00177 A 1        M      00206   1        NWRDS  00221 A 1        UNCNV  00013   4  
      CARD   00172 A 1        GTBK   00013   4        MXBKS  00207 A 1        NXTNO  00222 A 1        UNMSK  00254 A 1  
      CHAR   00173   1        GTTB   00013   4        MXCOLS 00210 A 1        RDLP   00013   4        WRLP   00013   4  
      CHRMSK 00174 A 1        INCR   00200 A 1        MXTBS  00211 A 1        RD     00021   4        ZLNO   00255 A 1  
      CNVRT  00013   4        INHB   00014   1        NBKS   00212 A 1                                                  
0FUNCTION DICTIONARY    
      DERBC  00000   1        EXIT   00001   1        FILE   00002   1        RDWORD 00003   1        WRWORD 00004   1  
      FILLB  00005   1        GTCHR  00006   1        RDCARD 00007   1        SERIAL 00010   1        STCHR  00011   1  
      WRCARD 00012   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00256 +000000000000     00257 +000000000001     00260 +233000000000                                                    
0STATEMENT DICTIONARY   
 00015 TXL -300543000542       00016 TXL -300521000514       00017 TXL -300435000434       00020 TXL -300430000424      
 00021 TXL -300531000527                                                                                                
0PROGRAM    
                 EXTERNAL FUNCTION (LINE, L, EOF)                                   001  LM00015
                 NORMAL MODE IS INTEGER                                             002  LM00016
                 BOOLEAN SRINHB                                                     003  LM00017
                 STATEMENT LABEL EOF                                                004  LM00018
                 INSERT FILE .MOD.                                                  005  LM00019
                     DEFINE BINARY OPERATOR .MOD., PRECEDENCE SAME AS /             006  LM00001
                     MODE STRUCTURE 1 .MOD. 1 TO 1                                  007  LM00002
                 D'N CARD(14), TB(20), BK(84)                                       029  LM00020
                 V'S BK=377777777777K                                               030  LM00021
 00146     +3 77777 7 77777                                                                                             
                 V'S NBKS=0                                                         031  LM00022
 00212     +0 00000 0 00000                                                                                             
                 V'S MXBKS=83                                                       032  LM00023
 00207     +0 00000 0 00123                                                                                             
                 V'S TB=377777777777K                                               033  LM00024
 00252     +3 77777 7 77777                                                                                             
                 V'S MXTBS=20                                                       034  LM00025
 00211     +0 00000 0 00024                                                                                             
                 V'S NTBS=0                                                         035  LM00026
 00220     +0 00000 0 00000                                                                                             
                 V'S FNS3=377777777777K                                             036  LM00027
 00175     +3 77777 7 77777                                                                                             
                 V'S FNS7=777777777777K                                             037  LM00028
 00176     -3 77777 7 77777                                                                                             
                 V'S FSTNO=10                                                       038  LM00029
 00177     +0 00000 0 00012                                                                                             
                 V'S INCR=10                                                        039  LM00030
 00200     +0 00000 0 00012                                                                                             
                 V'S NXTNO=10                                                       040  LM00031
 00222     +0 00000 0 00012                                                                                             
                 V'S ZLNO=$ 00000$                                                  041  LM00032
 00255     -2 00000 0 00000                                                                                             
                 V'S SRINHB=0B                                                      042  LM00033
 00014     +0 00000 0 00000                                                                                             
                 V'S BLNK=60K                                                       043  LM00034
 00150     +0 00000 0 00060                                                                                             
                 V'S BLNKS=$ $                                                      044  LM00035
 00151     -2 06060 6 06060                                                                                             
                 V'S RETURN=55K                                                     045  LM00036
 00223     +0 00000 0 00055                                                                                             
                 V'S TAB=72K                                                        046  LM00037
 00225     +0 00000 0 00072                                                                                             
                 V'S BKSP=35K                                                       047  LM00038
 00147     +0 00000 0 00035                                                                                             
                 V'S NCOLS=72                                                       048  LM00040
 00215     +0 00000 0 00110                                                                                             
                 V'S MXCOLS=84                                                      049  LM00041
 00210     +0 00000 0 00124                                                                                             
                 V'S SRCOL=72                                                       050  LM00042
 00224     +0 00000 0 00110                                                                                             
                 V'S NWRDS=14                                                       051  LM00043
 00221     +0 00000 0 00016                                                                                             
                 V'S NCLWD=2                                                        052  LM00044
 00214     +0 00000 0 00002                                                                                             
                 V'S NCHRS=6                                                        053  LM00045
 00213     +0 00000 0 00006                                                                                             
                 V'S BTSCHR=6                                                       054  LM00046
 00153     +0 00000 0 00006                                                                                             
                 V'S CHRMSK=77K                                                     055  LM00047
 00174     +0 00000 0 00077                                                                                             
                 V'S UNMSK=777777777700K                                            056  LM00048
 00254     -3 77777 7 77700                                                                                             
                 ENTRY TO SETBK.                                                    057  LM00050
 00261 TRA +0 02000 0 00264    00262 SXA +0 63400 2 01403    00263 TSX +0 07400 2 01403                                 
                 BKSP=LINE.A.CHRMSK                                                 058  LM00051
 00264 CAL -0 50000 0 00024    00265 ANA -0 32000 0 00174    00266 SLW +0 60200 0 00147                                 
                 F'N                                                                059  LM00052
 00267 TRA +0 02000 0 01435                                                                                             
                 ENTRY TO WRITE.                                                    060  LM00054
 00270 TRA +0 02000 0 00273    00271 SXA +0 63400 2 01403    00272 TSX +0 07400 2 01403                                 
                 B=0                                                                061  LM00056
 00273 CLA +0 50000 0 00256    00274 STO +0 60100 0 00152                                                               
                 T=0                                                                062  LM00057
 00275 CLA +0 50000 0 00256    00276 STO +0 60100 0 00253                                                               
                 W'R L.L.1, F'N                                                     063  LM00058
 00277 CLA +0 50000 0 00024    00300 SUB +0 40200 0 00257    00301 TZE +0 10000 0 00304    00302 TPL +0 12000 0 00304   
 00303 TRA +0 02000 0 01435                                                                                             
                 LTH=L-1                                                            064  LM00059
 00304 CLA +0 50000 0 00024    00305 SUB +0 40200 0 00257    00306 STO +0 60100 0 00205                                 
                 J=1                                                                065  LM00060
 00307 CLA +0 50000 0 00257    00310 STO +0 60100 0 00202                                                               
                 T'H UNCNV, FOR I=1,1,I.G.LTH                                       066  LM00061
 00311 CLA +0 50000 0 00257    00312 STO +0 60100 0 00201    00313 TRA +0 02000 0 00317    00314 CLA +0 50000 0 00201   
 00315 ADD +0 40000 0 00257    00316 STO +0 60100 0 00201    00317 CLA +0 50000 0 00201    00320 SUB +0 40200 0 00205   
 00321 TZE +0 10000 0 00323    00322 TPL +0 12000 0 00434                                                               
      GTTB         T'H GTTB, FOR T=0,1,TB(T).G.J                                    067  LM00062
 00323 CLA +0 50000 0 00256    00324 STO +0 60100 0 00253    00325 TRA +0 02000 0 00331    00326 CLA +0 50000 0 00253   
 00327 ADD +0 40000 0 00257    00330 STO +0 60100 0 00253    00331 LXA +0 53400 1 00253    00332 CLA +0 50000 1 00252   
 00333 SUB +0 40200 0 00202    00334 TZE +0 10000 0 00336    00335 TPL +0 12000 0 00337    00336 TRA +0 02000 0 00326   
      GTBK         T'H GTBK, FOR B=0,1,BK(B).GE.J                                   068  LM00063
 00337 CLA +0 50000 0 00256    00340 STO +0 60100 0 00152    00341 TRA +0 02000 0 00345    00342 CLA +0 50000 0 00152   
 00343 ADD +0 40000 0 00257    00344 STO +0 60100 0 00152    00345 LXA +0 53400 1 00152    00346 CLA +0 50000 1 00146   
 00347 SUB +0 40200 0 00202    00350 TZE +0 10000 0 00353    00351 TPL +0 12000 0 00353    00352 TRA +0 02000 0 00342   
                   CHAR=LINE(I).A.CHRMSK                                            069  LM00064
 00353 LXA +0 53400 1 00201    00354 CAL -0 50000 1 00024    00355 ANA -0 32000 0 00174    00356 SLW +0 60200 0 00173   
                   W'R CHAR.E.TAB                                                   070  LM00065
 00357 CLA +0 50000 0 00173    00360 SUB +0 40200 0 00225    00361 TNZ -0 10000 0 00411                                 
                     W'R TB(T).E.FNS3                                               071  LM00066
 00362 LXA +0 53400 1 00253    00363 CLA +0 50000 1 00252    00364 SUB +0 40200 0 00175    00365 TNZ -0 10000 0 00371   
                       CHAR=BLNK                                                    072  LM00067
 00366 CLA +0 50000 0 00150    00367 STO +0 60100 0 00173                                                               
                       T'O ISCHR                                                    073  LM00068
 00370 TRA +0 02000 0 00020                                                                                             
                     E'L                                                            074  LM00069
                     T'H FILLT, FOR J=J,1,J.E.TB(T)                                 075  LM00070
 00371 CLA +0 50000 0 00202    00372 STO +0 60100 0 00202    00373 TRA +0 02000 0 00377    00374 CLA +0 50000 0 00202   
 00375 ADD +0 40000 0 00257    00376 STO +0 60100 0 00202    00377 LXA +0 53400 2 00253    00400 CLA +0 50000 0 00202   
 00401 SUB +0 40200 2 00252    00402 TZE +0 10000 0 00410                                                               
                       STCHR.(BLNK,J,EOLW)                                          076  LM00071
 00403 TSX +0 07400 4 00011    00404 TXH +3 00000 0 00150    00405 TXH +3 00000 0 00202    00406 TXH +3 00000 0 00017   
      FILLT          CONTINUE                                                       077  LM00072
 00407 TRA +0 02000 0 00374                                                                                             
                   O'R CHAR.E.BKSP.AND.J.E.BK(B)                                    078  LM00073
 00410 TRA +0 02000 0 00433    00411 LXA +0 53400 2 00152    00412 CLA +0 50000 0 00202    00413 SUB +0 40200 2 00146   
 00414 TNZ -0 10000 0 00424    00415 CLA +0 50000 0 00173    00416 SUB +0 40200 0 00147    00417 TNZ -0 10000 0 00424   
                     J=J-1                                                          079  LM00074
 00420 CLA +0 50000 0 00202    00421 SUB +0 40200 0 00257    00422 STO +0 60100 0 00202                                 
                   O'E                                                              080  LM00075
 00423 TRA +0 02000 0 00433                                                                                             
      ISCHR          STCHR.(CHAR,J,EOLW)                                            081  LM00076
 00424 TSX +0 07400 4 00011    00425 TXH +3 00000 0 00173    00426 TXH +3 00000 0 00202    00427 TXH +3 00000 0 00017   
                     J=J+1                                                          082  LM00077
 00430 CLA +0 50000 0 00202    00431 ADD +0 40000 0 00257    00432 STO +0 60100 0 00202                                 
                   E'L                                                              083  LM00078
      UNCNV      CONTINUE                                                           084  LM00079
 00433 TRA +0 02000 0 00314                                                                                             
      EOLW       FILLB.                                                             085  LM00080
 00434 TSX +0 07400 4 00005                                                                                             
                 W'R .NOT.SRINHB, SERIAL.                                           086  LM00081
 00435 ZET +0 52000 0 00014    00436 TRA +0 02000 0 00440    00437 TSX +0 07400 4 00010                                 
                 WRCARD.                                                            087  LM00082
 00440 TSX +0 07400 4 00012                                                                                             
                 F'N                                                                088  LM00083
 00441 TRA +0 02000 0 01435                                                                                             
                 ENTRY TO READ.                                                     089  LM00085
 00442 TRA +0 02000 0 00445    00443 SXA +0 63400 2 01403    00444 TSX +0 07400 2 01403                                 
                 B=0                                                                090  LM00087
 00445 CLA +0 50000 0 00256    00446 STO +0 60100 0 00152                                                               
                 T=0                                                                091  LM00088
 00447 CLA +0 50000 0 00256    00450 STO +0 60100 0 00253                                                               
                 LTH=L-1                                                            092  LM00089
 00451 CLA +0 50000 0 00024    00452 SUB +0 40200 0 00257    00453 STO +0 60100 0 00205                                 
                 J=1                                                                093  LM00090
 00454 CLA +0 50000 0 00257    00455 STO +0 60100 0 00202                                                               
                 LAST=0                                                             094  LM00091
 00456 CLA +0 50000 0 00256    00457 STO +0 60100 0 00203                                                               
                 RDCARD.(EOF)                                                       095  LM00092
 00460 TSX +0 07400 4 00007    00461 TXH +3 00000 0 00024                                                               
                 T'H CNVRT, FOR I=1,1,I.G.LTH                                       096  LM00093
 00462 CLA +0 50000 0 00257    00463 STO +0 60100 0 00201    00464 TRA +0 02000 0 00470    00465 CLA +0 50000 0 00201   
 00466 ADD +0 40000 0 00257    00467 STO +0 60100 0 00201    00470 CLA +0 50000 0 00201    00471 SUB +0 40200 0 00205   
 00472 TZE +0 10000 0 00474    00473 TPL +0 12000 0 00514                                                               
                   GTCHR.(CHAR,J,EOLR)                                              097  LM00094
 00474 TSX +0 07400 4 00006    00475 TXH +3 00000 0 00173    00476 TXH +3 00000 0 00202    00477 TXH +3 00000 0 00016   
                   W'R CHAR.NE.BLNK, LAST=I                                         098  LM00095
 00500 CLA +0 50000 0 00173    00501 SUB +0 40200 0 00150    00502 TZE +0 10000 0 00505    00503 CLA +0 50000 0 00201   
 00504 STO +0 60100 0 00203                                                                                             
                   LINE(I)=CHAR                                                     099  LM00096
 00505 LXA +0 53400 1 00201    00506 CLA +0 50000 0 00173    00507 STO +0 60100 1 00024                                 
                   J=J+1                                                            100  LM00097
 00510 CLA +0 50000 0 00202    00511 ADD +0 40000 0 00257    00512 STO +0 60100 0 00202                                 
      CNVRT      CONTINUE                                                           101  LM00098
 00513 TRA +0 02000 0 00465                                                                                             
      EOLR       LINE(LAST+1)=RETURN                                                102  LM00099
 00514 CLA +0 50000 0 00203    00515 ADD +0 40000 0 00257    00516 PAX +0 73400 1 00000    00517 CLA +0 50000 0 00223   
 00520 STO +0 60100 1 00024                                                                                             
                 F'N LAST+1                                                         103  LM00100
 00521 CLA +0 50000 0 00203    00522 ADD +0 40000 0 00257    00523 TRA +0 02000 0 01435                                 
                 ENTRY TO BOTTOM.                                                   104  LM00102
 00524 TRA +0 02000 0 00527    00525 SXA +0 63400 2 01403    00526 TSX +0 07400 2 01403                                 
      RD         RDCARD.(ENDB)                                                      105  LM00103
 00527 TSX +0 07400 4 00007    00530 TXH +3 00000 0 00015                                                               
                 J=NCOLS+1                                                          106  LM00104
 00531 CLA +0 50000 0 00215    00532 ADD +0 40000 0 00257    00533 STO +0 60100 0 00202                                 
                 FILLB.                                                             107  LM00105
 00534 TSX +0 07400 4 00005                                                                                             
                 W'R .NOT. SRINHB, SERIAL.                                          108  LM00106
 00535 ZET +0 52000 0 00014    00536 TRA +0 02000 0 00540    00537 TSX +0 07400 4 00010                                 
                 WRCARD.                                                            109  LM00107
 00540 TSX +0 07400 4 00012                                                                                             
                 T'O RD                                                             110  LM00108
 00541 TRA +0 02000 0 00021                                                                                             
      ENDB       F'N                                                                111  LM00109
 00542 TRA +0 02000 0 01435                                                                                             
                 ENTRY TO NEWTBS.                                                   112  LM00111
 00543 TRA +0 02000 0 00546    00544 SXA +0 63400 2 01403    00545 TSX +0 07400 2 01403                                 
                 TB=FNS3                                                            113  LM00112
 00546 CLA +0 50000 0 00175    00547 STO +0 60100 0 00252                                                               
                 NTBS=0                                                             114  LM00113
 00550 CLA +0 50000 0 00256    00551 STO +0 60100 0 00220                                                               
                 F'N                                                                115  LM00114
 00552 TRA +0 02000 0 01435                                                                                             
                 ENTRY TO NEWBKS.                                                   116  LM00116
 00553 TRA +0 02000 0 00556    00554 SXA +0 63400 2 01403    00555 TSX +0 07400 2 01403                                 
                 BK=FNS3                                                            117  LM00117
 00556 CLA +0 50000 0 00175    00557 STO +0 60100 0 00146                                                               
                 NBKS=0                                                             118  LM00118
 00560 CLA +0 50000 0 00256    00561 STO +0 60100 0 00212                                                               
                 F'N                                                                119  LM00119
 00562 TRA +0 02000 0 01435                                                                                             
                 ENTRY TO TABSET.                                                   120  LM00121
 00563 TRA +0 02000 0 00566    00564 SXA +0 63400 2 01403    00565 TSX +0 07400 2 01403                                 
                 W'R NTBS.GE.MXTBS, F'N                                             121  LM00122
 00566 CLA +0 50000 0 00220    00567 SUB +0 40200 0 00211    00570 TZE +0 10000 0 00572    00571 TMI -0 12000 0 00573   
 00572 TRA +0 02000 0 01435                                                                                             
                 W'R LINE.L.TB(NTBS-1).AND.NTBS.G.0, F'N                            122  LM00123
 00573 CLA +0 50000 0 00220    00574 SUB +0 40200 0 00256    00575 TZE +0 10000 0 00607    00576 TMI -0 12000 0 00607   
 00577 CLA +0 50000 0 00220    00600 SUB +0 40200 0 00257    00601 PAX +0 73400 2 00000    00602 CLA +0 50000 0 00024   
 00603 SUB +0 40200 2 00252    00604 TZE +0 10000 0 00607    00605 TPL +0 12000 0 00607    00606 TRA +0 02000 0 01435   
                 TB(NTBS)=LINE                                                      123  LM00124
 00607 LXA +0 53400 1 00220    00610 CLA +0 50000 0 00024    00611 STO +0 60100 1 00252                                 
                 NTBS=NTBS+1                                                        124  LM00125
 00612 CLA +0 50000 0 00220    00613 ADD +0 40000 0 00257    00614 STO +0 60100 0 00220                                 
                 TB(NTBS)=FNS3                                                      125  LM00126
 00615 LXA +0 53400 1 00220    00616 CLA +0 50000 0 00175    00617 STO +0 60100 1 00252                                 
                 F'N                                                                126  LM00127
 00620 TRA +0 02000 0 01435                                                                                             
                 ENTRY TO BKSET.                                                    127  LM00129
 00621 TRA +0 02000 0 00624    00622 SXA +0 63400 2 01403    00623 TSX +0 07400 2 01403                                 
                 W'R LINE.G.NCOLS, F'N                                              128  LM00130
 00624 CLA +0 50000 0 00024    00625 SUB +0 40200 0 00215    00626 TZE +0 10000 0 00631    00627 TMI -0 12000 0 00631   
 00630 TRA +0 02000 0 01435                                                                                             
                 W'R NBKS.GE.MXBKS, F'N                                             129  LM00131
 00631 CLA +0 50000 0 00212    00632 SUB +0 40200 0 00207    00633 TZE +0 10000 0 00635    00634 TMI -0 12000 0 00636   
 00635 TRA +0 02000 0 01435                                                                                             
                 W'R LINE.LE.1, F'N                                                 130  LM00132
 00636 CLA +0 50000 0 00024    00637 SUB +0 40200 0 00257    00640 TZE +0 10000 0 00642    00641 TPL +0 12000 0 00643   
 00642 TRA +0 02000 0 01435                                                                                             
                 W'R LINE.L.BK(NBKS-1).AND.NBKS.G.0, F'N                            131  LM00133
 00643 CLA +0 50000 0 00212    00644 SUB +0 40200 0 00256    00645 TZE +0 10000 0 00657    00646 TMI -0 12000 0 00657   
 00647 CLA +0 50000 0 00212    00650 SUB +0 40200 0 00257    00651 PAX +0 73400 2 00000    00652 CLA +0 50000 0 00024   
 00653 SUB +0 40200 2 00146    00654 TZE +0 10000 0 00657    00655 TPL +0 12000 0 00657    00656 TRA +0 02000 0 01435   
                 BK(NBKS)=LINE                                                      132  LM00134
 00657 LXA +0 53400 1 00212    00660 CLA +0 50000 0 00024    00661 STO +0 60100 1 00146                                 
                 NBKS=NBKS+1                                                        133  LM00135
 00662 CLA +0 50000 0 00212    00663 ADD +0 40000 0 00257    00664 STO +0 60100 0 00212                                 
                 BK(NBKS)=FNS3                                                      134  LM00136
 00665 LXA +0 53400 1 00212    00666 CLA +0 50000 0 00175    00667 STO +0 60100 1 00146                                 
                 F'N                                                                135  LM00137
 00670 TRA +0 02000 0 01435                                                                                             
                 ENTRY TO SETSR.                                                    136  LM00139
 00671 TRA +0 02000 0 00674    00672 SXA +0 63400 2 01403    00673 TSX +0 07400 2 01403                                 
                 NXTNO=LINE                                                         137  LM00140
 00674 CLA +0 50000 0 00024    00675 STO +0 60100 0 00222                                                               
                 FSTNO=LINE                                                         138  LM00141
 00676 CLA +0 50000 0 00024    00677 STO +0 60100 0 00177                                                               
                 INCR=L                                                             139  LM00142
 00700 CLA +0 50000 0 00024    00701 STO +0 60100 0 00200                                                               
                 F'N                                                                140  LM00143
 00702 TRA +0 02000 0 01435                                                                                             
                 ENTRY TO SINHB.                                                    141  LM00145
 00703 TRA +0 02000 0 00706    00704 SXA +0 63400 2 01403    00705 TSX +0 07400 2 01403                                 
                 EQUIVALENCE(INHB,SRINHB)                                           142  LM00146
                 INHB=LINE                                                          143  LM00147
 00706 CLA +0 50000 0 00024    00707 STO +0 60100 0 00014                                                               
                 F'N                                                                144  LM00148
 00710 TRA +0 02000 0 01435                                                                                             
                 ENTRY TO SETCOL.                                                   145  LM00150
 00711 TRA +0 02000 0 00714    00712 SXA +0 63400 2 01403    00713 TSX +0 07400 2 01403                                 
                 NCOLS=LINE                                                         146  LM00151
 00714 CLA +0 50000 0 00024    00715 STO +0 60100 0 00215                                                               
                 W'R NCOLS.E.0, NCOLS=SRCOL                                         147  LM00152
 00716 CLA +0 50000 0 00215    00717 SUB +0 40200 0 00256    00720 TNZ -0 10000 0 00723    00721 CLA +0 50000 0 00224   
 00722 STO +0 60100 0 00215                                                                                             
                 W'R NCOLS.NE.SRCOL, SRINHB=1B                                      148  LM00153
 00723 CLA +0 50000 0 00215    00724 SUB +0 40200 0 00224    00725 TZE +0 10000 0 00730    00726 CLA +0 50000 0 00257   
 00727 STO +0 60100 0 00014                                                                                             
                 W'R NCOLS.G.MXCOLS, NCOLS=MXCOLS                                   149  LM00154
 00730 CLA +0 50000 0 00215    00731 SUB +0 40200 0 00210    00732 TZE +0 10000 0 00736    00733 TMI -0 12000 0 00736   
 00734 CLA +0 50000 0 00210    00735 STO +0 60100 0 00215                                                               
                 F'N                                                                150  LM00155
 00736 TRA +0 02000 0 01435                                                                                             
                 ENTRY TO CLOSEW.                                                   151  LM00157
 00737 TRA +0 02000 0 00742    00740 SXA +0 63400 2 01403    00741 TSX +0 07400 2 01403                                 
                 NXTNO = FSTNO                                                      152  LM00158
 00742 CLA +0 50000 0 00177    00743 STO +0 60100 0 00222                                                               
                 FILE.                                                              153  LM00159
 00744 TSX +0 07400 4 00002                                                                                             
                 F'N                                                                154  LM00160
 00745 TRA +0 02000 0 01435                                                                                             
                 INTERNAL FUNCTION (ENDF)                                           155  LM00165
 00746 TRA +0 02000 0 01032                                                                                             
                 STATEMENT LABEL ENDF                                               156  LM00166
                 ENTRY TO RDCARD.                                                   157  LM00167
 00747 TRA +0 02000 0 00752    00007 TTR +0 02100 0 00750    00750 SXA +0 63400 2 01020    00751 TSX +0 07400 2 01020   
                 T'H RDLP, FOR N=NWRDS,-1,N.L.1                                     158  LM00168
 00752 CLA +0 50000 0 00221    00753 STO +0 60100 0 00217    00754 TRA +0 02000 0 00760    00755 CLS +0 50200 0 00257   
 00756 ADD +0 40000 0 00217    00757 STO +0 60100 0 00217    00760 CLA +0 50000 0 00217    00761 SUB +0 40200 0 00257   
 00762 TZE +0 10000 0 00764    00763 TMI -0 12000 0 00771                                                               
                   CARD(N)=RDWORD.(ENDF)                                            159  LM00169
 00764 TSX +0 07400 4 00003    00765 TXH +3 00000 0 00024    00766 LXA +0 53400 1 00217    00767 STO +0 60100 1 00172   
      RDLP       CONTINUE                                                           160  LM00170
 00770 TRA +0 02000 0 00755                                                                                             
                 F'N                                                                161  LM00171
 00771 TRA +0 02000 0 01026                                                                                             
                 ENTRY TO WRCARD.                                                   162  LM00173
 00772 TRA +0 02000 0 00775    00012 TTR +0 02100 0 00773    00773 SXA +0 63400 2 01020    00774 TSX +0 07400 2 01020   
                 T'H WRLP, FOR N=NWRDS,-1,N.L.1                                     163  LM00174
 00775 CLA +0 50000 0 00221    00776 STO +0 60100 0 00217    00777 TRA +0 02000 0 01003    01000 CLS +0 50200 0 00257   
 01001 ADD +0 40000 0 00217    01002 STO +0 60100 0 00217    01003 CLA +0 50000 0 00217    01004 SUB +0 40200 0 00257   
 01005 TZE +0 10000 0 01007    01006 TMI -0 12000 0 01016                                                               
                   WRWORD.(CARD(N))                                                 164  LM00175
 01007 CLA +0 50000 0 00217    01010 SUB +0 40200 0 01011    01011 TXH +3 00000 0 00172    01012 STA +0 62100 0 01014   
 01013 TSX +0 07400 4 00004    01014 TXH +3 00000 0 00000                                                               
      WRLP       CONTINUE                                                           165  LM00176
 01015 TRA +0 02000 0 01000                                                                                             
                 F'N                                                                166  LM00177
 01016 TRA +0 02000 0 01026                                                                                             
                 E'N                                                                167  LM00178
 01017 TSX +0 07400 4 00001    01020 TXH +3 00000 0 00000    01021 SXD -0 63400 1 01020    01022 SXA +0 63400 4 01026   
 01023 CLA +0 50000 4 00001    01024 STO +0 60100 0 00765    01025 TRA +0 02000 2 00001    01026 AXT +0 77400 4 00000   
 01027 LXA +0 53400 2 01020    01030 LXD -0 53400 1 01020    01031 TRA +0 02000 4 00001                                 
                 INTERNAL FUNCTION (ARG1,ARG2,LOC)                                  168  LM00180
 01032 TRA +0 02000 0 01205                                                                                             
                 STATEMENT LABEL LOC                                                169  LM00181
                 ENTRY TO GTCHR.                                                    170  LM00182
 01033 TRA +0 02000 0 01036    00006 TTR +0 02100 0 01034    01034 SXA +0 63400 2 01157    01035 TSX +0 07400 2 01157   
                 W'R ARG2.G.NCOLS, T'O LOC                                          171  LM00183
 01036 CLA +0 50000 0 00024    01037 SUB +0 40200 0 00215    01040 TZE +0 10000 0 01043    01041 TMI -0 12000 0 01043   
 01042 TRA +0 02000 0 00024                                                                                             
                 M=BTSCHR*(NCHRS-1-(ARG2-1).MOD.NCHRS)                              172  LM00184
 01043 CLA +0 50000 0 00024    01044 SUB +0 40200 0 00257    01045 XCA +0 13100 0 00000    01046 PXD -0 75400 0 00000   
 01047 LLS +0 76300 0 00000    01050 DVP +0 22100 0 00213    01051 STO +0 60100 0 01204    01052 CLA +0 50000 0 00213   
 01053 SUB +0 40200 0 00257    01054 SUB +0 40200 0 01204    01055 XCA +0 13100 0 00000    01056 MPY +0 20000 0 00153   
 01057 STQ -0 60000 0 00206                                                                                             
                 N=NWRDS-(ARG2-1)/NCHRS                                             173  LM00185
 01060 CLA +0 50000 0 00024    01061 SUB +0 40200 0 00257    01062 LRS +0 76500 0 00043    01063 DVP +0 22100 0 00213   
 01064 XCA +0 13100 0 00000    01065 CHS +0 76000 0 00002    01066 ADD +0 40000 0 00221    01067 STO +0 60100 0 00217   
                 ARG1=(CARD(N).RS.M).A.CHRMSK                                       174  LM00186
 01070 LXA +0 53400 1 00217    01071 CAL -0 50000 0 00206    01072 STA +0 62100 0 01074    01073 CAL -0 50000 1 00172   
 01074 LGR -0 76500 0 00000    01075 ANA -0 32000 0 00174    01076 SLW +0 60200 0 00024                                 
                 F'N                                                                175  LM00187
 01077 TRA +0 02000 0 01200                                                                                             
                 ENTRY TO STCHR.                                                    176  LM00189
 01100 TRA +0 02000 0 01103    00011 TTR +0 02100 0 01101    01101 SXA +0 63400 2 01157    01102 TSX +0 07400 2 01157   
                 W'R ARG2.G.NCOLS, T'O LOC                                          177  LM00190
 01103 CLA +0 50000 0 00024    01104 SUB +0 40200 0 00215    01105 TZE +0 10000 0 01110    01106 TMI -0 12000 0 01110   
 01107 TRA +0 02000 0 00024                                                                                             
                 M=BTSCHR*(NCHRS-1-(ARG2-1).MOD.NCHRS)                              178  LM00191
 01110 CLA +0 50000 0 00024    01111 SUB +0 40200 0 00257    01112 XCA +0 13100 0 00000    01113 PXD -0 75400 0 00000   
 01114 LLS +0 76300 0 00000    01115 DVP +0 22100 0 00213    01116 STO +0 60100 0 01204    01117 CLA +0 50000 0 00213   
 01120 SUB +0 40200 0 00257    01121 SUB +0 40200 0 01204    01122 XCA +0 13100 0 00000    01123 MPY +0 20000 0 00153   
 01124 STQ -0 60000 0 00206                                                                                             
                 N=NWRDS-(ARG2-1)/NCHRS                                             179  LM00192
 01125 CLA +0 50000 0 00024    01126 SUB +0 40200 0 00257    01127 LRS +0 76500 0 00043    01130 DVP +0 22100 0 00213   
 01131 XCA +0 13100 0 00000    01132 CHS +0 76000 0 00002    01133 ADD +0 40000 0 00221    01134 STO +0 60100 0 00217   
                 CARD(N)=(CARD(N).A.UNMSK.LS.M).V.((ARG1.A.CHRMSK).LS.M)            180  LM00193
 01135 CAL -0 50000 0 00024    01136 ANA -0 32000 0 00174    01137 SLW +0 60200 0 01204    01140 CAL -0 50000 0 00206   
 01141 STA +0 62100 0 01143    01142 CAL -0 50000 0 01204    01143 ALS +0 76700 0 00000    01144 SLW +0 60200 0 01204   
 01145 CAL -0 50000 0 00206    01146 STA +0 62100 0 01150    01147 CAL -0 50000 0 00254    01150 ALS +0 76700 0 00000   
 01151 LXA +0 53400 1 00217    01152 ANA -0 32000 1 00172    01153 ORA -0 50100 0 01204    01154 SLW +0 60200 1 00172   
                 F'N                                                                181  LM00194
 01155 TRA +0 02000 0 01200                                                                                             
                 E'N                                                                182  LM00195
 01156 TSX +0 07400 4 00001    01157 TXH +3 00000 0 00000    01160 SXD -0 63400 1 01157    01161 SXA +0 63400 4 01200   
 01162 CLA +0 50000 4 00001    01163 STA +0 62100 0 01076    01164 STA +0 62100 0 01135    01165 CLA +0 50000 4 00002   
 01166 STA +0 62100 0 01036    01167 STA +0 62100 0 01043    01170 STA +0 62100 0 01060    01171 STA +0 62100 0 01103   
 01172 STA +0 62100 0 01110    01173 STA +0 62100 0 01125    01174 CLA +0 50000 4 00003    01175 STA +0 62100 0 01042   
 01176 STA +0 62100 0 01107    01177 TRA +0 02000 2 00001    01200 AXT +0 77400 4 00000    01201 LXA +0 53400 2 01157   
 01202 LXD -0 53400 1 01157    01203 TRA +0 02000 4 00001                                                               
                 INTERNAL FUNCTION (ARG1,ARG2)                                      183  LM00197
 01205 TRA +0 02000 0 01277                                                                                             
                 ENTRY TO SERIAL.                                                   184  LM00198
 01206 TRA +0 02000 0 01211    00010 TTR +0 02100 0 01207    01207 SXA +0 63400 2 01266    01210 TSX +0 07400 2 01266   
                 LNO=DERBC.(NXTNO).V.ZLNO                                           185  LM00199
 01211 TSX +0 07400 4 00000    01212 TXH +3 00000 0 00222    01213 STO +0 60100 0 01276    01214 CAL -0 50000 0 01276   
 01215 ORA -0 50100 0 00255    01216 SLW +0 60200 0 00204                                                               
                 CARD(2)=(LNO.RS.(BTSCHR*NCLWD)).V.                                 186  LM00200
                1  (BLNKS.LS.(BTSCHR*(NCHRS-NCLWD)))                                186  LM00201
 01217 CLA +0 50000 0 00213    01220 SUB +0 40200 0 00214    01221 XCA +0 13100 0 00000    01222 MPY +0 20000 0 00153   
 01223 XCA +0 13100 0 00000    01224 STA +0 62100 0 01226    01225 CAL -0 50000 0 00151    01226 ALS +0 76700 0 00000   
 01227 SLW +0 60200 0 01276    01230 LDQ +0 56000 0 00153    01231 MPY +0 20000 0 00214    01232 XCA +0 13100 0 00000   
 01233 STA +0 62100 0 01235    01234 CAL -0 50000 0 00204    01235 LGR -0 76500 0 00000    01236 ORA -0 50100 0 01276   
 01237 SLW +0 60200 0 00170                                                                                             
                 CARD(1)=LNO.LS.(BTSCHR*(NCHRS-NCLWD)).V.                           187  LM00202
                1  (BLNKS.RS.(BTSCHR*NCLWD))                                        187  LM00203
 01240 LDQ +0 56000 0 00153    01241 MPY +0 20000 0 00214    01242 XCA +0 13100 0 00000    01243 STA +0 62100 0 01245   
 01244 CAL -0 50000 0 00151    01245 LGR -0 76500 0 00000    01246 SLW +0 60200 0 01276    01247 CLA +0 50000 0 00213   
 01250 SUB +0 40200 0 00214    01251 XCA +0 13100 0 00000    01252 MPY +0 20000 0 00153    01253 XCA +0 13100 0 00000   
 01254 STA +0 62100 0 01256    01255 CAL -0 50000 0 00204    01256 ALS +0 76700 0 00000    01257 ORA -0 50100 0 01276   
 01260 SLW +0 60200 0 00171                                                                                             
                 NXTNO=NXTNO+INCR                                                   188  LM00204
 01261 CLA +0 50000 0 00222    01262 ADD +0 40000 0 00200    01263 STO +0 60100 0 00222                                 
                 F'N                                                                189  LM00205
 01264 TRA +0 02000 0 01272                                                                                             
                 E'N                                                                190  LM00206
 01265 TSX +0 07400 4 00001    01266 TXH +3 00000 0 00000    01267 SXD -0 63400 1 01266    01270 SXA +0 63400 4 01272   
 01271 TRA +0 02000 2 00001    01272 AXT +0 77400 4 00000    01273 LXA +0 53400 2 01266    01274 LXD -0 53400 1 01266   
 01275 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  191  LM00208
 01277 TRA +0 02000 0 01402                                                                                             
                 ENTRY TO FILLB.                                                    192  LM00209
 01300 TRA +0 02000 0 01303    00005 TTR +0 02100 0 01301    01301 SXA +0 63400 2 01371    01302 TSX +0 07400 2 01371   
                 NC=J-1                                                             193  LM00210
 01303 CLA +0 50000 0 00202    01304 SUB +0 40200 0 00257    01305 STO +0 60100 0 00216                                 
                 M=BTSCHR*((NC-1).MOD.NCHRS+1)                                      194  LM00211
 01306 CLA +0 50000 0 00216    01307 SUB +0 40200 0 00257    01310 XCA +0 13100 0 00000    01311 PXD -0 75400 0 00000   
 01312 LLS +0 76300 0 00000    01313 DVP +0 22100 0 00213    01314 ADD +0 40000 0 00257    01315 XCA +0 13100 0 00000   
 01316 MPY +0 20000 0 00153    01317 STQ -0 60000 0 00206                                                               
                 N=NWRDS-(NC-1)/NCHRS                                               195  LM00212
 01320 CLA +0 50000 0 00216    01321 SUB +0 40200 0 00257    01322 LRS +0 76500 0 00043    01323 DVP +0 22100 0 00213   
 01324 XCA +0 13100 0 00000    01325 CHS +0 76000 0 00002    01326 ADD +0 40000 0 00221    01327 STO +0 60100 0 00217   
                 CARD(N)=(CARD(N).A.(FNS7.LS.(BTSCHR*NCHRS-M))).V.(BLNKS.RS.M)      196  LM00213
 01330 CAL -0 50000 0 00206    01331 STA +0 62100 0 01333    01332 CAL -0 50000 0 00151    01333 LGR -0 76500 0 00000   
 01334 SLW +0 60200 0 01401    01335 LDQ +0 56000 0 00153    01336 MPY +0 20000 0 00213    01337 XCA +0 13100 0 00000   
 01340 SUB +0 40200 0 00206    01341 STA +0 62100 0 01343    01342 CAL -0 50000 0 00176    01343 ALS +0 76700 0 00000   
 01344 LXA +0 53400 1 00217    01345 ANA -0 32000 1 00172    01346 ORA -0 50100 0 01401    01347 SLW +0 60200 1 00172   
                 T'H BLANK, FOR N=N-1,-1,N.L.1                                      197  LM00214
 01350 CLA +0 50000 0 00217    01351 SUB +0 40200 0 00257    01352 STO +0 60100 0 00217    01353 TRA +0 02000 0 01357   
 01354 CLS +0 50200 0 00257    01355 ADD +0 40000 0 00217    01356 STO +0 60100 0 00217    01357 CLA +0 50000 0 00217   
 01360 SUB +0 40200 0 00257    01361 TZE +0 10000 0 01363    01362 TMI -0 12000 0 01367                                 
                   CARD(N)=BLNKS                                                    198  LM00215
 01363 LXA +0 53400 1 00217    01364 CLA +0 50000 0 00151    01365 STO +0 60100 1 00172                                 
      BLANK      CONTINUE                                                           199  LM00216
 01366 TRA +0 02000 0 01354                                                                                             
                 F'N                                                                200  LM00217
 01367 TRA +0 02000 0 01375                                                                                             
                 E'N                                                                201  LM00218
 01370 TSX +0 07400 4 00001    01371 TXH +3 00000 0 00000    01372 SXD -0 63400 1 01371    01373 SXA +0 63400 4 01375   
 01374 TRA +0 02000 2 00001    01375 AXT +0 77400 4 00000    01376 LXA +0 53400 2 01371    01377 LXD -0 53400 1 01371   
 01400 TRA +0 02000 4 00001                                                                                             
                 END OF FUNCTION                                                    202  LM00220
 01402 TSX +0 07400 4 00001    01403 TXH +3 00000 0 00000    01404 SXD -0 63400 1 01403    01405 SXA +0 63400 4 01435   
 01406 CLA +0 50000 4 00001    01407 STA +0 62100 0 00264    01410 STA +0 62100 0 00354    01411 STA +0 62100 0 00507   
 01412 STA +0 62100 0 00520    01413 STA +0 62100 0 00602    01414 STA +0 62100 0 00610    01415 STA +0 62100 0 00624   
 01416 STA +0 62100 0 00636    01417 STA +0 62100 0 00652    01420 STA +0 62100 0 00660    01421 STA +0 62100 0 00674   
 01422 STA +0 62100 0 00676    01423 STA +0 62100 0 00706    01424 STA +0 62100 0 00714    01425 CLA +0 50000 4 00002   
 01426 STA +0 62100 0 00277    01427 STA +0 62100 0 00304    01430 STA +0 62100 0 00451    01431 STA +0 62100 0 00700   
 01432 CLA +0 50000 4 00003    01433 STO +0 60100 0 00461    01434 TRA +0 02000 2 00001    01435 AXT +0 77400 4 00000   
 01436 LXA +0 53400 2 01403    01437 LXD -0 53400 1 01403    01440 TRA +0 02000 4 00001                                 
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 1     
                  
                              *      NOTE, INDEX REGISTERS SIX AND SEVEN MUST BE PRESERVED
                              *      BY THE CALLING PROGRAM.
                              *      THIS ROUTINE MAKES TYPEWRITER COMMENTS, BUT DOES NOT 
                              *      AFFECT THE BCD-FULL MODE SWITCH.   
                              *     
                              *           J. H. SALTZER, JANUARY, 1965. 
                              *     
                       00015         ENTRY   ASSIGN        TO ASSIGN A NAME TO THE WRITE FILE.  
                       00057         ENTRY   WRWORD        TO ADD A WORD TO THE FILE.     
                       00100         ENTRY   FILE          TO CLOSE THE FILE. 
                              *     
                       00160         ENTRY   SEEK          TO OPEN A FILE FOR READING.    
                       00242         ENTRY   RDWORD        TO GET A WORD FROM FILE. 
                       00275         ENTRY   ENDRD         TO CLOSE THE FILE. 
                              *     
                                     EXTERN  GETBUF,SETBCD,SETFUL,WRFLX,WRFLXA
                                     EXTERN  OPEN,WRWAIT,RDWAIT,CLOSE,FSTATE,BUFFER 
                              *     
                              *      ASSIGN.($NAME1$,$NAME2$)     
                              *     
                  
        TRANSFER VECTOR 
      00000  272563226426     GETBUF
      00001  622563222324     SETBCD
      00002  622563266443     SETFUL
      00003  665126436760     WRFLX 
      00004  665126436721     WRFLXA
      00005  464725456060     OPEN  
      00006  665166213163     WRWAIT
      00007  512466213163     RDWAIT
      00010  234346622560     CLOSE 
      00011  266263216325     FSTATE
      00012  226426262551     BUFFER
                  
            LINKAGE DIRECTOR  
      00013  000000000000     
      00014  216262312745     
                  
      00015 -0500 60 4 00001  ASSIGN CAL*    1,4           OPEN FILE, GET FILE NAME.
      00016  0602 00 0 00304         SLW     OUTNAM        ..     
      00017 -0500 60 4 00002         CAL*    2,4           ..     
      00020  0602 00 0 00305         SLW     OUTNAM+1      ..     
      00021  0634 00 4 00041         SXA     OPX4,4        SAVE LINKAGE.
      00022  0020 00 0 00023   OSW   TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                    *******************
      00023 -0500 00 0 00315         CAL     WBFSZ         GET AN OUTPUT BUFFER FROM SUPERVISOR.
      00024  0074 00 4 00000         TSX     GETBUF,4      ..     
      00025  0621 00 0 00071         STA     WCALL         SAVE LOCATION OF BUFFER. 
      00026  0621 00 0 00113         STA     CLCALL        TO CLOSE OUT FILE. 
      00027  0361 00 0 00315         ACL     WBFSZ         ADD LENGTH, TO FORM END ADDRESS.     
      00030  0621 00 0 00060         STA     WRNM          INSERT IN INSERTER.
      00031 -0500 00 0 00313         CAL     TRKSZ         GET A DISK TRACK BUFFER. 
      00032  0074 00 4 00000         TSX     GETBUF,4      ..     
      00033  0621 00 0 00055         STA     BFCALL        SET UP BUFFER CALLER.    
      00034 -0625 00 0 00022         STL     OSW           RESET ONE-TIME SWITCH.   
                              *                                                    *******************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 2     
                  
      00035  0774 00 4 00040         AXT     OPOK,4        SET QUOTA EXHAUSTED ERROR RETURN.    
      00036  0634 00 4 00143         SXA     WRTN,4        ..     
      00037  0074 00 3 00043         TSX     OPN,3         OPEN THE FILE.     
      00040  0774 00 7 00330  OPOK   AXT     WBFLTH,7      SET UP STORAGE COUNT.    
      00041  0774 00 4 00000   OPX4  AXT     --,4          RESTORE LINKAGE.   
      00042  0020 00 4 00003         TRA     3,4           RETURN.
                              *     
      00043  0074 00 4 00005  OPN    TSX     OPEN,4        OPEN FILE.   
 TD   00044  3 00000 0 00324         TXH     =HW           FOR WRITING. 
 TD   00045  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00046  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00047  3 00000 0 00156         TXH     MODE          MAKE IT PERMANENT IF POSSIBLE. 
 TD   00050  3 00000 0 00320         TXH     =2            PUT IT ON THE DISK.
 TD   00051  3 00000 0 00127  OPERR  TXH     OEXH          IN CASE NO MORE QUOTA AVAILABLE.     
      00052  0074 00 4 00012         TSX     BUFFER,4      ASSIGN A BUFFER FOR THE FILE.  
 TD   00053  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00054  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00055  3 00660 0 00000  BFCALL TXH     --,,TRKLTH    ..     
      00056  0020 00 3 00001         TRA     1,3           RETURN TO CALLER.  
                              *     
                              *     
                              *      ENTRY TO ADD A WORD TO FILE. 
                              *              WRWORD.(WORD)  
                              *     
      00057 -0500 60 4 00001  WRWORD CAL*    1,4           GET WORD TO BE ADDED.    
      00060  0602 00 7 00000   WRNM  SLW     --,7          ADD WORD TO OUTPUT BUFFER.     
      00061  2 00001 7 00077         TIX     RETURN,7,1    COUNT AND CHECK FOR FULL BUFFER.     
      00062  0634 00 4 00076   FULL  SXA     FULX4,4       BUFFER FULL, WRITE IT OUT.     
      00063  0774 00 4 00065         AXT     WRAGN,4       SET UP EXHAUSTED RETURN ADDRESS.     
      00064  0634 00 4 00143         SXA     WRTN,4        ..     
      00065  0074 00 4 00006  WRAGN  TSX     WRWAIT,4      GIVE BUFFER TO SUPERVISOR.     
 TD   00066  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00067  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00070  3 00000 0 00316         TXH     =0            ..     
      00071  3 00330 0 00000  WCALL  TXH     --,,WBFLTH    ..     
 TD   00072  3 00000 0 00321         TXH     =-0           IGNORE POSSIBLE EOF.     
 TD   00073  3 00000 0 00321         TXH     =-0           ..     
 TD   00074  3 00000 0 00124  WRERR  TXH     WEXH          ALLOW ERROR RETURN.
      00075  0774 00 7 00330         AXT     WBFLTH,7      RESET BUFFER POINTER.    
      00076  0774 00 4 00000   FULX4 AXT     --,4          RESTORE LINKAGE.   
      00077  0020 00 4 00002  RETURN TRA     2,4           RETURN TO CALLER.  
                              *     
                              *      FILE.     NO ARGUMENTS.
                              *     
      00100  0634 00 4 00122  FILE   SXA     CL4,4         ENTRY TO CLOSE OUT FILE. 
      00101 -0634 00 7 00103         SXD     *+2,7         FORM COUNT OF WORDS SINCE
      00102  0774 00 7 00330         AXT     WBFLTH,7      LAST BUFFER WAS WRITTEN. 
      00103 -2 00000 7 00117         TNX     NOWR,7,--     IF ZERO, SKIP FINAL WRITE CALL.
      00104 -0634 00 7 00113         SXD     CLCALL,7      NON-ZERO, SET UP WRITE CALL.   
      00105  0774 00 4 00107         AXT     FWR,4         SET UP RETURN ADDRESS FOR EXHAUSTED CASE.  
      00106  0634 00 4 00143         SXA     WRTN,4        ..     
      00107  0074 00 4 00006  FWR    TSX     WRWAIT,4      WRITE OUT PARTIAL BUFFER.
 TD   00110  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00111  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00112  3 00000 0 00316         TXH     =0            ..     
      00113  3 00000 0 00000  CLCALL TXH     --,,--        ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 3     
                  
 TD   00114  3 00000 0 00321         TXH     =-0           IGNORE EOF RETURN. 
 TD   00115  3 00000 0 00321         TXH     =-0           ..     
 TD   00116  3 00000 0 00124         TXH     WEXH          ALLOW ERROR RETURN.
      00117  0074 00 4 00010  NOWR   TSX     CLOSE,4       CLOSE OUT THE FILE.
 TD   00120  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00121  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00122  0774 00 4 00000   CL4   AXT     --,4          RESTORE LINKAGE.   
      00123  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00124  0074 00 4 00010  WEXH   TSX     CLOSE,4       TRACK QUOTA EXHAUSTED, CLOSE FILE.   
 TD   00125  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00126  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00127  0074 00 4 00001  OEXH   TSX     SETBCD,4      ENTRY FROM OPEN ERROR, COMMENT.
      00130  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00131  0074 00 4 00003         TSX     WRFLX,4       ..     
      00132  0 00011 0 00144                 ERMESS,,9
      00133  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00134  0074 00 4 00002         TSX     SETFUL,4      YES, RESET INDICATOR.    
      00135 -0500 00 0 00317         CAL     =1            SWITCH TO TEMPORARY MODE.
      00136  0601 00 0 00156         STO     MODE          ..     
      00137 -0500 00 0 00155         CAL     NOP           BLOCK FUTURE ERROR RETURN.     
      00140  0602 00 0 00051         SLW     OPERR         ..     
      00141  0602 00 0 00074         SLW     WRERR    
      00142  0074 00 3 00043         TSX     OPN,3         NOW, OPEN IT AGAIN.
      00143  0020 00 0 00000  WRTN   TRA     --            ALL FIXED, RETURN TO MAIN STREAM.    
                              *     
      00144  635121234260     ERMESS BCI     9,TRACK QUOTA EXHAUSTED, TEMPORARY MODE WILL BE USED.    
      00145  506446632160     
      00146  256730216462     
      00147  632524736063     
      00150  254447465121     
      00151  517060444624     
      00152  256066314343     
      00153  602225606462     
      00154  252433606060     
      00155  0761 00 0 00000   NOP   NOP                   INSTRUCTION TO BLOCK ERROR RETURN.   
      00156  0 00000 0 00000  MODE           0             START IN PERMANENT MODE. 
      00157  0 00000 0 00000  MODSW                        TEMP STORAGE FOR 6-BIT,12-BIT INDICATOR.   
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     
                              *      SEEK.($NAME1$, $NAME2$, ERRET)     
                              *      ERROR RETURN MEANS FILE NOT FOUND. 
                              *     
      00160 -0500 60 4 00001   SEEK  CAL*    1,4           GET FILE NAME.     
      00161  0602 00 0 00306         SLW     INNAM         ..     
      00162 -0500 60 4 00002         CAL*    2,4           ..     
      00163  0602 00 0 00307         SLW     INNAM+1       ..     
      00164  0634 00 4 00222         SXA     SKX4,4        SAVE LINKAGE.
      00165  0020 00 0 00166   SKSW  TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                  *********************
      00166 -0500 00 0 00314         CAL     RBFSZ         GET A BUFFER FROM SUPERVISOR.  
      00167  0074 00 4 00000         TSX     GETBUF,4      ..     
      00170  0621 00 0 00257         STA     ECALL         STORE BUFFER LOCATION.   
      00171  0621 00 0 00217         STA     STCALL        ..     
      00172 -0625 00 0 00165         STL     SKSW          RESET ONE-TIME SWITCH.   
                              *                                                  *********************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 4     
                  
      00173 -0500 00 0 00217         CAL     STCALL        SET UP PICKUP INSTRUCTION FOR INDEXING.    
      00174  0361 00 0 00314         ACL     RBFSZ         ..     
      00175  0621 00 0 00242         STA     RDWORD        ..     
      00176  0074 00 4 00011         TSX     FSTATE,4      MAKE SURE FILE IS THERE. 
 TD   00177  3 00000 0 00306         TXH     INNAM         ..     
 TD   00200  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00201  3 00000 0 00321         TXH     =-0           DON'T WANT DATA.   
 TD   00202  3 00000 0 00224         TXH     NOTFN         ERROR RETURN MEANS FILE NOT THERE.   
      00203  0074 00 4 00005         TSX     OPEN,4        OPEN THE FILE FOR READING.     
 TD   00204  3 00000 0 00322         TXH     =HR           ..     
 TD   00205  3 00000 0 00306         TXH     INNAM         ..     
 TD   00206  3 00000 0 00307         TXH     INNAM+1       ..     
      00207  0774 00 6 00660         AXT     RBFLTH,6      SET UP BUFFER COUNTER.   
      00210  0774 00 4 00222         AXT     SKX4,4        SET END OF FILE RETURN.  
      00211  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00212  0600 00 0 00312         STZ     EOFR          CLEAR END OF FILE SWITCH.
      00213  0074 00 4 00007         TSX     RDWAIT,4      GET INITIAL BUFFER LOAD. 
 TD   00214  3 00000 0 00306         TXH     INNAM         ..     
 TD   00215  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00216  3 00000 0 00316         TXH     =0            ..     
      00217  3 00660 0 00000  STCALL TXH     --,,RBFLTH    ..     
 TD   00220  3 00000 0 00265         TXH     EOF           END OF FILE RETURN.
 TD   00221  3 00000 0 00311         TXH     EOFCT         ..     
      00222  0774 00 4 00000   SKX4  AXT     --,4          RESTORE LINKAGE.   
      00223  0020 00 4 00004         TRA     4,4           RETURN TO CALLER.  
                              *     
      00224  0074 00 4 00001  NOTFN  TSX     SETBCD,4      FILE NOT FOUND, COMMENT. 
      00225  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00226  0074 00 4 00004         TSX     WRFLXA,4      START UP COMMENT.  
      00227  0 00001 0 00323                 =H FILE ,,1   ..     
      00230  0074 00 4 00004         TSX     WRFLXA,4      INSERT FILE NAME.  
      00231  0 00002 0 00306                 INNAM,,2      ..     
      00232  0074 00 4 00003         TSX     WRFLX,4       END OF COMMENT.    
      00233  0 00002 0 00240                 ECM,,2        ..     
      00234  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00235  0074 00 4 00002         TSX     SETFUL,4      YES, RESET MODE.   
      00236  0534 00 4 00222         LXA     SKX4,4        GIVE ERROR RETURN. 
      00237  0020 60 4 00003         TRA*    3,4           ..     
                              *     
      00240  604546636026     ECM    BCI     2, NOT FOUND.  
      00241  466445243360     
                              *     
                              *      ENTRY TO OBTAIN WORD FROM FILE.    
                              *              WORD = RDWORD.(EOF)  
                              *     
      00242  0500 00 6 00000  RDWORD CLA     --,6          GET WORD FROM INPUT BUFFER.    
      00243  2 00001 6 00264         TIX     GOBACK,6,1    INDEX, AND CHECK FOR EMPTY BUFFER.   
      00244  0520 00 0 00312         ZET     EOFR          BUFFER EMPTY, HAS END OF FILE OCCURRED.    
      00245  0020 60 4 00001         TRA*    1,4           YES, GIVE EOF RETURN.    
      00246  0601 00 0 00310         STO     RTEMP         NO, SAVE WORD AND GET SOME MORE DATA.
      00247  0634 00 4 00263         SXA     EMPX4,4       SAVE LINKAGE, ALSO.
      00250  0774 00 6 00660         AXT     RBFLTH,6      RESET BUFFER POINTER.    
      00251  0774 00 4 00262         AXT     EMPGT,4       SET END OF FILE RETURN.  
      00252  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00253  0074 00 4 00007         TSX     RDWAIT,4      GET ANOTHER BUFFER LOAD OF DATA.     
 TD   00254  3 00000 0 00306         TXH     INNAM         ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 5     
                  
 TD   00255  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00256  3 00000 0 00316         TXH     =0            ..     
      00257  3 00660 0 00000  ECALL  TXH     --,,RBFLTH    ..     
 TD   00260  3 00000 0 00265         TXH     EOF           ..     
 TD   00261  3 00000 0 00311         TXH     EOFCT         ..     
      00262  0500 00 0 00310   EMPGT CLA     RTEMP         RESTORE WORD FOR THIS CALL.    
      00263  0774 00 4 00000   EMPX4 AXT     --,4          RESTORE LINKAGE.   
      00264  0020 00 4 00002  GOBACK TRA     2,4           RETURN TO CALLER.  
                              *     
      00265 -0625 00 0 00312  EOF    STL     EOFR          END OF FILE REACHED, SET SWITCH.     
      00266 -0500 00 0 00311         CAL     EOFCT         GET COUNT OF WORDS LEFT. 
      00267  0361 00 0 00317         ACL     =1            BUGGER WORD COUNT. 
      00270  0734 00 6 00000         PAX     0,6           SET WORD COUNTER.  
      00271  0361 00 0 00257         ACL     ECALL         ADJUST PICKUP INSTRUCTION.     
      00272  0621 00 0 00242         STA     RDWORD        ..     
      00273  0074 00 4 00275         TSX     ENDRD,4       TURN OFF FILE.     
      00274  0020 00 0 00000  EOFRTN TRA     --            RETURN TO END OF RDFILE CALLING SEQUENCE.  
                              *     
                              *      ENTRY TO CLOSE INPUT FILE.   
                              *      ENDRD.     
                              *     
      00275  0634 00 4 00302  ENDRD  SXA     ENDX4,4       SAVE LINKAGE.
      00276  0074 00 4 00010         TSX     CLOSE,4       CLOSE FILE.  
 TD   00277  3 00000 0 00306         TXH     INNAM         ..     
 TD   00300  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00301  3 00000 0 00302         TXH     *+1           IGNORE ANY ERROR RETURN. 
      00302  0774 00 4 00000  ENDX4  AXT     --,4          RESTORE LINKAGE.   
      00303  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00304  545454545454     OUTNAM BCI     2,************  NAME OF OUTPUT FILE.   
      00305  545454545454     
      00306  545454545454      INNAM BCI     2,************  NAME OF INPUT FILE.    
      00307  545454545454     
      00310  0 00000 0 00000   RTEMP                       STORAGE FOR WORD.  
      00311  0 00000 0 00000  EOFCT                        STORAGE FOR END OF FILE COUNTER.     
      00312  0 00000 0 00312   EOFR          *             SWITCH FOR END OF FILE MET.    
                              *     
                       00660  TRKLTH EQU     432           DISK TRACK LENGTH. 
      00313  0 00000 0 00660   TRKSZ         TRKLTH        WORD CONTAINING TRACK LENGTH.  
                       00660  RBFLTH EQU     TRKLTH        READ BUFFER LENGTH.
                       00330  WBFLTH EQU     TRKLTH/2      WRITE BUFFER LENGTH.     
      00314  0 00000 0 00660  RBFSZ          RBFLTH        WORD CONTAINING READ BUFFER SIZE.    
      00315  0 00000 0 00330  WBFSZ          WBFLTH        WORD CONTAINING WRITE BUFFER SIZE.   
                              *     
                                     END  
                  
        LITERALS  
      00316  000000000000     
      00317  000000000001     
      00320  000000000002     
      00321  400000000000     
      00322  516060606060     
      00323  602631432560     
      00324  666060606060     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        325 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        122    CL4   100
        240    ECM   233
        265    EOF   220,  260
        107    FWR   105
        155    NOP   137
         43    OPN    37,  142
         22    OSW    34
        312   EOFR   212,  244,  265
        100   FILE     0
         62   FULL      
        156   MODE    47,  136
        117   NOWR   103
        127   OEXH    51
          5   OPEN    43,  203
         40   OPOK    35
         41   OPX4    21
        160   SEEK     0
        165   SKSW   172
        222   SKX4   164,  210,  236
        124   WEXH    74,  116
         60   WRNM    30
        143   WRTN    36,   64,  106
         10  CLOSE   117,  124,  276
        257  ECALL   170,  271
        262  EMPGT   251
        263  EMPX4   247
        275  ENDRD     0,  273
        302  ENDX4   275
        311  EOFCT   221,  261,  266
         76  FULX4    62
        306  INNAM   161,  163,  177,  200,  205,  206,  214,  215,  231,  254,  255,  277,  300
        157  MODSW   130,  133,  225,  234
        224  NOTFN   202
         51  OPERR   140
        314  RBFSZ   166,  174
        310  RTEMP   246,  262
        313  TRKSZ    31
        315  WBFSZ    23,   27
         71  WCALL    25
         65  WRAGN    63
         74  WRERR   141
          3  WRFLX   131,  232
         15 ASSIGN     0
         55 BFCALL    33
         12 BUFFER    52
        113 CLCALL    26,  104
        274 EOFRTN   211,  252
        144 ERMESS   132
         11 FSTATE   176
          0 GETBUF    24,   32,  167
        264 GOBACK   243
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        304 OUTNAM    16,   20,   45,   46,   53,   54,   66,   67,  110,  111,  120,  121,  125,  126
        660 RBFLTH   207,  217,  250,  257,  314
          7 RDWAIT   213,  253
        242 RDWORD     0,  175,  272
         77 RETURN    61
          1 SETBCD   127,  224
          2 SETFUL   134,  235
        217 STCALL   171,  173
        660 TRKLTH    55,  313,  314
        330 WBFLTH    40,   71,   75,  102,  314,  315
          4 WRFLXA   226,  230
          6 WRWAIT    65,  107
         57 WRWORD     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 1     
                  
                              *      USAGE  CLRNAM.(NAME1, NAME2, CANT, SW)   
                              *        FILE NAME1 NAME2 WILL BE CHECKED FOR AND     
                              *        DELETED IF POSSIBLE.  IF SW
                              *        IS TRUE, USER WILL BE ASKED BEFORE DELETING  
                              *        THE OLD FILE.  
                              *     
                       00012         ENTRY   CLRNAM        CLEAR FILE NAME.   
                              *     
                                     EXTERN  SETFUL,SETBCD,WRFLX,WRFLXA,RDFLXA
                                     EXTERN  FSTATE,CHFILE,DELFIL 
                              *     
                  
        TRANSFER VECTOR 
      00000  622563266443     SETFUL
      00001  622563222324     SETBCD
      00002  665126436760     WRFLX 
      00003  665126436721     WRFLXA
      00004  512426436721     RDFLXA
      00005  266263216325     FSTATE
      00006  233026314325     CHFILE
      00007  242543263143     DELFIL
                  
            LINKAGE DIRECTOR  
      00010  000000000000     
      00011  234351452144     
                  
      00012 -0500 60 4 00001  CLRNAM CAL*    1,4           GET FILE NAME.     
      00013  0602 00 0 00121         SLW     N1            ..     
      00014 -0500 60 4 00002         CAL*    2,4           SECONDARY NAME.    
      00015  0602 00 0 00122         SLW     N2            ..     
      00016  0634 00 4 00147         SXA     SV4,4         SAVE LINKAGE.
      00017  0074 00 4 00005         TSX     FSTATE,4      CHECK STATE OF FILE.     
 TD   00020  3 00000 0 00121         TXH     N1            NAME   
 TD   00021  3 00000 0 00122         TXH     N2            NAME   
      00022  3 00010 0 00156         TXH     DATA,,8       FILE STATE   
 TD   00023  3 00000 0 00112         TXH     FSTERR        IN CASE OF ERROR   
 TD   00024  3 00000 0 00155         TXH     ERNO          GATHER ERROR NUMBER.     
      00025  0441 00 0 00157         LDI     MODE          CHECK MODE OF FILE.
      00026 -0054 00  400000         LFT     400000        IS MODE NEGATIVE.  
      00027  0020 00 0 00100         TRA     LINKED        YES, FILE IS LINKED.     
      00030  0600 00 0 00154         STZ     PROTEC        ASSUME NOT PROTECTED.    
      00031  0056 00  000100         RNT     100           CHECK PROTECTED BIT.     
      00032  0020 00 0 00035         TRA     CKASK         NOT PROTECTED, SHOULD WE ASK ANYWAY. 
      00033 -0625 00 0 00154         STL     PROTEC        PROTECTED, SET SWITCH FOR LONG COMMENT.    
      00034  0020 00 0 00040         TRA     ASK           GO ASK PERMISSION TO DELETE FILE.    
      00035  0534 00 4 00147  CKASK  LXA     SV4,4         GET LINKAGE TO ASK SWITCH.     
      00036 -0520 60 4 00004         NZT*    4,4           SHOULD WE ASK PERMISSION ANYWAY.     
      00037  0020 00 0 00065         TRA     DELETE        NO, GO DELETE FILE.
      00040  0074 00 4 00000  ASK    TSX     SETFUL,4      SET CHARACTER MODE SWITCH.     
      00041  0074 00 4 00003         TSX     WRFLXA,4      BEGIN THE COMMENT. 
      00042  0 00003 0 00116                 MI,,3         ..     
      00043  0074 00 4 00001         TSX     SETBCD,4      SWITCH TO BCD FOR FILE NAME.   
      00044  0074 00 4 00003         TSX     WRFLXA,4      WRITE OUT FILE NAME.     
      00045  0 00002 0 00121                 N1,,2    
      00046  0074 00 4 00000         TSX     SETFUL,4      BACK TO FULL MODE. 
      00047 -0520 00 0 00154         NZT     PROTEC        SHOULD WE CLAIM IT IS PROTECTED.     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 2     
                  
      00050  0020 00 0 00053         TRA     SKPPCM        NO, SKIP THAT PART.
      00051  0074 00 4 00003         TSX     WRFLXA,4      YES, ANNOUNC PROTECTED PART.   
      00052  0 00006 0 00123                 ISPTC,,6      ..     
      00053  0074 00 4 00003  SKPPCM TSX     WRFLXA,4      NOW ASK FOR PERMISSION.  
      00054  0 00012 0 00131                 DOYOU,,10     ..     
      00055  0074 00 4 00001         TSX     SETBCD,4      SWITCH SO ERASE WORKS.   
      00056  0074 00 4 00004         TSX     RDFLXA,4 
      00057  0 00001 0 00150                 IN,,1         GET ONE WORD.
      00060  0074 00 4 00000         TSX     SETFUL,4      RESTORE MODE.
      00061 -0500 00 0 00150         CAL     IN            GET THAT WORD.     
      00062  0771 00 0 00022         ARS     18            GET FIRST THREE CHARACTERS.    
      00063  0322 00 0 00170         ERA     =H000YES      DID HE SAY YES.    
      00064 -0100 00 0 00076         TNZ     ERTN          NO, GIVE ERROR RETURN.   
      00065  0074 00 4 00006  DELETE TSX     CHFILE,4      GOODY, WE CAN DELETE IT. 
 TD   00066  3 00000 0 00121         TXH     N1            MAKE SURE IT IS DELETEABLE.    
 TD   00067  3 00000 0 00122         TXH     N2            ..     
 TD   00070  3 00000 0 00166         TXH     =1            BY CHANGING ITS MODE TO TEMPORARY.   
      00071  0074 00 4 00007         TSX     DELFIL,4      DELETE THE SILLY THING.  
 TD   00072  3 00000 0 00121         TXH     N1            ..     
 TD   00073  3 00000 0 00122         TXH     N2            ..     
      00074  0534 00 4 00147  RTN    LXA     SV4,4         RESTORE THE LINKAGE.     
      00075  0020 00 4 00005         TRA     5,4           RETURN TO CALLER.  
                              *     
      00076  0534 00 4 00147  ERTN   LXA     SV4,4         ERROR RETURN, FILE CANNOT BE DELETED.
      00077  0020 60 4 00003         TRA*    3,4           RETURN THROUGH ERROR RETURN.   
                              *     
      00100  0074 00 4 00000  LINKED TSX     SETFUL,4      FILE IS LINKED, COMMENT AND GIVE UP. 
      00101  0074 00 4 00003         TSX     WRFLXA,4      START THE COMMENT. 
      00102  0 00003 0 00116                 MI,,3         ..     
      00103  0074 00 4 00001         TSX     SETBCD,4      SWITCH MODE FOR FILE NAME.     
      00104  0074 00 4 00003         TSX     WRFLXA,4      TYPE FILE NAME.    
      00105  0 00002 0 00121                 N1,,2         ..     
      00106  0074 00 4 00000         TSX     SETFUL,4      SWITCH FOR REST OF COMMENT.    
      00107  0074 00 4 00002         TSX     WRFLX,4       END THIS PART WITH A C.R.
      00110  0 00004 0 00143                 ISLNK,,4      ..     
      00111  0020 00 0 00076         TRA     ERTN          NOW GIVE AN ERROR RETURN.
                              *     
      00112  0500 00 0 00155  FSTERR CLA     ERNO          ERROR RETURN FROM FSTATE, FIND OUT WHY.    
      00113  0402 00 0 00167         SUB     =3            RETURN 3 MEANS FILE NOT FOUND. 
      00114 -0100 00 0 00100         TNZ     LINKED        WRONG ERROR RETURN, ASSUME LINKED.   
      00115  0020 00 0 00074         TRA     RTN           FILE NOT FOUND, NAME IS OK.    
                              *     
                              *                            DATA, COMMENTS, ETC.     
                              *     
      00116  004601430124     MI     BCI     3,0O1L1D0 1F1I1L1E0  
      00117  006001260131     
      00120  014301250060     
                              *     
      00121  0 00000 0 00000  N1                           STORAGE FOR FILE NAME.   
      00122  0 00000 0 00000  N2                           SECONDARY NAME.    
                              *     
      00123  006001310162     ISPTC  BCI     1,0 1I1S 
      00124 +006001330057            OCT     006001330057  BLANK, RED SHIFT, NULL.  
      00125  004700510046            BCI     3,0P0R0O0T0E0C0T0E0D 
      00126  006300250023     
      00127  006300250024     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 3     
                  
      00130 +013200330060            OCT     013200330060  BLACK SHIFT, PERIOD, BLANK.    
      00131  006000400040     DOYOU  BCI     9,0 0-0-0D1O0 1Y1O1U0 1W1I1S1H0 1T1O0 1D1E1L1E1T1E0 1I1T 
      00132  002401460060     
      00133  017001460164     
      00134  006001660131     
      00135  016201300060     
      00136  016301460060     
      00137  012401250143     
      00140  012501630125     
      00141  006001310163     
      00142 +015600600060            OCT     015600600060  TERMINAL QUESTION MARK.  
                              *     
      00143  006001310162     ISLNK  BCI     4,0 1I1S0 1L1I1N1K1E1D0.   
      00144  006001430131     
      00145  014501420125     
      00146  012400336060     
                              *     
      00147  0 00000 0 00000  SV4                          STORAGE FOR CALLING LINKAGE.   
      00150                   IN     BSS     4             FOR INPUT WORD.    
      00154  0 00000 0 00000  PROTEC                       SWITCH FOR PROTECTED FILE.     
      00155  0 00000 0 00000  ERNO                         STORAGE FOR ERROR NUMBER.
      00156                   DATA   BSS     8             FOR STATE INFORMATION.   
                       00161  DEVICE EQU     DATA+3   
                       00157  MODE   EQU     DATA+1   
                              *     
                                     END  
                  
        LITERALS  
      00166  000000000001     
      00167  000000000003     
      00170  000000702562     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        171 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        150     IN    57,   61
        116     MI    42,  102
        121     N1    13,   20,   45,   66,   72,  105
        122     N2    15,   21,   67,   73
         40    ASK    34
         74    RTN   115
        147    SV4    16,   35,   74,   76
        156   DATA    22,  166
        155   ERNO    24,  112
         76   ERTN    64,  111
        157   MODE    25,  166
         35  CKASK    32
        131  DOYOU    54
        143  ISLNK   110
        123  ISPTC    52
          2  WRFLX   107
          6 CHFILE    65
         12 CLRNAM     0
         65 DELETE    37
          7 DELFIL    71
        161 DEVICE   166
          5 FSTATE    17
        112 FSTERR    23
        100 LINKED    27,  114
        154 PROTEC    30,   33,   47
          4 RDFLXA    56
          1 SETBCD    43,   55,  103
          0 SETFUL    40,   46,   60,  100,  106
         53 SKPPCM    50
          3 WRFLXA    41,   44,   51,   53,  101,  104
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 1     
                  
                              *        J. H. SALTZER, MAY, 1965.  
                              *     
                       00004         ENTRY   RENAME        RENAME FILE. 
                              *     
                                     EXTERN CHFILE,WRFLX    
                              *     
                  
        TRANSFER VECTOR 
      00000  233026314325     CHFILE
      00001  665126436760     WRFLX 
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  512545214425     
                  
      00004  0500 60 4 00001  RENAME CLA*    1,4           GET FILE NAMES.    
      00005  0601 00 0 00071         STO     OLD1          ..     
      00006  0500 60 4 00002         CLA*    2,4           ..     
      00007  0601 00 0 00072         STO     OLD2          ..     
      00010  0601 00 0 00074         STO     NEW2          ASSUME NO CHANGE IN SECONDARY NAMES. 
      00011  0500 60 4 00003         CLA*    3,4           ..     
      00012  0601 00 0 00073         STO     NEW1          ..     
      00013  0560 00 4 00004         LDQ     4,4           CHECK FOR TXH
      00014  0500 00 0 00076         CLA     =O300000000000 ..    
      00015  0040 00 0 00020         TLQ     SKPN2         NO TXH, SECONDARY NAME UNCHANGED.    
      00016  0500 60 4 00004         CLA*    4,4           TXH, CHANGE SECONDARY NAME.    
      00017  0601 00 0 00074         STO     NEW2          ..     
      00020  0634 00 4 00036  SKPN2  SXA     RETURN,4      SAVE LINKAGE.
      00021  0074 00 4 00000         TSX     CHFILE,4      CHANGE NAME WITHOUT CHANGING MODE.   
 TD   00022  3 00000 0 00071         TXH     OLD1          ..     
 TD   00023  3 00000 0 00072         TXH     OLD2          ..     
 TD   00024  3 00000 0 00077         TXH     =-0           MODE UNCHANGED.    
 TD   00025  3 00000 0 00073         TXH     NEW1          ..     
 TD   00026  3 00000 0 00074         TXH     NEW2          ..     
      00027  0074 00 4 00000         TSX     CHFILE,4      CHANGE MODE WITHOUT CHANGING NAME.   
 TD   00030  3 00000 0 00073         TXH     NEW1          ..     
 TD   00031  3 00000 0 00074         TXH     NEW2          ..     
 TD   00032  3 00000 0 00075         TXH     =0            PERMANENT MODE.    
 TD   00033  3 00000 0 00077         TXH     =-0           NAME UNCHANGED.    
 TD   00034  3 00000 0 00077         TXH     =-0           ..     
 TD   00035  3 00000 0 00040         TXH     CHERR         IN CASE MODE UNCHANGEABLE.     
      00036  0774 00 4 00000  RETURN AXT     --,4          RESTORE LINKAGE.   
      00037  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
      00040  0074 00 4 00001  CHERR  TSX     WRFLX,4       ASSUME TRACK QUOTA EXHAUSTED, AND COMMENT. 
      00041  0 00010 0 00045                 TRKQUO,,8     ..     
      00042  0074 00 4 00001         TSX     WRFLX,4       MENTION THAT NEW FILE IS TEMP MODE.  
      00043  0 00013 0 00055                 TMPMOD,,11    ....   
      00044  0020 00 0 00036         TRA     RETURN        EXIT.  
                              *     
                              *              COMMENTS AND STORAGE.
                              *     
      00045  006301510121     TRKQUO BCI     8,0T1R1A1C1K0 1Q1U1O1T1A0 0E0X0H0A0U0S0T0E0D0.     
      00046  012301420060     
      00047  015001640146     
      00050  016301210060     
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 2     
                  
      00051  002500670030     
      00052  002100640062     
      00053  006300250024     
      00054  003360606060     
                              *     
      00055  007001460164     TMPMOD BCI     5,0Y1O1U1R0 1N1E1W0 1F1I1L1E0 1I 
      00056  015100600145     
      00057  012501660060     
      00060  012601310143     
      00061  012500600131     
      00062 +016200600133            OCT     016200600133  S, BLANK, RED SHIFT.     
      00063  006300250044            BCI     3,0T0E0M0P0O0R0A0R0Y 
      00064  004700460051     
      00065  002100510070     
      00066 +013200600144            OCT     013200600144  BLACK SHIFT, BLANK, SMALL M.   
      00067  004601240125            BCI     2,0O1D1E0.     
      00070  003360606060     
                              *     
      00071  0 00000 0 00000  OLD1  
      00072  0 00000 0 00000  OLD2  
      00073  0 00000 0 00000  NEW1  
      00074  0 00000 0 00000  NEW2  
                              *     
                                     END  
                  
        LITERALS  
      00075  000000000000     
      00076  300000000000     
      00077  400000000000     
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        100 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         73   NEW1    12,   25,   30
         74   NEW2    10,   17,   26,   31
         71   OLD1     5,   22
         72   OLD2     7,   23
         40  CHERR    35
         20  SKPN2    15
          1  WRFLX    40,   42
          0 CHFILE    21,   27
          4 RENAME     0
         36 RETURN    20,   44
         55 TMPMOD    43
         45 TRKQUO    41
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1     MAD PROGRAM LISTING ... ... ...                 FILE    6TYP   MAD            09/18/68    0948.2
-                 
                 ..  TYPEWRITER INPUT CHARACTER CONTROL ROUTINE.                                       LM00001    
                 ..  USAGE. . .   COUNT = TYPEIN.(BUFFER, BUFSIZ, ERASE, KILL)                         LM00002    
                           J. H. SALTZER, JANUARY, 1965.                                               LM00003    
                                                                                                       LM00004    
                  EXTERNAL FUNCTION(LINE, BUFSIZ)                                                 *001 LM00005    
                                                                                                       LM00006    
                  NORMAL MODE IS INTEGER                                                          *002 LM00007    
                  VECTOR VALUES E1 = 0137K                                                        *003 LM00008    
                  VECTOR VALUES K1 = 0156K                                                        *004 LM00009    
                  VECTOR VALUES NBITS = 12                                                        *005 LM00010    
                  VECTOR VALUES NULL = 0057K                                                      *006 LM00011    
                  VECTOR VALUES ERASE = 0504K                                                     *007 LM00012    
                  VECTOR VALUES KILL = 0506K                                                      *008 LM00013    
                  VECTOR VALUES RETURN = 0055K                                                    *009 LM00014    
                  VECTOR VALUES WRDSIZ = 36                                                       *010 LM00015    
                  VECTOR VALUES CHMASK = 7777K                                                    *011 LM00016    
                                                                                                       LM00017    
                  ENTRY TO SETERS.                                                                *012 LM00018    
                    ERASE = LINE                                                                  *013 LM00019    
                    FUNCTION RETURN                                                               *014 LM00020    
                                                                                                       LM00021    
                  ENTRY TO SETKIL.                                                                *015 LM00022    
                    KILL = LINE                                                                   *016 LM00023    
                    FUNCTION RETURN                                                               *017 LM00024    
                                                                                                       LM00025    
                  ENTRY TO CANON.                                                                 *018 LM00026    
                    FUNCTION RETURN                                                               *019 LM00027    
                                                                                                       LM00028    
                  ENTRY TO TYPEIN.                                                                *020 LM00029    
                    SIZE = 0                                                                      *021 LM00030    
                    TYLINE.                                                                       *022 LM00031    
       LOOP         WORD = TYWORD.(0)                                                             *023 LM00032    
                    THROUGH DISECT, FOR I = WRDSIZ-NBITS,-NBITS, I .L. 0                          *024 LM00033    
                      CHAR = (WORD.RS.I) .A. CHMASK                                               *025 LM00034    
                      WHENEVER CHAR .E. ERASE .OR. CHAR .E. E1                                    *026 LM00035    
                        WHENEVER SIZE .G. 0, SIZE = SIZE - 1                                      *027 LM00036    
                      OR WHENEVER CHAR .E. KILL .OR. CHAR .E. K1                                  *028 LM00037    
                        SIZE = 0                                                                  *029 LM00038    
                      OR WHENEVER CHAR .E. RETURN .OR. CHAR.RS.6 .E. RETURN                       *030 LM00039    
                        TRANSFER TO UND                                                           *031 LM00040    
                      OR WHENEVER CHAR .A. 0400K .E. 0                                            *032 LM00041    
                        SIZE = SIZE + 1                                                           *033 LM00042    
                        LINE(SIZE) = CHAR.A.77K                                                   *034 LM00043    
                      END OF CONDITIONAL                                                          *035 LM00044    
       DISECT         WHENEVER SIZE .GE. BUFSIZ, TRANSFER TO UND                                  *036 LM00045    
                    TRANSFER TO LOOP                                                              *037 LM00046    
      UND           SIZE = SIZE + 1                                                               *038 LM00047    
                    LINE(SIZE) = RETURN                                                           *039 LM00048    
                    FUNCTION RETURN SIZE                                                          *040 LM00049    
                                                                                                       LM00050    
                 ..     TYPEWRITER OUTPUT CHARACTER CONTROL ROUTINE.                                   LM00051    
                 ..     USAGE. . .    TYPOUT.(LINE, LENGTH)                                            LM00052    
                                                                                                       LM00053    
                  ENTRY TO TYPOUT.                                                                *041 LM00054    
                    K = 0                                                                         *042 LM00055    
                    SETFUL.                                                                       *043 LM00056    
                    THROUGH PRLOOP, FOR J = 1, 1, J .G. BUFSIZ                                    *044 LM00057    
                      TWORD = (TWORD .LS. NBITS) .V. LINE(J)                                      *045 LM00058    
                      K = K + 1                                                                   *046 LM00059    
                      WHENEVER K .GE. WRDSIZ/NBITS                                                *047 LM00060    
                        K = 0                                                                     *048 LM00061    
                        PRWORD.(TWORD)                                                            *049 LM00062    
       PRLOOP         END OF CONDITIONAL                                                          *050 LM00063    
                    THROUGH NULPK, FOR K = K, 1, K.GE. WRDSIZ/NBITS                               *051 LM00064    
       NULPK          TWORD = (TWORD.LS.NBITS) .V. NULL                                           *052 LM00065    
                    PRWORD.(TWORD)                                                                *053 LM00066    
                    PRBUFF.                                                                       *054 LM00067    
                    FUNCTION RETURN                                                               *055 LM00068    
                                                                                                       LM00069    
                  ENTRY TO HOL.                                                                   *056 LM00070    
                    FUNCTION RETURN LINE .A. 77K                                                  *057 LM00071    
                                                                                                       LM00072    
                  END OF FUNCTION                                                                 *058 LM00073    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00351 TRANSFER VECTOR LENGTH  00006 PROGRAM BEGINS    00037
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      HOL    00314   0        TYPOUT 00212   0        TYPEIN 00060   0        CANON  00054   0        SETKIL 00046   0  
      SETERS 00040   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      CHAR   00011   1        I      00015   1        K      00021   1        NULPK  00006   4        TWORD  00026   1  
      CHMASK 00012 A 1        J      00016   1        LOOP   00007   4        PRLOOP 00006   4        UND    00010   4  
      DISECT 00006   4        K1     00017 A 1        NBITS  00022 A 1        RETURN 00024 A 1        WORD   00027   1  
      E1     00013 A 1        KILL   00020 A 1        NULL   00023 A 1        SIZE   00025   1        WRDSIZ 00030 A 1  
      ERASE  00014 A 1                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1        PRBUFF 00001   1        PRWORD 00002   1        SETFUL 00003   1        TYLINE 00004   1  
      TYWORD 00005   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00034 +000000000077     00035 +000000000400     00033 +000000000006     00031 +000000000000     00032 +000000000001    
 00036 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00007 TXL -300070000065       00010 TXL -300204000201                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION(LINE, BUFSIZ)                                    001  LM00005
                 NORMAL MODE IS INTEGER                                             002  LM00007
                 VECTOR VALUES E1 = 0137K                                           003  LM00008
 00013     +0 00000 0 00137                                                                                             
                 VECTOR VALUES K1 = 0156K                                           004  LM00009
 00017     +0 00000 0 00156                                                                                             
                 VECTOR VALUES NBITS = 12                                           005  LM00010
 00022     +0 00000 0 00014                                                                                             
                 VECTOR VALUES NULL = 0057K                                         006  LM00011
 00023     +0 00000 0 00057                                                                                             
                 VECTOR VALUES ERASE = 0504K                                        007  LM00012
 00014     +0 00000 0 00504                                                                                             
                 VECTOR VALUES KILL = 0506K                                         008  LM00013
 00020     +0 00000 0 00506                                                                                             
                 VECTOR VALUES RETURN = 0055K                                       009  LM00014
 00024     +0 00000 0 00055                                                                                             
                 VECTOR VALUES WRDSIZ = 36                                          010  LM00015
 00030     +0 00000 0 00044                                                                                             
                 VECTOR VALUES CHMASK = 7777K                                       011  LM00016
 00012     +0 00000 0 07777                                                                                             
                 ENTRY TO SETERS.                                                   012  LM00018
 00037 TRA +0 02000 0 00042    00040 SXA +0 63400 2 00324    00041 TSX +0 07400 2 00324                                 
                   ERASE = LINE                                                     013  LM00019
 00042 CLA +0 50000 0 00024    00043 STO +0 60100 0 00014                                                               
                   FUNCTION RETURN                                                  014  LM00020
 00044 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO SETKIL.                                                   015  LM00022
 00045 TRA +0 02000 0 00050    00046 SXA +0 63400 2 00324    00047 TSX +0 07400 2 00324                                 
                   KILL = LINE                                                      016  LM00023
 00050 CLA +0 50000 0 00024    00051 STO +0 60100 0 00020                                                               
                   FUNCTION RETURN                                                  017  LM00024
 00052 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO CANON.                                                    018  LM00026
 00053 TRA +0 02000 0 00056    00054 SXA +0 63400 2 00324    00055 TSX +0 07400 2 00324                                 
                   FUNCTION RETURN                                                  019  LM00027
 00056 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO TYPEIN.                                                   020  LM00029
 00057 TRA +0 02000 0 00062    00060 SXA +0 63400 2 00324    00061 TSX +0 07400 2 00324                                 
                   SIZE = 0                                                         021  LM00030
 00062 CLA +0 50000 0 00031    00063 STO +0 60100 0 00025                                                               
                   TYLINE.                                                          022  LM00031
 00064 TSX +0 07400 4 00004                                                                                             
       LOOP        WORD = TYWORD.(0)                                                023  LM00032
 00065 TSX +0 07400 4 00005    00066 TXH +3 00000 0 00031    00067 STO +0 60100 0 00027                                 
                   THROUGH DISECT, FOR I = WRDSIZ-NBITS,-NBITS, I .L. 0             024  LM00033
 00070 CLA +0 50000 0 00030    00071 SUB +0 40200 0 00022    00072 STO +0 60100 0 00015    00073 TRA +0 02000 0 00077   
 00074 CLS +0 50200 0 00022    00075 ADD +0 40000 0 00015    00076 STO +0 60100 0 00015    00077 CLA +0 50000 0 00015   
 00100 SUB +0 40200 0 00031    00101 TZE +0 10000 0 00103    00102 TMI -0 12000 0 00200                                 
                     CHAR = (WORD.RS.I) .A. CHMASK                                  025  LM00034
 00103 CAL -0 50000 0 00015    00104 STA +0 62100 0 00106    00105 CAL -0 50000 0 00027    00106 LGR -0 76500 0 00000   
 00107 ANA -0 32000 0 00012    00110 SLW +0 60200 0 00011                                                               
                     WHENEVER CHAR .E. ERASE .OR. CHAR .E. E1                       026  LM00035
 00111 CLA +0 50000 0 00011    00112 SUB +0 40200 0 00013    00113 TZE +0 10000 0 00117    00114 CLA +0 50000 0 00011   
 00115 SUB +0 40200 0 00014    00116 TNZ -0 10000 0 00127                                                               
                       WHENEVER SIZE .G. 0, SIZE = SIZE - 1                         027  LM00036
 00117 CLA +0 50000 0 00025    00120 SUB +0 40200 0 00031    00121 TZE +0 10000 0 00126    00122 TMI -0 12000 0 00126   
 00123 CLA +0 50000 0 00025    00124 SUB +0 40200 0 00032    00125 STO +0 60100 0 00025                                 
                     OR WHENEVER CHAR .E. KILL .OR. CHAR .E. K1                     028  LM00037
 00126 TRA +0 02000 0 00172    00127 CLA +0 50000 0 00011    00130 SUB +0 40200 0 00017    00131 TZE +0 10000 0 00135   
 00132 CLA +0 50000 0 00011    00133 SUB +0 40200 0 00020    00134 TNZ -0 10000 0 00140                                 
                       SIZE = 0                                                     029  LM00038
 00135 CLA +0 50000 0 00031    00136 STO +0 60100 0 00025                                                               
                     O'R CHAR .E. RETURN .OR. CHAR.RS.6 .E. RETURN                  030  LM00039
 00137 TRA +0 02000 0 00172    00140 CAL -0 50000 0 00033    00141 STA +0 62100 0 00143    00142 CAL -0 50000 0 00011   
 00143 LGR -0 76500 0 00000    00144 SLW +0 60200 0 00346    00145 CLA +0 50000 0 00346    00146 SUB +0 40200 0 00024   
 00147 TZE +0 10000 0 00153    00150 CLA +0 50000 0 00011    00151 SUB +0 40200 0 00024    00152 TNZ -0 10000 0 00155   
                       TRANSFER TO UND                                              031  LM00040
 00153 TRA +0 02000 0 00010                                                                                             
                     O'R CHAR .A. 0400K .E. 0                                       032  LM00041
 00154 TRA +0 02000 0 00172    00155 CAL -0 50000 0 00011    00156 ANA -0 32000 0 00035    00157 SLW +0 60200 0 00346   
 00160 CLA +0 50000 0 00346    00161 SUB +0 40200 0 00031    00162 TNZ -0 10000 0 00172                                 
                       SIZE = SIZE + 1                                              033  LM00042
 00163 CLA +0 50000 0 00025    00164 ADD +0 40000 0 00032    00165 STO +0 60100 0 00025                                 
                       LINE(SIZE) = CHAR.A.77K                                      034  LM00043
 00166 CAL -0 50000 0 00011    00167 ANA -0 32000 0 00034    00170 LXA +0 53400 1 00025    00171 SLW +0 60200 1 00024   
                     END OF CONDITIONAL                                             035  LM00044
       DISECT        WHENEVER SIZE .GE. BUFSIZ, TRANSFER TO UND                     036  LM00045
 00172 CLA +0 50000 0 00025    00173 SUB +0 40200 0 00024    00174 TZE +0 10000 0 00176    00175 TMI -0 12000 0 00177   
 00176 TRA +0 02000 0 00010    00177 TRA +0 02000 0 00074                                                               
                   TRANSFER TO LOOP                                                 037  LM00046
 00200 TRA +0 02000 0 00007                                                                                             
      UND          SIZE = SIZE + 1                                                  038  LM00047
 00201 CLA +0 50000 0 00025    00202 ADD +0 40000 0 00032    00203 STO +0 60100 0 00025                                 
                   LINE(SIZE) = RETURN                                              039  LM00048
 00204 LXA +0 53400 1 00025    00205 CLA +0 50000 0 00024    00206 STO +0 60100 1 00024                                 
                   FUNCTION RETURN SIZE                                             040  LM00049
 00207 CLA +0 50000 0 00025    00210 TRA +0 02000 0 00342                                                               
                 ENTRY TO TYPOUT.                                                   041  LM00054
 00211 TRA +0 02000 0 00214    00212 SXA +0 63400 2 00324    00213 TSX +0 07400 2 00324                                 
                   K = 0                                                            042  LM00055
 00214 CLA +0 50000 0 00031    00215 STO +0 60100 0 00021                                                               
                   SETFUL.                                                          043  LM00056
 00216 TSX +0 07400 4 00003                                                                                             
                   THROUGH PRLOOP, FOR J = 1, 1, J .G. BUFSIZ                       044  LM00057
 00217 CLA +0 50000 0 00032    00220 STO +0 60100 0 00016    00221 TRA +0 02000 0 00225    00222 CLA +0 50000 0 00016   
 00223 ADD +0 40000 0 00032    00224 STO +0 60100 0 00016    00225 CLA +0 50000 0 00016    00226 SUB +0 40200 0 00024   
 00227 TZE +0 10000 0 00231    00230 TPL +0 12000 0 00261                                                               
                     TWORD = (TWORD .LS. NBITS) .V. LINE(J)                         045  LM00058
 00231 CAL -0 50000 0 00022    00232 STA +0 62100 0 00234    00233 CAL -0 50000 0 00026    00234 ALS +0 76700 0 00000   
 00235 LXA +0 53400 2 00016    00236 ORA -0 50100 2 00024    00237 SLW +0 60200 0 00026                                 
                     K = K + 1                                                      046  LM00059
 00240 CLA +0 50000 0 00021    00241 ADD +0 40000 0 00032    00242 STO +0 60100 0 00021                                 
                     WHENEVER K .GE. WRDSIZ/NBITS                                   047  LM00060
 00243 LDQ +0 56000 0 00030    00244 PXD -0 75400 0 00000    00245 LLS +0 76300 0 00000    00246 DVP +0 22100 0 00022   
 00247 XCA +0 13100 0 00000    00250 CHS +0 76000 0 00002    00251 ADD +0 40000 0 00021    00252 TZE +0 10000 0 00254   
 00253 TMI -0 12000 0 00260                                                                                             
                       K = 0                                                        048  LM00061
 00254 CLA +0 50000 0 00031    00255 STO +0 60100 0 00021                                                               
                       PRWORD.(TWORD)                                               049  LM00062
 00256 TSX +0 07400 4 00002    00257 TXH +3 00000 0 00026                                                               
       PRLOOP        END OF CONDITIONAL                                             050  LM00063
 00260 TRA +0 02000 0 00222                                                                                             
                   THROUGH NULPK, FOR K = K, 1, K.GE. WRDSIZ/NBITS                  051  LM00064
 00261 CLA +0 50000 0 00021    00262 STO +0 60100 0 00021    00263 TRA +0 02000 0 00267    00264 CLA +0 50000 0 00021   
 00265 ADD +0 40000 0 00032    00266 STO +0 60100 0 00021    00267 LDQ +0 56000 0 00030    00270 PXD -0 75400 0 00000   
 00271 LLS +0 76300 0 00000    00272 DVP +0 22100 0 00022    00273 XCA +0 13100 0 00000    00274 CHS +0 76000 0 00002   
 00275 ADD +0 40000 0 00021    00276 TZE +0 10000 0 00307    00277 TPL +0 12000 0 00307                                 
       NULPK         TWORD = (TWORD.LS.NBITS) .V. NULL                              052  LM00065
 00300 CAL -0 50000 0 00022    00301 STA +0 62100 0 00303    00302 CAL -0 50000 0 00026    00303 ALS +0 76700 0 00000   
 00304 ORA -0 50100 0 00023    00305 SLW +0 60200 0 00026    00306 TRA +0 02000 0 00264                                 
                   PRWORD.(TWORD)                                                   053  LM00066
 00307 TSX +0 07400 4 00002    00310 TXH +3 00000 0 00026                                                               
                   PRBUFF.                                                          054  LM00067
 00311 TSX +0 07400 4 00001                                                                                             
                   FUNCTION RETURN                                                  055  LM00068
 00312 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO HOL.                                                      056  LM00070
 00313 TRA +0 02000 0 00316    00314 SXA +0 63400 2 00324    00315 TSX +0 07400 2 00324                                 
                   FUNCTION RETURN LINE .A. 77K                                     057  LM00071
 00316 CAL -0 50000 0 00024    00317 ANA -0 32000 0 00034    00320 SLW +0 60200 0 00346    00321 CLA +0 50000 0 00346   
 00322 TRA +0 02000 0 00342                                                                                             
                 END OF FUNCTION                                                    058  LM00073
 00323 TSX +0 07400 4 00000    00324 TXH +3 00000 0 00000    00325 SXD -0 63400 1 00324    00326 SXA +0 63400 4 00342   
 00327 CLA +0 50000 4 00001    00330 STA +0 62100 0 00042    00331 STA +0 62100 0 00050    00332 STA +0 62100 0 00171   
 00333 STA +0 62100 0 00206    00334 STA +0 62100 0 00236    00335 STA +0 62100 0 00316    00336 CLA +0 50000 4 00002   
 00337 STA +0 62100 0 00173    00340 STA +0 62100 0 00226    00341 TRA +0 02000 2 00001    00342 AXT +0 77400 4 00000   
 00343 LXA +0 53400 2 00324    00344 LXD -0 53400 1 00324    00345 TRA +0 02000 4 00001                                 
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 1     
                  
                              *     
                              *      J. H. SALTZER, JANUARY, 1965.
                              *     
                       00004         ENTRY   PRWORD        ADD A WORD TO PRINT BUFFER.    
                       00021         ENTRY   PRBUFF        PRINT OUT PARTIAL BUFFER.
                       00030         ENTRY   TYWORD        GET NEXT TYPED WORD.     
                       00047         ENTRY   TYLINE        RESET TO START READING NEXT LINE.    
                              *     
                                     EXTERN RDFLXA,WRFLXA   
                              *     
                  
        TRANSFER VECTOR 
      00000  512426436721     RDFLXA
      00001  665126436721     WRFLXA
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  475166465124     
                  
                       00034  BUFLEN EQU     28            TYPEWRITER BUFFER SIZE.  
                              *     
                              *      ADD WORD TO PRINT BUFFER.    
                              *      PRWORD.(WORD)    
                              *     
      00004  0634 00 4 00017  PRWORD SXA     PRX4,4        SAVE LINKAGE.
      00005 -0500 60 4 00001         CAL*    1,4           GET WORD BEING ADDED.    
      00006 -0734 00 4 00000         PDX     0,4           CHECK FOR DISK CONTROL WORD.   
      00007  3 77776 4 00017         TXH     PRX4,4,-2     DON'T STORE CONTROL WORD.
      00010  0774 00 4 00034   PWCNT AXT     BUFLEN,4      SET WORD COUNTER (INITIALLY BUFLEN.) 
      00011  0602 00 4 00105         SLW     BUFF+BUFLEN,4 STORE WORD IN BUFFER.    
      00012  2 00001 4 00016         TIX     PSAVE,4,1     COUNT, CHECK FOR OVERFLOW.     
      00013  0074 00 4 00001         TSX     WRFLXA,4      BUFFER FULL, PRINT W/O C.R.    
      00014  0 00034 0 00051                 BUFF,,BUFLEN  ..     
      00015  0774 00 4 00034  PFRESH AXT     BUFLEN,4      RESET WORD COUNTER.
      00016  0634 00 4 00010   PSAVE SXA     PWCNT,4       SAVE WORD COUNTER. 
      00017  0774 00 4 00000   PRX4  AXT     --,4          RESTORE LINKAGE.   
      00020  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
                              *      PRINT OUT REMAINING BUFFER, RESET COUNTER.     
                              *     
      00021  0634 00 4 00017  PRBUFF SXA     PRX4,4        SAVE LINKAGE.
      00022  0535 00 4 00010         LAC     PWCNT,4       GET WORD COUNT.    
      00023  1 00034 4 00024         TXI     *+1,4,BUFLEN  FORM COMPLEMENT MOD BUFLEN.    
      00024 -0634 00 4 00026         SXD     PRCL,4        SAVE COUNT IN CALLER.    
      00025  0074 00 4 00001         TSX     WRFLXA,4      PRINT REMAINDER.   
      00026  0 00000 0 00051   PRCL          BUFF,,--      ..     
      00027  0020 00 0 00015         TRA     PFRESH        GO REFRESH COUNTER, AND RETURN.
                              *     
                              *      GET A WORD FROM INPUT BUFFER.
                              *         WORD = TYWORD.(0)   
                              *     
      00030  0634 00 4 00045  TYWORD SXA     TYX4,4        SAVE LINKAGE.
      00031  0774 00 5 00000  TYCNT  AXT     --,5          GET WORD COUNTER.  
      00032  0774 00 4 00000  TYPOS  AXT     --,4          GET BUFFER POINTER.
      00033  2 00006 5 00041         TIX     TYGET,5,6     CHECK FOR WORDS LEFT.    
      00034  0074 00 4 00000         TSX     RDFLXA,4      NO, GET SOME.
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 2     
                  
      00035  0 00034 0 00051  TYCALL         BUFF,,BUFLEN  ..     
      00036  0734 00 5 00000         PAX     0,5           INSERT 6-BIT CHARACTER COUNT INTO COUNTER. 
      00037  2 40000 5 00040         TIX     *+1,5,16384   REMOVE BIT 21 IF PRESENT.
      00040  0774 00 4 00000         AXT     0,4           RESET INPUT BUFFER POINTER.    
      00041  0500 00 4 00051  TYGET  CLA     BUFF,4        GET A WORD.  
      00042  1 77777 4 00043         TXI     *+1,4,-1      MOVE POINTER TO NEXT WORD.     
      00043  0634 00 4 00032         SXA     TYPOS,4       SAVE POINTER.
      00044  0634 00 5 00031         SXA     TYCNT,5       SAVE CHARACTER COUNTER.  
      00045  0774 00 4 00000  TYX4   AXT     --,4          RESTORE LINKAGE.   
      00046  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      00047  0634 00 0 00031  TYLINE ZSA     TYCNT         RESET CHARACTER COUNT TO MAKE LINE EMPTY.  
      00050  0020 00 4 00001         TRA     1,4           RETURN 
                              *     
      00051                   BUFF   BSS     BUFLEN            OUTPUT BUFFER. 
                              *     
                                     END  
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        105 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         51   BUFF    11,   14,   26,   35,   41
         26   PRCL    24
         17   PRX4     4,    7,   21
         45   TYX4    30
         16  PSAVE    12
         10  PWCNT    16,   22
         31  TYCNT    44,   47
         41  TYGET    33
         32  TYPOS    43
         34 BUFLEN     4,   10,   11,   14,   15,   23,   35,   51
         15 PFRESH    27
         21 PRBUFF     0
          4 PRWORD     0
          0 RDFLXA    34
         35 TYCALL      
         47 TYLINE     0
         30 TYWORD     0
          1 WRFLXA    13,   25
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            SUBROUTINE TO CONVERT BCD NUMBER TO BINARY.                                         PAGE 1     
                  
                              *     
                              *        J. H. SALTZER, MAY, 1966.  
                       00002         ENTRY   BIN           CONVERTER.   
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  223145606060     
                  
      00002  0634 00 1 00024   BIN   SXA     IRR1,1   
      00003  0600 00 0 00027         STZ     INT           CLEAR RESULT.
      00004  0774 00 1 00006         AXT     6,1
      00005  0560 60 4 00001         LDQ*    1,4           GET ARGUMENT.
      00006 -0754 00 0 00000  LOP    ZAC  
      00007 -0763 00 0 00006         LGL     6             GET NEXT CHARACTER.
      00010 -0340 00 0 00032         LAS     =10           SKIP OVER NON-DIGITS.    
      00011  0020 00 0 00023         TRA     TIX
      00012  0020 00 0 00023         TRA     TIX
      00013  0601 00 0 00030         STO     DIG           NUMBER, SAVE DIGIT.
      00014 -0600 00 0 00031         STQ     TEM           SAVE MQ FOR MULTIPLIACATION.   
      00015  0560 00 0 00027         LDQ     INT           GET OLD NUMBER.    
      00016  0200 00 0 00032         MPY     =10           SHIFT. 
      00017  0131 00 0 00000         XCA  
      00020  0400 00 0 00030         ADD     DIG           ADD THIS DIGIT TO RESULT.
      00021  0601 00 0 00027         STO     INT           SAVE, FOR NEXT PASS.     
      00022  0560 00 0 00031         LDQ     TEM           RESTORE MQ.  
      00023  2 00001 1 00006  TIX    TIX     LOP,1,1  
      00024  0774 00 1 00000   IRR1  AXT     --,1     
      00025  0500 00 0 00027         CLA     INT           RESULT IN AC.
      00026  0020 00 4 00002         TRA     2,4
                              *     
      00027  0 00000 0 00000   INT  
      00030  0 00000 0 00000   DIG  
      00031  0 00000 0 00000   TEM  
                              *     
                                     END  
                  
        LITERALS  
      00032  000000000012     
1            SUBROUTINE TO CONVERT BCD NUMBER TO BINARY.                                         PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         33 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          2    BIN     0
         30    DIG    13,   20
         27    INT     3,   15,   21,   25
          6    LOP    23
         31    TEM    14,   22
         23    TIX    11,   12
         24   IRR1     2
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            LIBRARY PACKAGE.                                                                    PAGE 1     
                  
                       00024         ENTRY   .PCOMT        PRINT COMMENT ROUTINE    
                       00010         ENTRY   CHNCOM        GO DORMANT.  
                       00005         ENTRY   EXIT          SAME.  
                       00002         ENTRY   .SETUP        CALLED BY MAD MAIN PROGRA.     
                       00013         ENTRY   COMARG        GET COMMAND ARGUMENT.    
                       00106         ENTRY   WHOAMI   
                       00066         ENTRY   SETBCD   
                       00064         ENTRY   SETFUL   
                       00065         ENTRY   SETBRK   
                       00061         ENTRY   WRFLXA   
                       00063         ENTRY   WRFLX    
                       00062         ENTRY   RDFLXA   
                       00067         ENTRY   UPDATE        UPDATE U.F.D.
                       00070         ENTRY   CHFILE   
                       00071         ENTRY   DELFIL   
                       00072         ENTRY   FSTATE   
                       00073         ENTRY   BUFFER   
                       00074         ENTRY   OPEN     
                       00075         ENTRY   WRWAIT   
                       00076         ENTRY   WRFILE   
                       00077         ENTRY   RDWAIT   
                       00100         ENTRY   RDFILE   
                       00101         ENTRY   CLOSE    
                       00043         ENTRY   GETBUF        OBTAIN BUFFERS FROM SUPERVISOR.
                              *     
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  334723464463     
                  
      00002  0760 00 0 00016  .SETUP LMTM                  USE SEVEN TAG MODE.
      00003  0774 00 6 00000         AXT     0,6           SET UP IR6 TO AVOID EARLY CALL TO READ.    
      00004  0020 00 0 00064         TRA     SETFUL        USE FULL MODE.  SETFUL RETURNS 1,4.  
                              *     
      00005  0074 00 4 00066  EXIT   TSX     SETBCD,4      CLEANUP, RESET MODE.     
      00006  0074 00 4 00063         TSX     WRFLX,4       PUT OUT A STAR FOR RUNCOMS.    
      00007  0 00001 0 00060                 STAR,,1       AND THEN PERFORM CHNCOM SEQUENCE.    
      00010  0074 00 4 00102  CHNCOM TSX     CHN,4         THIS CHNCOM ALWAYS GOES DEAD,  
 TD   00011  3 00000 0 00107         TXH     =0            IF NO CHAIN EXISTS.
      00012  0020 00 0 00010         TRA     *-2           IN CASE OF RESTART, DON'T.     
                              *     
      00013  0634 00 4 00022  COMARG SXA     CM4,4         GET COMMAND ARGUMENT FOR MAD.  
      00014 -0500 60 4 00001         CAL*    1,4           GET ARGUMENT NUMBER.     
      00015  0602 00 0 00017         SLW     ARG           GIVE ARGUMENT NUMBER.    
      00016  0074 00 4 00103         TSX     GETCOM,4      GET COMMAND ARGUMENT.    
      00017  0 00000 0 00000   ARG                         ..     
      00020  0602 00 0 00017         SLW     ARG           MOVE TO ARITHMETIC AC.   
      00021  0500 00 0 00017         CLA     ARG           ..     
      00022  0774 00 4 00000   CM4   AXT     --,4          RESTORE LINKAGE.   
      00023  0020 00 4 00002         TRA     2,4           RETURN TO CALLER.  
                              *     
      00024 -0500 00 4 00001  .PCOMT CAL     1,4           GET WORD COUNT.    
      00025  0621 00 0 00042         STA     RETURN        ON RETURN, JUMP BUFFER.  
      00026  0767 00 0 00022         ALS     18            SETUP COUNT. 
      00027  0622 00 0 00036         STD     PCNT          ..     
      00030  1 77776 4 00031         TXI     *+1,4,-2      SETUP UP BUFFER ADDRESS. 
1            LIBRARY PACKAGE.                                                                    PAGE 2     
                  
      00031  0636 00 4 00036         SCA     PCNT,4        SAVE BUFFER ADDRESS, AND LINKAGE.    
      00032  0074 00 4 00064         TSX     SETFUL,4      MAKE SURE MODE SET AND NO LINES COMING IN. 
      00033  0074 00 4 00061         TSX     WRFLXA,4      SWITCH TO RED SHIFT.     
      00034  0 00001 0 00056                 REDS,,1       ..     
      00035  0074 00 4 00063         TSX     WRFLX,4       PRINT LINE.  
      00036  0 00000 0 00000   PCNT          --,,--        ..     
      00037  0074 00 4 00061         TSX     WRFLXA,4      SHIFT BACK TO BLACK.     
      00040  0 00001 0 00057                 BLCKS,,1      ..     
      00041  0535 00 4 00036         LAC     PCNT,4        RESTORE LINKAGE.   
      00042  0020 00 4 00000  RETURN TRA     --,4          RETURN TO CALLER.  
                              *     
      00043  0634 00 4 00052  GETBUF SXA     GX4,4         ENTRY TO GET BUFFERS.    
      00044  0602 00 0 00055         SLW     BUFSIZ        SIZE OF BUFFER IN AC.    
      00045  0074 00 4 00104         TSX     GETMEM,4      GET PRESENT BOUND. 
      00046  0601 00 0 00054         STO     START         SAVE AS BUFFER START.    
      00047  0361 00 0 00055         ACL     BUFSIZ        FORM NEW BOUND.    
      00050  0074 00 4 00105         TSX     SETMEM,4      ASK FOR MORE.
      00051 -0500 00 0 00054         CAL     START         GIVE CALLER LOCATION OF  
      00052  0774 00 4 00000   GX4   AXT     --,4          HIS NEW BUFFER.    
      00053  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      00054  0 00000 0 00000   START                       STORAGE FOR BUFFER LOCATION.   
      00055  0 00000 0 00000  BUFSIZ                       STORAGE FOR BUFFER SIZE. 
                              *     
      00056 +013300570057      REDS  OCT     013300570057  RED SHIFT AND TWO NULLS. 
      00057 +013200570057      BLCKS OCT     013200570057  BLACK SHIFT AND TWO NULLS.     
      00060 -145757575757     STAR   OCT     545757575757  ASTERISK AND 5 NULLS.    
                              *     
                              *              SUPERVISOR SUBROUTINE CALLERS.   
                              *     
      00061  0101 00 0 00133  WRFLXA TIA     =HWRFLXA 
      00062  0101 00 0 00122  RDFLXA TIA     =HRDFLXA 
      00063  0101 00 0 00134  WRFLX  TIA     =HWRFLX  
      00064  0101 00 0 00126  SETFUL TIA     =HSETFUL 
      00065  0101 00 0 00125  SETBRK TIA     =HSETBRK 
      00066  0101 00 0 00124  SETBCD TIA     =HSETBCD 
      00067  0101 00 0 00130  UPDATE TIA     =HUPDATE 
      00070  0101 00 0 00111  CHFILE TIA     =HCHFILE 
      00071  0101 00 0 00114  DELFIL TIA     =HDELFIL 
      00072  0101 00 0 00115  FSTATE TIA     =HFSTATE 
      00073  0101 00 0 00110  BUFFER TIA     =HBUFFER 
      00074  0101 00 0 00120  OPEN   TIA     =HOPEN   
      00075  0101 00 0 00135  WRWAIT TIA     =HWRWAIT 
      00076  0101 00 0 00132  WRFILE TIA     =HWRFILE 
      00077  0101 00 0 00123  RDWAIT TIA     =HRDWAIT 
      00100  0101 00 0 00121  RDFILE TIA     =HRDFILE 
      00101  0101 00 0 00113  CLOSE  TIA     =HCLOSE  
      00102  0101 00 0 00112  CHN    TIA     =HCHNCOM 
      00103  0101 00 0 00116  GETCOM TIA     =HGETCOM 
      00104  0101 00 0 00117  GETMEM TIA     =HGETMEM 
      00105  0101 00 0 00127  SETMEM TIA     =HSETMEM 
      00106  0101 00 0 00131  WHOAMI TIA     =HWHOAMI 
                              *     
                                     END  
1            LIBRARY PACKAGE.                                                                    PAGE 3     
                  
        LITERALS  
      00107  000000000000     
      00110  226426262551     
      00111  233026314325     
      00112  233045234644     
      00113  234346622560     
      00114  242543263143     
      00115  266263216325     
      00116  272563234644     
      00117  272563442544     
      00120  464725456060     
      00121  512426314325     
      00122  512426436721     
      00123  512466213163     
      00124  622563222324     
      00125  622563225142     
      00126  622563266443     
      00127  622563442544     
      00130  644724216325     
      00131  663046214431     
      00132  665126314325     
      00133  665126436721     
      00134  665126436760     
      00135  665166213163     
1            LIBRARY PACKAGE.                                                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        136 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         17    ARG    15,   20,   21
        102    CHN    10
         22    CM4    13
         52    GX4    43
          5   EXIT     0
         74   OPEN     0
         36   PCNT    27,   31,   41
         56   REDS    34
         60   STAR     7
         57  BLCKS    40
        101  CLOSE     0
         54  START    46,   51
         63  WRFLX     0,    6,   35
         73 BUFFER     0
         55 BUFSIZ    44,   47
         70 CHFILE     0
         10 CHNCOM     0
         13 COMARG     0
         71 DELFIL     0
         72 FSTATE     0
         43 GETBUF     0
        103 GETCOM    16
        104 GETMEM    45
         24 .PCOMT     0
          2 .SETUP     0
        100 RDFILE     0
         62 RDFLXA     0
         77 RDWAIT     0
         42 RETURN    25
         66 SETBCD     0,    5
         65 SETBRK     0
         64 SETFUL     0,    4,   32
        105 SETMEM    50
         67 UPDATE     0
        106 WHOAMI     0
         76 WRFILE     0
         61 WRFLXA     0,   33,   37
         75 WRWAIT     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




   EDL   BCD 09/18/68 2214.4   39787         00000    
1     MAD PROGRAM LISTING ... ... ...                 FILE  EDITOR   MAD            02/08/68    1745.3
-                 
                 ..  EDIT BY CONTEXT PROGRAM.                                                          LM00001    
                                                                                                       LM00002    
                 ..  J. H. SALTZER, NOVEMBER, 1964.                                                    LM00003    
                 ..  LAST MODIFICATION, APRIL, 1967.                                                   LM00004    
                 ..  MODIFIED OCTOBER, 1967 BY PETER R. BOS                                            LM00005    
                 ..  TO ALLOW SETTING BREAK CHARACTER 'MCHNG'                                          LM00006    
                                                                                                       LM00007    
                 .. DECLARATIONS.                                                                      LM00008    
                                                                                                       LM00009    
                  VECTOR VALUES FENCE = 777777777777K                                             *001 LM00010    
                  VECTOR VALUES RETURN = 55K                                                      *002 LM00011    
                  VECTOR VALUES IN = $(INPUT$                                                     *003 LM00012    
                  VECTOR VALUES IN1 = $(INPT1$                                                    *004 LM00013    
                  VECTOR VALUES BRIEF = 0B                                                        *005 LM00014    
                  VECTOR VALUES OK = 0B                                                           *006 LM00015    
                  VECTOR VALUES BUFSIZ = 360                                                      *007 LM00016    
                  DIMENSION LINE(361), EDLIN(361)                                                 *008 LM00017    
                  DIMENSION REDS(1), BLACKS(1)                                                    *009 LM00018    
                  DIMENSION ATNAM(2)                                                              *010 LM00019    
                  NORMAL MODE IS INTEGER                                                          *011 LM00020    
                  BOOLEAN OK, GLOBAL, FSTPAS                                                      *012 LM00021    
                  BOOLEAN CHNG, CLRSW, BRIEF                                                      *013 LM00022    
                                                                                                       LM00023    
      . . .      . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                           LM00024    
                                                                                                       LM00025    
                 ..  INITIALIZATION.                                                                   LM00026    
                                                                                                       LM00027    
                  SECOND NAME OF INTERMEDIATE FILES NOW PROGNO                                         LM00028    
                                                                                                       LM00029    
                  WHOAMI.(ATNAM(2)...2)                                                           *014 LM00030    
                  FI = ATNAM(1)                                                                   *015 LM00031    
                  GETVAL.(BLANK, TAB, DEFALT, MCHNG, REDS(1), BLACKS(1))                          *016 LM00032    
                  CLRNAM.(IN, FI, CHN, 1B)                                                        *017 LM00033    
                  CLRNAM.(IN1, FI, CHN, 1B)                                                       *018 LM00034    
                  ASSIGN.(IN, FI)                                                                 *019 LM00035    
                  OLDNAM = COMARG.(1)                                                             *020 LM00036    
                  OLDSEC = DEFALT                                                                 *021 LM00037    
                  WHENEVER OLDNAM .E. FENCE, TRANSFER TO INSERT                                   *022 LM00038    
                  OLDSEC = COMARG.(2)                                                             *023 LM00039    
                  WHENEVER OLDSEC .E. FENCE, OLDSEC = DEFALT                                      *024 LM00040    
                  SEEK.(OLDNAM, OLDSEC, INSERT)                                                   *025 LM00041    
                  FSTPAS = 1B                                                                     *026 LM00042    
                  OK = 1B                                                                         *027 LM00043    
                                                                                                       LM00044    
                 ..  ENTER EDIT MODE.                                                                  LM00045    
                                                                                                       LM00046    
      EDIT        WHENEVER .NOT. BRIEF, PRINT COMMENT $0E1D1I1T$                                  *028 LM00047    
                                                                                                       LM00048    
                 ..  OBTAIN NEXT REQUEST.                                                              LM00049    
                                                                                                       LM00050    
      NXRQ        COUNT = TYPEIN.(EDLIN, BUFSIZ)                                                  *029 LM00051    
                  WHENEVER EDLIN(1) .E. MCHNG .AND. COUNT .L. 3                                   *030 LM00052    
                1      , TRANSFER TO INSERT                                                       *030 LM00053    
                  WHENEVER COUNT .L. 2, TRANSFER TO NXRQ                                          *031 LM00054    
                  EDCT = 0                                                                        *032 LM00055    
                  CWD = GET.(0)                                                                   *033 LM00056    
                                                                                                       LM00057    
                  WHENEVER CWD .E. $DELETE$ .OR. CWD .E. $     D$                                 *034 LM00058    
                    N = BIN.(GET.(0))                                                             *035 LM00059    
                    THROUGH DREAD, FOR I = 1, 1, I .GE. N                                         *036 LM00060    
       DREAD          LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *037 LM00061    
                    LENGTH = 0                                                                    *038 LM00062    
                                                                                                       LM00063    
                  OR WHENEVER CWD .E. $  NEXT$ .OR. CWD .E. $     N$                              *039 LM00064    
                    N = BIN.(GET.(0))                                                             *040 LM00065    
                    WHENEVER N .E. 0, N = 1                                                       *041 LM00066    
                    THROUGH NXT, FOR I = 1, 1, I .G. N                                            *042 LM00067    
                      WRITE.(LINE, LENGTH)                                                        *043 LM00068    
                      WHENEVER .NOT. OK, CLSOUT.                                                  *044 LM00069    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *045 LM00070    
       NXT            CONTINUE                                                                    *046 LM00071    
                                                                                                       LM00072    
                  OR WHENEVER CWD .E. $INSERT$ .OR. CWD .E. $     I$                              *047 LM00073    
                    WRITE.(LINE, LENGTH)                                                          *048 LM00074    
                    TRANSFER TO RETYPE                                                            *049 LM00075    
                                                                                                       LM00076    
      INSERT        WHENEVER .NOT. BRIEF, PRINT COMMENT $0I1N1P1U1T$                              *050 LM00077    
       INPUT        COUNT = TYPEIN.(EDLIN, BUFSIZ)                                                *051 LM00078    
                    WHENEVER COUNT .L. 3 .AND. EDLIN(1) .E. MCHNG                                 *052 LM00079    
                1      , TRANSFER TO EDIT                                                         *052 LM00080    
                    WRITE.(LINE, LENGTH)                                                          *053 LM00081    
                    THROUGH MVLP, FOR I = 1, 1, I .G. COUNT                                       *054 LM00082    
       MVLP           LINE(I) = EDLIN(I)                                                          *055 LM00083    
                    LENGTH = COUNT                                                                *056 LM00084    
                    TRANSFER TO INPUT                                                             *057 LM00085    
                                                                                                       LM00086    
                  OR WHENEVER CWD .E. $BOTTOM$ .OR. CWD .E. $     B$                              *058 LM00087    
                    WRITE.(LINE, LENGTH)                                                          *059 LM00088    
                    LENGTH = 0                                                                    *060 LM00089    
                    WHENEVER OK, BOTTOM.                                                          *061 LM00090    
                    TRANSFER TO INSERT                                                            *062 LM00091    
                                                                                                       LM00092    
                  OR WHENEVER CWD .E. $APPEND$ .OR. CWD .E. $     A$                              *063 LM00093    
                    WHENEVER LENGTH .G. 0, LENGTH = LENGTH - 1                                    *064 LM00094    
                    TRANSFER TO APPEND                                                            *065 LM00095    
                                                                                                       LM00096    
                  OR WHENEVER CWD .E. $RETYPE$ .OR. CWD .E. $     R$                              *066 LM00097    
       RETYPE       LENGTH = 0                                                                    *067 LM00098    
      APPEND        THROUGH RPLC, FOR EDCT = EDCT + 1, 1, EDCT .G. COUNT                          *068 LM00099    
                      LENGTH = LENGTH + 1                                                         *069 LM00100    
       RPLC           LINE(LENGTH) = EDLIN(EDCT)                                                  *070 LM00101    
                                                                                                       LM00102    
                  OR WHENEVER CWD .E. $ ERASE$ .OR. CWD .E. $     E$                              *071 LM00103    
                    WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETERS.(EDLIN(EDCT+1))                     *072 LM00104    
                                                                                                       LM00105    
                  OR WHENEVER CWD .E. $  KILL$ .OR. CWD .E. $     K$                              *073 LM00106    
                    WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETKIL.(EDLIN(EDCT+1))                     *074 LM00107    
                                                                                                       LM00108    
                 ..  MODIFICATION ALLOWS SETTING 'MCHNG'. PRB.                                         LM00109    
                                                                                                       LM00110    
                  OR WHENEVER CWD .E. $ BREAK$ .OR. CWD .E. $    BR$                              *075 LM00111    
                    WHENEVER EDLIN(EDCT) .E. RETURN                                               *076 LM00112    
                      MCHNG = RETURN                                                              *077 LM00113    
                    OR WHENEVER EDLIN(EDCT+1) .NE. BLANK                                          *078 LM00114    
                      MCHNG = EDLIN(EDCT+1)                                                       *079 LM00115    
                    END OF CONDITIONAL                                                            *080 LM00116    
                                                                                                       LM00117    
                  OR WHENEVER CWD .E. $VERIFY$ .OR. CWD .E. $     V$                              *081 LM00118    
                    CWD = GET.(0)                                                                 *082 LM00119    
                    WHENEVER CWD .E. $    ON$                                                     *083 LM00120    
                      BRIEF = 0B                                                                  *084 LM00121    
                    OR WHENEVER CWD .E. $   OFF$                                                  *085 LM00122    
                      BRIEF = 1B                                                                  *086 LM00123    
                    END OF CONDITIONAL                                                            *087 LM00124    
                                                                                                       LM00125    
                  OR WHENEVER CWD .E. $LOCATE$ .OR. CWD .E. $     L$                              *088 LM00126    
                    LOCATE = 1                                                                    *089 LM00127    
                    TRANSFER TO FIND                                                              *090 LM00128    
                                                                                                       LM00129    
                  OR WHENEVER CWD .E. $  FIND$ .OR. CWD .E. $     F$                              *091 LM00130    
                    LOCATE = 0                                                                    *092 LM00131    
      FIND          WHENEVER EDCT+1 .GE. COUNT                                                    *093 LM00132    
                      COUNT = OCOUNT                                                              *094 LM00133    
                      EDCT = EDCT + 1                                                             *095 LM00134    
                    END OF CONDITIONAL                                                            *096 LM00135    
                    OCOUNT = COUNT                                                                *097 LM00136    
       NTFND        WRITE.(LINE, LENGTH)                                                          *098 LM00137    
                    WHENEVER  .NOT. OK, CLSOUT.                                                   *099 LM00138    
                    LENGTH = READ.(LINE, BUFSIZ, EOF)                                             *100 LM00139    
                    THROUGH LOCSCN, FOR K=0, 1,K.G.LOCATE*(LENGTH-COUNT+EDCT)                     *101 LM00140    
                      J = K                                                                       *102 LM00141    
                      THROUGH LOOK, FOR I = EDCT+1, 1, I .GE. COUNT                               *103 LM00142    
                        J = J + 1                                                                 *104 LM00143    
       TAGN             WHENEVER LINE(J) .E. EDLIN(I), TRANSFER TO LOOK                           *105 LM00144    
                        WHENEVER (LINE(J).E. TAB) .AND. (EDLIN(I) .E. BLANK)                      *106 LM00145    
                1        , TRANSFER TO LOOK                                                       *106 LM00146    
                        WHENEVER EDLIN(I-1) .NE. BLANK .OR. I .E. EDCT + 1                        *107 LM00147    
                1        , TRANSFER TO LOCSCN                                                     *107 LM00148    
                        WHENEVER LINE(J) .NE. BLANK .AND. LINE(J) .NE. TAB                        *108 LM00149    
                1        , TRANSFER TO LOCSCN                                                     *108 LM00150    
                        J = J + 1                                                                 *109 LM00151    
                        TRANSFER TO TAGN                                                          *110 LM00152    
       LOOK             WHENEVER I .E. EDCT+1, FNDST = J                                          *111 LM00153    
                      FNDND = J                                                                   *112 LM00154    
                      WHENEVER .NOT. BRIEF, PRNT.(FNDST, FNDND)                                   *113 LM00155    
                      TRANSFER TO NXRQ                                                            *114 LM00156    
        LOCSCN        CONTINUE                                                                    *115 LM00157    
                    TRANSFER TO NTFND                                                             *116 LM00158    
                                                                                                       LM00159    
                  OR WHENEVER CWD .E. $ PRINT$ .OR. CWD .E. $     P$                              *117 LM00160    
                    NPRNT = BIN.(GET.(0))                                                         *118 LM00161    
      PNTLP         WHENEVER LENGTH .E. 0                                                         *119 LM00162    
                      PRINT COMMENT $0N1O0 1C1U1R1R1E1N1T0 1L1I1N1E0.$                            *120 LM00163    
                    OTHERWISE                                                                     *121 LM00164    
                      TYPOUT.(LINE, LENGTH)                                                       *122 LM00165    
                    END OF CONDITIONAL                                                            *123 LM00166    
                    NPRNT = NPRNT - 1                                                             *124 LM00167    
                    WHENEVER NPRNT .G. 0                                                          *125 LM00168    
                      WRITE.(LINE, LENGTH)                                                        *126 LM00169    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *127 LM00170    
                      TRANSFER TO PNTLP                                                           *128 LM00171    
                    END OF CONDITIONAL                                                            *129 LM00172    
                                                                                                       LM00173    
                  OR WHENEVER CWD .E. $   TOP$ .OR. CWD .E. $     T$                              *130 LM00174    
       TOPLP        WRITE.(LINE, LENGTH)                                                          *131 LM00175    
                    WHENEVER OK, BOTTOM.                                                          *132 LM00176    
                    CLSOUT.                                                                       *133 LM00177    
                                                                                                       LM00178    
                  OR WHENEVER CWD .E. $CHANGE$ .OR. CWD .E. $     C$                              *134 LM00179    
                                                                                                       LM00180    
      . . .       . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                          LM00181    
                                                                                                       LM00182    
                 ..  DELINEATE QUOTED STRINGS.                                                         LM00183    
                                                                                                       LM00184    
                    EDCT = EDCT+1                                                                 *135 LM00185    
                    QUOTE = EDLIN(EDCT)                                                           *136 LM00186    
                    STR1 = EDCT                                                                   *137 LM00187    
      QLOOP         THROUGH QLOOP, FOR EDCT = EDCT+1, 1,                                          *138 LM00188    
                1      (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                             *138 LM00189    
                    STR2 = EDCT                                                                   *139 LM00190    
      QLOOP1        THROUGH QLOOP1, FOR EDCT = EDCT+1, 1,                                         *140 LM00191    
                1      (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                             *140 LM00192    
                    EST2 = EDCT                                                                   *141 LM00193    
                                                                                                       LM00194    
                 .. CHECK FOR ITERATION COUNT AND GLOBAL REQUEST.                                      LM00195    
                                                                                                       LM00196    
                    EDCT = EDCT + 1                                                               *142 LM00197    
                    TEM = 1                                                                       *143 LM00198    
                    GLOBAL = 0B                                                                   *144 LM00199    
      ARGLP         CWD = GET.(0)                                                                 *145 LM00200    
                    WHENEVER CWD .E. $ $                                                          *146 LM00201    
                      TRANSFER TO SHIFT                                                           *147 LM00202    
                    OR WHENEVER CWD .E. $     G$                                                  *148 LM00203    
                      WHENEVER STR2 .NE. STR1+1, GLOBAL = 1B                                      *149 LM00204    
                    OTHERWISE                                                                     *150 LM00205    
                      TEM = BIN.(CWD)                                                             *151 LM00206    
                    END OF CONDITIONAL                                                            *152 LM00207    
                    TRANSFER TO ARGLP                                                             *153 LM00208    
                                                                                                       LM00209    
                 .. SHIFT LINE TO BOTTOM OF BUFFER.                                                    LM00210    
                                                                                                       LM00211    
       SHIFT        THROUGH MVDWN, FOR I = LENGTH, -1, I .L. 1                                    *154 LM00212    
      MVDWN           LINE(BUFSIZ+I-LENGTH) = LINE(I)                                             *155 LM00213    
                    DOWN = BUFSIZ-LENGTH+1                                                        *156 LM00214    
                    UP = 0                                                                        *157 LM00215    
                    CHNG = 0B                                                                     *158 LM00216    
                    CHST = LENGTH + 1                                                             *159 LM00217    
                    CHEND = LENGTH                                                                *160 LM00218    
                                                                                                       LM00219    
                 .. SEARCH FOR PRESENCE OF FIRST STRING.                                               LM00220    
                                                                                                       LM00221    
      SRCHLP        UP = UP + 1                                                                   *161 LM00222    
      SRTST           WHENEVER DOWN .G. BUFSIZ, TRANSFER TO GIVUP                                 *162 LM00223    
                      J = DOWN                                                                    *163 LM00224    
                      THROUGH COMPAR, FOR I = STR1+1, 1, I .GE. STR2                              *164 LM00225    
                        WHENEVER J .GE. BUFSIZ, TRANSFER TO GIVUP                                 *165 LM00226    
                        WHENEVER EDLIN(I) .NE. LINE(J), TRANSFER TO NOCOMP                        *166 LM00227    
       COMPAR           J = J + 1                                                                 *167 LM00228    
                      TRANSFER TO STFND                                                           *168 LM00229    
                                                                                                       LM00230    
      NOCOMP          LINE(UP) = LINE(DOWN)                                                       *169 LM00231    
                      DOWN = DOWN + 1                                                             *170 LM00232    
                    TRANSFER TO SRCHLP                                                            *171 LM00233    
                                                                                                       LM00234    
                 .. STRING FOUND, REPLACE WITH SECOND STRING.                                          LM00235    
                                                                                                       LM00236    
      STFND         CHNG = 1B                                                                     *172 LM00237    
                    DOWN = DOWN + (STR2-STR1-1)                                                   *173 LM00238    
                    CHST = UP                                                                     *174 LM00239    
                    THROUGH REPLAC, FOR I = STR2 + 1, 1, I .GE. EST2                              *175 LM00240    
                      LINE(UP) = EDLIN(I)                                                         *176 LM00241    
                      UP = UP + 1                                                                 *177 LM00242    
       REPLAC         WHENEVER UP .G. DOWN, TRANSFER TO GIVUP                                     *178 LM00243    
                    CHEND = UP - 1                                                                *179 LM00244    
                    WHENEVER GLOBAL, TRANSFER TO SRTST                                            *180 LM00245    
                                                                                                       LM00246    
                 .. MOVE REST OF LINE BACK UP.                                                         LM00247    
                                                                                                       LM00248    
      GIVUP         THROUGH FILOUT, FOR UP = UP, 1, DOWN .G. BUFSIZ                               *181 LM00249    
                      LINE(UP) = LINE(DOWN)                                                       *182 LM00250    
      FILOUT          DOWN = DOWN + 1                                                             *183 LM00251    
                    LENGTH = UP - 1                                                               *184 LM00252    
                    TEM = TEM - 1                                                                 *185 LM00253    
                    WHENEVER .NOT. BRIEF .AND. (TEM .G. 0 .THEN. CHNG)                            *186 LM00254    
                1        , PRNT.(CHST, CHEND)                                                     *186 LM00255    
                    CANON.(LINE, LENGTH, BUFSIZ)                                                  *187 LM00256    
                    WHENEVER TEM .G. 0                                                            *188 LM00257    
                      WRITE.(LINE, LENGTH)                                                        *189 LM00258    
                      LENGTH = READ.(LINE, BUFSIZ, EOF)                                           *190 LM00259    
                      TRANSFER TO SHIFT                                                           *191 LM00260    
                    END OF CONDITIONAL                                                            *192 LM00261    
                                                                                                       LM00262    
      . . . .     . . . . . . . . . . . . . . . . . . . . . . . . . . . .                              LM00263    
                                                                                                       LM00264    
                  OR WHENEVER CWD .E. $ SPLIT$ .OR. CWD .E. $     S$                              *193 LM00265    
                    TOPNAM = GET.(0)                                                              *194 LM00266    
                    WHENEVER TOPNAM .E. $ $, TRANSFER TO NONAME                                   *195 LM00267    
                    WHENEVER TOPNAM .E. OLDNAM .AND. FSTPAS                                       *196 LM00268    
      NEWNM           PRINT COMMENT $0P1L1E1A1S1E0 1U1S1E0 1A1N1O1T1H1E1R0 1N1A                   *197 LM00269    
                1 1M1E0.$                                                                         *197 LM00270    
                      TRANSFER TO NXRQ                                                            *198 LM00271    
                    END OF CONDITIONAL                                                            *199 LM00272    
                    SECNAM = GET.(0)                                                              *200 LM00273    
                  WHENEVER SECNAM .E. $ $, SECNAM = OLDSEC                                        *201 LM00274    
                    CLRNAM.(TOPNAM, SECNAM, NEWNM, 1B)                                            *202 LM00275    
                    CLOSEW.                                                                       *203 LM00276    
                    RENAME.(IN, FI, TOPNAM, SECNAM)                                               *204 LM00277    
                    ASSIGN.(IN, FI)                                                               *205 LM00278    
                    OLDNAM = FENCE                                                                *206 LM00279    
                    TRANSFER TO TOPLP                                                             *207 LM00280    
                                                                                                       LM00281    
                  OR WHENEVER CWD .E. $  QUIT$ .OR. CWD .E. $     Q$                              *208 LM00282    
                    ENDRD.                                                                        *209 LM00283    
                    CLOSEW.                                                                       *210 LM00284    
                    DELFIL.(IN1, FI, DLQ1)                                                        *211 LM00285    
      DLQ1          DELFIL.(IN, FI, DLQ2)                                                         *212 LM00286    
      DLQ2          TRANSFER TO CHN                                                               *213 LM00287    
                                                                                                       LM00288    
                  OR WHENEVER CWD .E. $  FILE$                                                    *214 LM00289    
                    PRINAM = GET.(0)                                                              *215 LM00290    
                    CLRSW = 1B                                                                    *216 LM00291    
                    WHENEVER PRINAM .E. $ $                                                       *217 LM00292    
                      PRINAM = OLDNAM                                                             *218 LM00293    
                      SECNAM = OLDSEC                                                             *219 LM00294    
                      CLRSW = 0B                                                                  *220 LM00295    
                    OTHERWISE                                                                     *221 LM00296    
                      SECNAM = GET.(0)                                                            *222 LM00297    
                      WHENEVER SECNAM .E. $ $                                                     *223 LM00298    
                        SECNAM = OLDSEC                                                           *224 LM00299    
                      END OF CONDITIONAL                                                          *225 LM00300    
                    END OF CONDITIONAL                                                            *226 LM00301    
                    WHENEVER PRINAM .E. FENCE                                                     *227 LM00302    
      NONAME          PRINT COMMENT $0N1O0 1F1I1L1E0 1N1A1M1E0 1G1I1V1E1N0.$                      *228 LM00303    
                      TRANSFER TO NXRQ                                                            *229 LM00304    
                    END OF CONDITIONAL                                                            *230 LM00305    
                    WRITE.(LINE, LENGTH)                                                          *231 LM00306    
                    LENGTH = 0                                                                    *232 LM00307    
                    WHENEVER OK, BOTTOM.                                                          *233 LM00308    
                    CLRNAM.(PRINAM, SECNAM, NEWNM, CLRSW)                                         *234 LM00309    
                    CLOSEW.                                                                       *235 LM00310    
                    DELFIL.(IN1, FI, DL1)                                                         *236 LM00311    
      DL1           RENAME.(IN, FI, PRINAM, SECNAM)                                               *237 LM00312    
      CHN           EXIT.                                                                         *238 LM00313    
                                                                                                       LM00314    
                  OTHERWISE                                                                       *239 LM00315    
                    PRINT COMMENT $0N1O1T0 1A0 1R1E1Q1U1E1S1T0:$                                  *240 LM00316    
                    TYPOUT.(EDLIN, COUNT)                                                         *241 LM00317    
                                                                                                       LM00318    
                  END OF CONDITIONAL                                                              *242 LM00319    
                  TRANSFER TO NXRQ                                                                *243 LM00320    
                                                                                                       LM00321    
      EOF         PRINTCOMMENT $0E1N1D0 1O1F0 1F1I1L1E0 1R1E1A1C1H1E1D0 1B1Y0:$                   *244 LM00322    
                  TYPOUT.(EDLIN, COUNT)                                                           *245 LM00323    
                  LENGTH = 0                                                                      *246 LM00324    
                  OK = 0B                                                                         *247 LM00325    
                  TRANSFER TO NXRQ                                                                *248 LM00326    
                                                                                                       LM00327    
                 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                           LM00328    
                                                                                                       LM00329    
                 .. SUBROUTINES.                                                                       LM00330    
                                                                                                       LM00331    
       CLSOUT.   .. FUNCTION TO MOVE POINTER BACK TO TOP OF FILE.                                      LM00332    
                                                                                                       LM00333    
                  INTERNAL FUNCTION                                                               *249 LM00334    
                  ENTRY TO CLSOUT.                                                                *250 LM00335    
                    CLOSEW.                                                                       *251 LM00336    
                    DELFIL.(IN1, FI, DL2)                                                         *252 LM00337    
      DL2           CHFILE.(IN, FI, -0, IN1)                                                      *253 LM00338    
                    SEEK.(IN1, FI, CHN)                                                           *254 LM00339    
                    ASSIGN.(IN, FI)                                                               *255 LM00340    
                    OK = 1B                                                                       *256 LM00341    
                    LENGTH = 0                                                                    *257 LM00342    
                    FSTPAS = 0B                                                                   *258 LM00343    
                    FUNCTION RETURN                                                               *259 LM00344    
                  END OF FUNCTION                                                                 *260 LM00345    
                                                                                                       LM00346    
        GET.     .. FUNCTION TO OBTAIN ARGUMENT WORD IN HOLLERITH.                                     LM00347    
                                                                                                       LM00348    
                  INTERNAL FUNCTION                                                               *261 LM00349    
                  ENTRY TO GET.                                                                   *262 LM00350    
                    WORD = $ $                                                                    *263 LM00351    
      SCANLP        THROUGH SCANLP, FOR EDCT = EDCT, 1,                                           *264 LM00352    
                1   (EDLIN(EDCT+1).NE.BLANK) .OR. (EDCT+1.GE.COUNT)                               *264 LM00353    
       GTLP         EDCT = EDCT + 1                                                               *265 LM00354    
                    WHENEVER EDLIN(EDCT) .E. BLANK, FUNCTION RETURN WORD                          *266 LM00355    
                    WHENEVER EDLIN(EDCT) .E. TAB .OR. EDCT .GE. COUNT                             *267 LM00356    
                      EDCT = EDCT - 1                                                             *268 LM00357    
                      FUNCTION RETURN WORD                                                        *269 LM00358    
                    END OF CONDITIONAL                                                            *270 LM00359    
                    WORD = (WORD .LS. 6) .V. HOL.(EDLIN(EDCT))                                    *271 LM00360    
                    TRANSFER TO GTLP                                                              *272 LM00361    
                  END OF FUNCTION                                                                 *273 LM00362    
                                                                                                       LM00363    
       PRNT.     ..  FUNCTION TO PRINT A LINE WITH COLOR SHIFTS.                                       LM00364    
                                                                                                       LM00365    
                  INTERNAL FUNCTION(STAR, EN)                                                     *274 LM00366    
                  ENTRY TO PRNT.                                                                  *275 LM00367    
                    TYPOUT.(LINE, STAR-1)                                                         *276 LM00368    
                    TYPOUT.(REDS, 1)                                                              *277 LM00369    
                    TYPOUT.(LINE(STAR-1), EN-STAR+1)                                              *278 LM00370    
                    TYPOUT.(BLACKS, 1)                                                            *279 LM00371    
                    TYPOUT.(LINE(EN), LENGTH-EN)                                                  *280 LM00372    
                    FUNCTION RETURN                                                               *281 LM00373    
                  END OF FUNCTION                                                                 *282 LM00374    
                                                                                                       LM00375    
                  END OF PROGRAM                                                                  *283 LM00376    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   03713 TRANSFER VECTOR LENGTH  00030 PROGRAM BEGINS    01555
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      APPEND 00034   4        DLQ1   00041   4        GTLP   00047   4        NONAME 00056   4        RETYPE 00062   4  
      ARGLP  00035   4        DLQ2   00042   4        IN1    00673 A 1        NPRNT  01455   1        RPLC   00033   4  
      ATNAM  00073 A 1        DOWN   00110   1        INPUT  00050   4        N      01456   1        SCANLP 00033   4  
      BLACKS 00075 A 1        DREAD  00033   4        IN     00674 A 1        NTFND  00057   4        SECNAM 01470   1  
      BLANK  00076   1        EDCT   00111   1        INSERT 00051   4        NXRQ   00060   4        SHIFT  00063   4  
      BRIEF  00077 A 2        EDIT   00043   4        I      00675   1        NXT    00033   4        SRCHLP 00064   4  
      BUFSIZ 00100 A 1        EDLIN  00663 A 1        J      00676   1        OCOUNT 01457   1        SRTST  00065   4  
      CHEND  00101   1        EOF    00044   4        K      00677   1        OK     01460 A 2        STFND  00066   4  
      CHNG   00102   2        EST2   00664   1        LENGTH 00700   1        OLDNAM 01461   1        STR1   01471   1  
      CHN    00036   4        FENCE  00665 A 1        LINE   01452 A 1        OLDSEC 01462   1        STR2   01472   1  
      CHST   00103   1        FILOUT 00033   4        LOCATE 01453   1        PNTLP  00061   4        TAB    01473   1  
      CLRSW  00104   2        FIND   00045   4        LOCSCN 00052   4        PRINAM 01463   1        TAGN   00067   4  
      COMPAR 00033   4        FI     00666   1        LOOK   00053   4        QLOOP1 00033   4        TEM    01474   1  
      COUNT  00105   1        FNDND  00667   1        MCHNG  01454   1        QLOOP  00033   4        TOPLP  00070   4  
      CWD    00106   1        FNDST  00670   1        MVDWN  00033   4        QUOTE  01464   1        TOPNAM 01475   1  
      DEFALT 00107   1        FSTPAS 00671   2        MVLP   00033   4        REDS   01466 A 1        UP     01476   1  
      DL1    00037   4        GIVUP  00046   4        NEWNM  00054   4        REPLAC 00033   4        WORD   01477   1  
      DL2    00040   4        GLOBAL 00672   2        NOCOMP 00055   4        RETURN 01467 A 1                          
0FUNCTION DICTIONARY    
      ASSIGN 00000   1        BIN    00001   1        BOTTOM 00002   1        CANON  00003   1        CHFILE 00004   1  
      CLOSEW 00005   1        CLRNAM 00006   1        COMARG 00007   1        DELFIL 00010   1        ENDRD  00011   1  
      EXIT   00012   1        GETVAL 00013   1        HOL    00014   1        .PCOMT 00015   1        .SETUP 00016   1  
      READ   00017   1        RENAME 00020   1        SEEK   00021   1        SETERS 00022   1        SETKIL 00023   1  
      TYPEIN 00024   1        TYPOUT 00025   1        WHOAMI 00026   1        WRITE  00027   1        CLSOUT 00030   1  
      GET    00031   1        PRNT   00032   1                                                                          
0ABSOLUTE CONSTANTS     
 01504 +000000000006     01520 -206026314325     01524 -206050643163     01544 -206060606050     01553 -206247433163    
 01547 -206060606062     01536 -206060606027     01546 -206060606060     01510 +233021452725     01532 -206060606023    
 01552 -206060634647     01550 -206060606063     01517 -204751314563     01543 -206060606047     01521 -206026314524    
 01535 -206060606026     01513 -034623216325     01541 -206060606043     01525 -206060462626     01527 -206060604645    
 01554 -252551312670     01551 -206060606065     01515 -202251252142     01526 -206060602251     01522 -206042314343    
 01540 -206060606042     01516 -202551216225     01534 -206060606025     01514 -112563704725     01545 -206060606051    
 01505 +214747254524     01530 -206060606021     01506 +224663634644     01531 -206060606022     01512 +314562255163    
 01537 -206060606031     01523 -206045256763     01542 -206060606045     01511 +242543256325     01533 -206060606024    
 01500 +000000000000     01503 +000000000003     01502 +000000000002     01501 +000000000001     01507 +233000000000    
0STATEMENT DICTIONARY   
 00034 TXL -302146002133       00035 TXL -302676002673       00036 TXL -303402003401       00037 TXL -303401003374      
 00040 TXL -303460003451       00041 TXL -303301003275       00042 TXL -303302003301       00043 TXL -301645001637      
 00044 TXL -303430003416       00045 TXL -302334002327       00046 TXL -303117003105       00047 TXL -303543003540      
 00050 TXL -302026002022       00051 TXL -302022002014       00052 TXL -302506002505       00053 TXL -302475002465      
 00054 TXL -303226003214       00055 TXL -303032003026       00056 TXL -303351003340       00057 TXL -302346002343      
 00060 TXL -301651001645       00061 TXL -302527002524       00062 TXL -302133002131       00063 TXL -302734002722      
 00064 TXL -302764002761       00065 TXL -302771002764       00066 TXL -303040003036       00067 TXL -302424002416      
 00070 TXL -302575002572                                                                                                
0PROGRAM    
                 VECTOR VALUES FENCE = 777777777777K                                001  LM00010
 01555 TSX +0 07400 4 00016    00665     -3 77777 7 77777                                                               
                 VECTOR VALUES RETURN = 55K                                         002  LM00011
 01467     +0 00000 0 00055                                                                                             
                 VECTOR VALUES IN = $(INPUT$                                        003  LM00012
 00674     -3 43145 4 76463                                                                                             
                 VECTOR VALUES IN1 = $(INPT1$                                       004  LM00013
 00673     -3 43145 4 76301                                                                                             
                 VECTOR VALUES BRIEF = 0B                                           005  LM00014
 00077     +0 00000 0 00000                                                                                             
                 VECTOR VALUES OK = 0B                                              006  LM00015
 01460     +0 00000 0 00000                                                                                             
                 VECTOR VALUES BUFSIZ = 360                                         007  LM00016
 00100     +0 00000 0 00550                                                                                             
                 DIMENSION LINE(361), EDLIN(361)                                    008  LM00017
                 DIMENSION REDS(1), BLACKS(1)                                       009  LM00018
                 D'N ATNAM(2)                                                       010  LM00019
                 NORMAL MODE IS INTEGER                                             011  LM00020
                 BOOLEAN OK, GLOBAL, FSTPAS                                         012  LM00021
                 BOOLEAN CHNG, CLRSW, BRIEF                                         013  LM00022
                 WHOAMI.(ATNAM(2)...2)                                              014  LM00030
 01556 TSX +0 07400 4 00026    01557 TIX +2 01502 0 00071                                                               
                 FI = ATNAM(1)                                                      015  LM00031
 01560 CLA +0 50000 0 00072    01561 STO +0 60100 0 00666                                                               
                 GETVAL.(BLANK, TAB, DEFALT, MCHNG, REDS(1), BLACKS(1))             016  LM00032
 01562 TSX +0 07400 4 00013    01563 TXH +3 00000 0 00076    01564 TXH +3 00000 0 01473    01565 TXH +3 00000 0 00107   
 01566 TXH +3 00000 0 01454    01567 TXH +3 00000 0 01465    01570 TXH +3 00000 0 00074                                 
                 CLRNAM.(IN, FI, CHN, 1B)                                           017  LM00033
 01571 TSX +0 07400 4 00006    01572 TXH +3 00000 0 00674    01573 TXH +3 00000 0 00666    01574 TXH +3 00000 0 00036   
 01575 TXH +3 00000 0 01501                                                                                             
                 CLRNAM.(IN1, FI, CHN, 1B)                                          018  LM00034
 01576 TSX +0 07400 4 00006    01577 TXH +3 00000 0 00673    01600 TXH +3 00000 0 00666    01601 TXH +3 00000 0 00036   
 01602 TXH +3 00000 0 01501                                                                                             
                 ASSIGN.(IN, FI)                                                    019  LM00035
 01603 TSX +0 07400 4 00000    01604 TXH +3 00000 0 00674    01605 TXH +3 00000 0 00666                                 
                 OLDNAM = COMARG.(1)                                                020  LM00036
 01606 TSX +0 07400 4 00007    01607 TXH +3 00000 0 01501    01610 STO +0 60100 0 01461                                 
                 OLDSEC = DEFALT                                                    021  LM00037
 01611 CLA +0 50000 0 00107    01612 STO +0 60100 0 01462                                                               
                 WHENEVER OLDNAM .E. FENCE, TRANSFER TO INSERT                      022  LM00038
 01613 CLA +0 50000 0 01461    01614 SUB +0 40200 0 00665    01615 TNZ -0 10000 0 01617    01616 TRA +0 02000 0 00051   
                 OLDSEC = COMARG.(2)                                                023  LM00039
 01617 TSX +0 07400 4 00007    01620 TXH +3 00000 0 01502    01621 STO +0 60100 0 01462                                 
                 WHENEVER OLDSEC .E. FENCE, OLDSEC = DEFALT                         024  LM00040
 01622 CLA +0 50000 0 01462    01623 SUB +0 40200 0 00665    01624 TNZ -0 10000 0 01627    01625 CLA +0 50000 0 00107   
 01626 STO +0 60100 0 01462                                                                                             
                 SEEK.(OLDNAM, OLDSEC, INSERT)                                      025  LM00041
 01627 TSX +0 07400 4 00021    01630 TXH +3 00000 0 01461    01631 TXH +3 00000 0 01462    01632 TXH +3 00000 0 00051   
                 FSTPAS = 1B                                                        026  LM00042
 01633 CLA +0 50000 0 01501    01634 STO +0 60100 0 00671                                                               
                 OK = 1B                                                            027  LM00043
 01635 CLA +0 50000 0 01501    01636 STO +0 60100 0 01460                                                               
      EDIT       WHENEVER .NOT. BRIEF, PRINT COMMENT $0E1D1I1T$                     028  LM00047
 01637 ZET +0 52000 0 00077    01640 TRA +0 02000 0 01645    01641 TSX +0 07400 4 00015    01642     +0 00000 0 00002   
 01643     +0 02501 2 40131    01644     +0 16360 6 06060                                                               
      NXRQ       COUNT = TYPEIN.(EDLIN, BUFSIZ)                                     029  LM00051
 01645 TSX +0 07400 4 00024    01646 TXH +3 00000 0 00663    01647 TXH +3 00000 0 00100    01650 STO +0 60100 0 00105   
                 WHENEVER EDLIN(1) .E. MCHNG .AND. COUNT .L. 3                      030  LM00052
                1     , TRANSFER TO INSERT                                          030  LM00053
 01651 CLA +0 50000 0 00105    01652 SUB +0 40200 0 01503    01653 TZE +0 10000 0 01661    01654 TPL +0 12000 0 01661   
 01655 CLA +0 50000 0 00662    01656 SUB +0 40200 0 01454    01657 TNZ -0 10000 0 01661    01660 TRA +0 02000 0 00051   
                 WHENEVER COUNT .L. 2, TRANSFER TO NXRQ                             031  LM00054
 01661 CLA +0 50000 0 00105    01662 SUB +0 40200 0 01502    01663 TZE +0 10000 0 01666    01664 TPL +0 12000 0 01666   
 01665 TRA +0 02000 0 00060                                                                                             
                 EDCT = 0                                                           032  LM00055
 01666 CLA +0 50000 0 01500    01667 STO +0 60100 0 00111                                                               
                 CWD = GET.(0)                                                      033  LM00056
 01670 TSX +0 07400 4 00031    01671 TXH +3 00000 0 01500    01672 STO +0 60100 0 00106                                 
                 WHENEVER CWD .E. $DELETE$ .OR. CWD .E. $     D$                    034  LM00058
 01673 CLA +0 50000 0 00106    01674 SUB +0 40200 0 01533    01675 TZE +0 10000 0 01701    01676 CLA +0 50000 0 00106   
 01677 SUB +0 40200 0 01511    01700 TNZ -0 10000 0 01732                                                               
                   N = BIN.(GET.(0))                                                035  LM00059
 01701 TSX +0 07400 4 00031    01702 TXH +3 00000 0 01500    01703 STO +0 60100 0 03710    01704 TSX +0 07400 4 00001   
 01705 TXH +3 00000 0 03710    01706 STO +0 60100 0 01456                                                               
                   THROUGH DREAD, FOR I = 1, 1, I .GE. N                            036  LM00060
 01707 CLA +0 50000 0 01501    01710 STO +0 60100 0 00675    01711 TRA +0 02000 0 01715    01712 CLA +0 50000 0 00675   
 01713 ADD +0 40000 0 01501    01714 STO +0 60100 0 00675    01715 CLA +0 50000 0 00675    01716 SUB +0 40200 0 01456   
 01717 TZE +0 10000 0 01727    01720 TPL +0 12000 0 01727                                                               
       DREAD         LENGTH = READ.(LINE, BUFSIZ, EOF)                              037  LM00061
 01721 TSX +0 07400 4 00017    01722 TXH +3 00000 0 01452    01723 TXH +3 00000 0 00100    01724 TXH +3 00000 0 00044   
 01725 STO +0 60100 0 00700    01726 TRA +0 02000 0 01712                                                               
                   LENGTH = 0                                                       038  LM00062
 01727 CLA +0 50000 0 01500    01730 STO +0 60100 0 00700                                                               
                 OR WHENEVER CWD .E. $  NEXT$ .OR. CWD .E. $     N$                 039  LM00064
 01731 TRA +0 02000 0 03415    01732 CLA +0 50000 0 00106    01733 SUB +0 40200 0 01542    01734 TZE +0 10000 0 01740   
 01735 CLA +0 50000 0 00106    01736 SUB +0 40200 0 01523    01737 TNZ -0 10000 0 02002                                 
                   N = BIN.(GET.(0))                                                040  LM00065
 01740 TSX +0 07400 4 00031    01741 TXH +3 00000 0 01500    01742 STO +0 60100 0 03710    01743 TSX +0 07400 4 00001   
 01744 TXH +3 00000 0 03710    01745 STO +0 60100 0 01456                                                               
                   WHENEVER N .E. 0, N = 1                                          041  LM00066
 01746 CLA +0 50000 0 01456    01747 SUB +0 40200 0 01500    01750 TNZ -0 10000 0 01753    01751 CLA +0 50000 0 01501   
 01752 STO +0 60100 0 01456                                                                                             
                   THROUGH NXT, FOR I = 1, 1, I .G. N                               042  LM00067
 01753 CLA +0 50000 0 01501    01754 STO +0 60100 0 00675    01755 TRA +0 02000 0 01761    01756 CLA +0 50000 0 00675   
 01757 ADD +0 40000 0 01501    01760 STO +0 60100 0 00675    01761 CLA +0 50000 0 00675    01762 SUB +0 40200 0 01456   
 01763 TZE +0 10000 0 01765    01764 TPL +0 12000 0 02001                                                               
                     WRITE.(LINE, LENGTH)                                           043  LM00068
 01765 TSX +0 07400 4 00027    01766 TXH +3 00000 0 01452    01767 TXH +3 00000 0 00700                                 
                     WHENEVER .NOT. OK, CLSOUT.                                     044  LM00069
 01770 ZET +0 52000 0 01460    01771 TRA +0 02000 0 01773    01772 TSX +0 07400 4 00030                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              045  LM00070
 01773 TSX +0 07400 4 00017    01774 TXH +3 00000 0 01452    01775 TXH +3 00000 0 00100    01776 TXH +3 00000 0 00044   
 01777 STO +0 60100 0 00700                                                                                             
       NXT           CONTINUE                                                       046  LM00071
 02000 TRA +0 02000 0 01756                                                                                             
                 OR WHENEVER CWD .E. $INSERT$ .OR. CWD .E. $     I$                 047  LM00073
 02001 TRA +0 02000 0 03415    02002 CLA +0 50000 0 00106    02003 SUB +0 40200 0 01537    02004 TZE +0 10000 0 02010   
 02005 CLA +0 50000 0 00106    02006 SUB +0 40200 0 01512    02007 TNZ -0 10000 0 02064                                 
                   WRITE.(LINE, LENGTH)                                             048  LM00074
 02010 TSX +0 07400 4 00027    02011 TXH +3 00000 0 01452    02012 TXH +3 00000 0 00700                                 
                   TRANSFER TO RETYPE                                               049  LM00075
 02013 TRA +0 02000 0 00062                                                                                             
      INSERT       WHENEVER .NOT. BRIEF, PRINT COMMENT $0I1N1P1U1T$                 050  LM00077
 02014 ZET +0 52000 0 00077    02015 TRA +0 02000 0 02022    02016 TSX +0 07400 4 00015    02017     +0 00000 0 00002   
 02020     +0 03101 4 50147    02021     +0 16401 6 36060                                                               
       INPUT       COUNT = TYPEIN.(EDLIN, BUFSIZ)                                   051  LM00078
 02022 TSX +0 07400 4 00024    02023 TXH +3 00000 0 00663    02024 TXH +3 00000 0 00100    02025 STO +0 60100 0 00105   
                   WHENEVER COUNT .L. 3 .AND. EDLIN(1) .E. MCHNG                    052  LM00079
                1     , TRANSFER TO EDIT                                            052  LM00080
 02026 CLA +0 50000 0 00662    02027 SUB +0 40200 0 01454    02030 TNZ -0 10000 0 02036    02031 CLA +0 50000 0 00105   
 02032 SUB +0 40200 0 01503    02033 TZE +0 10000 0 02036    02034 TPL +0 12000 0 02036    02035 TRA +0 02000 0 00043   
                   WRITE.(LINE, LENGTH)                                             053  LM00081
 02036 TSX +0 07400 4 00027    02037 TXH +3 00000 0 01452    02040 TXH +3 00000 0 00700                                 
                   THROUGH MVLP, FOR I = 1, 1, I .G. COUNT                          054  LM00082
 02041 CLA +0 50000 0 01501    02042 STO +0 60100 0 00675    02043 TRA +0 02000 0 02047    02044 CLA +0 50000 0 00675   
 02045 ADD +0 40000 0 01501    02046 STO +0 60100 0 00675    02047 CLA +0 50000 0 00675    02050 SUB +0 40200 0 00105   
 02051 TZE +0 10000 0 02053    02052 TPL +0 12000 0 02060                                                               
       MVLP          LINE(I) = EDLIN(I)                                             055  LM00083
 02053 LXA +0 53400 1 00675    02054 LXA +0 53400 2 00675    02055 CLA +0 50000 2 00663    02056 STO +0 60100 1 01452   
 02057 TRA +0 02000 0 02044                                                                                             
                   LENGTH = COUNT                                                   056  LM00084
 02060 CLA +0 50000 0 00105    02061 STO +0 60100 0 00700                                                               
                   TRANSFER TO INPUT                                                057  LM00085
 02062 TRA +0 02000 0 00050                                                                                             
                 OR WHENEVER CWD .E. $BOTTOM$ .OR. CWD .E. $     B$                 058  LM00087
 02063 TRA +0 02000 0 03415    02064 CLA +0 50000 0 00106    02065 SUB +0 40200 0 01531    02066 TZE +0 10000 0 02072   
 02067 CLA +0 50000 0 00106    02070 SUB +0 40200 0 01506    02071 TNZ -0 10000 0 02104                                 
                   WRITE.(LINE, LENGTH)                                             059  LM00088
 02072 TSX +0 07400 4 00027    02073 TXH +3 00000 0 01452    02074 TXH +3 00000 0 00700                                 
                   LENGTH = 0                                                       060  LM00089
 02075 CLA +0 50000 0 01500    02076 STO +0 60100 0 00700                                                               
                   WHENEVER OK, BOTTOM.                                             061  LM00090
 02077 NZT -0 52000 0 01460    02100 TRA +0 02000 0 02102    02101 TSX +0 07400 4 00002                                 
                   TRANSFER TO INSERT                                               062  LM00091
 02102 TRA +0 02000 0 00051                                                                                             
                 OR WHENEVER CWD .E. $APPEND$ .OR. CWD .E. $     A$                 063  LM00093
 02103 TRA +0 02000 0 03415    02104 CLA +0 50000 0 00106    02105 SUB +0 40200 0 01530    02106 TZE +0 10000 0 02112   
 02107 CLA +0 50000 0 00106    02110 SUB +0 40200 0 01505    02111 TNZ -0 10000 0 02123                                 
                   WHENEVER LENGTH .G. 0, LENGTH = LENGTH - 1                       064  LM00094
 02112 CLA +0 50000 0 00700    02113 SUB +0 40200 0 01500    02114 TZE +0 10000 0 02121    02115 TMI -0 12000 0 02121   
 02116 CLA +0 50000 0 00700    02117 SUB +0 40200 0 01501    02120 STO +0 60100 0 00700                                 
                   TRANSFER TO APPEND                                               065  LM00095
 02121 TRA +0 02000 0 00034                                                                                             
                 OR WHENEVER CWD .E. $RETYPE$ .OR. CWD .E. $     R$                 066  LM00097
 02122 TRA +0 02000 0 03415    02123 CLA +0 50000 0 00106    02124 SUB +0 40200 0 01545    02125 TZE +0 10000 0 02131   
 02126 CLA +0 50000 0 00106    02127 SUB +0 40200 0 01514    02130 TNZ -0 10000 0 02157                                 
       RETYPE      LENGTH = 0                                                       067  LM00098
 02131 CLA +0 50000 0 01500    02132 STO +0 60100 0 00700                                                               
      APPEND       THROUGH RPLC, FOR EDCT = EDCT + 1, 1, EDCT .G. COUNT             068  LM00099
 02133 CLA +0 50000 0 00111    02134 ADD +0 40000 0 01501    02135 STO +0 60100 0 00111    02136 TRA +0 02000 0 02142   
 02137 CLA +0 50000 0 00111    02140 ADD +0 40000 0 01501    02141 STO +0 60100 0 00111    02142 CLA +0 50000 0 00111   
 02143 SUB +0 40200 0 00105    02144 TZE +0 10000 0 02146    02145 TPL +0 12000 0 02156                                 
                     LENGTH = LENGTH + 1                                            069  LM00100
 02146 CLA +0 50000 0 00700    02147 ADD +0 40000 0 01501    02150 STO +0 60100 0 00700                                 
       RPLC          LINE(LENGTH) = EDLIN(EDCT)                                     070  LM00101
 02151 LXA +0 53400 1 00700    02152 LXA +0 53400 2 00111    02153 CLA +0 50000 2 00663    02154 STO +0 60100 1 01452   
 02155 TRA +0 02000 0 02137                                                                                             
                 OR WHENEVER CWD .E. $ ERASE$ .OR. CWD .E. $     E$                 071  LM00103
 02156 TRA +0 02000 0 03415    02157 CLA +0 50000 0 00106    02160 SUB +0 40200 0 01534    02161 TZE +0 10000 0 02165   
 02162 CLA +0 50000 0 00106    02163 SUB +0 40200 0 01516    02164 TNZ -0 10000 0 02203                                 
                   WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETERS.(EDLIN(EDCT+1))        072  LM00104
 02165 CLA +0 50000 0 00111    02166 ADD +0 40000 0 01501    02167 PAX +0 73400 1 00000    02170 CLA +0 50000 1 00663   
 02171 SUB +0 40200 0 00076    02172 TZE +0 10000 0 02202    02173 CLA +0 50000 0 00111    02174 ADD +0 40000 0 01501   
 02175 SUB +0 40200 0 02176    02176 TXH +3 00000 0 00663    02177 STA +0 62100 0 02201    02200 TSX +0 07400 4 00022   
 02201 TXH +3 00000 0 00000                                                                                             
                 OR WHENEVER CWD .E. $  KILL$ .OR. CWD .E. $     K$                 073  LM00106
 02202 TRA +0 02000 0 03415    02203 CLA +0 50000 0 00106    02204 SUB +0 40200 0 01540    02205 TZE +0 10000 0 02211   
 02206 CLA +0 50000 0 00106    02207 SUB +0 40200 0 01522    02210 TNZ -0 10000 0 02227                                 
                   WHENEVER EDLIN(EDCT+1) .NE. BLANK, SETKIL.(EDLIN(EDCT+1))        074  LM00107
 02211 CLA +0 50000 0 00111    02212 ADD +0 40000 0 01501    02213 PAX +0 73400 1 00000    02214 CLA +0 50000 1 00663   
 02215 SUB +0 40200 0 00076    02216 TZE +0 10000 0 02226    02217 CLA +0 50000 0 00111    02220 ADD +0 40000 0 01501   
 02221 SUB +0 40200 0 02222    02222 TXH +3 00000 0 00663    02223 STA +0 62100 0 02225    02224 TSX +0 07400 4 00023   
 02225 TXH +3 00000 0 00000                                                                                             
                 OR WHENEVER CWD .E. $ BREAK$ .OR. CWD .E. $    BR$                 075  LM00111
 02226 TRA +0 02000 0 03415    02227 CLA +0 50000 0 00106    02230 SUB +0 40200 0 01526    02231 TZE +0 10000 0 02235   
 02232 CLA +0 50000 0 00106    02233 SUB +0 40200 0 01515    02234 TNZ -0 10000 0 02260                                 
                   WHENEVER EDLIN(EDCT) .E. RETURN                                  076  LM00112
 02235 LXA +0 53400 1 00111    02236 CLA +0 50000 1 00663    02237 SUB +0 40200 0 01467    02240 TNZ -0 10000 0 02244   
                     MCHNG = RETURN                                                 077  LM00113
 02241 CLA +0 50000 0 01467    02242 STO +0 60100 0 01454                                                               
                   OR WHENEVER EDLIN(EDCT+1) .NE. BLANK                             078  LM00114
 02243 TRA +0 02000 0 02257    02244 CLA +0 50000 0 00111    02245 ADD +0 40000 0 01501    02246 PAX +0 73400 1 00000   
 02247 CLA +0 50000 1 00663    02250 SUB +0 40200 0 00076    02251 TZE +0 10000 0 02257                                 
                     MCHNG = EDLIN(EDCT+1)                                          079  LM00115
 02252 CLA +0 50000 0 00111    02253 ADD +0 40000 0 01501    02254 PAX +0 73400 2 00000    02255 CLA +0 50000 2 00663   
 02256 STO +0 60100 0 01454                                                                                             
                   END OF CONDITIONAL                                               080  LM00116
                 OR WHENEVER CWD .E. $VERIFY$ .OR. CWD .E. $     V$                 081  LM00118
 02257 TRA +0 02000 0 03415    02260 CLA +0 50000 0 00106    02261 SUB +0 40200 0 01551    02262 TZE +0 10000 0 02266   
 02263 CLA +0 50000 0 00106    02264 SUB +0 40200 0 01554    02265 TNZ -0 10000 0 02305                                 
                   CWD = GET.(0)                                                    082  LM00119
 02266 TSX +0 07400 4 00031    02267 TXH +3 00000 0 01500    02270 STO +0 60100 0 00106                                 
                   WHENEVER CWD .E. $    ON$                                        083  LM00120
 02271 CLA +0 50000 0 00106    02272 SUB +0 40200 0 01527    02273 TNZ -0 10000 0 02277                                 
                     BRIEF = 0B                                                     084  LM00121
 02274 CLA +0 50000 0 01500    02275 STO +0 60100 0 00077                                                               
                   OR WHENEVER CWD .E. $   OFF$                                     085  LM00122
 02276 TRA +0 02000 0 02304    02277 CLA +0 50000 0 00106    02300 SUB +0 40200 0 01525    02301 TNZ -0 10000 0 02304   
                     BRIEF = 1B                                                     086  LM00123
 02302 CLA +0 50000 0 01501    02303 STO +0 60100 0 00077                                                               
                   END OF CONDITIONAL                                               087  LM00124
                 OR WHENEVER CWD .E. $LOCATE$ .OR. CWD .E. $     L$                 088  LM00126
 02304 TRA +0 02000 0 03415    02305 CLA +0 50000 0 00106    02306 SUB +0 40200 0 01541    02307 TZE +0 10000 0 02313   
 02310 CLA +0 50000 0 00106    02311 SUB +0 40200 0 01513    02312 TNZ -0 10000 0 02317                                 
                   LOCATE = 1                                                       089  LM00127
 02313 CLA +0 50000 0 01501    02314 STO +0 60100 0 01453                                                               
                   TRANSFER TO FIND                                                 090  LM00128
 02315 TRA +0 02000 0 00045                                                                                             
                 OR WHENEVER CWD .E. $  FIND$ .OR. CWD .E. $     F$                 091  LM00130
 02316 TRA +0 02000 0 03415    02317 CLA +0 50000 0 00106    02320 SUB +0 40200 0 01535    02321 TZE +0 10000 0 02325   
 02322 CLA +0 50000 0 00106    02323 SUB +0 40200 0 01521    02324 TNZ -0 10000 0 02510                                 
                   LOCATE = 0                                                       092  LM00131
 02325 CLA +0 50000 0 01500    02326 STO +0 60100 0 01453                                                               
      FIND         WHENEVER EDCT+1 .GE. COUNT                                       093  LM00132
 02327 CLA +0 50000 0 00111    02330 ADD +0 40000 0 01501    02331 SUB +0 40200 0 00105    02332 TZE +0 10000 0 02334   
 02333 TMI -0 12000 0 02341                                                                                             
                     COUNT = OCOUNT                                                 094  LM00133
 02334 CLA +0 50000 0 01457    02335 STO +0 60100 0 00105                                                               
                     EDCT = EDCT + 1                                                095  LM00134
 02336 CLA +0 50000 0 00111    02337 ADD +0 40000 0 01501    02340 STO +0 60100 0 00111                                 
                   END OF CONDITIONAL                                               096  LM00135
                   OCOUNT = COUNT                                                   097  LM00136
 02341 CLA +0 50000 0 00105    02342 STO +0 60100 0 01457                                                               
       NTFND       WRITE.(LINE, LENGTH)                                             098  LM00137
 02343 TSX +0 07400 4 00027    02344 TXH +3 00000 0 01452    02345 TXH +3 00000 0 00700                                 
                   WHENEVER  .NOT. OK, CLSOUT.                                      099  LM00138
 02346 ZET +0 52000 0 01460    02347 TRA +0 02000 0 02351    02350 TSX +0 07400 4 00030                                 
                   LENGTH = READ.(LINE, BUFSIZ, EOF)                                100  LM00139
 02351 TSX +0 07400 4 00017    02352 TXH +3 00000 0 01452    02353 TXH +3 00000 0 00100    02354 TXH +3 00000 0 00044   
 02355 STO +0 60100 0 00700                                                                                             
                   THROUGH LOCSCN, FOR K=0, 1,K.G.LOCATE*(LENGTH-COUNT+EDCT)        101  LM00140
 02356 CLA +0 50000 0 01500    02357 STO +0 60100 0 00677    02360 TRA +0 02000 0 02364    02361 CLA +0 50000 0 00677   
 02362 ADD +0 40000 0 01501    02363 STO +0 60100 0 00677    02364 CLA +0 50000 0 00700    02365 SUB +0 40200 0 00105   
 02366 ADD +0 40000 0 00111    02367 XCA +0 13100 0 00000    02370 MPY +0 20000 0 01453    02371 XCA +0 13100 0 00000   
 02372 CHS +0 76000 0 00002    02373 ADD +0 40000 0 00677    02374 TZE +0 10000 0 02376    02375 TPL +0 12000 0 02506   
                     J = K                                                          102  LM00141
 02376 CLA +0 50000 0 00677    02377 STO +0 60100 0 00676                                                               
                     THROUGH LOOK, FOR I = EDCT+1, 1, I .GE. COUNT                  103  LM00142
 02400 CLA +0 50000 0 00111    02401 ADD +0 40000 0 01501    02402 STO +0 60100 0 00675    02403 TRA +0 02000 0 02407   
 02404 CLA +0 50000 0 00675    02405 ADD +0 40000 0 01501    02406 STO +0 60100 0 00675    02407 CLA +0 50000 0 00675   
 02410 SUB +0 40200 0 00105    02411 TZE +0 10000 0 02475    02412 TPL +0 12000 0 02475                                 
                       J = J + 1                                                    104  LM00143
 02413 CLA +0 50000 0 00676    02414 ADD +0 40000 0 01501    02415 STO +0 60100 0 00676                                 
       TAGN            WHENEVER LINE(J) .E. EDLIN(I), TRANSFER TO LOOK              105  LM00144
 02416 LXA +0 53400 1 00676    02417 LXA +0 53400 2 00675    02420 CLA +0 50000 1 01452    02421 SUB +0 40200 2 00663   
 02422 TNZ -0 10000 0 02424    02423 TRA +0 02000 0 00053                                                               
                       WHENEVER (LINE(J).E. TAB) .AND. (EDLIN(I) .E. BLANK)         106  LM00145
                1       , TRANSFER TO LOOK                                          106  LM00146
 02424 LXA +0 53400 1 00675    02425 CLA +0 50000 1 00663    02426 SUB +0 40200 0 00076    02427 TNZ -0 10000 0 02435   
 02430 LXA +0 53400 1 00676    02431 CLA +0 50000 1 01452    02432 SUB +0 40200 0 01473    02433 TNZ -0 10000 0 02435   
 02434 TRA +0 02000 0 00053                                                                                             
                       WHENEVER EDLIN(I-1) .NE. BLANK .OR. I .E. EDCT + 1           107  LM00147
                1       , TRANSFER TO LOCSCN                                        107  LM00148
 02435 CLA +0 50000 0 00111    02436 ADD +0 40000 0 01501    02437 CHS +0 76000 0 00002    02440 ADD +0 40000 0 00675   
 02441 TZE +0 10000 0 02450    02442 CLA +0 50000 0 00675    02443 SUB +0 40200 0 01501    02444 PAX +0 73400 1 00000   
 02445 CLA +0 50000 1 00663    02446 SUB +0 40200 0 00076    02447 TZE +0 10000 0 02451    02450 TRA +0 02000 0 00052   
                       WHENEVER LINE(J) .NE. BLANK .AND. LINE(J) .NE. TAB           108  LM00149
                1       , TRANSFER TO LOCSCN                                        108  LM00150
 02451 LXA +0 53400 1 00676    02452 CLA +0 50000 1 01452    02453 SUB +0 40200 0 01473    02454 TZE +0 10000 0 02461   
 02455 CLA +0 50000 1 01452    02456 SUB +0 40200 0 00076    02457 TZE +0 10000 0 02461    02460 TRA +0 02000 0 00052   
                       J = J + 1                                                    109  LM00151
 02461 CLA +0 50000 0 00676    02462 ADD +0 40000 0 01501    02463 STO +0 60100 0 00676                                 
                       TRANSFER TO TAGN                                             110  LM00152
 02464 TRA +0 02000 0 00067                                                                                             
       LOOK            WHENEVER I .E. EDCT+1, FNDST = J                             111  LM00153
 02465 CLA +0 50000 0 00111    02466 ADD +0 40000 0 01501    02467 CHS +0 76000 0 00002    02470 ADD +0 40000 0 00675   
 02471 TNZ -0 10000 0 02474    02472 CLA +0 50000 0 00676    02473 STO +0 60100 0 00670    02474 TRA +0 02000 0 02404   
                     FNDND = J                                                      112  LM00154
 02475 CLA +0 50000 0 00676    02476 STO +0 60100 0 00667                                                               
                     WHENEVER .NOT. BRIEF, PRNT.(FNDST, FNDND)                      113  LM00155
 02477 ZET +0 52000 0 00077    02500 TRA +0 02000 0 02504    02501 TSX +0 07400 4 00032    02502 TXH +3 00000 0 00670   
 02503 TXH +3 00000 0 00667                                                                                             
                     TRANSFER TO NXRQ                                               114  LM00156
 02504 TRA +0 02000 0 00060                                                                                             
        LOCSCN       CONTINUE                                                       115  LM00157
 02505 TRA +0 02000 0 02361                                                                                             
                   TRANSFER TO NTFND                                                116  LM00158
 02506 TRA +0 02000 0 00057                                                                                             
                 OR WHENEVER CWD .E. $ PRINT$ .OR. CWD .E. $     P$                 117  LM00160
 02507 TRA +0 02000 0 03415    02510 CLA +0 50000 0 00106    02511 SUB +0 40200 0 01543    02512 TZE +0 10000 0 02516   
 02513 CLA +0 50000 0 00106    02514 SUB +0 40200 0 01517    02515 TNZ -0 10000 0 02564                                 
                   NPRNT = BIN.(GET.(0))                                            118  LM00161
 02516 TSX +0 07400 4 00031    02517 TXH +3 00000 0 01500    02520 STO +0 60100 0 03710    02521 TSX +0 07400 4 00001   
 02522 TXH +3 00000 0 03710    02523 STO +0 60100 0 01455                                                               
      PNTLP        WHENEVER LENGTH .E. 0                                            119  LM00162
 02524 CLA +0 50000 0 00700    02525 SUB +0 40200 0 01500    02526 TNZ -0 10000 0 02540                                 
                     PRINT COMMENT $0N1O0 1C1U1R1R1E1N1T0 1L1I1N1E0.$               120  LM00163
 02527 TSX +0 07400 4 00015    02530     +0 00000 0 00006    02531     +0 04501 4 60060    02532     +0 12301 6 40151   
 02533     +0 15101 2 50145    02534     +0 16300 6 00143    02535     +0 13101 4 50125    02536     +0 03360 6 06060   
                   OTHERWISE                                                        121  LM00164
 02537 TRA +0 02000 0 02543                                                                                             
                     TYPOUT.(LINE, LENGTH)                                          122  LM00165
 02540 TSX +0 07400 4 00025    02541 TXH +3 00000 0 01452    02542 TXH +3 00000 0 00700                                 
                   END OF CONDITIONAL                                               123  LM00166
                   NPRNT = NPRNT - 1                                                124  LM00167
 02543 CLA +0 50000 0 01455    02544 SUB +0 40200 0 01501    02545 STO +0 60100 0 01455                                 
                   WHENEVER NPRNT .G. 0                                             125  LM00168
 02546 CLA +0 50000 0 01455    02547 SUB +0 40200 0 01500    02550 TZE +0 10000 0 02563    02551 TMI -0 12000 0 02563   
                     WRITE.(LINE, LENGTH)                                           126  LM00169
 02552 TSX +0 07400 4 00027    02553 TXH +3 00000 0 01452    02554 TXH +3 00000 0 00700                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              127  LM00170
 02555 TSX +0 07400 4 00017    02556 TXH +3 00000 0 01452    02557 TXH +3 00000 0 00100    02560 TXH +3 00000 0 00044   
 02561 STO +0 60100 0 00700                                                                                             
                     TRANSFER TO PNTLP                                              128  LM00171
 02562 TRA +0 02000 0 00061                                                                                             
                   END OF CONDITIONAL                                               129  LM00172
                 OR WHENEVER CWD .E. $   TOP$ .OR. CWD .E. $     T$                 130  LM00174
 02563 TRA +0 02000 0 03415    02564 CLA +0 50000 0 00106    02565 SUB +0 40200 0 01550    02566 TZE +0 10000 0 02572   
 02567 CLA +0 50000 0 00106    02570 SUB +0 40200 0 01552    02571 TNZ -0 10000 0 02602                                 
       TOPLP       WRITE.(LINE, LENGTH)                                             131  LM00175
 02572 TSX +0 07400 4 00027    02573 TXH +3 00000 0 01452    02574 TXH +3 00000 0 00700                                 
                   WHENEVER OK, BOTTOM.                                             132  LM00176
 02575 NZT -0 52000 0 01460    02576 TRA +0 02000 0 02600    02577 TSX +0 07400 4 00002                                 
                   CLSOUT.                                                          133  LM00177
 02600 TSX +0 07400 4 00030                                                                                             
                 OR WHENEVER CWD .E. $CHANGE$ .OR. CWD .E. $     C$                 134  LM00179
 02601 TRA +0 02000 0 03415    02602 CLA +0 50000 0 00106    02603 SUB +0 40200 0 01532    02604 TZE +0 10000 0 02610   
 02605 CLA +0 50000 0 00106    02606 SUB +0 40200 0 01510    02607 TNZ -0 10000 0 03172                                 
                   EDCT = EDCT+1                                                    135  LM00185
 02610 CLA +0 50000 0 00111    02611 ADD +0 40000 0 01501    02612 STO +0 60100 0 00111                                 
                   QUOTE = EDLIN(EDCT)                                              136  LM00186
 02613 LXA +0 53400 2 00111    02614 CLA +0 50000 2 00663    02615 STO +0 60100 0 01464                                 
                   STR1 = EDCT                                                      137  LM00187
 02616 CLA +0 50000 0 00111    02617 STO +0 60100 0 01471                                                               
      QLOOP        THROUGH QLOOP, FOR EDCT = EDCT+1, 1,                             138  LM00188
                1     (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                138  LM00189
 02620 CLA +0 50000 0 00111    02621 ADD +0 40000 0 01501    02622 STO +0 60100 0 00111    02623 TRA +0 02000 0 02627   
 02624 CLA +0 50000 0 00111    02625 ADD +0 40000 0 01501    02626 STO +0 60100 0 00111    02627 CLA +0 50000 0 00111   
 02630 SUB +0 40200 0 00105    02631 TZE +0 10000 0 02640    02632 TPL +0 12000 0 02640    02633 LXA +0 53400 1 00111   
 02634 CLA +0 50000 1 00663    02635 SUB +0 40200 0 01464    02636 TZE +0 10000 0 02640    02637 TRA +0 02000 0 02624   
                   STR2 = EDCT                                                      139  LM00190
 02640 CLA +0 50000 0 00111    02641 STO +0 60100 0 01472                                                               
      QLOOP1       THROUGH QLOOP1, FOR EDCT = EDCT+1, 1,                            140  LM00191
                1     (EDLIN(EDCT) .E. QUOTE) .OR. (EDCT .GE. COUNT)                140  LM00192
 02642 CLA +0 50000 0 00111    02643 ADD +0 40000 0 01501    02644 STO +0 60100 0 00111    02645 TRA +0 02000 0 02651   
 02646 CLA +0 50000 0 00111    02647 ADD +0 40000 0 01501    02650 STO +0 60100 0 00111    02651 CLA +0 50000 0 00111   
 02652 SUB +0 40200 0 00105    02653 TZE +0 10000 0 02662    02654 TPL +0 12000 0 02662    02655 LXA +0 53400 1 00111   
 02656 CLA +0 50000 1 00663    02657 SUB +0 40200 0 01464    02660 TZE +0 10000 0 02662    02661 TRA +0 02000 0 02646   
                   EST2 = EDCT                                                      141  LM00193
 02662 CLA +0 50000 0 00111    02663 STO +0 60100 0 00664                                                               
                   EDCT = EDCT + 1                                                  142  LM00197
 02664 CLA +0 50000 0 00111    02665 ADD +0 40000 0 01501    02666 STO +0 60100 0 00111                                 
                   TEM = 1                                                          143  LM00198
 02667 CLA +0 50000 0 01501    02670 STO +0 60100 0 01474                                                               
                   GLOBAL = 0B                                                      144  LM00199
 02671 CLA +0 50000 0 01500    02672 STO +0 60100 0 00672                                                               
      ARGLP        CWD = GET.(0)                                                    145  LM00200
 02673 TSX +0 07400 4 00031    02674 TXH +3 00000 0 01500    02675 STO +0 60100 0 00106                                 
                   WHENEVER CWD .E. $ $                                             146  LM00201
 02676 CLA +0 50000 0 00106    02677 SUB +0 40200 0 01546    02700 TNZ -0 10000 0 02703                                 
                     TRANSFER TO SHIFT                                              147  LM00202
 02701 TRA +0 02000 0 00063                                                                                             
                   OR WHENEVER CWD .E. $     G$                                     148  LM00203
 02702 TRA +0 02000 0 02721    02703 CLA +0 50000 0 00106    02704 SUB +0 40200 0 01536    02705 TNZ -0 10000 0 02716   
                     WHENEVER STR2 .NE. STR1+1, GLOBAL = 1B                         149  LM00204
 02706 CLA +0 50000 0 01471    02707 ADD +0 40000 0 01501    02710 CHS +0 76000 0 00002    02711 ADD +0 40000 0 01472   
 02712 TZE +0 10000 0 02715    02713 CLA +0 50000 0 01501    02714 STO +0 60100 0 00672                                 
                   OTHERWISE                                                        150  LM00205
 02715 TRA +0 02000 0 02721                                                                                             
                     TEM = BIN.(CWD)                                                151  LM00206
 02716 TSX +0 07400 4 00001    02717 TXH +3 00000 0 00106    02720 STO +0 60100 0 01474                                 
                   END OF CONDITIONAL                                               152  LM00207
                   TRANSFER TO ARGLP                                                153  LM00208
 02721 TRA +0 02000 0 00035                                                                                             
       SHIFT       THROUGH MVDWN, FOR I = LENGTH, -1, I .L. 1                       154  LM00212
 02722 CLA +0 50000 0 00700    02723 STO +0 60100 0 00675    02724 TRA +0 02000 0 02730    02725 CLS +0 50200 0 01501   
 02726 ADD +0 40000 0 00675    02727 STO +0 60100 0 00675    02730 CLA +0 50000 0 00675    02731 SUB +0 40200 0 01501   
 02732 TZE +0 10000 0 02734    02733 TMI -0 12000 0 02744                                                               
      MVDWN          LINE(BUFSIZ+I-LENGTH) = LINE(I)                                155  LM00213
 02734 CLA +0 50000 0 00100    02735 ADD +0 40000 0 00675    02736 SUB +0 40200 0 00700    02737 PAX +0 73400 1 00000   
 02740 LXA +0 53400 2 00675    02741 CLA +0 50000 2 01452    02742 STO +0 60100 1 01452    02743 TRA +0 02000 0 02725   
                   DOWN = BUFSIZ-LENGTH+1                                           156  LM00214
 02744 CLA +0 50000 0 00100    02745 SUB +0 40200 0 00700    02746 ADD +0 40000 0 01501    02747 STO +0 60100 0 00110   
                   UP = 0                                                           157  LM00215
 02750 CLA +0 50000 0 01500    02751 STO +0 60100 0 01476                                                               
                   CHNG = 0B                                                        158  LM00216
 02752 CLA +0 50000 0 01500    02753 STO +0 60100 0 00102                                                               
                   CHST = LENGTH + 1                                                159  LM00217
 02754 CLA +0 50000 0 00700    02755 ADD +0 40000 0 01501    02756 STO +0 60100 0 00103                                 
                   CHEND = LENGTH                                                   160  LM00218
 02757 CLA +0 50000 0 00700    02760 STO +0 60100 0 00101                                                               
      SRCHLP       UP = UP + 1                                                      161  LM00222
 02761 CLA +0 50000 0 01476    02762 ADD +0 40000 0 01501    02763 STO +0 60100 0 01476                                 
      SRTST          WHENEVER DOWN .G. BUFSIZ, TRANSFER TO GIVUP                    162  LM00223
 02764 CLA +0 50000 0 00110    02765 SUB +0 40200 0 00100    02766 TZE +0 10000 0 02771    02767 TMI -0 12000 0 02771   
 02770 TRA +0 02000 0 00046                                                                                             
                     J = DOWN                                                       163  LM00224
 02771 CLA +0 50000 0 00110    02772 STO +0 60100 0 00676                                                               
                     THROUGH COMPAR, FOR I = STR1+1, 1, I .GE. STR2                 164  LM00225
 02773 CLA +0 50000 0 01471    02774 ADD +0 40000 0 01501    02775 STO +0 60100 0 00675    02776 TRA +0 02000 0 03002   
 02777 CLA +0 50000 0 00675    03000 ADD +0 40000 0 01501    03001 STO +0 60100 0 00675    03002 CLA +0 50000 0 00675   
 03003 SUB +0 40200 0 01472    03004 TZE +0 10000 0 03025    03005 TPL +0 12000 0 03025                                 
                       WHENEVER J .GE. BUFSIZ, TRANSFER TO GIVUP                    165  LM00226
 03006 CLA +0 50000 0 00676    03007 SUB +0 40200 0 00100    03010 TZE +0 10000 0 03012    03011 TMI -0 12000 0 03013   
 03012 TRA +0 02000 0 00046                                                                                             
                       WHENEVER EDLIN(I) .NE. LINE(J), TRANSFER TO NOCOMP           166  LM00227
 03013 LXA +0 53400 1 00675    03014 LXA +0 53400 2 00676    03015 CLA +0 50000 1 00663    03016 SUB +0 40200 2 01452   
 03017 TZE +0 10000 0 03021    03020 TRA +0 02000 0 00055                                                               
       COMPAR          J = J + 1                                                    167  LM00228
 03021 CLA +0 50000 0 00676    03022 ADD +0 40000 0 01501    03023 STO +0 60100 0 00676    03024 TRA +0 02000 0 02777   
                     TRANSFER TO STFND                                              168  LM00229
 03025 TRA +0 02000 0 00066                                                                                             
      NOCOMP         LINE(UP) = LINE(DOWN)                                          169  LM00231
 03026 LXA +0 53400 1 01476    03027 LXA +0 53400 2 00110    03030 CLA +0 50000 2 01452    03031 STO +0 60100 1 01452   
                     DOWN = DOWN + 1                                                170  LM00232
 03032 CLA +0 50000 0 00110    03033 ADD +0 40000 0 01501    03034 STO +0 60100 0 00110                                 
                   TRANSFER TO SRCHLP                                               171  LM00233
 03035 TRA +0 02000 0 00064                                                                                             
      STFND        CHNG = 1B                                                        172  LM00237
 03036 CLA +0 50000 0 01501    03037 STO +0 60100 0 00102                                                               
                   DOWN = DOWN + (STR2-STR1-1)                                      173  LM00238
 03040 CLA +0 50000 0 01472    03041 SUB +0 40200 0 01471    03042 SUB +0 40200 0 01501    03043 ADD +0 40000 0 00110   
 03044 STO +0 60100 0 00110                                                                                             
                   CHST = UP                                                        174  LM00239
 03045 CLA +0 50000 0 01476    03046 STO +0 60100 0 00103                                                               
                   THROUGH REPLAC, FOR I = STR2 + 1, 1, I .GE. EST2                 175  LM00240
 03047 CLA +0 50000 0 01472    03050 ADD +0 40000 0 01501    03051 STO +0 60100 0 00675    03052 TRA +0 02000 0 03056   
 03053 CLA +0 50000 0 00675    03054 ADD +0 40000 0 01501    03055 STO +0 60100 0 00675    03056 CLA +0 50000 0 00675   
 03057 SUB +0 40200 0 00664    03060 TZE +0 10000 0 03077    03061 TPL +0 12000 0 03077                                 
                     LINE(UP) = EDLIN(I)                                            176  LM00241
 03062 LXA +0 53400 1 01476    03063 LXA +0 53400 2 00675    03064 CLA +0 50000 2 00663    03065 STO +0 60100 1 01452   
                     UP = UP + 1                                                    177  LM00242
 03066 CLA +0 50000 0 01476    03067 ADD +0 40000 0 01501    03070 STO +0 60100 0 01476                                 
       REPLAC        WHENEVER UP .G. DOWN, TRANSFER TO GIVUP                        178  LM00243
 03071 CLA +0 50000 0 01476    03072 SUB +0 40200 0 00110    03073 TZE +0 10000 0 03076    03074 TMI -0 12000 0 03076   
 03075 TRA +0 02000 0 00046    03076 TRA +0 02000 0 03053                                                               
                   CHEND = UP - 1                                                   179  LM00244
 03077 CLA +0 50000 0 01476    03100 SUB +0 40200 0 01501    03101 STO +0 60100 0 00101                                 
                   WHENEVER GLOBAL, TRANSFER TO SRTST                               180  LM00245
 03102 NZT -0 52000 0 00672    03103 TRA +0 02000 0 03105    03104 TRA +0 02000 0 00065                                 
      GIVUP        THROUGH FILOUT, FOR UP = UP, 1, DOWN .G. BUFSIZ                  181  LM00249
 03105 CLA +0 50000 0 01476    03106 STO +0 60100 0 01476    03107 TRA +0 02000 0 03113    03110 CLA +0 50000 0 01476   
 03111 ADD +0 40000 0 01501    03112 STO +0 60100 0 01476    03113 CLA +0 50000 0 00110    03114 SUB +0 40200 0 00100   
 03115 TZE +0 10000 0 03117    03116 TPL +0 12000 0 03127                                                               
                     LINE(UP) = LINE(DOWN)                                          182  LM00250
 03117 LXA +0 53400 1 01476    03120 LXA +0 53400 2 00110    03121 CLA +0 50000 2 01452    03122 STO +0 60100 1 01452   
      FILOUT         DOWN = DOWN + 1                                                183  LM00251
 03123 CLA +0 50000 0 00110    03124 ADD +0 40000 0 01501    03125 STO +0 60100 0 00110    03126 TRA +0 02000 0 03110   
                   LENGTH = UP - 1                                                  184  LM00252
 03127 CLA +0 50000 0 01476    03130 SUB +0 40200 0 01501    03131 STO +0 60100 0 00700                                 
                   TEM = TEM - 1                                                    185  LM00253
 03132 CLA +0 50000 0 01474    03133 SUB +0 40200 0 01501    03134 STO +0 60100 0 01474                                 
                   WHENEVER .NOT. BRIEF .AND. (TEM .G. 0 .THEN. CHNG)               186  LM00254
                1       , PRNT.(CHST, CHEND)                                        186  LM00255
 03135 ZET +0 52000 0 00102    03136 TRA +0 02000 0 03143    03137 CLA +0 50000 0 01474    03140 SUB +0 40200 0 01500   
 03141 TZE +0 10000 0 03143    03142 TPL +0 12000 0 03150    03143 ZET +0 52000 0 00077    03144 TRA +0 02000 0 03150   
 03145 TSX +0 07400 4 00032    03146 TXH +3 00000 0 00103    03147 TXH +3 00000 0 00101                                 
                   CANON.(LINE, LENGTH, BUFSIZ)                                     187  LM00256
 03150 TSX +0 07400 4 00003    03151 TXH +3 00000 0 01452    03152 TXH +3 00000 0 00700    03153 TXH +3 00000 0 00100   
                   WHENEVER TEM .G. 0                                               188  LM00257
 03154 CLA +0 50000 0 01474    03155 SUB +0 40200 0 01500    03156 TZE +0 10000 0 03171    03157 TMI -0 12000 0 03171   
                     WRITE.(LINE, LENGTH)                                           189  LM00258
 03160 TSX +0 07400 4 00027    03161 TXH +3 00000 0 01452    03162 TXH +3 00000 0 00700                                 
                     LENGTH = READ.(LINE, BUFSIZ, EOF)                              190  LM00259
 03163 TSX +0 07400 4 00017    03164 TXH +3 00000 0 01452    03165 TXH +3 00000 0 00100    03166 TXH +3 00000 0 00044   
 03167 STO +0 60100 0 00700                                                                                             
                     TRANSFER TO SHIFT                                              191  LM00260
 03170 TRA +0 02000 0 00063                                                                                             
                   END OF CONDITIONAL                                               192  LM00261
                 OR WHENEVER CWD .E. $ SPLIT$ .OR. CWD .E. $     S$                 193  LM00265
 03171 TRA +0 02000 0 03415    03172 CLA +0 50000 0 00106    03173 SUB +0 40200 0 01547    03174 TZE +0 10000 0 03200   
 03175 CLA +0 50000 0 00106    03176 SUB +0 40200 0 01553    03177 TNZ -0 10000 0 03261                                 
                   TOPNAM = GET.(0)                                                 194  LM00266
 03200 TSX +0 07400 4 00031    03201 TXH +3 00000 0 01500    03202 STO +0 60100 0 01475                                 
                   WHENEVER TOPNAM .E. $ $, TRANSFER TO NONAME                      195  LM00267
 03203 CLA +0 50000 0 01475    03204 SUB +0 40200 0 01546    03205 TNZ -0 10000 0 03207    03206 TRA +0 02000 0 00056   
                   WHENEVER TOPNAM .E. OLDNAM .AND. FSTPAS                          196  LM00268
 03207 NZT -0 52000 0 00671    03210 TRA +0 02000 0 03227    03211 CLA +0 50000 0 01475    03212 SUB +0 40200 0 01461   
 03213 TNZ -0 10000 0 03227                                                                                             
      NEWNM          PRINT COMMENT $0P1L1E1A1S1E0 1U1S1E0 1A1N1O1T1H1E1R0 1N1A      197  LM00269
                11M1E0.$                                                            197  LM00270
 03214 TSX +0 07400 4 00015    03215     +0 00000 0 00010    03216     +0 04701 4 30125    03217     +0 12101 6 20125   
 03220     +0 06001 6 40162    03221     +0 12500 6 00121    03222     +0 14501 4 60163    03223     +0 13001 2 50151   
 03224     +0 06001 4 50121    03225     +0 14401 2 50033                                                               
                     TRANSFER TO NXRQ                                               198  LM00271
 03226 TRA +0 02000 0 00060                                                                                             
                   END OF CONDITIONAL                                               199  LM00272
                   SECNAM = GET.(0)                                                 200  LM00273
 03227 TSX +0 07400 4 00031    03230 TXH +3 00000 0 01500    03231 STO +0 60100 0 01470                                 
                 WHENEVER SECNAM .E. $ $, SECNAM = OLDSEC                           201  LM00274
 03232 CLA +0 50000 0 01470    03233 SUB +0 40200 0 01546    03234 TNZ -0 10000 0 03237    03235 CLA +0 50000 0 01462   
 03236 STO +0 60100 0 01470                                                                                             
                   CLRNAM.(TOPNAM, SECNAM, NEWNM, 1B)                               202  LM00275
 03237 TSX +0 07400 4 00006    03240 TXH +3 00000 0 01475    03241 TXH +3 00000 0 01470    03242 TXH +3 00000 0 00054   
 03243 TXH +3 00000 0 01501                                                                                             
                   CLOSEW.                                                          203  LM00276
 03244 TSX +0 07400 4 00005                                                                                             
                   RENAME.(IN, FI, TOPNAM, SECNAM)                                  204  LM00277
 03245 TSX +0 07400 4 00020    03246 TXH +3 00000 0 00674    03247 TXH +3 00000 0 00666    03250 TXH +3 00000 0 01475   
 03251 TXH +3 00000 0 01470                                                                                             
                   ASSIGN.(IN, FI)                                                  205  LM00278
 03252 TSX +0 07400 4 00000    03253 TXH +3 00000 0 00674    03254 TXH +3 00000 0 00666                                 
                   OLDNAM = FENCE                                                   206  LM00279
 03255 CLA +0 50000 0 00665    03256 STO +0 60100 0 01461                                                               
                   TRANSFER TO TOPLP                                                207  LM00280
 03257 TRA +0 02000 0 00070                                                                                             
                 OR WHENEVER CWD .E. $  QUIT$ .OR. CWD .E. $     Q$                 208  LM00282
 03260 TRA +0 02000 0 03415    03261 CLA +0 50000 0 00106    03262 SUB +0 40200 0 01544    03263 TZE +0 10000 0 03267   
 03264 CLA +0 50000 0 00106    03265 SUB +0 40200 0 01524    03266 TNZ -0 10000 0 03303                                 
                   ENDRD.                                                           209  LM00283
 03267 TSX +0 07400 4 00011                                                                                             
                   CLOSEW.                                                          210  LM00284
 03270 TSX +0 07400 4 00005                                                                                             
                   DELFIL.(IN1, FI, DLQ1)                                           211  LM00285
 03271 TSX +0 07400 4 00010    03272 TXH +3 00000 0 00673    03273 TXH +3 00000 0 00666    03274 TXH +3 00000 0 00041   
      DLQ1         DELFIL.(IN, FI, DLQ2)                                            212  LM00286
 03275 TSX +0 07400 4 00010    03276 TXH +3 00000 0 00674    03277 TXH +3 00000 0 00666    03300 TXH +3 00000 0 00042   
      DLQ2         TRANSFER TO CHN                                                  213  LM00287
 03301 TRA +0 02000 0 00036                                                                                             
                 OR WHENEVER CWD .E. $  FILE$                                       214  LM00289
 03302 TRA +0 02000 0 03415    03303 CLA +0 50000 0 00106    03304 SUB +0 40200 0 01520    03305 TNZ -0 10000 0 03403   
                   PRINAM = GET.(0)                                                 215  LM00290
 03306 TSX +0 07400 4 00031    03307 TXH +3 00000 0 01500    03310 STO +0 60100 0 01463                                 
                   CLRSW = 1B                                                       216  LM00291
 03311 CLA +0 50000 0 01501    03312 STO +0 60100 0 00104                                                               
                   WHENEVER PRINAM .E. $ $                                          217  LM00292
 03313 CLA +0 50000 0 01463    03314 SUB +0 40200 0 01546    03315 TNZ -0 10000 0 03325                                 
                     PRINAM = OLDNAM                                                218  LM00293
 03316 CLA +0 50000 0 01461    03317 STO +0 60100 0 01463                                                               
                     SECNAM = OLDSEC                                                219  LM00294
 03320 CLA +0 50000 0 01462    03321 STO +0 60100 0 01470                                                               
                     CLRSW = 0B                                                     220  LM00295
 03322 CLA +0 50000 0 01500    03323 STO +0 60100 0 00104                                                               
                   OTHERWISE                                                        221  LM00296
 03324 TRA +0 02000 0 03335                                                                                             
                     SECNAM = GET.(0)                                               222  LM00297
 03325 TSX +0 07400 4 00031    03326 TXH +3 00000 0 01500    03327 STO +0 60100 0 01470                                 
                     WHENEVER SECNAM .E. $ $                                        223  LM00298
 03330 CLA +0 50000 0 01470    03331 SUB +0 40200 0 01546    03332 TNZ -0 10000 0 03335                                 
                       SECNAM = OLDSEC                                              224  LM00299
 03333 CLA +0 50000 0 01462    03334 STO +0 60100 0 01470                                                               
                     END OF CONDITIONAL                                             225  LM00300
                   END OF CONDITIONAL                                               226  LM00301
                   WHENEVER PRINAM .E. FENCE                                        227  LM00302
 03335 CLA +0 50000 0 01463    03336 SUB +0 40200 0 00665    03337 TNZ -0 10000 0 03352                                 
      NONAME         PRINT COMMENT $0N1O0 1F1I1L1E0 1N1A1M1E0 1G1I1V1E1N0.$         228  LM00303
 03340 TSX +0 07400 4 00015    03341     +0 00000 0 00007    03342     +0 04501 4 60060    03343     +0 12601 3 10143   
 03344     +0 12500 6 00145    03345     +0 12101 4 40125    03346     +0 06001 2 70131    03347     +0 16501 2 50145   
 03350     +0 03360 6 06060                                                                                             
                     TRANSFER TO NXRQ                                               229  LM00304
 03351 TRA +0 02000 0 00060                                                                                             
                   END OF CONDITIONAL                                               230  LM00305
                   WRITE.(LINE, LENGTH)                                             231  LM00306
 03352 TSX +0 07400 4 00027    03353 TXH +3 00000 0 01452    03354 TXH +3 00000 0 00700                                 
                   LENGTH = 0                                                       232  LM00307
 03355 CLA +0 50000 0 01500    03356 STO +0 60100 0 00700                                                               
                   WHENEVER OK, BOTTOM.                                             233  LM00308
 03357 NZT -0 52000 0 01460    03360 TRA +0 02000 0 03362    03361 TSX +0 07400 4 00002                                 
                   CLRNAM.(PRINAM, SECNAM, NEWNM, CLRSW)                            234  LM00309
 03362 TSX +0 07400 4 00006    03363 TXH +3 00000 0 01463    03364 TXH +3 00000 0 01470    03365 TXH +3 00000 0 00054   
 03366 TXH +3 00000 0 00104                                                                                             
                   CLOSEW.                                                          235  LM00310
 03367 TSX +0 07400 4 00005                                                                                             
                   DELFIL.(IN1, FI, DL1)                                            236  LM00311
 03370 TSX +0 07400 4 00010    03371 TXH +3 00000 0 00673    03372 TXH +3 00000 0 00666    03373 TXH +3 00000 0 00037   
      DL1          RENAME.(IN, FI, PRINAM, SECNAM)                                  237  LM00312
 03374 TSX +0 07400 4 00020    03375 TXH +3 00000 0 00674    03376 TXH +3 00000 0 00666    03377 TXH +3 00000 0 01463   
 03400 TXH +3 00000 0 01470                                                                                             
      CHN          EXIT.                                                            238  LM00313
 03401 TSX +0 07400 4 00012                                                                                             
                 OTHERWISE                                                          239  LM00315
 03402 TRA +0 02000 0 03415                                                                                             
                   PRINT COMMENT $0N1O1T0 1A0 1R1E1Q1U1E1S1T0:$                     240  LM00316
 03403 TSX +0 07400 4 00015    03404     +0 00000 0 00005    03405     +0 04501 4 60163    03406     +0 06001 2 10060   
 03407     +0 15101 2 50150    03410     +0 16401 2 50162    03411     +0 16300 3 56060                                 
                   TYPOUT.(EDLIN, COUNT)                                            241  LM00317
 03412 TSX +0 07400 4 00025    03413 TXH +3 00000 0 00663    03414 TXH +3 00000 0 00105                                 
                 END OF CONDITIONAL                                                 242  LM00319
                 TRANSFER TO NXRQ                                                   243  LM00320
 03415 TRA +0 02000 0 00060                                                                                             
      EOF        PRINTCOMMENT $0E1N1D0 1O1F0 1F1I1L1E0 1R1E1A1C1H1E1D0 1B1Y0:$      244  LM00322
 03416 TSX +0 07400 4 00015    03417     +0 00000 0 00010    03420     +0 02501 4 50124    03421     +0 06001 4 60126   
 03422     +0 06001 2 60131    03423     +0 14301 2 50060    03424     +0 15101 2 50121    03425     +0 12301 3 00125   
 03426     +0 12400 6 00122    03427     +0 17000 3 56060                                                               
                 TYPOUT.(EDLIN, COUNT)                                              245  LM00323
 03430 TSX +0 07400 4 00025    03431 TXH +3 00000 0 00663    03432 TXH +3 00000 0 00105                                 
                 LENGTH = 0                                                         246  LM00324
 03433 CLA +0 50000 0 01500    03434 STO +0 60100 0 00700                                                               
                 OK = 0B                                                            247  LM00325
 03435 CLA +0 50000 0 01500    03436 STO +0 60100 0 01460                                                               
                 TRANSFER TO NXRQ                                                   248  LM00326
 03437 TRA +0 02000 0 00060                                                                                             
                 INTERNAL FUNCTION                                                  249  LM00334
 03440 TRA +0 02000 0 03510                                                                                             
                 ENTRY TO CLSOUT.                                                   250  LM00335
 03441 TRA +0 02000 0 03444    00030 TTR +0 02100 0 03442    03442 SXA +0 63400 2 03477    03443 TSX +0 07400 2 03477   
                   CLOSEW.                                                          251  LM00336
 03444 TSX +0 07400 4 00005                                                                                             
                   DELFIL.(IN1, FI, DL2)                                            252  LM00337
 03445 TSX +0 07400 4 00010    03446 TXH +3 00000 0 00673    03447 TXH +3 00000 0 00666    03450 TXH +3 00000 0 00040   
      DL2          CHFILE.(IN, FI, -0, IN1)                                         253  LM00338
 03451 CLS +0 50200 0 01500    03452 STO +0 60100 0 03507    03453 TSX +0 07400 4 00004    03454 TXH +3 00000 0 00674   
 03455 TXH +3 00000 0 00666    03456 TXH +3 00000 0 03507    03457 TXH +3 00000 0 00673                                 
                   SEEK.(IN1, FI, CHN)                                              254  LM00339
 03460 TSX +0 07400 4 00021    03461 TXH +3 00000 0 00673    03462 TXH +3 00000 0 00666    03463 TXH +3 00000 0 00036   
                   ASSIGN.(IN, FI)                                                  255  LM00340
 03464 TSX +0 07400 4 00000    03465 TXH +3 00000 0 00674    03466 TXH +3 00000 0 00666                                 
                   OK = 1B                                                          256  LM00341
 03467 CLA +0 50000 0 01501    03470 STO +0 60100 0 01460                                                               
                   LENGTH = 0                                                       257  LM00342
 03471 CLA +0 50000 0 01500    03472 STO +0 60100 0 00700                                                               
                   FSTPAS = 0B                                                      258  LM00343
 03473 CLA +0 50000 0 01500    03474 STO +0 60100 0 00671                                                               
                   FUNCTION RETURN                                                  259  LM00344
 03475 TRA +0 02000 0 03503                                                                                             
                 END OF FUNCTION                                                    260  LM00345
 03476 TSX +0 07400 4 00012    03477 TXH +3 00000 0 00000    03500 SXD -0 63400 1 03477    03501 SXA +0 63400 4 03503   
 03502 TRA +0 02000 2 00001    03503 AXT +0 77400 4 00000    03504 LXA +0 53400 2 03477    03505 LXD -0 53400 1 03477   
 03506 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION                                                  261  LM00349
 03510 TRA +0 02000 0 03616                                                                                             
                 ENTRY TO GET.                                                      262  LM00350
 03511 TRA +0 02000 0 03514    00031 TTR +0 02100 0 03512    03512 SXA +0 63400 2 03605    03513 TSX +0 07400 2 03605   
                   WORD = $ $                                                       263  LM00351
 03514 CLA +0 50000 0 01546    03515 STO +0 60100 0 01477                                                               
      SCANLP       THROUGH SCANLP, FOR EDCT = EDCT, 1,                              264  LM00352
                1  (EDLIN(EDCT+1).NE.BLANK) .OR. (EDCT+1.GE.COUNT)                  264  LM00353
 03516 CLA +0 50000 0 00111    03517 STO +0 60100 0 00111    03520 TRA +0 02000 0 03524    03521 CLA +0 50000 0 00111   
 03522 ADD +0 40000 0 01501    03523 STO +0 60100 0 00111    03524 CLA +0 50000 0 00111    03525 ADD +0 40000 0 01501   
 03526 SUB +0 40200 0 00105    03527 TZE +0 10000 0 03540    03530 TPL +0 12000 0 03540    03531 CLA +0 50000 0 00111   
 03532 ADD +0 40000 0 01501    03533 PAX +0 73400 1 00000    03534 CLA +0 50000 1 00663    03535 SUB +0 40200 0 00076   
 03536 TNZ -0 10000 0 03540    03537 TRA +0 02000 0 03521                                                               
       GTLP        EDCT = EDCT + 1                                                  265  LM00354
 03540 CLA +0 50000 0 00111    03541 ADD +0 40000 0 01501    03542 STO +0 60100 0 00111                                 
                   WHENEVER EDLIN(EDCT) .E. BLANK, FUNCTION RETURN WORD             266  LM00355
 03543 LXA +0 53400 1 00111    03544 CLA +0 50000 1 00663    03545 SUB +0 40200 0 00076    03546 TNZ -0 10000 0 03551   
 03547 CLA +0 50000 0 01477    03550 TRA +0 02000 0 03611                                                               
                   WHENEVER EDLIN(EDCT) .E. TAB .OR. EDCT .GE. COUNT                267  LM00356
 03551 CLA +0 50000 0 00111    03552 SUB +0 40200 0 00105    03553 TZE +0 10000 0 03561    03554 TPL +0 12000 0 03561   
 03555 LXA +0 53400 1 00111    03556 CLA +0 50000 1 00663    03557 SUB +0 40200 0 01473    03560 TNZ -0 10000 0 03566   
                     EDCT = EDCT - 1                                                268  LM00357
 03561 CLA +0 50000 0 00111    03562 SUB +0 40200 0 01501    03563 STO +0 60100 0 00111                                 
                     FUNCTION RETURN WORD                                           269  LM00358
 03564 CLA +0 50000 0 01477    03565 TRA +0 02000 0 03611                                                               
                   END OF CONDITIONAL                                               270  LM00359
                   WORD = (WORD .LS. 6) .V. HOL.(EDLIN(EDCT))                       271  LM00360
 03566 CLA +0 50000 0 00111    03567 SUB +0 40200 0 03570    03570 TXH +3 00000 0 00663    03571 STA +0 62100 0 03573   
 03572 TSX +0 07400 4 00014    03573 TXH +3 00000 0 00000    03574 STO +0 60100 0 03615    03575 CAL -0 50000 0 01504   
 03576 STA +0 62100 0 03600    03577 CAL -0 50000 0 01477    03600 ALS +0 76700 0 00000    03601 ORA -0 50100 0 03615   
 03602 SLW +0 60200 0 01477                                                                                             
                   TRANSFER TO GTLP                                                 272  LM00361
 03603 TRA +0 02000 0 00047                                                                                             
                 END OF FUNCTION                                                    273  LM00362
 03604 TSX +0 07400 4 00012    03605 TXH +3 00000 0 00000    03606 SXD -0 63400 1 03605    03607 SXA +0 63400 4 03611   
 03610 TRA +0 02000 2 00001    03611 AXT +0 77400 4 00000    03612 LXA +0 53400 2 03605    03613 LXD -0 53400 1 03605   
 03614 TRA +0 02000 4 00001                                                                                             
                 INTERNAL FUNCTION(STAR, EN)                                        274  LM00366
 03616 TRA +0 02000 0 03707                                                                                             
                 ENTRY TO PRNT.                                                     275  LM00367
 03617 TRA +0 02000 0 03622    00032 TTR +0 02100 0 03620    03620 SXA +0 63400 2 03666    03621 TSX +0 07400 2 03666   
                   TYPOUT.(LINE, STAR-1)                                            276  LM00368
 03622 CLA +0 50000 0 00024    03623 SUB +0 40200 0 01501    03624 STO +0 60100 0 03706    03625 TSX +0 07400 4 00025   
 03626 TXH +3 00000 0 01452    03627 TXH +3 00000 0 03706                                                               
                   TYPOUT.(REDS, 1)                                                 277  LM00369
 03630 TSX +0 07400 4 00025    03631 TXH +3 00000 0 01466    03632 TXH +3 00000 0 01501                                 
                   TYPOUT.(LINE(STAR-1), EN-STAR+1)                                 278  LM00370
 03633 CLA +0 50000 0 00024    03634 SUB +0 40200 0 00024    03635 ADD +0 40000 0 01501    03636 STO +0 60100 0 03706   
 03637 CLA +0 50000 0 00024    03640 SUB +0 40200 0 01501    03641 SUB +0 40200 0 03642    03642 TXH +3 00000 0 01452   
 03643 STA +0 62100 0 03645    03644 TSX +0 07400 4 00025    03645 TXH +3 00000 0 00000    03646 TXH +3 00000 0 03706   
                   TYPOUT.(BLACKS, 1)                                               279  LM00371
 03647 TSX +0 07400 4 00025    03650 TXH +3 00000 0 00075    03651 TXH +3 00000 0 01501                                 
                   TYPOUT.(LINE(EN), LENGTH-EN)                                     280  LM00372
 03652 CLA +0 50000 0 00700    03653 SUB +0 40200 0 00024    03654 STO +0 60100 0 03706    03655 CLA +0 50000 0 00024   
 03656 SUB +0 40200 0 03657    03657 TXH +3 00000 0 01452    03660 STA +0 62100 0 03662    03661 TSX +0 07400 4 00025   
 03662 TXH +3 00000 0 00000    03663 TXH +3 00000 0 03706                                                               
                   FUNCTION RETURN                                                  281  LM00373
 03664 TRA +0 02000 0 03702                                                                                             
                 END OF FUNCTION                                                    282  LM00374
 03665 TSX +0 07400 4 00012    03666 TXH +3 00000 0 00000    03667 SXD -0 63400 1 03666    03670 SXA +0 63400 4 03702   
 03671 CLA +0 50000 4 00001    03672 STA +0 62100 0 03622    03673 STA +0 62100 0 03634    03674 STA +0 62100 0 03637   
 03675 CLA +0 50000 4 00002    03676 STA +0 62100 0 03633    03677 STA +0 62100 0 03653    03700 STA +0 62100 0 03655   
 03701 TRA +0 02000 2 00001    03702 AXT +0 77400 4 00000    03703 LXA +0 53400 2 03666    03704 LXD -0 53400 1 03666   
 03705 TRA +0 02000 4 00001                                                                                             
                 END OF PROGRAM                                                     283  LM00376
 03707 TSX +0 07400 4 00012                                                                                             
1     MAD PROGRAM LISTING ... ... ...                 FILE  EDLVAL   MAD            02/08/68    1747.7
-                 
                 ..  ROUTINE TO RETURN INITIAL VALUES TO EDITOR FOR                                    LM00001    
                 ..  EDITING ASCII FILES.                                                              LM00002    
                                                                                                       LM00003    
                  EXTERNAL FUNCTION(BLANK, TAB, DEFALT, MCHNG, REDS, BLACKS)                      *001 LM00004    
                  NORMAL MODE IS INTEGER                                                          *002 LM00005    
                  ENTRY TO GETVAL.                                                                *003 LM00006    
                    BLANK  = 060K                                                                 *004 LM00007    
                    TAB    = 072K                                                                 *005 LM00008    
                    DEFALT = $   MAD$                                                             *006 LM00009    
                    MCHNG  = 055K                                                                 *007 LM00010    
                    REDS   = 133K                                                                 *008 LM00011    
                    BLACKS = 132K                                                                 *009 LM00012    
                    FUNCTION RETURN                                                               *010 LM00013    
                  END OF FUNCTION                                                                 *011 LM00014    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00061 TRANSFER VECTOR LENGTH  00001 PROGRAM BEGINS    00012
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      GETVAL 00013   0                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00006 +000000000132     00007 +000000000133     00003 +000000000055     00011 -206060442124     00005 +000000000072    
 00004 +000000000060     00002 +000000000001     00010 +233000000000                                                    
0PROGRAM    
                 EXTERNAL FUNCTION(BLANK, TAB, DEFALT, MCHNG, REDS, BLACKS)         001  LM00004
                 NORMAL MODE IS INTEGER                                             002  LM00005
                 ENTRY TO GETVAL.                                                   003  LM00006
 00012 TRA +0 02000 0 00015    00013 SXA +0 63400 2 00033    00014 TSX +0 07400 2 00033                                 
                   BLANK  = 060K                                                    004  LM00007
 00015 CLA +0 50000 0 00004    00016 STO +0 60100 0 00024                                                               
                   TAB    = 072K                                                    005  LM00008
 00017 CLA +0 50000 0 00005    00020 STO +0 60100 0 00024                                                               
                   DEFALT = $   MAD$                                                006  LM00009
 00021 CLA +0 50000 0 00011    00022 STO +0 60100 0 00024                                                               
                   MCHNG  = 055K                                                    007  LM00010
 00023 CLA +0 50000 0 00003    00024 STO +0 60100 0 00024                                                               
                   REDS   = 133K                                                    008  LM00011
 00025 CLA +0 50000 0 00007    00026 STO +0 60100 0 00024                                                               
                   BLACKS = 132K                                                    009  LM00012
 00027 CLA +0 50000 0 00006    00030 STO +0 60100 0 00024                                                               
                   FUNCTION RETURN                                                  010  LM00013
 00031 TRA +0 02000 0 00053                                                                                             
                 END OF FUNCTION                                                    011  LM00014
 00032 TSX +0 07400 4 00000    00033 TXH +3 00000 0 00000    00034 SXD -0 63400 1 00033    00035 SXA +0 63400 4 00053   
 00036 CLA +0 50000 4 00001    00037 STA +0 62100 0 00016    00040 CLA +0 50000 4 00002    00041 STA +0 62100 0 00020   
 00042 CLA +0 50000 4 00003    00043 STA +0 62100 0 00022    00044 CLA +0 50000 4 00004    00045 STA +0 62100 0 00024   
 00046 CLA +0 50000 4 00005    00047 STA +0 62100 0 00026    00050 CLA +0 50000 4 00006    00051 STA +0 62100 0 00030   
 00052 TRA +0 02000 2 00001    00053 AXT +0 77400 4 00000    00054 LXA +0 53400 2 00033    00055 LXD -0 53400 1 00033   
 00056 TRA +0 02000 4 00001                                                                                             
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 1     
                  
                              *      INPUT AND OUTPUT IS LINE-MARKED FORMAT.  
                              *      J. H. SALTZER, JANUARY, 1965 
                              *     
                       00010         ENTRY   WRITE         WRITE ONE LINE OUT.
                       00071         ENTRY   READ          TO READ NEXT LINE. 
                       00167         ENTRY   BOTTOM        TO RAPIDLY MOVE TO BOTTOM OF FILE.   
                       00062         ENTRY   CLOSEW        CLOSE OUT WRITE FILE.    
                              *     
                                     EXTERN  WRFLX,WRWORD,RDWORD,SETBCD,SETFUL,FILE 
                              *     
                  
        TRANSFER VECTOR 
      00000  665126436760     WRFLX 
      00001  665166465124     WRWORD
      00002  512466465124     RDWORD
      00003  622563222324     SETBCD
      00004  622563266443     SETFUL
      00005  263143256060     FILE  
                  
            LINKAGE DIRECTOR  
      00006  000000000000     
      00007  665131632560     
                  
                       00006   NBITS EQU     6             COULD BE 6, 9, 12, OR 18.
                       00006   NCHRS EQU     36/NBITS      NO. OF CHARACTERS PER WORD ON 7094.  
                              *     
                              *      WRITE.(LINE, LENGTH)   
                              *     
      00010  0634 00 4 00056   WRITE SXA     WX4,4         SAVE LINKAGE AND REGISTERS.    
      00011  0634 00 2 00057         SXA     WX2,2         ..     
      00012  0634 00 1 00060         SXA     WX1,1         ..     
      00013 -0500 00 4 00001         CAL     1,4           GET LINE ADDRESS.  
      00014  0621 00 0 00035         STA     INLP          SET UP LOCATION OF INPUT.
      00015  0500 60 4 00002         CLA*    2,4           GET CHARACTER COUNT.     
      00016  0100 00 4 00003         TZE     3,4           DON'T WORK ON ZERO COUNT.
      00017  0402 00 0 00200         SUB     =1            DISCARD CARRIAGE RETURN AT END.
      00020  0100 00 4 00003         TZE     3,4           ZERO SIZE LINES NOT ALLOWED, EITHER. 
      00021  0767 00 0 00022         ALS     18            SET UP CHARACTER COUNT.  
      00022  0622 00 0 00041         STD     ENDTST        NCHARS = CPW*NWORDS + EXTRAS   
      00023  0361 00 0 00066         ACL     CPWL1         CWP*NWORDS + EXTRAS + CPW - 1  
      00024  0131 00 0 00000         XCA                   (CPW*NWORDS + EXTRAS + CWP - 1)/CPW =
      00025 -0754 00 0 00000         ZAC                        NWORDS + (EXTRAS - 1 + CPW)/CPW 
      00026  0221 00 0 00065         DVP     CPW           SECOND TERM IS 1 IF EXTRAS .G. 0,    
      00027  0131 00 0 00000         XCA                                  0 IF EXTRAS .E. 0     
      00030  0621 00 0 00067         STA     CWD           INSERT IN CONTROL WORD.  
      00031  0074 00 4 00001         TSX     WRWORD,4      INSERT THIS WORD IN OUTPUT BUFFER.   
 TD   00032  3 00000 0 00067         TXH     CWD           ..     
      00033  0774 00 2 00001         AXT     1,2
      00034  0774 00 1 00006   OUTLP AXT     36/NBITS,1    SET CHARACTER COUNTER.   
      00035  0560 00 2 00000   INLP  LDQ     --,2     
      00036 -0773 00 0 00036         RQL     36-NBITS      SHIFT CHARACTER TO POSITION.   
      00037 -0763 00 0 00006         LGL     NBITS         AND INTO WORD.     
      00040  1 00001 2 00041         TXI     *+1,2,1       COUNT INPUT CHARACTERS.  
      00041  3 00000 2 00052  ENDTST TXH     DONE,2,--     CHECK FOR END OF INPUT.  
      00042  2 00001 1 00035         TIX     INLP,1,1 
      00043  0602 00 0 00070         SLW     WDOUT         SAVE COMPLETED WORD.     
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 2     
                  
      00044  0074 00 4 00001   OUT   TSX     WRWORD,4      STORE COMPLETED WORD.    
 TD   00045  3 00000 0 00070         TXH     WDOUT         ..     
      00046  0020 00 0 00034         TRA     OUTLP         GO BACK FOR MORE.  
                              *     
      00047  0560 00 0 00063   NLLP  LDQ     NULL          FILL IN WORD WITH NULLS. 
      00050 -0773 00 0 00036         RQL     36-NBITS      MOVE NULL TO POSITION.   
      00051 -0763 00 0 00006         LGL     NBITS         SHIFT IN A NULL.   
      00052  2 00001 1 00047   DONE  TIX     NLLP,1,1      COUNT SPACES LEFT. 
      00053  0602 00 0 00070         SLW     WDOUT         STORE THIS WORD.   
      00054  0074 00 4 00001         TSX     WRWORD,4      ADD TO OUTPUT BUFFER.    
 TD   00055  3 00000 0 00070         TXH     WDOUT         ..     
      00056  0774 00 4 00000   WX4   AXT     --,4          RESTORE LINKAGE, AND IRS.
      00057  0774 00 2 00000   WX2   AXT     --,2          ..     
      00060  0774 00 1 00000   WX1   AXT     --,1     
      00061  0020 00 4 00003         TRA     3,4           ..     
                              *     
      00062  0020 00 0 00005  CLOSEW TRA     FILE          REFLECT CLOSE CALL TO BUFFER.  
                              *     
                              *     
      00063 +000000000057      NULL  OCT     0057          NULL CHARACTER.    
      00064 +000000000055     RETURN OCT     0055          CARRIAGE RETURN CHARACTER.     
      00065  0 00006 0 00000   CPW           ,,NCHRS       NUMBER OF CHARACTERS PER WORD. 
      00066  0 00005 0 00000   CPWL1         ,,NCHRS-1     CHARACTERS PER WORD LESS ONE.  
                              *     
      00067 -377777000000      CWD   OCT     777777000000   
      00070  0 00000 0 00000   WDOUT                       STORAGE FOR WORD BEING OUTPUT. 
                              *     
                              *      LENGTH = READ.(LINE, BUFSIZ, EOF)  
                              *     
      00071  0634 00 1 00137   READ  SXA     RX1,1         READ NEXT LINE.    
      00072  0634 00 2 00136         SXA     RX2,2    
      00073  0634 00 4 00134         SXA     RX4,4    
      00074  0634 00 3 00135         SXA     RX3,3    
      00075 -0500 00 4 00001         CAL     1,4           GET LOCATION OF BUFFER.  
      00076  0621 00 0 00124         STA     RPUT     
      00077 -0500 60 4 00002         CAL*    2,4           SET UP END TEST.   
      00100  0402 00 0 00200         SUB     =1 
      00101  0767 00 0 00022         ALS     18            ..     
      00102  0622 00 0 00125         STD     BUFTST        ..     
      00103  0074 00 4 00002   RDAGN TSX     RDWORD,4      GET CONTROL WORD.  
      00104  0 00000 0 00141                 EOF           IN CASE WE ARE AT END OF FILE. 
      00105 -0734 00 1 00000         PDX     0,1           PUT FLAG IN IR1.   
      00106  0734 00 3 00000         PAX     0,3           PUT COUNT IN IR3.  
      00107 -2 77776 1 00146         TNX     WOOPS,1,-2    CHECK FLAG.  
      00110 -3 00000 3 00103         TXL     RDAGN,3,0     IGNORE ZERO-LENGTH LINE. 
      00111  0774 00 2 00000   RDON  AXT     0,2           SET OUTPUT COUNTER.
      00112  0074 00 4 00002  ROUTLP TSX     RDWORD,4      READ A WORD. 
      00113  0 00000 0 00141                 EOF           ..     
      00114  0774 00 1 00006         AXT     36/NBITS,1    SET CHARACTER COUNTER.   
      00115  0131 00 0 00000         XCA                   WORD TO MQ.  
      00116 -0754 00 0 00000   RINLP ZAC                   CLEAR AC.    
      00117 -0763 00 0 00006         LGL     NBITS         GET NEXT CHARACTER.
      00120 -0340 00 0 00063         LAS     NULL          IS THIS A NULL CHARACTER.
      00121  0020 00 0 00123         TRA     *+2           NO.    
      00122  0020 00 0 00126         TRA     RCH           YES, SKIP IT.
      00123  1 00001 2 00124         TXI     *+1,2,1       COUNT STORAGE SPACES.    
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 3     
                  
      00124  0602 00 2 00000   RPUT  SLW     --,2          STORE CHARACTER IN LINE. 
      00125  3 00000 2 00133  BUFTST TXH     PXA,2,--      TEST FOR FULL BUFFER.    
      00126  2 00001 1 00116   RCH   TIX     RINLP,1,1     INDEX, AND COUNT CHARACTERS.   
      00127  2 00001 3 00112         TIX     ROUTLP,3,1    INDEX, AND COUNT WORDS.  
      00130 -0500 00 0 00064         CAL     RETURN        PUT RETURN AT END OF LINE.     
      00131  1 00001 2 00132         TXI     *+1,2,1       INCLUDE IN COUNT.  
      00132  0522 00 0 00124         XEC     RPUT          INSTALL IT.  
      00133  0754 00 2 00000   PXA   PXA     0,2           GET WORD COUNT.    
      00134  0774 00 4 00000   RX4   AXT     --,4     
      00135  0774 00 3 00000   RX3   AXT     --,3     
      00136  0774 00 2 00000   RX2   AXT     --,2     
      00137  0774 00 1 00000   RX1   AXT     --,1     
      00140  0020 00 4 00004         TRA     4,4
                              *     
      00141  0534 00 4 00134   EOF   LXA     RX4,4         END OF FILE REACHED, TAKE ERROR
      00142  0534 00 3 00135         LXA     RX3,3         RETURN.
      00143  0534 00 2 00136         LXA     RX2,2    
      00144  0534 00 1 00137         LXA     RX1,1    
      00145  0020 60 4 00003         TRA*    3,4
                              *     
                              *     
      00146  0074 00 4 00003   WOOPS TSX     SETBCD,4      FILE IS NOT LINE-MARKED PROPERLY, COMPLAIN.
      00147  0074 00 4 00000         TSX     WRFLX,4  
      00150  0 00006 0 00161                 MESS1,,6 
      00151  0074 00 4 00004         TSX     SETFUL,4      RESTORE INDICATOR. 
      00152  0074 00 4 00002   LP    TSX     RDWORD,4      SEARCH FOR NEXT LINE MARK.     
      00153  0 00000 0 00141                 EOF
      00154 -0734 00 1 00000         PDX     0,1           CHECK FOR LINE MARK IN THIS WORD.    
      00155 -2 77776 1 00152         TNX     LP,1,-2       ..     
      00156  0734 00 3 00000         PAX     0,3           LINE MARK OK, CHECK COUNT.     
      00157 -3 00000 1 00152         TXL     LP,1,0        ..     
      00160  0020 00 0 00111         TRA     RDON          COUNT NON-ZERO, READ ON. 
                              *     
      00161  314547646360      MESS1 BCI     6,INPUT FILE HAS IMPROPER FORMAT.
      00162  263143256030     
      00163  216260314447     
      00164  514647255160     
      00165  264651442163     
      00166  336060606060     
                              *     
                              *      ROUTINE TO SWING TO BOTTOM OF FILE.
                              *     
      00167  0634 00 4 00176  BOTTOM SXA     EOFB,4        SAVE LINKAGE.
      00170  0074 00 4 00002   LOOP  TSX     RDWORD,4      GET NEXT INPUT WORD.     
      00171  0 00000 0 00176                 EOFB          EXIT ON END OF FILE.     
      00172  0601 00 0 00070         STO     WDOUT         SAVE THIS WORD.    
      00173  0074 00 4 00001         TSX     WRWORD,4      WRITE OUT THIS WORD.     
 TD   00174  3 00000 0 00070         TXH     WDOUT         ..     
      00175  0020 00 0 00170         TRA     LOOP          REPEAT.
                              *     
      00176  0774 00 4 00000  EOFB   AXT     --,4          RESTORE LINKAGE.   
      00177  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
                                     END  
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 4     
                  
        LITERALS  
      00200  000000000001     
1            SUBROUTINES TO CONTROL CHARACTER PACKING AND UNPACKING.                             PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        201 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        152     LP   155,  157
         65    CPW    26
         67    CWD    30,   32
        141    EOF   104,  113,  153
         44    OUT      
        133    PXA   125
        126    RCH   122
        137    RX1    71,  144
        136    RX2    72,  143
        135    RX3    74,  142
        134    RX4    73,  141
         60    WX1    12
         57    WX2    11
         56    WX4    10
         52   DONE    41
        176   EOFB   167,  171
          5   FILE    62
         35   INLP    14,   42
        170   LOOP   175
         47   NLLP    52
         63   NULL    47,  120
        111   RDON   160
         71   READ     0
        124   RPUT    76,  132
         66  CPWL1    23
        161  MESS1   150
          6  NBITS    10,   34,   36,   37,   50,   51,  114,  117
          6  NCHRS    10,   65,   66
         34  OUTLP    46
        103  RDAGN   110
        116  RINLP   126
         70  WDOUT    43,   45,   53,   55,  172,  174
        146  WOOPS   107
          0  WRFLX   147
         10  WRITE     0
        167 BOTTOM     0
        125 BUFTST   102
         62 CLOSEW     0
         41 ENDTST    22
          2 RDWORD   103,  112,  152,  170
         64 RETURN   130
        112 ROUTLP   127
          3 SETBCD   146
          4 SETFUL   151
          1 WRWORD    31,   44,   54,  173
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 1     
                  
                              *      NOTE, INDEX REGISTERS SIX AND SEVEN MUST BE PRESERVED
                              *      BY THE CALLING PROGRAM.
                              *      THIS ROUTINE MAKES TYPEWRITER COMMENTS, BUT DOES NOT 
                              *      AFFECT THE BCD-FULL MODE SWITCH.   
                              *     
                              *           J. H. SALTZER, JANUARY, 1965. 
                              *     
                       00015         ENTRY   ASSIGN        TO ASSIGN A NAME TO THE WRITE FILE.  
                       00057         ENTRY   WRWORD        TO ADD A WORD TO THE FILE.     
                       00100         ENTRY   FILE          TO CLOSE THE FILE. 
                              *     
                       00160         ENTRY   SEEK          TO OPEN A FILE FOR READING.    
                       00242         ENTRY   RDWORD        TO GET A WORD FROM FILE. 
                       00275         ENTRY   ENDRD         TO CLOSE THE FILE. 
                              *     
                                     EXTERN  GETBUF,SETBCD,SETFUL,WRFLX,WRFLXA
                                     EXTERN  OPEN,WRWAIT,RDWAIT,CLOSE,FSTATE,BUFFER 
                              *     
                              *      ASSIGN.($NAME1$,$NAME2$)     
                              *     
                  
        TRANSFER VECTOR 
      00000  272563226426     GETBUF
      00001  622563222324     SETBCD
      00002  622563266443     SETFUL
      00003  665126436760     WRFLX 
      00004  665126436721     WRFLXA
      00005  464725456060     OPEN  
      00006  665166213163     WRWAIT
      00007  512466213163     RDWAIT
      00010  234346622560     CLOSE 
      00011  266263216325     FSTATE
      00012  226426262551     BUFFER
                  
            LINKAGE DIRECTOR  
      00013  000000000000     
      00014  216262312745     
                  
      00015 -0500 60 4 00001  ASSIGN CAL*    1,4           OPEN FILE, GET FILE NAME.
      00016  0602 00 0 00304         SLW     OUTNAM        ..     
      00017 -0500 60 4 00002         CAL*    2,4           ..     
      00020  0602 00 0 00305         SLW     OUTNAM+1      ..     
      00021  0634 00 4 00041         SXA     OPX4,4        SAVE LINKAGE.
      00022  0020 00 0 00023   OSW   TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                    *******************
      00023 -0500 00 0 00315         CAL     WBFSZ         GET AN OUTPUT BUFFER FROM SUPERVISOR.
      00024  0074 00 4 00000         TSX     GETBUF,4      ..     
      00025  0621 00 0 00071         STA     WCALL         SAVE LOCATION OF BUFFER. 
      00026  0621 00 0 00113         STA     CLCALL        TO CLOSE OUT FILE. 
      00027  0361 00 0 00315         ACL     WBFSZ         ADD LENGTH, TO FORM END ADDRESS.     
      00030  0621 00 0 00060         STA     WRNM          INSERT IN INSERTER.
      00031 -0500 00 0 00313         CAL     TRKSZ         GET A DISK TRACK BUFFER. 
      00032  0074 00 4 00000         TSX     GETBUF,4      ..     
      00033  0621 00 0 00055         STA     BFCALL        SET UP BUFFER CALLER.    
      00034 -0625 00 0 00022         STL     OSW           RESET ONE-TIME SWITCH.   
                              *                                                    *******************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 2     
                  
      00035  0774 00 4 00040         AXT     OPOK,4        SET QUOTA EXHAUSTED ERROR RETURN.    
      00036  0634 00 4 00143         SXA     WRTN,4        ..     
      00037  0074 00 3 00043         TSX     OPN,3         OPEN THE FILE.     
      00040  0774 00 7 00330  OPOK   AXT     WBFLTH,7      SET UP STORAGE COUNT.    
      00041  0774 00 4 00000   OPX4  AXT     --,4          RESTORE LINKAGE.   
      00042  0020 00 4 00003         TRA     3,4           RETURN.
                              *     
      00043  0074 00 4 00005  OPN    TSX     OPEN,4        OPEN FILE.   
 TD   00044  3 00000 0 00324         TXH     =HW           FOR WRITING. 
 TD   00045  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00046  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00047  3 00000 0 00156         TXH     MODE          MAKE IT PERMANENT IF POSSIBLE. 
 TD   00050  3 00000 0 00320         TXH     =2            PUT IT ON THE DISK.
 TD   00051  3 00000 0 00127  OPERR  TXH     OEXH          IN CASE NO MORE QUOTA AVAILABLE.     
      00052  0074 00 4 00012         TSX     BUFFER,4      ASSIGN A BUFFER FOR THE FILE.  
 TD   00053  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00054  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00055  3 00660 0 00000  BFCALL TXH     --,,TRKLTH    ..     
      00056  0020 00 3 00001         TRA     1,3           RETURN TO CALLER.  
                              *     
                              *     
                              *      ENTRY TO ADD A WORD TO FILE. 
                              *              WRWORD.(WORD)  
                              *     
      00057 -0500 60 4 00001  WRWORD CAL*    1,4           GET WORD TO BE ADDED.    
      00060  0602 00 7 00000   WRNM  SLW     --,7          ADD WORD TO OUTPUT BUFFER.     
      00061  2 00001 7 00077         TIX     RETURN,7,1    COUNT AND CHECK FOR FULL BUFFER.     
      00062  0634 00 4 00076   FULL  SXA     FULX4,4       BUFFER FULL, WRITE IT OUT.     
      00063  0774 00 4 00065         AXT     WRAGN,4       SET UP EXHAUSTED RETURN ADDRESS.     
      00064  0634 00 4 00143         SXA     WRTN,4        ..     
      00065  0074 00 4 00006  WRAGN  TSX     WRWAIT,4      GIVE BUFFER TO SUPERVISOR.     
 TD   00066  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00067  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00070  3 00000 0 00316         TXH     =0            ..     
      00071  3 00330 0 00000  WCALL  TXH     --,,WBFLTH    ..     
 TD   00072  3 00000 0 00321         TXH     =-0           IGNORE POSSIBLE EOF.     
 TD   00073  3 00000 0 00321         TXH     =-0           ..     
 TD   00074  3 00000 0 00124  WRERR  TXH     WEXH          ALLOW ERROR RETURN.
      00075  0774 00 7 00330         AXT     WBFLTH,7      RESET BUFFER POINTER.    
      00076  0774 00 4 00000   FULX4 AXT     --,4          RESTORE LINKAGE.   
      00077  0020 00 4 00002  RETURN TRA     2,4           RETURN TO CALLER.  
                              *     
                              *      FILE.     NO ARGUMENTS.
                              *     
      00100  0634 00 4 00122  FILE   SXA     CL4,4         ENTRY TO CLOSE OUT FILE. 
      00101 -0634 00 7 00103         SXD     *+2,7         FORM COUNT OF WORDS SINCE
      00102  0774 00 7 00330         AXT     WBFLTH,7      LAST BUFFER WAS WRITTEN. 
      00103 -2 00000 7 00117         TNX     NOWR,7,--     IF ZERO, SKIP FINAL WRITE CALL.
      00104 -0634 00 7 00113         SXD     CLCALL,7      NON-ZERO, SET UP WRITE CALL.   
      00105  0774 00 4 00107         AXT     FWR,4         SET UP RETURN ADDRESS FOR EXHAUSTED CASE.  
      00106  0634 00 4 00143         SXA     WRTN,4        ..     
      00107  0074 00 4 00006  FWR    TSX     WRWAIT,4      WRITE OUT PARTIAL BUFFER.
 TD   00110  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00111  3 00000 0 00305         TXH     OUTNAM+1      ..     
 TD   00112  3 00000 0 00316         TXH     =0            ..     
      00113  3 00000 0 00000  CLCALL TXH     --,,--        ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 3     
                  
 TD   00114  3 00000 0 00321         TXH     =-0           IGNORE EOF RETURN. 
 TD   00115  3 00000 0 00321         TXH     =-0           ..     
 TD   00116  3 00000 0 00124         TXH     WEXH          ALLOW ERROR RETURN.
      00117  0074 00 4 00010  NOWR   TSX     CLOSE,4       CLOSE OUT THE FILE.
 TD   00120  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00121  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00122  0774 00 4 00000   CL4   AXT     --,4          RESTORE LINKAGE.   
      00123  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00124  0074 00 4 00010  WEXH   TSX     CLOSE,4       TRACK QUOTA EXHAUSTED, CLOSE FILE.   
 TD   00125  3 00000 0 00304         TXH     OUTNAM        ..     
 TD   00126  3 00000 0 00305         TXH     OUTNAM+1      ..     
      00127  0074 00 4 00001  OEXH   TSX     SETBCD,4      ENTRY FROM OPEN ERROR, COMMENT.
      00130  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00131  0074 00 4 00003         TSX     WRFLX,4       ..     
      00132  0 00011 0 00144                 ERMESS,,9
      00133  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00134  0074 00 4 00002         TSX     SETFUL,4      YES, RESET INDICATOR.    
      00135 -0500 00 0 00317         CAL     =1            SWITCH TO TEMPORARY MODE.
      00136  0601 00 0 00156         STO     MODE          ..     
      00137 -0500 00 0 00155         CAL     NOP           BLOCK FUTURE ERROR RETURN.     
      00140  0602 00 0 00051         SLW     OPERR         ..     
      00141  0602 00 0 00074         SLW     WRERR    
      00142  0074 00 3 00043         TSX     OPN,3         NOW, OPEN IT AGAIN.
      00143  0020 00 0 00000  WRTN   TRA     --            ALL FIXED, RETURN TO MAIN STREAM.    
                              *     
      00144  635121234260     ERMESS BCI     9,TRACK QUOTA EXHAUSTED, TEMPORARY MODE WILL BE USED.    
      00145  506446632160     
      00146  256730216462     
      00147  632524736063     
      00150  254447465121     
      00151  517060444624     
      00152  256066314343     
      00153  602225606462     
      00154  252433606060     
      00155  0761 00 0 00000   NOP   NOP                   INSTRUCTION TO BLOCK ERROR RETURN.   
      00156  0 00000 0 00000  MODE           0             START IN PERMANENT MODE. 
      00157  0 00000 0 00000  MODSW                        TEMP STORAGE FOR 6-BIT,12-BIT INDICATOR.   
                              *     
                              * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     
                              *      SEEK.($NAME1$, $NAME2$, ERRET)     
                              *      ERROR RETURN MEANS FILE NOT FOUND. 
                              *     
      00160 -0500 60 4 00001   SEEK  CAL*    1,4           GET FILE NAME.     
      00161  0602 00 0 00306         SLW     INNAM         ..     
      00162 -0500 60 4 00002         CAL*    2,4           ..     
      00163  0602 00 0 00307         SLW     INNAM+1       ..     
      00164  0634 00 4 00222         SXA     SKX4,4        SAVE LINKAGE.
      00165  0020 00 0 00166   SKSW  TRA     *+1           ENTER ONE-TIME SECTION TO GET BUFFERS.     
                              *                                                  *********************
      00166 -0500 00 0 00314         CAL     RBFSZ         GET A BUFFER FROM SUPERVISOR.  
      00167  0074 00 4 00000         TSX     GETBUF,4      ..     
      00170  0621 00 0 00257         STA     ECALL         STORE BUFFER LOCATION.   
      00171  0621 00 0 00217         STA     STCALL        ..     
      00172 -0625 00 0 00165         STL     SKSW          RESET ONE-TIME SWITCH.   
                              *                                                  *********************
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 4     
                  
      00173 -0500 00 0 00217         CAL     STCALL        SET UP PICKUP INSTRUCTION FOR INDEXING.    
      00174  0361 00 0 00314         ACL     RBFSZ         ..     
      00175  0621 00 0 00242         STA     RDWORD        ..     
      00176  0074 00 4 00011         TSX     FSTATE,4      MAKE SURE FILE IS THERE. 
 TD   00177  3 00000 0 00306         TXH     INNAM         ..     
 TD   00200  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00201  3 00000 0 00321         TXH     =-0           DON'T WANT DATA.   
 TD   00202  3 00000 0 00224         TXH     NOTFN         ERROR RETURN MEANS FILE NOT THERE.   
      00203  0074 00 4 00005         TSX     OPEN,4        OPEN THE FILE FOR READING.     
 TD   00204  3 00000 0 00322         TXH     =HR           ..     
 TD   00205  3 00000 0 00306         TXH     INNAM         ..     
 TD   00206  3 00000 0 00307         TXH     INNAM+1       ..     
      00207  0774 00 6 00660         AXT     RBFLTH,6      SET UP BUFFER COUNTER.   
      00210  0774 00 4 00222         AXT     SKX4,4        SET END OF FILE RETURN.  
      00211  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00212  0600 00 0 00312         STZ     EOFR          CLEAR END OF FILE SWITCH.
      00213  0074 00 4 00007         TSX     RDWAIT,4      GET INITIAL BUFFER LOAD. 
 TD   00214  3 00000 0 00306         TXH     INNAM         ..     
 TD   00215  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00216  3 00000 0 00316         TXH     =0            ..     
      00217  3 00660 0 00000  STCALL TXH     --,,RBFLTH    ..     
 TD   00220  3 00000 0 00265         TXH     EOF           END OF FILE RETURN.
 TD   00221  3 00000 0 00311         TXH     EOFCT         ..     
      00222  0774 00 4 00000   SKX4  AXT     --,4          RESTORE LINKAGE.   
      00223  0020 00 4 00004         TRA     4,4           RETURN TO CALLER.  
                              *     
      00224  0074 00 4 00001  NOTFN  TSX     SETBCD,4      FILE NOT FOUND, COMMENT. 
      00225  0601 00 0 00157         STO     MODSW         SAVE OLD CHARACTER MODE SETTING.     
      00226  0074 00 4 00004         TSX     WRFLXA,4      START UP COMMENT.  
      00227  0 00001 0 00323                 =H FILE ,,1   ..     
      00230  0074 00 4 00004         TSX     WRFLXA,4      INSERT FILE NAME.  
      00231  0 00002 0 00306                 INNAM,,2      ..     
      00232  0074 00 4 00003         TSX     WRFLX,4       END OF COMMENT.    
      00233  0 00002 0 00240                 ECM,,2        ..     
      00234  0520 00 0 00157         ZET     MODSW         SHOULD 12-BIT INDICATOR BE RESET.    
      00235  0074 00 4 00002         TSX     SETFUL,4      YES, RESET MODE.   
      00236  0534 00 4 00222         LXA     SKX4,4        GIVE ERROR RETURN. 
      00237  0020 60 4 00003         TRA*    3,4           ..     
                              *     
      00240  604546636026     ECM    BCI     2, NOT FOUND.  
      00241  466445243360     
                              *     
                              *      ENTRY TO OBTAIN WORD FROM FILE.    
                              *              WORD = RDWORD.(EOF)  
                              *     
      00242  0500 00 6 00000  RDWORD CLA     --,6          GET WORD FROM INPUT BUFFER.    
      00243  2 00001 6 00264         TIX     GOBACK,6,1    INDEX, AND CHECK FOR EMPTY BUFFER.   
      00244  0520 00 0 00312         ZET     EOFR          BUFFER EMPTY, HAS END OF FILE OCCURRED.    
      00245  0020 60 4 00001         TRA*    1,4           YES, GIVE EOF RETURN.    
      00246  0601 00 0 00310         STO     RTEMP         NO, SAVE WORD AND GET SOME MORE DATA.
      00247  0634 00 4 00263         SXA     EMPX4,4       SAVE LINKAGE, ALSO.
      00250  0774 00 6 00660         AXT     RBFLTH,6      RESET BUFFER POINTER.    
      00251  0774 00 4 00262         AXT     EMPGT,4       SET END OF FILE RETURN.  
      00252  0634 00 4 00274         SXA     EOFRTN,4      ..     
      00253  0074 00 4 00007         TSX     RDWAIT,4      GET ANOTHER BUFFER LOAD OF DATA.     
 TD   00254  3 00000 0 00306         TXH     INNAM         ..     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 5     
                  
 TD   00255  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00256  3 00000 0 00316         TXH     =0            ..     
      00257  3 00660 0 00000  ECALL  TXH     --,,RBFLTH    ..     
 TD   00260  3 00000 0 00265         TXH     EOF           ..     
 TD   00261  3 00000 0 00311         TXH     EOFCT         ..     
      00262  0500 00 0 00310   EMPGT CLA     RTEMP         RESTORE WORD FOR THIS CALL.    
      00263  0774 00 4 00000   EMPX4 AXT     --,4          RESTORE LINKAGE.   
      00264  0020 00 4 00002  GOBACK TRA     2,4           RETURN TO CALLER.  
                              *     
      00265 -0625 00 0 00312  EOF    STL     EOFR          END OF FILE REACHED, SET SWITCH.     
      00266 -0500 00 0 00311         CAL     EOFCT         GET COUNT OF WORDS LEFT. 
      00267  0361 00 0 00317         ACL     =1            BUGGER WORD COUNT. 
      00270  0734 00 6 00000         PAX     0,6           SET WORD COUNTER.  
      00271  0361 00 0 00257         ACL     ECALL         ADJUST PICKUP INSTRUCTION.     
      00272  0621 00 0 00242         STA     RDWORD        ..     
      00273  0074 00 4 00275         TSX     ENDRD,4       TURN OFF FILE.     
      00274  0020 00 0 00000  EOFRTN TRA     --            RETURN TO END OF RDFILE CALLING SEQUENCE.  
                              *     
                              *      ENTRY TO CLOSE INPUT FILE.   
                              *      ENDRD.     
                              *     
      00275  0634 00 4 00302  ENDRD  SXA     ENDX4,4       SAVE LINKAGE.
      00276  0074 00 4 00010         TSX     CLOSE,4       CLOSE FILE.  
 TD   00277  3 00000 0 00306         TXH     INNAM         ..     
 TD   00300  3 00000 0 00307         TXH     INNAM+1       ..     
 TD   00301  3 00000 0 00302         TXH     *+1           IGNORE ANY ERROR RETURN. 
      00302  0774 00 4 00000  ENDX4  AXT     --,4          RESTORE LINKAGE.   
      00303  0020 00 4 00001         TRA     1,4           ..     
                              *     
      00304  545454545454     OUTNAM BCI     2,************  NAME OF OUTPUT FILE.   
      00305  545454545454     
      00306  545454545454      INNAM BCI     2,************  NAME OF INPUT FILE.    
      00307  545454545454     
      00310  0 00000 0 00000   RTEMP                       STORAGE FOR WORD.  
      00311  0 00000 0 00000  EOFCT                        STORAGE FOR END OF FILE COUNTER.     
      00312  0 00000 0 00312   EOFR          *             SWITCH FOR END OF FILE MET.    
                              *     
                       00660  TRKLTH EQU     432           DISK TRACK LENGTH. 
      00313  0 00000 0 00660   TRKSZ         TRKLTH        WORD CONTAINING TRACK LENGTH.  
                       00660  RBFLTH EQU     TRKLTH        READ BUFFER LENGTH.
                       00330  WBFLTH EQU     TRKLTH/2      WRITE BUFFER LENGTH.     
      00314  0 00000 0 00660  RBFSZ          RBFLTH        WORD CONTAINING READ BUFFER SIZE.    
      00315  0 00000 0 00330  WBFSZ          WBFLTH        WORD CONTAINING WRITE BUFFER SIZE.   
                              *     
                                     END  
                  
        LITERALS  
      00316  000000000000     
      00317  000000000001     
      00320  000000000002     
      00321  400000000000     
      00322  516060606060     
      00323  602631432560     
      00324  666060606060     
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        325 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        122    CL4   100
        240    ECM   233
        265    EOF   220,  260
        107    FWR   105
        155    NOP   137
         43    OPN    37,  142
         22    OSW    34
        312   EOFR   212,  244,  265
        100   FILE     0
         62   FULL      
        156   MODE    47,  136
        117   NOWR   103
        127   OEXH    51
          5   OPEN    43,  203
         40   OPOK    35
         41   OPX4    21
        160   SEEK     0
        165   SKSW   172
        222   SKX4   164,  210,  236
        124   WEXH    74,  116
         60   WRNM    30
        143   WRTN    36,   64,  106
         10  CLOSE   117,  124,  276
        257  ECALL   170,  271
        262  EMPGT   251
        263  EMPX4   247
        275  ENDRD     0,  273
        302  ENDX4   275
        311  EOFCT   221,  261,  266
         76  FULX4    62
        306  INNAM   161,  163,  177,  200,  205,  206,  214,  215,  231,  254,  255,  277,  300
        157  MODSW   130,  133,  225,  234
        224  NOTFN   202
         51  OPERR   140
        314  RBFSZ   166,  174
        310  RTEMP   246,  262
        313  TRKSZ    31
        315  WBFSZ    23,   27
         71  WCALL    25
         65  WRAGN    63
         74  WRERR   141
          3  WRFLX   131,  232
         15 ASSIGN     0
         55 BFCALL    33
         12 BUFFER    52
        113 CLCALL    26,  104
        274 EOFRTN   211,  252
        144 ERMESS   132
         11 FSTATE   176
          0 GETBUF    24,   32,  167
        264 GOBACK   243
1            BUFFER CONTROL ROUTINE FOR DISK INPUT AND OUTPUT.                                   PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        304 OUTNAM    16,   20,   45,   46,   53,   54,   66,   67,  110,  111,  120,  121,  125,  126
        660 RBFLTH   207,  217,  250,  257,  314
          7 RDWAIT   213,  253
        242 RDWORD     0,  175,  272
         77 RETURN    61
          1 SETBCD   127,  224
          2 SETFUL   134,  235
        217 STCALL   171,  173
        660 TRKLTH    55,  313,  314
        330 WBFLTH    40,   71,   75,  102,  314,  315
          4 WRFLXA   226,  230
          6 WRWAIT    65,  107
         57 WRWORD     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 1     
                  
                              *      USAGE  CLRNAM.(NAME1, NAME2, CANT, SW)   
                              *        FILE NAME1 NAME2 WILL BE CHECKED FOR AND     
                              *        DELETED IF POSSIBLE.  IF SW
                              *        IS TRUE, USER WILL BE ASKED BEFORE DELETING  
                              *        THE OLD FILE.  
                              *     
                       00012         ENTRY   CLRNAM        CLEAR FILE NAME.   
                              *     
                                     EXTERN  SETFUL,SETBCD,WRFLX,WRFLXA,RDFLXA
                                     EXTERN  FSTATE,CHFILE,DELFIL 
                              *     
                  
        TRANSFER VECTOR 
      00000  622563266443     SETFUL
      00001  622563222324     SETBCD
      00002  665126436760     WRFLX 
      00003  665126436721     WRFLXA
      00004  512426436721     RDFLXA
      00005  266263216325     FSTATE
      00006  233026314325     CHFILE
      00007  242543263143     DELFIL
                  
            LINKAGE DIRECTOR  
      00010  000000000000     
      00011  234351452144     
                  
      00012 -0500 60 4 00001  CLRNAM CAL*    1,4           GET FILE NAME.     
      00013  0602 00 0 00121         SLW     N1            ..     
      00014 -0500 60 4 00002         CAL*    2,4           SECONDARY NAME.    
      00015  0602 00 0 00122         SLW     N2            ..     
      00016  0634 00 4 00147         SXA     SV4,4         SAVE LINKAGE.
      00017  0074 00 4 00005         TSX     FSTATE,4      CHECK STATE OF FILE.     
 TD   00020  3 00000 0 00121         TXH     N1            NAME   
 TD   00021  3 00000 0 00122         TXH     N2            NAME   
      00022  3 00010 0 00156         TXH     DATA,,8       FILE STATE   
 TD   00023  3 00000 0 00112         TXH     FSTERR        IN CASE OF ERROR   
 TD   00024  3 00000 0 00155         TXH     ERNO          GATHER ERROR NUMBER.     
      00025  0441 00 0 00157         LDI     MODE          CHECK MODE OF FILE.
      00026 -0054 00  400000         LFT     400000        IS MODE NEGATIVE.  
      00027  0020 00 0 00100         TRA     LINKED        YES, FILE IS LINKED.     
      00030  0600 00 0 00154         STZ     PROTEC        ASSUME NOT PROTECTED.    
      00031  0056 00  000100         RNT     100           CHECK PROTECTED BIT.     
      00032  0020 00 0 00035         TRA     CKASK         NOT PROTECTED, SHOULD WE ASK ANYWAY. 
      00033 -0625 00 0 00154         STL     PROTEC        PROTECTED, SET SWITCH FOR LONG COMMENT.    
      00034  0020 00 0 00040         TRA     ASK           GO ASK PERMISSION TO DELETE FILE.    
      00035  0534 00 4 00147  CKASK  LXA     SV4,4         GET LINKAGE TO ASK SWITCH.     
      00036 -0520 60 4 00004         NZT*    4,4           SHOULD WE ASK PERMISSION ANYWAY.     
      00037  0020 00 0 00065         TRA     DELETE        NO, GO DELETE FILE.
      00040  0074 00 4 00000  ASK    TSX     SETFUL,4      SET CHARACTER MODE SWITCH.     
      00041  0074 00 4 00003         TSX     WRFLXA,4      BEGIN THE COMMENT. 
      00042  0 00003 0 00116                 MI,,3         ..     
      00043  0074 00 4 00001         TSX     SETBCD,4      SWITCH TO BCD FOR FILE NAME.   
      00044  0074 00 4 00003         TSX     WRFLXA,4      WRITE OUT FILE NAME.     
      00045  0 00002 0 00121                 N1,,2    
      00046  0074 00 4 00000         TSX     SETFUL,4      BACK TO FULL MODE. 
      00047 -0520 00 0 00154         NZT     PROTEC        SHOULD WE CLAIM IT IS PROTECTED.     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 2     
                  
      00050  0020 00 0 00053         TRA     SKPPCM        NO, SKIP THAT PART.
      00051  0074 00 4 00003         TSX     WRFLXA,4      YES, ANNOUNC PROTECTED PART.   
      00052  0 00006 0 00123                 ISPTC,,6      ..     
      00053  0074 00 4 00003  SKPPCM TSX     WRFLXA,4      NOW ASK FOR PERMISSION.  
      00054  0 00012 0 00131                 DOYOU,,10     ..     
      00055  0074 00 4 00001         TSX     SETBCD,4      SWITCH SO ERASE WORKS.   
      00056  0074 00 4 00004         TSX     RDFLXA,4 
      00057  0 00001 0 00150                 IN,,1         GET ONE WORD.
      00060  0074 00 4 00000         TSX     SETFUL,4      RESTORE MODE.
      00061 -0500 00 0 00150         CAL     IN            GET THAT WORD.     
      00062  0771 00 0 00022         ARS     18            GET FIRST THREE CHARACTERS.    
      00063  0322 00 0 00170         ERA     =H000YES      DID HE SAY YES.    
      00064 -0100 00 0 00076         TNZ     ERTN          NO, GIVE ERROR RETURN.   
      00065  0074 00 4 00006  DELETE TSX     CHFILE,4      GOODY, WE CAN DELETE IT. 
 TD   00066  3 00000 0 00121         TXH     N1            MAKE SURE IT IS DELETEABLE.    
 TD   00067  3 00000 0 00122         TXH     N2            ..     
 TD   00070  3 00000 0 00166         TXH     =1            BY CHANGING ITS MODE TO TEMPORARY.   
      00071  0074 00 4 00007         TSX     DELFIL,4      DELETE THE SILLY THING.  
 TD   00072  3 00000 0 00121         TXH     N1            ..     
 TD   00073  3 00000 0 00122         TXH     N2            ..     
      00074  0534 00 4 00147  RTN    LXA     SV4,4         RESTORE THE LINKAGE.     
      00075  0020 00 4 00005         TRA     5,4           RETURN TO CALLER.  
                              *     
      00076  0534 00 4 00147  ERTN   LXA     SV4,4         ERROR RETURN, FILE CANNOT BE DELETED.
      00077  0020 60 4 00003         TRA*    3,4           RETURN THROUGH ERROR RETURN.   
                              *     
      00100  0074 00 4 00000  LINKED TSX     SETFUL,4      FILE IS LINKED, COMMENT AND GIVE UP. 
      00101  0074 00 4 00003         TSX     WRFLXA,4      START THE COMMENT. 
      00102  0 00003 0 00116                 MI,,3         ..     
      00103  0074 00 4 00001         TSX     SETBCD,4      SWITCH MODE FOR FILE NAME.     
      00104  0074 00 4 00003         TSX     WRFLXA,4      TYPE FILE NAME.    
      00105  0 00002 0 00121                 N1,,2         ..     
      00106  0074 00 4 00000         TSX     SETFUL,4      SWITCH FOR REST OF COMMENT.    
      00107  0074 00 4 00002         TSX     WRFLX,4       END THIS PART WITH A C.R.
      00110  0 00004 0 00143                 ISLNK,,4      ..     
      00111  0020 00 0 00076         TRA     ERTN          NOW GIVE AN ERROR RETURN.
                              *     
      00112  0500 00 0 00155  FSTERR CLA     ERNO          ERROR RETURN FROM FSTATE, FIND OUT WHY.    
      00113  0402 00 0 00167         SUB     =3            RETURN 3 MEANS FILE NOT FOUND. 
      00114 -0100 00 0 00100         TNZ     LINKED        WRONG ERROR RETURN, ASSUME LINKED.   
      00115  0020 00 0 00074         TRA     RTN           FILE NOT FOUND, NAME IS OK.    
                              *     
                              *                            DATA, COMMENTS, ETC.     
                              *     
      00116  004601430124     MI     BCI     3,0O1L1D0 1F1I1L1E0  
      00117  006001260131     
      00120  014301250060     
                              *     
      00121  0 00000 0 00000  N1                           STORAGE FOR FILE NAME.   
      00122  0 00000 0 00000  N2                           SECONDARY NAME.    
                              *     
      00123  006001310162     ISPTC  BCI     1,0 1I1S 
      00124 +006001330057            OCT     006001330057  BLANK, RED SHIFT, NULL.  
      00125  004700510046            BCI     3,0P0R0O0T0E0C0T0E0D 
      00126  006300250023     
      00127  006300250024     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 3     
                  
      00130 +013200330060            OCT     013200330060  BLACK SHIFT, PERIOD, BLANK.    
      00131  006000400040     DOYOU  BCI     9,0 0-0-0D1O0 1Y1O1U0 1W1I1S1H0 1T1O0 1D1E1L1E1T1E0 1I1T 
      00132  002401460060     
      00133  017001460164     
      00134  006001660131     
      00135  016201300060     
      00136  016301460060     
      00137  012401250143     
      00140  012501630125     
      00141  006001310163     
      00142 +015600600060            OCT     015600600060  TERMINAL QUESTION MARK.  
                              *     
      00143  006001310162     ISLNK  BCI     4,0 1I1S0 1L1I1N1K1E1D0.   
      00144  006001430131     
      00145  014501420125     
      00146  012400336060     
                              *     
      00147  0 00000 0 00000  SV4                          STORAGE FOR CALLING LINKAGE.   
      00150                   IN     BSS     4             FOR INPUT WORD.    
      00154  0 00000 0 00000  PROTEC                       SWITCH FOR PROTECTED FILE.     
      00155  0 00000 0 00000  ERNO                         STORAGE FOR ERROR NUMBER.
      00156                   DATA   BSS     8             FOR STATE INFORMATION.   
                       00161  DEVICE EQU     DATA+3   
                       00157  MODE   EQU     DATA+1   
                              *     
                                     END  
                  
        LITERALS  
      00166  000000000001     
      00167  000000000003     
      00170  000000702562     
1            ROUTINE TO MAKE SURE FILE NAME IS USEABLE.                                          PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        171 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        150     IN    57,   61
        116     MI    42,  102
        121     N1    13,   20,   45,   66,   72,  105
        122     N2    15,   21,   67,   73
         40    ASK    34
         74    RTN   115
        147    SV4    16,   35,   74,   76
        156   DATA    22,  166
        155   ERNO    24,  112
         76   ERTN    64,  111
        157   MODE    25,  166
         35  CKASK    32
        131  DOYOU    54
        143  ISLNK   110
        123  ISPTC    52
          2  WRFLX   107
          6 CHFILE    65
         12 CLRNAM     0
         65 DELETE    37
          7 DELFIL    71
        161 DEVICE   166
          5 FSTATE    17
        112 FSTERR    23
        100 LINKED    27,  114
        154 PROTEC    30,   33,   47
          4 RDFLXA    56
          1 SETBCD    43,   55,  103
          0 SETFUL    40,   46,   60,  100,  106
         53 SKPPCM    50
          3 WRFLXA    41,   44,   51,   53,  101,  104
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 1     
                  
                              *        J. H. SALTZER, MAY, 1965.  
                              *     
                       00004         ENTRY   RENAME        RENAME FILE. 
                              *     
                                     EXTERN CHFILE,WRFLX    
                              *     
                  
        TRANSFER VECTOR 
      00000  233026314325     CHFILE
      00001  665126436760     WRFLX 
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  512545214425     
                  
      00004  0500 60 4 00001  RENAME CLA*    1,4           GET FILE NAMES.    
      00005  0601 00 0 00071         STO     OLD1          ..     
      00006  0500 60 4 00002         CLA*    2,4           ..     
      00007  0601 00 0 00072         STO     OLD2          ..     
      00010  0601 00 0 00074         STO     NEW2          ASSUME NO CHANGE IN SECONDARY NAMES. 
      00011  0500 60 4 00003         CLA*    3,4           ..     
      00012  0601 00 0 00073         STO     NEW1          ..     
      00013  0560 00 4 00004         LDQ     4,4           CHECK FOR TXH
      00014  0500 00 0 00076         CLA     =O300000000000 ..    
      00015  0040 00 0 00020         TLQ     SKPN2         NO TXH, SECONDARY NAME UNCHANGED.    
      00016  0500 60 4 00004         CLA*    4,4           TXH, CHANGE SECONDARY NAME.    
      00017  0601 00 0 00074         STO     NEW2          ..     
      00020  0634 00 4 00036  SKPN2  SXA     RETURN,4      SAVE LINKAGE.
      00021  0074 00 4 00000         TSX     CHFILE,4      CHANGE NAME WITHOUT CHANGING MODE.   
 TD   00022  3 00000 0 00071         TXH     OLD1          ..     
 TD   00023  3 00000 0 00072         TXH     OLD2          ..     
 TD   00024  3 00000 0 00077         TXH     =-0           MODE UNCHANGED.    
 TD   00025  3 00000 0 00073         TXH     NEW1          ..     
 TD   00026  3 00000 0 00074         TXH     NEW2          ..     
      00027  0074 00 4 00000         TSX     CHFILE,4      CHANGE MODE WITHOUT CHANGING NAME.   
 TD   00030  3 00000 0 00073         TXH     NEW1          ..     
 TD   00031  3 00000 0 00074         TXH     NEW2          ..     
 TD   00032  3 00000 0 00075         TXH     =0            PERMANENT MODE.    
 TD   00033  3 00000 0 00077         TXH     =-0           NAME UNCHANGED.    
 TD   00034  3 00000 0 00077         TXH     =-0           ..     
 TD   00035  3 00000 0 00040         TXH     CHERR         IN CASE MODE UNCHANGEABLE.     
      00036  0774 00 4 00000  RETURN AXT     --,4          RESTORE LINKAGE.   
      00037  0020 00 4 00001         TRA     1,4           RETURN TO CALLER.  
                              *     
      00040  0074 00 4 00001  CHERR  TSX     WRFLX,4       ASSUME TRACK QUOTA EXHAUSTED, AND COMMENT. 
      00041  0 00010 0 00045                 TRKQUO,,8     ..     
      00042  0074 00 4 00001         TSX     WRFLX,4       MENTION THAT NEW FILE IS TEMP MODE.  
      00043  0 00013 0 00055                 TMPMOD,,11    ....   
      00044  0020 00 0 00036         TRA     RETURN        EXIT.  
                              *     
                              *              COMMENTS AND STORAGE.
                              *     
      00045  006301510121     TRKQUO BCI     8,0T1R1A1C1K0 1Q1U1O1T1A0 0E0X0H0A0U0S0T0E0D0.     
      00046  012301420060     
      00047  015001640146     
      00050  016301210060     
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 2     
                  
      00051  002500670030     
      00052  002100640062     
      00053  006300250024     
      00054  003360606060     
                              *     
      00055  007001460164     TMPMOD BCI     5,0Y1O1U1R0 1N1E1W0 1F1I1L1E0 1I 
      00056  015100600145     
      00057  012501660060     
      00060  012601310143     
      00061  012500600131     
      00062 +016200600133            OCT     016200600133  S, BLANK, RED SHIFT.     
      00063  006300250044            BCI     3,0T0E0M0P0O0R0A0R0Y 
      00064  004700460051     
      00065  002100510070     
      00066 +013200600144            OCT     013200600144  BLACK SHIFT, BLANK, SMALL M.   
      00067  014601240125            BCI     2,1O1D1E0.     
      00070  003360606060     
                              *     
      00071  0 00000 0 00000  OLD1  
      00072  0 00000 0 00000  OLD2  
      00073  0 00000 0 00000  NEW1  
      00074  0 00000 0 00000  NEW2  
                              *     
                                     END  
                  
        LITERALS  
      00075  000000000000     
      00076  300000000000     
      00077  400000000000     
1            ROUTINE TO RENAME A FILE, FORCING PERMANENT MODE IS POSSIBLE.                       PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        100 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         73   NEW1    12,   25,   30
         74   NEW2    10,   17,   26,   31
         71   OLD1     5,   22
         72   OLD2     7,   23
         40  CHERR    35
         20  SKPN2    15
          1  WRFLX    40,   42
          0 CHFILE    21,   27
          4 RENAME     0
         36 RETURN    20,   44
         55 TMPMOD    43
         45 TRKQUO    41
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1     MAD PROGRAM LISTING ... ... ...                 FILE    6TYP   MAD            02/08/68    1745.8
-                 
                 ..  TYPEWRITER INPUT CHARACTER CONTROL ROUTINE.                                       LM00001    
                 ..  USAGE. . .   COUNT = TYPEIN.(BUFFER, BUFSIZ, ERASE, KILL)                         LM00002    
                           J. H. SALTZER, JANUARY, 1965.                                               LM00003    
                                                                                                       LM00004    
                  EXTERNAL FUNCTION(LINE, BUFSIZ)                                                 *001 LM00005    
                                                                                                       LM00006    
                  NORMAL MODE IS INTEGER                                                          *002 LM00007    
                  VECTOR VALUES E1 = 0137K                                                        *003 LM00008    
                  VECTOR VALUES K1 = 0156K                                                        *004 LM00009    
                  VECTOR VALUES NBITS = 12                                                        *005 LM00010    
                  VECTOR VALUES NULL = 0057K                                                      *006 LM00011    
                  VECTOR VALUES ERASE = 0504K                                                     *007 LM00012    
                  VECTOR VALUES KILL = 0506K                                                      *008 LM00013    
                  VECTOR VALUES RETURN = 0055K                                                    *009 LM00014    
                  VECTOR VALUES WRDSIZ = 36                                                       *010 LM00015    
                  VECTOR VALUES CHMASK = 7777K                                                    *011 LM00016    
                                                                                                       LM00017    
                  ENTRY TO SETERS.                                                                *012 LM00018    
                    ERASE = LINE                                                                  *013 LM00019    
                    FUNCTION RETURN                                                               *014 LM00020    
                                                                                                       LM00021    
                  ENTRY TO SETKIL.                                                                *015 LM00022    
                    KILL = LINE                                                                   *016 LM00023    
                    FUNCTION RETURN                                                               *017 LM00024    
                                                                                                       LM00025    
                  ENTRY TO CANON.                                                                 *018 LM00026    
                    FUNCTION RETURN                                                               *019 LM00027    
                                                                                                       LM00028    
                  ENTRY TO TYPEIN.                                                                *020 LM00029    
                    SIZE = 0                                                                      *021 LM00030    
                    TYLINE.                                                                       *022 LM00031    
       LOOP         WORD = TYWORD.(0)                                                             *023 LM00032    
                    THROUGH DISECT, FOR I = WRDSIZ-NBITS,-NBITS, I .L. 0                          *024 LM00033    
                      CHAR = (WORD.RS.I) .A. CHMASK                                               *025 LM00034    
                      WHENEVER CHAR .E. ERASE .OR. CHAR .E. E1                                    *026 LM00035    
                        WHENEVER SIZE .G. 0, SIZE = SIZE - 1                                      *027 LM00036    
                      OR WHENEVER CHAR .E. KILL .OR. CHAR .E. K1                                  *028 LM00037    
                        SIZE = 0                                                                  *029 LM00038    
                      OR WHENEVER CHAR .E. RETURN .OR. CHAR.RS.6 .E. RETURN                       *030 LM00039    
                        TRANSFER TO UND                                                           *031 LM00040    
                      OR WHENEVER CHAR .A. 0400K .E. 0                                            *032 LM00041    
                        SIZE = SIZE + 1                                                           *033 LM00042    
                        LINE(SIZE) = CHAR.A.77K                                                   *034 LM00043    
                      END OF CONDITIONAL                                                          *035 LM00044    
       DISECT         WHENEVER SIZE .GE. BUFSIZ, TRANSFER TO UND                                  *036 LM00045    
                    TRANSFER TO LOOP                                                              *037 LM00046    
      UND           SIZE = SIZE + 1                                                               *038 LM00047    
                    LINE(SIZE) = RETURN                                                           *039 LM00048    
                    FUNCTION RETURN SIZE                                                          *040 LM00049    
                                                                                                       LM00050    
                 ..     TYPEWRITER OUTPUT CHARACTER CONTROL ROUTINE.                                   LM00051    
                 ..     USAGE. . .    TYPOUT.(LINE, LENGTH)                                            LM00052    
                                                                                                       LM00053    
                  ENTRY TO TYPOUT.                                                                *041 LM00054    
                    K = 0                                                                         *042 LM00055    
                    SETFUL.                                                                       *043 LM00056    
                    THROUGH PRLOOP, FOR J = 1, 1, J .G. BUFSIZ                                    *044 LM00057    
                      TWORD = (TWORD .LS. NBITS) .V. LINE(J)                                      *045 LM00058    
                      K = K + 1                                                                   *046 LM00059    
                      WHENEVER K .GE. WRDSIZ/NBITS                                                *047 LM00060    
                        K = 0                                                                     *048 LM00061    
                        PRWORD.(TWORD)                                                            *049 LM00062    
       PRLOOP         END OF CONDITIONAL                                                          *050 LM00063    
                    THROUGH NULPK, FOR K = K, 1, K.GE. WRDSIZ/NBITS                               *051 LM00064    
       NULPK          TWORD = (TWORD.LS.NBITS) .V. NULL                                           *052 LM00065    
                    PRWORD.(TWORD)                                                                *053 LM00066    
                    PRBUFF.                                                                       *054 LM00067    
                    FUNCTION RETURN                                                               *055 LM00068    
                                                                                                       LM00069    
                  ENTRY TO HOL.                                                                   *056 LM00070    
                    FUNCTION RETURN LINE .A. 77K                                                  *057 LM00071    
                                                                                                       LM00072    
                  END OF FUNCTION                                                                 *058 LM00073    
1MAD PROGRAM,TYPE NOV 1963      (ALL NUMBERS ARE OCTAL)     
0TOTAL LOCATIONS   00351 TRANSFER VECTOR LENGTH  00006 PROGRAM BEGINS    00037
0 PROGRAM IS AN EXTERNAL FUNCTION.   THE FOLLOWING ARE ENTRIES    
      HOL    00314   0        TYPOUT 00212   0        TYPEIN 00060   0        CANON  00054   0        SETKIL 00046   0  
      SETERS 00040   0                                                                                                  
0VARIABLE STORAGE (A=ARRAY,C=COMMON,E=ERASABLE,DIGIT=MODE)  
      CHAR   00011   1        I      00015   1        K      00021   1        NULPK  00006   4        TWORD  00026   1  
      CHMASK 00012 A 1        J      00016   1        LOOP   00007   4        PRLOOP 00006   4        UND    00010   4  
      DISECT 00006   4        K1     00017 A 1        NBITS  00022 A 1        RETURN 00024 A 1        WORD   00027   1  
      E1     00013 A 1        KILL   00020 A 1        NULL   00023 A 1        SIZE   00025   1        WRDSIZ 00030 A 1  
      ERASE  00014 A 1                                                                                                  
0FUNCTION DICTIONARY    
      EXIT   00000   1        PRBUFF 00001   1        PRWORD 00002   1        SETFUL 00003   1        TYLINE 00004   1  
      TYWORD 00005   1                                                                                                  
0ABSOLUTE CONSTANTS     
 00034 +000000000077     00035 +000000000400     00033 +000000000006     00031 +000000000000     00032 +000000000001    
 00036 +233000000000                                                                                                    
0STATEMENT DICTIONARY   
 00007 TXL -300070000065       00010 TXL -300204000201                                                                  
0PROGRAM    
                 EXTERNAL FUNCTION(LINE, BUFSIZ)                                    001  LM00005
                 NORMAL MODE IS INTEGER                                             002  LM00007
                 VECTOR VALUES E1 = 0137K                                           003  LM00008
 00013     +0 00000 0 00137                                                                                             
                 VECTOR VALUES K1 = 0156K                                           004  LM00009
 00017     +0 00000 0 00156                                                                                             
                 VECTOR VALUES NBITS = 12                                           005  LM00010
 00022     +0 00000 0 00014                                                                                             
                 VECTOR VALUES NULL = 0057K                                         006  LM00011
 00023     +0 00000 0 00057                                                                                             
                 VECTOR VALUES ERASE = 0504K                                        007  LM00012
 00014     +0 00000 0 00504                                                                                             
                 VECTOR VALUES KILL = 0506K                                         008  LM00013
 00020     +0 00000 0 00506                                                                                             
                 VECTOR VALUES RETURN = 0055K                                       009  LM00014
 00024     +0 00000 0 00055                                                                                             
                 VECTOR VALUES WRDSIZ = 36                                          010  LM00015
 00030     +0 00000 0 00044                                                                                             
                 VECTOR VALUES CHMASK = 7777K                                       011  LM00016
 00012     +0 00000 0 07777                                                                                             
                 ENTRY TO SETERS.                                                   012  LM00018
 00037 TRA +0 02000 0 00042    00040 SXA +0 63400 2 00324    00041 TSX +0 07400 2 00324                                 
                   ERASE = LINE                                                     013  LM00019
 00042 CLA +0 50000 0 00024    00043 STO +0 60100 0 00014                                                               
                   FUNCTION RETURN                                                  014  LM00020
 00044 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO SETKIL.                                                   015  LM00022
 00045 TRA +0 02000 0 00050    00046 SXA +0 63400 2 00324    00047 TSX +0 07400 2 00324                                 
                   KILL = LINE                                                      016  LM00023
 00050 CLA +0 50000 0 00024    00051 STO +0 60100 0 00020                                                               
                   FUNCTION RETURN                                                  017  LM00024
 00052 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO CANON.                                                    018  LM00026
 00053 TRA +0 02000 0 00056    00054 SXA +0 63400 2 00324    00055 TSX +0 07400 2 00324                                 
                   FUNCTION RETURN                                                  019  LM00027
 00056 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO TYPEIN.                                                   020  LM00029
 00057 TRA +0 02000 0 00062    00060 SXA +0 63400 2 00324    00061 TSX +0 07400 2 00324                                 
                   SIZE = 0                                                         021  LM00030
 00062 CLA +0 50000 0 00031    00063 STO +0 60100 0 00025                                                               
                   TYLINE.                                                          022  LM00031
 00064 TSX +0 07400 4 00004                                                                                             
       LOOP        WORD = TYWORD.(0)                                                023  LM00032
 00065 TSX +0 07400 4 00005    00066 TXH +3 00000 0 00031    00067 STO +0 60100 0 00027                                 
                   THROUGH DISECT, FOR I = WRDSIZ-NBITS,-NBITS, I .L. 0             024  LM00033
 00070 CLA +0 50000 0 00030    00071 SUB +0 40200 0 00022    00072 STO +0 60100 0 00015    00073 TRA +0 02000 0 00077   
 00074 CLS +0 50200 0 00022    00075 ADD +0 40000 0 00015    00076 STO +0 60100 0 00015    00077 CLA +0 50000 0 00015   
 00100 SUB +0 40200 0 00031    00101 TZE +0 10000 0 00103    00102 TMI -0 12000 0 00200                                 
                     CHAR = (WORD.RS.I) .A. CHMASK                                  025  LM00034
 00103 CAL -0 50000 0 00015    00104 STA +0 62100 0 00106    00105 CAL -0 50000 0 00027    00106 LGR -0 76500 0 00000   
 00107 ANA -0 32000 0 00012    00110 SLW +0 60200 0 00011                                                               
                     WHENEVER CHAR .E. ERASE .OR. CHAR .E. E1                       026  LM00035
 00111 CLA +0 50000 0 00011    00112 SUB +0 40200 0 00013    00113 TZE +0 10000 0 00117    00114 CLA +0 50000 0 00011   
 00115 SUB +0 40200 0 00014    00116 TNZ -0 10000 0 00127                                                               
                       WHENEVER SIZE .G. 0, SIZE = SIZE - 1                         027  LM00036
 00117 CLA +0 50000 0 00025    00120 SUB +0 40200 0 00031    00121 TZE +0 10000 0 00126    00122 TMI -0 12000 0 00126   
 00123 CLA +0 50000 0 00025    00124 SUB +0 40200 0 00032    00125 STO +0 60100 0 00025                                 
                     OR WHENEVER CHAR .E. KILL .OR. CHAR .E. K1                     028  LM00037
 00126 TRA +0 02000 0 00172    00127 CLA +0 50000 0 00011    00130 SUB +0 40200 0 00017    00131 TZE +0 10000 0 00135   
 00132 CLA +0 50000 0 00011    00133 SUB +0 40200 0 00020    00134 TNZ -0 10000 0 00140                                 
                       SIZE = 0                                                     029  LM00038
 00135 CLA +0 50000 0 00031    00136 STO +0 60100 0 00025                                                               
                     O'R CHAR .E. RETURN .OR. CHAR.RS.6 .E. RETURN                  030  LM00039
 00137 TRA +0 02000 0 00172    00140 CAL -0 50000 0 00033    00141 STA +0 62100 0 00143    00142 CAL -0 50000 0 00011   
 00143 LGR -0 76500 0 00000    00144 SLW +0 60200 0 00346    00145 CLA +0 50000 0 00346    00146 SUB +0 40200 0 00024   
 00147 TZE +0 10000 0 00153    00150 CLA +0 50000 0 00011    00151 SUB +0 40200 0 00024    00152 TNZ -0 10000 0 00155   
                       TRANSFER TO UND                                              031  LM00040
 00153 TRA +0 02000 0 00010                                                                                             
                     O'R CHAR .A. 0400K .E. 0                                       032  LM00041
 00154 TRA +0 02000 0 00172    00155 CAL -0 50000 0 00011    00156 ANA -0 32000 0 00035    00157 SLW +0 60200 0 00346   
 00160 CLA +0 50000 0 00346    00161 SUB +0 40200 0 00031    00162 TNZ -0 10000 0 00172                                 
                       SIZE = SIZE + 1                                              033  LM00042
 00163 CLA +0 50000 0 00025    00164 ADD +0 40000 0 00032    00165 STO +0 60100 0 00025                                 
                       LINE(SIZE) = CHAR.A.77K                                      034  LM00043
 00166 CAL -0 50000 0 00011    00167 ANA -0 32000 0 00034    00170 LXA +0 53400 1 00025    00171 SLW +0 60200 1 00024   
                     END OF CONDITIONAL                                             035  LM00044
       DISECT        WHENEVER SIZE .GE. BUFSIZ, TRANSFER TO UND                     036  LM00045
 00172 CLA +0 50000 0 00025    00173 SUB +0 40200 0 00024    00174 TZE +0 10000 0 00176    00175 TMI -0 12000 0 00177   
 00176 TRA +0 02000 0 00010    00177 TRA +0 02000 0 00074                                                               
                   TRANSFER TO LOOP                                                 037  LM00046
 00200 TRA +0 02000 0 00007                                                                                             
      UND          SIZE = SIZE + 1                                                  038  LM00047
 00201 CLA +0 50000 0 00025    00202 ADD +0 40000 0 00032    00203 STO +0 60100 0 00025                                 
                   LINE(SIZE) = RETURN                                              039  LM00048
 00204 LXA +0 53400 1 00025    00205 CLA +0 50000 0 00024    00206 STO +0 60100 1 00024                                 
                   FUNCTION RETURN SIZE                                             040  LM00049
 00207 CLA +0 50000 0 00025    00210 TRA +0 02000 0 00342                                                               
                 ENTRY TO TYPOUT.                                                   041  LM00054
 00211 TRA +0 02000 0 00214    00212 SXA +0 63400 2 00324    00213 TSX +0 07400 2 00324                                 
                   K = 0                                                            042  LM00055
 00214 CLA +0 50000 0 00031    00215 STO +0 60100 0 00021                                                               
                   SETFUL.                                                          043  LM00056
 00216 TSX +0 07400 4 00003                                                                                             
                   THROUGH PRLOOP, FOR J = 1, 1, J .G. BUFSIZ                       044  LM00057
 00217 CLA +0 50000 0 00032    00220 STO +0 60100 0 00016    00221 TRA +0 02000 0 00225    00222 CLA +0 50000 0 00016   
 00223 ADD +0 40000 0 00032    00224 STO +0 60100 0 00016    00225 CLA +0 50000 0 00016    00226 SUB +0 40200 0 00024   
 00227 TZE +0 10000 0 00231    00230 TPL +0 12000 0 00261                                                               
                     TWORD = (TWORD .LS. NBITS) .V. LINE(J)                         045  LM00058
 00231 CAL -0 50000 0 00022    00232 STA +0 62100 0 00234    00233 CAL -0 50000 0 00026    00234 ALS +0 76700 0 00000   
 00235 LXA +0 53400 2 00016    00236 ORA -0 50100 2 00024    00237 SLW +0 60200 0 00026                                 
                     K = K + 1                                                      046  LM00059
 00240 CLA +0 50000 0 00021    00241 ADD +0 40000 0 00032    00242 STO +0 60100 0 00021                                 
                     WHENEVER K .GE. WRDSIZ/NBITS                                   047  LM00060
 00243 LDQ +0 56000 0 00030    00244 PXD -0 75400 0 00000    00245 LLS +0 76300 0 00000    00246 DVP +0 22100 0 00022   
 00247 XCA +0 13100 0 00000    00250 CHS +0 76000 0 00002    00251 ADD +0 40000 0 00021    00252 TZE +0 10000 0 00254   
 00253 TMI -0 12000 0 00260                                                                                             
                       K = 0                                                        048  LM00061
 00254 CLA +0 50000 0 00031    00255 STO +0 60100 0 00021                                                               
                       PRWORD.(TWORD)                                               049  LM00062
 00256 TSX +0 07400 4 00002    00257 TXH +3 00000 0 00026                                                               
       PRLOOP        END OF CONDITIONAL                                             050  LM00063
 00260 TRA +0 02000 0 00222                                                                                             
                   THROUGH NULPK, FOR K = K, 1, K.GE. WRDSIZ/NBITS                  051  LM00064
 00261 CLA +0 50000 0 00021    00262 STO +0 60100 0 00021    00263 TRA +0 02000 0 00267    00264 CLA +0 50000 0 00021   
 00265 ADD +0 40000 0 00032    00266 STO +0 60100 0 00021    00267 LDQ +0 56000 0 00030    00270 PXD -0 75400 0 00000   
 00271 LLS +0 76300 0 00000    00272 DVP +0 22100 0 00022    00273 XCA +0 13100 0 00000    00274 CHS +0 76000 0 00002   
 00275 ADD +0 40000 0 00021    00276 TZE +0 10000 0 00307    00277 TPL +0 12000 0 00307                                 
       NULPK         TWORD = (TWORD.LS.NBITS) .V. NULL                              052  LM00065
 00300 CAL -0 50000 0 00022    00301 STA +0 62100 0 00303    00302 CAL -0 50000 0 00026    00303 ALS +0 76700 0 00000   
 00304 ORA -0 50100 0 00023    00305 SLW +0 60200 0 00026    00306 TRA +0 02000 0 00264                                 
                   PRWORD.(TWORD)                                                   053  LM00066
 00307 TSX +0 07400 4 00002    00310 TXH +3 00000 0 00026                                                               
                   PRBUFF.                                                          054  LM00067
 00311 TSX +0 07400 4 00001                                                                                             
                   FUNCTION RETURN                                                  055  LM00068
 00312 TRA +0 02000 0 00342                                                                                             
                 ENTRY TO HOL.                                                      056  LM00070
 00313 TRA +0 02000 0 00316    00314 SXA +0 63400 2 00324    00315 TSX +0 07400 2 00324                                 
                   FUNCTION RETURN LINE .A. 77K                                     057  LM00071
 00316 CAL -0 50000 0 00024    00317 ANA -0 32000 0 00034    00320 SLW +0 60200 0 00346    00321 CLA +0 50000 0 00346   
 00322 TRA +0 02000 0 00342                                                                                             
                 END OF FUNCTION                                                    058  LM00073
 00323 TSX +0 07400 4 00000    00324 TXH +3 00000 0 00000    00325 SXD -0 63400 1 00324    00326 SXA +0 63400 4 00342   
 00327 CLA +0 50000 4 00001    00330 STA +0 62100 0 00042    00331 STA +0 62100 0 00050    00332 STA +0 62100 0 00171   
 00333 STA +0 62100 0 00206    00334 STA +0 62100 0 00236    00335 STA +0 62100 0 00316    00336 CLA +0 50000 4 00002   
 00337 STA +0 62100 0 00173    00340 STA +0 62100 0 00226    00341 TRA +0 02000 2 00001    00342 AXT +0 77400 4 00000   
 00343 LXA +0 53400 2 00324    00344 LXD -0 53400 1 00324    00345 TRA +0 02000 4 00001                                 
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 1     
                  
                              *     
                              *      J. H. SALTZER, JANUARY, 1965.
                              *     
                       00004         ENTRY   PRWORD        ADD A WORD TO PRINT BUFFER.    
                       00021         ENTRY   PRBUFF        PRINT OUT PARTIAL BUFFER.
                       00030         ENTRY   TYWORD        GET NEXT TYPED WORD.     
                       00047         ENTRY   TYLINE        RESET TO START READING NEXT LINE.    
                              *     
                                     EXTERN RDFLXA,WRFLXA   
                              *     
                  
        TRANSFER VECTOR 
      00000  512426436721     RDFLXA
      00001  665126436721     WRFLXA
                  
            LINKAGE DIRECTOR  
      00002  000000000000     
      00003  475166465124     
                  
                       00034  BUFLEN EQU     28            TYPEWRITER BUFFER SIZE.  
                              *     
                              *      ADD WORD TO PRINT BUFFER.    
                              *      PRWORD.(WORD)    
                              *     
      00004  0634 00 4 00017  PRWORD SXA     PRX4,4        SAVE LINKAGE.
      00005 -0500 60 4 00001         CAL*    1,4           GET WORD BEING ADDED.    
      00006 -0734 00 4 00000         PDX     0,4           CHECK FOR DISK CONTROL WORD.   
      00007  3 77776 4 00017         TXH     PRX4,4,-2     DON'T STORE CONTROL WORD.
      00010  0774 00 4 00034   PWCNT AXT     BUFLEN,4      SET WORD COUNTER (INITIALLY BUFLEN.) 
      00011  0602 00 4 00105         SLW     BUFF+BUFLEN,4 STORE WORD IN BUFFER.    
      00012  2 00001 4 00016         TIX     PSAVE,4,1     COUNT, CHECK FOR OVERFLOW.     
      00013  0074 00 4 00001         TSX     WRFLXA,4      BUFFER FULL, PRINT W/O C.R.    
      00014  0 00034 0 00051                 BUFF,,BUFLEN  ..     
      00015  0774 00 4 00034  PFRESH AXT     BUFLEN,4      RESET WORD COUNTER.
      00016  0634 00 4 00010   PSAVE SXA     PWCNT,4       SAVE WORD COUNTER. 
      00017  0774 00 4 00000   PRX4  AXT     --,4          RESTORE LINKAGE.   
      00020  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
                              *      PRINT OUT REMAINING BUFFER, RESET COUNTER.     
                              *     
      00021  0634 00 4 00017  PRBUFF SXA     PRX4,4        SAVE LINKAGE.
      00022  0535 00 4 00010         LAC     PWCNT,4       GET WORD COUNT.    
      00023  1 00034 4 00024         TXI     *+1,4,BUFLEN  FORM COMPLEMENT MOD BUFLEN.    
      00024 -0634 00 4 00026         SXD     PRCL,4        SAVE COUNT IN CALLER.    
      00025  0074 00 4 00001         TSX     WRFLXA,4      PRINT REMAINDER.   
      00026  0 00000 0 00051   PRCL          BUFF,,--      ..     
      00027  0020 00 0 00015         TRA     PFRESH        GO REFRESH COUNTER, AND RETURN.
                              *     
                              *      GET A WORD FROM INPUT BUFFER.
                              *         WORD = TYWORD.(0)   
                              *     
      00030  0634 00 4 00045  TYWORD SXA     TYX4,4        SAVE LINKAGE.
      00031  0774 00 5 00000  TYCNT  AXT     --,5          GET WORD COUNTER.  
      00032  0774 00 4 00000  TYPOS  AXT     --,4          GET BUFFER POINTER.
      00033  2 00006 5 00041         TIX     TYGET,5,6     CHECK FOR WORDS LEFT.    
      00034  0074 00 4 00000         TSX     RDFLXA,4      NO, GET SOME.
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 2     
                  
      00035  0 00034 0 00051  TYCALL         BUFF,,BUFLEN  ..     
      00036  0734 00 5 00000         PAX     0,5           INSERT 6-BIT CHARACTER COUNT INTO COUNTER. 
      00037  2 40000 5 00040         TIX     *+1,5,16384   REMOVE BIT 21 IF PRESENT.
      00040  0774 00 4 00000         AXT     0,4           RESET INPUT BUFFER POINTER.    
      00041  0500 00 4 00051  TYGET  CLA     BUFF,4        GET A WORD.  
      00042  1 77777 4 00043         TXI     *+1,4,-1      MOVE POINTER TO NEXT WORD.     
      00043  0634 00 4 00032         SXA     TYPOS,4       SAVE POINTER.
      00044  0634 00 5 00031         SXA     TYCNT,5       SAVE CHARACTER COUNTER.  
      00045  0774 00 4 00000  TYX4   AXT     --,4          RESTORE LINKAGE.   
      00046  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      00047  0634 00 0 00031  TYLINE ZSA     TYCNT         RESET CHARACTER COUNT TO MAKE LINE EMPTY.  
      00050  0020 00 4 00001         TRA     1,4           RETURN 
                              *     
      00051                   BUFF   BSS     BUFLEN            OUTPUT BUFFER. 
                              *     
                                     END  
1            BUFFER CONTROL ROUTINE FOR TYPEWRITER OUTPUT.                                       PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        105 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         51   BUFF    11,   14,   26,   35,   41
         26   PRCL    24
         17   PRX4     4,    7,   21
         45   TYX4    30
         16  PSAVE    12
         10  PWCNT    16,   22
         31  TYCNT    44,   47
         41  TYGET    33
         32  TYPOS    43
         34 BUFLEN     4,   10,   11,   14,   15,   23,   35,   51
         15 PFRESH    27
         21 PRBUFF     0
          4 PRWORD     0
          0 RDFLXA    34
         35 TYCALL      
         47 TYLINE     0
         30 TYWORD     0
          1 WRFLXA    13,   25
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            SUBROUTINE TO CONVERT BCD NUMBER TO BINARY.                                         PAGE 1     
                  
                              *     
                              *        J. H. SALTZER, MAY, 1966.  
                       00002         ENTRY   BIN           CONVERTER.   
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  223145606060     
                  
      00002  0634 00 1 00024   BIN   SXA     IRR1,1   
      00003  0600 00 0 00027         STZ     INT           CLEAR RESULT.
      00004  0774 00 1 00006         AXT     6,1
      00005  0560 60 4 00001         LDQ*    1,4           GET ARGUMENT.
      00006 -0754 00 0 00000  LOP    ZAC  
      00007 -0763 00 0 00006         LGL     6             GET NEXT CHARACTER.
      00010 -0340 00 0 00032         LAS     =10           SKIP OVER NON-DIGITS.    
      00011  0020 00 0 00023         TRA     TIX
      00012  0020 00 0 00023         TRA     TIX
      00013  0601 00 0 00030         STO     DIG           NUMBER, SAVE DIGIT.
      00014 -0600 00 0 00031         STQ     TEM           SAVE MQ FOR MULTIPLIACATION.   
      00015  0560 00 0 00027         LDQ     INT           GET OLD NUMBER.    
      00016  0200 00 0 00032         MPY     =10           SHIFT. 
      00017  0131 00 0 00000         XCA  
      00020  0400 00 0 00030         ADD     DIG           ADD THIS DIGIT TO RESULT.
      00021  0601 00 0 00027         STO     INT           SAVE, FOR NEXT PASS.     
      00022  0560 00 0 00031         LDQ     TEM           RESTORE MQ.  
      00023  2 00001 1 00006  TIX    TIX     LOP,1,1  
      00024  0774 00 1 00000   IRR1  AXT     --,1     
      00025  0500 00 0 00027         CLA     INT           RESULT IN AC.
      00026  0020 00 4 00002         TRA     2,4
                              *     
      00027  0 00000 0 00000   INT  
      00030  0 00000 0 00000   DIG  
      00031  0 00000 0 00000   TEM  
                              *     
                                     END  
                  
        LITERALS  
      00032  000000000012     
1            SUBROUTINE TO CONVERT BCD NUMBER TO BINARY.                                         PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
         33 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          2    BIN     0
         30    DIG    13,   20
         27    INT     3,   15,   21,   25
          6    LOP    23
         31    TEM    14,   22
         23    TIX    11,   12
         24   IRR1     2
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            LIBRARY PACKAGE.                                                                    PAGE 1     
                  
                       00024         ENTRY   .PCOMT        PRINT COMMENT ROUTINE    
                       00010         ENTRY   CHNCOM        GO DORMANT.  
                       00005         ENTRY   EXIT          SAME.  
                       00002         ENTRY   .SETUP        CALLED BY MAD MAIN PROGRA.     
                       00013         ENTRY   COMARG        GET COMMAND ARGUMENT.    
                       00106         ENTRY   WHOAMI   
                       00066         ENTRY   SETBCD   
                       00064         ENTRY   SETFUL   
                       00065         ENTRY   SETBRK   
                       00061         ENTRY   WRFLXA   
                       00063         ENTRY   WRFLX    
                       00062         ENTRY   RDFLXA   
                       00067         ENTRY   UPDATE        UPDATE U.F.D.
                       00070         ENTRY   CHFILE   
                       00071         ENTRY   DELFIL   
                       00072         ENTRY   FSTATE   
                       00073         ENTRY   BUFFER   
                       00074         ENTRY   OPEN     
                       00075         ENTRY   WRWAIT   
                       00076         ENTRY   WRFILE   
                       00077         ENTRY   RDWAIT   
                       00100         ENTRY   RDFILE   
                       00101         ENTRY   CLOSE    
                       00043         ENTRY   GETBUF        OBTAIN BUFFERS FROM SUPERVISOR.
                              *     
                  
            LINKAGE DIRECTOR  
      00000  000000000000     
      00001  334723464463     
                  
      00002  0760 00 0 00016  .SETUP LMTM                  USE SEVEN TAG MODE.
      00003  0774 00 6 00000         AXT     0,6           SET UP IR6 TO AVOID EARLY CALL TO READ.    
      00004  0020 00 0 00064         TRA     SETFUL        USE FULL MODE.  SETFUL RETURNS 1,4.  
                              *     
      00005  0074 00 4 00066  EXIT   TSX     SETBCD,4      CLEANUP, RESET MODE.     
      00006  0074 00 4 00063         TSX     WRFLX,4       PUT OUT A STAR FOR RUNCOMS.    
      00007  0 00001 0 00060                 STAR,,1       AND THEN PERFORM CHNCOM SEQUENCE.    
      00010  0074 00 4 00102  CHNCOM TSX     CHN,4         THIS CHNCOM ALWAYS GOES DEAD,  
 TD   00011  3 00000 0 00107         TXH     =0            IF NO CHAIN EXISTS.
      00012  0020 00 0 00010         TRA     *-2           IN CASE OF RESTART, DON'T.     
                              *     
      00013  0634 00 4 00022  COMARG SXA     CM4,4         GET COMMAND ARGUMENT FOR MAD.  
      00014 -0500 60 4 00001         CAL*    1,4           GET ARGUMENT NUMBER.     
      00015  0602 00 0 00017         SLW     ARG           GIVE ARGUMENT NUMBER.    
      00016  0074 00 4 00103         TSX     GETCOM,4      GET COMMAND ARGUMENT.    
      00017  0 00000 0 00000   ARG                         ..     
      00020  0602 00 0 00017         SLW     ARG           MOVE TO ARITHMETIC AC.   
      00021  0500 00 0 00017         CLA     ARG           ..     
      00022  0774 00 4 00000   CM4   AXT     --,4          RESTORE LINKAGE.   
      00023  0020 00 4 00002         TRA     2,4           RETURN TO CALLER.  
                              *     
      00024 -0500 00 4 00001  .PCOMT CAL     1,4           GET WORD COUNT.    
      00025  0621 00 0 00042         STA     RETURN        ON RETURN, JUMP BUFFER.  
      00026  0767 00 0 00022         ALS     18            SETUP COUNT. 
      00027  0622 00 0 00036         STD     PCNT          ..     
      00030  1 77776 4 00031         TXI     *+1,4,-2      SETUP UP BUFFER ADDRESS. 
1            LIBRARY PACKAGE.                                                                    PAGE 2     
                  
      00031  0636 00 4 00036         SCA     PCNT,4        SAVE BUFFER ADDRESS, AND LINKAGE.    
      00032  0074 00 4 00064         TSX     SETFUL,4      MAKE SURE MODE SET AND NO LINES COMING IN. 
      00033  0074 00 4 00061         TSX     WRFLXA,4      SWITCH TO RED SHIFT.     
      00034  0 00001 0 00056                 REDS,,1       ..     
      00035  0074 00 4 00063         TSX     WRFLX,4       PRINT LINE.  
      00036  0 00000 0 00000   PCNT          --,,--        ..     
      00037  0074 00 4 00061         TSX     WRFLXA,4      SHIFT BACK TO BLACK.     
      00040  0 00001 0 00057                 BLCKS,,1      ..     
      00041  0535 00 4 00036         LAC     PCNT,4        RESTORE LINKAGE.   
      00042  0020 00 4 00000  RETURN TRA     --,4          RETURN TO CALLER.  
                              *     
      00043  0634 00 4 00052  GETBUF SXA     GX4,4         ENTRY TO GET BUFFERS.    
      00044  0602 00 0 00055         SLW     BUFSIZ        SIZE OF BUFFER IN AC.    
      00045  0074 00 4 00104         TSX     GETMEM,4      GET PRESENT BOUND. 
      00046  0601 00 0 00054         STO     START         SAVE AS BUFFER START.    
      00047  0361 00 0 00055         ACL     BUFSIZ        FORM NEW BOUND.    
      00050  0074 00 4 00105         TSX     SETMEM,4      ASK FOR MORE.
      00051 -0500 00 0 00054         CAL     START         GIVE CALLER LOCATION OF  
      00052  0774 00 4 00000   GX4   AXT     --,4          HIS NEW BUFFER.    
      00053  0020 00 4 00001         TRA     1,4           RETURN.
                              *     
      00054  0 00000 0 00000   START                       STORAGE FOR BUFFER LOCATION.   
      00055  0 00000 0 00000  BUFSIZ                       STORAGE FOR BUFFER SIZE. 
                              *     
      00056 +013300570057      REDS  OCT     013300570057  RED SHIFT AND TWO NULLS. 
      00057 +013200570057      BLCKS OCT     013200570057  BLACK SHIFT AND TWO NULLS.     
      00060 -145757575757     STAR   OCT     545757575757  ASTERISK AND 5 NULLS.    
                              *     
                              *              SUPERVISOR SUBROUTINE CALLERS.   
                              *     
      00061  0101 00 0 00133  WRFLXA TIA     =HWRFLXA 
      00062  0101 00 0 00122  RDFLXA TIA     =HRDFLXA 
      00063  0101 00 0 00134  WRFLX  TIA     =HWRFLX  
      00064  0101 00 0 00126  SETFUL TIA     =HSETFUL 
      00065  0101 00 0 00125  SETBRK TIA     =HSETBRK 
      00066  0101 00 0 00124  SETBCD TIA     =HSETBCD 
      00067  0101 00 0 00130  UPDATE TIA     =HUPDATE 
      00070  0101 00 0 00111  CHFILE TIA     =HCHFILE 
      00071  0101 00 0 00114  DELFIL TIA     =HDELFIL 
      00072  0101 00 0 00115  FSTATE TIA     =HFSTATE 
      00073  0101 00 0 00110  BUFFER TIA     =HBUFFER 
      00074  0101 00 0 00120  OPEN   TIA     =HOPEN   
      00075  0101 00 0 00135  WRWAIT TIA     =HWRWAIT 
      00076  0101 00 0 00132  WRFILE TIA     =HWRFILE 
      00077  0101 00 0 00123  RDWAIT TIA     =HRDWAIT 
      00100  0101 00 0 00121  RDFILE TIA     =HRDFILE 
      00101  0101 00 0 00113  CLOSE  TIA     =HCLOSE  
      00102  0101 00 0 00112  CHN    TIA     =HCHNCOM 
      00103  0101 00 0 00116  GETCOM TIA     =HGETCOM 
      00104  0101 00 0 00117  GETMEM TIA     =HGETMEM 
      00105  0101 00 0 00127  SETMEM TIA     =HSETMEM 
      00106  0101 00 0 00131  WHOAMI TIA     =HWHOAMI 
                              *     
                                     END  
1            LIBRARY PACKAGE.                                                                    PAGE 3     
                  
        LITERALS  
      00107  000000000000     
      00110  226426262551     
      00111  233026314325     
      00112  233045234644     
      00113  234346622560     
      00114  242543263143     
      00115  266263216325     
      00116  272563234644     
      00117  272563442544     
      00120  464725456060     
      00121  512426314325     
      00122  512426436721     
      00123  512466213163     
      00124  622563222324     
      00125  622563225142     
      00126  622563266443     
      00127  622563442544     
      00130  644724216325     
      00131  663046214431     
      00132  665126314325     
      00133  665126436721     
      00134  665126436760     
      00135  665166213163     
1            LIBRARY PACKAGE.                                                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        136 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         17    ARG    15,   20,   21
        102    CHN    10
         22    CM4    13
         52    GX4    43
          5   EXIT     0
         74   OPEN     0
         36   PCNT    27,   31,   41
         56   REDS    34
         60   STAR     7
         57  BLCKS    40
        101  CLOSE     0
         54  START    46,   51
         63  WRFLX     0,    6,   35
         73 BUFFER     0
         55 BUFSIZ    44,   47
         70 CHFILE     0
         10 CHNCOM     0
         13 COMARG     0
         71 DELFIL     0
         72 FSTATE     0
         43 GETBUF     0
        103 GETCOM    16
        104 GETMEM    45
         24 .PCOMT     0
          2 .SETUP     0
        100 RDFILE     0
         62 RDFLXA     0
         77 RDWAIT     0
         42 RETURN    25
         66 SETBCD     0,    5
         65 SETBRK     0
         64 SETFUL     0,    4,   32
        105 SETMEM    50
         67 UPDATE     0
        106 WHOAMI     0
         76 WRFILE     0
         61 WRFLXA     0,   33,   37
         75 WRWAIT     0
                  
0 NO ERROR IN ABOVE ASSEMBLY. 




EXTBSS   BCD 09/18/68 2215.8   12484         00000    
1            EXTBSS COMMAND FOR FOREGROUND.                                                      PAGE 1     
                           FILE NAME -- ESXTBS FAP                                  
                  
                  
                                             9/14/65 - NOEL I. MORRIS   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                  
        TRANSFER VECTOR 
      00000  434164626360     LJUST 
      00001  222646472545     BFOPEN
      00002  246242255160     DSKER 
      00003  512422626260     RDBSS 
      00004  665122626260     WRBSS 
      00005  222623434662     BFCLOS
      00006  242543256325     DELETE
      00007  516225632260     RSETB 
      00010  626522626260     SVBSS 
      00011  516222626260     RSBSS 
                  
                       00010  NFILS  EQU     8  
                                             INITIALIZE ARRAYS.   
                  
      00012                   START  CALL    SETBRK(BREAK) SET A BREAK LEVEL  
      00012  0074 00 4 00370         TSX     SETBRK,4                                                         .002
      00013  3 00000 0 00314         PAR     BREAK                                                            .004
                  
      00014                          CALL    GETCLS((CARD,,0)) GET COMMAND BUFFER   
      00014  0074 00 4 00371         TSX     GETCLS,4                                                         .002
      00015  3 00000 0 77426         PAR     CARD,,0                                                          .004
                  
      00016 -0774 00 1 00001         AXC     1,1           GETCOM INDEX 
      00017 -0500 00 1 77426  SQI    CAL     CARD,1        GET FIRST PARAMETER
                  
      00020 -0340 00 0 00021         LAS     FENCE         CHECK FOR NONE     
      00021  777777777777     FENCE  VFD     36/-1    
      00022  0020 00 0 00316         TRA     PERR          NO PARAMETERS GIVEN
                  
      00023  0602 00 0 77425         SLW     INFILE        NAME OF INPUT FILE 
      00024  0322 00 0 00036         ERA     (SQZ)         IS IT SQZBSS 
      00025 -0100 00 0 00032         TNZ     NO.SQI        IF YES,
                  
      00026 -0625 00 0 77424         STL     INFILE-1      SET SQZ INDIC.     
                  
      00027  0560 00 0 00056         LDQ     SQZ           SECONDARY NAME     
      00030 -0620 00 0 00336         SLQ     IN2           IS SQZBSS    
                  
      00031  1 77777 1 00017         TXI     SQI,1,-1      AND GO GET THE NEXT PARAMETER  
                  
      00032  1 77777 1 00033  NO.SQI TXI     *+1,1,-1      NEXT PARAMETER     
                  
      00033 -0774 00 2 00000         AXC     0,2           OUTPUT FILE LIST INDEX   
1            EXTBSS COMMAND FOR FOREGROUND.                                                      PAGE 2     
                           FILE NAME -- ESXTBS FAP                                  
                  
      00034 -0500 00 1 77426  PARLP  CAL     CARD,1        GET PARAMETER
      00035 -0340 00 0 00021         LAS     FENCE         CHECK FOR NONE     
      00036  607462507134     (SQZ)  BCI     1, (SQZ) 
      00037  0020 00 0 00074         TRA     SOUT          FINISHED     
                  
      00040  0602 00 0 00330         SLW     TEM           SAVE FOR RJUSTING  
      00041  0602 00 2 00340         SLW     LIST+1,2      BOTH FILE NAME AND ENTRY NAME  
                  
      00042                          CALL    $LJUST(TEM)   ENTRIES ARE LEFT JUSTIFIED     
      00042  0074 00 4 00000         TSX     $LJUST,4                                                         .002
      00043  3 00000 0 00330         PAR     TEM                                                              .004
      00044  0601 00 2 00341         STO     LIST+2,2      ..     
                  
      00045 -0500 00 0 00330         CAL     TEM           NOW CHECK FOR SQZBSS     
      00046  0322 00 0 00036         ERA     (SQZ)         ..     
      00047 -0100 00 0 00053         TNZ     NO.SQO        IF SO, 
                  
      00050  0560 00 0 00056         LDQ     SQZ           SET SECONDARY NAME TO    
      00051 -0620 00 2 00342         SLQ     LIST+3,2      SQZBSS 
                  
      00052  1 77777 1 00034         TXI     PARLP,1,-1    NEXT PARAMETER     
                  
      00053  1 77777 1 00054  NO.SQO TXI     *+1,1,-1      NEXT PARAMETER     
                  
      00054 -0500 00 1 77426         CAL     CARD,1        ..     
      00055 -0340 00 0 00021         LAS     FENCE         CHECK FOR NONE     
      00056  625071606060     SQZ    BCI     1,SQZ    
      00057  1 77775 2 00074         TXI     SOUT,2,-3     FINISHED     
      00060  0602 00 0 00330         SLW     TEM           SAVE ENTRY NAME    
                  
      00061  0322 00 0 00437         ERA     =H     =      IS IT EQUAL SIGN   
      00062  0100 00 0 00066         TZE     NEX           YES, ENTRY = SECONDARY NAME    
                  
      00063                          CALL    $LJUST(TEM)   ..     
      00063  0074 00 4 00000         TSX     $LJUST,4                                                         .002
      00064  3 00000 0 00330         PAR     TEM                                                              .004
      00065  0601 00 2 00341         STO     LIST+2,2      ..     
                  
      00066  1 77777 1 00067  NEX    TXI     *+1,1,-1      NEXT PARAMETER     
      00067  1 77775 2 00070         TXI     *+1,2,-3      AND NEXT OUTPUT FILE     
      00070  3 00030 2 00034         TXH     PARLP,2,3*NFILS   CHECK FOR FULL LIST  
                  
      00071                          COMENT  TOO,5,(TOO MANY FILES REQUESTED.)
      00071  0074 00 4 00372         TSX     WRFLX,4                                                          .003
      00072  3 00005 0 00373         PAR     TOO,,5                                                           .005
      00073  0021 00 0 00312         XIT     CHN           EXIT TO CHNCOM     
                  
      00074 -3 00000 2 00321  SOUT   TXL     NONE,2,0      CHECK FOR NO FILES 
      00075  0636 00 2 00337         SCA     LIST,2        STORE FILE COUNT   
      00076  0634 00 2 00222         SXA     SRCH,2        ..     
      00077  0634 00 2 00301         SXA     NSRCH,2       ..     
                  
      00100 -0500 00 0 00444         CAL     =H(FILE)      SET TEMPORARY FILE 
      00101  0602 00 0 77423         SLW     OUTFIL        TO (FILE)    
1            EXTBSS COMMAND FOR FOREGROUND.                                                      PAGE 3     
                           OPEN AND READ LIBRARY FILE.                              
                  
      00102                          CALL    GETMEM        GET MEMORY BOUND   
      00102  0074 00 4 00400         TSX     GETMEM,4                                                         .002
                  
      00103                          EXTEND  (OPNR+4,OPNR+5,OPNW+4,OPNW+5,OPNW+6)   
      00103  0621 00 0 00122         STA     OPNR+4                                                           .003
      00104  0361 00 0 00425         ACL     =432                                                             .002
      00105  0621 00 0 00123         STA     OPNR+5                                                           .003
      00106  0361 00 0 00425         ACL     =432                                                             .002
      00107  0621 00 0 00257         STA     OPNW+4                                                           .003
      00110  0361 00 0 00425         ACL     =432                                                             .002
      00111  0621 00 0 00260         STA     OPNW+5                                                           .003
      00112  0361 00 0 00425         ACL     =432                                                             .002
      00113  0621 00 0 00261         STA     OPNW+6                                                           .003
      00114  0361 00 0 00425         ACL     =432                                                             .002
      00115  0074 00 4 00401         TSX     SETMEM,4                                                         .003
                                                           ASSIGN DISK BUFFERS
                  
      00116                   OPNR   CALL    $BFOPEN(=HR,INFILE,IN2,**,**,=-0,$DSKER)     
      00116  0074 00 4 00001         TSX     $BFOPEN,4                                                        .002
      00117  3 00000 0 00435         PAR     =HR                                                              .004
      00120  3 00000 0 77425         PAR     INFILE                                                           .004
      00121  3 00000 0 00336         PAR     IN2                                                              .004
      00122  3 00000 0 00000         PAR     **                                                               .004
      00123  3 00000 0 00000         PAR     **                                                               .004
      00124  3 00000 0 00433         PAR     =-0                                                              .004
      00125  3 00000 0 00002         PAR     $DSKER                                                           .004
                                                           OPEN LIBRARY FILE FOR READING  
                  
      00126                   NEXCD  CALL    $RDBSS(EOF)   READ A CARD  
      00126  0074 00 4 00003         TSX     $RDBSS,4                                                         .002
      00127  3 00000 0 00272         PAR     EOF                                                              .004
                  
      00130 -0054 00  400000         LFT     400000        IF A PROGRAM CARD, 
      00131  0020 00 0 00136         TRA     P.C.          GO EXAMINE   
                  
      00132 -0625 00 0 00324         STL     ICSW          INSTRUCTION CARD, SET SWITCH   
                  
      00133  0520 00 0 00325         ZET     FOUND         ARE WE WRITING A FILE    
      00134                          CALL    $WRBSS        WRITE THIS CARD OUT
      00134  0074 00 4 00004         TSX     $WRBSS,4                                                         .002
                  
      00135  0020 00 0 00126         TRA     NEXCD         ON TO THE NEXT     
1            EXTBSS COMMAND FOR FOREGROUND.                                                      PAGE 4     
                           PROCESS PROGRAM CARDS.                                   
                  
      00136  0520 00 0 00325  P.C.   ZET     FOUND         IF NETRY FOUND AND 
      00137  0520 00 0 00324         ZET     ICSW          NOT THE FIRST CARD 
      00140  0020 00 0 00143         TRA     NOT           ..     
                  
      00141                   WRB    CALL    $WRBSS        WRITE THIS CARD OUT AND  
      00141  0074 00 4 00004         TSX     $WRBSS,4                                                         .002
      00142  0020 00 0 00126         TRA     NEXCD         GO ON TO THE NEXT  
                  
      00143 -0520 00 0 00324  NOT    NZT     ICSW          IF THIS IS FIRST CARD    
      00144  0020 00 0 00212         TRA     SQCD          ..     
      00145 -0520 00 0 00325         NZT     FOUND         AND FILE IS OPEN   
      00146  0020 00 0 00207         TRA     FPC           ..     
                  
      00147                   CLSOUT CALL    $BFCLOS(OUTFIL,OUT2,$DSKER)   CLOSE IT 
      00147  0074 00 4 00005         TSX     $BFCLOS,4                                                        .002
      00150  3 00000 0 77423         PAR     OUTFIL                                                           .004
      00151  3 00000 0 00333         PAR     OUT2                                                             .004
      00152  3 00000 0 00002         PAR     $DSKER                                                           .004
                  
      00153                          CALL    $DELETE(NEWFIL,OUT2,*,NODEL)    DELETE ANY OLD FILE
      00153  0074 00 4 00006         TSX     $DELETE,4                                                        .002
      00154  3 00000 0 00331         PAR     NEWFIL                                                           .004
      00155  3 00000 0 00333         PAR     OUT2                                                             .004
      00156  3 00000 0 00156         PAR     *                                                                .004
      00157  3 00000 0 00173         PAR     NODEL                                                            .004
      00160  0602 00 0 00327         SLW     MODE          MODE FOR NEW FILE  
                  
      00161                          CALL    CHFILE(OUTFIL,OUT2,MODE,NEWFIL,OUT2) AND RENAME    
      00161  0074 00 4 00402         TSX     CHFILE,4                                                         .002
      00162  3 00000 0 77423         PAR     OUTFIL                                                           .004
      00163  3 00000 0 00333         PAR     OUT2                                                             .004
      00164  3 00000 0 00327         PAR     MODE                                                             .004
      00165  3 00000 0 00331         PAR     NEWFIL                                                           .004
      00166  3 00000 0 00333         PAR     OUT2                                                             .004
                  
      00167 -0520 00 0 00327         NZT     MODE          ENOUGH PRINTED GARBAGE IF NON-ZERO MODE    
      00170                          CALL    WRFLX((NEWFIL,,5))    PRINT CREATED COMMENT  
      00170  0074 00 4 00372         TSX     WRFLX,4                                                          .002
      00171  3 00005 0 00331         PAR     NEWFIL,,5                                                        .004
      00172  0020 00 0 00174         TRA     *+2           SKIP NEXT SECTION  
                  
      00173                   NODEL  CALL    $DELETE(OUTFIL,OUT2,=0,*+1)  DELETE OLD TEMPORARY  
      00173  0074 00 4 00006         TSX     $DELETE,4                                                        .002
      00174  3 00000 0 77423         PAR     OUTFIL                                                           .004
      00175  3 00000 0 00333         PAR     OUT2                                                             .004
      00176  3 00000 0 00424         PAR     =0                                                               .004
      00177  3 00000 0 00200         PAR     *+1                                                              .004
                  
      00200  0600 00 0 00325         STZ     FOUND         RESET ENTRY FOUND SWITCH 
                  
      00201  0534 00 4 00337         LXA     LIST,4        DECREASE FILE COUNT
      00202  1 77775 4 00203         TXI     *+1,4,-3      ..     
      00203  0634 00 4 00337         SXA     LIST,4        ..     
      00204 -3 00000 4 00272         TXL     EOF,4,0       IF ZERO, ALL FILES CREATED     
1            EXTBSS COMMAND FOR FOREGROUND.                                                      PAGE 5     
                           PROCESS PROGRAM CARDS.                                   
                  
      00205  0520 00 0 00326         ZET     ENDFIL        CHECK FOR AN EOF CLOSE   
      00206  0020 00 0 00301         TRA     NSRCH         GO FINISH UP 
                  
      00207                   FPC    CALL    $RSETB        RESET CARD SAVE BUFFERS  
      00207  0074 00 4 00007         TSX     $RSETB,4                                                         .002
      00210 -0774 00 4 00002         AXC     2,4           START FIRST P.C. AT SECOND WORD
      00211  0020 00 0 00213         TRA     GCNT          ..     
                  
      00212 -0774 00 4 00000  SQCD   AXC     0,4           CARD WORD INDEX    
                  
      00213 -0046 00 0 00000  GCNT   PIA                   GET WRDCNT   
      00214 -0320 00 0 00426         ANA     =O37077777    ..     
      00215 -0734 00 1 00000         PDX     ,1            IN XR1 
      00216 -0636 00 1 00231         SCD     ECHK,1        FOR ENTRY PICKUP CHECK   
                  
      00217 -0500 00 4 77430  ELP    CAL     CARD+2,4      ENTRY NAME   
      00220 -0100 00 0 00222         TNZ     *+2           IF ZERO,     
      00221 -0500 00 0 00445         CAL     =H(MAIN)      IT IS (MAIN) 
                  
      00222  0774 00 1 00000  SRCH   AXT     **,1          CHECK LSIT FOR NETRY     
      00223 -0340 00 1 00336         LAS     LIST-1,1      ..     
      00224  0020 00 0 00226         TRA     *+2           ..     
      00225  0020 00 0 00235         TRA     GOT.IT        ENTRY FOUND  
                  
      00226  1 00003 1 00227         TXI     *+1,1,3       NEXT ENTRY   
      00227  3 00000 1 00223         TXH     SRCH+1,1,0    LOOP THROUGH TABLE 
                  
      00230  1 77776 4 00231         TXI     *+1,4,-2      NEXT CARD WORD     
      00231  3 00000 4 00217  ECHK   TXH     ELP,4,**      EXAMINE ENTIRE CARD
                  
      00232                          CALL    $SVBSS        SAVE THIS CARD     
      00232  0074 00 4 00010         TSX     $SVBSS,4                                                         .002
      00233  0600 00 0 00324         STZ     ICSW          RESET I.C. SWITCH  
      00234  0020 00 0 00126         TRA     NEXCD         AND GO TO NEXT     
                  
      00235 -0500 00 1 00337  GOT.IT CAL     LIST,1        GET SECONDARY NAME 
      00236  0602 00 0 00333         SLW     OUT2          ..     
      00237  0322 00 0 00436         ERA     =H   BSS      NON ZERO, IF SQZBSS
      00240  0602 00 0 77422         SLW     OUTFIL-1      ..     
                  
      00241 -0500 00 1 00335         CAL     LIST-2,1      PRIMARY NAME 
      00242  0602 00 0 00331         SLW     NEWFIL        ..     
                  
      00243 -0500 00 0 00021         CAL     FENCE         NULL OUT ENTRY NAME
      00244  0602 00 1 00336         SLW     LIST-1,1      ..     
                  
      00245 -0625 00 0 00325         STL     FOUND         SET FOUND INDIC.   
                  
      00246                          CALL    $DELETE(OUTFIL,OUT2,=0,*+1)   DELETE OLD TEMP., IF ANY   
      00246  0074 00 4 00006         TSX     $DELETE,4                                                        .002
      00247  3 00000 0 77423         PAR     OUTFIL                                                           .004
      00250  3 00000 0 00333         PAR     OUT2                                                             .004
      00251  3 00000 0 00424         PAR     =0                                                               .004
      00252  3 00000 0 00253         PAR     *+1                                                              .004
1            EXTBSS COMMAND FOR FOREGROUND.                                                      PAGE 6     
                           PROCESS PROGRAM CARDS.                                   
                  
      00253                   OPNW   CALL    $BFOPEN(=HW,OUTFIL,OUT2,**,**,**,$DSKER)     
      00253  0074 00 4 00001         TSX     $BFOPEN,4                                                        .002
      00254  3 00000 0 00443         PAR     =HW                                                              .004
      00255  3 00000 0 77423         PAR     OUTFIL                                                           .004
      00256  3 00000 0 00333         PAR     OUT2                                                             .004
      00257  3 00000 0 00000         PAR     **                                                               .004
      00260  3 00000 0 00000         PAR     **                                                               .004
      00261  3 00000 0 00000         PAR     **                                                               .004
      00262  3 00000 0 00002         PAR     $DSKER                                                           .004
                                                           OPEN TEMPORARY FILE FOR WRITING
                  
      00263 -0520 00 0 00324         NZT     ICSW          CHECK FOR FIRST CARD     
      00264  0020 00 0 00267         TRA     *+3           ..     
                  
      00265  0600 00 0 00324         STZ     ICSW          IF SO, 
      00266  0020 00 0 00141         TRA     WRB           WRITE IT OUT WITHOUT SAVING    
                  
      00267                          CALL    $SVBSS        OTHERWISE, SAVE IT FIRST 
      00267  0074 00 4 00010         TSX     $SVBSS,4                                                         .002
                  
      00270                          CALL    $RSBSS        AND WRITE OUT OTHER SAVED CARDS
      00270  0074 00 4 00011         TSX     $RSBSS,4                                                         .002
                  
      00271  0020 00 0 00126         TRA     NEXCD         ON TO THE NEXT     
1            EXTBSS COMMAND FOR FOREGROUND.                                                      PAGE 7     
                           END OF FILE AND ERROR SECTION.                           
                  
      00272 -0625 00 0 00326  EOF    STL     ENDFIL        SET END OF FILE INDIC.   
      00273  0520 00 0 00325         ZET     FOUND         CHECK FOR OPEN FILE
      00274  0020 00 0 00147         TRA     CLSOUT        GO CLOSE IT  
                  
      00275                          CALL    $BFCLOS(INFILE,IN2,$DSKER)    CLOSE THE LIBRARY FILE     
      00275  0074 00 4 00005         TSX     $BFCLOS,4                                                        .002
      00276  3 00000 0 77425         PAR     INFILE                                                           .004
      00277  3 00000 0 00336         PAR     IN2                                                              .004
      00300  3 00000 0 00002         PAR     $DSKER                                                           .004
                  
      00301  0774 00 1 00000  NSRCH  AXT     **,1          NOW, LOOK FOR NAY UNUSED ENTRIES     
                  
      00302 -0500 00 1 00336         CAL     LIST-1,1      ENTRY SHOULD BE FENCE IF USED  
      00303  0602 00 0 00404         SLW     ENTRY+1       SVAE FOR PRINTING, IF NECESSARY
      00304  0322 00 0 00021         ERA     FENCE         ..     
      00305  0100 00 0 00310         TZE     FOK           IF ZERO, ALL IS FINE     
                  
      00306                          COMENT  ENTRY,4,(ENTRY        NOT FOUND.)
      00306  0074 00 4 00372         TSX     WRFLX,4                                                          .003
      00307  3 00004 0 00403         PAR     ENTRY,,4                                                         .005
                  
      00310  1 00003 1 00311  FOK    TXI     *+1,1,3       CHECK ALL ENTRIES IN LIST
      00311  3 00000 1 00302         TXH     NSRCH+1,1,0   ..     
                  
      00312                   CHN    CALL    CHNCOM(0)     EXIT TO CHNCOM     
      00312  0074 00 4 00407         TSX     CHNCOM,4                                                         .002
      00313  3 00000 0 00000         PAR     0                                                                .004
                  
      00314                   BREAK  CALL    RESETF        RESET ALL ACTIVE FILES   
      00314  0074 00 4 00410         TSX     RESETF,4                                                         .002
                  
      00315  0021 00 0 00312         XIT     CHN           AND EXIT TO CHNCOM 
                  
      00316                   PERR   COMENT  BADPAR,5,(ILLEGAL PARAMETER SEQUENCE.) 
      00316  0074 00 4 00372         TSX     WRFLX,4                                                          .003
      00317  3 00005 0 00411         PAR     BADPAR,,5                                                        .005
      00320  0021 00 0 00312         XIT     CHN           ..     
                  
      00321                   NONE   COMENT  NOFILS,6,(NO FILES SPECIFIED FOR EXTRACTION.)
      00321  0074 00 4 00372         TSX     WRFLX,4                                                          .003
      00322  3 00006 0 00416         PAR     NOFILS,,6                                                        .005
      00323  0021 00 0 00312         XIT     CHN           ..     
1            EXTBSS COMMAND FOR FOREGROUND.                                                      PAGE 8     
                           STORAGE AND CONSTANTS.                                   
                  
      00324  0 00000 0 00324  ICSW   PZE     *  
      00325  0 00000 0 00000  FOUND  PZE  
      00326  0 00000 0 00000  ENDFIL PZE  
      00327  0 00000 0 00000  MODE   PZE  
      00330  0 00000 0 00000  TEM    PZE  
                  
      00331  000000000000     NEWFIL VFD     36/0,O36/606057575757
      00332  606057575757     
      00333  606060226262     OUT2   BCI     3,   BSS CREATED.    
      00334  602351252163     
      00335  252433606060     
                  
      00336  606060226262     IN2    BCI     1,   BSS 
                  
      00337  0 00000 0 00000  LIST   PZE  
                       00340         DUP     1,NFILS  
      00340  777777777777            VFD     36/-1,36/-1,O18/606060,H18/BSS   
      00341  777777777777     
      00342  606060226262     
      00343  777777777777     
      00344  777777777777     
      00345  606060226262     
      00346  777777777777     
      00347  777777777777     
      00350  606060226262     
      00351  777777777777     
      00352  777777777777     
      00353  606060226262     
      00354  777777777777     
      00355  777777777777     
      00356  606060226262     
      00357  777777777777     
      00360  777777777777     
      00361  606060226262     
      00362  777777777777     
      00363  777777777777     
      00364  606060226262     
      00365  777777777777     
      00366  777777777777     
      00367  606060226262     
                  
                       77426         COMMON  27 
                       77426  CARD   COMMON  1  
                       77425  INFILE COMMON  2  
                       77423  OUTFIL COMMON  2  
                  
      00370                          RMT     *             REMOTE SEQUENCES   
      00370  0101 00 0 00440  SETBRK TIA     =HSETBRK                                                         .002
      00371  0101 00 0 00431  GETCLS TIA     =HGETCLS                                                         .002
      00372  0101 00 0 00442  WRFLX  TIA     =HWRFLX                                                          .002
      00373  634646604421     TOO    BCI     5,TOO MANY FILES REQUESTED.                                      .002
      00374  457060263143     
      00375  256260512550     
      00376  642562632524     
      00377  336060606060     
1            EXTBSS COMMAND FOR FOREGROUND.                                                      PAGE 9     
                           STORAGE AND CONSTANTS.                                   
                  
      00400  0101 00 0 00432  GETMEM TIA     =HGETMEM                                                         .002
      00401  0101 00 0 00441  SETMEM TIA     =HSETMEM                                                         .002
      00402  0101 00 0 00427  CHFILE TIA     =HCHFILE                                                         .002
      00403  254563517060     ENTRY  BCI     4,ENTRY        NOT FOUND.                                        .002
      00404  606060606060     
      00405  604546636026     
      00406  466445243360     
      00407  0101 00 0 00430  CHNCOM TIA     =HCHNCOM                                                         .002
      00410  0101 00 0 00434  RESETF TIA     =HRESETF                                                         .002
      00411  314343252721     BADPAR BCI     5,ILLEGAL PARAMETER SEQUENCE.                                    .002
      00412  436047215121     
      00413  442563255160     
      00414  622550642545     
      00415  232533606060     
      00416  454660263143     NOFILS BCI     6,NO FILES SPECIFIED FOR EXTRACTION.                             .002
      00417  256260624725     
      00420  233126312524     
      00421  602646516025     
      00422  676351212363     
      00423  314645336060     
                  
                                     END  
                  
        LITERALS  
      00424  000000000000     
      00425  000000000660     
      00426  000037077777     
      00427  233026314325     
      00430  233045234644     
      00431  272563234362     
      00432  272563442544     
      00433  400000000000     
      00434  512562256326     
      00435  516060606060     
      00436  606060226262     
      00437  606060606013     
      00440  622563225142     
      00441  622563442544     
      00442  665126436760     
      00443  666060606060     
      00444  742631432534     
      00445  744421314534     
1            EXTBSS COMMAND FOR FOREGROUND.                                                      PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77421 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
        446 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        312    CHN    73,  315,  320,  323
        217    ELP   231
        272    EOF   127,  204
        310    FOK   305
        207    FPC   146
        336    IN2    30,  121,  277
         66    NEX    62
        143    NOT   140
         17    SQI    31
         56    SQZ    27,   50
        330    TEM    40,   43,   45,   60,   64
        373    TOO    72
        141    WRB   266
      77426   CARD    15,   17,   34,   54,  217,  370
        231   ECHK   216
        213   GCNT   211
        324   ICSW   132,  137,  143,  233,  263,  265
        337   LIST    41,   44,   51,   65,   75,  201,  203,  223,  235,  241,  244,  302
        327   MODE   160,  164,  167
        321   NONE    74
        116   OPNR   103,  105
        253   OPNW   107,  111,  113
        333   OUT2   151,  155,  163,  166,  175,  236,  250,  256
        316   PERR    22
        136   P.C.   131
         74   SOUT    37,   57
        212   SQCD   144
        222   SRCH    76,  227
        314  BREAK    13
          2  DSKER   125,  152,  262,  300
        403  ENTRY   303,  307
         21  FENCE    20,   35,   55,  243,  304
        325  FOUND   133,  136,  145,  200,  245,  273
          0  LJUST    42,   63
        126  NEXCD   135,  142,  234,  271
         10  NFILS    12,   70,  340
        173  NODEL   157
        301  NSRCH    77,  206,  311
         34  PARLP    52,   70
          3  RDBSS   126
         11  RSBSS   270
          7  RSETB   207
         12  START      
         10  SVBSS   232,  267
          4  WRBSS   134,  141
        372  WRFLX    71,  170,  306,  316,  321
         36  (SQZ)    24,   46
        411 BADPAR   317
          5 BFCLOS   147,  275
          1 BFOPEN   116,  253
1            EXTBSS COMMAND FOR FOREGROUND.                                                      PAGE 2     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        402 CHFILE   161
        407 CHNCOM   312
        147 CLSOUT   274
          6 DELETE   153,  173,  246
        326 ENDFIL   205,  272
        371 GETCLS    14
        400 GETMEM   102
        235 GOT.IT   225
      77425 INFILE    23,   26,  120,  276,  370
        331 NEWFIL   154,  165,  171,  242
        416 NOFILS   322
         32 NO.SQI    25
         53 NO.SQO    47
      77423 OUTFIL   101,  150,  162,  174,  240,  247,  255,  370
        410 RESETF   314
        370 SETBRK    12
        401 SETMEM   115
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            WRBSS - WRITE A BSS FILE.                                                           PAGE 1     
                  
                                             NOEL I. MORRIS - 6/22/65   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00002         ENTRY   WRBSS    
                  
                  
        TRANSFER VECTOR 
      00000  222666513163     BFWRIT
      00001  246242255160     DSKER 
                  
      00002  0634 00 4 00030  WRBSS  SXA     XR4,4         SAVE XRS     
      00003  0604 00 0 00033         STI     SVSI          AND SI 
                  
      00004  0441 00 0 77426         LDI     BUFF          FIRST WORD IN SI   
      00005 -0046 00 0 00000         PIA                   LOOK AT FIRST WORD 
      00006 -0320 00 0 00035         ANA     =O77000000    MASK OFF WORD COUNT
      00007 -0734 00 4 00000         PDX     ,4            WORD COUNT IN XR4  
      00010 -3 00000 4 00030         TXL     XR4,4,0       DON'T WRITE ANYTHING IF WORD COUNT ZERO    
                  
      00011 -0520 00 0 77422         NZT     FNAM-1        CHECK FOR SQZBSS FILE    
      00012  0020 00 0 00017         TRA     FIX           ..     
                  
      00013 -0500 00 0 00037         CAL     =HSQZBSS      SECONDARY NAME IS 'SQZBSS'     
      00014 -0056 00  200000         LNT     200000        CHECK FOR INSTRUCTION CARD     
      00015  1 00002 4 00021         TXI     SLW,4,2       MUST BE PROGRAM CARD     
      00016  1 00004 4 00021         TXI     SLW,4,4       INSTRUCTION CARD   
                  
      00017 -0500 00 0 00036  FIX    CAL     =H   BSS      SECONDARY NAME IS 'BSS'  
      00020  0774 00 4 00034         AXT     28,4          RECORD LENGTH IS 28
                  
      00021  0602 00 0 00034  SLW    SLW     SNAM          STORE SECONDARY NAME     
      00022 -0634 00 4 00026         SXD     WRITE+3,4     STORE WORD COUNT   
                  
      00023                   WRITE  CALL    $BFWRIT(FNAM,SNAM,(BUFF,,**),$DSKER)   
      00023  0074 00 4 00000         TSX     $BFWRIT,4                                                        .002
      00024  3 00000 0 77423         PAR     FNAM                                                             .004
      00025  3 00000 0 00034         PAR     SNAM                                                             .004
      00026  3 00000 0 77426         PAR     BUFF,,**                                                         .004
      00027  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00030  0774 00 4 00000  XR4    AXT     **,4          RESTORE XRS  
      00031  0441 00 0 00033         LDI     SVSI          AND SI 
      00032  0020 00 4 00001         TRA     1,4           RETURN 
                  
      00033  0 00000 0 00000  SVSI   PZE  
      00034  0 00000 0 00000  SNAM   PZE  
                  
                       77426         COMMON  27 
                       77426  BUFF   COMMON  3  
                       77423  FNAM   COMMON  2  
1            WRBSS - WRITE A BSS FILE.                                                           PAGE 2     
                  
      00035                          RMT     *             REMOTE SEQUENCES   
                  
                                     END  
                  
        LITERALS  
      00035  000077000000     
      00036  606060226262     
      00037  625071226262     
1            WRBSS - WRITE A BSS FILE.                                                           PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77421 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
         40 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         17    FIX    12
         21    SLW    15,   16
         30    XR4     2,   10
      77426   BUFF     4,   26,   35
      77423   FNAM    11,   24,   35
         34   SNAM    21,   25
         33   SVSI     3,   31
          1  DSKER    27
          2  WRBSS     0
         23  WRITE    22
          0 BFWRIT    23
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            SVBSS - SAVE AND RESTORE BSS CARD IMAGES.                                           PAGE 1     
                  
                                             9/12/65 - NOEL I. MORRIS   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00001         ENTRY   SVBSS    
                       00034         ENTRY   RSBSS    
                       00056         ENTRY   RSETB    
                  
                  
        TRANSFER VECTOR 
      00000  665122626260     WRBSS 
                  
                       00034  CLTH   EQU     28 
                       00002  N      EQU     2  
1            SVBSS - SAVE AND RESTORE BSS CARD IMAGES.                                           PAGE 2     
                           SAVE BSS CARD IMAGES IN EXTENDED MEMORY.                 
                  
      00001  0634 00 4 00032  SVBSS  SXA     SV4,4         SAVE XR4     
                  
      00002  0020 00 0 00003  SUBSQ  TRA     *+1           EXECUTE NEXT SECTION ONLY ONCE 
                  
      00003                          CALL    GETMEM        GET CURRENT MEMBND 
      00003  0074 00 4 00064         TSX     GETMEM,4                                                         .002
                  
      00004 -0765 00 0 00001         LGR     1             ROUND TO NEXT HIGHEST    
      00005  0760 00 0 00010         RND                   EVEN NUMBER  
      00006  0767 00 0 00001         ALS     1             FOR DLD INSTRUCTION
                  
      00007  0621 00 0 00016         STA     BUFF          SAVE CARD BUFFER ADDRESS 
      00010  0621 00 0 00040         STA     RESET         ..     
                  
      00011  0361 00 0 00063         ACL     LTH           INCREASE TO INITIAL SIZE 
      00012  0734 00 4 00000         PAX     ,4            ..     
      00013 -0634 00 4 00022         SXD     MEMBND,4      SAVE FOR CHECKING  
                  
      00014                          EXTEND                AND RESET THE MEMORY BOUND     
      00014  0074 00 4 00065         TSX     SETMEM,4                                                         .003
                  
      00015 -0625 00 0 00002         STL     SUBSQ         SET SWITCH TO SKIP INITIALIZATION    
                  
      00016  0774 00 4 00000  BUFF   AXT     **,4          LAST CARD BUFFER ADDRESS 
      00017  1 00034 4 00020         TXI     *+1,4,CLTH    INCREASE     
      00020  0634 00 4 00016         SXA     BUFF,4        SAVE NEW BUFFER ADDRESS  
      00021  0634 00 4 00030         SXA     MOVIN,4       ..     
      00022 -3 00000 4 00026  MEMBND TXL     NOXTND,4,**   CHECK FOR MEMBND EXCEEDED
                  
      00023 -0634 00 4 00022         SXD     MEMBND,4      NEED HIGHER MEMBND, SO   
      00024  0754 00 4 00000         PXA     ,4            WE SET IT HIGHER   
      00025                          EXTEND                ..     
      00025  0074 00 4 00065         TSX     SETMEM,4                                                         .003
                  
      00026  0774 00 4 00034  NOXTND AXT     CLTH,4        FAST MOVE LOOP     
      00027  0443 00 4 77462         DLD     CARD+CLTH,4   ONLY 84 CYCLES FOR 1 CARD IMAGE
      00030 -0603 00 4 00000  MOVIN  DST     **,4          ..     
      00031  2 00002 4 00027         TIX     *-2,4,2       ..     
                  
      00032  0774 00 4 00000  SV4    AXT     **,4          RESTORE XR4  
      00033  0020 00 4 00001         TRA     1,4           AND RETURN   
1            SVBSS - SAVE AND RESTORE BSS CARD IMAGES.                                           PAGE 3     
                           RESTORE AND WRITE OUT SAVED BSS CARDS.                   
                  
      00034  0634 00 4 00053  RSBSS  SXA     RX4,4         SAVE XRS     
      00035  0634 00 1 00054         SXA     RX1,1         ..     
                  
      00036  0534 00 4 00016         LXA     BUFF,4        LAST BUFFER USED   
      00037 -0634 00 4 00043         SXD     TXH,4         SAVE FOR CHECKING  
                  
      00040  0774 00 1 00000  RESET  AXT     **,1          NOW RESET THE BUFFER STORE POINTER   
      00041  0634 00 1 00016         SXA     BUFF,1        ..     
                  
      00042  1 00034 1 00043  LOOP   TXI     *+1,1,CLTH    STEP TO NEXT CARD  
      00043  3 00000 1 00053  TXH    TXH     ENDRS,1,**    CHECK FOR ALL CARDS DONE 
      00044  0634 00 1 00046         SXA     MOVOUT,1      STORE BUFFER ADDRESS     
                  
      00045  0774 00 4 00034         AXT     CLTH,4        FAST MOVE AGAIN    
      00046  0443 00 4 00000  MOVOUT DLD     **,4          ..     
      00047 -0603 00 4 77462         DST     CARD+CLTH,4   ..     
      00050  2 00002 4 00046         TIX     MOVOUT,4,2    ..     
                  
      00051                          CALL    $WRBSS        WRITE OUT CARD     
      00051  0074 00 4 00000         TSX     $WRBSS,4                                                         .002
      00052  0020 00 0 00042         TRA     LOOP          AND GO TO NEXT CARD
                  
                       00053  ENDRS  SYN     *  
                  
      00053  0774 00 4 00000  RX4    AXT     **,4          RESTORE XRS  
      00054  0774 00 1 00000  RX1    AXT     **,1          ..     
      00055  0020 00 4 00001         TRA     1,4           AND RETURN   
1            SVBSS - SAVE AND RESTORE BSS CARD IMAGES.                                           PAGE 4     
                           RSETB - RESET THE BUFFERS FOR NEXT PROGRAM.              
                  
      00056  0634 00 4 00061  RSETB  SXA     RSX4,4        SAVE XR4     
                  
      00057  0534 00 4 00040         LXA     RESET,4       GET RESET ADDRESS FOR BUFFER   
      00060  0634 00 4 00016         SXA     BUFF,4        ..     
                  
      00061  0774 00 4 00000  RSX4   AXT     **,4          RESTORE XR4  
      00062  0020 00 4 00001         TRA     1,4           AND RETURN   
1            SVBSS - SAVE AND RESTORE BSS CARD IMAGES.                                           PAGE 5     
                           STORAGE AND CONSTANTS.                                   
                  
      00063  0 00000 0 00070  LTH    PZE     N*CLTH   
                  
                       77426         COMMON  27 
                       77426  CARD   COMMON  1  
                  
      00064                          RMT     *             REMOTE SEQUENCES.  
      00064  0101 00 0 00066  GETMEM TIA     =HGETMEM                                                         .002
      00065  0101 00 0 00067  SETMEM TIA     =HSETMEM                                                         .002
                  
                                     END  
                  
        LITERALS  
      00066  272563442544     
      00067  622563442544     
1            SVBSS - SAVE AND RESTORE BSS CARD IMAGES.                                           PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77425 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
         70 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          2      N     1,   63
         63    LTH    11
         54    RX1    35
         53    RX4    34
         32    SV4     1
         43    TXH    37
         16   BUFF     7,   20,   36,   41,   60
      77426   CARD    27,   47,   64
         34   CLTH     1,   17,   26,   27,   42,   45,   47,   63
         42   LOOP    52
         61   RSX4    56
         53  ENDRS    43,   53
         30  MOVIN    21
         40  RESET    10,   57
         34  RSBSS     0
         56  RSETB     0
          2  SUBSQ    15
          1  SVBSS     0
          0  WRBSS    51
         64 GETMEM     3
         22 MEMBND    13,   23
         46 MOVOUT    44,   50
         26 NOXTND    22
         65 SETMEM    14,   25
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            RDBSS - BSS FILE READING ROUTINE.                                                   PAGE 1     
                  
                                             NOEL I. MORRIS - 6/21/65   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00003         ENTRY   RDBSS    
                  
                  
        TRANSFER VECTOR 
      00000  222651252124     BFREAD
      00001  246242255160     DSKER 
      00002  462321222360     OCABC 
                  
      00003  0634 00 4 00073  RDBSS  SXA     XR4,4         SAVE XRS     
                  
      00004  0520 00 0 77424  WZERO  ZET     FILN-1        CHECK FOR SQZBSS FILE    
      00005  0020 00 0 00017         TRA     SQZ           ..     
                  
      00006                          CALL    $BFREAD(FILN,BSS(BUFF,,28)EOF,EOFCT,$DSKER)  
      00006  0074 00 4 00000         TSX     $BFREAD,4                                                        .002
      00007  3 00000 0 77425         PAR     FILN                                                             .004
      00010  3 00000 0 00114         PAR     BSS                                                              .004
      00011  3 00034 0 77426         PAR     BUFF,,28                                                         .004
      00012  3 00000 0 00111         PAR     EOF                                                              .004
      00013  3 00000 0 00113         PAR     EOFCT                                                            .004
      00014  3 00000 0 00001         PAR     $DSKER                                                           .004
      00015  0441 00 0 77426         LDI     BUFF          GET FIRST WORD IN SI     
      00016  0020 00 0 00050         TRA     CHECK         GO CHECK CHECKSUM  
                  
      00017  0774 00 4 00034  SQZ    AXT     28,4          ZERO OUT THE READ BUFFER 
      00020  0600 00 4 77462         STZ     BUFF+28,4     ..     
      00021  2 00001 4 00020         TIX     *-1,4,1       ..     
                  
      00022                          CALL    $BFREAD(FILN,=HSQZBSS(BUFF,,1)EOF,EOFCT,$DSKER)    
      00022  0074 00 4 00000         TSX     $BFREAD,4                                                        .002
      00023  3 00000 0 77425         PAR     FILN                                                             .004
      00024  3 00000 0 00134         PAR     =HSQZBSS                                                         .004
      00025  3 00001 0 77426         PAR     BUFF,,1                                                          .004
      00026  3 00000 0 00111         PAR     EOF                                                              .004
      00027  3 00000 0 00113         PAR     EOFCT                                                            .004
      00030  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00031  0441 00 0 77426         LDI     BUFF          GET FIRST WORD IN SI     
      00032 -0046 00 0 00000         PIA                   IN AC  
      00033 -0320 00 0 00130         ANA     =O77000000    MASK WORDCOUNT     
      00034 -0734 00 4 00000         PDX     ,4            WORDCOUNT IN XR4   
      00035 -0056 00  200000         LNT     200000        CHECK FOR REL. BIN CARD  
      00036  1 00001 4 00040         TXI     *+2,4,1       MUST BE A PROGRAM CARD   
      00037  1 00003 4 00040         TXI     *+1,4,3       RELOCATABLE INSTRUCTION CARD   
      00040 -0634 00 4 00044         SXD     VRR+3,4       STORE FOR READING REST OF CARD 
                  
      00041                   VRR    CALL    $BFREAD(FILN,=HSQZBSS(BUFF+1,,**)EOF,EOFCT,$DSKER) 
      00041  0074 00 4 00000         TSX     $BFREAD,4                                                        .002
      00042  3 00000 0 77425         PAR     FILN                                                             .004
      00043  3 00000 0 00134         PAR     =HSQZBSS                                                         .004
1            RDBSS - BSS FILE READING ROUTINE.                                                   PAGE 2     
                  
      00044  3 00000 0 77427         PAR     BUFF+1,,**                                                       .004
      00045  3 00000 0 00111         PAR     EOF                                                              .004
      00046  3 00000 0 00113         PAR     EOFCT                                                            .004
      00047  3 00000 0 00001         PAR     $DSKER                                                           .004
                  
      00050 -0046 00 0 00000  CHECK  PIA                   FIRST WORD IN AC   
      00051 -0320 00 0 00130         ANA     =O77000000    MASK THE WORD COUNT
      00052 -0734 00 4 00000         PDX     ,4            WORD COUNT IN XR4  
      00053 -3 00000 4 00004         TXL     WZERO,4,0     TRY AGAIN IF WORD COUNT ZERO   
                  
      00054 -0056 00  400000         LNT     400000        CHECK FOR PROGRAM CARD   
      00055  0020 00 0 00062         TRA     *+5           ..     
      00056 -0500 00 0 77432         CAL     BUFF+4        GET ENTRY NAME     
      00057 -0100 00 0 00061         TNZ     *+2           CHECK FOR MAIN PROGRAM   
      00060 -0500 00 0 00136         CAL     =H(MAIN)      SET ENTRY TO '(MAIN)'    
      00061  0602 00 0 00121         SLW     PGN           ..     
                  
      00062 -0056 00  100000         LNT     100000        CHECK FOR IGNORE CHECKSUM PUNCH
      00063 -0520 00 0 77427         NZT     BUFF+1        ALSO BLANK CHECKSUM
      00064  0020 00 0 00073         TRA     IGCHK    
                  
      00065  0774 00 4 00026         AXT     22,4          ADD UP CHECKSUM    
      00066 -0500 00 0 77426         CAL     BUFF          ..     
      00067  0361 00 4 77456         ACL     BUFF+24,4     ..     
      00070  2 00001 4 00067         TIX     *-1,4,1       ..     
      00071  0322 00 0 77427         ERA     BUFF+1        XOR IN THE CHECKSUM TO COMPARE 
      00072 -0100 00 0 00075         TNZ     CHKERR        NON-ZERO ON ERROR  
                  
                       00073  IGCHK  SYN     *  
                  
      00073  0774 00 4 00000  XR4    AXT     **,4          RESTORE XRS  
      00074  0020 00 4 00002         TRA     2,4           RETURN 
                  
      00075 -0054 00  400000  CHKERR LFT     400000        CHECK FOR PROG. CARD     
      00076  0020 00 0 00106         TRA     P.C.          ..     
                  
      00077                          CALL    $OCABC(BUFF)  CONVERT LOAD ADDRESS TO OCTAL BCD    
      00077  0074 00 4 00002         TSX     $OCABC,4                                                         .002
      00100  3 00000 0 77426         PAR     BUFF                                                             .004
      00101  0560 00 0 00133         LDQ     =H            BLANK OUT SECOND WORD    
                  
      00102 -0603 00 0 00125  DST    DST     MSG+8         STORE INTO MESSAGE 
      00103                          CALL    WRFLX((MSG,,10))  PRINT ERROR MESSAGE  
      00103  0074 00 4 00127         TSX     WRFLX,4                                                          .002
      00104  3 00012 0 00115         PAR     MSG,,10                                                          .004
      00105  0020 00 0 00073         TRA     IGCHK         KEEP GOING   
                  
      00106  0500 00 0 00132  P.C.   CLA     =HPROGRA      SET LOAD ADDRESS TO
      00107  0560 00 0 00131         LDQ     =HM CARD      'PROGRAM CARD'     
      00110  0020 00 0 00102         TRA     DST           ..     
                  
                       00111  EOF    SYN     *  
      00111  0522 00 0 00073         XEC     XR4           AND XRS
      00112  0020 60 4 00001         TRA*    1,4           EOF RETURN   
1            RDBSS - BSS FILE READING ROUTINE.                                                   PAGE 3     
                  
      00113  0 00000 0 00000  EOFCT  PZE  
      00114  606060226262     BSS    BCI     1,   BSS 
      00115  233025234262     MSG    BCI     4,CHECKSUM ERROR IN PROG.  
      00116  644460255151     
      00117  465160314560     
      00120  475146273360     
      00121  0 00000 0 00000  PGN    PZE  
      00122  736043462124            BCI     2,, LOAD ADDRE 
      00123  602124245125     
      00124  626260135757            VFD     H12/SS,O6/60,H6/=,O12/5757 
      00125                          BSS     2  
                  
                       77426         COMMON  27 
                       77426  BUFF   COMMON  1  
                       77425  FILN   COMMON  2  
                  
      00127                          RMT     *             REMOTE SEQUENCES   
      00127  0101 00 0 00135  WRFLX  TIA     =HWRFLX                                                          .002
                                     END  
                  
        LITERALS  
      00130  000077000000     
      00131  446023215124     
      00132  475146275121     
      00133  606060606060     
      00134  625071226262     
      00135  665126436760     
      00136  744421314534     
1            RDBSS - BSS FILE READING ROUTINE.                                                   PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
       77423 IS THE LAST LOCATION NOT USED BY THIS PROGRAM  
        137 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
        114    BSS    10
        102    DST   110
        111    EOF    12,   26,   45,  111
        115    MSG   102,  104
        121    PGN    61
         17    SQZ     5
         41    VRR    40
         73    XR4     3,  111
      77426   BUFF    11,   15,   20,   25,   31,   44,   56,   63,   66,   67,   71,  100,  127
      77425   FILN     4,    7,   23,   42,  127
        106   P.C.    76
         50  CHECK    16
          1  DSKER    14,   30,   47
        113  EOFCT    13,   27,   46
         73  IGCHK    64,   73,  105
          2  OCABC    77
          3  RDBSS     0
        127  WRFLX   103
          4  WZERO    53
          0 BFREAD     6,   22,   41
         75 CHKERR    72
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            DELETE ALL VERSIONS OF AN OLD FILE.                                                 PAGE 1     
                  
                                             NOEL I. MORRIS - 6/22/65   
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00001         ENTRY   DELETE   
                  
                  
      00000  462351222360     OCRBC 
                  
      00001  0634 00 4 00035  DELETE SXA     XR4,4         SAVE XRS     
      00002  0604 00 0 00125         STI     SVSI          SAVE SI
      00003  0600 00 0 00122         STZ     MODE          SET MODE TO 'P'    
                  
      00004 -0500 60 4 00001         CAL*    1,4           GET FILE NAME
      00005  0602 00 0 00107         SLW     FNAM          ..     
      00006 -0500 60 4 00002         CAL*    2,4           ..     
      00007  0602 00 0 00111         SLW     FNAM+2        ..     
                  
      00010 -0500 60 4 00003         CAL*    3,4           GET DELETION PRINT SWITCH
      00011  0602 00 0 00124         SLW     PSW           ..     
                  
      00012                          CALL    FSTATE(FNAM,FNAM+2(BUFF,,2)FSERR,ERCODE)     
      00012  0074 00 4 00126         TSX     FSTATE,4                                                         .002
      00013  3 00000 0 00107         PAR     FNAM                                                             .004
      00014  3 00000 0 00111         PAR     FNAM+2                                                           .004
      00015  3 00002 0 00121         PAR     BUFF,,2                                                          .004
      00016  3 00000 0 00070         PAR     FSERR                                                            .004
      00017  3 00000 0 00123         PAR     ERCODE                                                           .004
                  
      00020  0441 00 0 00122         LDI     MODE          GET MODE BITS
      00021 -0054 00  400000         LFT     400000        CHECK FOR LINKED FILE    
      00022  0020 00 0 00073         TRA     LINKD         IS LINKED, WILL NOT DELETE     
                  
      00023  0054 00  000134         RFT     134           CHECK FOR READ-ONLY/PROTECTED, ETC.  
      00024  0020 00 0 00040         TRA     ASK           PROTECTED, ASK FOR DELETE
                  
      00025                   DEL    CALL    DELFIL(FNAM,FNAM+2,NODEL)  
      00025  0074 00 4 00127         TSX     DELFIL,4                                                         .002
      00026  3 00000 0 00107         PAR     FNAM                                                             .004
      00027  3 00000 0 00111         PAR     FNAM+2                                                           .004
      00030  3 00000 0 00075         PAR     NODEL                                                            .004
                  
      00031  0520 00 0 00124         ZET     PSW           CHECK FOR DELETION PRINT 
      00032                          CALL    WRFLX((DTOF,,6)) PRINT DELETION COMMENT
      00032  0074 00 4 00130         TSX     WRFLX,4                                                          .002
      00033  3 00006 0 00104         PAR     DTOF,,6                                                          .004
                  
      00034 -0500 00 0 00122  GONE   CAL     MODE          GET THE MODE 
      00035  0774 00 4 00000  XR4    AXT     **,4          RESTORE XRS  
      00036  0441 00 0 00125         LDI     SVSI          AND THE SI   
      00037  0020 00 4 00005         TRA     5,4           RETURN 
1            DELETE ALL VERSIONS OF AN OLD FILE.                                                 PAGE 2     
                  
      00040                   ASK    CALL    $OCRBC(MODE)  CONVERT TO BCD     
      00040  0074 00 4 00000         TSX     $OCRBC,4                                                         .002
      00041  3 00000 0 00122         PAR     MODE                                                             .004
      00042 -0501 00 0 00151         ORA     =O605757000000 MASK PROPERLY     
      00043  0602 00 0 00112         SLW     BCMODE        AND STORE IN COMMENT     
                  
      00044                          CALL    WRFLXA((FNAM-1,,11)) 
      00044  0074 00 4 00131         TSX     WRFLXA,4                                                         .002
      00045  3 00013 0 00106         PAR     FNAM-1,,11                                                       .004
                  
      00046                          CALL    RDFLXA((BUFF,,1))    
      00046  0074 00 4 00132         TSX     RDFLXA,4                                                         .002
      00047  3 00001 0 00121         PAR     BUFF,,1                                                          .004
                  
      00050 -0500 00 0 00121         CAL     BUFF          LOOK AT ANSWER     
      00051  0771 00 0 00022         ARS     18            ..     
      00052  0322 00 0 00143         ERA     =H000YES      CHECK FOR SPECIFIC 'YES' 
      00053 -0100 00 0 00075         TNZ     NODEL         NON-ZERO IF 'NO' OR GARBAGE    
                  
      00054                          CALL    CHFILE(FNAM,FNAM+2,=1,=-0,=-0,NODEL)   
      00054  0074 00 4 00133         TSX     CHFILE,4                                                         .002
      00055  3 00000 0 00107         PAR     FNAM                                                             .004
      00056  3 00000 0 00111         PAR     FNAM+2                                                           .004
      00057  3 00000 0 00141         PAR     =1                                                               .004
      00060  3 00000 0 00147         PAR     =-0                                                              .004
      00061  3 00000 0 00147         PAR     =-0                                                              .004
      00062  3 00000 0 00075         PAR     NODEL                                                            .004
                  
      00063                          CALL    DELFIL(FNAM,FNAM+2,NODEL) DELETE IT NOW
      00063  0074 00 4 00127         TSX     DELFIL,4                                                         .002
      00064  3 00000 0 00107         PAR     FNAM                                                             .004
      00065  3 00000 0 00111         PAR     FNAM+2                                                           .004
      00066  3 00000 0 00075         PAR     NODEL                                                            .004
      00067  0020 00 0 00034         TRA     GONE          ..     
                  
      00070 -0500 00 0 00123  FSERR  CAL     ERCODE        GET FSTATE ERROR CODE    
      00071  0402 00 0 00142         SUB     =3            ANYTHING ELSE THAN 3     
      00072  0100 00 0 00034         TZE     GONE          IS A LINK ERROR    
                  
      00073                   LINKD  COMENT  LNKMSG,3,(FILE IS A LINK.),A     
      00073  0074 00 4 00131         TSX     WRFLXA,4                                                         .003
      00074  3 00003 0 00134         PAR     LNKMSG,,3                                                        .005
                                                           DO NOT DELETE A LINK     
                  
      00075                   NODEL  CALL    WRFLXA((FNAM,,3))    
      00075  0074 00 4 00131         TSX     WRFLXA,4                                                         .002
      00076  3 00003 0 00107         PAR     FNAM,,3                                                          .004
      00077                          COMENT  NOT,2,( NOT DELETED) 
      00077  0074 00 4 00130         TSX     WRFLX,4                                                          .003
      00100  3 00002 0 00137         PAR     NOT,,2                                                           .005
                  
      00101  0522 00 0 00035         XEC     XR4           RESTORE XRS  
      00102  0441 00 0 00125         LDI     SVSI          AND SI 
      00103  0020 60 4 00004         TRA*    4,4           ERROR RETURN 
1            DELETE ALL VERSIONS OF AN OLD FILE.                                                 PAGE 3     
                  
      00104  242543256325     DTOF   BCI     3,DELETED THE OLDER  
      00107  000000000000     FNAM   VFD     36/0,O36/576057575757,36/0 
      00112  606060606060     BCMODE BCI     6,       MODE. DO YOU WANT TO DELETE I 
      00120  637360605757            VFD     H6/T,O30/7360605757  
      00121  0 00000 0 00000  BUFF   PZE  
      00122  0 00000 0 00000  MODE   PZE  
      00123  0 00000 0 00000  ERCODE PZE  
      00124  0 00000 0 00000  PSW    PZE  
      00125  0 00000 0 00000  SVSI   PZE  
                  
      00126                          RMT     *             REMOTE SEQUENCES   
      00126  0101 00 0 00146  FSTATE TIA     =HFSTATE                                                         .002
      00127  0101 00 0 00145  DELFIL TIA     =HDELFIL                                                         .002
      00130  0101 00 0 00153  WRFLX  TIA     =HWRFLX                                                          .002
      00131  0101 00 0 00152  WRFLXA TIA     =HWRFLXA                                                         .002
      00132  0101 00 0 00150  RDFLXA TIA     =HRDFLXA                                                         .002
      00133  0101 00 0 00144  CHFILE TIA     =HCHFILE                                                         .002
      00134  263143256031     LNKMSG BCI     3,FILE IS A LINK.                                                .002
      00137  604546636024     NOT    BCI     2, NOT DELETED                                                   .002
                  
                                     END  
                  
        LITERALS  
      00141  000000000001     
      00142  000000000003     
      00143  000000702562     
      00144  233026314325     
      00145  242543263143     
      00146  266263216325     
      00147  400000000000     
      00150  512426436721     
      00151  605757000000     
      00152  665126436721     
      00153  665126436760     
1            DELETE ALL VERSIONS OF AN OLD FILE.                                                 PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
        154 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
         40    ASK    24
         25    DEL      
        137    NOT   100
        124    PSW    11,   31
         35    XR4     1,  101
        121   BUFF    15,   47,   50
        104   DTOF    33
        107   FNAM     5,    7,   13,   14,   26,   27,   45,   55,   56,   64,   65,   76
         34   GONE    67,   72
        122   MODE     3,   20,   34,   41
        125   SVSI     2,   36,  102
         70  FSERR    16
         73  LINKD    22
         75  NODEL    30,   53,   62,   66
          0  OCRBC    40
        130  WRFLX    32,   77
        112 BCMODE    43
        133 CHFILE    54
          1 DELETE     0
        127 DELFIL    25,   63
        123 ERCODE    17,   70
        126 FSTATE    12
        134 LNKMSG    74
        132 RDFLXA    46
        131 WRFLXA    44,   73,   75
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
1            DISK ERROR SUBROUTINE - CALLS PRNTER VIA NEXCOM.                                    PAGE 1     
                  
                                             REVISED 9/14/65 - NOEL I. MORRIS 
                  
                                     UNLIST     
 M                            CALL   MACRO   SUBR,LIST                                                            
                  
                  
                       00000         ENTRY   DSKER    
                  
      00000 -0500 00 0 00006  DSKER  CAL     =HPRNTER 
      00001  0560 00 0 00004         LDQ     =O-71    
      00002                          CALL    NEXCOM   
      00002  0074 00 4 00003         TSX     NEXCOM,4                                                         .002
                  
      00003                          RMT     *             REMOTE SEQUENCES   
      00003  0101 00 0 00005  NEXCOM TIA     =HNEXCOM                                                         .002
                  
                                     END  
                  
        LITERALS  
      00004  400000000071     
      00005  452567234644     
      00006  475145632551     
1            DISK ERROR SUBROUTINE - CALLS PRNTER VIA NEXCOM.                                    PAGE 1     
                        POST PROCESSOR ASSEMBLY DATA  
                  
          7 IS THE FIRST LOCATION NOT USED BY THIS PROGRAM  
                  
0REFERENCES TO DEFINED SYMBOLS      
          0  DSKER     0
          3 NEXCOM     2
                  
0 NO ERROR IN ABOVE ASSEMBLY. 
